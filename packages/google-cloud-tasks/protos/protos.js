// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("google-gax/build/src/protobuf").protobufMinimal);

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots._google_cloud_tasks_protos || ($protobuf.roots._google_cloud_tasks_protos = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.cloud = (function() {
    
            /**
             * Namespace cloud.
             * @memberof google
             * @namespace
             */
            var cloud = {};
    
            cloud.tasks = (function() {
    
                /**
                 * Namespace tasks.
                 * @memberof google.cloud
                 * @namespace
                 */
                var tasks = {};
    
                tasks.v2 = (function() {
    
                    /**
                     * Namespace v2.
                     * @memberof google.cloud.tasks
                     * @namespace
                     */
                    var v2 = {};
    
                    v2.CloudTasks = (function() {
    
                        /**
                         * Constructs a new CloudTasks service.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a CloudTasks
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function CloudTasks(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (CloudTasks.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = CloudTasks;
    
                        /**
                         * Creates new CloudTasks service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {CloudTasks} RPC service. Useful where requests and/or responses are streamed.
                         */
                        CloudTasks.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|listQueues}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef ListQueuesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2.ListQueuesResponse} [response] ListQueuesResponse
                         */
    
                        /**
                         * Calls ListQueues.
                         * @function listQueues
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IListQueuesRequest} request ListQueuesRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.ListQueuesCallback} callback Node-style callback called with the error, if any, and ListQueuesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.listQueues = function listQueues(request, callback) {
                            return this.rpcCall(listQueues, $root.google.cloud.tasks.v2.ListQueuesRequest, $root.google.cloud.tasks.v2.ListQueuesResponse, request, callback);
                        }, "name", { value: "ListQueues" });
    
                        /**
                         * Calls ListQueues.
                         * @function listQueues
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IListQueuesRequest} request ListQueuesRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2.ListQueuesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|getQueue}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef GetQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2.Queue} [response] Queue
                         */
    
                        /**
                         * Calls GetQueue.
                         * @function getQueue
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IGetQueueRequest} request GetQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.GetQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.getQueue = function getQueue(request, callback) {
                            return this.rpcCall(getQueue, $root.google.cloud.tasks.v2.GetQueueRequest, $root.google.cloud.tasks.v2.Queue, request, callback);
                        }, "name", { value: "GetQueue" });
    
                        /**
                         * Calls GetQueue.
                         * @function getQueue
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IGetQueueRequest} request GetQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|createQueue}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef CreateQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2.Queue} [response] Queue
                         */
    
                        /**
                         * Calls CreateQueue.
                         * @function createQueue
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.ICreateQueueRequest} request CreateQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.CreateQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.createQueue = function createQueue(request, callback) {
                            return this.rpcCall(createQueue, $root.google.cloud.tasks.v2.CreateQueueRequest, $root.google.cloud.tasks.v2.Queue, request, callback);
                        }, "name", { value: "CreateQueue" });
    
                        /**
                         * Calls CreateQueue.
                         * @function createQueue
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.ICreateQueueRequest} request CreateQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|updateQueue}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef UpdateQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2.Queue} [response] Queue
                         */
    
                        /**
                         * Calls UpdateQueue.
                         * @function updateQueue
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IUpdateQueueRequest} request UpdateQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.UpdateQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.updateQueue = function updateQueue(request, callback) {
                            return this.rpcCall(updateQueue, $root.google.cloud.tasks.v2.UpdateQueueRequest, $root.google.cloud.tasks.v2.Queue, request, callback);
                        }, "name", { value: "UpdateQueue" });
    
                        /**
                         * Calls UpdateQueue.
                         * @function updateQueue
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IUpdateQueueRequest} request UpdateQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|deleteQueue}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef DeleteQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteQueue.
                         * @function deleteQueue
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IDeleteQueueRequest} request DeleteQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.DeleteQueueCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.deleteQueue = function deleteQueue(request, callback) {
                            return this.rpcCall(deleteQueue, $root.google.cloud.tasks.v2.DeleteQueueRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteQueue" });
    
                        /**
                         * Calls DeleteQueue.
                         * @function deleteQueue
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IDeleteQueueRequest} request DeleteQueueRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|purgeQueue}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef PurgeQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2.Queue} [response] Queue
                         */
    
                        /**
                         * Calls PurgeQueue.
                         * @function purgeQueue
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IPurgeQueueRequest} request PurgeQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.PurgeQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.purgeQueue = function purgeQueue(request, callback) {
                            return this.rpcCall(purgeQueue, $root.google.cloud.tasks.v2.PurgeQueueRequest, $root.google.cloud.tasks.v2.Queue, request, callback);
                        }, "name", { value: "PurgeQueue" });
    
                        /**
                         * Calls PurgeQueue.
                         * @function purgeQueue
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IPurgeQueueRequest} request PurgeQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|pauseQueue}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef PauseQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2.Queue} [response] Queue
                         */
    
                        /**
                         * Calls PauseQueue.
                         * @function pauseQueue
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IPauseQueueRequest} request PauseQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.PauseQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.pauseQueue = function pauseQueue(request, callback) {
                            return this.rpcCall(pauseQueue, $root.google.cloud.tasks.v2.PauseQueueRequest, $root.google.cloud.tasks.v2.Queue, request, callback);
                        }, "name", { value: "PauseQueue" });
    
                        /**
                         * Calls PauseQueue.
                         * @function pauseQueue
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IPauseQueueRequest} request PauseQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|resumeQueue}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef ResumeQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2.Queue} [response] Queue
                         */
    
                        /**
                         * Calls ResumeQueue.
                         * @function resumeQueue
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IResumeQueueRequest} request ResumeQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.ResumeQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.resumeQueue = function resumeQueue(request, callback) {
                            return this.rpcCall(resumeQueue, $root.google.cloud.tasks.v2.ResumeQueueRequest, $root.google.cloud.tasks.v2.Queue, request, callback);
                        }, "name", { value: "ResumeQueue" });
    
                        /**
                         * Calls ResumeQueue.
                         * @function resumeQueue
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IResumeQueueRequest} request ResumeQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|getIamPolicy}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef GetIamPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.iam.v1.Policy} [response] Policy
                         */
    
                        /**
                         * Calls GetIamPolicy.
                         * @function getIamPolicy
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.iam.v1.IGetIamPolicyRequest} request GetIamPolicyRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.GetIamPolicyCallback} callback Node-style callback called with the error, if any, and Policy
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.getIamPolicy = function getIamPolicy(request, callback) {
                            return this.rpcCall(getIamPolicy, $root.google.iam.v1.GetIamPolicyRequest, $root.google.iam.v1.Policy, request, callback);
                        }, "name", { value: "GetIamPolicy" });
    
                        /**
                         * Calls GetIamPolicy.
                         * @function getIamPolicy
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.iam.v1.IGetIamPolicyRequest} request GetIamPolicyRequest message or plain object
                         * @returns {Promise<google.iam.v1.Policy>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|setIamPolicy}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef SetIamPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.iam.v1.Policy} [response] Policy
                         */
    
                        /**
                         * Calls SetIamPolicy.
                         * @function setIamPolicy
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.iam.v1.ISetIamPolicyRequest} request SetIamPolicyRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.SetIamPolicyCallback} callback Node-style callback called with the error, if any, and Policy
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.setIamPolicy = function setIamPolicy(request, callback) {
                            return this.rpcCall(setIamPolicy, $root.google.iam.v1.SetIamPolicyRequest, $root.google.iam.v1.Policy, request, callback);
                        }, "name", { value: "SetIamPolicy" });
    
                        /**
                         * Calls SetIamPolicy.
                         * @function setIamPolicy
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.iam.v1.ISetIamPolicyRequest} request SetIamPolicyRequest message or plain object
                         * @returns {Promise<google.iam.v1.Policy>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|testIamPermissions}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef TestIamPermissionsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.iam.v1.TestIamPermissionsResponse} [response] TestIamPermissionsResponse
                         */
    
                        /**
                         * Calls TestIamPermissions.
                         * @function testIamPermissions
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.iam.v1.ITestIamPermissionsRequest} request TestIamPermissionsRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.TestIamPermissionsCallback} callback Node-style callback called with the error, if any, and TestIamPermissionsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.testIamPermissions = function testIamPermissions(request, callback) {
                            return this.rpcCall(testIamPermissions, $root.google.iam.v1.TestIamPermissionsRequest, $root.google.iam.v1.TestIamPermissionsResponse, request, callback);
                        }, "name", { value: "TestIamPermissions" });
    
                        /**
                         * Calls TestIamPermissions.
                         * @function testIamPermissions
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.iam.v1.ITestIamPermissionsRequest} request TestIamPermissionsRequest message or plain object
                         * @returns {Promise<google.iam.v1.TestIamPermissionsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|listTasks}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef ListTasksCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2.ListTasksResponse} [response] ListTasksResponse
                         */
    
                        /**
                         * Calls ListTasks.
                         * @function listTasks
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IListTasksRequest} request ListTasksRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.ListTasksCallback} callback Node-style callback called with the error, if any, and ListTasksResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.listTasks = function listTasks(request, callback) {
                            return this.rpcCall(listTasks, $root.google.cloud.tasks.v2.ListTasksRequest, $root.google.cloud.tasks.v2.ListTasksResponse, request, callback);
                        }, "name", { value: "ListTasks" });
    
                        /**
                         * Calls ListTasks.
                         * @function listTasks
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IListTasksRequest} request ListTasksRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2.ListTasksResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|getTask}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef GetTaskCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2.Task} [response] Task
                         */
    
                        /**
                         * Calls GetTask.
                         * @function getTask
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IGetTaskRequest} request GetTaskRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.GetTaskCallback} callback Node-style callback called with the error, if any, and Task
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.getTask = function getTask(request, callback) {
                            return this.rpcCall(getTask, $root.google.cloud.tasks.v2.GetTaskRequest, $root.google.cloud.tasks.v2.Task, request, callback);
                        }, "name", { value: "GetTask" });
    
                        /**
                         * Calls GetTask.
                         * @function getTask
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IGetTaskRequest} request GetTaskRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2.Task>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|createTask}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef CreateTaskCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2.Task} [response] Task
                         */
    
                        /**
                         * Calls CreateTask.
                         * @function createTask
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.ICreateTaskRequest} request CreateTaskRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.CreateTaskCallback} callback Node-style callback called with the error, if any, and Task
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.createTask = function createTask(request, callback) {
                            return this.rpcCall(createTask, $root.google.cloud.tasks.v2.CreateTaskRequest, $root.google.cloud.tasks.v2.Task, request, callback);
                        }, "name", { value: "CreateTask" });
    
                        /**
                         * Calls CreateTask.
                         * @function createTask
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.ICreateTaskRequest} request CreateTaskRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2.Task>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|deleteTask}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef DeleteTaskCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteTask.
                         * @function deleteTask
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IDeleteTaskRequest} request DeleteTaskRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.DeleteTaskCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.deleteTask = function deleteTask(request, callback) {
                            return this.rpcCall(deleteTask, $root.google.cloud.tasks.v2.DeleteTaskRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteTask" });
    
                        /**
                         * Calls DeleteTask.
                         * @function deleteTask
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IDeleteTaskRequest} request DeleteTaskRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|runTask}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef RunTaskCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2.Task} [response] Task
                         */
    
                        /**
                         * Calls RunTask.
                         * @function runTask
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IRunTaskRequest} request RunTaskRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.RunTaskCallback} callback Node-style callback called with the error, if any, and Task
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.runTask = function runTask(request, callback) {
                            return this.rpcCall(runTask, $root.google.cloud.tasks.v2.RunTaskRequest, $root.google.cloud.tasks.v2.Task, request, callback);
                        }, "name", { value: "RunTask" });
    
                        /**
                         * Calls RunTask.
                         * @function runTask
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IRunTaskRequest} request RunTaskRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2.Task>} Promise
                         * @variation 2
                         */
    
                        return CloudTasks;
                    })();
    
                    v2.ListQueuesRequest = (function() {
    
                        /**
                         * Properties of a ListQueuesRequest.
                         * @memberof google.cloud.tasks.v2
                         * @interface IListQueuesRequest
                         * @property {string|null} [parent] ListQueuesRequest parent
                         * @property {string|null} [filter] ListQueuesRequest filter
                         * @property {number|null} [pageSize] ListQueuesRequest pageSize
                         * @property {string|null} [pageToken] ListQueuesRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListQueuesRequest.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a ListQueuesRequest.
                         * @implements IListQueuesRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2.IListQueuesRequest=} [properties] Properties to set
                         */
                        function ListQueuesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListQueuesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.tasks.v2.ListQueuesRequest
                         * @instance
                         */
                        ListQueuesRequest.prototype.parent = "";
    
                        /**
                         * ListQueuesRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.tasks.v2.ListQueuesRequest
                         * @instance
                         */
                        ListQueuesRequest.prototype.filter = "";
    
                        /**
                         * ListQueuesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.tasks.v2.ListQueuesRequest
                         * @instance
                         */
                        ListQueuesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListQueuesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.tasks.v2.ListQueuesRequest
                         * @instance
                         */
                        ListQueuesRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListQueuesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.ListQueuesRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IListQueuesRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.ListQueuesRequest} ListQueuesRequest instance
                         */
                        ListQueuesRequest.create = function create(properties) {
                            return new ListQueuesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListQueuesRequest message. Does not implicitly {@link google.cloud.tasks.v2.ListQueuesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.ListQueuesRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IListQueuesRequest} message ListQueuesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListQueuesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.filter);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListQueuesRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.ListQueuesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.ListQueuesRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IListQueuesRequest} message ListQueuesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListQueuesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListQueuesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.ListQueuesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.ListQueuesRequest} ListQueuesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListQueuesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.ListQueuesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListQueuesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.ListQueuesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.ListQueuesRequest} ListQueuesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListQueuesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListQueuesRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.ListQueuesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListQueuesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListQueuesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.ListQueuesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.ListQueuesRequest} ListQueuesRequest
                         */
                        ListQueuesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.ListQueuesRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.ListQueuesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListQueuesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.ListQueuesRequest
                         * @static
                         * @param {google.cloud.tasks.v2.ListQueuesRequest} message ListQueuesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListQueuesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.filter = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListQueuesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.ListQueuesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListQueuesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListQueuesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.ListQueuesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListQueuesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.ListQueuesRequest";
                        };
    
                        return ListQueuesRequest;
                    })();
    
                    v2.ListQueuesResponse = (function() {
    
                        /**
                         * Properties of a ListQueuesResponse.
                         * @memberof google.cloud.tasks.v2
                         * @interface IListQueuesResponse
                         * @property {Array.<google.cloud.tasks.v2.IQueue>|null} [queues] ListQueuesResponse queues
                         * @property {string|null} [nextPageToken] ListQueuesResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListQueuesResponse.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a ListQueuesResponse.
                         * @implements IListQueuesResponse
                         * @constructor
                         * @param {google.cloud.tasks.v2.IListQueuesResponse=} [properties] Properties to set
                         */
                        function ListQueuesResponse(properties) {
                            this.queues = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListQueuesResponse queues.
                         * @member {Array.<google.cloud.tasks.v2.IQueue>} queues
                         * @memberof google.cloud.tasks.v2.ListQueuesResponse
                         * @instance
                         */
                        ListQueuesResponse.prototype.queues = $util.emptyArray;
    
                        /**
                         * ListQueuesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.tasks.v2.ListQueuesResponse
                         * @instance
                         */
                        ListQueuesResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListQueuesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.ListQueuesResponse
                         * @static
                         * @param {google.cloud.tasks.v2.IListQueuesResponse=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.ListQueuesResponse} ListQueuesResponse instance
                         */
                        ListQueuesResponse.create = function create(properties) {
                            return new ListQueuesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListQueuesResponse message. Does not implicitly {@link google.cloud.tasks.v2.ListQueuesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.ListQueuesResponse
                         * @static
                         * @param {google.cloud.tasks.v2.IListQueuesResponse} message ListQueuesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListQueuesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.queues != null && message.queues.length)
                                for (var i = 0; i < message.queues.length; ++i)
                                    $root.google.cloud.tasks.v2.Queue.encode(message.queues[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListQueuesResponse message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.ListQueuesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.ListQueuesResponse
                         * @static
                         * @param {google.cloud.tasks.v2.IListQueuesResponse} message ListQueuesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListQueuesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListQueuesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.ListQueuesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.ListQueuesResponse} ListQueuesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListQueuesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.ListQueuesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.queues && message.queues.length))
                                            message.queues = [];
                                        message.queues.push($root.google.cloud.tasks.v2.Queue.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListQueuesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.ListQueuesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.ListQueuesResponse} ListQueuesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListQueuesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListQueuesResponse message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.ListQueuesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListQueuesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.queues != null && message.hasOwnProperty("queues")) {
                                if (!Array.isArray(message.queues))
                                    return "queues: array expected";
                                for (var i = 0; i < message.queues.length; ++i) {
                                    var error = $root.google.cloud.tasks.v2.Queue.verify(message.queues[i]);
                                    if (error)
                                        return "queues." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListQueuesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.ListQueuesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.ListQueuesResponse} ListQueuesResponse
                         */
                        ListQueuesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.ListQueuesResponse)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.ListQueuesResponse();
                            if (object.queues) {
                                if (!Array.isArray(object.queues))
                                    throw TypeError(".google.cloud.tasks.v2.ListQueuesResponse.queues: array expected");
                                message.queues = [];
                                for (var i = 0; i < object.queues.length; ++i) {
                                    if (typeof object.queues[i] !== "object")
                                        throw TypeError(".google.cloud.tasks.v2.ListQueuesResponse.queues: object expected");
                                    message.queues[i] = $root.google.cloud.tasks.v2.Queue.fromObject(object.queues[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListQueuesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.ListQueuesResponse
                         * @static
                         * @param {google.cloud.tasks.v2.ListQueuesResponse} message ListQueuesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListQueuesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.queues = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.queues && message.queues.length) {
                                object.queues = [];
                                for (var j = 0; j < message.queues.length; ++j)
                                    object.queues[j] = $root.google.cloud.tasks.v2.Queue.toObject(message.queues[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListQueuesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.ListQueuesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListQueuesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListQueuesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.ListQueuesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListQueuesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.ListQueuesResponse";
                        };
    
                        return ListQueuesResponse;
                    })();
    
                    v2.GetQueueRequest = (function() {
    
                        /**
                         * Properties of a GetQueueRequest.
                         * @memberof google.cloud.tasks.v2
                         * @interface IGetQueueRequest
                         * @property {string|null} [name] GetQueueRequest name
                         */
    
                        /**
                         * Constructs a new GetQueueRequest.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a GetQueueRequest.
                         * @implements IGetQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2.IGetQueueRequest=} [properties] Properties to set
                         */
                        function GetQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetQueueRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2.GetQueueRequest
                         * @instance
                         */
                        GetQueueRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.GetQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IGetQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.GetQueueRequest} GetQueueRequest instance
                         */
                        GetQueueRequest.create = function create(properties) {
                            return new GetQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2.GetQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.GetQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IGetQueueRequest} message GetQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.GetQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.GetQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IGetQueueRequest} message GetQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.GetQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.GetQueueRequest} GetQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.GetQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.GetQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.GetQueueRequest} GetQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.GetQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.GetQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.GetQueueRequest} GetQueueRequest
                         */
                        GetQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.GetQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.GetQueueRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.GetQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.GetQueueRequest} message GetQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.GetQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.GetQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.GetQueueRequest";
                        };
    
                        return GetQueueRequest;
                    })();
    
                    v2.CreateQueueRequest = (function() {
    
                        /**
                         * Properties of a CreateQueueRequest.
                         * @memberof google.cloud.tasks.v2
                         * @interface ICreateQueueRequest
                         * @property {string|null} [parent] CreateQueueRequest parent
                         * @property {google.cloud.tasks.v2.IQueue|null} [queue] CreateQueueRequest queue
                         */
    
                        /**
                         * Constructs a new CreateQueueRequest.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a CreateQueueRequest.
                         * @implements ICreateQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2.ICreateQueueRequest=} [properties] Properties to set
                         */
                        function CreateQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateQueueRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.tasks.v2.CreateQueueRequest
                         * @instance
                         */
                        CreateQueueRequest.prototype.parent = "";
    
                        /**
                         * CreateQueueRequest queue.
                         * @member {google.cloud.tasks.v2.IQueue|null|undefined} queue
                         * @memberof google.cloud.tasks.v2.CreateQueueRequest
                         * @instance
                         */
                        CreateQueueRequest.prototype.queue = null;
    
                        /**
                         * Creates a new CreateQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.CreateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.ICreateQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.CreateQueueRequest} CreateQueueRequest instance
                         */
                        CreateQueueRequest.create = function create(properties) {
                            return new CreateQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2.CreateQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.CreateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.ICreateQueueRequest} message CreateQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.queue != null && Object.hasOwnProperty.call(message, "queue"))
                                $root.google.cloud.tasks.v2.Queue.encode(message.queue, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.CreateQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.CreateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.ICreateQueueRequest} message CreateQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.CreateQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.CreateQueueRequest} CreateQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.CreateQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.queue = $root.google.cloud.tasks.v2.Queue.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.CreateQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.CreateQueueRequest} CreateQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.CreateQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.queue != null && message.hasOwnProperty("queue")) {
                                var error = $root.google.cloud.tasks.v2.Queue.verify(message.queue);
                                if (error)
                                    return "queue." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.CreateQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.CreateQueueRequest} CreateQueueRequest
                         */
                        CreateQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.CreateQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.CreateQueueRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.queue != null) {
                                if (typeof object.queue !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.CreateQueueRequest.queue: object expected");
                                message.queue = $root.google.cloud.tasks.v2.Queue.fromObject(object.queue);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.CreateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.CreateQueueRequest} message CreateQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.queue = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.queue != null && message.hasOwnProperty("queue"))
                                object.queue = $root.google.cloud.tasks.v2.Queue.toObject(message.queue, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.CreateQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.CreateQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.CreateQueueRequest";
                        };
    
                        return CreateQueueRequest;
                    })();
    
                    v2.UpdateQueueRequest = (function() {
    
                        /**
                         * Properties of an UpdateQueueRequest.
                         * @memberof google.cloud.tasks.v2
                         * @interface IUpdateQueueRequest
                         * @property {google.cloud.tasks.v2.IQueue|null} [queue] UpdateQueueRequest queue
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateQueueRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateQueueRequest.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents an UpdateQueueRequest.
                         * @implements IUpdateQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2.IUpdateQueueRequest=} [properties] Properties to set
                         */
                        function UpdateQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateQueueRequest queue.
                         * @member {google.cloud.tasks.v2.IQueue|null|undefined} queue
                         * @memberof google.cloud.tasks.v2.UpdateQueueRequest
                         * @instance
                         */
                        UpdateQueueRequest.prototype.queue = null;
    
                        /**
                         * UpdateQueueRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.tasks.v2.UpdateQueueRequest
                         * @instance
                         */
                        UpdateQueueRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.UpdateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IUpdateQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.UpdateQueueRequest} UpdateQueueRequest instance
                         */
                        UpdateQueueRequest.create = function create(properties) {
                            return new UpdateQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2.UpdateQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.UpdateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IUpdateQueueRequest} message UpdateQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.queue != null && Object.hasOwnProperty.call(message, "queue"))
                                $root.google.cloud.tasks.v2.Queue.encode(message.queue, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.UpdateQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.UpdateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IUpdateQueueRequest} message UpdateQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.UpdateQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.UpdateQueueRequest} UpdateQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.UpdateQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.queue = $root.google.cloud.tasks.v2.Queue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.UpdateQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.UpdateQueueRequest} UpdateQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.UpdateQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.queue != null && message.hasOwnProperty("queue")) {
                                var error = $root.google.cloud.tasks.v2.Queue.verify(message.queue);
                                if (error)
                                    return "queue." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.UpdateQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.UpdateQueueRequest} UpdateQueueRequest
                         */
                        UpdateQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.UpdateQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.UpdateQueueRequest();
                            if (object.queue != null) {
                                if (typeof object.queue !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.UpdateQueueRequest.queue: object expected");
                                message.queue = $root.google.cloud.tasks.v2.Queue.fromObject(object.queue);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.UpdateQueueRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.UpdateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.UpdateQueueRequest} message UpdateQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.queue = null;
                                object.updateMask = null;
                            }
                            if (message.queue != null && message.hasOwnProperty("queue"))
                                object.queue = $root.google.cloud.tasks.v2.Queue.toObject(message.queue, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.UpdateQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.UpdateQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.UpdateQueueRequest";
                        };
    
                        return UpdateQueueRequest;
                    })();
    
                    v2.DeleteQueueRequest = (function() {
    
                        /**
                         * Properties of a DeleteQueueRequest.
                         * @memberof google.cloud.tasks.v2
                         * @interface IDeleteQueueRequest
                         * @property {string|null} [name] DeleteQueueRequest name
                         */
    
                        /**
                         * Constructs a new DeleteQueueRequest.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a DeleteQueueRequest.
                         * @implements IDeleteQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2.IDeleteQueueRequest=} [properties] Properties to set
                         */
                        function DeleteQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteQueueRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2.DeleteQueueRequest
                         * @instance
                         */
                        DeleteQueueRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.DeleteQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IDeleteQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.DeleteQueueRequest} DeleteQueueRequest instance
                         */
                        DeleteQueueRequest.create = function create(properties) {
                            return new DeleteQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2.DeleteQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.DeleteQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IDeleteQueueRequest} message DeleteQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.DeleteQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.DeleteQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IDeleteQueueRequest} message DeleteQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.DeleteQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.DeleteQueueRequest} DeleteQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.DeleteQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.DeleteQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.DeleteQueueRequest} DeleteQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.DeleteQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.DeleteQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.DeleteQueueRequest} DeleteQueueRequest
                         */
                        DeleteQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.DeleteQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.DeleteQueueRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.DeleteQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.DeleteQueueRequest} message DeleteQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.DeleteQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.DeleteQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.DeleteQueueRequest";
                        };
    
                        return DeleteQueueRequest;
                    })();
    
                    v2.PurgeQueueRequest = (function() {
    
                        /**
                         * Properties of a PurgeQueueRequest.
                         * @memberof google.cloud.tasks.v2
                         * @interface IPurgeQueueRequest
                         * @property {string|null} [name] PurgeQueueRequest name
                         */
    
                        /**
                         * Constructs a new PurgeQueueRequest.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a PurgeQueueRequest.
                         * @implements IPurgeQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2.IPurgeQueueRequest=} [properties] Properties to set
                         */
                        function PurgeQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PurgeQueueRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2.PurgeQueueRequest
                         * @instance
                         */
                        PurgeQueueRequest.prototype.name = "";
    
                        /**
                         * Creates a new PurgeQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.PurgeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IPurgeQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.PurgeQueueRequest} PurgeQueueRequest instance
                         */
                        PurgeQueueRequest.create = function create(properties) {
                            return new PurgeQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified PurgeQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2.PurgeQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.PurgeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IPurgeQueueRequest} message PurgeQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PurgeQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PurgeQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.PurgeQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.PurgeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IPurgeQueueRequest} message PurgeQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PurgeQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PurgeQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.PurgeQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.PurgeQueueRequest} PurgeQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PurgeQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.PurgeQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PurgeQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.PurgeQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.PurgeQueueRequest} PurgeQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PurgeQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PurgeQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.PurgeQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PurgeQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PurgeQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.PurgeQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.PurgeQueueRequest} PurgeQueueRequest
                         */
                        PurgeQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.PurgeQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.PurgeQueueRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PurgeQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.PurgeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.PurgeQueueRequest} message PurgeQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PurgeQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this PurgeQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.PurgeQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PurgeQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PurgeQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.PurgeQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PurgeQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.PurgeQueueRequest";
                        };
    
                        return PurgeQueueRequest;
                    })();
    
                    v2.PauseQueueRequest = (function() {
    
                        /**
                         * Properties of a PauseQueueRequest.
                         * @memberof google.cloud.tasks.v2
                         * @interface IPauseQueueRequest
                         * @property {string|null} [name] PauseQueueRequest name
                         */
    
                        /**
                         * Constructs a new PauseQueueRequest.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a PauseQueueRequest.
                         * @implements IPauseQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2.IPauseQueueRequest=} [properties] Properties to set
                         */
                        function PauseQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PauseQueueRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2.PauseQueueRequest
                         * @instance
                         */
                        PauseQueueRequest.prototype.name = "";
    
                        /**
                         * Creates a new PauseQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.PauseQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IPauseQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.PauseQueueRequest} PauseQueueRequest instance
                         */
                        PauseQueueRequest.create = function create(properties) {
                            return new PauseQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified PauseQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2.PauseQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.PauseQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IPauseQueueRequest} message PauseQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PauseQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PauseQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.PauseQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.PauseQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IPauseQueueRequest} message PauseQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PauseQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PauseQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.PauseQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.PauseQueueRequest} PauseQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PauseQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.PauseQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PauseQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.PauseQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.PauseQueueRequest} PauseQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PauseQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PauseQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.PauseQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PauseQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PauseQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.PauseQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.PauseQueueRequest} PauseQueueRequest
                         */
                        PauseQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.PauseQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.PauseQueueRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PauseQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.PauseQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.PauseQueueRequest} message PauseQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PauseQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this PauseQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.PauseQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PauseQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PauseQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.PauseQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PauseQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.PauseQueueRequest";
                        };
    
                        return PauseQueueRequest;
                    })();
    
                    v2.ResumeQueueRequest = (function() {
    
                        /**
                         * Properties of a ResumeQueueRequest.
                         * @memberof google.cloud.tasks.v2
                         * @interface IResumeQueueRequest
                         * @property {string|null} [name] ResumeQueueRequest name
                         */
    
                        /**
                         * Constructs a new ResumeQueueRequest.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a ResumeQueueRequest.
                         * @implements IResumeQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2.IResumeQueueRequest=} [properties] Properties to set
                         */
                        function ResumeQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ResumeQueueRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2.ResumeQueueRequest
                         * @instance
                         */
                        ResumeQueueRequest.prototype.name = "";
    
                        /**
                         * Creates a new ResumeQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.ResumeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IResumeQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.ResumeQueueRequest} ResumeQueueRequest instance
                         */
                        ResumeQueueRequest.create = function create(properties) {
                            return new ResumeQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ResumeQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2.ResumeQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.ResumeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IResumeQueueRequest} message ResumeQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResumeQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ResumeQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.ResumeQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.ResumeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IResumeQueueRequest} message ResumeQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResumeQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ResumeQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.ResumeQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.ResumeQueueRequest} ResumeQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResumeQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.ResumeQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ResumeQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.ResumeQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.ResumeQueueRequest} ResumeQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResumeQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ResumeQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.ResumeQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ResumeQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ResumeQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.ResumeQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.ResumeQueueRequest} ResumeQueueRequest
                         */
                        ResumeQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.ResumeQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.ResumeQueueRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ResumeQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.ResumeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.ResumeQueueRequest} message ResumeQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ResumeQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this ResumeQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.ResumeQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ResumeQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ResumeQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.ResumeQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ResumeQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.ResumeQueueRequest";
                        };
    
                        return ResumeQueueRequest;
                    })();
    
                    v2.ListTasksRequest = (function() {
    
                        /**
                         * Properties of a ListTasksRequest.
                         * @memberof google.cloud.tasks.v2
                         * @interface IListTasksRequest
                         * @property {string|null} [parent] ListTasksRequest parent
                         * @property {google.cloud.tasks.v2.Task.View|null} [responseView] ListTasksRequest responseView
                         * @property {number|null} [pageSize] ListTasksRequest pageSize
                         * @property {string|null} [pageToken] ListTasksRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListTasksRequest.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a ListTasksRequest.
                         * @implements IListTasksRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2.IListTasksRequest=} [properties] Properties to set
                         */
                        function ListTasksRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListTasksRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.tasks.v2.ListTasksRequest
                         * @instance
                         */
                        ListTasksRequest.prototype.parent = "";
    
                        /**
                         * ListTasksRequest responseView.
                         * @member {google.cloud.tasks.v2.Task.View} responseView
                         * @memberof google.cloud.tasks.v2.ListTasksRequest
                         * @instance
                         */
                        ListTasksRequest.prototype.responseView = 0;
    
                        /**
                         * ListTasksRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.tasks.v2.ListTasksRequest
                         * @instance
                         */
                        ListTasksRequest.prototype.pageSize = 0;
    
                        /**
                         * ListTasksRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.tasks.v2.ListTasksRequest
                         * @instance
                         */
                        ListTasksRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListTasksRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.ListTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IListTasksRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.ListTasksRequest} ListTasksRequest instance
                         */
                        ListTasksRequest.create = function create(properties) {
                            return new ListTasksRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListTasksRequest message. Does not implicitly {@link google.cloud.tasks.v2.ListTasksRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.ListTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IListTasksRequest} message ListTasksRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTasksRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.responseView != null && Object.hasOwnProperty.call(message, "responseView"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.responseView);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListTasksRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.ListTasksRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.ListTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IListTasksRequest} message ListTasksRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTasksRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListTasksRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.ListTasksRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.ListTasksRequest} ListTasksRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTasksRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.ListTasksRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.responseView = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListTasksRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.ListTasksRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.ListTasksRequest} ListTasksRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTasksRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListTasksRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.ListTasksRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListTasksRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                switch (message.responseView) {
                                default:
                                    return "responseView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListTasksRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.ListTasksRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.ListTasksRequest} ListTasksRequest
                         */
                        ListTasksRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.ListTasksRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.ListTasksRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            switch (object.responseView) {
                            default:
                                if (typeof object.responseView === "number") {
                                    message.responseView = object.responseView;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.responseView = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.responseView = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.responseView = 2;
                                break;
                            }
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListTasksRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.ListTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2.ListTasksRequest} message ListTasksRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListTasksRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.responseView = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                object.responseView = options.enums === String ? $root.google.cloud.tasks.v2.Task.View[message.responseView] === undefined ? message.responseView : $root.google.cloud.tasks.v2.Task.View[message.responseView] : message.responseView;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListTasksRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.ListTasksRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListTasksRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListTasksRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.ListTasksRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListTasksRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.ListTasksRequest";
                        };
    
                        return ListTasksRequest;
                    })();
    
                    v2.ListTasksResponse = (function() {
    
                        /**
                         * Properties of a ListTasksResponse.
                         * @memberof google.cloud.tasks.v2
                         * @interface IListTasksResponse
                         * @property {Array.<google.cloud.tasks.v2.ITask>|null} [tasks] ListTasksResponse tasks
                         * @property {string|null} [nextPageToken] ListTasksResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListTasksResponse.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a ListTasksResponse.
                         * @implements IListTasksResponse
                         * @constructor
                         * @param {google.cloud.tasks.v2.IListTasksResponse=} [properties] Properties to set
                         */
                        function ListTasksResponse(properties) {
                            this.tasks = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListTasksResponse tasks.
                         * @member {Array.<google.cloud.tasks.v2.ITask>} tasks
                         * @memberof google.cloud.tasks.v2.ListTasksResponse
                         * @instance
                         */
                        ListTasksResponse.prototype.tasks = $util.emptyArray;
    
                        /**
                         * ListTasksResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.tasks.v2.ListTasksResponse
                         * @instance
                         */
                        ListTasksResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListTasksResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.ListTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2.IListTasksResponse=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.ListTasksResponse} ListTasksResponse instance
                         */
                        ListTasksResponse.create = function create(properties) {
                            return new ListTasksResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListTasksResponse message. Does not implicitly {@link google.cloud.tasks.v2.ListTasksResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.ListTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2.IListTasksResponse} message ListTasksResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTasksResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.tasks != null && message.tasks.length)
                                for (var i = 0; i < message.tasks.length; ++i)
                                    $root.google.cloud.tasks.v2.Task.encode(message.tasks[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListTasksResponse message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.ListTasksResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.ListTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2.IListTasksResponse} message ListTasksResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTasksResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListTasksResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.ListTasksResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.ListTasksResponse} ListTasksResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTasksResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.ListTasksResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.tasks && message.tasks.length))
                                            message.tasks = [];
                                        message.tasks.push($root.google.cloud.tasks.v2.Task.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListTasksResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.ListTasksResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.ListTasksResponse} ListTasksResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTasksResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListTasksResponse message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.ListTasksResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListTasksResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.tasks != null && message.hasOwnProperty("tasks")) {
                                if (!Array.isArray(message.tasks))
                                    return "tasks: array expected";
                                for (var i = 0; i < message.tasks.length; ++i) {
                                    var error = $root.google.cloud.tasks.v2.Task.verify(message.tasks[i]);
                                    if (error)
                                        return "tasks." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListTasksResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.ListTasksResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.ListTasksResponse} ListTasksResponse
                         */
                        ListTasksResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.ListTasksResponse)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.ListTasksResponse();
                            if (object.tasks) {
                                if (!Array.isArray(object.tasks))
                                    throw TypeError(".google.cloud.tasks.v2.ListTasksResponse.tasks: array expected");
                                message.tasks = [];
                                for (var i = 0; i < object.tasks.length; ++i) {
                                    if (typeof object.tasks[i] !== "object")
                                        throw TypeError(".google.cloud.tasks.v2.ListTasksResponse.tasks: object expected");
                                    message.tasks[i] = $root.google.cloud.tasks.v2.Task.fromObject(object.tasks[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListTasksResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.ListTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2.ListTasksResponse} message ListTasksResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListTasksResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.tasks = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.tasks && message.tasks.length) {
                                object.tasks = [];
                                for (var j = 0; j < message.tasks.length; ++j)
                                    object.tasks[j] = $root.google.cloud.tasks.v2.Task.toObject(message.tasks[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListTasksResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.ListTasksResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListTasksResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListTasksResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.ListTasksResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListTasksResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.ListTasksResponse";
                        };
    
                        return ListTasksResponse;
                    })();
    
                    v2.GetTaskRequest = (function() {
    
                        /**
                         * Properties of a GetTaskRequest.
                         * @memberof google.cloud.tasks.v2
                         * @interface IGetTaskRequest
                         * @property {string|null} [name] GetTaskRequest name
                         * @property {google.cloud.tasks.v2.Task.View|null} [responseView] GetTaskRequest responseView
                         */
    
                        /**
                         * Constructs a new GetTaskRequest.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a GetTaskRequest.
                         * @implements IGetTaskRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2.IGetTaskRequest=} [properties] Properties to set
                         */
                        function GetTaskRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetTaskRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2.GetTaskRequest
                         * @instance
                         */
                        GetTaskRequest.prototype.name = "";
    
                        /**
                         * GetTaskRequest responseView.
                         * @member {google.cloud.tasks.v2.Task.View} responseView
                         * @memberof google.cloud.tasks.v2.GetTaskRequest
                         * @instance
                         */
                        GetTaskRequest.prototype.responseView = 0;
    
                        /**
                         * Creates a new GetTaskRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.GetTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IGetTaskRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.GetTaskRequest} GetTaskRequest instance
                         */
                        GetTaskRequest.create = function create(properties) {
                            return new GetTaskRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetTaskRequest message. Does not implicitly {@link google.cloud.tasks.v2.GetTaskRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.GetTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IGetTaskRequest} message GetTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetTaskRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.responseView != null && Object.hasOwnProperty.call(message, "responseView"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.responseView);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetTaskRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.GetTaskRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.GetTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IGetTaskRequest} message GetTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetTaskRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetTaskRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.GetTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.GetTaskRequest} GetTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetTaskRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.GetTaskRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.responseView = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetTaskRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.GetTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.GetTaskRequest} GetTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetTaskRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetTaskRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.GetTaskRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetTaskRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                switch (message.responseView) {
                                default:
                                    return "responseView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a GetTaskRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.GetTaskRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.GetTaskRequest} GetTaskRequest
                         */
                        GetTaskRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.GetTaskRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.GetTaskRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            switch (object.responseView) {
                            default:
                                if (typeof object.responseView === "number") {
                                    message.responseView = object.responseView;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.responseView = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.responseView = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.responseView = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetTaskRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.GetTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.GetTaskRequest} message GetTaskRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetTaskRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.responseView = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                object.responseView = options.enums === String ? $root.google.cloud.tasks.v2.Task.View[message.responseView] === undefined ? message.responseView : $root.google.cloud.tasks.v2.Task.View[message.responseView] : message.responseView;
                            return object;
                        };
    
                        /**
                         * Converts this GetTaskRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.GetTaskRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetTaskRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetTaskRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.GetTaskRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetTaskRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.GetTaskRequest";
                        };
    
                        return GetTaskRequest;
                    })();
    
                    v2.CreateTaskRequest = (function() {
    
                        /**
                         * Properties of a CreateTaskRequest.
                         * @memberof google.cloud.tasks.v2
                         * @interface ICreateTaskRequest
                         * @property {string|null} [parent] CreateTaskRequest parent
                         * @property {google.cloud.tasks.v2.ITask|null} [task] CreateTaskRequest task
                         * @property {google.cloud.tasks.v2.Task.View|null} [responseView] CreateTaskRequest responseView
                         */
    
                        /**
                         * Constructs a new CreateTaskRequest.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a CreateTaskRequest.
                         * @implements ICreateTaskRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2.ICreateTaskRequest=} [properties] Properties to set
                         */
                        function CreateTaskRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateTaskRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.tasks.v2.CreateTaskRequest
                         * @instance
                         */
                        CreateTaskRequest.prototype.parent = "";
    
                        /**
                         * CreateTaskRequest task.
                         * @member {google.cloud.tasks.v2.ITask|null|undefined} task
                         * @memberof google.cloud.tasks.v2.CreateTaskRequest
                         * @instance
                         */
                        CreateTaskRequest.prototype.task = null;
    
                        /**
                         * CreateTaskRequest responseView.
                         * @member {google.cloud.tasks.v2.Task.View} responseView
                         * @memberof google.cloud.tasks.v2.CreateTaskRequest
                         * @instance
                         */
                        CreateTaskRequest.prototype.responseView = 0;
    
                        /**
                         * Creates a new CreateTaskRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.CreateTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.ICreateTaskRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.CreateTaskRequest} CreateTaskRequest instance
                         */
                        CreateTaskRequest.create = function create(properties) {
                            return new CreateTaskRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateTaskRequest message. Does not implicitly {@link google.cloud.tasks.v2.CreateTaskRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.CreateTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.ICreateTaskRequest} message CreateTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateTaskRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.task != null && Object.hasOwnProperty.call(message, "task"))
                                $root.google.cloud.tasks.v2.Task.encode(message.task, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.responseView != null && Object.hasOwnProperty.call(message, "responseView"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.responseView);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateTaskRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.CreateTaskRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.CreateTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.ICreateTaskRequest} message CreateTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateTaskRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateTaskRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.CreateTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.CreateTaskRequest} CreateTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateTaskRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.CreateTaskRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.task = $root.google.cloud.tasks.v2.Task.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.responseView = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateTaskRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.CreateTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.CreateTaskRequest} CreateTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateTaskRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateTaskRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.CreateTaskRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateTaskRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.task != null && message.hasOwnProperty("task")) {
                                var error = $root.google.cloud.tasks.v2.Task.verify(message.task);
                                if (error)
                                    return "task." + error;
                            }
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                switch (message.responseView) {
                                default:
                                    return "responseView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a CreateTaskRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.CreateTaskRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.CreateTaskRequest} CreateTaskRequest
                         */
                        CreateTaskRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.CreateTaskRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.CreateTaskRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.task != null) {
                                if (typeof object.task !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.CreateTaskRequest.task: object expected");
                                message.task = $root.google.cloud.tasks.v2.Task.fromObject(object.task);
                            }
                            switch (object.responseView) {
                            default:
                                if (typeof object.responseView === "number") {
                                    message.responseView = object.responseView;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.responseView = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.responseView = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.responseView = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateTaskRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.CreateTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.CreateTaskRequest} message CreateTaskRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateTaskRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.task = null;
                                object.responseView = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.task != null && message.hasOwnProperty("task"))
                                object.task = $root.google.cloud.tasks.v2.Task.toObject(message.task, options);
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                object.responseView = options.enums === String ? $root.google.cloud.tasks.v2.Task.View[message.responseView] === undefined ? message.responseView : $root.google.cloud.tasks.v2.Task.View[message.responseView] : message.responseView;
                            return object;
                        };
    
                        /**
                         * Converts this CreateTaskRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.CreateTaskRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateTaskRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateTaskRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.CreateTaskRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateTaskRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.CreateTaskRequest";
                        };
    
                        return CreateTaskRequest;
                    })();
    
                    v2.DeleteTaskRequest = (function() {
    
                        /**
                         * Properties of a DeleteTaskRequest.
                         * @memberof google.cloud.tasks.v2
                         * @interface IDeleteTaskRequest
                         * @property {string|null} [name] DeleteTaskRequest name
                         */
    
                        /**
                         * Constructs a new DeleteTaskRequest.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a DeleteTaskRequest.
                         * @implements IDeleteTaskRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2.IDeleteTaskRequest=} [properties] Properties to set
                         */
                        function DeleteTaskRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteTaskRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2.DeleteTaskRequest
                         * @instance
                         */
                        DeleteTaskRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteTaskRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.DeleteTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IDeleteTaskRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.DeleteTaskRequest} DeleteTaskRequest instance
                         */
                        DeleteTaskRequest.create = function create(properties) {
                            return new DeleteTaskRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteTaskRequest message. Does not implicitly {@link google.cloud.tasks.v2.DeleteTaskRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.DeleteTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IDeleteTaskRequest} message DeleteTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteTaskRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteTaskRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.DeleteTaskRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.DeleteTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IDeleteTaskRequest} message DeleteTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteTaskRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteTaskRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.DeleteTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.DeleteTaskRequest} DeleteTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteTaskRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.DeleteTaskRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteTaskRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.DeleteTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.DeleteTaskRequest} DeleteTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteTaskRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteTaskRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.DeleteTaskRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteTaskRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteTaskRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.DeleteTaskRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.DeleteTaskRequest} DeleteTaskRequest
                         */
                        DeleteTaskRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.DeleteTaskRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.DeleteTaskRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteTaskRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.DeleteTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.DeleteTaskRequest} message DeleteTaskRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteTaskRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteTaskRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.DeleteTaskRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteTaskRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteTaskRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.DeleteTaskRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteTaskRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.DeleteTaskRequest";
                        };
    
                        return DeleteTaskRequest;
                    })();
    
                    v2.RunTaskRequest = (function() {
    
                        /**
                         * Properties of a RunTaskRequest.
                         * @memberof google.cloud.tasks.v2
                         * @interface IRunTaskRequest
                         * @property {string|null} [name] RunTaskRequest name
                         * @property {google.cloud.tasks.v2.Task.View|null} [responseView] RunTaskRequest responseView
                         */
    
                        /**
                         * Constructs a new RunTaskRequest.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a RunTaskRequest.
                         * @implements IRunTaskRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2.IRunTaskRequest=} [properties] Properties to set
                         */
                        function RunTaskRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RunTaskRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2.RunTaskRequest
                         * @instance
                         */
                        RunTaskRequest.prototype.name = "";
    
                        /**
                         * RunTaskRequest responseView.
                         * @member {google.cloud.tasks.v2.Task.View} responseView
                         * @memberof google.cloud.tasks.v2.RunTaskRequest
                         * @instance
                         */
                        RunTaskRequest.prototype.responseView = 0;
    
                        /**
                         * Creates a new RunTaskRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.RunTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IRunTaskRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.RunTaskRequest} RunTaskRequest instance
                         */
                        RunTaskRequest.create = function create(properties) {
                            return new RunTaskRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RunTaskRequest message. Does not implicitly {@link google.cloud.tasks.v2.RunTaskRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.RunTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IRunTaskRequest} message RunTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunTaskRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.responseView != null && Object.hasOwnProperty.call(message, "responseView"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.responseView);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RunTaskRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.RunTaskRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.RunTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IRunTaskRequest} message RunTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunTaskRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RunTaskRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.RunTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.RunTaskRequest} RunTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunTaskRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.RunTaskRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.responseView = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RunTaskRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.RunTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.RunTaskRequest} RunTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunTaskRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RunTaskRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.RunTaskRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RunTaskRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                switch (message.responseView) {
                                default:
                                    return "responseView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a RunTaskRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.RunTaskRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.RunTaskRequest} RunTaskRequest
                         */
                        RunTaskRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.RunTaskRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.RunTaskRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            switch (object.responseView) {
                            default:
                                if (typeof object.responseView === "number") {
                                    message.responseView = object.responseView;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.responseView = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.responseView = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.responseView = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RunTaskRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.RunTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.RunTaskRequest} message RunTaskRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RunTaskRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.responseView = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                object.responseView = options.enums === String ? $root.google.cloud.tasks.v2.Task.View[message.responseView] === undefined ? message.responseView : $root.google.cloud.tasks.v2.Task.View[message.responseView] : message.responseView;
                            return object;
                        };
    
                        /**
                         * Converts this RunTaskRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.RunTaskRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RunTaskRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RunTaskRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.RunTaskRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RunTaskRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.RunTaskRequest";
                        };
    
                        return RunTaskRequest;
                    })();
    
                    v2.Queue = (function() {
    
                        /**
                         * Properties of a Queue.
                         * @memberof google.cloud.tasks.v2
                         * @interface IQueue
                         * @property {string|null} [name] Queue name
                         * @property {google.cloud.tasks.v2.IAppEngineRouting|null} [appEngineRoutingOverride] Queue appEngineRoutingOverride
                         * @property {google.cloud.tasks.v2.IRateLimits|null} [rateLimits] Queue rateLimits
                         * @property {google.cloud.tasks.v2.IRetryConfig|null} [retryConfig] Queue retryConfig
                         * @property {google.cloud.tasks.v2.Queue.State|null} [state] Queue state
                         * @property {google.protobuf.ITimestamp|null} [purgeTime] Queue purgeTime
                         * @property {google.cloud.tasks.v2.IStackdriverLoggingConfig|null} [stackdriverLoggingConfig] Queue stackdriverLoggingConfig
                         */
    
                        /**
                         * Constructs a new Queue.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a Queue.
                         * @implements IQueue
                         * @constructor
                         * @param {google.cloud.tasks.v2.IQueue=} [properties] Properties to set
                         */
                        function Queue(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Queue name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2.Queue
                         * @instance
                         */
                        Queue.prototype.name = "";
    
                        /**
                         * Queue appEngineRoutingOverride.
                         * @member {google.cloud.tasks.v2.IAppEngineRouting|null|undefined} appEngineRoutingOverride
                         * @memberof google.cloud.tasks.v2.Queue
                         * @instance
                         */
                        Queue.prototype.appEngineRoutingOverride = null;
    
                        /**
                         * Queue rateLimits.
                         * @member {google.cloud.tasks.v2.IRateLimits|null|undefined} rateLimits
                         * @memberof google.cloud.tasks.v2.Queue
                         * @instance
                         */
                        Queue.prototype.rateLimits = null;
    
                        /**
                         * Queue retryConfig.
                         * @member {google.cloud.tasks.v2.IRetryConfig|null|undefined} retryConfig
                         * @memberof google.cloud.tasks.v2.Queue
                         * @instance
                         */
                        Queue.prototype.retryConfig = null;
    
                        /**
                         * Queue state.
                         * @member {google.cloud.tasks.v2.Queue.State} state
                         * @memberof google.cloud.tasks.v2.Queue
                         * @instance
                         */
                        Queue.prototype.state = 0;
    
                        /**
                         * Queue purgeTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} purgeTime
                         * @memberof google.cloud.tasks.v2.Queue
                         * @instance
                         */
                        Queue.prototype.purgeTime = null;
    
                        /**
                         * Queue stackdriverLoggingConfig.
                         * @member {google.cloud.tasks.v2.IStackdriverLoggingConfig|null|undefined} stackdriverLoggingConfig
                         * @memberof google.cloud.tasks.v2.Queue
                         * @instance
                         */
                        Queue.prototype.stackdriverLoggingConfig = null;
    
                        /**
                         * Creates a new Queue instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.Queue
                         * @static
                         * @param {google.cloud.tasks.v2.IQueue=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.Queue} Queue instance
                         */
                        Queue.create = function create(properties) {
                            return new Queue(properties);
                        };
    
                        /**
                         * Encodes the specified Queue message. Does not implicitly {@link google.cloud.tasks.v2.Queue.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.Queue
                         * @static
                         * @param {google.cloud.tasks.v2.IQueue} message Queue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Queue.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.appEngineRoutingOverride != null && Object.hasOwnProperty.call(message, "appEngineRoutingOverride"))
                                $root.google.cloud.tasks.v2.AppEngineRouting.encode(message.appEngineRoutingOverride, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.rateLimits != null && Object.hasOwnProperty.call(message, "rateLimits"))
                                $root.google.cloud.tasks.v2.RateLimits.encode(message.rateLimits, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.retryConfig != null && Object.hasOwnProperty.call(message, "retryConfig"))
                                $root.google.cloud.tasks.v2.RetryConfig.encode(message.retryConfig, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.state);
                            if (message.purgeTime != null && Object.hasOwnProperty.call(message, "purgeTime"))
                                $root.google.protobuf.Timestamp.encode(message.purgeTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.stackdriverLoggingConfig != null && Object.hasOwnProperty.call(message, "stackdriverLoggingConfig"))
                                $root.google.cloud.tasks.v2.StackdriverLoggingConfig.encode(message.stackdriverLoggingConfig, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Queue message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.Queue.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.Queue
                         * @static
                         * @param {google.cloud.tasks.v2.IQueue} message Queue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Queue.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Queue message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.Queue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.Queue} Queue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Queue.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.Queue();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.appEngineRoutingOverride = $root.google.cloud.tasks.v2.AppEngineRouting.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.rateLimits = $root.google.cloud.tasks.v2.RateLimits.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.retryConfig = $root.google.cloud.tasks.v2.RetryConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        message.purgeTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.stackdriverLoggingConfig = $root.google.cloud.tasks.v2.StackdriverLoggingConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Queue message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.Queue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.Queue} Queue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Queue.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Queue message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.Queue
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Queue.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.appEngineRoutingOverride != null && message.hasOwnProperty("appEngineRoutingOverride")) {
                                var error = $root.google.cloud.tasks.v2.AppEngineRouting.verify(message.appEngineRoutingOverride);
                                if (error)
                                    return "appEngineRoutingOverride." + error;
                            }
                            if (message.rateLimits != null && message.hasOwnProperty("rateLimits")) {
                                var error = $root.google.cloud.tasks.v2.RateLimits.verify(message.rateLimits);
                                if (error)
                                    return "rateLimits." + error;
                            }
                            if (message.retryConfig != null && message.hasOwnProperty("retryConfig")) {
                                var error = $root.google.cloud.tasks.v2.RetryConfig.verify(message.retryConfig);
                                if (error)
                                    return "retryConfig." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.purgeTime != null && message.hasOwnProperty("purgeTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.purgeTime);
                                if (error)
                                    return "purgeTime." + error;
                            }
                            if (message.stackdriverLoggingConfig != null && message.hasOwnProperty("stackdriverLoggingConfig")) {
                                var error = $root.google.cloud.tasks.v2.StackdriverLoggingConfig.verify(message.stackdriverLoggingConfig);
                                if (error)
                                    return "stackdriverLoggingConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Queue message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.Queue
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.Queue} Queue
                         */
                        Queue.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.Queue)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.Queue();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.appEngineRoutingOverride != null) {
                                if (typeof object.appEngineRoutingOverride !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Queue.appEngineRoutingOverride: object expected");
                                message.appEngineRoutingOverride = $root.google.cloud.tasks.v2.AppEngineRouting.fromObject(object.appEngineRoutingOverride);
                            }
                            if (object.rateLimits != null) {
                                if (typeof object.rateLimits !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Queue.rateLimits: object expected");
                                message.rateLimits = $root.google.cloud.tasks.v2.RateLimits.fromObject(object.rateLimits);
                            }
                            if (object.retryConfig != null) {
                                if (typeof object.retryConfig !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Queue.retryConfig: object expected");
                                message.retryConfig = $root.google.cloud.tasks.v2.RetryConfig.fromObject(object.retryConfig);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "RUNNING":
                            case 1:
                                message.state = 1;
                                break;
                            case "PAUSED":
                            case 2:
                                message.state = 2;
                                break;
                            case "DISABLED":
                            case 3:
                                message.state = 3;
                                break;
                            }
                            if (object.purgeTime != null) {
                                if (typeof object.purgeTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Queue.purgeTime: object expected");
                                message.purgeTime = $root.google.protobuf.Timestamp.fromObject(object.purgeTime);
                            }
                            if (object.stackdriverLoggingConfig != null) {
                                if (typeof object.stackdriverLoggingConfig !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Queue.stackdriverLoggingConfig: object expected");
                                message.stackdriverLoggingConfig = $root.google.cloud.tasks.v2.StackdriverLoggingConfig.fromObject(object.stackdriverLoggingConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Queue message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.Queue
                         * @static
                         * @param {google.cloud.tasks.v2.Queue} message Queue
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Queue.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.appEngineRoutingOverride = null;
                                object.rateLimits = null;
                                object.retryConfig = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.purgeTime = null;
                                object.stackdriverLoggingConfig = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.appEngineRoutingOverride != null && message.hasOwnProperty("appEngineRoutingOverride"))
                                object.appEngineRoutingOverride = $root.google.cloud.tasks.v2.AppEngineRouting.toObject(message.appEngineRoutingOverride, options);
                            if (message.rateLimits != null && message.hasOwnProperty("rateLimits"))
                                object.rateLimits = $root.google.cloud.tasks.v2.RateLimits.toObject(message.rateLimits, options);
                            if (message.retryConfig != null && message.hasOwnProperty("retryConfig"))
                                object.retryConfig = $root.google.cloud.tasks.v2.RetryConfig.toObject(message.retryConfig, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.tasks.v2.Queue.State[message.state] === undefined ? message.state : $root.google.cloud.tasks.v2.Queue.State[message.state] : message.state;
                            if (message.purgeTime != null && message.hasOwnProperty("purgeTime"))
                                object.purgeTime = $root.google.protobuf.Timestamp.toObject(message.purgeTime, options);
                            if (message.stackdriverLoggingConfig != null && message.hasOwnProperty("stackdriverLoggingConfig"))
                                object.stackdriverLoggingConfig = $root.google.cloud.tasks.v2.StackdriverLoggingConfig.toObject(message.stackdriverLoggingConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this Queue to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.Queue
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Queue.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Queue
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.Queue
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Queue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.Queue";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.tasks.v2.Queue.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} RUNNING=1 RUNNING value
                         * @property {number} PAUSED=2 PAUSED value
                         * @property {number} DISABLED=3 DISABLED value
                         */
                        Queue.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "RUNNING"] = 1;
                            values[valuesById[2] = "PAUSED"] = 2;
                            values[valuesById[3] = "DISABLED"] = 3;
                            return values;
                        })();
    
                        return Queue;
                    })();
    
                    v2.RateLimits = (function() {
    
                        /**
                         * Properties of a RateLimits.
                         * @memberof google.cloud.tasks.v2
                         * @interface IRateLimits
                         * @property {number|null} [maxDispatchesPerSecond] RateLimits maxDispatchesPerSecond
                         * @property {number|null} [maxBurstSize] RateLimits maxBurstSize
                         * @property {number|null} [maxConcurrentDispatches] RateLimits maxConcurrentDispatches
                         */
    
                        /**
                         * Constructs a new RateLimits.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a RateLimits.
                         * @implements IRateLimits
                         * @constructor
                         * @param {google.cloud.tasks.v2.IRateLimits=} [properties] Properties to set
                         */
                        function RateLimits(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RateLimits maxDispatchesPerSecond.
                         * @member {number} maxDispatchesPerSecond
                         * @memberof google.cloud.tasks.v2.RateLimits
                         * @instance
                         */
                        RateLimits.prototype.maxDispatchesPerSecond = 0;
    
                        /**
                         * RateLimits maxBurstSize.
                         * @member {number} maxBurstSize
                         * @memberof google.cloud.tasks.v2.RateLimits
                         * @instance
                         */
                        RateLimits.prototype.maxBurstSize = 0;
    
                        /**
                         * RateLimits maxConcurrentDispatches.
                         * @member {number} maxConcurrentDispatches
                         * @memberof google.cloud.tasks.v2.RateLimits
                         * @instance
                         */
                        RateLimits.prototype.maxConcurrentDispatches = 0;
    
                        /**
                         * Creates a new RateLimits instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.RateLimits
                         * @static
                         * @param {google.cloud.tasks.v2.IRateLimits=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.RateLimits} RateLimits instance
                         */
                        RateLimits.create = function create(properties) {
                            return new RateLimits(properties);
                        };
    
                        /**
                         * Encodes the specified RateLimits message. Does not implicitly {@link google.cloud.tasks.v2.RateLimits.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.RateLimits
                         * @static
                         * @param {google.cloud.tasks.v2.IRateLimits} message RateLimits message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RateLimits.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.maxDispatchesPerSecond != null && Object.hasOwnProperty.call(message, "maxDispatchesPerSecond"))
                                writer.uint32(/* id 1, wireType 1 =*/9).double(message.maxDispatchesPerSecond);
                            if (message.maxBurstSize != null && Object.hasOwnProperty.call(message, "maxBurstSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.maxBurstSize);
                            if (message.maxConcurrentDispatches != null && Object.hasOwnProperty.call(message, "maxConcurrentDispatches"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.maxConcurrentDispatches);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RateLimits message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.RateLimits.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.RateLimits
                         * @static
                         * @param {google.cloud.tasks.v2.IRateLimits} message RateLimits message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RateLimits.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RateLimits message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.RateLimits
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.RateLimits} RateLimits
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RateLimits.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.RateLimits();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.maxDispatchesPerSecond = reader.double();
                                        break;
                                    }
                                case 2: {
                                        message.maxBurstSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.maxConcurrentDispatches = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RateLimits message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.RateLimits
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.RateLimits} RateLimits
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RateLimits.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RateLimits message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.RateLimits
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RateLimits.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.maxDispatchesPerSecond != null && message.hasOwnProperty("maxDispatchesPerSecond"))
                                if (typeof message.maxDispatchesPerSecond !== "number")
                                    return "maxDispatchesPerSecond: number expected";
                            if (message.maxBurstSize != null && message.hasOwnProperty("maxBurstSize"))
                                if (!$util.isInteger(message.maxBurstSize))
                                    return "maxBurstSize: integer expected";
                            if (message.maxConcurrentDispatches != null && message.hasOwnProperty("maxConcurrentDispatches"))
                                if (!$util.isInteger(message.maxConcurrentDispatches))
                                    return "maxConcurrentDispatches: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a RateLimits message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.RateLimits
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.RateLimits} RateLimits
                         */
                        RateLimits.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.RateLimits)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.RateLimits();
                            if (object.maxDispatchesPerSecond != null)
                                message.maxDispatchesPerSecond = Number(object.maxDispatchesPerSecond);
                            if (object.maxBurstSize != null)
                                message.maxBurstSize = object.maxBurstSize | 0;
                            if (object.maxConcurrentDispatches != null)
                                message.maxConcurrentDispatches = object.maxConcurrentDispatches | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RateLimits message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.RateLimits
                         * @static
                         * @param {google.cloud.tasks.v2.RateLimits} message RateLimits
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RateLimits.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.maxDispatchesPerSecond = 0;
                                object.maxBurstSize = 0;
                                object.maxConcurrentDispatches = 0;
                            }
                            if (message.maxDispatchesPerSecond != null && message.hasOwnProperty("maxDispatchesPerSecond"))
                                object.maxDispatchesPerSecond = options.json && !isFinite(message.maxDispatchesPerSecond) ? String(message.maxDispatchesPerSecond) : message.maxDispatchesPerSecond;
                            if (message.maxBurstSize != null && message.hasOwnProperty("maxBurstSize"))
                                object.maxBurstSize = message.maxBurstSize;
                            if (message.maxConcurrentDispatches != null && message.hasOwnProperty("maxConcurrentDispatches"))
                                object.maxConcurrentDispatches = message.maxConcurrentDispatches;
                            return object;
                        };
    
                        /**
                         * Converts this RateLimits to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.RateLimits
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RateLimits.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RateLimits
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.RateLimits
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RateLimits.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.RateLimits";
                        };
    
                        return RateLimits;
                    })();
    
                    v2.RetryConfig = (function() {
    
                        /**
                         * Properties of a RetryConfig.
                         * @memberof google.cloud.tasks.v2
                         * @interface IRetryConfig
                         * @property {number|null} [maxAttempts] RetryConfig maxAttempts
                         * @property {google.protobuf.IDuration|null} [maxRetryDuration] RetryConfig maxRetryDuration
                         * @property {google.protobuf.IDuration|null} [minBackoff] RetryConfig minBackoff
                         * @property {google.protobuf.IDuration|null} [maxBackoff] RetryConfig maxBackoff
                         * @property {number|null} [maxDoublings] RetryConfig maxDoublings
                         */
    
                        /**
                         * Constructs a new RetryConfig.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a RetryConfig.
                         * @implements IRetryConfig
                         * @constructor
                         * @param {google.cloud.tasks.v2.IRetryConfig=} [properties] Properties to set
                         */
                        function RetryConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RetryConfig maxAttempts.
                         * @member {number} maxAttempts
                         * @memberof google.cloud.tasks.v2.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.maxAttempts = 0;
    
                        /**
                         * RetryConfig maxRetryDuration.
                         * @member {google.protobuf.IDuration|null|undefined} maxRetryDuration
                         * @memberof google.cloud.tasks.v2.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.maxRetryDuration = null;
    
                        /**
                         * RetryConfig minBackoff.
                         * @member {google.protobuf.IDuration|null|undefined} minBackoff
                         * @memberof google.cloud.tasks.v2.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.minBackoff = null;
    
                        /**
                         * RetryConfig maxBackoff.
                         * @member {google.protobuf.IDuration|null|undefined} maxBackoff
                         * @memberof google.cloud.tasks.v2.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.maxBackoff = null;
    
                        /**
                         * RetryConfig maxDoublings.
                         * @member {number} maxDoublings
                         * @memberof google.cloud.tasks.v2.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.maxDoublings = 0;
    
                        /**
                         * Creates a new RetryConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.RetryConfig
                         * @static
                         * @param {google.cloud.tasks.v2.IRetryConfig=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.RetryConfig} RetryConfig instance
                         */
                        RetryConfig.create = function create(properties) {
                            return new RetryConfig(properties);
                        };
    
                        /**
                         * Encodes the specified RetryConfig message. Does not implicitly {@link google.cloud.tasks.v2.RetryConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.RetryConfig
                         * @static
                         * @param {google.cloud.tasks.v2.IRetryConfig} message RetryConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetryConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.maxAttempts != null && Object.hasOwnProperty.call(message, "maxAttempts"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.maxAttempts);
                            if (message.maxRetryDuration != null && Object.hasOwnProperty.call(message, "maxRetryDuration"))
                                $root.google.protobuf.Duration.encode(message.maxRetryDuration, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.minBackoff != null && Object.hasOwnProperty.call(message, "minBackoff"))
                                $root.google.protobuf.Duration.encode(message.minBackoff, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.maxBackoff != null && Object.hasOwnProperty.call(message, "maxBackoff"))
                                $root.google.protobuf.Duration.encode(message.maxBackoff, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.maxDoublings != null && Object.hasOwnProperty.call(message, "maxDoublings"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.maxDoublings);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RetryConfig message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.RetryConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.RetryConfig
                         * @static
                         * @param {google.cloud.tasks.v2.IRetryConfig} message RetryConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetryConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RetryConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.RetryConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.RetryConfig} RetryConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetryConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.RetryConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.maxAttempts = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.maxRetryDuration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.minBackoff = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.maxBackoff = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.maxDoublings = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RetryConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.RetryConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.RetryConfig} RetryConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetryConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RetryConfig message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.RetryConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RetryConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.maxAttempts != null && message.hasOwnProperty("maxAttempts"))
                                if (!$util.isInteger(message.maxAttempts))
                                    return "maxAttempts: integer expected";
                            if (message.maxRetryDuration != null && message.hasOwnProperty("maxRetryDuration")) {
                                var error = $root.google.protobuf.Duration.verify(message.maxRetryDuration);
                                if (error)
                                    return "maxRetryDuration." + error;
                            }
                            if (message.minBackoff != null && message.hasOwnProperty("minBackoff")) {
                                var error = $root.google.protobuf.Duration.verify(message.minBackoff);
                                if (error)
                                    return "minBackoff." + error;
                            }
                            if (message.maxBackoff != null && message.hasOwnProperty("maxBackoff")) {
                                var error = $root.google.protobuf.Duration.verify(message.maxBackoff);
                                if (error)
                                    return "maxBackoff." + error;
                            }
                            if (message.maxDoublings != null && message.hasOwnProperty("maxDoublings"))
                                if (!$util.isInteger(message.maxDoublings))
                                    return "maxDoublings: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a RetryConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.RetryConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.RetryConfig} RetryConfig
                         */
                        RetryConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.RetryConfig)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.RetryConfig();
                            if (object.maxAttempts != null)
                                message.maxAttempts = object.maxAttempts | 0;
                            if (object.maxRetryDuration != null) {
                                if (typeof object.maxRetryDuration !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.RetryConfig.maxRetryDuration: object expected");
                                message.maxRetryDuration = $root.google.protobuf.Duration.fromObject(object.maxRetryDuration);
                            }
                            if (object.minBackoff != null) {
                                if (typeof object.minBackoff !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.RetryConfig.minBackoff: object expected");
                                message.minBackoff = $root.google.protobuf.Duration.fromObject(object.minBackoff);
                            }
                            if (object.maxBackoff != null) {
                                if (typeof object.maxBackoff !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.RetryConfig.maxBackoff: object expected");
                                message.maxBackoff = $root.google.protobuf.Duration.fromObject(object.maxBackoff);
                            }
                            if (object.maxDoublings != null)
                                message.maxDoublings = object.maxDoublings | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RetryConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.RetryConfig
                         * @static
                         * @param {google.cloud.tasks.v2.RetryConfig} message RetryConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RetryConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.maxAttempts = 0;
                                object.maxRetryDuration = null;
                                object.minBackoff = null;
                                object.maxBackoff = null;
                                object.maxDoublings = 0;
                            }
                            if (message.maxAttempts != null && message.hasOwnProperty("maxAttempts"))
                                object.maxAttempts = message.maxAttempts;
                            if (message.maxRetryDuration != null && message.hasOwnProperty("maxRetryDuration"))
                                object.maxRetryDuration = $root.google.protobuf.Duration.toObject(message.maxRetryDuration, options);
                            if (message.minBackoff != null && message.hasOwnProperty("minBackoff"))
                                object.minBackoff = $root.google.protobuf.Duration.toObject(message.minBackoff, options);
                            if (message.maxBackoff != null && message.hasOwnProperty("maxBackoff"))
                                object.maxBackoff = $root.google.protobuf.Duration.toObject(message.maxBackoff, options);
                            if (message.maxDoublings != null && message.hasOwnProperty("maxDoublings"))
                                object.maxDoublings = message.maxDoublings;
                            return object;
                        };
    
                        /**
                         * Converts this RetryConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.RetryConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RetryConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RetryConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.RetryConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RetryConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.RetryConfig";
                        };
    
                        return RetryConfig;
                    })();
    
                    v2.StackdriverLoggingConfig = (function() {
    
                        /**
                         * Properties of a StackdriverLoggingConfig.
                         * @memberof google.cloud.tasks.v2
                         * @interface IStackdriverLoggingConfig
                         * @property {number|null} [samplingRatio] StackdriverLoggingConfig samplingRatio
                         */
    
                        /**
                         * Constructs a new StackdriverLoggingConfig.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a StackdriverLoggingConfig.
                         * @implements IStackdriverLoggingConfig
                         * @constructor
                         * @param {google.cloud.tasks.v2.IStackdriverLoggingConfig=} [properties] Properties to set
                         */
                        function StackdriverLoggingConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StackdriverLoggingConfig samplingRatio.
                         * @member {number} samplingRatio
                         * @memberof google.cloud.tasks.v2.StackdriverLoggingConfig
                         * @instance
                         */
                        StackdriverLoggingConfig.prototype.samplingRatio = 0;
    
                        /**
                         * Creates a new StackdriverLoggingConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.StackdriverLoggingConfig
                         * @static
                         * @param {google.cloud.tasks.v2.IStackdriverLoggingConfig=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.StackdriverLoggingConfig} StackdriverLoggingConfig instance
                         */
                        StackdriverLoggingConfig.create = function create(properties) {
                            return new StackdriverLoggingConfig(properties);
                        };
    
                        /**
                         * Encodes the specified StackdriverLoggingConfig message. Does not implicitly {@link google.cloud.tasks.v2.StackdriverLoggingConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.StackdriverLoggingConfig
                         * @static
                         * @param {google.cloud.tasks.v2.IStackdriverLoggingConfig} message StackdriverLoggingConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StackdriverLoggingConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.samplingRatio != null && Object.hasOwnProperty.call(message, "samplingRatio"))
                                writer.uint32(/* id 1, wireType 1 =*/9).double(message.samplingRatio);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StackdriverLoggingConfig message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.StackdriverLoggingConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.StackdriverLoggingConfig
                         * @static
                         * @param {google.cloud.tasks.v2.IStackdriverLoggingConfig} message StackdriverLoggingConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StackdriverLoggingConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StackdriverLoggingConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.StackdriverLoggingConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.StackdriverLoggingConfig} StackdriverLoggingConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StackdriverLoggingConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.StackdriverLoggingConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.samplingRatio = reader.double();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StackdriverLoggingConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.StackdriverLoggingConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.StackdriverLoggingConfig} StackdriverLoggingConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StackdriverLoggingConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StackdriverLoggingConfig message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.StackdriverLoggingConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StackdriverLoggingConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.samplingRatio != null && message.hasOwnProperty("samplingRatio"))
                                if (typeof message.samplingRatio !== "number")
                                    return "samplingRatio: number expected";
                            return null;
                        };
    
                        /**
                         * Creates a StackdriverLoggingConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.StackdriverLoggingConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.StackdriverLoggingConfig} StackdriverLoggingConfig
                         */
                        StackdriverLoggingConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.StackdriverLoggingConfig)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.StackdriverLoggingConfig();
                            if (object.samplingRatio != null)
                                message.samplingRatio = Number(object.samplingRatio);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StackdriverLoggingConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.StackdriverLoggingConfig
                         * @static
                         * @param {google.cloud.tasks.v2.StackdriverLoggingConfig} message StackdriverLoggingConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StackdriverLoggingConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.samplingRatio = 0;
                            if (message.samplingRatio != null && message.hasOwnProperty("samplingRatio"))
                                object.samplingRatio = options.json && !isFinite(message.samplingRatio) ? String(message.samplingRatio) : message.samplingRatio;
                            return object;
                        };
    
                        /**
                         * Converts this StackdriverLoggingConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.StackdriverLoggingConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StackdriverLoggingConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StackdriverLoggingConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.StackdriverLoggingConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StackdriverLoggingConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.StackdriverLoggingConfig";
                        };
    
                        return StackdriverLoggingConfig;
                    })();
    
                    v2.HttpRequest = (function() {
    
                        /**
                         * Properties of a HttpRequest.
                         * @memberof google.cloud.tasks.v2
                         * @interface IHttpRequest
                         * @property {string|null} [url] HttpRequest url
                         * @property {google.cloud.tasks.v2.HttpMethod|null} [httpMethod] HttpRequest httpMethod
                         * @property {Object.<string,string>|null} [headers] HttpRequest headers
                         * @property {Uint8Array|null} [body] HttpRequest body
                         * @property {google.cloud.tasks.v2.IOAuthToken|null} [oauthToken] HttpRequest oauthToken
                         * @property {google.cloud.tasks.v2.IOidcToken|null} [oidcToken] HttpRequest oidcToken
                         */
    
                        /**
                         * Constructs a new HttpRequest.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a HttpRequest.
                         * @implements IHttpRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2.IHttpRequest=} [properties] Properties to set
                         */
                        function HttpRequest(properties) {
                            this.headers = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * HttpRequest url.
                         * @member {string} url
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @instance
                         */
                        HttpRequest.prototype.url = "";
    
                        /**
                         * HttpRequest httpMethod.
                         * @member {google.cloud.tasks.v2.HttpMethod} httpMethod
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @instance
                         */
                        HttpRequest.prototype.httpMethod = 0;
    
                        /**
                         * HttpRequest headers.
                         * @member {Object.<string,string>} headers
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @instance
                         */
                        HttpRequest.prototype.headers = $util.emptyObject;
    
                        /**
                         * HttpRequest body.
                         * @member {Uint8Array} body
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @instance
                         */
                        HttpRequest.prototype.body = $util.newBuffer([]);
    
                        /**
                         * HttpRequest oauthToken.
                         * @member {google.cloud.tasks.v2.IOAuthToken|null|undefined} oauthToken
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @instance
                         */
                        HttpRequest.prototype.oauthToken = null;
    
                        /**
                         * HttpRequest oidcToken.
                         * @member {google.cloud.tasks.v2.IOidcToken|null|undefined} oidcToken
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @instance
                         */
                        HttpRequest.prototype.oidcToken = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * HttpRequest authorizationHeader.
                         * @member {"oauthToken"|"oidcToken"|undefined} authorizationHeader
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @instance
                         */
                        Object.defineProperty(HttpRequest.prototype, "authorizationHeader", {
                            get: $util.oneOfGetter($oneOfFields = ["oauthToken", "oidcToken"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new HttpRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IHttpRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.HttpRequest} HttpRequest instance
                         */
                        HttpRequest.create = function create(properties) {
                            return new HttpRequest(properties);
                        };
    
                        /**
                         * Encodes the specified HttpRequest message. Does not implicitly {@link google.cloud.tasks.v2.HttpRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IHttpRequest} message HttpRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HttpRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.url != null && Object.hasOwnProperty.call(message, "url"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.url);
                            if (message.httpMethod != null && Object.hasOwnProperty.call(message, "httpMethod"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.httpMethod);
                            if (message.headers != null && Object.hasOwnProperty.call(message, "headers"))
                                for (var keys = Object.keys(message.headers), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.headers[keys[i]]).ldelim();
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.body);
                            if (message.oauthToken != null && Object.hasOwnProperty.call(message, "oauthToken"))
                                $root.google.cloud.tasks.v2.OAuthToken.encode(message.oauthToken, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.oidcToken != null && Object.hasOwnProperty.call(message, "oidcToken"))
                                $root.google.cloud.tasks.v2.OidcToken.encode(message.oidcToken, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified HttpRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.HttpRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IHttpRequest} message HttpRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HttpRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a HttpRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.HttpRequest} HttpRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HttpRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.HttpRequest(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.url = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.httpMethod = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        if (message.headers === $util.emptyObject)
                                            message.headers = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.headers[key] = value;
                                        break;
                                    }
                                case 4: {
                                        message.body = reader.bytes();
                                        break;
                                    }
                                case 5: {
                                        message.oauthToken = $root.google.cloud.tasks.v2.OAuthToken.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.oidcToken = $root.google.cloud.tasks.v2.OidcToken.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a HttpRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.HttpRequest} HttpRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HttpRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a HttpRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        HttpRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.url != null && message.hasOwnProperty("url"))
                                if (!$util.isString(message.url))
                                    return "url: string expected";
                            if (message.httpMethod != null && message.hasOwnProperty("httpMethod"))
                                switch (message.httpMethod) {
                                default:
                                    return "httpMethod: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            if (message.headers != null && message.hasOwnProperty("headers")) {
                                if (!$util.isObject(message.headers))
                                    return "headers: object expected";
                                var key = Object.keys(message.headers);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.headers[key[i]]))
                                        return "headers: string{k:string} expected";
                            }
                            if (message.body != null && message.hasOwnProperty("body"))
                                if (!(message.body && typeof message.body.length === "number" || $util.isString(message.body)))
                                    return "body: buffer expected";
                            if (message.oauthToken != null && message.hasOwnProperty("oauthToken")) {
                                properties.authorizationHeader = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2.OAuthToken.verify(message.oauthToken);
                                    if (error)
                                        return "oauthToken." + error;
                                }
                            }
                            if (message.oidcToken != null && message.hasOwnProperty("oidcToken")) {
                                if (properties.authorizationHeader === 1)
                                    return "authorizationHeader: multiple values";
                                properties.authorizationHeader = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2.OidcToken.verify(message.oidcToken);
                                    if (error)
                                        return "oidcToken." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a HttpRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.HttpRequest} HttpRequest
                         */
                        HttpRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.HttpRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.HttpRequest();
                            if (object.url != null)
                                message.url = String(object.url);
                            switch (object.httpMethod) {
                            default:
                                if (typeof object.httpMethod === "number") {
                                    message.httpMethod = object.httpMethod;
                                    break;
                                }
                                break;
                            case "HTTP_METHOD_UNSPECIFIED":
                            case 0:
                                message.httpMethod = 0;
                                break;
                            case "POST":
                            case 1:
                                message.httpMethod = 1;
                                break;
                            case "GET":
                            case 2:
                                message.httpMethod = 2;
                                break;
                            case "HEAD":
                            case 3:
                                message.httpMethod = 3;
                                break;
                            case "PUT":
                            case 4:
                                message.httpMethod = 4;
                                break;
                            case "DELETE":
                            case 5:
                                message.httpMethod = 5;
                                break;
                            case "PATCH":
                            case 6:
                                message.httpMethod = 6;
                                break;
                            case "OPTIONS":
                            case 7:
                                message.httpMethod = 7;
                                break;
                            }
                            if (object.headers) {
                                if (typeof object.headers !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.HttpRequest.headers: object expected");
                                message.headers = {};
                                for (var keys = Object.keys(object.headers), i = 0; i < keys.length; ++i)
                                    message.headers[keys[i]] = String(object.headers[keys[i]]);
                            }
                            if (object.body != null)
                                if (typeof object.body === "string")
                                    $util.base64.decode(object.body, message.body = $util.newBuffer($util.base64.length(object.body)), 0);
                                else if (object.body.length >= 0)
                                    message.body = object.body;
                            if (object.oauthToken != null) {
                                if (typeof object.oauthToken !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.HttpRequest.oauthToken: object expected");
                                message.oauthToken = $root.google.cloud.tasks.v2.OAuthToken.fromObject(object.oauthToken);
                            }
                            if (object.oidcToken != null) {
                                if (typeof object.oidcToken !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.HttpRequest.oidcToken: object expected");
                                message.oidcToken = $root.google.cloud.tasks.v2.OidcToken.fromObject(object.oidcToken);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a HttpRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2.HttpRequest} message HttpRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        HttpRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.headers = {};
                            if (options.defaults) {
                                object.url = "";
                                object.httpMethod = options.enums === String ? "HTTP_METHOD_UNSPECIFIED" : 0;
                                if (options.bytes === String)
                                    object.body = "";
                                else {
                                    object.body = [];
                                    if (options.bytes !== Array)
                                        object.body = $util.newBuffer(object.body);
                                }
                            }
                            if (message.url != null && message.hasOwnProperty("url"))
                                object.url = message.url;
                            if (message.httpMethod != null && message.hasOwnProperty("httpMethod"))
                                object.httpMethod = options.enums === String ? $root.google.cloud.tasks.v2.HttpMethod[message.httpMethod] === undefined ? message.httpMethod : $root.google.cloud.tasks.v2.HttpMethod[message.httpMethod] : message.httpMethod;
                            var keys2;
                            if (message.headers && (keys2 = Object.keys(message.headers)).length) {
                                object.headers = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.headers[keys2[j]] = message.headers[keys2[j]];
                            }
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = options.bytes === String ? $util.base64.encode(message.body, 0, message.body.length) : options.bytes === Array ? Array.prototype.slice.call(message.body) : message.body;
                            if (message.oauthToken != null && message.hasOwnProperty("oauthToken")) {
                                object.oauthToken = $root.google.cloud.tasks.v2.OAuthToken.toObject(message.oauthToken, options);
                                if (options.oneofs)
                                    object.authorizationHeader = "oauthToken";
                            }
                            if (message.oidcToken != null && message.hasOwnProperty("oidcToken")) {
                                object.oidcToken = $root.google.cloud.tasks.v2.OidcToken.toObject(message.oidcToken, options);
                                if (options.oneofs)
                                    object.authorizationHeader = "oidcToken";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this HttpRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        HttpRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for HttpRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        HttpRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.HttpRequest";
                        };
    
                        return HttpRequest;
                    })();
    
                    v2.AppEngineHttpRequest = (function() {
    
                        /**
                         * Properties of an AppEngineHttpRequest.
                         * @memberof google.cloud.tasks.v2
                         * @interface IAppEngineHttpRequest
                         * @property {google.cloud.tasks.v2.HttpMethod|null} [httpMethod] AppEngineHttpRequest httpMethod
                         * @property {google.cloud.tasks.v2.IAppEngineRouting|null} [appEngineRouting] AppEngineHttpRequest appEngineRouting
                         * @property {string|null} [relativeUri] AppEngineHttpRequest relativeUri
                         * @property {Object.<string,string>|null} [headers] AppEngineHttpRequest headers
                         * @property {Uint8Array|null} [body] AppEngineHttpRequest body
                         */
    
                        /**
                         * Constructs a new AppEngineHttpRequest.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents an AppEngineHttpRequest.
                         * @implements IAppEngineHttpRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2.IAppEngineHttpRequest=} [properties] Properties to set
                         */
                        function AppEngineHttpRequest(properties) {
                            this.headers = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AppEngineHttpRequest httpMethod.
                         * @member {google.cloud.tasks.v2.HttpMethod} httpMethod
                         * @memberof google.cloud.tasks.v2.AppEngineHttpRequest
                         * @instance
                         */
                        AppEngineHttpRequest.prototype.httpMethod = 0;
    
                        /**
                         * AppEngineHttpRequest appEngineRouting.
                         * @member {google.cloud.tasks.v2.IAppEngineRouting|null|undefined} appEngineRouting
                         * @memberof google.cloud.tasks.v2.AppEngineHttpRequest
                         * @instance
                         */
                        AppEngineHttpRequest.prototype.appEngineRouting = null;
    
                        /**
                         * AppEngineHttpRequest relativeUri.
                         * @member {string} relativeUri
                         * @memberof google.cloud.tasks.v2.AppEngineHttpRequest
                         * @instance
                         */
                        AppEngineHttpRequest.prototype.relativeUri = "";
    
                        /**
                         * AppEngineHttpRequest headers.
                         * @member {Object.<string,string>} headers
                         * @memberof google.cloud.tasks.v2.AppEngineHttpRequest
                         * @instance
                         */
                        AppEngineHttpRequest.prototype.headers = $util.emptyObject;
    
                        /**
                         * AppEngineHttpRequest body.
                         * @member {Uint8Array} body
                         * @memberof google.cloud.tasks.v2.AppEngineHttpRequest
                         * @instance
                         */
                        AppEngineHttpRequest.prototype.body = $util.newBuffer([]);
    
                        /**
                         * Creates a new AppEngineHttpRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.AppEngineHttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IAppEngineHttpRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.AppEngineHttpRequest} AppEngineHttpRequest instance
                         */
                        AppEngineHttpRequest.create = function create(properties) {
                            return new AppEngineHttpRequest(properties);
                        };
    
                        /**
                         * Encodes the specified AppEngineHttpRequest message. Does not implicitly {@link google.cloud.tasks.v2.AppEngineHttpRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.AppEngineHttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IAppEngineHttpRequest} message AppEngineHttpRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AppEngineHttpRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.httpMethod != null && Object.hasOwnProperty.call(message, "httpMethod"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.httpMethod);
                            if (message.appEngineRouting != null && Object.hasOwnProperty.call(message, "appEngineRouting"))
                                $root.google.cloud.tasks.v2.AppEngineRouting.encode(message.appEngineRouting, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.relativeUri != null && Object.hasOwnProperty.call(message, "relativeUri"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.relativeUri);
                            if (message.headers != null && Object.hasOwnProperty.call(message, "headers"))
                                for (var keys = Object.keys(message.headers), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.headers[keys[i]]).ldelim();
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.body);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AppEngineHttpRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.AppEngineHttpRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.AppEngineHttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IAppEngineHttpRequest} message AppEngineHttpRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AppEngineHttpRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AppEngineHttpRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.AppEngineHttpRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.AppEngineHttpRequest} AppEngineHttpRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AppEngineHttpRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.AppEngineHttpRequest(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.httpMethod = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.appEngineRouting = $root.google.cloud.tasks.v2.AppEngineRouting.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.relativeUri = reader.string();
                                        break;
                                    }
                                case 4: {
                                        if (message.headers === $util.emptyObject)
                                            message.headers = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.headers[key] = value;
                                        break;
                                    }
                                case 5: {
                                        message.body = reader.bytes();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AppEngineHttpRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.AppEngineHttpRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.AppEngineHttpRequest} AppEngineHttpRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AppEngineHttpRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AppEngineHttpRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.AppEngineHttpRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AppEngineHttpRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.httpMethod != null && message.hasOwnProperty("httpMethod"))
                                switch (message.httpMethod) {
                                default:
                                    return "httpMethod: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            if (message.appEngineRouting != null && message.hasOwnProperty("appEngineRouting")) {
                                var error = $root.google.cloud.tasks.v2.AppEngineRouting.verify(message.appEngineRouting);
                                if (error)
                                    return "appEngineRouting." + error;
                            }
                            if (message.relativeUri != null && message.hasOwnProperty("relativeUri"))
                                if (!$util.isString(message.relativeUri))
                                    return "relativeUri: string expected";
                            if (message.headers != null && message.hasOwnProperty("headers")) {
                                if (!$util.isObject(message.headers))
                                    return "headers: object expected";
                                var key = Object.keys(message.headers);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.headers[key[i]]))
                                        return "headers: string{k:string} expected";
                            }
                            if (message.body != null && message.hasOwnProperty("body"))
                                if (!(message.body && typeof message.body.length === "number" || $util.isString(message.body)))
                                    return "body: buffer expected";
                            return null;
                        };
    
                        /**
                         * Creates an AppEngineHttpRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.AppEngineHttpRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.AppEngineHttpRequest} AppEngineHttpRequest
                         */
                        AppEngineHttpRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.AppEngineHttpRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.AppEngineHttpRequest();
                            switch (object.httpMethod) {
                            default:
                                if (typeof object.httpMethod === "number") {
                                    message.httpMethod = object.httpMethod;
                                    break;
                                }
                                break;
                            case "HTTP_METHOD_UNSPECIFIED":
                            case 0:
                                message.httpMethod = 0;
                                break;
                            case "POST":
                            case 1:
                                message.httpMethod = 1;
                                break;
                            case "GET":
                            case 2:
                                message.httpMethod = 2;
                                break;
                            case "HEAD":
                            case 3:
                                message.httpMethod = 3;
                                break;
                            case "PUT":
                            case 4:
                                message.httpMethod = 4;
                                break;
                            case "DELETE":
                            case 5:
                                message.httpMethod = 5;
                                break;
                            case "PATCH":
                            case 6:
                                message.httpMethod = 6;
                                break;
                            case "OPTIONS":
                            case 7:
                                message.httpMethod = 7;
                                break;
                            }
                            if (object.appEngineRouting != null) {
                                if (typeof object.appEngineRouting !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.AppEngineHttpRequest.appEngineRouting: object expected");
                                message.appEngineRouting = $root.google.cloud.tasks.v2.AppEngineRouting.fromObject(object.appEngineRouting);
                            }
                            if (object.relativeUri != null)
                                message.relativeUri = String(object.relativeUri);
                            if (object.headers) {
                                if (typeof object.headers !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.AppEngineHttpRequest.headers: object expected");
                                message.headers = {};
                                for (var keys = Object.keys(object.headers), i = 0; i < keys.length; ++i)
                                    message.headers[keys[i]] = String(object.headers[keys[i]]);
                            }
                            if (object.body != null)
                                if (typeof object.body === "string")
                                    $util.base64.decode(object.body, message.body = $util.newBuffer($util.base64.length(object.body)), 0);
                                else if (object.body.length >= 0)
                                    message.body = object.body;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AppEngineHttpRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.AppEngineHttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2.AppEngineHttpRequest} message AppEngineHttpRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AppEngineHttpRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.headers = {};
                            if (options.defaults) {
                                object.httpMethod = options.enums === String ? "HTTP_METHOD_UNSPECIFIED" : 0;
                                object.appEngineRouting = null;
                                object.relativeUri = "";
                                if (options.bytes === String)
                                    object.body = "";
                                else {
                                    object.body = [];
                                    if (options.bytes !== Array)
                                        object.body = $util.newBuffer(object.body);
                                }
                            }
                            if (message.httpMethod != null && message.hasOwnProperty("httpMethod"))
                                object.httpMethod = options.enums === String ? $root.google.cloud.tasks.v2.HttpMethod[message.httpMethod] === undefined ? message.httpMethod : $root.google.cloud.tasks.v2.HttpMethod[message.httpMethod] : message.httpMethod;
                            if (message.appEngineRouting != null && message.hasOwnProperty("appEngineRouting"))
                                object.appEngineRouting = $root.google.cloud.tasks.v2.AppEngineRouting.toObject(message.appEngineRouting, options);
                            if (message.relativeUri != null && message.hasOwnProperty("relativeUri"))
                                object.relativeUri = message.relativeUri;
                            var keys2;
                            if (message.headers && (keys2 = Object.keys(message.headers)).length) {
                                object.headers = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.headers[keys2[j]] = message.headers[keys2[j]];
                            }
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = options.bytes === String ? $util.base64.encode(message.body, 0, message.body.length) : options.bytes === Array ? Array.prototype.slice.call(message.body) : message.body;
                            return object;
                        };
    
                        /**
                         * Converts this AppEngineHttpRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.AppEngineHttpRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AppEngineHttpRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AppEngineHttpRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.AppEngineHttpRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AppEngineHttpRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.AppEngineHttpRequest";
                        };
    
                        return AppEngineHttpRequest;
                    })();
    
                    v2.AppEngineRouting = (function() {
    
                        /**
                         * Properties of an AppEngineRouting.
                         * @memberof google.cloud.tasks.v2
                         * @interface IAppEngineRouting
                         * @property {string|null} [service] AppEngineRouting service
                         * @property {string|null} [version] AppEngineRouting version
                         * @property {string|null} [instance] AppEngineRouting instance
                         * @property {string|null} [host] AppEngineRouting host
                         */
    
                        /**
                         * Constructs a new AppEngineRouting.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents an AppEngineRouting.
                         * @implements IAppEngineRouting
                         * @constructor
                         * @param {google.cloud.tasks.v2.IAppEngineRouting=} [properties] Properties to set
                         */
                        function AppEngineRouting(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AppEngineRouting service.
                         * @member {string} service
                         * @memberof google.cloud.tasks.v2.AppEngineRouting
                         * @instance
                         */
                        AppEngineRouting.prototype.service = "";
    
                        /**
                         * AppEngineRouting version.
                         * @member {string} version
                         * @memberof google.cloud.tasks.v2.AppEngineRouting
                         * @instance
                         */
                        AppEngineRouting.prototype.version = "";
    
                        /**
                         * AppEngineRouting instance.
                         * @member {string} instance
                         * @memberof google.cloud.tasks.v2.AppEngineRouting
                         * @instance
                         */
                        AppEngineRouting.prototype.instance = "";
    
                        /**
                         * AppEngineRouting host.
                         * @member {string} host
                         * @memberof google.cloud.tasks.v2.AppEngineRouting
                         * @instance
                         */
                        AppEngineRouting.prototype.host = "";
    
                        /**
                         * Creates a new AppEngineRouting instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.AppEngineRouting
                         * @static
                         * @param {google.cloud.tasks.v2.IAppEngineRouting=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.AppEngineRouting} AppEngineRouting instance
                         */
                        AppEngineRouting.create = function create(properties) {
                            return new AppEngineRouting(properties);
                        };
    
                        /**
                         * Encodes the specified AppEngineRouting message. Does not implicitly {@link google.cloud.tasks.v2.AppEngineRouting.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.AppEngineRouting
                         * @static
                         * @param {google.cloud.tasks.v2.IAppEngineRouting} message AppEngineRouting message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AppEngineRouting.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.service);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.version);
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.instance);
                            if (message.host != null && Object.hasOwnProperty.call(message, "host"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.host);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AppEngineRouting message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.AppEngineRouting.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.AppEngineRouting
                         * @static
                         * @param {google.cloud.tasks.v2.IAppEngineRouting} message AppEngineRouting message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AppEngineRouting.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AppEngineRouting message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.AppEngineRouting
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.AppEngineRouting} AppEngineRouting
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AppEngineRouting.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.AppEngineRouting();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.service = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.version = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.instance = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.host = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AppEngineRouting message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.AppEngineRouting
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.AppEngineRouting} AppEngineRouting
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AppEngineRouting.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AppEngineRouting message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.AppEngineRouting
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AppEngineRouting.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.service != null && message.hasOwnProperty("service"))
                                if (!$util.isString(message.service))
                                    return "service: string expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.host != null && message.hasOwnProperty("host"))
                                if (!$util.isString(message.host))
                                    return "host: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an AppEngineRouting message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.AppEngineRouting
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.AppEngineRouting} AppEngineRouting
                         */
                        AppEngineRouting.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.AppEngineRouting)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.AppEngineRouting();
                            if (object.service != null)
                                message.service = String(object.service);
                            if (object.version != null)
                                message.version = String(object.version);
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.host != null)
                                message.host = String(object.host);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AppEngineRouting message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.AppEngineRouting
                         * @static
                         * @param {google.cloud.tasks.v2.AppEngineRouting} message AppEngineRouting
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AppEngineRouting.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.service = "";
                                object.version = "";
                                object.instance = "";
                                object.host = "";
                            }
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = message.service;
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.host != null && message.hasOwnProperty("host"))
                                object.host = message.host;
                            return object;
                        };
    
                        /**
                         * Converts this AppEngineRouting to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.AppEngineRouting
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AppEngineRouting.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AppEngineRouting
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.AppEngineRouting
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AppEngineRouting.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.AppEngineRouting";
                        };
    
                        return AppEngineRouting;
                    })();
    
                    /**
                     * HttpMethod enum.
                     * @name google.cloud.tasks.v2.HttpMethod
                     * @enum {number}
                     * @property {number} HTTP_METHOD_UNSPECIFIED=0 HTTP_METHOD_UNSPECIFIED value
                     * @property {number} POST=1 POST value
                     * @property {number} GET=2 GET value
                     * @property {number} HEAD=3 HEAD value
                     * @property {number} PUT=4 PUT value
                     * @property {number} DELETE=5 DELETE value
                     * @property {number} PATCH=6 PATCH value
                     * @property {number} OPTIONS=7 OPTIONS value
                     */
                    v2.HttpMethod = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "HTTP_METHOD_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "POST"] = 1;
                        values[valuesById[2] = "GET"] = 2;
                        values[valuesById[3] = "HEAD"] = 3;
                        values[valuesById[4] = "PUT"] = 4;
                        values[valuesById[5] = "DELETE"] = 5;
                        values[valuesById[6] = "PATCH"] = 6;
                        values[valuesById[7] = "OPTIONS"] = 7;
                        return values;
                    })();
    
                    v2.OAuthToken = (function() {
    
                        /**
                         * Properties of a OAuthToken.
                         * @memberof google.cloud.tasks.v2
                         * @interface IOAuthToken
                         * @property {string|null} [serviceAccountEmail] OAuthToken serviceAccountEmail
                         * @property {string|null} [scope] OAuthToken scope
                         */
    
                        /**
                         * Constructs a new OAuthToken.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a OAuthToken.
                         * @implements IOAuthToken
                         * @constructor
                         * @param {google.cloud.tasks.v2.IOAuthToken=} [properties] Properties to set
                         */
                        function OAuthToken(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OAuthToken serviceAccountEmail.
                         * @member {string} serviceAccountEmail
                         * @memberof google.cloud.tasks.v2.OAuthToken
                         * @instance
                         */
                        OAuthToken.prototype.serviceAccountEmail = "";
    
                        /**
                         * OAuthToken scope.
                         * @member {string} scope
                         * @memberof google.cloud.tasks.v2.OAuthToken
                         * @instance
                         */
                        OAuthToken.prototype.scope = "";
    
                        /**
                         * Creates a new OAuthToken instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.OAuthToken
                         * @static
                         * @param {google.cloud.tasks.v2.IOAuthToken=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.OAuthToken} OAuthToken instance
                         */
                        OAuthToken.create = function create(properties) {
                            return new OAuthToken(properties);
                        };
    
                        /**
                         * Encodes the specified OAuthToken message. Does not implicitly {@link google.cloud.tasks.v2.OAuthToken.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.OAuthToken
                         * @static
                         * @param {google.cloud.tasks.v2.IOAuthToken} message OAuthToken message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OAuthToken.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.serviceAccountEmail != null && Object.hasOwnProperty.call(message, "serviceAccountEmail"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.serviceAccountEmail);
                            if (message.scope != null && Object.hasOwnProperty.call(message, "scope"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.scope);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OAuthToken message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.OAuthToken.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.OAuthToken
                         * @static
                         * @param {google.cloud.tasks.v2.IOAuthToken} message OAuthToken message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OAuthToken.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a OAuthToken message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.OAuthToken
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.OAuthToken} OAuthToken
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OAuthToken.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.OAuthToken();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.serviceAccountEmail = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.scope = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a OAuthToken message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.OAuthToken
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.OAuthToken} OAuthToken
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OAuthToken.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a OAuthToken message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.OAuthToken
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OAuthToken.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                if (!$util.isString(message.serviceAccountEmail))
                                    return "serviceAccountEmail: string expected";
                            if (message.scope != null && message.hasOwnProperty("scope"))
                                if (!$util.isString(message.scope))
                                    return "scope: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a OAuthToken message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.OAuthToken
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.OAuthToken} OAuthToken
                         */
                        OAuthToken.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.OAuthToken)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.OAuthToken();
                            if (object.serviceAccountEmail != null)
                                message.serviceAccountEmail = String(object.serviceAccountEmail);
                            if (object.scope != null)
                                message.scope = String(object.scope);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a OAuthToken message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.OAuthToken
                         * @static
                         * @param {google.cloud.tasks.v2.OAuthToken} message OAuthToken
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OAuthToken.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.serviceAccountEmail = "";
                                object.scope = "";
                            }
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                object.serviceAccountEmail = message.serviceAccountEmail;
                            if (message.scope != null && message.hasOwnProperty("scope"))
                                object.scope = message.scope;
                            return object;
                        };
    
                        /**
                         * Converts this OAuthToken to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.OAuthToken
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OAuthToken.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OAuthToken
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.OAuthToken
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OAuthToken.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.OAuthToken";
                        };
    
                        return OAuthToken;
                    })();
    
                    v2.OidcToken = (function() {
    
                        /**
                         * Properties of an OidcToken.
                         * @memberof google.cloud.tasks.v2
                         * @interface IOidcToken
                         * @property {string|null} [serviceAccountEmail] OidcToken serviceAccountEmail
                         * @property {string|null} [audience] OidcToken audience
                         */
    
                        /**
                         * Constructs a new OidcToken.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents an OidcToken.
                         * @implements IOidcToken
                         * @constructor
                         * @param {google.cloud.tasks.v2.IOidcToken=} [properties] Properties to set
                         */
                        function OidcToken(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OidcToken serviceAccountEmail.
                         * @member {string} serviceAccountEmail
                         * @memberof google.cloud.tasks.v2.OidcToken
                         * @instance
                         */
                        OidcToken.prototype.serviceAccountEmail = "";
    
                        /**
                         * OidcToken audience.
                         * @member {string} audience
                         * @memberof google.cloud.tasks.v2.OidcToken
                         * @instance
                         */
                        OidcToken.prototype.audience = "";
    
                        /**
                         * Creates a new OidcToken instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.OidcToken
                         * @static
                         * @param {google.cloud.tasks.v2.IOidcToken=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.OidcToken} OidcToken instance
                         */
                        OidcToken.create = function create(properties) {
                            return new OidcToken(properties);
                        };
    
                        /**
                         * Encodes the specified OidcToken message. Does not implicitly {@link google.cloud.tasks.v2.OidcToken.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.OidcToken
                         * @static
                         * @param {google.cloud.tasks.v2.IOidcToken} message OidcToken message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OidcToken.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.serviceAccountEmail != null && Object.hasOwnProperty.call(message, "serviceAccountEmail"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.serviceAccountEmail);
                            if (message.audience != null && Object.hasOwnProperty.call(message, "audience"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.audience);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OidcToken message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.OidcToken.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.OidcToken
                         * @static
                         * @param {google.cloud.tasks.v2.IOidcToken} message OidcToken message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OidcToken.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OidcToken message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.OidcToken
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.OidcToken} OidcToken
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OidcToken.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.OidcToken();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.serviceAccountEmail = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.audience = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OidcToken message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.OidcToken
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.OidcToken} OidcToken
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OidcToken.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OidcToken message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.OidcToken
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OidcToken.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                if (!$util.isString(message.serviceAccountEmail))
                                    return "serviceAccountEmail: string expected";
                            if (message.audience != null && message.hasOwnProperty("audience"))
                                if (!$util.isString(message.audience))
                                    return "audience: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an OidcToken message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.OidcToken
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.OidcToken} OidcToken
                         */
                        OidcToken.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.OidcToken)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.OidcToken();
                            if (object.serviceAccountEmail != null)
                                message.serviceAccountEmail = String(object.serviceAccountEmail);
                            if (object.audience != null)
                                message.audience = String(object.audience);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OidcToken message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.OidcToken
                         * @static
                         * @param {google.cloud.tasks.v2.OidcToken} message OidcToken
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OidcToken.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.serviceAccountEmail = "";
                                object.audience = "";
                            }
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                object.serviceAccountEmail = message.serviceAccountEmail;
                            if (message.audience != null && message.hasOwnProperty("audience"))
                                object.audience = message.audience;
                            return object;
                        };
    
                        /**
                         * Converts this OidcToken to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.OidcToken
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OidcToken.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OidcToken
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.OidcToken
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OidcToken.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.OidcToken";
                        };
    
                        return OidcToken;
                    })();
    
                    v2.Task = (function() {
    
                        /**
                         * Properties of a Task.
                         * @memberof google.cloud.tasks.v2
                         * @interface ITask
                         * @property {string|null} [name] Task name
                         * @property {google.cloud.tasks.v2.IAppEngineHttpRequest|null} [appEngineHttpRequest] Task appEngineHttpRequest
                         * @property {google.cloud.tasks.v2.IHttpRequest|null} [httpRequest] Task httpRequest
                         * @property {google.protobuf.ITimestamp|null} [scheduleTime] Task scheduleTime
                         * @property {google.protobuf.ITimestamp|null} [createTime] Task createTime
                         * @property {google.protobuf.IDuration|null} [dispatchDeadline] Task dispatchDeadline
                         * @property {number|null} [dispatchCount] Task dispatchCount
                         * @property {number|null} [responseCount] Task responseCount
                         * @property {google.cloud.tasks.v2.IAttempt|null} [firstAttempt] Task firstAttempt
                         * @property {google.cloud.tasks.v2.IAttempt|null} [lastAttempt] Task lastAttempt
                         * @property {google.cloud.tasks.v2.Task.View|null} [view] Task view
                         */
    
                        /**
                         * Constructs a new Task.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a Task.
                         * @implements ITask
                         * @constructor
                         * @param {google.cloud.tasks.v2.ITask=} [properties] Properties to set
                         */
                        function Task(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Task name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2.Task
                         * @instance
                         */
                        Task.prototype.name = "";
    
                        /**
                         * Task appEngineHttpRequest.
                         * @member {google.cloud.tasks.v2.IAppEngineHttpRequest|null|undefined} appEngineHttpRequest
                         * @memberof google.cloud.tasks.v2.Task
                         * @instance
                         */
                        Task.prototype.appEngineHttpRequest = null;
    
                        /**
                         * Task httpRequest.
                         * @member {google.cloud.tasks.v2.IHttpRequest|null|undefined} httpRequest
                         * @memberof google.cloud.tasks.v2.Task
                         * @instance
                         */
                        Task.prototype.httpRequest = null;
    
                        /**
                         * Task scheduleTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} scheduleTime
                         * @memberof google.cloud.tasks.v2.Task
                         * @instance
                         */
                        Task.prototype.scheduleTime = null;
    
                        /**
                         * Task createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.tasks.v2.Task
                         * @instance
                         */
                        Task.prototype.createTime = null;
    
                        /**
                         * Task dispatchDeadline.
                         * @member {google.protobuf.IDuration|null|undefined} dispatchDeadline
                         * @memberof google.cloud.tasks.v2.Task
                         * @instance
                         */
                        Task.prototype.dispatchDeadline = null;
    
                        /**
                         * Task dispatchCount.
                         * @member {number} dispatchCount
                         * @memberof google.cloud.tasks.v2.Task
                         * @instance
                         */
                        Task.prototype.dispatchCount = 0;
    
                        /**
                         * Task responseCount.
                         * @member {number} responseCount
                         * @memberof google.cloud.tasks.v2.Task
                         * @instance
                         */
                        Task.prototype.responseCount = 0;
    
                        /**
                         * Task firstAttempt.
                         * @member {google.cloud.tasks.v2.IAttempt|null|undefined} firstAttempt
                         * @memberof google.cloud.tasks.v2.Task
                         * @instance
                         */
                        Task.prototype.firstAttempt = null;
    
                        /**
                         * Task lastAttempt.
                         * @member {google.cloud.tasks.v2.IAttempt|null|undefined} lastAttempt
                         * @memberof google.cloud.tasks.v2.Task
                         * @instance
                         */
                        Task.prototype.lastAttempt = null;
    
                        /**
                         * Task view.
                         * @member {google.cloud.tasks.v2.Task.View} view
                         * @memberof google.cloud.tasks.v2.Task
                         * @instance
                         */
                        Task.prototype.view = 0;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Task messageType.
                         * @member {"appEngineHttpRequest"|"httpRequest"|undefined} messageType
                         * @memberof google.cloud.tasks.v2.Task
                         * @instance
                         */
                        Object.defineProperty(Task.prototype, "messageType", {
                            get: $util.oneOfGetter($oneOfFields = ["appEngineHttpRequest", "httpRequest"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Task instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.Task
                         * @static
                         * @param {google.cloud.tasks.v2.ITask=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.Task} Task instance
                         */
                        Task.create = function create(properties) {
                            return new Task(properties);
                        };
    
                        /**
                         * Encodes the specified Task message. Does not implicitly {@link google.cloud.tasks.v2.Task.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.Task
                         * @static
                         * @param {google.cloud.tasks.v2.ITask} message Task message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Task.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.appEngineHttpRequest != null && Object.hasOwnProperty.call(message, "appEngineHttpRequest"))
                                $root.google.cloud.tasks.v2.AppEngineHttpRequest.encode(message.appEngineHttpRequest, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.httpRequest != null && Object.hasOwnProperty.call(message, "httpRequest"))
                                $root.google.cloud.tasks.v2.HttpRequest.encode(message.httpRequest, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.scheduleTime != null && Object.hasOwnProperty.call(message, "scheduleTime"))
                                $root.google.protobuf.Timestamp.encode(message.scheduleTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.dispatchDeadline != null && Object.hasOwnProperty.call(message, "dispatchDeadline"))
                                $root.google.protobuf.Duration.encode(message.dispatchDeadline, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.dispatchCount != null && Object.hasOwnProperty.call(message, "dispatchCount"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.dispatchCount);
                            if (message.responseCount != null && Object.hasOwnProperty.call(message, "responseCount"))
                                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.responseCount);
                            if (message.firstAttempt != null && Object.hasOwnProperty.call(message, "firstAttempt"))
                                $root.google.cloud.tasks.v2.Attempt.encode(message.firstAttempt, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.lastAttempt != null && Object.hasOwnProperty.call(message, "lastAttempt"))
                                $root.google.cloud.tasks.v2.Attempt.encode(message.lastAttempt, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.view != null && Object.hasOwnProperty.call(message, "view"))
                                writer.uint32(/* id 11, wireType 0 =*/88).int32(message.view);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Task message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.Task.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.Task
                         * @static
                         * @param {google.cloud.tasks.v2.ITask} message Task message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Task.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Task message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.Task
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.Task} Task
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Task.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.Task();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.appEngineHttpRequest = $root.google.cloud.tasks.v2.AppEngineHttpRequest.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.httpRequest = $root.google.cloud.tasks.v2.HttpRequest.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.scheduleTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.dispatchDeadline = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.dispatchCount = reader.int32();
                                        break;
                                    }
                                case 8: {
                                        message.responseCount = reader.int32();
                                        break;
                                    }
                                case 9: {
                                        message.firstAttempt = $root.google.cloud.tasks.v2.Attempt.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.lastAttempt = $root.google.cloud.tasks.v2.Attempt.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        message.view = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Task message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.Task
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.Task} Task
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Task.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Task message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.Task
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Task.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.appEngineHttpRequest != null && message.hasOwnProperty("appEngineHttpRequest")) {
                                properties.messageType = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2.AppEngineHttpRequest.verify(message.appEngineHttpRequest);
                                    if (error)
                                        return "appEngineHttpRequest." + error;
                                }
                            }
                            if (message.httpRequest != null && message.hasOwnProperty("httpRequest")) {
                                if (properties.messageType === 1)
                                    return "messageType: multiple values";
                                properties.messageType = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2.HttpRequest.verify(message.httpRequest);
                                    if (error)
                                        return "httpRequest." + error;
                                }
                            }
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.scheduleTime);
                                if (error)
                                    return "scheduleTime." + error;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.dispatchDeadline != null && message.hasOwnProperty("dispatchDeadline")) {
                                var error = $root.google.protobuf.Duration.verify(message.dispatchDeadline);
                                if (error)
                                    return "dispatchDeadline." + error;
                            }
                            if (message.dispatchCount != null && message.hasOwnProperty("dispatchCount"))
                                if (!$util.isInteger(message.dispatchCount))
                                    return "dispatchCount: integer expected";
                            if (message.responseCount != null && message.hasOwnProperty("responseCount"))
                                if (!$util.isInteger(message.responseCount))
                                    return "responseCount: integer expected";
                            if (message.firstAttempt != null && message.hasOwnProperty("firstAttempt")) {
                                var error = $root.google.cloud.tasks.v2.Attempt.verify(message.firstAttempt);
                                if (error)
                                    return "firstAttempt." + error;
                            }
                            if (message.lastAttempt != null && message.hasOwnProperty("lastAttempt")) {
                                var error = $root.google.cloud.tasks.v2.Attempt.verify(message.lastAttempt);
                                if (error)
                                    return "lastAttempt." + error;
                            }
                            if (message.view != null && message.hasOwnProperty("view"))
                                switch (message.view) {
                                default:
                                    return "view: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a Task message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.Task
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.Task} Task
                         */
                        Task.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.Task)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.Task();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.appEngineHttpRequest != null) {
                                if (typeof object.appEngineHttpRequest !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Task.appEngineHttpRequest: object expected");
                                message.appEngineHttpRequest = $root.google.cloud.tasks.v2.AppEngineHttpRequest.fromObject(object.appEngineHttpRequest);
                            }
                            if (object.httpRequest != null) {
                                if (typeof object.httpRequest !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Task.httpRequest: object expected");
                                message.httpRequest = $root.google.cloud.tasks.v2.HttpRequest.fromObject(object.httpRequest);
                            }
                            if (object.scheduleTime != null) {
                                if (typeof object.scheduleTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Task.scheduleTime: object expected");
                                message.scheduleTime = $root.google.protobuf.Timestamp.fromObject(object.scheduleTime);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Task.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.dispatchDeadline != null) {
                                if (typeof object.dispatchDeadline !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Task.dispatchDeadline: object expected");
                                message.dispatchDeadline = $root.google.protobuf.Duration.fromObject(object.dispatchDeadline);
                            }
                            if (object.dispatchCount != null)
                                message.dispatchCount = object.dispatchCount | 0;
                            if (object.responseCount != null)
                                message.responseCount = object.responseCount | 0;
                            if (object.firstAttempt != null) {
                                if (typeof object.firstAttempt !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Task.firstAttempt: object expected");
                                message.firstAttempt = $root.google.cloud.tasks.v2.Attempt.fromObject(object.firstAttempt);
                            }
                            if (object.lastAttempt != null) {
                                if (typeof object.lastAttempt !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Task.lastAttempt: object expected");
                                message.lastAttempt = $root.google.cloud.tasks.v2.Attempt.fromObject(object.lastAttempt);
                            }
                            switch (object.view) {
                            default:
                                if (typeof object.view === "number") {
                                    message.view = object.view;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.view = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.view = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.view = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Task message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.Task
                         * @static
                         * @param {google.cloud.tasks.v2.Task} message Task
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Task.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.scheduleTime = null;
                                object.createTime = null;
                                object.dispatchDeadline = null;
                                object.dispatchCount = 0;
                                object.responseCount = 0;
                                object.firstAttempt = null;
                                object.lastAttempt = null;
                                object.view = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.appEngineHttpRequest != null && message.hasOwnProperty("appEngineHttpRequest")) {
                                object.appEngineHttpRequest = $root.google.cloud.tasks.v2.AppEngineHttpRequest.toObject(message.appEngineHttpRequest, options);
                                if (options.oneofs)
                                    object.messageType = "appEngineHttpRequest";
                            }
                            if (message.httpRequest != null && message.hasOwnProperty("httpRequest")) {
                                object.httpRequest = $root.google.cloud.tasks.v2.HttpRequest.toObject(message.httpRequest, options);
                                if (options.oneofs)
                                    object.messageType = "httpRequest";
                            }
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime"))
                                object.scheduleTime = $root.google.protobuf.Timestamp.toObject(message.scheduleTime, options);
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.dispatchDeadline != null && message.hasOwnProperty("dispatchDeadline"))
                                object.dispatchDeadline = $root.google.protobuf.Duration.toObject(message.dispatchDeadline, options);
                            if (message.dispatchCount != null && message.hasOwnProperty("dispatchCount"))
                                object.dispatchCount = message.dispatchCount;
                            if (message.responseCount != null && message.hasOwnProperty("responseCount"))
                                object.responseCount = message.responseCount;
                            if (message.firstAttempt != null && message.hasOwnProperty("firstAttempt"))
                                object.firstAttempt = $root.google.cloud.tasks.v2.Attempt.toObject(message.firstAttempt, options);
                            if (message.lastAttempt != null && message.hasOwnProperty("lastAttempt"))
                                object.lastAttempt = $root.google.cloud.tasks.v2.Attempt.toObject(message.lastAttempt, options);
                            if (message.view != null && message.hasOwnProperty("view"))
                                object.view = options.enums === String ? $root.google.cloud.tasks.v2.Task.View[message.view] === undefined ? message.view : $root.google.cloud.tasks.v2.Task.View[message.view] : message.view;
                            return object;
                        };
    
                        /**
                         * Converts this Task to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.Task
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Task.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Task
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.Task
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Task.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.Task";
                        };
    
                        /**
                         * View enum.
                         * @name google.cloud.tasks.v2.Task.View
                         * @enum {number}
                         * @property {number} VIEW_UNSPECIFIED=0 VIEW_UNSPECIFIED value
                         * @property {number} BASIC=1 BASIC value
                         * @property {number} FULL=2 FULL value
                         */
                        Task.View = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "VIEW_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "BASIC"] = 1;
                            values[valuesById[2] = "FULL"] = 2;
                            return values;
                        })();
    
                        return Task;
                    })();
    
                    v2.Attempt = (function() {
    
                        /**
                         * Properties of an Attempt.
                         * @memberof google.cloud.tasks.v2
                         * @interface IAttempt
                         * @property {google.protobuf.ITimestamp|null} [scheduleTime] Attempt scheduleTime
                         * @property {google.protobuf.ITimestamp|null} [dispatchTime] Attempt dispatchTime
                         * @property {google.protobuf.ITimestamp|null} [responseTime] Attempt responseTime
                         * @property {google.rpc.IStatus|null} [responseStatus] Attempt responseStatus
                         */
    
                        /**
                         * Constructs a new Attempt.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents an Attempt.
                         * @implements IAttempt
                         * @constructor
                         * @param {google.cloud.tasks.v2.IAttempt=} [properties] Properties to set
                         */
                        function Attempt(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Attempt scheduleTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} scheduleTime
                         * @memberof google.cloud.tasks.v2.Attempt
                         * @instance
                         */
                        Attempt.prototype.scheduleTime = null;
    
                        /**
                         * Attempt dispatchTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} dispatchTime
                         * @memberof google.cloud.tasks.v2.Attempt
                         * @instance
                         */
                        Attempt.prototype.dispatchTime = null;
    
                        /**
                         * Attempt responseTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} responseTime
                         * @memberof google.cloud.tasks.v2.Attempt
                         * @instance
                         */
                        Attempt.prototype.responseTime = null;
    
                        /**
                         * Attempt responseStatus.
                         * @member {google.rpc.IStatus|null|undefined} responseStatus
                         * @memberof google.cloud.tasks.v2.Attempt
                         * @instance
                         */
                        Attempt.prototype.responseStatus = null;
    
                        /**
                         * Creates a new Attempt instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.Attempt
                         * @static
                         * @param {google.cloud.tasks.v2.IAttempt=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.Attempt} Attempt instance
                         */
                        Attempt.create = function create(properties) {
                            return new Attempt(properties);
                        };
    
                        /**
                         * Encodes the specified Attempt message. Does not implicitly {@link google.cloud.tasks.v2.Attempt.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.Attempt
                         * @static
                         * @param {google.cloud.tasks.v2.IAttempt} message Attempt message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Attempt.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.scheduleTime != null && Object.hasOwnProperty.call(message, "scheduleTime"))
                                $root.google.protobuf.Timestamp.encode(message.scheduleTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.dispatchTime != null && Object.hasOwnProperty.call(message, "dispatchTime"))
                                $root.google.protobuf.Timestamp.encode(message.dispatchTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.responseTime != null && Object.hasOwnProperty.call(message, "responseTime"))
                                $root.google.protobuf.Timestamp.encode(message.responseTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.responseStatus != null && Object.hasOwnProperty.call(message, "responseStatus"))
                                $root.google.rpc.Status.encode(message.responseStatus, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Attempt message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.Attempt.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.Attempt
                         * @static
                         * @param {google.cloud.tasks.v2.IAttempt} message Attempt message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Attempt.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Attempt message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.Attempt
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.Attempt} Attempt
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Attempt.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.Attempt();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.scheduleTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.dispatchTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.responseTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.responseStatus = $root.google.rpc.Status.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Attempt message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.Attempt
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.Attempt} Attempt
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Attempt.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Attempt message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.Attempt
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Attempt.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.scheduleTime);
                                if (error)
                                    return "scheduleTime." + error;
                            }
                            if (message.dispatchTime != null && message.hasOwnProperty("dispatchTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.dispatchTime);
                                if (error)
                                    return "dispatchTime." + error;
                            }
                            if (message.responseTime != null && message.hasOwnProperty("responseTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.responseTime);
                                if (error)
                                    return "responseTime." + error;
                            }
                            if (message.responseStatus != null && message.hasOwnProperty("responseStatus")) {
                                var error = $root.google.rpc.Status.verify(message.responseStatus);
                                if (error)
                                    return "responseStatus." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an Attempt message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.Attempt
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.Attempt} Attempt
                         */
                        Attempt.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.Attempt)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.Attempt();
                            if (object.scheduleTime != null) {
                                if (typeof object.scheduleTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Attempt.scheduleTime: object expected");
                                message.scheduleTime = $root.google.protobuf.Timestamp.fromObject(object.scheduleTime);
                            }
                            if (object.dispatchTime != null) {
                                if (typeof object.dispatchTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Attempt.dispatchTime: object expected");
                                message.dispatchTime = $root.google.protobuf.Timestamp.fromObject(object.dispatchTime);
                            }
                            if (object.responseTime != null) {
                                if (typeof object.responseTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Attempt.responseTime: object expected");
                                message.responseTime = $root.google.protobuf.Timestamp.fromObject(object.responseTime);
                            }
                            if (object.responseStatus != null) {
                                if (typeof object.responseStatus !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Attempt.responseStatus: object expected");
                                message.responseStatus = $root.google.rpc.Status.fromObject(object.responseStatus);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Attempt message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.Attempt
                         * @static
                         * @param {google.cloud.tasks.v2.Attempt} message Attempt
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Attempt.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.scheduleTime = null;
                                object.dispatchTime = null;
                                object.responseTime = null;
                                object.responseStatus = null;
                            }
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime"))
                                object.scheduleTime = $root.google.protobuf.Timestamp.toObject(message.scheduleTime, options);
                            if (message.dispatchTime != null && message.hasOwnProperty("dispatchTime"))
                                object.dispatchTime = $root.google.protobuf.Timestamp.toObject(message.dispatchTime, options);
                            if (message.responseTime != null && message.hasOwnProperty("responseTime"))
                                object.responseTime = $root.google.protobuf.Timestamp.toObject(message.responseTime, options);
                            if (message.responseStatus != null && message.hasOwnProperty("responseStatus"))
                                object.responseStatus = $root.google.rpc.Status.toObject(message.responseStatus, options);
                            return object;
                        };
    
                        /**
                         * Converts this Attempt to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.Attempt
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Attempt.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Attempt
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.Attempt
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Attempt.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.Attempt";
                        };
    
                        return Attempt;
                    })();
    
                    return v2;
                })();
    
                tasks.v2beta2 = (function() {
    
                    /**
                     * Namespace v2beta2.
                     * @memberof google.cloud.tasks
                     * @namespace
                     */
                    var v2beta2 = {};
    
                    v2beta2.CloudTasks = (function() {
    
                        /**
                         * Constructs a new CloudTasks service.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a CloudTasks
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function CloudTasks(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (CloudTasks.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = CloudTasks;
    
                        /**
                         * Creates new CloudTasks service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {CloudTasks} RPC service. Useful where requests and/or responses are streamed.
                         */
                        CloudTasks.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|listQueues}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef ListQueuesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta2.ListQueuesResponse} [response] ListQueuesResponse
                         */
    
                        /**
                         * Calls ListQueues.
                         * @function listQueues
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IListQueuesRequest} request ListQueuesRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.ListQueuesCallback} callback Node-style callback called with the error, if any, and ListQueuesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.listQueues = function listQueues(request, callback) {
                            return this.rpcCall(listQueues, $root.google.cloud.tasks.v2beta2.ListQueuesRequest, $root.google.cloud.tasks.v2beta2.ListQueuesResponse, request, callback);
                        }, "name", { value: "ListQueues" });
    
                        /**
                         * Calls ListQueues.
                         * @function listQueues
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IListQueuesRequest} request ListQueuesRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta2.ListQueuesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|getQueue}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef GetQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta2.Queue} [response] Queue
                         */
    
                        /**
                         * Calls GetQueue.
                         * @function getQueue
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IGetQueueRequest} request GetQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.GetQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.getQueue = function getQueue(request, callback) {
                            return this.rpcCall(getQueue, $root.google.cloud.tasks.v2beta2.GetQueueRequest, $root.google.cloud.tasks.v2beta2.Queue, request, callback);
                        }, "name", { value: "GetQueue" });
    
                        /**
                         * Calls GetQueue.
                         * @function getQueue
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IGetQueueRequest} request GetQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta2.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|createQueue}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef CreateQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta2.Queue} [response] Queue
                         */
    
                        /**
                         * Calls CreateQueue.
                         * @function createQueue
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.ICreateQueueRequest} request CreateQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.CreateQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.createQueue = function createQueue(request, callback) {
                            return this.rpcCall(createQueue, $root.google.cloud.tasks.v2beta2.CreateQueueRequest, $root.google.cloud.tasks.v2beta2.Queue, request, callback);
                        }, "name", { value: "CreateQueue" });
    
                        /**
                         * Calls CreateQueue.
                         * @function createQueue
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.ICreateQueueRequest} request CreateQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta2.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|updateQueue}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef UpdateQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta2.Queue} [response] Queue
                         */
    
                        /**
                         * Calls UpdateQueue.
                         * @function updateQueue
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IUpdateQueueRequest} request UpdateQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.UpdateQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.updateQueue = function updateQueue(request, callback) {
                            return this.rpcCall(updateQueue, $root.google.cloud.tasks.v2beta2.UpdateQueueRequest, $root.google.cloud.tasks.v2beta2.Queue, request, callback);
                        }, "name", { value: "UpdateQueue" });
    
                        /**
                         * Calls UpdateQueue.
                         * @function updateQueue
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IUpdateQueueRequest} request UpdateQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta2.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|deleteQueue}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef DeleteQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteQueue.
                         * @function deleteQueue
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IDeleteQueueRequest} request DeleteQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.DeleteQueueCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.deleteQueue = function deleteQueue(request, callback) {
                            return this.rpcCall(deleteQueue, $root.google.cloud.tasks.v2beta2.DeleteQueueRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteQueue" });
    
                        /**
                         * Calls DeleteQueue.
                         * @function deleteQueue
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IDeleteQueueRequest} request DeleteQueueRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|purgeQueue}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef PurgeQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta2.Queue} [response] Queue
                         */
    
                        /**
                         * Calls PurgeQueue.
                         * @function purgeQueue
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IPurgeQueueRequest} request PurgeQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.PurgeQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.purgeQueue = function purgeQueue(request, callback) {
                            return this.rpcCall(purgeQueue, $root.google.cloud.tasks.v2beta2.PurgeQueueRequest, $root.google.cloud.tasks.v2beta2.Queue, request, callback);
                        }, "name", { value: "PurgeQueue" });
    
                        /**
                         * Calls PurgeQueue.
                         * @function purgeQueue
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IPurgeQueueRequest} request PurgeQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta2.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|pauseQueue}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef PauseQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta2.Queue} [response] Queue
                         */
    
                        /**
                         * Calls PauseQueue.
                         * @function pauseQueue
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IPauseQueueRequest} request PauseQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.PauseQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.pauseQueue = function pauseQueue(request, callback) {
                            return this.rpcCall(pauseQueue, $root.google.cloud.tasks.v2beta2.PauseQueueRequest, $root.google.cloud.tasks.v2beta2.Queue, request, callback);
                        }, "name", { value: "PauseQueue" });
    
                        /**
                         * Calls PauseQueue.
                         * @function pauseQueue
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IPauseQueueRequest} request PauseQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta2.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|resumeQueue}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef ResumeQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta2.Queue} [response] Queue
                         */
    
                        /**
                         * Calls ResumeQueue.
                         * @function resumeQueue
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IResumeQueueRequest} request ResumeQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.ResumeQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.resumeQueue = function resumeQueue(request, callback) {
                            return this.rpcCall(resumeQueue, $root.google.cloud.tasks.v2beta2.ResumeQueueRequest, $root.google.cloud.tasks.v2beta2.Queue, request, callback);
                        }, "name", { value: "ResumeQueue" });
    
                        /**
                         * Calls ResumeQueue.
                         * @function resumeQueue
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IResumeQueueRequest} request ResumeQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta2.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|uploadQueueYaml}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef UploadQueueYamlCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls UploadQueueYaml.
                         * @function uploadQueueYaml
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IUploadQueueYamlRequest} request UploadQueueYamlRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.UploadQueueYamlCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.uploadQueueYaml = function uploadQueueYaml(request, callback) {
                            return this.rpcCall(uploadQueueYaml, $root.google.cloud.tasks.v2beta2.UploadQueueYamlRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "UploadQueueYaml" });
    
                        /**
                         * Calls UploadQueueYaml.
                         * @function uploadQueueYaml
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IUploadQueueYamlRequest} request UploadQueueYamlRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|getIamPolicy}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef GetIamPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.iam.v1.Policy} [response] Policy
                         */
    
                        /**
                         * Calls GetIamPolicy.
                         * @function getIamPolicy
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.iam.v1.IGetIamPolicyRequest} request GetIamPolicyRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.GetIamPolicyCallback} callback Node-style callback called with the error, if any, and Policy
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.getIamPolicy = function getIamPolicy(request, callback) {
                            return this.rpcCall(getIamPolicy, $root.google.iam.v1.GetIamPolicyRequest, $root.google.iam.v1.Policy, request, callback);
                        }, "name", { value: "GetIamPolicy" });
    
                        /**
                         * Calls GetIamPolicy.
                         * @function getIamPolicy
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.iam.v1.IGetIamPolicyRequest} request GetIamPolicyRequest message or plain object
                         * @returns {Promise<google.iam.v1.Policy>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|setIamPolicy}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef SetIamPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.iam.v1.Policy} [response] Policy
                         */
    
                        /**
                         * Calls SetIamPolicy.
                         * @function setIamPolicy
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.iam.v1.ISetIamPolicyRequest} request SetIamPolicyRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.SetIamPolicyCallback} callback Node-style callback called with the error, if any, and Policy
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.setIamPolicy = function setIamPolicy(request, callback) {
                            return this.rpcCall(setIamPolicy, $root.google.iam.v1.SetIamPolicyRequest, $root.google.iam.v1.Policy, request, callback);
                        }, "name", { value: "SetIamPolicy" });
    
                        /**
                         * Calls SetIamPolicy.
                         * @function setIamPolicy
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.iam.v1.ISetIamPolicyRequest} request SetIamPolicyRequest message or plain object
                         * @returns {Promise<google.iam.v1.Policy>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|testIamPermissions}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef TestIamPermissionsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.iam.v1.TestIamPermissionsResponse} [response] TestIamPermissionsResponse
                         */
    
                        /**
                         * Calls TestIamPermissions.
                         * @function testIamPermissions
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.iam.v1.ITestIamPermissionsRequest} request TestIamPermissionsRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.TestIamPermissionsCallback} callback Node-style callback called with the error, if any, and TestIamPermissionsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.testIamPermissions = function testIamPermissions(request, callback) {
                            return this.rpcCall(testIamPermissions, $root.google.iam.v1.TestIamPermissionsRequest, $root.google.iam.v1.TestIamPermissionsResponse, request, callback);
                        }, "name", { value: "TestIamPermissions" });
    
                        /**
                         * Calls TestIamPermissions.
                         * @function testIamPermissions
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.iam.v1.ITestIamPermissionsRequest} request TestIamPermissionsRequest message or plain object
                         * @returns {Promise<google.iam.v1.TestIamPermissionsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|listTasks}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef ListTasksCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta2.ListTasksResponse} [response] ListTasksResponse
                         */
    
                        /**
                         * Calls ListTasks.
                         * @function listTasks
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IListTasksRequest} request ListTasksRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.ListTasksCallback} callback Node-style callback called with the error, if any, and ListTasksResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.listTasks = function listTasks(request, callback) {
                            return this.rpcCall(listTasks, $root.google.cloud.tasks.v2beta2.ListTasksRequest, $root.google.cloud.tasks.v2beta2.ListTasksResponse, request, callback);
                        }, "name", { value: "ListTasks" });
    
                        /**
                         * Calls ListTasks.
                         * @function listTasks
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IListTasksRequest} request ListTasksRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta2.ListTasksResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|getTask}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef GetTaskCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta2.Task} [response] Task
                         */
    
                        /**
                         * Calls GetTask.
                         * @function getTask
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IGetTaskRequest} request GetTaskRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.GetTaskCallback} callback Node-style callback called with the error, if any, and Task
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.getTask = function getTask(request, callback) {
                            return this.rpcCall(getTask, $root.google.cloud.tasks.v2beta2.GetTaskRequest, $root.google.cloud.tasks.v2beta2.Task, request, callback);
                        }, "name", { value: "GetTask" });
    
                        /**
                         * Calls GetTask.
                         * @function getTask
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IGetTaskRequest} request GetTaskRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta2.Task>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|createTask}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef CreateTaskCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta2.Task} [response] Task
                         */
    
                        /**
                         * Calls CreateTask.
                         * @function createTask
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.ICreateTaskRequest} request CreateTaskRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.CreateTaskCallback} callback Node-style callback called with the error, if any, and Task
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.createTask = function createTask(request, callback) {
                            return this.rpcCall(createTask, $root.google.cloud.tasks.v2beta2.CreateTaskRequest, $root.google.cloud.tasks.v2beta2.Task, request, callback);
                        }, "name", { value: "CreateTask" });
    
                        /**
                         * Calls CreateTask.
                         * @function createTask
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.ICreateTaskRequest} request CreateTaskRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta2.Task>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|deleteTask}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef DeleteTaskCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteTask.
                         * @function deleteTask
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IDeleteTaskRequest} request DeleteTaskRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.DeleteTaskCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.deleteTask = function deleteTask(request, callback) {
                            return this.rpcCall(deleteTask, $root.google.cloud.tasks.v2beta2.DeleteTaskRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteTask" });
    
                        /**
                         * Calls DeleteTask.
                         * @function deleteTask
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IDeleteTaskRequest} request DeleteTaskRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|leaseTasks}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef LeaseTasksCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta2.LeaseTasksResponse} [response] LeaseTasksResponse
                         */
    
                        /**
                         * Calls LeaseTasks.
                         * @function leaseTasks
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.ILeaseTasksRequest} request LeaseTasksRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.LeaseTasksCallback} callback Node-style callback called with the error, if any, and LeaseTasksResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.leaseTasks = function leaseTasks(request, callback) {
                            return this.rpcCall(leaseTasks, $root.google.cloud.tasks.v2beta2.LeaseTasksRequest, $root.google.cloud.tasks.v2beta2.LeaseTasksResponse, request, callback);
                        }, "name", { value: "LeaseTasks" });
    
                        /**
                         * Calls LeaseTasks.
                         * @function leaseTasks
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.ILeaseTasksRequest} request LeaseTasksRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta2.LeaseTasksResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|acknowledgeTask}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef AcknowledgeTaskCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls AcknowledgeTask.
                         * @function acknowledgeTask
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IAcknowledgeTaskRequest} request AcknowledgeTaskRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.AcknowledgeTaskCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.acknowledgeTask = function acknowledgeTask(request, callback) {
                            return this.rpcCall(acknowledgeTask, $root.google.cloud.tasks.v2beta2.AcknowledgeTaskRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "AcknowledgeTask" });
    
                        /**
                         * Calls AcknowledgeTask.
                         * @function acknowledgeTask
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IAcknowledgeTaskRequest} request AcknowledgeTaskRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|renewLease}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef RenewLeaseCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta2.Task} [response] Task
                         */
    
                        /**
                         * Calls RenewLease.
                         * @function renewLease
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IRenewLeaseRequest} request RenewLeaseRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.RenewLeaseCallback} callback Node-style callback called with the error, if any, and Task
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.renewLease = function renewLease(request, callback) {
                            return this.rpcCall(renewLease, $root.google.cloud.tasks.v2beta2.RenewLeaseRequest, $root.google.cloud.tasks.v2beta2.Task, request, callback);
                        }, "name", { value: "RenewLease" });
    
                        /**
                         * Calls RenewLease.
                         * @function renewLease
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IRenewLeaseRequest} request RenewLeaseRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta2.Task>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|cancelLease}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef CancelLeaseCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta2.Task} [response] Task
                         */
    
                        /**
                         * Calls CancelLease.
                         * @function cancelLease
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.ICancelLeaseRequest} request CancelLeaseRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.CancelLeaseCallback} callback Node-style callback called with the error, if any, and Task
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.cancelLease = function cancelLease(request, callback) {
                            return this.rpcCall(cancelLease, $root.google.cloud.tasks.v2beta2.CancelLeaseRequest, $root.google.cloud.tasks.v2beta2.Task, request, callback);
                        }, "name", { value: "CancelLease" });
    
                        /**
                         * Calls CancelLease.
                         * @function cancelLease
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.ICancelLeaseRequest} request CancelLeaseRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta2.Task>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|runTask}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef RunTaskCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta2.Task} [response] Task
                         */
    
                        /**
                         * Calls RunTask.
                         * @function runTask
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IRunTaskRequest} request RunTaskRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.RunTaskCallback} callback Node-style callback called with the error, if any, and Task
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.runTask = function runTask(request, callback) {
                            return this.rpcCall(runTask, $root.google.cloud.tasks.v2beta2.RunTaskRequest, $root.google.cloud.tasks.v2beta2.Task, request, callback);
                        }, "name", { value: "RunTask" });
    
                        /**
                         * Calls RunTask.
                         * @function runTask
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IRunTaskRequest} request RunTaskRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta2.Task>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|bufferTask}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef BufferTaskCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta2.BufferTaskResponse} [response] BufferTaskResponse
                         */
    
                        /**
                         * Calls BufferTask.
                         * @function bufferTask
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IBufferTaskRequest} request BufferTaskRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.BufferTaskCallback} callback Node-style callback called with the error, if any, and BufferTaskResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.bufferTask = function bufferTask(request, callback) {
                            return this.rpcCall(bufferTask, $root.google.cloud.tasks.v2beta2.BufferTaskRequest, $root.google.cloud.tasks.v2beta2.BufferTaskResponse, request, callback);
                        }, "name", { value: "BufferTask" });
    
                        /**
                         * Calls BufferTask.
                         * @function bufferTask
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IBufferTaskRequest} request BufferTaskRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta2.BufferTaskResponse>} Promise
                         * @variation 2
                         */
    
                        return CloudTasks;
                    })();
    
                    v2beta2.ListQueuesRequest = (function() {
    
                        /**
                         * Properties of a ListQueuesRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IListQueuesRequest
                         * @property {string|null} [parent] ListQueuesRequest parent
                         * @property {string|null} [filter] ListQueuesRequest filter
                         * @property {number|null} [pageSize] ListQueuesRequest pageSize
                         * @property {string|null} [pageToken] ListQueuesRequest pageToken
                         * @property {google.protobuf.IFieldMask|null} [readMask] ListQueuesRequest readMask
                         */
    
                        /**
                         * Constructs a new ListQueuesRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a ListQueuesRequest.
                         * @implements IListQueuesRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IListQueuesRequest=} [properties] Properties to set
                         */
                        function ListQueuesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListQueuesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesRequest
                         * @instance
                         */
                        ListQueuesRequest.prototype.parent = "";
    
                        /**
                         * ListQueuesRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesRequest
                         * @instance
                         */
                        ListQueuesRequest.prototype.filter = "";
    
                        /**
                         * ListQueuesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesRequest
                         * @instance
                         */
                        ListQueuesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListQueuesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesRequest
                         * @instance
                         */
                        ListQueuesRequest.prototype.pageToken = "";
    
                        /**
                         * ListQueuesRequest readMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} readMask
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesRequest
                         * @instance
                         */
                        ListQueuesRequest.prototype.readMask = null;
    
                        /**
                         * Creates a new ListQueuesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IListQueuesRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.ListQueuesRequest} ListQueuesRequest instance
                         */
                        ListQueuesRequest.create = function create(properties) {
                            return new ListQueuesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListQueuesRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.ListQueuesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IListQueuesRequest} message ListQueuesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListQueuesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.filter);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.pageToken);
                            if (message.readMask != null && Object.hasOwnProperty.call(message, "readMask"))
                                $root.google.protobuf.FieldMask.encode(message.readMask, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListQueuesRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.ListQueuesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IListQueuesRequest} message ListQueuesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListQueuesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListQueuesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.ListQueuesRequest} ListQueuesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListQueuesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.ListQueuesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.readMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListQueuesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.ListQueuesRequest} ListQueuesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListQueuesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListQueuesRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListQueuesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.readMask != null && message.hasOwnProperty("readMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.readMask);
                                if (error)
                                    return "readMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListQueuesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.ListQueuesRequest} ListQueuesRequest
                         */
                        ListQueuesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.ListQueuesRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.ListQueuesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.readMask != null) {
                                if (typeof object.readMask !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.ListQueuesRequest.readMask: object expected");
                                message.readMask = $root.google.protobuf.FieldMask.fromObject(object.readMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListQueuesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ListQueuesRequest} message ListQueuesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListQueuesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.filter = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.readMask = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.readMask != null && message.hasOwnProperty("readMask"))
                                object.readMask = $root.google.protobuf.FieldMask.toObject(message.readMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this ListQueuesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListQueuesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListQueuesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListQueuesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.ListQueuesRequest";
                        };
    
                        return ListQueuesRequest;
                    })();
    
                    v2beta2.ListQueuesResponse = (function() {
    
                        /**
                         * Properties of a ListQueuesResponse.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IListQueuesResponse
                         * @property {Array.<google.cloud.tasks.v2beta2.IQueue>|null} [queues] ListQueuesResponse queues
                         * @property {string|null} [nextPageToken] ListQueuesResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListQueuesResponse.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a ListQueuesResponse.
                         * @implements IListQueuesResponse
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IListQueuesResponse=} [properties] Properties to set
                         */
                        function ListQueuesResponse(properties) {
                            this.queues = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListQueuesResponse queues.
                         * @member {Array.<google.cloud.tasks.v2beta2.IQueue>} queues
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesResponse
                         * @instance
                         */
                        ListQueuesResponse.prototype.queues = $util.emptyArray;
    
                        /**
                         * ListQueuesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesResponse
                         * @instance
                         */
                        ListQueuesResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListQueuesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IListQueuesResponse=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.ListQueuesResponse} ListQueuesResponse instance
                         */
                        ListQueuesResponse.create = function create(properties) {
                            return new ListQueuesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListQueuesResponse message. Does not implicitly {@link google.cloud.tasks.v2beta2.ListQueuesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IListQueuesResponse} message ListQueuesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListQueuesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.queues != null && message.queues.length)
                                for (var i = 0; i < message.queues.length; ++i)
                                    $root.google.cloud.tasks.v2beta2.Queue.encode(message.queues[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListQueuesResponse message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.ListQueuesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IListQueuesResponse} message ListQueuesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListQueuesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListQueuesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.ListQueuesResponse} ListQueuesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListQueuesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.ListQueuesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.queues && message.queues.length))
                                            message.queues = [];
                                        message.queues.push($root.google.cloud.tasks.v2beta2.Queue.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListQueuesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.ListQueuesResponse} ListQueuesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListQueuesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListQueuesResponse message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListQueuesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.queues != null && message.hasOwnProperty("queues")) {
                                if (!Array.isArray(message.queues))
                                    return "queues: array expected";
                                for (var i = 0; i < message.queues.length; ++i) {
                                    var error = $root.google.cloud.tasks.v2beta2.Queue.verify(message.queues[i]);
                                    if (error)
                                        return "queues." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListQueuesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.ListQueuesResponse} ListQueuesResponse
                         */
                        ListQueuesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.ListQueuesResponse)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.ListQueuesResponse();
                            if (object.queues) {
                                if (!Array.isArray(object.queues))
                                    throw TypeError(".google.cloud.tasks.v2beta2.ListQueuesResponse.queues: array expected");
                                message.queues = [];
                                for (var i = 0; i < object.queues.length; ++i) {
                                    if (typeof object.queues[i] !== "object")
                                        throw TypeError(".google.cloud.tasks.v2beta2.ListQueuesResponse.queues: object expected");
                                    message.queues[i] = $root.google.cloud.tasks.v2beta2.Queue.fromObject(object.queues[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListQueuesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ListQueuesResponse} message ListQueuesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListQueuesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.queues = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.queues && message.queues.length) {
                                object.queues = [];
                                for (var j = 0; j < message.queues.length; ++j)
                                    object.queues[j] = $root.google.cloud.tasks.v2beta2.Queue.toObject(message.queues[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListQueuesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListQueuesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListQueuesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListQueuesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.ListQueuesResponse";
                        };
    
                        return ListQueuesResponse;
                    })();
    
                    v2beta2.GetQueueRequest = (function() {
    
                        /**
                         * Properties of a GetQueueRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IGetQueueRequest
                         * @property {string|null} [name] GetQueueRequest name
                         * @property {google.protobuf.IFieldMask|null} [readMask] GetQueueRequest readMask
                         */
    
                        /**
                         * Constructs a new GetQueueRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a GetQueueRequest.
                         * @implements IGetQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IGetQueueRequest=} [properties] Properties to set
                         */
                        function GetQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetQueueRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta2.GetQueueRequest
                         * @instance
                         */
                        GetQueueRequest.prototype.name = "";
    
                        /**
                         * GetQueueRequest readMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} readMask
                         * @memberof google.cloud.tasks.v2beta2.GetQueueRequest
                         * @instance
                         */
                        GetQueueRequest.prototype.readMask = null;
    
                        /**
                         * Creates a new GetQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.GetQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IGetQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.GetQueueRequest} GetQueueRequest instance
                         */
                        GetQueueRequest.create = function create(properties) {
                            return new GetQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.GetQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.GetQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IGetQueueRequest} message GetQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.readMask != null && Object.hasOwnProperty.call(message, "readMask"))
                                $root.google.protobuf.FieldMask.encode(message.readMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.GetQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.GetQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IGetQueueRequest} message GetQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.GetQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.GetQueueRequest} GetQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.GetQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.readMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.GetQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.GetQueueRequest} GetQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.GetQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.readMask != null && message.hasOwnProperty("readMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.readMask);
                                if (error)
                                    return "readMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GetQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.GetQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.GetQueueRequest} GetQueueRequest
                         */
                        GetQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.GetQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.GetQueueRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.readMask != null) {
                                if (typeof object.readMask !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.GetQueueRequest.readMask: object expected");
                                message.readMask = $root.google.protobuf.FieldMask.fromObject(object.readMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.GetQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.GetQueueRequest} message GetQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.readMask = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.readMask != null && message.hasOwnProperty("readMask"))
                                object.readMask = $root.google.protobuf.FieldMask.toObject(message.readMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this GetQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.GetQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.GetQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.GetQueueRequest";
                        };
    
                        return GetQueueRequest;
                    })();
    
                    v2beta2.CreateQueueRequest = (function() {
    
                        /**
                         * Properties of a CreateQueueRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface ICreateQueueRequest
                         * @property {string|null} [parent] CreateQueueRequest parent
                         * @property {google.cloud.tasks.v2beta2.IQueue|null} [queue] CreateQueueRequest queue
                         */
    
                        /**
                         * Constructs a new CreateQueueRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a CreateQueueRequest.
                         * @implements ICreateQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.ICreateQueueRequest=} [properties] Properties to set
                         */
                        function CreateQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateQueueRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.tasks.v2beta2.CreateQueueRequest
                         * @instance
                         */
                        CreateQueueRequest.prototype.parent = "";
    
                        /**
                         * CreateQueueRequest queue.
                         * @member {google.cloud.tasks.v2beta2.IQueue|null|undefined} queue
                         * @memberof google.cloud.tasks.v2beta2.CreateQueueRequest
                         * @instance
                         */
                        CreateQueueRequest.prototype.queue = null;
    
                        /**
                         * Creates a new CreateQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.CreateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ICreateQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.CreateQueueRequest} CreateQueueRequest instance
                         */
                        CreateQueueRequest.create = function create(properties) {
                            return new CreateQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.CreateQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.CreateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ICreateQueueRequest} message CreateQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.queue != null && Object.hasOwnProperty.call(message, "queue"))
                                $root.google.cloud.tasks.v2beta2.Queue.encode(message.queue, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.CreateQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.CreateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ICreateQueueRequest} message CreateQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.CreateQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.CreateQueueRequest} CreateQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.CreateQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.queue = $root.google.cloud.tasks.v2beta2.Queue.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.CreateQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.CreateQueueRequest} CreateQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.CreateQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.queue != null && message.hasOwnProperty("queue")) {
                                var error = $root.google.cloud.tasks.v2beta2.Queue.verify(message.queue);
                                if (error)
                                    return "queue." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.CreateQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.CreateQueueRequest} CreateQueueRequest
                         */
                        CreateQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.CreateQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.CreateQueueRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.queue != null) {
                                if (typeof object.queue !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.CreateQueueRequest.queue: object expected");
                                message.queue = $root.google.cloud.tasks.v2beta2.Queue.fromObject(object.queue);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.CreateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.CreateQueueRequest} message CreateQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.queue = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.queue != null && message.hasOwnProperty("queue"))
                                object.queue = $root.google.cloud.tasks.v2beta2.Queue.toObject(message.queue, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.CreateQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.CreateQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.CreateQueueRequest";
                        };
    
                        return CreateQueueRequest;
                    })();
    
                    v2beta2.UpdateQueueRequest = (function() {
    
                        /**
                         * Properties of an UpdateQueueRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IUpdateQueueRequest
                         * @property {google.cloud.tasks.v2beta2.IQueue|null} [queue] UpdateQueueRequest queue
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateQueueRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateQueueRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents an UpdateQueueRequest.
                         * @implements IUpdateQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IUpdateQueueRequest=} [properties] Properties to set
                         */
                        function UpdateQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateQueueRequest queue.
                         * @member {google.cloud.tasks.v2beta2.IQueue|null|undefined} queue
                         * @memberof google.cloud.tasks.v2beta2.UpdateQueueRequest
                         * @instance
                         */
                        UpdateQueueRequest.prototype.queue = null;
    
                        /**
                         * UpdateQueueRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.tasks.v2beta2.UpdateQueueRequest
                         * @instance
                         */
                        UpdateQueueRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.UpdateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IUpdateQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.UpdateQueueRequest} UpdateQueueRequest instance
                         */
                        UpdateQueueRequest.create = function create(properties) {
                            return new UpdateQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.UpdateQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.UpdateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IUpdateQueueRequest} message UpdateQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.queue != null && Object.hasOwnProperty.call(message, "queue"))
                                $root.google.cloud.tasks.v2beta2.Queue.encode(message.queue, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.UpdateQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.UpdateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IUpdateQueueRequest} message UpdateQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.UpdateQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.UpdateQueueRequest} UpdateQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.UpdateQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.queue = $root.google.cloud.tasks.v2beta2.Queue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.UpdateQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.UpdateQueueRequest} UpdateQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.UpdateQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.queue != null && message.hasOwnProperty("queue")) {
                                var error = $root.google.cloud.tasks.v2beta2.Queue.verify(message.queue);
                                if (error)
                                    return "queue." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.UpdateQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.UpdateQueueRequest} UpdateQueueRequest
                         */
                        UpdateQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.UpdateQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.UpdateQueueRequest();
                            if (object.queue != null) {
                                if (typeof object.queue !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.UpdateQueueRequest.queue: object expected");
                                message.queue = $root.google.cloud.tasks.v2beta2.Queue.fromObject(object.queue);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.UpdateQueueRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.UpdateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.UpdateQueueRequest} message UpdateQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.queue = null;
                                object.updateMask = null;
                            }
                            if (message.queue != null && message.hasOwnProperty("queue"))
                                object.queue = $root.google.cloud.tasks.v2beta2.Queue.toObject(message.queue, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.UpdateQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.UpdateQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.UpdateQueueRequest";
                        };
    
                        return UpdateQueueRequest;
                    })();
    
                    v2beta2.DeleteQueueRequest = (function() {
    
                        /**
                         * Properties of a DeleteQueueRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IDeleteQueueRequest
                         * @property {string|null} [name] DeleteQueueRequest name
                         */
    
                        /**
                         * Constructs a new DeleteQueueRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a DeleteQueueRequest.
                         * @implements IDeleteQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IDeleteQueueRequest=} [properties] Properties to set
                         */
                        function DeleteQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteQueueRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta2.DeleteQueueRequest
                         * @instance
                         */
                        DeleteQueueRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.DeleteQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IDeleteQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.DeleteQueueRequest} DeleteQueueRequest instance
                         */
                        DeleteQueueRequest.create = function create(properties) {
                            return new DeleteQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.DeleteQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.DeleteQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IDeleteQueueRequest} message DeleteQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.DeleteQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.DeleteQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IDeleteQueueRequest} message DeleteQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.DeleteQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.DeleteQueueRequest} DeleteQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.DeleteQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.DeleteQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.DeleteQueueRequest} DeleteQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.DeleteQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.DeleteQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.DeleteQueueRequest} DeleteQueueRequest
                         */
                        DeleteQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.DeleteQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.DeleteQueueRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.DeleteQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.DeleteQueueRequest} message DeleteQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.DeleteQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.DeleteQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.DeleteQueueRequest";
                        };
    
                        return DeleteQueueRequest;
                    })();
    
                    v2beta2.PurgeQueueRequest = (function() {
    
                        /**
                         * Properties of a PurgeQueueRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IPurgeQueueRequest
                         * @property {string|null} [name] PurgeQueueRequest name
                         */
    
                        /**
                         * Constructs a new PurgeQueueRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a PurgeQueueRequest.
                         * @implements IPurgeQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IPurgeQueueRequest=} [properties] Properties to set
                         */
                        function PurgeQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PurgeQueueRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta2.PurgeQueueRequest
                         * @instance
                         */
                        PurgeQueueRequest.prototype.name = "";
    
                        /**
                         * Creates a new PurgeQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.PurgeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IPurgeQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.PurgeQueueRequest} PurgeQueueRequest instance
                         */
                        PurgeQueueRequest.create = function create(properties) {
                            return new PurgeQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified PurgeQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.PurgeQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.PurgeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IPurgeQueueRequest} message PurgeQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PurgeQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PurgeQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.PurgeQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.PurgeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IPurgeQueueRequest} message PurgeQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PurgeQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PurgeQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.PurgeQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.PurgeQueueRequest} PurgeQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PurgeQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.PurgeQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PurgeQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.PurgeQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.PurgeQueueRequest} PurgeQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PurgeQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PurgeQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.PurgeQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PurgeQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PurgeQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.PurgeQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.PurgeQueueRequest} PurgeQueueRequest
                         */
                        PurgeQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.PurgeQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.PurgeQueueRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PurgeQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.PurgeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.PurgeQueueRequest} message PurgeQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PurgeQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this PurgeQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.PurgeQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PurgeQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PurgeQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.PurgeQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PurgeQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.PurgeQueueRequest";
                        };
    
                        return PurgeQueueRequest;
                    })();
    
                    v2beta2.PauseQueueRequest = (function() {
    
                        /**
                         * Properties of a PauseQueueRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IPauseQueueRequest
                         * @property {string|null} [name] PauseQueueRequest name
                         */
    
                        /**
                         * Constructs a new PauseQueueRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a PauseQueueRequest.
                         * @implements IPauseQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IPauseQueueRequest=} [properties] Properties to set
                         */
                        function PauseQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PauseQueueRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta2.PauseQueueRequest
                         * @instance
                         */
                        PauseQueueRequest.prototype.name = "";
    
                        /**
                         * Creates a new PauseQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.PauseQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IPauseQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.PauseQueueRequest} PauseQueueRequest instance
                         */
                        PauseQueueRequest.create = function create(properties) {
                            return new PauseQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified PauseQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.PauseQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.PauseQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IPauseQueueRequest} message PauseQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PauseQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PauseQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.PauseQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.PauseQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IPauseQueueRequest} message PauseQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PauseQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PauseQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.PauseQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.PauseQueueRequest} PauseQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PauseQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.PauseQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PauseQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.PauseQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.PauseQueueRequest} PauseQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PauseQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PauseQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.PauseQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PauseQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PauseQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.PauseQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.PauseQueueRequest} PauseQueueRequest
                         */
                        PauseQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.PauseQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.PauseQueueRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PauseQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.PauseQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.PauseQueueRequest} message PauseQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PauseQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this PauseQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.PauseQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PauseQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PauseQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.PauseQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PauseQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.PauseQueueRequest";
                        };
    
                        return PauseQueueRequest;
                    })();
    
                    v2beta2.ResumeQueueRequest = (function() {
    
                        /**
                         * Properties of a ResumeQueueRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IResumeQueueRequest
                         * @property {string|null} [name] ResumeQueueRequest name
                         */
    
                        /**
                         * Constructs a new ResumeQueueRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a ResumeQueueRequest.
                         * @implements IResumeQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IResumeQueueRequest=} [properties] Properties to set
                         */
                        function ResumeQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ResumeQueueRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta2.ResumeQueueRequest
                         * @instance
                         */
                        ResumeQueueRequest.prototype.name = "";
    
                        /**
                         * Creates a new ResumeQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.ResumeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IResumeQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.ResumeQueueRequest} ResumeQueueRequest instance
                         */
                        ResumeQueueRequest.create = function create(properties) {
                            return new ResumeQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ResumeQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.ResumeQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.ResumeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IResumeQueueRequest} message ResumeQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResumeQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ResumeQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.ResumeQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.ResumeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IResumeQueueRequest} message ResumeQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResumeQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ResumeQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.ResumeQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.ResumeQueueRequest} ResumeQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResumeQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.ResumeQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ResumeQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.ResumeQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.ResumeQueueRequest} ResumeQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResumeQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ResumeQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.ResumeQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ResumeQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ResumeQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.ResumeQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.ResumeQueueRequest} ResumeQueueRequest
                         */
                        ResumeQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.ResumeQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.ResumeQueueRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ResumeQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.ResumeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ResumeQueueRequest} message ResumeQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ResumeQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this ResumeQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.ResumeQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ResumeQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ResumeQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.ResumeQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ResumeQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.ResumeQueueRequest";
                        };
    
                        return ResumeQueueRequest;
                    })();
    
                    v2beta2.UploadQueueYamlRequest = (function() {
    
                        /**
                         * Properties of an UploadQueueYamlRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IUploadQueueYamlRequest
                         * @property {string|null} [appId] UploadQueueYamlRequest appId
                         * @property {google.api.IHttpBody|null} [httpBody] UploadQueueYamlRequest httpBody
                         */
    
                        /**
                         * Constructs a new UploadQueueYamlRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents an UploadQueueYamlRequest.
                         * @implements IUploadQueueYamlRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IUploadQueueYamlRequest=} [properties] Properties to set
                         */
                        function UploadQueueYamlRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UploadQueueYamlRequest appId.
                         * @member {string} appId
                         * @memberof google.cloud.tasks.v2beta2.UploadQueueYamlRequest
                         * @instance
                         */
                        UploadQueueYamlRequest.prototype.appId = "";
    
                        /**
                         * UploadQueueYamlRequest httpBody.
                         * @member {google.api.IHttpBody|null|undefined} httpBody
                         * @memberof google.cloud.tasks.v2beta2.UploadQueueYamlRequest
                         * @instance
                         */
                        UploadQueueYamlRequest.prototype.httpBody = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * UploadQueueYamlRequest _httpBody.
                         * @member {"httpBody"|undefined} _httpBody
                         * @memberof google.cloud.tasks.v2beta2.UploadQueueYamlRequest
                         * @instance
                         */
                        Object.defineProperty(UploadQueueYamlRequest.prototype, "_httpBody", {
                            get: $util.oneOfGetter($oneOfFields = ["httpBody"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new UploadQueueYamlRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.UploadQueueYamlRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IUploadQueueYamlRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.UploadQueueYamlRequest} UploadQueueYamlRequest instance
                         */
                        UploadQueueYamlRequest.create = function create(properties) {
                            return new UploadQueueYamlRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UploadQueueYamlRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.UploadQueueYamlRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.UploadQueueYamlRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IUploadQueueYamlRequest} message UploadQueueYamlRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UploadQueueYamlRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.appId != null && Object.hasOwnProperty.call(message, "appId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.appId);
                            if (message.httpBody != null && Object.hasOwnProperty.call(message, "httpBody"))
                                $root.google.api.HttpBody.encode(message.httpBody, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UploadQueueYamlRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.UploadQueueYamlRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.UploadQueueYamlRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IUploadQueueYamlRequest} message UploadQueueYamlRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UploadQueueYamlRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UploadQueueYamlRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.UploadQueueYamlRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.UploadQueueYamlRequest} UploadQueueYamlRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UploadQueueYamlRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.UploadQueueYamlRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.appId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.httpBody = $root.google.api.HttpBody.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UploadQueueYamlRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.UploadQueueYamlRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.UploadQueueYamlRequest} UploadQueueYamlRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UploadQueueYamlRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UploadQueueYamlRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.UploadQueueYamlRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UploadQueueYamlRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.appId != null && message.hasOwnProperty("appId"))
                                if (!$util.isString(message.appId))
                                    return "appId: string expected";
                            if (message.httpBody != null && message.hasOwnProperty("httpBody")) {
                                properties._httpBody = 1;
                                {
                                    var error = $root.google.api.HttpBody.verify(message.httpBody);
                                    if (error)
                                        return "httpBody." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UploadQueueYamlRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.UploadQueueYamlRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.UploadQueueYamlRequest} UploadQueueYamlRequest
                         */
                        UploadQueueYamlRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.UploadQueueYamlRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.UploadQueueYamlRequest();
                            if (object.appId != null)
                                message.appId = String(object.appId);
                            if (object.httpBody != null) {
                                if (typeof object.httpBody !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.UploadQueueYamlRequest.httpBody: object expected");
                                message.httpBody = $root.google.api.HttpBody.fromObject(object.httpBody);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UploadQueueYamlRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.UploadQueueYamlRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.UploadQueueYamlRequest} message UploadQueueYamlRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UploadQueueYamlRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.appId = "";
                            if (message.appId != null && message.hasOwnProperty("appId"))
                                object.appId = message.appId;
                            if (message.httpBody != null && message.hasOwnProperty("httpBody")) {
                                object.httpBody = $root.google.api.HttpBody.toObject(message.httpBody, options);
                                if (options.oneofs)
                                    object._httpBody = "httpBody";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this UploadQueueYamlRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.UploadQueueYamlRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UploadQueueYamlRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UploadQueueYamlRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.UploadQueueYamlRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UploadQueueYamlRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.UploadQueueYamlRequest";
                        };
    
                        return UploadQueueYamlRequest;
                    })();
    
                    v2beta2.ListTasksRequest = (function() {
    
                        /**
                         * Properties of a ListTasksRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IListTasksRequest
                         * @property {string|null} [parent] ListTasksRequest parent
                         * @property {google.cloud.tasks.v2beta2.Task.View|null} [responseView] ListTasksRequest responseView
                         * @property {number|null} [pageSize] ListTasksRequest pageSize
                         * @property {string|null} [pageToken] ListTasksRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListTasksRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a ListTasksRequest.
                         * @implements IListTasksRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IListTasksRequest=} [properties] Properties to set
                         */
                        function ListTasksRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListTasksRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.tasks.v2beta2.ListTasksRequest
                         * @instance
                         */
                        ListTasksRequest.prototype.parent = "";
    
                        /**
                         * ListTasksRequest responseView.
                         * @member {google.cloud.tasks.v2beta2.Task.View} responseView
                         * @memberof google.cloud.tasks.v2beta2.ListTasksRequest
                         * @instance
                         */
                        ListTasksRequest.prototype.responseView = 0;
    
                        /**
                         * ListTasksRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.tasks.v2beta2.ListTasksRequest
                         * @instance
                         */
                        ListTasksRequest.prototype.pageSize = 0;
    
                        /**
                         * ListTasksRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.tasks.v2beta2.ListTasksRequest
                         * @instance
                         */
                        ListTasksRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListTasksRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.ListTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IListTasksRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.ListTasksRequest} ListTasksRequest instance
                         */
                        ListTasksRequest.create = function create(properties) {
                            return new ListTasksRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListTasksRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.ListTasksRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.ListTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IListTasksRequest} message ListTasksRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTasksRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.responseView != null && Object.hasOwnProperty.call(message, "responseView"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.responseView);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListTasksRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.ListTasksRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.ListTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IListTasksRequest} message ListTasksRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTasksRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListTasksRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.ListTasksRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.ListTasksRequest} ListTasksRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTasksRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.ListTasksRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.responseView = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListTasksRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.ListTasksRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.ListTasksRequest} ListTasksRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTasksRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListTasksRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.ListTasksRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListTasksRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                switch (message.responseView) {
                                default:
                                    return "responseView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListTasksRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.ListTasksRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.ListTasksRequest} ListTasksRequest
                         */
                        ListTasksRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.ListTasksRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.ListTasksRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            switch (object.responseView) {
                            default:
                                if (typeof object.responseView === "number") {
                                    message.responseView = object.responseView;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.responseView = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.responseView = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.responseView = 2;
                                break;
                            }
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListTasksRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.ListTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ListTasksRequest} message ListTasksRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListTasksRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.responseView = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                object.responseView = options.enums === String ? $root.google.cloud.tasks.v2beta2.Task.View[message.responseView] === undefined ? message.responseView : $root.google.cloud.tasks.v2beta2.Task.View[message.responseView] : message.responseView;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListTasksRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.ListTasksRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListTasksRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListTasksRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.ListTasksRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListTasksRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.ListTasksRequest";
                        };
    
                        return ListTasksRequest;
                    })();
    
                    v2beta2.ListTasksResponse = (function() {
    
                        /**
                         * Properties of a ListTasksResponse.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IListTasksResponse
                         * @property {Array.<google.cloud.tasks.v2beta2.ITask>|null} [tasks] ListTasksResponse tasks
                         * @property {string|null} [nextPageToken] ListTasksResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListTasksResponse.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a ListTasksResponse.
                         * @implements IListTasksResponse
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IListTasksResponse=} [properties] Properties to set
                         */
                        function ListTasksResponse(properties) {
                            this.tasks = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListTasksResponse tasks.
                         * @member {Array.<google.cloud.tasks.v2beta2.ITask>} tasks
                         * @memberof google.cloud.tasks.v2beta2.ListTasksResponse
                         * @instance
                         */
                        ListTasksResponse.prototype.tasks = $util.emptyArray;
    
                        /**
                         * ListTasksResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.tasks.v2beta2.ListTasksResponse
                         * @instance
                         */
                        ListTasksResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListTasksResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.ListTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IListTasksResponse=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.ListTasksResponse} ListTasksResponse instance
                         */
                        ListTasksResponse.create = function create(properties) {
                            return new ListTasksResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListTasksResponse message. Does not implicitly {@link google.cloud.tasks.v2beta2.ListTasksResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.ListTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IListTasksResponse} message ListTasksResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTasksResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.tasks != null && message.tasks.length)
                                for (var i = 0; i < message.tasks.length; ++i)
                                    $root.google.cloud.tasks.v2beta2.Task.encode(message.tasks[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListTasksResponse message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.ListTasksResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.ListTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IListTasksResponse} message ListTasksResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTasksResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListTasksResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.ListTasksResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.ListTasksResponse} ListTasksResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTasksResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.ListTasksResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.tasks && message.tasks.length))
                                            message.tasks = [];
                                        message.tasks.push($root.google.cloud.tasks.v2beta2.Task.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListTasksResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.ListTasksResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.ListTasksResponse} ListTasksResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTasksResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListTasksResponse message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.ListTasksResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListTasksResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.tasks != null && message.hasOwnProperty("tasks")) {
                                if (!Array.isArray(message.tasks))
                                    return "tasks: array expected";
                                for (var i = 0; i < message.tasks.length; ++i) {
                                    var error = $root.google.cloud.tasks.v2beta2.Task.verify(message.tasks[i]);
                                    if (error)
                                        return "tasks." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListTasksResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.ListTasksResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.ListTasksResponse} ListTasksResponse
                         */
                        ListTasksResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.ListTasksResponse)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.ListTasksResponse();
                            if (object.tasks) {
                                if (!Array.isArray(object.tasks))
                                    throw TypeError(".google.cloud.tasks.v2beta2.ListTasksResponse.tasks: array expected");
                                message.tasks = [];
                                for (var i = 0; i < object.tasks.length; ++i) {
                                    if (typeof object.tasks[i] !== "object")
                                        throw TypeError(".google.cloud.tasks.v2beta2.ListTasksResponse.tasks: object expected");
                                    message.tasks[i] = $root.google.cloud.tasks.v2beta2.Task.fromObject(object.tasks[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListTasksResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.ListTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ListTasksResponse} message ListTasksResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListTasksResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.tasks = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.tasks && message.tasks.length) {
                                object.tasks = [];
                                for (var j = 0; j < message.tasks.length; ++j)
                                    object.tasks[j] = $root.google.cloud.tasks.v2beta2.Task.toObject(message.tasks[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListTasksResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.ListTasksResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListTasksResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListTasksResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.ListTasksResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListTasksResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.ListTasksResponse";
                        };
    
                        return ListTasksResponse;
                    })();
    
                    v2beta2.GetTaskRequest = (function() {
    
                        /**
                         * Properties of a GetTaskRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IGetTaskRequest
                         * @property {string|null} [name] GetTaskRequest name
                         * @property {google.cloud.tasks.v2beta2.Task.View|null} [responseView] GetTaskRequest responseView
                         */
    
                        /**
                         * Constructs a new GetTaskRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a GetTaskRequest.
                         * @implements IGetTaskRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IGetTaskRequest=} [properties] Properties to set
                         */
                        function GetTaskRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetTaskRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta2.GetTaskRequest
                         * @instance
                         */
                        GetTaskRequest.prototype.name = "";
    
                        /**
                         * GetTaskRequest responseView.
                         * @member {google.cloud.tasks.v2beta2.Task.View} responseView
                         * @memberof google.cloud.tasks.v2beta2.GetTaskRequest
                         * @instance
                         */
                        GetTaskRequest.prototype.responseView = 0;
    
                        /**
                         * Creates a new GetTaskRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.GetTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IGetTaskRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.GetTaskRequest} GetTaskRequest instance
                         */
                        GetTaskRequest.create = function create(properties) {
                            return new GetTaskRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetTaskRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.GetTaskRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.GetTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IGetTaskRequest} message GetTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetTaskRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.responseView != null && Object.hasOwnProperty.call(message, "responseView"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.responseView);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetTaskRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.GetTaskRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.GetTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IGetTaskRequest} message GetTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetTaskRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetTaskRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.GetTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.GetTaskRequest} GetTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetTaskRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.GetTaskRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.responseView = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetTaskRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.GetTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.GetTaskRequest} GetTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetTaskRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetTaskRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.GetTaskRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetTaskRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                switch (message.responseView) {
                                default:
                                    return "responseView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a GetTaskRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.GetTaskRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.GetTaskRequest} GetTaskRequest
                         */
                        GetTaskRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.GetTaskRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.GetTaskRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            switch (object.responseView) {
                            default:
                                if (typeof object.responseView === "number") {
                                    message.responseView = object.responseView;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.responseView = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.responseView = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.responseView = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetTaskRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.GetTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.GetTaskRequest} message GetTaskRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetTaskRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.responseView = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                object.responseView = options.enums === String ? $root.google.cloud.tasks.v2beta2.Task.View[message.responseView] === undefined ? message.responseView : $root.google.cloud.tasks.v2beta2.Task.View[message.responseView] : message.responseView;
                            return object;
                        };
    
                        /**
                         * Converts this GetTaskRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.GetTaskRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetTaskRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetTaskRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.GetTaskRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetTaskRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.GetTaskRequest";
                        };
    
                        return GetTaskRequest;
                    })();
    
                    v2beta2.CreateTaskRequest = (function() {
    
                        /**
                         * Properties of a CreateTaskRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface ICreateTaskRequest
                         * @property {string|null} [parent] CreateTaskRequest parent
                         * @property {google.cloud.tasks.v2beta2.ITask|null} [task] CreateTaskRequest task
                         * @property {google.cloud.tasks.v2beta2.Task.View|null} [responseView] CreateTaskRequest responseView
                         */
    
                        /**
                         * Constructs a new CreateTaskRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a CreateTaskRequest.
                         * @implements ICreateTaskRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.ICreateTaskRequest=} [properties] Properties to set
                         */
                        function CreateTaskRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateTaskRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.tasks.v2beta2.CreateTaskRequest
                         * @instance
                         */
                        CreateTaskRequest.prototype.parent = "";
    
                        /**
                         * CreateTaskRequest task.
                         * @member {google.cloud.tasks.v2beta2.ITask|null|undefined} task
                         * @memberof google.cloud.tasks.v2beta2.CreateTaskRequest
                         * @instance
                         */
                        CreateTaskRequest.prototype.task = null;
    
                        /**
                         * CreateTaskRequest responseView.
                         * @member {google.cloud.tasks.v2beta2.Task.View} responseView
                         * @memberof google.cloud.tasks.v2beta2.CreateTaskRequest
                         * @instance
                         */
                        CreateTaskRequest.prototype.responseView = 0;
    
                        /**
                         * Creates a new CreateTaskRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.CreateTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ICreateTaskRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.CreateTaskRequest} CreateTaskRequest instance
                         */
                        CreateTaskRequest.create = function create(properties) {
                            return new CreateTaskRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateTaskRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.CreateTaskRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.CreateTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ICreateTaskRequest} message CreateTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateTaskRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.task != null && Object.hasOwnProperty.call(message, "task"))
                                $root.google.cloud.tasks.v2beta2.Task.encode(message.task, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.responseView != null && Object.hasOwnProperty.call(message, "responseView"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.responseView);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateTaskRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.CreateTaskRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.CreateTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ICreateTaskRequest} message CreateTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateTaskRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateTaskRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.CreateTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.CreateTaskRequest} CreateTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateTaskRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.CreateTaskRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.task = $root.google.cloud.tasks.v2beta2.Task.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.responseView = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateTaskRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.CreateTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.CreateTaskRequest} CreateTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateTaskRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateTaskRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.CreateTaskRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateTaskRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.task != null && message.hasOwnProperty("task")) {
                                var error = $root.google.cloud.tasks.v2beta2.Task.verify(message.task);
                                if (error)
                                    return "task." + error;
                            }
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                switch (message.responseView) {
                                default:
                                    return "responseView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a CreateTaskRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.CreateTaskRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.CreateTaskRequest} CreateTaskRequest
                         */
                        CreateTaskRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.CreateTaskRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.CreateTaskRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.task != null) {
                                if (typeof object.task !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.CreateTaskRequest.task: object expected");
                                message.task = $root.google.cloud.tasks.v2beta2.Task.fromObject(object.task);
                            }
                            switch (object.responseView) {
                            default:
                                if (typeof object.responseView === "number") {
                                    message.responseView = object.responseView;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.responseView = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.responseView = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.responseView = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateTaskRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.CreateTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.CreateTaskRequest} message CreateTaskRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateTaskRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.task = null;
                                object.responseView = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.task != null && message.hasOwnProperty("task"))
                                object.task = $root.google.cloud.tasks.v2beta2.Task.toObject(message.task, options);
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                object.responseView = options.enums === String ? $root.google.cloud.tasks.v2beta2.Task.View[message.responseView] === undefined ? message.responseView : $root.google.cloud.tasks.v2beta2.Task.View[message.responseView] : message.responseView;
                            return object;
                        };
    
                        /**
                         * Converts this CreateTaskRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.CreateTaskRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateTaskRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateTaskRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.CreateTaskRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateTaskRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.CreateTaskRequest";
                        };
    
                        return CreateTaskRequest;
                    })();
    
                    v2beta2.DeleteTaskRequest = (function() {
    
                        /**
                         * Properties of a DeleteTaskRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IDeleteTaskRequest
                         * @property {string|null} [name] DeleteTaskRequest name
                         */
    
                        /**
                         * Constructs a new DeleteTaskRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a DeleteTaskRequest.
                         * @implements IDeleteTaskRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IDeleteTaskRequest=} [properties] Properties to set
                         */
                        function DeleteTaskRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteTaskRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta2.DeleteTaskRequest
                         * @instance
                         */
                        DeleteTaskRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteTaskRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.DeleteTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IDeleteTaskRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.DeleteTaskRequest} DeleteTaskRequest instance
                         */
                        DeleteTaskRequest.create = function create(properties) {
                            return new DeleteTaskRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteTaskRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.DeleteTaskRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.DeleteTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IDeleteTaskRequest} message DeleteTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteTaskRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteTaskRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.DeleteTaskRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.DeleteTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IDeleteTaskRequest} message DeleteTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteTaskRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteTaskRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.DeleteTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.DeleteTaskRequest} DeleteTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteTaskRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.DeleteTaskRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteTaskRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.DeleteTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.DeleteTaskRequest} DeleteTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteTaskRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteTaskRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.DeleteTaskRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteTaskRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteTaskRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.DeleteTaskRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.DeleteTaskRequest} DeleteTaskRequest
                         */
                        DeleteTaskRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.DeleteTaskRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.DeleteTaskRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteTaskRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.DeleteTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.DeleteTaskRequest} message DeleteTaskRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteTaskRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteTaskRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.DeleteTaskRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteTaskRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteTaskRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.DeleteTaskRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteTaskRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.DeleteTaskRequest";
                        };
    
                        return DeleteTaskRequest;
                    })();
    
                    v2beta2.LeaseTasksRequest = (function() {
    
                        /**
                         * Properties of a LeaseTasksRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface ILeaseTasksRequest
                         * @property {string|null} [parent] LeaseTasksRequest parent
                         * @property {number|null} [maxTasks] LeaseTasksRequest maxTasks
                         * @property {google.protobuf.IDuration|null} [leaseDuration] LeaseTasksRequest leaseDuration
                         * @property {google.cloud.tasks.v2beta2.Task.View|null} [responseView] LeaseTasksRequest responseView
                         * @property {string|null} [filter] LeaseTasksRequest filter
                         */
    
                        /**
                         * Constructs a new LeaseTasksRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a LeaseTasksRequest.
                         * @implements ILeaseTasksRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.ILeaseTasksRequest=} [properties] Properties to set
                         */
                        function LeaseTasksRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * LeaseTasksRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksRequest
                         * @instance
                         */
                        LeaseTasksRequest.prototype.parent = "";
    
                        /**
                         * LeaseTasksRequest maxTasks.
                         * @member {number} maxTasks
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksRequest
                         * @instance
                         */
                        LeaseTasksRequest.prototype.maxTasks = 0;
    
                        /**
                         * LeaseTasksRequest leaseDuration.
                         * @member {google.protobuf.IDuration|null|undefined} leaseDuration
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksRequest
                         * @instance
                         */
                        LeaseTasksRequest.prototype.leaseDuration = null;
    
                        /**
                         * LeaseTasksRequest responseView.
                         * @member {google.cloud.tasks.v2beta2.Task.View} responseView
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksRequest
                         * @instance
                         */
                        LeaseTasksRequest.prototype.responseView = 0;
    
                        /**
                         * LeaseTasksRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksRequest
                         * @instance
                         */
                        LeaseTasksRequest.prototype.filter = "";
    
                        /**
                         * Creates a new LeaseTasksRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ILeaseTasksRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.LeaseTasksRequest} LeaseTasksRequest instance
                         */
                        LeaseTasksRequest.create = function create(properties) {
                            return new LeaseTasksRequest(properties);
                        };
    
                        /**
                         * Encodes the specified LeaseTasksRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.LeaseTasksRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ILeaseTasksRequest} message LeaseTasksRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LeaseTasksRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.maxTasks != null && Object.hasOwnProperty.call(message, "maxTasks"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.maxTasks);
                            if (message.leaseDuration != null && Object.hasOwnProperty.call(message, "leaseDuration"))
                                $root.google.protobuf.Duration.encode(message.leaseDuration, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.responseView != null && Object.hasOwnProperty.call(message, "responseView"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.responseView);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.filter);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified LeaseTasksRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.LeaseTasksRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ILeaseTasksRequest} message LeaseTasksRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LeaseTasksRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a LeaseTasksRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.LeaseTasksRequest} LeaseTasksRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LeaseTasksRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.LeaseTasksRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.maxTasks = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.leaseDuration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.responseView = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a LeaseTasksRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.LeaseTasksRequest} LeaseTasksRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LeaseTasksRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a LeaseTasksRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        LeaseTasksRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.maxTasks != null && message.hasOwnProperty("maxTasks"))
                                if (!$util.isInteger(message.maxTasks))
                                    return "maxTasks: integer expected";
                            if (message.leaseDuration != null && message.hasOwnProperty("leaseDuration")) {
                                var error = $root.google.protobuf.Duration.verify(message.leaseDuration);
                                if (error)
                                    return "leaseDuration." + error;
                            }
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                switch (message.responseView) {
                                default:
                                    return "responseView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a LeaseTasksRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.LeaseTasksRequest} LeaseTasksRequest
                         */
                        LeaseTasksRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.LeaseTasksRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.LeaseTasksRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.maxTasks != null)
                                message.maxTasks = object.maxTasks | 0;
                            if (object.leaseDuration != null) {
                                if (typeof object.leaseDuration !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.LeaseTasksRequest.leaseDuration: object expected");
                                message.leaseDuration = $root.google.protobuf.Duration.fromObject(object.leaseDuration);
                            }
                            switch (object.responseView) {
                            default:
                                if (typeof object.responseView === "number") {
                                    message.responseView = object.responseView;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.responseView = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.responseView = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.responseView = 2;
                                break;
                            }
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a LeaseTasksRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.LeaseTasksRequest} message LeaseTasksRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        LeaseTasksRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.maxTasks = 0;
                                object.leaseDuration = null;
                                object.responseView = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                                object.filter = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.maxTasks != null && message.hasOwnProperty("maxTasks"))
                                object.maxTasks = message.maxTasks;
                            if (message.leaseDuration != null && message.hasOwnProperty("leaseDuration"))
                                object.leaseDuration = $root.google.protobuf.Duration.toObject(message.leaseDuration, options);
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                object.responseView = options.enums === String ? $root.google.cloud.tasks.v2beta2.Task.View[message.responseView] === undefined ? message.responseView : $root.google.cloud.tasks.v2beta2.Task.View[message.responseView] : message.responseView;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            return object;
                        };
    
                        /**
                         * Converts this LeaseTasksRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        LeaseTasksRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for LeaseTasksRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        LeaseTasksRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.LeaseTasksRequest";
                        };
    
                        return LeaseTasksRequest;
                    })();
    
                    v2beta2.LeaseTasksResponse = (function() {
    
                        /**
                         * Properties of a LeaseTasksResponse.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface ILeaseTasksResponse
                         * @property {Array.<google.cloud.tasks.v2beta2.ITask>|null} [tasks] LeaseTasksResponse tasks
                         */
    
                        /**
                         * Constructs a new LeaseTasksResponse.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a LeaseTasksResponse.
                         * @implements ILeaseTasksResponse
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.ILeaseTasksResponse=} [properties] Properties to set
                         */
                        function LeaseTasksResponse(properties) {
                            this.tasks = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * LeaseTasksResponse tasks.
                         * @member {Array.<google.cloud.tasks.v2beta2.ITask>} tasks
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksResponse
                         * @instance
                         */
                        LeaseTasksResponse.prototype.tasks = $util.emptyArray;
    
                        /**
                         * Creates a new LeaseTasksResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ILeaseTasksResponse=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.LeaseTasksResponse} LeaseTasksResponse instance
                         */
                        LeaseTasksResponse.create = function create(properties) {
                            return new LeaseTasksResponse(properties);
                        };
    
                        /**
                         * Encodes the specified LeaseTasksResponse message. Does not implicitly {@link google.cloud.tasks.v2beta2.LeaseTasksResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ILeaseTasksResponse} message LeaseTasksResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LeaseTasksResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.tasks != null && message.tasks.length)
                                for (var i = 0; i < message.tasks.length; ++i)
                                    $root.google.cloud.tasks.v2beta2.Task.encode(message.tasks[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified LeaseTasksResponse message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.LeaseTasksResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ILeaseTasksResponse} message LeaseTasksResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LeaseTasksResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a LeaseTasksResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.LeaseTasksResponse} LeaseTasksResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LeaseTasksResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.LeaseTasksResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.tasks && message.tasks.length))
                                            message.tasks = [];
                                        message.tasks.push($root.google.cloud.tasks.v2beta2.Task.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a LeaseTasksResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.LeaseTasksResponse} LeaseTasksResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LeaseTasksResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a LeaseTasksResponse message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        LeaseTasksResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.tasks != null && message.hasOwnProperty("tasks")) {
                                if (!Array.isArray(message.tasks))
                                    return "tasks: array expected";
                                for (var i = 0; i < message.tasks.length; ++i) {
                                    var error = $root.google.cloud.tasks.v2beta2.Task.verify(message.tasks[i]);
                                    if (error)
                                        return "tasks." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a LeaseTasksResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.LeaseTasksResponse} LeaseTasksResponse
                         */
                        LeaseTasksResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.LeaseTasksResponse)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.LeaseTasksResponse();
                            if (object.tasks) {
                                if (!Array.isArray(object.tasks))
                                    throw TypeError(".google.cloud.tasks.v2beta2.LeaseTasksResponse.tasks: array expected");
                                message.tasks = [];
                                for (var i = 0; i < object.tasks.length; ++i) {
                                    if (typeof object.tasks[i] !== "object")
                                        throw TypeError(".google.cloud.tasks.v2beta2.LeaseTasksResponse.tasks: object expected");
                                    message.tasks[i] = $root.google.cloud.tasks.v2beta2.Task.fromObject(object.tasks[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a LeaseTasksResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta2.LeaseTasksResponse} message LeaseTasksResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        LeaseTasksResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.tasks = [];
                            if (message.tasks && message.tasks.length) {
                                object.tasks = [];
                                for (var j = 0; j < message.tasks.length; ++j)
                                    object.tasks[j] = $root.google.cloud.tasks.v2beta2.Task.toObject(message.tasks[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this LeaseTasksResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        LeaseTasksResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for LeaseTasksResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        LeaseTasksResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.LeaseTasksResponse";
                        };
    
                        return LeaseTasksResponse;
                    })();
    
                    v2beta2.AcknowledgeTaskRequest = (function() {
    
                        /**
                         * Properties of an AcknowledgeTaskRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IAcknowledgeTaskRequest
                         * @property {string|null} [name] AcknowledgeTaskRequest name
                         * @property {google.protobuf.ITimestamp|null} [scheduleTime] AcknowledgeTaskRequest scheduleTime
                         */
    
                        /**
                         * Constructs a new AcknowledgeTaskRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents an AcknowledgeTaskRequest.
                         * @implements IAcknowledgeTaskRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IAcknowledgeTaskRequest=} [properties] Properties to set
                         */
                        function AcknowledgeTaskRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AcknowledgeTaskRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta2.AcknowledgeTaskRequest
                         * @instance
                         */
                        AcknowledgeTaskRequest.prototype.name = "";
    
                        /**
                         * AcknowledgeTaskRequest scheduleTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} scheduleTime
                         * @memberof google.cloud.tasks.v2beta2.AcknowledgeTaskRequest
                         * @instance
                         */
                        AcknowledgeTaskRequest.prototype.scheduleTime = null;
    
                        /**
                         * Creates a new AcknowledgeTaskRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.AcknowledgeTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IAcknowledgeTaskRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.AcknowledgeTaskRequest} AcknowledgeTaskRequest instance
                         */
                        AcknowledgeTaskRequest.create = function create(properties) {
                            return new AcknowledgeTaskRequest(properties);
                        };
    
                        /**
                         * Encodes the specified AcknowledgeTaskRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.AcknowledgeTaskRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.AcknowledgeTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IAcknowledgeTaskRequest} message AcknowledgeTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AcknowledgeTaskRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.scheduleTime != null && Object.hasOwnProperty.call(message, "scheduleTime"))
                                $root.google.protobuf.Timestamp.encode(message.scheduleTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AcknowledgeTaskRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.AcknowledgeTaskRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.AcknowledgeTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IAcknowledgeTaskRequest} message AcknowledgeTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AcknowledgeTaskRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AcknowledgeTaskRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.AcknowledgeTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.AcknowledgeTaskRequest} AcknowledgeTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AcknowledgeTaskRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.AcknowledgeTaskRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.scheduleTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AcknowledgeTaskRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.AcknowledgeTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.AcknowledgeTaskRequest} AcknowledgeTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AcknowledgeTaskRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AcknowledgeTaskRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.AcknowledgeTaskRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AcknowledgeTaskRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.scheduleTime);
                                if (error)
                                    return "scheduleTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an AcknowledgeTaskRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.AcknowledgeTaskRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.AcknowledgeTaskRequest} AcknowledgeTaskRequest
                         */
                        AcknowledgeTaskRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.AcknowledgeTaskRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.AcknowledgeTaskRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.scheduleTime != null) {
                                if (typeof object.scheduleTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.AcknowledgeTaskRequest.scheduleTime: object expected");
                                message.scheduleTime = $root.google.protobuf.Timestamp.fromObject(object.scheduleTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AcknowledgeTaskRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.AcknowledgeTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.AcknowledgeTaskRequest} message AcknowledgeTaskRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AcknowledgeTaskRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.scheduleTime = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime"))
                                object.scheduleTime = $root.google.protobuf.Timestamp.toObject(message.scheduleTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this AcknowledgeTaskRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.AcknowledgeTaskRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AcknowledgeTaskRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AcknowledgeTaskRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.AcknowledgeTaskRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AcknowledgeTaskRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.AcknowledgeTaskRequest";
                        };
    
                        return AcknowledgeTaskRequest;
                    })();
    
                    v2beta2.RenewLeaseRequest = (function() {
    
                        /**
                         * Properties of a RenewLeaseRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IRenewLeaseRequest
                         * @property {string|null} [name] RenewLeaseRequest name
                         * @property {google.protobuf.ITimestamp|null} [scheduleTime] RenewLeaseRequest scheduleTime
                         * @property {google.protobuf.IDuration|null} [leaseDuration] RenewLeaseRequest leaseDuration
                         * @property {google.cloud.tasks.v2beta2.Task.View|null} [responseView] RenewLeaseRequest responseView
                         */
    
                        /**
                         * Constructs a new RenewLeaseRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a RenewLeaseRequest.
                         * @implements IRenewLeaseRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IRenewLeaseRequest=} [properties] Properties to set
                         */
                        function RenewLeaseRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RenewLeaseRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta2.RenewLeaseRequest
                         * @instance
                         */
                        RenewLeaseRequest.prototype.name = "";
    
                        /**
                         * RenewLeaseRequest scheduleTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} scheduleTime
                         * @memberof google.cloud.tasks.v2beta2.RenewLeaseRequest
                         * @instance
                         */
                        RenewLeaseRequest.prototype.scheduleTime = null;
    
                        /**
                         * RenewLeaseRequest leaseDuration.
                         * @member {google.protobuf.IDuration|null|undefined} leaseDuration
                         * @memberof google.cloud.tasks.v2beta2.RenewLeaseRequest
                         * @instance
                         */
                        RenewLeaseRequest.prototype.leaseDuration = null;
    
                        /**
                         * RenewLeaseRequest responseView.
                         * @member {google.cloud.tasks.v2beta2.Task.View} responseView
                         * @memberof google.cloud.tasks.v2beta2.RenewLeaseRequest
                         * @instance
                         */
                        RenewLeaseRequest.prototype.responseView = 0;
    
                        /**
                         * Creates a new RenewLeaseRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.RenewLeaseRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IRenewLeaseRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.RenewLeaseRequest} RenewLeaseRequest instance
                         */
                        RenewLeaseRequest.create = function create(properties) {
                            return new RenewLeaseRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RenewLeaseRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.RenewLeaseRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.RenewLeaseRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IRenewLeaseRequest} message RenewLeaseRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RenewLeaseRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.scheduleTime != null && Object.hasOwnProperty.call(message, "scheduleTime"))
                                $root.google.protobuf.Timestamp.encode(message.scheduleTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.leaseDuration != null && Object.hasOwnProperty.call(message, "leaseDuration"))
                                $root.google.protobuf.Duration.encode(message.leaseDuration, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.responseView != null && Object.hasOwnProperty.call(message, "responseView"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.responseView);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RenewLeaseRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.RenewLeaseRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.RenewLeaseRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IRenewLeaseRequest} message RenewLeaseRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RenewLeaseRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RenewLeaseRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.RenewLeaseRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.RenewLeaseRequest} RenewLeaseRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RenewLeaseRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.RenewLeaseRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.scheduleTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.leaseDuration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.responseView = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RenewLeaseRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.RenewLeaseRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.RenewLeaseRequest} RenewLeaseRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RenewLeaseRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RenewLeaseRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.RenewLeaseRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RenewLeaseRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.scheduleTime);
                                if (error)
                                    return "scheduleTime." + error;
                            }
                            if (message.leaseDuration != null && message.hasOwnProperty("leaseDuration")) {
                                var error = $root.google.protobuf.Duration.verify(message.leaseDuration);
                                if (error)
                                    return "leaseDuration." + error;
                            }
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                switch (message.responseView) {
                                default:
                                    return "responseView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a RenewLeaseRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.RenewLeaseRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.RenewLeaseRequest} RenewLeaseRequest
                         */
                        RenewLeaseRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.RenewLeaseRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.RenewLeaseRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.scheduleTime != null) {
                                if (typeof object.scheduleTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.RenewLeaseRequest.scheduleTime: object expected");
                                message.scheduleTime = $root.google.protobuf.Timestamp.fromObject(object.scheduleTime);
                            }
                            if (object.leaseDuration != null) {
                                if (typeof object.leaseDuration !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.RenewLeaseRequest.leaseDuration: object expected");
                                message.leaseDuration = $root.google.protobuf.Duration.fromObject(object.leaseDuration);
                            }
                            switch (object.responseView) {
                            default:
                                if (typeof object.responseView === "number") {
                                    message.responseView = object.responseView;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.responseView = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.responseView = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.responseView = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RenewLeaseRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.RenewLeaseRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.RenewLeaseRequest} message RenewLeaseRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RenewLeaseRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.scheduleTime = null;
                                object.leaseDuration = null;
                                object.responseView = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime"))
                                object.scheduleTime = $root.google.protobuf.Timestamp.toObject(message.scheduleTime, options);
                            if (message.leaseDuration != null && message.hasOwnProperty("leaseDuration"))
                                object.leaseDuration = $root.google.protobuf.Duration.toObject(message.leaseDuration, options);
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                object.responseView = options.enums === String ? $root.google.cloud.tasks.v2beta2.Task.View[message.responseView] === undefined ? message.responseView : $root.google.cloud.tasks.v2beta2.Task.View[message.responseView] : message.responseView;
                            return object;
                        };
    
                        /**
                         * Converts this RenewLeaseRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.RenewLeaseRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RenewLeaseRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RenewLeaseRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.RenewLeaseRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RenewLeaseRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.RenewLeaseRequest";
                        };
    
                        return RenewLeaseRequest;
                    })();
    
                    v2beta2.CancelLeaseRequest = (function() {
    
                        /**
                         * Properties of a CancelLeaseRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface ICancelLeaseRequest
                         * @property {string|null} [name] CancelLeaseRequest name
                         * @property {google.protobuf.ITimestamp|null} [scheduleTime] CancelLeaseRequest scheduleTime
                         * @property {google.cloud.tasks.v2beta2.Task.View|null} [responseView] CancelLeaseRequest responseView
                         */
    
                        /**
                         * Constructs a new CancelLeaseRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a CancelLeaseRequest.
                         * @implements ICancelLeaseRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.ICancelLeaseRequest=} [properties] Properties to set
                         */
                        function CancelLeaseRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CancelLeaseRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta2.CancelLeaseRequest
                         * @instance
                         */
                        CancelLeaseRequest.prototype.name = "";
    
                        /**
                         * CancelLeaseRequest scheduleTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} scheduleTime
                         * @memberof google.cloud.tasks.v2beta2.CancelLeaseRequest
                         * @instance
                         */
                        CancelLeaseRequest.prototype.scheduleTime = null;
    
                        /**
                         * CancelLeaseRequest responseView.
                         * @member {google.cloud.tasks.v2beta2.Task.View} responseView
                         * @memberof google.cloud.tasks.v2beta2.CancelLeaseRequest
                         * @instance
                         */
                        CancelLeaseRequest.prototype.responseView = 0;
    
                        /**
                         * Creates a new CancelLeaseRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.CancelLeaseRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ICancelLeaseRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.CancelLeaseRequest} CancelLeaseRequest instance
                         */
                        CancelLeaseRequest.create = function create(properties) {
                            return new CancelLeaseRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CancelLeaseRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.CancelLeaseRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.CancelLeaseRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ICancelLeaseRequest} message CancelLeaseRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CancelLeaseRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.scheduleTime != null && Object.hasOwnProperty.call(message, "scheduleTime"))
                                $root.google.protobuf.Timestamp.encode(message.scheduleTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.responseView != null && Object.hasOwnProperty.call(message, "responseView"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.responseView);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CancelLeaseRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.CancelLeaseRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.CancelLeaseRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ICancelLeaseRequest} message CancelLeaseRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CancelLeaseRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CancelLeaseRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.CancelLeaseRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.CancelLeaseRequest} CancelLeaseRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CancelLeaseRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.CancelLeaseRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.scheduleTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.responseView = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CancelLeaseRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.CancelLeaseRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.CancelLeaseRequest} CancelLeaseRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CancelLeaseRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CancelLeaseRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.CancelLeaseRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CancelLeaseRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.scheduleTime);
                                if (error)
                                    return "scheduleTime." + error;
                            }
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                switch (message.responseView) {
                                default:
                                    return "responseView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a CancelLeaseRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.CancelLeaseRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.CancelLeaseRequest} CancelLeaseRequest
                         */
                        CancelLeaseRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.CancelLeaseRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.CancelLeaseRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.scheduleTime != null) {
                                if (typeof object.scheduleTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.CancelLeaseRequest.scheduleTime: object expected");
                                message.scheduleTime = $root.google.protobuf.Timestamp.fromObject(object.scheduleTime);
                            }
                            switch (object.responseView) {
                            default:
                                if (typeof object.responseView === "number") {
                                    message.responseView = object.responseView;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.responseView = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.responseView = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.responseView = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CancelLeaseRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.CancelLeaseRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.CancelLeaseRequest} message CancelLeaseRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CancelLeaseRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.scheduleTime = null;
                                object.responseView = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime"))
                                object.scheduleTime = $root.google.protobuf.Timestamp.toObject(message.scheduleTime, options);
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                object.responseView = options.enums === String ? $root.google.cloud.tasks.v2beta2.Task.View[message.responseView] === undefined ? message.responseView : $root.google.cloud.tasks.v2beta2.Task.View[message.responseView] : message.responseView;
                            return object;
                        };
    
                        /**
                         * Converts this CancelLeaseRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.CancelLeaseRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CancelLeaseRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CancelLeaseRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.CancelLeaseRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CancelLeaseRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.CancelLeaseRequest";
                        };
    
                        return CancelLeaseRequest;
                    })();
    
                    v2beta2.RunTaskRequest = (function() {
    
                        /**
                         * Properties of a RunTaskRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IRunTaskRequest
                         * @property {string|null} [name] RunTaskRequest name
                         * @property {google.cloud.tasks.v2beta2.Task.View|null} [responseView] RunTaskRequest responseView
                         */
    
                        /**
                         * Constructs a new RunTaskRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a RunTaskRequest.
                         * @implements IRunTaskRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IRunTaskRequest=} [properties] Properties to set
                         */
                        function RunTaskRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RunTaskRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta2.RunTaskRequest
                         * @instance
                         */
                        RunTaskRequest.prototype.name = "";
    
                        /**
                         * RunTaskRequest responseView.
                         * @member {google.cloud.tasks.v2beta2.Task.View} responseView
                         * @memberof google.cloud.tasks.v2beta2.RunTaskRequest
                         * @instance
                         */
                        RunTaskRequest.prototype.responseView = 0;
    
                        /**
                         * Creates a new RunTaskRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.RunTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IRunTaskRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.RunTaskRequest} RunTaskRequest instance
                         */
                        RunTaskRequest.create = function create(properties) {
                            return new RunTaskRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RunTaskRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.RunTaskRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.RunTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IRunTaskRequest} message RunTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunTaskRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.responseView != null && Object.hasOwnProperty.call(message, "responseView"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.responseView);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RunTaskRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.RunTaskRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.RunTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IRunTaskRequest} message RunTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunTaskRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RunTaskRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.RunTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.RunTaskRequest} RunTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunTaskRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.RunTaskRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.responseView = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RunTaskRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.RunTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.RunTaskRequest} RunTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunTaskRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RunTaskRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.RunTaskRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RunTaskRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                switch (message.responseView) {
                                default:
                                    return "responseView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a RunTaskRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.RunTaskRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.RunTaskRequest} RunTaskRequest
                         */
                        RunTaskRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.RunTaskRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.RunTaskRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            switch (object.responseView) {
                            default:
                                if (typeof object.responseView === "number") {
                                    message.responseView = object.responseView;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.responseView = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.responseView = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.responseView = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RunTaskRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.RunTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.RunTaskRequest} message RunTaskRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RunTaskRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.responseView = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                object.responseView = options.enums === String ? $root.google.cloud.tasks.v2beta2.Task.View[message.responseView] === undefined ? message.responseView : $root.google.cloud.tasks.v2beta2.Task.View[message.responseView] : message.responseView;
                            return object;
                        };
    
                        /**
                         * Converts this RunTaskRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.RunTaskRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RunTaskRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RunTaskRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.RunTaskRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RunTaskRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.RunTaskRequest";
                        };
    
                        return RunTaskRequest;
                    })();
    
                    v2beta2.BufferTaskRequest = (function() {
    
                        /**
                         * Properties of a BufferTaskRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IBufferTaskRequest
                         * @property {string|null} [queue] BufferTaskRequest queue
                         * @property {string|null} [taskId] BufferTaskRequest taskId
                         * @property {google.api.IHttpBody|null} [body] BufferTaskRequest body
                         */
    
                        /**
                         * Constructs a new BufferTaskRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a BufferTaskRequest.
                         * @implements IBufferTaskRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IBufferTaskRequest=} [properties] Properties to set
                         */
                        function BufferTaskRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BufferTaskRequest queue.
                         * @member {string} queue
                         * @memberof google.cloud.tasks.v2beta2.BufferTaskRequest
                         * @instance
                         */
                        BufferTaskRequest.prototype.queue = "";
    
                        /**
                         * BufferTaskRequest taskId.
                         * @member {string} taskId
                         * @memberof google.cloud.tasks.v2beta2.BufferTaskRequest
                         * @instance
                         */
                        BufferTaskRequest.prototype.taskId = "";
    
                        /**
                         * BufferTaskRequest body.
                         * @member {google.api.IHttpBody|null|undefined} body
                         * @memberof google.cloud.tasks.v2beta2.BufferTaskRequest
                         * @instance
                         */
                        BufferTaskRequest.prototype.body = null;
    
                        /**
                         * Creates a new BufferTaskRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.BufferTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IBufferTaskRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.BufferTaskRequest} BufferTaskRequest instance
                         */
                        BufferTaskRequest.create = function create(properties) {
                            return new BufferTaskRequest(properties);
                        };
    
                        /**
                         * Encodes the specified BufferTaskRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.BufferTaskRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.BufferTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IBufferTaskRequest} message BufferTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BufferTaskRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.queue != null && Object.hasOwnProperty.call(message, "queue"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.queue);
                            if (message.taskId != null && Object.hasOwnProperty.call(message, "taskId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.taskId);
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                $root.google.api.HttpBody.encode(message.body, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BufferTaskRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.BufferTaskRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.BufferTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IBufferTaskRequest} message BufferTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BufferTaskRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BufferTaskRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.BufferTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.BufferTaskRequest} BufferTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BufferTaskRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.BufferTaskRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.queue = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.taskId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.body = $root.google.api.HttpBody.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BufferTaskRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.BufferTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.BufferTaskRequest} BufferTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BufferTaskRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BufferTaskRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.BufferTaskRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BufferTaskRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.queue != null && message.hasOwnProperty("queue"))
                                if (!$util.isString(message.queue))
                                    return "queue: string expected";
                            if (message.taskId != null && message.hasOwnProperty("taskId"))
                                if (!$util.isString(message.taskId))
                                    return "taskId: string expected";
                            if (message.body != null && message.hasOwnProperty("body")) {
                                var error = $root.google.api.HttpBody.verify(message.body);
                                if (error)
                                    return "body." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BufferTaskRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.BufferTaskRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.BufferTaskRequest} BufferTaskRequest
                         */
                        BufferTaskRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.BufferTaskRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.BufferTaskRequest();
                            if (object.queue != null)
                                message.queue = String(object.queue);
                            if (object.taskId != null)
                                message.taskId = String(object.taskId);
                            if (object.body != null) {
                                if (typeof object.body !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.BufferTaskRequest.body: object expected");
                                message.body = $root.google.api.HttpBody.fromObject(object.body);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BufferTaskRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.BufferTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.BufferTaskRequest} message BufferTaskRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BufferTaskRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.queue = "";
                                object.taskId = "";
                                object.body = null;
                            }
                            if (message.queue != null && message.hasOwnProperty("queue"))
                                object.queue = message.queue;
                            if (message.taskId != null && message.hasOwnProperty("taskId"))
                                object.taskId = message.taskId;
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = $root.google.api.HttpBody.toObject(message.body, options);
                            return object;
                        };
    
                        /**
                         * Converts this BufferTaskRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.BufferTaskRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BufferTaskRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BufferTaskRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.BufferTaskRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BufferTaskRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.BufferTaskRequest";
                        };
    
                        return BufferTaskRequest;
                    })();
    
                    v2beta2.BufferTaskResponse = (function() {
    
                        /**
                         * Properties of a BufferTaskResponse.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IBufferTaskResponse
                         * @property {google.cloud.tasks.v2beta2.ITask|null} [task] BufferTaskResponse task
                         */
    
                        /**
                         * Constructs a new BufferTaskResponse.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a BufferTaskResponse.
                         * @implements IBufferTaskResponse
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IBufferTaskResponse=} [properties] Properties to set
                         */
                        function BufferTaskResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BufferTaskResponse task.
                         * @member {google.cloud.tasks.v2beta2.ITask|null|undefined} task
                         * @memberof google.cloud.tasks.v2beta2.BufferTaskResponse
                         * @instance
                         */
                        BufferTaskResponse.prototype.task = null;
    
                        /**
                         * Creates a new BufferTaskResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.BufferTaskResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IBufferTaskResponse=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.BufferTaskResponse} BufferTaskResponse instance
                         */
                        BufferTaskResponse.create = function create(properties) {
                            return new BufferTaskResponse(properties);
                        };
    
                        /**
                         * Encodes the specified BufferTaskResponse message. Does not implicitly {@link google.cloud.tasks.v2beta2.BufferTaskResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.BufferTaskResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IBufferTaskResponse} message BufferTaskResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BufferTaskResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.task != null && Object.hasOwnProperty.call(message, "task"))
                                $root.google.cloud.tasks.v2beta2.Task.encode(message.task, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BufferTaskResponse message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.BufferTaskResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.BufferTaskResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IBufferTaskResponse} message BufferTaskResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BufferTaskResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BufferTaskResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.BufferTaskResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.BufferTaskResponse} BufferTaskResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BufferTaskResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.BufferTaskResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.task = $root.google.cloud.tasks.v2beta2.Task.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BufferTaskResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.BufferTaskResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.BufferTaskResponse} BufferTaskResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BufferTaskResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BufferTaskResponse message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.BufferTaskResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BufferTaskResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.task != null && message.hasOwnProperty("task")) {
                                var error = $root.google.cloud.tasks.v2beta2.Task.verify(message.task);
                                if (error)
                                    return "task." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BufferTaskResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.BufferTaskResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.BufferTaskResponse} BufferTaskResponse
                         */
                        BufferTaskResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.BufferTaskResponse)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.BufferTaskResponse();
                            if (object.task != null) {
                                if (typeof object.task !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.BufferTaskResponse.task: object expected");
                                message.task = $root.google.cloud.tasks.v2beta2.Task.fromObject(object.task);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BufferTaskResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.BufferTaskResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta2.BufferTaskResponse} message BufferTaskResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BufferTaskResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.task = null;
                            if (message.task != null && message.hasOwnProperty("task"))
                                object.task = $root.google.cloud.tasks.v2beta2.Task.toObject(message.task, options);
                            return object;
                        };
    
                        /**
                         * Converts this BufferTaskResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.BufferTaskResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BufferTaskResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BufferTaskResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.BufferTaskResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BufferTaskResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.BufferTaskResponse";
                        };
    
                        return BufferTaskResponse;
                    })();
    
                    v2beta2.Queue = (function() {
    
                        /**
                         * Properties of a Queue.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IQueue
                         * @property {string|null} [name] Queue name
                         * @property {google.cloud.tasks.v2beta2.IAppEngineHttpTarget|null} [appEngineHttpTarget] Queue appEngineHttpTarget
                         * @property {google.cloud.tasks.v2beta2.IPullTarget|null} [pullTarget] Queue pullTarget
                         * @property {google.cloud.tasks.v2beta2.IHttpTarget|null} [httpTarget] Queue httpTarget
                         * @property {google.cloud.tasks.v2beta2.IRateLimits|null} [rateLimits] Queue rateLimits
                         * @property {google.cloud.tasks.v2beta2.IRetryConfig|null} [retryConfig] Queue retryConfig
                         * @property {google.cloud.tasks.v2beta2.Queue.State|null} [state] Queue state
                         * @property {google.protobuf.ITimestamp|null} [purgeTime] Queue purgeTime
                         * @property {google.protobuf.IDuration|null} [taskTtl] Queue taskTtl
                         * @property {google.protobuf.IDuration|null} [tombstoneTtl] Queue tombstoneTtl
                         * @property {google.cloud.tasks.v2beta2.IQueueStats|null} [stats] Queue stats
                         */
    
                        /**
                         * Constructs a new Queue.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a Queue.
                         * @implements IQueue
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IQueue=} [properties] Properties to set
                         */
                        function Queue(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Queue name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @instance
                         */
                        Queue.prototype.name = "";
    
                        /**
                         * Queue appEngineHttpTarget.
                         * @member {google.cloud.tasks.v2beta2.IAppEngineHttpTarget|null|undefined} appEngineHttpTarget
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @instance
                         */
                        Queue.prototype.appEngineHttpTarget = null;
    
                        /**
                         * Queue pullTarget.
                         * @member {google.cloud.tasks.v2beta2.IPullTarget|null|undefined} pullTarget
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @instance
                         */
                        Queue.prototype.pullTarget = null;
    
                        /**
                         * Queue httpTarget.
                         * @member {google.cloud.tasks.v2beta2.IHttpTarget|null|undefined} httpTarget
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @instance
                         */
                        Queue.prototype.httpTarget = null;
    
                        /**
                         * Queue rateLimits.
                         * @member {google.cloud.tasks.v2beta2.IRateLimits|null|undefined} rateLimits
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @instance
                         */
                        Queue.prototype.rateLimits = null;
    
                        /**
                         * Queue retryConfig.
                         * @member {google.cloud.tasks.v2beta2.IRetryConfig|null|undefined} retryConfig
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @instance
                         */
                        Queue.prototype.retryConfig = null;
    
                        /**
                         * Queue state.
                         * @member {google.cloud.tasks.v2beta2.Queue.State} state
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @instance
                         */
                        Queue.prototype.state = 0;
    
                        /**
                         * Queue purgeTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} purgeTime
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @instance
                         */
                        Queue.prototype.purgeTime = null;
    
                        /**
                         * Queue taskTtl.
                         * @member {google.protobuf.IDuration|null|undefined} taskTtl
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @instance
                         */
                        Queue.prototype.taskTtl = null;
    
                        /**
                         * Queue tombstoneTtl.
                         * @member {google.protobuf.IDuration|null|undefined} tombstoneTtl
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @instance
                         */
                        Queue.prototype.tombstoneTtl = null;
    
                        /**
                         * Queue stats.
                         * @member {google.cloud.tasks.v2beta2.IQueueStats|null|undefined} stats
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @instance
                         */
                        Queue.prototype.stats = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Queue targetType.
                         * @member {"appEngineHttpTarget"|"pullTarget"|"httpTarget"|undefined} targetType
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @instance
                         */
                        Object.defineProperty(Queue.prototype, "targetType", {
                            get: $util.oneOfGetter($oneOfFields = ["appEngineHttpTarget", "pullTarget", "httpTarget"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Queue instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IQueue=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.Queue} Queue instance
                         */
                        Queue.create = function create(properties) {
                            return new Queue(properties);
                        };
    
                        /**
                         * Encodes the specified Queue message. Does not implicitly {@link google.cloud.tasks.v2beta2.Queue.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IQueue} message Queue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Queue.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.appEngineHttpTarget != null && Object.hasOwnProperty.call(message, "appEngineHttpTarget"))
                                $root.google.cloud.tasks.v2beta2.AppEngineHttpTarget.encode(message.appEngineHttpTarget, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.pullTarget != null && Object.hasOwnProperty.call(message, "pullTarget"))
                                $root.google.cloud.tasks.v2beta2.PullTarget.encode(message.pullTarget, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.rateLimits != null && Object.hasOwnProperty.call(message, "rateLimits"))
                                $root.google.cloud.tasks.v2beta2.RateLimits.encode(message.rateLimits, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.retryConfig != null && Object.hasOwnProperty.call(message, "retryConfig"))
                                $root.google.cloud.tasks.v2beta2.RetryConfig.encode(message.retryConfig, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.state);
                            if (message.purgeTime != null && Object.hasOwnProperty.call(message, "purgeTime"))
                                $root.google.protobuf.Timestamp.encode(message.purgeTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.taskTtl != null && Object.hasOwnProperty.call(message, "taskTtl"))
                                $root.google.protobuf.Duration.encode(message.taskTtl, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.tombstoneTtl != null && Object.hasOwnProperty.call(message, "tombstoneTtl"))
                                $root.google.protobuf.Duration.encode(message.tombstoneTtl, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.stats != null && Object.hasOwnProperty.call(message, "stats"))
                                $root.google.cloud.tasks.v2beta2.QueueStats.encode(message.stats, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();
                            if (message.httpTarget != null && Object.hasOwnProperty.call(message, "httpTarget"))
                                $root.google.cloud.tasks.v2beta2.HttpTarget.encode(message.httpTarget, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Queue message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.Queue.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IQueue} message Queue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Queue.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Queue message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.Queue} Queue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Queue.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.Queue();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.appEngineHttpTarget = $root.google.cloud.tasks.v2beta2.AppEngineHttpTarget.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.pullTarget = $root.google.cloud.tasks.v2beta2.PullTarget.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 17: {
                                        message.httpTarget = $root.google.cloud.tasks.v2beta2.HttpTarget.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.rateLimits = $root.google.cloud.tasks.v2beta2.RateLimits.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.retryConfig = $root.google.cloud.tasks.v2beta2.RetryConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 8: {
                                        message.purgeTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.taskTtl = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.tombstoneTtl = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 16: {
                                        message.stats = $root.google.cloud.tasks.v2beta2.QueueStats.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Queue message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.Queue} Queue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Queue.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Queue message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Queue.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.appEngineHttpTarget != null && message.hasOwnProperty("appEngineHttpTarget")) {
                                properties.targetType = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2beta2.AppEngineHttpTarget.verify(message.appEngineHttpTarget);
                                    if (error)
                                        return "appEngineHttpTarget." + error;
                                }
                            }
                            if (message.pullTarget != null && message.hasOwnProperty("pullTarget")) {
                                if (properties.targetType === 1)
                                    return "targetType: multiple values";
                                properties.targetType = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2beta2.PullTarget.verify(message.pullTarget);
                                    if (error)
                                        return "pullTarget." + error;
                                }
                            }
                            if (message.httpTarget != null && message.hasOwnProperty("httpTarget")) {
                                if (properties.targetType === 1)
                                    return "targetType: multiple values";
                                properties.targetType = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2beta2.HttpTarget.verify(message.httpTarget);
                                    if (error)
                                        return "httpTarget." + error;
                                }
                            }
                            if (message.rateLimits != null && message.hasOwnProperty("rateLimits")) {
                                var error = $root.google.cloud.tasks.v2beta2.RateLimits.verify(message.rateLimits);
                                if (error)
                                    return "rateLimits." + error;
                            }
                            if (message.retryConfig != null && message.hasOwnProperty("retryConfig")) {
                                var error = $root.google.cloud.tasks.v2beta2.RetryConfig.verify(message.retryConfig);
                                if (error)
                                    return "retryConfig." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.purgeTime != null && message.hasOwnProperty("purgeTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.purgeTime);
                                if (error)
                                    return "purgeTime." + error;
                            }
                            if (message.taskTtl != null && message.hasOwnProperty("taskTtl")) {
                                var error = $root.google.protobuf.Duration.verify(message.taskTtl);
                                if (error)
                                    return "taskTtl." + error;
                            }
                            if (message.tombstoneTtl != null && message.hasOwnProperty("tombstoneTtl")) {
                                var error = $root.google.protobuf.Duration.verify(message.tombstoneTtl);
                                if (error)
                                    return "tombstoneTtl." + error;
                            }
                            if (message.stats != null && message.hasOwnProperty("stats")) {
                                var error = $root.google.cloud.tasks.v2beta2.QueueStats.verify(message.stats);
                                if (error)
                                    return "stats." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Queue message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.Queue} Queue
                         */
                        Queue.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.Queue)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.Queue();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.appEngineHttpTarget != null) {
                                if (typeof object.appEngineHttpTarget !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.Queue.appEngineHttpTarget: object expected");
                                message.appEngineHttpTarget = $root.google.cloud.tasks.v2beta2.AppEngineHttpTarget.fromObject(object.appEngineHttpTarget);
                            }
                            if (object.pullTarget != null) {
                                if (typeof object.pullTarget !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.Queue.pullTarget: object expected");
                                message.pullTarget = $root.google.cloud.tasks.v2beta2.PullTarget.fromObject(object.pullTarget);
                            }
                            if (object.httpTarget != null) {
                                if (typeof object.httpTarget !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.Queue.httpTarget: object expected");
                                message.httpTarget = $root.google.cloud.tasks.v2beta2.HttpTarget.fromObject(object.httpTarget);
                            }
                            if (object.rateLimits != null) {
                                if (typeof object.rateLimits !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.Queue.rateLimits: object expected");
                                message.rateLimits = $root.google.cloud.tasks.v2beta2.RateLimits.fromObject(object.rateLimits);
                            }
                            if (object.retryConfig != null) {
                                if (typeof object.retryConfig !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.Queue.retryConfig: object expected");
                                message.retryConfig = $root.google.cloud.tasks.v2beta2.RetryConfig.fromObject(object.retryConfig);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "RUNNING":
                            case 1:
                                message.state = 1;
                                break;
                            case "PAUSED":
                            case 2:
                                message.state = 2;
                                break;
                            case "DISABLED":
                            case 3:
                                message.state = 3;
                                break;
                            }
                            if (object.purgeTime != null) {
                                if (typeof object.purgeTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.Queue.purgeTime: object expected");
                                message.purgeTime = $root.google.protobuf.Timestamp.fromObject(object.purgeTime);
                            }
                            if (object.taskTtl != null) {
                                if (typeof object.taskTtl !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.Queue.taskTtl: object expected");
                                message.taskTtl = $root.google.protobuf.Duration.fromObject(object.taskTtl);
                            }
                            if (object.tombstoneTtl != null) {
                                if (typeof object.tombstoneTtl !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.Queue.tombstoneTtl: object expected");
                                message.tombstoneTtl = $root.google.protobuf.Duration.fromObject(object.tombstoneTtl);
                            }
                            if (object.stats != null) {
                                if (typeof object.stats !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.Queue.stats: object expected");
                                message.stats = $root.google.cloud.tasks.v2beta2.QueueStats.fromObject(object.stats);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Queue message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @static
                         * @param {google.cloud.tasks.v2beta2.Queue} message Queue
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Queue.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.rateLimits = null;
                                object.retryConfig = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.purgeTime = null;
                                object.taskTtl = null;
                                object.tombstoneTtl = null;
                                object.stats = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.appEngineHttpTarget != null && message.hasOwnProperty("appEngineHttpTarget")) {
                                object.appEngineHttpTarget = $root.google.cloud.tasks.v2beta2.AppEngineHttpTarget.toObject(message.appEngineHttpTarget, options);
                                if (options.oneofs)
                                    object.targetType = "appEngineHttpTarget";
                            }
                            if (message.pullTarget != null && message.hasOwnProperty("pullTarget")) {
                                object.pullTarget = $root.google.cloud.tasks.v2beta2.PullTarget.toObject(message.pullTarget, options);
                                if (options.oneofs)
                                    object.targetType = "pullTarget";
                            }
                            if (message.rateLimits != null && message.hasOwnProperty("rateLimits"))
                                object.rateLimits = $root.google.cloud.tasks.v2beta2.RateLimits.toObject(message.rateLimits, options);
                            if (message.retryConfig != null && message.hasOwnProperty("retryConfig"))
                                object.retryConfig = $root.google.cloud.tasks.v2beta2.RetryConfig.toObject(message.retryConfig, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.tasks.v2beta2.Queue.State[message.state] === undefined ? message.state : $root.google.cloud.tasks.v2beta2.Queue.State[message.state] : message.state;
                            if (message.purgeTime != null && message.hasOwnProperty("purgeTime"))
                                object.purgeTime = $root.google.protobuf.Timestamp.toObject(message.purgeTime, options);
                            if (message.taskTtl != null && message.hasOwnProperty("taskTtl"))
                                object.taskTtl = $root.google.protobuf.Duration.toObject(message.taskTtl, options);
                            if (message.tombstoneTtl != null && message.hasOwnProperty("tombstoneTtl"))
                                object.tombstoneTtl = $root.google.protobuf.Duration.toObject(message.tombstoneTtl, options);
                            if (message.stats != null && message.hasOwnProperty("stats"))
                                object.stats = $root.google.cloud.tasks.v2beta2.QueueStats.toObject(message.stats, options);
                            if (message.httpTarget != null && message.hasOwnProperty("httpTarget")) {
                                object.httpTarget = $root.google.cloud.tasks.v2beta2.HttpTarget.toObject(message.httpTarget, options);
                                if (options.oneofs)
                                    object.targetType = "httpTarget";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Queue to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Queue.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Queue
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Queue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.Queue";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.tasks.v2beta2.Queue.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} RUNNING=1 RUNNING value
                         * @property {number} PAUSED=2 PAUSED value
                         * @property {number} DISABLED=3 DISABLED value
                         */
                        Queue.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "RUNNING"] = 1;
                            values[valuesById[2] = "PAUSED"] = 2;
                            values[valuesById[3] = "DISABLED"] = 3;
                            return values;
                        })();
    
                        return Queue;
                    })();
    
                    v2beta2.RateLimits = (function() {
    
                        /**
                         * Properties of a RateLimits.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IRateLimits
                         * @property {number|null} [maxTasksDispatchedPerSecond] RateLimits maxTasksDispatchedPerSecond
                         * @property {number|null} [maxBurstSize] RateLimits maxBurstSize
                         * @property {number|null} [maxConcurrentTasks] RateLimits maxConcurrentTasks
                         */
    
                        /**
                         * Constructs a new RateLimits.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a RateLimits.
                         * @implements IRateLimits
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IRateLimits=} [properties] Properties to set
                         */
                        function RateLimits(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RateLimits maxTasksDispatchedPerSecond.
                         * @member {number} maxTasksDispatchedPerSecond
                         * @memberof google.cloud.tasks.v2beta2.RateLimits
                         * @instance
                         */
                        RateLimits.prototype.maxTasksDispatchedPerSecond = 0;
    
                        /**
                         * RateLimits maxBurstSize.
                         * @member {number} maxBurstSize
                         * @memberof google.cloud.tasks.v2beta2.RateLimits
                         * @instance
                         */
                        RateLimits.prototype.maxBurstSize = 0;
    
                        /**
                         * RateLimits maxConcurrentTasks.
                         * @member {number} maxConcurrentTasks
                         * @memberof google.cloud.tasks.v2beta2.RateLimits
                         * @instance
                         */
                        RateLimits.prototype.maxConcurrentTasks = 0;
    
                        /**
                         * Creates a new RateLimits instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.RateLimits
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IRateLimits=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.RateLimits} RateLimits instance
                         */
                        RateLimits.create = function create(properties) {
                            return new RateLimits(properties);
                        };
    
                        /**
                         * Encodes the specified RateLimits message. Does not implicitly {@link google.cloud.tasks.v2beta2.RateLimits.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.RateLimits
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IRateLimits} message RateLimits message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RateLimits.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.maxTasksDispatchedPerSecond != null && Object.hasOwnProperty.call(message, "maxTasksDispatchedPerSecond"))
                                writer.uint32(/* id 1, wireType 1 =*/9).double(message.maxTasksDispatchedPerSecond);
                            if (message.maxBurstSize != null && Object.hasOwnProperty.call(message, "maxBurstSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.maxBurstSize);
                            if (message.maxConcurrentTasks != null && Object.hasOwnProperty.call(message, "maxConcurrentTasks"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.maxConcurrentTasks);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RateLimits message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.RateLimits.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.RateLimits
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IRateLimits} message RateLimits message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RateLimits.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RateLimits message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.RateLimits
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.RateLimits} RateLimits
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RateLimits.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.RateLimits();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.maxTasksDispatchedPerSecond = reader.double();
                                        break;
                                    }
                                case 2: {
                                        message.maxBurstSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.maxConcurrentTasks = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RateLimits message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.RateLimits
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.RateLimits} RateLimits
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RateLimits.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RateLimits message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.RateLimits
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RateLimits.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.maxTasksDispatchedPerSecond != null && message.hasOwnProperty("maxTasksDispatchedPerSecond"))
                                if (typeof message.maxTasksDispatchedPerSecond !== "number")
                                    return "maxTasksDispatchedPerSecond: number expected";
                            if (message.maxBurstSize != null && message.hasOwnProperty("maxBurstSize"))
                                if (!$util.isInteger(message.maxBurstSize))
                                    return "maxBurstSize: integer expected";
                            if (message.maxConcurrentTasks != null && message.hasOwnProperty("maxConcurrentTasks"))
                                if (!$util.isInteger(message.maxConcurrentTasks))
                                    return "maxConcurrentTasks: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a RateLimits message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.RateLimits
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.RateLimits} RateLimits
                         */
                        RateLimits.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.RateLimits)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.RateLimits();
                            if (object.maxTasksDispatchedPerSecond != null)
                                message.maxTasksDispatchedPerSecond = Number(object.maxTasksDispatchedPerSecond);
                            if (object.maxBurstSize != null)
                                message.maxBurstSize = object.maxBurstSize | 0;
                            if (object.maxConcurrentTasks != null)
                                message.maxConcurrentTasks = object.maxConcurrentTasks | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RateLimits message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.RateLimits
                         * @static
                         * @param {google.cloud.tasks.v2beta2.RateLimits} message RateLimits
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RateLimits.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.maxTasksDispatchedPerSecond = 0;
                                object.maxBurstSize = 0;
                                object.maxConcurrentTasks = 0;
                            }
                            if (message.maxTasksDispatchedPerSecond != null && message.hasOwnProperty("maxTasksDispatchedPerSecond"))
                                object.maxTasksDispatchedPerSecond = options.json && !isFinite(message.maxTasksDispatchedPerSecond) ? String(message.maxTasksDispatchedPerSecond) : message.maxTasksDispatchedPerSecond;
                            if (message.maxBurstSize != null && message.hasOwnProperty("maxBurstSize"))
                                object.maxBurstSize = message.maxBurstSize;
                            if (message.maxConcurrentTasks != null && message.hasOwnProperty("maxConcurrentTasks"))
                                object.maxConcurrentTasks = message.maxConcurrentTasks;
                            return object;
                        };
    
                        /**
                         * Converts this RateLimits to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.RateLimits
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RateLimits.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RateLimits
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.RateLimits
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RateLimits.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.RateLimits";
                        };
    
                        return RateLimits;
                    })();
    
                    v2beta2.RetryConfig = (function() {
    
                        /**
                         * Properties of a RetryConfig.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IRetryConfig
                         * @property {number|null} [maxAttempts] RetryConfig maxAttempts
                         * @property {boolean|null} [unlimitedAttempts] RetryConfig unlimitedAttempts
                         * @property {google.protobuf.IDuration|null} [maxRetryDuration] RetryConfig maxRetryDuration
                         * @property {google.protobuf.IDuration|null} [minBackoff] RetryConfig minBackoff
                         * @property {google.protobuf.IDuration|null} [maxBackoff] RetryConfig maxBackoff
                         * @property {number|null} [maxDoublings] RetryConfig maxDoublings
                         */
    
                        /**
                         * Constructs a new RetryConfig.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a RetryConfig.
                         * @implements IRetryConfig
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IRetryConfig=} [properties] Properties to set
                         */
                        function RetryConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RetryConfig maxAttempts.
                         * @member {number|null|undefined} maxAttempts
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.maxAttempts = null;
    
                        /**
                         * RetryConfig unlimitedAttempts.
                         * @member {boolean|null|undefined} unlimitedAttempts
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.unlimitedAttempts = null;
    
                        /**
                         * RetryConfig maxRetryDuration.
                         * @member {google.protobuf.IDuration|null|undefined} maxRetryDuration
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.maxRetryDuration = null;
    
                        /**
                         * RetryConfig minBackoff.
                         * @member {google.protobuf.IDuration|null|undefined} minBackoff
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.minBackoff = null;
    
                        /**
                         * RetryConfig maxBackoff.
                         * @member {google.protobuf.IDuration|null|undefined} maxBackoff
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.maxBackoff = null;
    
                        /**
                         * RetryConfig maxDoublings.
                         * @member {number} maxDoublings
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.maxDoublings = 0;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * RetryConfig numAttempts.
                         * @member {"maxAttempts"|"unlimitedAttempts"|undefined} numAttempts
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @instance
                         */
                        Object.defineProperty(RetryConfig.prototype, "numAttempts", {
                            get: $util.oneOfGetter($oneOfFields = ["maxAttempts", "unlimitedAttempts"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new RetryConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IRetryConfig=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.RetryConfig} RetryConfig instance
                         */
                        RetryConfig.create = function create(properties) {
                            return new RetryConfig(properties);
                        };
    
                        /**
                         * Encodes the specified RetryConfig message. Does not implicitly {@link google.cloud.tasks.v2beta2.RetryConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IRetryConfig} message RetryConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetryConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.maxAttempts != null && Object.hasOwnProperty.call(message, "maxAttempts"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.maxAttempts);
                            if (message.unlimitedAttempts != null && Object.hasOwnProperty.call(message, "unlimitedAttempts"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.unlimitedAttempts);
                            if (message.maxRetryDuration != null && Object.hasOwnProperty.call(message, "maxRetryDuration"))
                                $root.google.protobuf.Duration.encode(message.maxRetryDuration, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.minBackoff != null && Object.hasOwnProperty.call(message, "minBackoff"))
                                $root.google.protobuf.Duration.encode(message.minBackoff, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.maxBackoff != null && Object.hasOwnProperty.call(message, "maxBackoff"))
                                $root.google.protobuf.Duration.encode(message.maxBackoff, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.maxDoublings != null && Object.hasOwnProperty.call(message, "maxDoublings"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.maxDoublings);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RetryConfig message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.RetryConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IRetryConfig} message RetryConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetryConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RetryConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.RetryConfig} RetryConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetryConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.RetryConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.maxAttempts = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.unlimitedAttempts = reader.bool();
                                        break;
                                    }
                                case 3: {
                                        message.maxRetryDuration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.minBackoff = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.maxBackoff = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.maxDoublings = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RetryConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.RetryConfig} RetryConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetryConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RetryConfig message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RetryConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.maxAttempts != null && message.hasOwnProperty("maxAttempts")) {
                                properties.numAttempts = 1;
                                if (!$util.isInteger(message.maxAttempts))
                                    return "maxAttempts: integer expected";
                            }
                            if (message.unlimitedAttempts != null && message.hasOwnProperty("unlimitedAttempts")) {
                                if (properties.numAttempts === 1)
                                    return "numAttempts: multiple values";
                                properties.numAttempts = 1;
                                if (typeof message.unlimitedAttempts !== "boolean")
                                    return "unlimitedAttempts: boolean expected";
                            }
                            if (message.maxRetryDuration != null && message.hasOwnProperty("maxRetryDuration")) {
                                var error = $root.google.protobuf.Duration.verify(message.maxRetryDuration);
                                if (error)
                                    return "maxRetryDuration." + error;
                            }
                            if (message.minBackoff != null && message.hasOwnProperty("minBackoff")) {
                                var error = $root.google.protobuf.Duration.verify(message.minBackoff);
                                if (error)
                                    return "minBackoff." + error;
                            }
                            if (message.maxBackoff != null && message.hasOwnProperty("maxBackoff")) {
                                var error = $root.google.protobuf.Duration.verify(message.maxBackoff);
                                if (error)
                                    return "maxBackoff." + error;
                            }
                            if (message.maxDoublings != null && message.hasOwnProperty("maxDoublings"))
                                if (!$util.isInteger(message.maxDoublings))
                                    return "maxDoublings: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a RetryConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.RetryConfig} RetryConfig
                         */
                        RetryConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.RetryConfig)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.RetryConfig();
                            if (object.maxAttempts != null)
                                message.maxAttempts = object.maxAttempts | 0;
                            if (object.unlimitedAttempts != null)
                                message.unlimitedAttempts = Boolean(object.unlimitedAttempts);
                            if (object.maxRetryDuration != null) {
                                if (typeof object.maxRetryDuration !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.RetryConfig.maxRetryDuration: object expected");
                                message.maxRetryDuration = $root.google.protobuf.Duration.fromObject(object.maxRetryDuration);
                            }
                            if (object.minBackoff != null) {
                                if (typeof object.minBackoff !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.RetryConfig.minBackoff: object expected");
                                message.minBackoff = $root.google.protobuf.Duration.fromObject(object.minBackoff);
                            }
                            if (object.maxBackoff != null) {
                                if (typeof object.maxBackoff !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.RetryConfig.maxBackoff: object expected");
                                message.maxBackoff = $root.google.protobuf.Duration.fromObject(object.maxBackoff);
                            }
                            if (object.maxDoublings != null)
                                message.maxDoublings = object.maxDoublings | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RetryConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @static
                         * @param {google.cloud.tasks.v2beta2.RetryConfig} message RetryConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RetryConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.maxRetryDuration = null;
                                object.minBackoff = null;
                                object.maxBackoff = null;
                                object.maxDoublings = 0;
                            }
                            if (message.maxAttempts != null && message.hasOwnProperty("maxAttempts")) {
                                object.maxAttempts = message.maxAttempts;
                                if (options.oneofs)
                                    object.numAttempts = "maxAttempts";
                            }
                            if (message.unlimitedAttempts != null && message.hasOwnProperty("unlimitedAttempts")) {
                                object.unlimitedAttempts = message.unlimitedAttempts;
                                if (options.oneofs)
                                    object.numAttempts = "unlimitedAttempts";
                            }
                            if (message.maxRetryDuration != null && message.hasOwnProperty("maxRetryDuration"))
                                object.maxRetryDuration = $root.google.protobuf.Duration.toObject(message.maxRetryDuration, options);
                            if (message.minBackoff != null && message.hasOwnProperty("minBackoff"))
                                object.minBackoff = $root.google.protobuf.Duration.toObject(message.minBackoff, options);
                            if (message.maxBackoff != null && message.hasOwnProperty("maxBackoff"))
                                object.maxBackoff = $root.google.protobuf.Duration.toObject(message.maxBackoff, options);
                            if (message.maxDoublings != null && message.hasOwnProperty("maxDoublings"))
                                object.maxDoublings = message.maxDoublings;
                            return object;
                        };
    
                        /**
                         * Converts this RetryConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RetryConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RetryConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RetryConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.RetryConfig";
                        };
    
                        return RetryConfig;
                    })();
    
                    v2beta2.QueueStats = (function() {
    
                        /**
                         * Properties of a QueueStats.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IQueueStats
                         * @property {number|Long|null} [tasksCount] QueueStats tasksCount
                         * @property {google.protobuf.ITimestamp|null} [oldestEstimatedArrivalTime] QueueStats oldestEstimatedArrivalTime
                         * @property {number|Long|null} [executedLastMinuteCount] QueueStats executedLastMinuteCount
                         * @property {number|Long|null} [concurrentDispatchesCount] QueueStats concurrentDispatchesCount
                         * @property {number|null} [effectiveExecutionRate] QueueStats effectiveExecutionRate
                         */
    
                        /**
                         * Constructs a new QueueStats.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a QueueStats.
                         * @implements IQueueStats
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IQueueStats=} [properties] Properties to set
                         */
                        function QueueStats(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * QueueStats tasksCount.
                         * @member {number|Long} tasksCount
                         * @memberof google.cloud.tasks.v2beta2.QueueStats
                         * @instance
                         */
                        QueueStats.prototype.tasksCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * QueueStats oldestEstimatedArrivalTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} oldestEstimatedArrivalTime
                         * @memberof google.cloud.tasks.v2beta2.QueueStats
                         * @instance
                         */
                        QueueStats.prototype.oldestEstimatedArrivalTime = null;
    
                        /**
                         * QueueStats executedLastMinuteCount.
                         * @member {number|Long} executedLastMinuteCount
                         * @memberof google.cloud.tasks.v2beta2.QueueStats
                         * @instance
                         */
                        QueueStats.prototype.executedLastMinuteCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * QueueStats concurrentDispatchesCount.
                         * @member {number|Long} concurrentDispatchesCount
                         * @memberof google.cloud.tasks.v2beta2.QueueStats
                         * @instance
                         */
                        QueueStats.prototype.concurrentDispatchesCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * QueueStats effectiveExecutionRate.
                         * @member {number} effectiveExecutionRate
                         * @memberof google.cloud.tasks.v2beta2.QueueStats
                         * @instance
                         */
                        QueueStats.prototype.effectiveExecutionRate = 0;
    
                        /**
                         * Creates a new QueueStats instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.QueueStats
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IQueueStats=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.QueueStats} QueueStats instance
                         */
                        QueueStats.create = function create(properties) {
                            return new QueueStats(properties);
                        };
    
                        /**
                         * Encodes the specified QueueStats message. Does not implicitly {@link google.cloud.tasks.v2beta2.QueueStats.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.QueueStats
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IQueueStats} message QueueStats message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QueueStats.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.tasksCount != null && Object.hasOwnProperty.call(message, "tasksCount"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.tasksCount);
                            if (message.oldestEstimatedArrivalTime != null && Object.hasOwnProperty.call(message, "oldestEstimatedArrivalTime"))
                                $root.google.protobuf.Timestamp.encode(message.oldestEstimatedArrivalTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.executedLastMinuteCount != null && Object.hasOwnProperty.call(message, "executedLastMinuteCount"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.executedLastMinuteCount);
                            if (message.concurrentDispatchesCount != null && Object.hasOwnProperty.call(message, "concurrentDispatchesCount"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int64(message.concurrentDispatchesCount);
                            if (message.effectiveExecutionRate != null && Object.hasOwnProperty.call(message, "effectiveExecutionRate"))
                                writer.uint32(/* id 5, wireType 1 =*/41).double(message.effectiveExecutionRate);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified QueueStats message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.QueueStats.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.QueueStats
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IQueueStats} message QueueStats message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QueueStats.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a QueueStats message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.QueueStats
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.QueueStats} QueueStats
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QueueStats.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.QueueStats();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.tasksCount = reader.int64();
                                        break;
                                    }
                                case 2: {
                                        message.oldestEstimatedArrivalTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.executedLastMinuteCount = reader.int64();
                                        break;
                                    }
                                case 4: {
                                        message.concurrentDispatchesCount = reader.int64();
                                        break;
                                    }
                                case 5: {
                                        message.effectiveExecutionRate = reader.double();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a QueueStats message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.QueueStats
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.QueueStats} QueueStats
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QueueStats.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a QueueStats message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.QueueStats
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        QueueStats.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.tasksCount != null && message.hasOwnProperty("tasksCount"))
                                if (!$util.isInteger(message.tasksCount) && !(message.tasksCount && $util.isInteger(message.tasksCount.low) && $util.isInteger(message.tasksCount.high)))
                                    return "tasksCount: integer|Long expected";
                            if (message.oldestEstimatedArrivalTime != null && message.hasOwnProperty("oldestEstimatedArrivalTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.oldestEstimatedArrivalTime);
                                if (error)
                                    return "oldestEstimatedArrivalTime." + error;
                            }
                            if (message.executedLastMinuteCount != null && message.hasOwnProperty("executedLastMinuteCount"))
                                if (!$util.isInteger(message.executedLastMinuteCount) && !(message.executedLastMinuteCount && $util.isInteger(message.executedLastMinuteCount.low) && $util.isInteger(message.executedLastMinuteCount.high)))
                                    return "executedLastMinuteCount: integer|Long expected";
                            if (message.concurrentDispatchesCount != null && message.hasOwnProperty("concurrentDispatchesCount"))
                                if (!$util.isInteger(message.concurrentDispatchesCount) && !(message.concurrentDispatchesCount && $util.isInteger(message.concurrentDispatchesCount.low) && $util.isInteger(message.concurrentDispatchesCount.high)))
                                    return "concurrentDispatchesCount: integer|Long expected";
                            if (message.effectiveExecutionRate != null && message.hasOwnProperty("effectiveExecutionRate"))
                                if (typeof message.effectiveExecutionRate !== "number")
                                    return "effectiveExecutionRate: number expected";
                            return null;
                        };
    
                        /**
                         * Creates a QueueStats message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.QueueStats
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.QueueStats} QueueStats
                         */
                        QueueStats.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.QueueStats)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.QueueStats();
                            if (object.tasksCount != null)
                                if ($util.Long)
                                    (message.tasksCount = $util.Long.fromValue(object.tasksCount)).unsigned = false;
                                else if (typeof object.tasksCount === "string")
                                    message.tasksCount = parseInt(object.tasksCount, 10);
                                else if (typeof object.tasksCount === "number")
                                    message.tasksCount = object.tasksCount;
                                else if (typeof object.tasksCount === "object")
                                    message.tasksCount = new $util.LongBits(object.tasksCount.low >>> 0, object.tasksCount.high >>> 0).toNumber();
                            if (object.oldestEstimatedArrivalTime != null) {
                                if (typeof object.oldestEstimatedArrivalTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.QueueStats.oldestEstimatedArrivalTime: object expected");
                                message.oldestEstimatedArrivalTime = $root.google.protobuf.Timestamp.fromObject(object.oldestEstimatedArrivalTime);
                            }
                            if (object.executedLastMinuteCount != null)
                                if ($util.Long)
                                    (message.executedLastMinuteCount = $util.Long.fromValue(object.executedLastMinuteCount)).unsigned = false;
                                else if (typeof object.executedLastMinuteCount === "string")
                                    message.executedLastMinuteCount = parseInt(object.executedLastMinuteCount, 10);
                                else if (typeof object.executedLastMinuteCount === "number")
                                    message.executedLastMinuteCount = object.executedLastMinuteCount;
                                else if (typeof object.executedLastMinuteCount === "object")
                                    message.executedLastMinuteCount = new $util.LongBits(object.executedLastMinuteCount.low >>> 0, object.executedLastMinuteCount.high >>> 0).toNumber();
                            if (object.concurrentDispatchesCount != null)
                                if ($util.Long)
                                    (message.concurrentDispatchesCount = $util.Long.fromValue(object.concurrentDispatchesCount)).unsigned = false;
                                else if (typeof object.concurrentDispatchesCount === "string")
                                    message.concurrentDispatchesCount = parseInt(object.concurrentDispatchesCount, 10);
                                else if (typeof object.concurrentDispatchesCount === "number")
                                    message.concurrentDispatchesCount = object.concurrentDispatchesCount;
                                else if (typeof object.concurrentDispatchesCount === "object")
                                    message.concurrentDispatchesCount = new $util.LongBits(object.concurrentDispatchesCount.low >>> 0, object.concurrentDispatchesCount.high >>> 0).toNumber();
                            if (object.effectiveExecutionRate != null)
                                message.effectiveExecutionRate = Number(object.effectiveExecutionRate);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a QueueStats message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.QueueStats
                         * @static
                         * @param {google.cloud.tasks.v2beta2.QueueStats} message QueueStats
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        QueueStats.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.tasksCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.tasksCount = options.longs === String ? "0" : 0;
                                object.oldestEstimatedArrivalTime = null;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.executedLastMinuteCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.executedLastMinuteCount = options.longs === String ? "0" : 0;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.concurrentDispatchesCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.concurrentDispatchesCount = options.longs === String ? "0" : 0;
                                object.effectiveExecutionRate = 0;
                            }
                            if (message.tasksCount != null && message.hasOwnProperty("tasksCount"))
                                if (typeof message.tasksCount === "number")
                                    object.tasksCount = options.longs === String ? String(message.tasksCount) : message.tasksCount;
                                else
                                    object.tasksCount = options.longs === String ? $util.Long.prototype.toString.call(message.tasksCount) : options.longs === Number ? new $util.LongBits(message.tasksCount.low >>> 0, message.tasksCount.high >>> 0).toNumber() : message.tasksCount;
                            if (message.oldestEstimatedArrivalTime != null && message.hasOwnProperty("oldestEstimatedArrivalTime"))
                                object.oldestEstimatedArrivalTime = $root.google.protobuf.Timestamp.toObject(message.oldestEstimatedArrivalTime, options);
                            if (message.executedLastMinuteCount != null && message.hasOwnProperty("executedLastMinuteCount"))
                                if (typeof message.executedLastMinuteCount === "number")
                                    object.executedLastMinuteCount = options.longs === String ? String(message.executedLastMinuteCount) : message.executedLastMinuteCount;
                                else
                                    object.executedLastMinuteCount = options.longs === String ? $util.Long.prototype.toString.call(message.executedLastMinuteCount) : options.longs === Number ? new $util.LongBits(message.executedLastMinuteCount.low >>> 0, message.executedLastMinuteCount.high >>> 0).toNumber() : message.executedLastMinuteCount;
                            if (message.concurrentDispatchesCount != null && message.hasOwnProperty("concurrentDispatchesCount"))
                                if (typeof message.concurrentDispatchesCount === "number")
                                    object.concurrentDispatchesCount = options.longs === String ? String(message.concurrentDispatchesCount) : message.concurrentDispatchesCount;
                                else
                                    object.concurrentDispatchesCount = options.longs === String ? $util.Long.prototype.toString.call(message.concurrentDispatchesCount) : options.longs === Number ? new $util.LongBits(message.concurrentDispatchesCount.low >>> 0, message.concurrentDispatchesCount.high >>> 0).toNumber() : message.concurrentDispatchesCount;
                            if (message.effectiveExecutionRate != null && message.hasOwnProperty("effectiveExecutionRate"))
                                object.effectiveExecutionRate = options.json && !isFinite(message.effectiveExecutionRate) ? String(message.effectiveExecutionRate) : message.effectiveExecutionRate;
                            return object;
                        };
    
                        /**
                         * Converts this QueueStats to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.QueueStats
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        QueueStats.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for QueueStats
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.QueueStats
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        QueueStats.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.QueueStats";
                        };
    
                        return QueueStats;
                    })();
    
                    v2beta2.PullTarget = (function() {
    
                        /**
                         * Properties of a PullTarget.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IPullTarget
                         */
    
                        /**
                         * Constructs a new PullTarget.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a PullTarget.
                         * @implements IPullTarget
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IPullTarget=} [properties] Properties to set
                         */
                        function PullTarget(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new PullTarget instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.PullTarget
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IPullTarget=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.PullTarget} PullTarget instance
                         */
                        PullTarget.create = function create(properties) {
                            return new PullTarget(properties);
                        };
    
                        /**
                         * Encodes the specified PullTarget message. Does not implicitly {@link google.cloud.tasks.v2beta2.PullTarget.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.PullTarget
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IPullTarget} message PullTarget message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PullTarget.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PullTarget message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.PullTarget.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.PullTarget
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IPullTarget} message PullTarget message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PullTarget.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PullTarget message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.PullTarget
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.PullTarget} PullTarget
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PullTarget.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.PullTarget();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PullTarget message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.PullTarget
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.PullTarget} PullTarget
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PullTarget.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PullTarget message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.PullTarget
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PullTarget.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a PullTarget message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.PullTarget
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.PullTarget} PullTarget
                         */
                        PullTarget.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.PullTarget)
                                return object;
                            return new $root.google.cloud.tasks.v2beta2.PullTarget();
                        };
    
                        /**
                         * Creates a plain object from a PullTarget message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.PullTarget
                         * @static
                         * @param {google.cloud.tasks.v2beta2.PullTarget} message PullTarget
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PullTarget.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this PullTarget to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.PullTarget
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PullTarget.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PullTarget
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.PullTarget
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PullTarget.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.PullTarget";
                        };
    
                        return PullTarget;
                    })();
    
                    v2beta2.PullMessage = (function() {
    
                        /**
                         * Properties of a PullMessage.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IPullMessage
                         * @property {Uint8Array|null} [payload] PullMessage payload
                         * @property {string|null} [tag] PullMessage tag
                         */
    
                        /**
                         * Constructs a new PullMessage.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a PullMessage.
                         * @implements IPullMessage
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IPullMessage=} [properties] Properties to set
                         */
                        function PullMessage(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PullMessage payload.
                         * @member {Uint8Array} payload
                         * @memberof google.cloud.tasks.v2beta2.PullMessage
                         * @instance
                         */
                        PullMessage.prototype.payload = $util.newBuffer([]);
    
                        /**
                         * PullMessage tag.
                         * @member {string} tag
                         * @memberof google.cloud.tasks.v2beta2.PullMessage
                         * @instance
                         */
                        PullMessage.prototype.tag = "";
    
                        /**
                         * Creates a new PullMessage instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.PullMessage
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IPullMessage=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.PullMessage} PullMessage instance
                         */
                        PullMessage.create = function create(properties) {
                            return new PullMessage(properties);
                        };
    
                        /**
                         * Encodes the specified PullMessage message. Does not implicitly {@link google.cloud.tasks.v2beta2.PullMessage.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.PullMessage
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IPullMessage} message PullMessage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PullMessage.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.payload != null && Object.hasOwnProperty.call(message, "payload"))
                                writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.payload);
                            if (message.tag != null && Object.hasOwnProperty.call(message, "tag"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.tag);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PullMessage message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.PullMessage.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.PullMessage
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IPullMessage} message PullMessage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PullMessage.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PullMessage message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.PullMessage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.PullMessage} PullMessage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PullMessage.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.PullMessage();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.payload = reader.bytes();
                                        break;
                                    }
                                case 2: {
                                        message.tag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PullMessage message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.PullMessage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.PullMessage} PullMessage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PullMessage.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PullMessage message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.PullMessage
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PullMessage.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.payload != null && message.hasOwnProperty("payload"))
                                if (!(message.payload && typeof message.payload.length === "number" || $util.isString(message.payload)))
                                    return "payload: buffer expected";
                            if (message.tag != null && message.hasOwnProperty("tag"))
                                if (!$util.isString(message.tag))
                                    return "tag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PullMessage message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.PullMessage
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.PullMessage} PullMessage
                         */
                        PullMessage.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.PullMessage)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.PullMessage();
                            if (object.payload != null)
                                if (typeof object.payload === "string")
                                    $util.base64.decode(object.payload, message.payload = $util.newBuffer($util.base64.length(object.payload)), 0);
                                else if (object.payload.length >= 0)
                                    message.payload = object.payload;
                            if (object.tag != null)
                                message.tag = String(object.tag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PullMessage message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.PullMessage
                         * @static
                         * @param {google.cloud.tasks.v2beta2.PullMessage} message PullMessage
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PullMessage.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                if (options.bytes === String)
                                    object.payload = "";
                                else {
                                    object.payload = [];
                                    if (options.bytes !== Array)
                                        object.payload = $util.newBuffer(object.payload);
                                }
                                object.tag = "";
                            }
                            if (message.payload != null && message.hasOwnProperty("payload"))
                                object.payload = options.bytes === String ? $util.base64.encode(message.payload, 0, message.payload.length) : options.bytes === Array ? Array.prototype.slice.call(message.payload) : message.payload;
                            if (message.tag != null && message.hasOwnProperty("tag"))
                                object.tag = message.tag;
                            return object;
                        };
    
                        /**
                         * Converts this PullMessage to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.PullMessage
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PullMessage.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PullMessage
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.PullMessage
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PullMessage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.PullMessage";
                        };
    
                        return PullMessage;
                    })();
    
                    v2beta2.AppEngineHttpTarget = (function() {
    
                        /**
                         * Properties of an AppEngineHttpTarget.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IAppEngineHttpTarget
                         * @property {google.cloud.tasks.v2beta2.IAppEngineRouting|null} [appEngineRoutingOverride] AppEngineHttpTarget appEngineRoutingOverride
                         */
    
                        /**
                         * Constructs a new AppEngineHttpTarget.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents an AppEngineHttpTarget.
                         * @implements IAppEngineHttpTarget
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IAppEngineHttpTarget=} [properties] Properties to set
                         */
                        function AppEngineHttpTarget(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AppEngineHttpTarget appEngineRoutingOverride.
                         * @member {google.cloud.tasks.v2beta2.IAppEngineRouting|null|undefined} appEngineRoutingOverride
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpTarget
                         * @instance
                         */
                        AppEngineHttpTarget.prototype.appEngineRoutingOverride = null;
    
                        /**
                         * Creates a new AppEngineHttpTarget instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpTarget
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IAppEngineHttpTarget=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.AppEngineHttpTarget} AppEngineHttpTarget instance
                         */
                        AppEngineHttpTarget.create = function create(properties) {
                            return new AppEngineHttpTarget(properties);
                        };
    
                        /**
                         * Encodes the specified AppEngineHttpTarget message. Does not implicitly {@link google.cloud.tasks.v2beta2.AppEngineHttpTarget.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpTarget
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IAppEngineHttpTarget} message AppEngineHttpTarget message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AppEngineHttpTarget.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.appEngineRoutingOverride != null && Object.hasOwnProperty.call(message, "appEngineRoutingOverride"))
                                $root.google.cloud.tasks.v2beta2.AppEngineRouting.encode(message.appEngineRoutingOverride, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AppEngineHttpTarget message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.AppEngineHttpTarget.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpTarget
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IAppEngineHttpTarget} message AppEngineHttpTarget message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AppEngineHttpTarget.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AppEngineHttpTarget message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpTarget
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.AppEngineHttpTarget} AppEngineHttpTarget
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AppEngineHttpTarget.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.AppEngineHttpTarget();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.appEngineRoutingOverride = $root.google.cloud.tasks.v2beta2.AppEngineRouting.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AppEngineHttpTarget message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpTarget
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.AppEngineHttpTarget} AppEngineHttpTarget
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AppEngineHttpTarget.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AppEngineHttpTarget message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpTarget
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AppEngineHttpTarget.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.appEngineRoutingOverride != null && message.hasOwnProperty("appEngineRoutingOverride")) {
                                var error = $root.google.cloud.tasks.v2beta2.AppEngineRouting.verify(message.appEngineRoutingOverride);
                                if (error)
                                    return "appEngineRoutingOverride." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an AppEngineHttpTarget message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpTarget
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.AppEngineHttpTarget} AppEngineHttpTarget
                         */
                        AppEngineHttpTarget.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.AppEngineHttpTarget)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.AppEngineHttpTarget();
                            if (object.appEngineRoutingOverride != null) {
                                if (typeof object.appEngineRoutingOverride !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.AppEngineHttpTarget.appEngineRoutingOverride: object expected");
                                message.appEngineRoutingOverride = $root.google.cloud.tasks.v2beta2.AppEngineRouting.fromObject(object.appEngineRoutingOverride);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AppEngineHttpTarget message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpTarget
                         * @static
                         * @param {google.cloud.tasks.v2beta2.AppEngineHttpTarget} message AppEngineHttpTarget
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AppEngineHttpTarget.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.appEngineRoutingOverride = null;
                            if (message.appEngineRoutingOverride != null && message.hasOwnProperty("appEngineRoutingOverride"))
                                object.appEngineRoutingOverride = $root.google.cloud.tasks.v2beta2.AppEngineRouting.toObject(message.appEngineRoutingOverride, options);
                            return object;
                        };
    
                        /**
                         * Converts this AppEngineHttpTarget to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpTarget
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AppEngineHttpTarget.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AppEngineHttpTarget
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpTarget
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AppEngineHttpTarget.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.AppEngineHttpTarget";
                        };
    
                        return AppEngineHttpTarget;
                    })();
    
                    v2beta2.AppEngineHttpRequest = (function() {
    
                        /**
                         * Properties of an AppEngineHttpRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IAppEngineHttpRequest
                         * @property {google.cloud.tasks.v2beta2.HttpMethod|null} [httpMethod] AppEngineHttpRequest httpMethod
                         * @property {google.cloud.tasks.v2beta2.IAppEngineRouting|null} [appEngineRouting] AppEngineHttpRequest appEngineRouting
                         * @property {string|null} [relativeUrl] AppEngineHttpRequest relativeUrl
                         * @property {Object.<string,string>|null} [headers] AppEngineHttpRequest headers
                         * @property {Uint8Array|null} [payload] AppEngineHttpRequest payload
                         */
    
                        /**
                         * Constructs a new AppEngineHttpRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents an AppEngineHttpRequest.
                         * @implements IAppEngineHttpRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IAppEngineHttpRequest=} [properties] Properties to set
                         */
                        function AppEngineHttpRequest(properties) {
                            this.headers = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AppEngineHttpRequest httpMethod.
                         * @member {google.cloud.tasks.v2beta2.HttpMethod} httpMethod
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpRequest
                         * @instance
                         */
                        AppEngineHttpRequest.prototype.httpMethod = 0;
    
                        /**
                         * AppEngineHttpRequest appEngineRouting.
                         * @member {google.cloud.tasks.v2beta2.IAppEngineRouting|null|undefined} appEngineRouting
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpRequest
                         * @instance
                         */
                        AppEngineHttpRequest.prototype.appEngineRouting = null;
    
                        /**
                         * AppEngineHttpRequest relativeUrl.
                         * @member {string} relativeUrl
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpRequest
                         * @instance
                         */
                        AppEngineHttpRequest.prototype.relativeUrl = "";
    
                        /**
                         * AppEngineHttpRequest headers.
                         * @member {Object.<string,string>} headers
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpRequest
                         * @instance
                         */
                        AppEngineHttpRequest.prototype.headers = $util.emptyObject;
    
                        /**
                         * AppEngineHttpRequest payload.
                         * @member {Uint8Array} payload
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpRequest
                         * @instance
                         */
                        AppEngineHttpRequest.prototype.payload = $util.newBuffer([]);
    
                        /**
                         * Creates a new AppEngineHttpRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IAppEngineHttpRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.AppEngineHttpRequest} AppEngineHttpRequest instance
                         */
                        AppEngineHttpRequest.create = function create(properties) {
                            return new AppEngineHttpRequest(properties);
                        };
    
                        /**
                         * Encodes the specified AppEngineHttpRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.AppEngineHttpRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IAppEngineHttpRequest} message AppEngineHttpRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AppEngineHttpRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.httpMethod != null && Object.hasOwnProperty.call(message, "httpMethod"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.httpMethod);
                            if (message.appEngineRouting != null && Object.hasOwnProperty.call(message, "appEngineRouting"))
                                $root.google.cloud.tasks.v2beta2.AppEngineRouting.encode(message.appEngineRouting, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.relativeUrl != null && Object.hasOwnProperty.call(message, "relativeUrl"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.relativeUrl);
                            if (message.headers != null && Object.hasOwnProperty.call(message, "headers"))
                                for (var keys = Object.keys(message.headers), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.headers[keys[i]]).ldelim();
                            if (message.payload != null && Object.hasOwnProperty.call(message, "payload"))
                                writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.payload);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AppEngineHttpRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.AppEngineHttpRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IAppEngineHttpRequest} message AppEngineHttpRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AppEngineHttpRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AppEngineHttpRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.AppEngineHttpRequest} AppEngineHttpRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AppEngineHttpRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.AppEngineHttpRequest(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.httpMethod = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.appEngineRouting = $root.google.cloud.tasks.v2beta2.AppEngineRouting.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.relativeUrl = reader.string();
                                        break;
                                    }
                                case 4: {
                                        if (message.headers === $util.emptyObject)
                                            message.headers = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.headers[key] = value;
                                        break;
                                    }
                                case 5: {
                                        message.payload = reader.bytes();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AppEngineHttpRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.AppEngineHttpRequest} AppEngineHttpRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AppEngineHttpRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AppEngineHttpRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AppEngineHttpRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.httpMethod != null && message.hasOwnProperty("httpMethod"))
                                switch (message.httpMethod) {
                                default:
                                    return "httpMethod: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            if (message.appEngineRouting != null && message.hasOwnProperty("appEngineRouting")) {
                                var error = $root.google.cloud.tasks.v2beta2.AppEngineRouting.verify(message.appEngineRouting);
                                if (error)
                                    return "appEngineRouting." + error;
                            }
                            if (message.relativeUrl != null && message.hasOwnProperty("relativeUrl"))
                                if (!$util.isString(message.relativeUrl))
                                    return "relativeUrl: string expected";
                            if (message.headers != null && message.hasOwnProperty("headers")) {
                                if (!$util.isObject(message.headers))
                                    return "headers: object expected";
                                var key = Object.keys(message.headers);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.headers[key[i]]))
                                        return "headers: string{k:string} expected";
                            }
                            if (message.payload != null && message.hasOwnProperty("payload"))
                                if (!(message.payload && typeof message.payload.length === "number" || $util.isString(message.payload)))
                                    return "payload: buffer expected";
                            return null;
                        };
    
                        /**
                         * Creates an AppEngineHttpRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.AppEngineHttpRequest} AppEngineHttpRequest
                         */
                        AppEngineHttpRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.AppEngineHttpRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.AppEngineHttpRequest();
                            switch (object.httpMethod) {
                            default:
                                if (typeof object.httpMethod === "number") {
                                    message.httpMethod = object.httpMethod;
                                    break;
                                }
                                break;
                            case "HTTP_METHOD_UNSPECIFIED":
                            case 0:
                                message.httpMethod = 0;
                                break;
                            case "POST":
                            case 1:
                                message.httpMethod = 1;
                                break;
                            case "GET":
                            case 2:
                                message.httpMethod = 2;
                                break;
                            case "HEAD":
                            case 3:
                                message.httpMethod = 3;
                                break;
                            case "PUT":
                            case 4:
                                message.httpMethod = 4;
                                break;
                            case "DELETE":
                            case 5:
                                message.httpMethod = 5;
                                break;
                            case "PATCH":
                            case 6:
                                message.httpMethod = 6;
                                break;
                            case "OPTIONS":
                            case 7:
                                message.httpMethod = 7;
                                break;
                            }
                            if (object.appEngineRouting != null) {
                                if (typeof object.appEngineRouting !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.AppEngineHttpRequest.appEngineRouting: object expected");
                                message.appEngineRouting = $root.google.cloud.tasks.v2beta2.AppEngineRouting.fromObject(object.appEngineRouting);
                            }
                            if (object.relativeUrl != null)
                                message.relativeUrl = String(object.relativeUrl);
                            if (object.headers) {
                                if (typeof object.headers !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.AppEngineHttpRequest.headers: object expected");
                                message.headers = {};
                                for (var keys = Object.keys(object.headers), i = 0; i < keys.length; ++i)
                                    message.headers[keys[i]] = String(object.headers[keys[i]]);
                            }
                            if (object.payload != null)
                                if (typeof object.payload === "string")
                                    $util.base64.decode(object.payload, message.payload = $util.newBuffer($util.base64.length(object.payload)), 0);
                                else if (object.payload.length >= 0)
                                    message.payload = object.payload;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AppEngineHttpRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.AppEngineHttpRequest} message AppEngineHttpRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AppEngineHttpRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.headers = {};
                            if (options.defaults) {
                                object.httpMethod = options.enums === String ? "HTTP_METHOD_UNSPECIFIED" : 0;
                                object.appEngineRouting = null;
                                object.relativeUrl = "";
                                if (options.bytes === String)
                                    object.payload = "";
                                else {
                                    object.payload = [];
                                    if (options.bytes !== Array)
                                        object.payload = $util.newBuffer(object.payload);
                                }
                            }
                            if (message.httpMethod != null && message.hasOwnProperty("httpMethod"))
                                object.httpMethod = options.enums === String ? $root.google.cloud.tasks.v2beta2.HttpMethod[message.httpMethod] === undefined ? message.httpMethod : $root.google.cloud.tasks.v2beta2.HttpMethod[message.httpMethod] : message.httpMethod;
                            if (message.appEngineRouting != null && message.hasOwnProperty("appEngineRouting"))
                                object.appEngineRouting = $root.google.cloud.tasks.v2beta2.AppEngineRouting.toObject(message.appEngineRouting, options);
                            if (message.relativeUrl != null && message.hasOwnProperty("relativeUrl"))
                                object.relativeUrl = message.relativeUrl;
                            var keys2;
                            if (message.headers && (keys2 = Object.keys(message.headers)).length) {
                                object.headers = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.headers[keys2[j]] = message.headers[keys2[j]];
                            }
                            if (message.payload != null && message.hasOwnProperty("payload"))
                                object.payload = options.bytes === String ? $util.base64.encode(message.payload, 0, message.payload.length) : options.bytes === Array ? Array.prototype.slice.call(message.payload) : message.payload;
                            return object;
                        };
    
                        /**
                         * Converts this AppEngineHttpRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AppEngineHttpRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AppEngineHttpRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AppEngineHttpRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.AppEngineHttpRequest";
                        };
    
                        return AppEngineHttpRequest;
                    })();
    
                    v2beta2.AppEngineRouting = (function() {
    
                        /**
                         * Properties of an AppEngineRouting.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IAppEngineRouting
                         * @property {string|null} [service] AppEngineRouting service
                         * @property {string|null} [version] AppEngineRouting version
                         * @property {string|null} [instance] AppEngineRouting instance
                         * @property {string|null} [host] AppEngineRouting host
                         */
    
                        /**
                         * Constructs a new AppEngineRouting.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents an AppEngineRouting.
                         * @implements IAppEngineRouting
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IAppEngineRouting=} [properties] Properties to set
                         */
                        function AppEngineRouting(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AppEngineRouting service.
                         * @member {string} service
                         * @memberof google.cloud.tasks.v2beta2.AppEngineRouting
                         * @instance
                         */
                        AppEngineRouting.prototype.service = "";
    
                        /**
                         * AppEngineRouting version.
                         * @member {string} version
                         * @memberof google.cloud.tasks.v2beta2.AppEngineRouting
                         * @instance
                         */
                        AppEngineRouting.prototype.version = "";
    
                        /**
                         * AppEngineRouting instance.
                         * @member {string} instance
                         * @memberof google.cloud.tasks.v2beta2.AppEngineRouting
                         * @instance
                         */
                        AppEngineRouting.prototype.instance = "";
    
                        /**
                         * AppEngineRouting host.
                         * @member {string} host
                         * @memberof google.cloud.tasks.v2beta2.AppEngineRouting
                         * @instance
                         */
                        AppEngineRouting.prototype.host = "";
    
                        /**
                         * Creates a new AppEngineRouting instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.AppEngineRouting
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IAppEngineRouting=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.AppEngineRouting} AppEngineRouting instance
                         */
                        AppEngineRouting.create = function create(properties) {
                            return new AppEngineRouting(properties);
                        };
    
                        /**
                         * Encodes the specified AppEngineRouting message. Does not implicitly {@link google.cloud.tasks.v2beta2.AppEngineRouting.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.AppEngineRouting
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IAppEngineRouting} message AppEngineRouting message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AppEngineRouting.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.service);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.version);
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.instance);
                            if (message.host != null && Object.hasOwnProperty.call(message, "host"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.host);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AppEngineRouting message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.AppEngineRouting.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.AppEngineRouting
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IAppEngineRouting} message AppEngineRouting message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AppEngineRouting.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AppEngineRouting message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.AppEngineRouting
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.AppEngineRouting} AppEngineRouting
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AppEngineRouting.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.AppEngineRouting();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.service = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.version = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.instance = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.host = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AppEngineRouting message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.AppEngineRouting
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.AppEngineRouting} AppEngineRouting
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AppEngineRouting.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AppEngineRouting message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.AppEngineRouting
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AppEngineRouting.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.service != null && message.hasOwnProperty("service"))
                                if (!$util.isString(message.service))
                                    return "service: string expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.host != null && message.hasOwnProperty("host"))
                                if (!$util.isString(message.host))
                                    return "host: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an AppEngineRouting message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.AppEngineRouting
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.AppEngineRouting} AppEngineRouting
                         */
                        AppEngineRouting.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.AppEngineRouting)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.AppEngineRouting();
                            if (object.service != null)
                                message.service = String(object.service);
                            if (object.version != null)
                                message.version = String(object.version);
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.host != null)
                                message.host = String(object.host);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AppEngineRouting message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.AppEngineRouting
                         * @static
                         * @param {google.cloud.tasks.v2beta2.AppEngineRouting} message AppEngineRouting
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AppEngineRouting.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.service = "";
                                object.version = "";
                                object.instance = "";
                                object.host = "";
                            }
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = message.service;
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.host != null && message.hasOwnProperty("host"))
                                object.host = message.host;
                            return object;
                        };
    
                        /**
                         * Converts this AppEngineRouting to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.AppEngineRouting
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AppEngineRouting.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AppEngineRouting
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.AppEngineRouting
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AppEngineRouting.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.AppEngineRouting";
                        };
    
                        return AppEngineRouting;
                    })();
    
                    v2beta2.HttpRequest = (function() {
    
                        /**
                         * Properties of a HttpRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IHttpRequest
                         * @property {string|null} [url] HttpRequest url
                         * @property {google.cloud.tasks.v2beta2.HttpMethod|null} [httpMethod] HttpRequest httpMethod
                         * @property {Object.<string,string>|null} [headers] HttpRequest headers
                         * @property {Uint8Array|null} [body] HttpRequest body
                         * @property {google.cloud.tasks.v2beta2.IOAuthToken|null} [oauthToken] HttpRequest oauthToken
                         * @property {google.cloud.tasks.v2beta2.IOidcToken|null} [oidcToken] HttpRequest oidcToken
                         */
    
                        /**
                         * Constructs a new HttpRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a HttpRequest.
                         * @implements IHttpRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IHttpRequest=} [properties] Properties to set
                         */
                        function HttpRequest(properties) {
                            this.headers = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * HttpRequest url.
                         * @member {string} url
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @instance
                         */
                        HttpRequest.prototype.url = "";
    
                        /**
                         * HttpRequest httpMethod.
                         * @member {google.cloud.tasks.v2beta2.HttpMethod} httpMethod
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @instance
                         */
                        HttpRequest.prototype.httpMethod = 0;
    
                        /**
                         * HttpRequest headers.
                         * @member {Object.<string,string>} headers
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @instance
                         */
                        HttpRequest.prototype.headers = $util.emptyObject;
    
                        /**
                         * HttpRequest body.
                         * @member {Uint8Array} body
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @instance
                         */
                        HttpRequest.prototype.body = $util.newBuffer([]);
    
                        /**
                         * HttpRequest oauthToken.
                         * @member {google.cloud.tasks.v2beta2.IOAuthToken|null|undefined} oauthToken
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @instance
                         */
                        HttpRequest.prototype.oauthToken = null;
    
                        /**
                         * HttpRequest oidcToken.
                         * @member {google.cloud.tasks.v2beta2.IOidcToken|null|undefined} oidcToken
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @instance
                         */
                        HttpRequest.prototype.oidcToken = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * HttpRequest authorizationHeader.
                         * @member {"oauthToken"|"oidcToken"|undefined} authorizationHeader
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @instance
                         */
                        Object.defineProperty(HttpRequest.prototype, "authorizationHeader", {
                            get: $util.oneOfGetter($oneOfFields = ["oauthToken", "oidcToken"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new HttpRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IHttpRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.HttpRequest} HttpRequest instance
                         */
                        HttpRequest.create = function create(properties) {
                            return new HttpRequest(properties);
                        };
    
                        /**
                         * Encodes the specified HttpRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.HttpRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IHttpRequest} message HttpRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HttpRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.url != null && Object.hasOwnProperty.call(message, "url"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.url);
                            if (message.httpMethod != null && Object.hasOwnProperty.call(message, "httpMethod"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.httpMethod);
                            if (message.headers != null && Object.hasOwnProperty.call(message, "headers"))
                                for (var keys = Object.keys(message.headers), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.headers[keys[i]]).ldelim();
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.body);
                            if (message.oauthToken != null && Object.hasOwnProperty.call(message, "oauthToken"))
                                $root.google.cloud.tasks.v2beta2.OAuthToken.encode(message.oauthToken, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.oidcToken != null && Object.hasOwnProperty.call(message, "oidcToken"))
                                $root.google.cloud.tasks.v2beta2.OidcToken.encode(message.oidcToken, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified HttpRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.HttpRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IHttpRequest} message HttpRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HttpRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a HttpRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.HttpRequest} HttpRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HttpRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.HttpRequest(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.url = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.httpMethod = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        if (message.headers === $util.emptyObject)
                                            message.headers = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.headers[key] = value;
                                        break;
                                    }
                                case 4: {
                                        message.body = reader.bytes();
                                        break;
                                    }
                                case 5: {
                                        message.oauthToken = $root.google.cloud.tasks.v2beta2.OAuthToken.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.oidcToken = $root.google.cloud.tasks.v2beta2.OidcToken.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a HttpRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.HttpRequest} HttpRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HttpRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a HttpRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        HttpRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.url != null && message.hasOwnProperty("url"))
                                if (!$util.isString(message.url))
                                    return "url: string expected";
                            if (message.httpMethod != null && message.hasOwnProperty("httpMethod"))
                                switch (message.httpMethod) {
                                default:
                                    return "httpMethod: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            if (message.headers != null && message.hasOwnProperty("headers")) {
                                if (!$util.isObject(message.headers))
                                    return "headers: object expected";
                                var key = Object.keys(message.headers);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.headers[key[i]]))
                                        return "headers: string{k:string} expected";
                            }
                            if (message.body != null && message.hasOwnProperty("body"))
                                if (!(message.body && typeof message.body.length === "number" || $util.isString(message.body)))
                                    return "body: buffer expected";
                            if (message.oauthToken != null && message.hasOwnProperty("oauthToken")) {
                                properties.authorizationHeader = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2beta2.OAuthToken.verify(message.oauthToken);
                                    if (error)
                                        return "oauthToken." + error;
                                }
                            }
                            if (message.oidcToken != null && message.hasOwnProperty("oidcToken")) {
                                if (properties.authorizationHeader === 1)
                                    return "authorizationHeader: multiple values";
                                properties.authorizationHeader = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2beta2.OidcToken.verify(message.oidcToken);
                                    if (error)
                                        return "oidcToken." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a HttpRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.HttpRequest} HttpRequest
                         */
                        HttpRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.HttpRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.HttpRequest();
                            if (object.url != null)
                                message.url = String(object.url);
                            switch (object.httpMethod) {
                            default:
                                if (typeof object.httpMethod === "number") {
                                    message.httpMethod = object.httpMethod;
                                    break;
                                }
                                break;
                            case "HTTP_METHOD_UNSPECIFIED":
                            case 0:
                                message.httpMethod = 0;
                                break;
                            case "POST":
                            case 1:
                                message.httpMethod = 1;
                                break;
                            case "GET":
                            case 2:
                                message.httpMethod = 2;
                                break;
                            case "HEAD":
                            case 3:
                                message.httpMethod = 3;
                                break;
                            case "PUT":
                            case 4:
                                message.httpMethod = 4;
                                break;
                            case "DELETE":
                            case 5:
                                message.httpMethod = 5;
                                break;
                            case "PATCH":
                            case 6:
                                message.httpMethod = 6;
                                break;
                            case "OPTIONS":
                            case 7:
                                message.httpMethod = 7;
                                break;
                            }
                            if (object.headers) {
                                if (typeof object.headers !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.HttpRequest.headers: object expected");
                                message.headers = {};
                                for (var keys = Object.keys(object.headers), i = 0; i < keys.length; ++i)
                                    message.headers[keys[i]] = String(object.headers[keys[i]]);
                            }
                            if (object.body != null)
                                if (typeof object.body === "string")
                                    $util.base64.decode(object.body, message.body = $util.newBuffer($util.base64.length(object.body)), 0);
                                else if (object.body.length >= 0)
                                    message.body = object.body;
                            if (object.oauthToken != null) {
                                if (typeof object.oauthToken !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.HttpRequest.oauthToken: object expected");
                                message.oauthToken = $root.google.cloud.tasks.v2beta2.OAuthToken.fromObject(object.oauthToken);
                            }
                            if (object.oidcToken != null) {
                                if (typeof object.oidcToken !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.HttpRequest.oidcToken: object expected");
                                message.oidcToken = $root.google.cloud.tasks.v2beta2.OidcToken.fromObject(object.oidcToken);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a HttpRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.HttpRequest} message HttpRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        HttpRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.headers = {};
                            if (options.defaults) {
                                object.url = "";
                                object.httpMethod = options.enums === String ? "HTTP_METHOD_UNSPECIFIED" : 0;
                                if (options.bytes === String)
                                    object.body = "";
                                else {
                                    object.body = [];
                                    if (options.bytes !== Array)
                                        object.body = $util.newBuffer(object.body);
                                }
                            }
                            if (message.url != null && message.hasOwnProperty("url"))
                                object.url = message.url;
                            if (message.httpMethod != null && message.hasOwnProperty("httpMethod"))
                                object.httpMethod = options.enums === String ? $root.google.cloud.tasks.v2beta2.HttpMethod[message.httpMethod] === undefined ? message.httpMethod : $root.google.cloud.tasks.v2beta2.HttpMethod[message.httpMethod] : message.httpMethod;
                            var keys2;
                            if (message.headers && (keys2 = Object.keys(message.headers)).length) {
                                object.headers = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.headers[keys2[j]] = message.headers[keys2[j]];
                            }
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = options.bytes === String ? $util.base64.encode(message.body, 0, message.body.length) : options.bytes === Array ? Array.prototype.slice.call(message.body) : message.body;
                            if (message.oauthToken != null && message.hasOwnProperty("oauthToken")) {
                                object.oauthToken = $root.google.cloud.tasks.v2beta2.OAuthToken.toObject(message.oauthToken, options);
                                if (options.oneofs)
                                    object.authorizationHeader = "oauthToken";
                            }
                            if (message.oidcToken != null && message.hasOwnProperty("oidcToken")) {
                                object.oidcToken = $root.google.cloud.tasks.v2beta2.OidcToken.toObject(message.oidcToken, options);
                                if (options.oneofs)
                                    object.authorizationHeader = "oidcToken";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this HttpRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        HttpRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for HttpRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        HttpRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.HttpRequest";
                        };
    
                        return HttpRequest;
                    })();
    
                    v2beta2.PathOverride = (function() {
    
                        /**
                         * Properties of a PathOverride.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IPathOverride
                         * @property {string|null} [path] PathOverride path
                         */
    
                        /**
                         * Constructs a new PathOverride.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a PathOverride.
                         * @implements IPathOverride
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IPathOverride=} [properties] Properties to set
                         */
                        function PathOverride(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PathOverride path.
                         * @member {string} path
                         * @memberof google.cloud.tasks.v2beta2.PathOverride
                         * @instance
                         */
                        PathOverride.prototype.path = "";
    
                        /**
                         * Creates a new PathOverride instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.PathOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IPathOverride=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.PathOverride} PathOverride instance
                         */
                        PathOverride.create = function create(properties) {
                            return new PathOverride(properties);
                        };
    
                        /**
                         * Encodes the specified PathOverride message. Does not implicitly {@link google.cloud.tasks.v2beta2.PathOverride.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.PathOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IPathOverride} message PathOverride message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PathOverride.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.path);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PathOverride message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.PathOverride.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.PathOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IPathOverride} message PathOverride message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PathOverride.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PathOverride message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.PathOverride
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.PathOverride} PathOverride
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PathOverride.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.PathOverride();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.path = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PathOverride message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.PathOverride
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.PathOverride} PathOverride
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PathOverride.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PathOverride message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.PathOverride
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PathOverride.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.path != null && message.hasOwnProperty("path"))
                                if (!$util.isString(message.path))
                                    return "path: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PathOverride message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.PathOverride
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.PathOverride} PathOverride
                         */
                        PathOverride.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.PathOverride)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.PathOverride();
                            if (object.path != null)
                                message.path = String(object.path);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PathOverride message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.PathOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta2.PathOverride} message PathOverride
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PathOverride.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.path = "";
                            if (message.path != null && message.hasOwnProperty("path"))
                                object.path = message.path;
                            return object;
                        };
    
                        /**
                         * Converts this PathOverride to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.PathOverride
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PathOverride.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PathOverride
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.PathOverride
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PathOverride.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.PathOverride";
                        };
    
                        return PathOverride;
                    })();
    
                    v2beta2.QueryOverride = (function() {
    
                        /**
                         * Properties of a QueryOverride.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IQueryOverride
                         * @property {string|null} [queryParams] QueryOverride queryParams
                         */
    
                        /**
                         * Constructs a new QueryOverride.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a QueryOverride.
                         * @implements IQueryOverride
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IQueryOverride=} [properties] Properties to set
                         */
                        function QueryOverride(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * QueryOverride queryParams.
                         * @member {string} queryParams
                         * @memberof google.cloud.tasks.v2beta2.QueryOverride
                         * @instance
                         */
                        QueryOverride.prototype.queryParams = "";
    
                        /**
                         * Creates a new QueryOverride instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.QueryOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IQueryOverride=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.QueryOverride} QueryOverride instance
                         */
                        QueryOverride.create = function create(properties) {
                            return new QueryOverride(properties);
                        };
    
                        /**
                         * Encodes the specified QueryOverride message. Does not implicitly {@link google.cloud.tasks.v2beta2.QueryOverride.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.QueryOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IQueryOverride} message QueryOverride message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QueryOverride.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.queryParams != null && Object.hasOwnProperty.call(message, "queryParams"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.queryParams);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified QueryOverride message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.QueryOverride.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.QueryOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IQueryOverride} message QueryOverride message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QueryOverride.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a QueryOverride message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.QueryOverride
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.QueryOverride} QueryOverride
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QueryOverride.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.QueryOverride();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.queryParams = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a QueryOverride message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.QueryOverride
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.QueryOverride} QueryOverride
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QueryOverride.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a QueryOverride message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.QueryOverride
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        QueryOverride.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.queryParams != null && message.hasOwnProperty("queryParams"))
                                if (!$util.isString(message.queryParams))
                                    return "queryParams: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a QueryOverride message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.QueryOverride
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.QueryOverride} QueryOverride
                         */
                        QueryOverride.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.QueryOverride)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.QueryOverride();
                            if (object.queryParams != null)
                                message.queryParams = String(object.queryParams);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a QueryOverride message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.QueryOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta2.QueryOverride} message QueryOverride
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        QueryOverride.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.queryParams = "";
                            if (message.queryParams != null && message.hasOwnProperty("queryParams"))
                                object.queryParams = message.queryParams;
                            return object;
                        };
    
                        /**
                         * Converts this QueryOverride to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.QueryOverride
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        QueryOverride.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for QueryOverride
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.QueryOverride
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        QueryOverride.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.QueryOverride";
                        };
    
                        return QueryOverride;
                    })();
    
                    v2beta2.UriOverride = (function() {
    
                        /**
                         * Properties of an UriOverride.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IUriOverride
                         * @property {google.cloud.tasks.v2beta2.UriOverride.Scheme|null} [scheme] UriOverride scheme
                         * @property {string|null} [host] UriOverride host
                         * @property {number|Long|null} [port] UriOverride port
                         * @property {google.cloud.tasks.v2beta2.IPathOverride|null} [pathOverride] UriOverride pathOverride
                         * @property {google.cloud.tasks.v2beta2.IQueryOverride|null} [queryOverride] UriOverride queryOverride
                         * @property {google.cloud.tasks.v2beta2.UriOverride.UriOverrideEnforceMode|null} [uriOverrideEnforceMode] UriOverride uriOverrideEnforceMode
                         */
    
                        /**
                         * Constructs a new UriOverride.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents an UriOverride.
                         * @implements IUriOverride
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IUriOverride=} [properties] Properties to set
                         */
                        function UriOverride(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UriOverride scheme.
                         * @member {google.cloud.tasks.v2beta2.UriOverride.Scheme|null|undefined} scheme
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @instance
                         */
                        UriOverride.prototype.scheme = null;
    
                        /**
                         * UriOverride host.
                         * @member {string|null|undefined} host
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @instance
                         */
                        UriOverride.prototype.host = null;
    
                        /**
                         * UriOverride port.
                         * @member {number|Long|null|undefined} port
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @instance
                         */
                        UriOverride.prototype.port = null;
    
                        /**
                         * UriOverride pathOverride.
                         * @member {google.cloud.tasks.v2beta2.IPathOverride|null|undefined} pathOverride
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @instance
                         */
                        UriOverride.prototype.pathOverride = null;
    
                        /**
                         * UriOverride queryOverride.
                         * @member {google.cloud.tasks.v2beta2.IQueryOverride|null|undefined} queryOverride
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @instance
                         */
                        UriOverride.prototype.queryOverride = null;
    
                        /**
                         * UriOverride uriOverrideEnforceMode.
                         * @member {google.cloud.tasks.v2beta2.UriOverride.UriOverrideEnforceMode} uriOverrideEnforceMode
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @instance
                         */
                        UriOverride.prototype.uriOverrideEnforceMode = 0;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * UriOverride _scheme.
                         * @member {"scheme"|undefined} _scheme
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @instance
                         */
                        Object.defineProperty(UriOverride.prototype, "_scheme", {
                            get: $util.oneOfGetter($oneOfFields = ["scheme"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * UriOverride _host.
                         * @member {"host"|undefined} _host
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @instance
                         */
                        Object.defineProperty(UriOverride.prototype, "_host", {
                            get: $util.oneOfGetter($oneOfFields = ["host"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * UriOverride _port.
                         * @member {"port"|undefined} _port
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @instance
                         */
                        Object.defineProperty(UriOverride.prototype, "_port", {
                            get: $util.oneOfGetter($oneOfFields = ["port"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new UriOverride instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IUriOverride=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.UriOverride} UriOverride instance
                         */
                        UriOverride.create = function create(properties) {
                            return new UriOverride(properties);
                        };
    
                        /**
                         * Encodes the specified UriOverride message. Does not implicitly {@link google.cloud.tasks.v2beta2.UriOverride.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IUriOverride} message UriOverride message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UriOverride.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.scheme != null && Object.hasOwnProperty.call(message, "scheme"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.scheme);
                            if (message.host != null && Object.hasOwnProperty.call(message, "host"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.host);
                            if (message.port != null && Object.hasOwnProperty.call(message, "port"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.port);
                            if (message.pathOverride != null && Object.hasOwnProperty.call(message, "pathOverride"))
                                $root.google.cloud.tasks.v2beta2.PathOverride.encode(message.pathOverride, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.queryOverride != null && Object.hasOwnProperty.call(message, "queryOverride"))
                                $root.google.cloud.tasks.v2beta2.QueryOverride.encode(message.queryOverride, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.uriOverrideEnforceMode != null && Object.hasOwnProperty.call(message, "uriOverrideEnforceMode"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.uriOverrideEnforceMode);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UriOverride message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.UriOverride.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IUriOverride} message UriOverride message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UriOverride.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UriOverride message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.UriOverride} UriOverride
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UriOverride.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.UriOverride();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.scheme = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.host = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.port = reader.int64();
                                        break;
                                    }
                                case 4: {
                                        message.pathOverride = $root.google.cloud.tasks.v2beta2.PathOverride.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.queryOverride = $root.google.cloud.tasks.v2beta2.QueryOverride.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.uriOverrideEnforceMode = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UriOverride message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.UriOverride} UriOverride
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UriOverride.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UriOverride message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UriOverride.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.scheme != null && message.hasOwnProperty("scheme")) {
                                properties._scheme = 1;
                                switch (message.scheme) {
                                default:
                                    return "scheme: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            }
                            if (message.host != null && message.hasOwnProperty("host")) {
                                properties._host = 1;
                                if (!$util.isString(message.host))
                                    return "host: string expected";
                            }
                            if (message.port != null && message.hasOwnProperty("port")) {
                                properties._port = 1;
                                if (!$util.isInteger(message.port) && !(message.port && $util.isInteger(message.port.low) && $util.isInteger(message.port.high)))
                                    return "port: integer|Long expected";
                            }
                            if (message.pathOverride != null && message.hasOwnProperty("pathOverride")) {
                                var error = $root.google.cloud.tasks.v2beta2.PathOverride.verify(message.pathOverride);
                                if (error)
                                    return "pathOverride." + error;
                            }
                            if (message.queryOverride != null && message.hasOwnProperty("queryOverride")) {
                                var error = $root.google.cloud.tasks.v2beta2.QueryOverride.verify(message.queryOverride);
                                if (error)
                                    return "queryOverride." + error;
                            }
                            if (message.uriOverrideEnforceMode != null && message.hasOwnProperty("uriOverrideEnforceMode"))
                                switch (message.uriOverrideEnforceMode) {
                                default:
                                    return "uriOverrideEnforceMode: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates an UriOverride message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.UriOverride} UriOverride
                         */
                        UriOverride.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.UriOverride)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.UriOverride();
                            switch (object.scheme) {
                            default:
                                if (typeof object.scheme === "number") {
                                    message.scheme = object.scheme;
                                    break;
                                }
                                break;
                            case "SCHEME_UNSPECIFIED":
                            case 0:
                                message.scheme = 0;
                                break;
                            case "HTTP":
                            case 1:
                                message.scheme = 1;
                                break;
                            case "HTTPS":
                            case 2:
                                message.scheme = 2;
                                break;
                            }
                            if (object.host != null)
                                message.host = String(object.host);
                            if (object.port != null)
                                if ($util.Long)
                                    (message.port = $util.Long.fromValue(object.port)).unsigned = false;
                                else if (typeof object.port === "string")
                                    message.port = parseInt(object.port, 10);
                                else if (typeof object.port === "number")
                                    message.port = object.port;
                                else if (typeof object.port === "object")
                                    message.port = new $util.LongBits(object.port.low >>> 0, object.port.high >>> 0).toNumber();
                            if (object.pathOverride != null) {
                                if (typeof object.pathOverride !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.UriOverride.pathOverride: object expected");
                                message.pathOverride = $root.google.cloud.tasks.v2beta2.PathOverride.fromObject(object.pathOverride);
                            }
                            if (object.queryOverride != null) {
                                if (typeof object.queryOverride !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.UriOverride.queryOverride: object expected");
                                message.queryOverride = $root.google.cloud.tasks.v2beta2.QueryOverride.fromObject(object.queryOverride);
                            }
                            switch (object.uriOverrideEnforceMode) {
                            default:
                                if (typeof object.uriOverrideEnforceMode === "number") {
                                    message.uriOverrideEnforceMode = object.uriOverrideEnforceMode;
                                    break;
                                }
                                break;
                            case "URI_OVERRIDE_ENFORCE_MODE_UNSPECIFIED":
                            case 0:
                                message.uriOverrideEnforceMode = 0;
                                break;
                            case "IF_NOT_EXISTS":
                            case 1:
                                message.uriOverrideEnforceMode = 1;
                                break;
                            case "ALWAYS":
                            case 2:
                                message.uriOverrideEnforceMode = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UriOverride message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta2.UriOverride} message UriOverride
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UriOverride.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.pathOverride = null;
                                object.queryOverride = null;
                                object.uriOverrideEnforceMode = options.enums === String ? "URI_OVERRIDE_ENFORCE_MODE_UNSPECIFIED" : 0;
                            }
                            if (message.scheme != null && message.hasOwnProperty("scheme")) {
                                object.scheme = options.enums === String ? $root.google.cloud.tasks.v2beta2.UriOverride.Scheme[message.scheme] === undefined ? message.scheme : $root.google.cloud.tasks.v2beta2.UriOverride.Scheme[message.scheme] : message.scheme;
                                if (options.oneofs)
                                    object._scheme = "scheme";
                            }
                            if (message.host != null && message.hasOwnProperty("host")) {
                                object.host = message.host;
                                if (options.oneofs)
                                    object._host = "host";
                            }
                            if (message.port != null && message.hasOwnProperty("port")) {
                                if (typeof message.port === "number")
                                    object.port = options.longs === String ? String(message.port) : message.port;
                                else
                                    object.port = options.longs === String ? $util.Long.prototype.toString.call(message.port) : options.longs === Number ? new $util.LongBits(message.port.low >>> 0, message.port.high >>> 0).toNumber() : message.port;
                                if (options.oneofs)
                                    object._port = "port";
                            }
                            if (message.pathOverride != null && message.hasOwnProperty("pathOverride"))
                                object.pathOverride = $root.google.cloud.tasks.v2beta2.PathOverride.toObject(message.pathOverride, options);
                            if (message.queryOverride != null && message.hasOwnProperty("queryOverride"))
                                object.queryOverride = $root.google.cloud.tasks.v2beta2.QueryOverride.toObject(message.queryOverride, options);
                            if (message.uriOverrideEnforceMode != null && message.hasOwnProperty("uriOverrideEnforceMode"))
                                object.uriOverrideEnforceMode = options.enums === String ? $root.google.cloud.tasks.v2beta2.UriOverride.UriOverrideEnforceMode[message.uriOverrideEnforceMode] === undefined ? message.uriOverrideEnforceMode : $root.google.cloud.tasks.v2beta2.UriOverride.UriOverrideEnforceMode[message.uriOverrideEnforceMode] : message.uriOverrideEnforceMode;
                            return object;
                        };
    
                        /**
                         * Converts this UriOverride to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UriOverride.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UriOverride
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UriOverride.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.UriOverride";
                        };
    
                        /**
                         * Scheme enum.
                         * @name google.cloud.tasks.v2beta2.UriOverride.Scheme
                         * @enum {number}
                         * @property {number} SCHEME_UNSPECIFIED=0 SCHEME_UNSPECIFIED value
                         * @property {number} HTTP=1 HTTP value
                         * @property {number} HTTPS=2 HTTPS value
                         */
                        UriOverride.Scheme = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "SCHEME_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "HTTP"] = 1;
                            values[valuesById[2] = "HTTPS"] = 2;
                            return values;
                        })();
    
                        /**
                         * UriOverrideEnforceMode enum.
                         * @name google.cloud.tasks.v2beta2.UriOverride.UriOverrideEnforceMode
                         * @enum {number}
                         * @property {number} URI_OVERRIDE_ENFORCE_MODE_UNSPECIFIED=0 URI_OVERRIDE_ENFORCE_MODE_UNSPECIFIED value
                         * @property {number} IF_NOT_EXISTS=1 IF_NOT_EXISTS value
                         * @property {number} ALWAYS=2 ALWAYS value
                         */
                        UriOverride.UriOverrideEnforceMode = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "URI_OVERRIDE_ENFORCE_MODE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "IF_NOT_EXISTS"] = 1;
                            values[valuesById[2] = "ALWAYS"] = 2;
                            return values;
                        })();
    
                        return UriOverride;
                    })();
    
                    v2beta2.HttpTarget = (function() {
    
                        /**
                         * Properties of a HttpTarget.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IHttpTarget
                         * @property {google.cloud.tasks.v2beta2.IUriOverride|null} [uriOverride] HttpTarget uriOverride
                         * @property {google.cloud.tasks.v2beta2.HttpMethod|null} [httpMethod] HttpTarget httpMethod
                         * @property {Array.<google.cloud.tasks.v2beta2.HttpTarget.IHeaderOverride>|null} [headerOverrides] HttpTarget headerOverrides
                         * @property {google.cloud.tasks.v2beta2.IOAuthToken|null} [oauthToken] HttpTarget oauthToken
                         * @property {google.cloud.tasks.v2beta2.IOidcToken|null} [oidcToken] HttpTarget oidcToken
                         */
    
                        /**
                         * Constructs a new HttpTarget.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a HttpTarget.
                         * @implements IHttpTarget
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IHttpTarget=} [properties] Properties to set
                         */
                        function HttpTarget(properties) {
                            this.headerOverrides = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * HttpTarget uriOverride.
                         * @member {google.cloud.tasks.v2beta2.IUriOverride|null|undefined} uriOverride
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @instance
                         */
                        HttpTarget.prototype.uriOverride = null;
    
                        /**
                         * HttpTarget httpMethod.
                         * @member {google.cloud.tasks.v2beta2.HttpMethod} httpMethod
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @instance
                         */
                        HttpTarget.prototype.httpMethod = 0;
    
                        /**
                         * HttpTarget headerOverrides.
                         * @member {Array.<google.cloud.tasks.v2beta2.HttpTarget.IHeaderOverride>} headerOverrides
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @instance
                         */
                        HttpTarget.prototype.headerOverrides = $util.emptyArray;
    
                        /**
                         * HttpTarget oauthToken.
                         * @member {google.cloud.tasks.v2beta2.IOAuthToken|null|undefined} oauthToken
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @instance
                         */
                        HttpTarget.prototype.oauthToken = null;
    
                        /**
                         * HttpTarget oidcToken.
                         * @member {google.cloud.tasks.v2beta2.IOidcToken|null|undefined} oidcToken
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @instance
                         */
                        HttpTarget.prototype.oidcToken = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * HttpTarget authorizationHeader.
                         * @member {"oauthToken"|"oidcToken"|undefined} authorizationHeader
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @instance
                         */
                        Object.defineProperty(HttpTarget.prototype, "authorizationHeader", {
                            get: $util.oneOfGetter($oneOfFields = ["oauthToken", "oidcToken"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new HttpTarget instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IHttpTarget=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.HttpTarget} HttpTarget instance
                         */
                        HttpTarget.create = function create(properties) {
                            return new HttpTarget(properties);
                        };
    
                        /**
                         * Encodes the specified HttpTarget message. Does not implicitly {@link google.cloud.tasks.v2beta2.HttpTarget.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IHttpTarget} message HttpTarget message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HttpTarget.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.uriOverride != null && Object.hasOwnProperty.call(message, "uriOverride"))
                                $root.google.cloud.tasks.v2beta2.UriOverride.encode(message.uriOverride, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.httpMethod != null && Object.hasOwnProperty.call(message, "httpMethod"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.httpMethod);
                            if (message.headerOverrides != null && message.headerOverrides.length)
                                for (var i = 0; i < message.headerOverrides.length; ++i)
                                    $root.google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride.encode(message.headerOverrides[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.oauthToken != null && Object.hasOwnProperty.call(message, "oauthToken"))
                                $root.google.cloud.tasks.v2beta2.OAuthToken.encode(message.oauthToken, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.oidcToken != null && Object.hasOwnProperty.call(message, "oidcToken"))
                                $root.google.cloud.tasks.v2beta2.OidcToken.encode(message.oidcToken, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified HttpTarget message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.HttpTarget.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IHttpTarget} message HttpTarget message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HttpTarget.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a HttpTarget message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.HttpTarget} HttpTarget
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HttpTarget.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.HttpTarget();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.uriOverride = $root.google.cloud.tasks.v2beta2.UriOverride.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.httpMethod = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.headerOverrides && message.headerOverrides.length))
                                            message.headerOverrides = [];
                                        message.headerOverrides.push($root.google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 5: {
                                        message.oauthToken = $root.google.cloud.tasks.v2beta2.OAuthToken.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.oidcToken = $root.google.cloud.tasks.v2beta2.OidcToken.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a HttpTarget message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.HttpTarget} HttpTarget
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HttpTarget.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a HttpTarget message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        HttpTarget.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.uriOverride != null && message.hasOwnProperty("uriOverride")) {
                                var error = $root.google.cloud.tasks.v2beta2.UriOverride.verify(message.uriOverride);
                                if (error)
                                    return "uriOverride." + error;
                            }
                            if (message.httpMethod != null && message.hasOwnProperty("httpMethod"))
                                switch (message.httpMethod) {
                                default:
                                    return "httpMethod: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            if (message.headerOverrides != null && message.hasOwnProperty("headerOverrides")) {
                                if (!Array.isArray(message.headerOverrides))
                                    return "headerOverrides: array expected";
                                for (var i = 0; i < message.headerOverrides.length; ++i) {
                                    var error = $root.google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride.verify(message.headerOverrides[i]);
                                    if (error)
                                        return "headerOverrides." + error;
                                }
                            }
                            if (message.oauthToken != null && message.hasOwnProperty("oauthToken")) {
                                properties.authorizationHeader = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2beta2.OAuthToken.verify(message.oauthToken);
                                    if (error)
                                        return "oauthToken." + error;
                                }
                            }
                            if (message.oidcToken != null && message.hasOwnProperty("oidcToken")) {
                                if (properties.authorizationHeader === 1)
                                    return "authorizationHeader: multiple values";
                                properties.authorizationHeader = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2beta2.OidcToken.verify(message.oidcToken);
                                    if (error)
                                        return "oidcToken." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a HttpTarget message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.HttpTarget} HttpTarget
                         */
                        HttpTarget.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.HttpTarget)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.HttpTarget();
                            if (object.uriOverride != null) {
                                if (typeof object.uriOverride !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.HttpTarget.uriOverride: object expected");
                                message.uriOverride = $root.google.cloud.tasks.v2beta2.UriOverride.fromObject(object.uriOverride);
                            }
                            switch (object.httpMethod) {
                            default:
                                if (typeof object.httpMethod === "number") {
                                    message.httpMethod = object.httpMethod;
                                    break;
                                }
                                break;
                            case "HTTP_METHOD_UNSPECIFIED":
                            case 0:
                                message.httpMethod = 0;
                                break;
                            case "POST":
                            case 1:
                                message.httpMethod = 1;
                                break;
                            case "GET":
                            case 2:
                                message.httpMethod = 2;
                                break;
                            case "HEAD":
                            case 3:
                                message.httpMethod = 3;
                                break;
                            case "PUT":
                            case 4:
                                message.httpMethod = 4;
                                break;
                            case "DELETE":
                            case 5:
                                message.httpMethod = 5;
                                break;
                            case "PATCH":
                            case 6:
                                message.httpMethod = 6;
                                break;
                            case "OPTIONS":
                            case 7:
                                message.httpMethod = 7;
                                break;
                            }
                            if (object.headerOverrides) {
                                if (!Array.isArray(object.headerOverrides))
                                    throw TypeError(".google.cloud.tasks.v2beta2.HttpTarget.headerOverrides: array expected");
                                message.headerOverrides = [];
                                for (var i = 0; i < object.headerOverrides.length; ++i) {
                                    if (typeof object.headerOverrides[i] !== "object")
                                        throw TypeError(".google.cloud.tasks.v2beta2.HttpTarget.headerOverrides: object expected");
                                    message.headerOverrides[i] = $root.google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride.fromObject(object.headerOverrides[i]);
                                }
                            }
                            if (object.oauthToken != null) {
                                if (typeof object.oauthToken !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.HttpTarget.oauthToken: object expected");
                                message.oauthToken = $root.google.cloud.tasks.v2beta2.OAuthToken.fromObject(object.oauthToken);
                            }
                            if (object.oidcToken != null) {
                                if (typeof object.oidcToken !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.HttpTarget.oidcToken: object expected");
                                message.oidcToken = $root.google.cloud.tasks.v2beta2.OidcToken.fromObject(object.oidcToken);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a HttpTarget message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @static
                         * @param {google.cloud.tasks.v2beta2.HttpTarget} message HttpTarget
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        HttpTarget.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.headerOverrides = [];
                            if (options.defaults) {
                                object.uriOverride = null;
                                object.httpMethod = options.enums === String ? "HTTP_METHOD_UNSPECIFIED" : 0;
                            }
                            if (message.uriOverride != null && message.hasOwnProperty("uriOverride"))
                                object.uriOverride = $root.google.cloud.tasks.v2beta2.UriOverride.toObject(message.uriOverride, options);
                            if (message.httpMethod != null && message.hasOwnProperty("httpMethod"))
                                object.httpMethod = options.enums === String ? $root.google.cloud.tasks.v2beta2.HttpMethod[message.httpMethod] === undefined ? message.httpMethod : $root.google.cloud.tasks.v2beta2.HttpMethod[message.httpMethod] : message.httpMethod;
                            if (message.headerOverrides && message.headerOverrides.length) {
                                object.headerOverrides = [];
                                for (var j = 0; j < message.headerOverrides.length; ++j)
                                    object.headerOverrides[j] = $root.google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride.toObject(message.headerOverrides[j], options);
                            }
                            if (message.oauthToken != null && message.hasOwnProperty("oauthToken")) {
                                object.oauthToken = $root.google.cloud.tasks.v2beta2.OAuthToken.toObject(message.oauthToken, options);
                                if (options.oneofs)
                                    object.authorizationHeader = "oauthToken";
                            }
                            if (message.oidcToken != null && message.hasOwnProperty("oidcToken")) {
                                object.oidcToken = $root.google.cloud.tasks.v2beta2.OidcToken.toObject(message.oidcToken, options);
                                if (options.oneofs)
                                    object.authorizationHeader = "oidcToken";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this HttpTarget to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        HttpTarget.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for HttpTarget
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        HttpTarget.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.HttpTarget";
                        };
    
                        HttpTarget.Header = (function() {
    
                            /**
                             * Properties of a Header.
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget
                             * @interface IHeader
                             * @property {string|null} [key] Header key
                             * @property {string|null} [value] Header value
                             */
    
                            /**
                             * Constructs a new Header.
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget
                             * @classdesc Represents a Header.
                             * @implements IHeader
                             * @constructor
                             * @param {google.cloud.tasks.v2beta2.HttpTarget.IHeader=} [properties] Properties to set
                             */
                            function Header(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Header key.
                             * @member {string} key
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.Header
                             * @instance
                             */
                            Header.prototype.key = "";
    
                            /**
                             * Header value.
                             * @member {string} value
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.Header
                             * @instance
                             */
                            Header.prototype.value = "";
    
                            /**
                             * Creates a new Header instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.Header
                             * @static
                             * @param {google.cloud.tasks.v2beta2.HttpTarget.IHeader=} [properties] Properties to set
                             * @returns {google.cloud.tasks.v2beta2.HttpTarget.Header} Header instance
                             */
                            Header.create = function create(properties) {
                                return new Header(properties);
                            };
    
                            /**
                             * Encodes the specified Header message. Does not implicitly {@link google.cloud.tasks.v2beta2.HttpTarget.Header.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.Header
                             * @static
                             * @param {google.cloud.tasks.v2beta2.HttpTarget.IHeader} message Header message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Header.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.key != null && Object.hasOwnProperty.call(message, "key"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);
                                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Header message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.HttpTarget.Header.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.Header
                             * @static
                             * @param {google.cloud.tasks.v2beta2.HttpTarget.IHeader} message Header message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Header.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Header message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.Header
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.tasks.v2beta2.HttpTarget.Header} Header
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Header.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.HttpTarget.Header();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.key = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.value = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Header message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.Header
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.tasks.v2beta2.HttpTarget.Header} Header
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Header.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Header message.
                             * @function verify
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.Header
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Header.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.key != null && message.hasOwnProperty("key"))
                                    if (!$util.isString(message.key))
                                        return "key: string expected";
                                if (message.value != null && message.hasOwnProperty("value"))
                                    if (!$util.isString(message.value))
                                        return "value: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a Header message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.Header
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.tasks.v2beta2.HttpTarget.Header} Header
                             */
                            Header.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.tasks.v2beta2.HttpTarget.Header)
                                    return object;
                                var message = new $root.google.cloud.tasks.v2beta2.HttpTarget.Header();
                                if (object.key != null)
                                    message.key = String(object.key);
                                if (object.value != null)
                                    message.value = String(object.value);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Header message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.Header
                             * @static
                             * @param {google.cloud.tasks.v2beta2.HttpTarget.Header} message Header
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Header.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.key = "";
                                    object.value = "";
                                }
                                if (message.key != null && message.hasOwnProperty("key"))
                                    object.key = message.key;
                                if (message.value != null && message.hasOwnProperty("value"))
                                    object.value = message.value;
                                return object;
                            };
    
                            /**
                             * Converts this Header to JSON.
                             * @function toJSON
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.Header
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Header.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Header
                             * @function getTypeUrl
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.Header
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Header.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.tasks.v2beta2.HttpTarget.Header";
                            };
    
                            return Header;
                        })();
    
                        HttpTarget.HeaderOverride = (function() {
    
                            /**
                             * Properties of a HeaderOverride.
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget
                             * @interface IHeaderOverride
                             * @property {google.cloud.tasks.v2beta2.HttpTarget.IHeader|null} [header] HeaderOverride header
                             */
    
                            /**
                             * Constructs a new HeaderOverride.
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget
                             * @classdesc Represents a HeaderOverride.
                             * @implements IHeaderOverride
                             * @constructor
                             * @param {google.cloud.tasks.v2beta2.HttpTarget.IHeaderOverride=} [properties] Properties to set
                             */
                            function HeaderOverride(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * HeaderOverride header.
                             * @member {google.cloud.tasks.v2beta2.HttpTarget.IHeader|null|undefined} header
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride
                             * @instance
                             */
                            HeaderOverride.prototype.header = null;
    
                            /**
                             * Creates a new HeaderOverride instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride
                             * @static
                             * @param {google.cloud.tasks.v2beta2.HttpTarget.IHeaderOverride=} [properties] Properties to set
                             * @returns {google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride} HeaderOverride instance
                             */
                            HeaderOverride.create = function create(properties) {
                                return new HeaderOverride(properties);
                            };
    
                            /**
                             * Encodes the specified HeaderOverride message. Does not implicitly {@link google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride
                             * @static
                             * @param {google.cloud.tasks.v2beta2.HttpTarget.IHeaderOverride} message HeaderOverride message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HeaderOverride.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.header != null && Object.hasOwnProperty.call(message, "header"))
                                    $root.google.cloud.tasks.v2beta2.HttpTarget.Header.encode(message.header, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified HeaderOverride message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride
                             * @static
                             * @param {google.cloud.tasks.v2beta2.HttpTarget.IHeaderOverride} message HeaderOverride message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HeaderOverride.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a HeaderOverride message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride} HeaderOverride
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HeaderOverride.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.header = $root.google.cloud.tasks.v2beta2.HttpTarget.Header.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a HeaderOverride message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride} HeaderOverride
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HeaderOverride.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a HeaderOverride message.
                             * @function verify
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            HeaderOverride.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.header != null && message.hasOwnProperty("header")) {
                                    var error = $root.google.cloud.tasks.v2beta2.HttpTarget.Header.verify(message.header);
                                    if (error)
                                        return "header." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a HeaderOverride message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride} HeaderOverride
                             */
                            HeaderOverride.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride)
                                    return object;
                                var message = new $root.google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride();
                                if (object.header != null) {
                                    if (typeof object.header !== "object")
                                        throw TypeError(".google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride.header: object expected");
                                    message.header = $root.google.cloud.tasks.v2beta2.HttpTarget.Header.fromObject(object.header);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a HeaderOverride message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride
                             * @static
                             * @param {google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride} message HeaderOverride
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            HeaderOverride.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.header = null;
                                if (message.header != null && message.hasOwnProperty("header"))
                                    object.header = $root.google.cloud.tasks.v2beta2.HttpTarget.Header.toObject(message.header, options);
                                return object;
                            };
    
                            /**
                             * Converts this HeaderOverride to JSON.
                             * @function toJSON
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            HeaderOverride.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for HeaderOverride
                             * @function getTypeUrl
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            HeaderOverride.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride";
                            };
    
                            return HeaderOverride;
                        })();
    
                        return HttpTarget;
                    })();
    
                    v2beta2.OAuthToken = (function() {
    
                        /**
                         * Properties of a OAuthToken.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IOAuthToken
                         * @property {string|null} [serviceAccountEmail] OAuthToken serviceAccountEmail
                         * @property {string|null} [scope] OAuthToken scope
                         */
    
                        /**
                         * Constructs a new OAuthToken.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a OAuthToken.
                         * @implements IOAuthToken
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IOAuthToken=} [properties] Properties to set
                         */
                        function OAuthToken(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OAuthToken serviceAccountEmail.
                         * @member {string} serviceAccountEmail
                         * @memberof google.cloud.tasks.v2beta2.OAuthToken
                         * @instance
                         */
                        OAuthToken.prototype.serviceAccountEmail = "";
    
                        /**
                         * OAuthToken scope.
                         * @member {string} scope
                         * @memberof google.cloud.tasks.v2beta2.OAuthToken
                         * @instance
                         */
                        OAuthToken.prototype.scope = "";
    
                        /**
                         * Creates a new OAuthToken instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.OAuthToken
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IOAuthToken=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.OAuthToken} OAuthToken instance
                         */
                        OAuthToken.create = function create(properties) {
                            return new OAuthToken(properties);
                        };
    
                        /**
                         * Encodes the specified OAuthToken message. Does not implicitly {@link google.cloud.tasks.v2beta2.OAuthToken.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.OAuthToken
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IOAuthToken} message OAuthToken message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OAuthToken.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.serviceAccountEmail != null && Object.hasOwnProperty.call(message, "serviceAccountEmail"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.serviceAccountEmail);
                            if (message.scope != null && Object.hasOwnProperty.call(message, "scope"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.scope);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OAuthToken message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.OAuthToken.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.OAuthToken
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IOAuthToken} message OAuthToken message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OAuthToken.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a OAuthToken message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.OAuthToken
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.OAuthToken} OAuthToken
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OAuthToken.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.OAuthToken();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.serviceAccountEmail = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.scope = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a OAuthToken message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.OAuthToken
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.OAuthToken} OAuthToken
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OAuthToken.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a OAuthToken message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.OAuthToken
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OAuthToken.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                if (!$util.isString(message.serviceAccountEmail))
                                    return "serviceAccountEmail: string expected";
                            if (message.scope != null && message.hasOwnProperty("scope"))
                                if (!$util.isString(message.scope))
                                    return "scope: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a OAuthToken message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.OAuthToken
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.OAuthToken} OAuthToken
                         */
                        OAuthToken.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.OAuthToken)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.OAuthToken();
                            if (object.serviceAccountEmail != null)
                                message.serviceAccountEmail = String(object.serviceAccountEmail);
                            if (object.scope != null)
                                message.scope = String(object.scope);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a OAuthToken message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.OAuthToken
                         * @static
                         * @param {google.cloud.tasks.v2beta2.OAuthToken} message OAuthToken
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OAuthToken.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.serviceAccountEmail = "";
                                object.scope = "";
                            }
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                object.serviceAccountEmail = message.serviceAccountEmail;
                            if (message.scope != null && message.hasOwnProperty("scope"))
                                object.scope = message.scope;
                            return object;
                        };
    
                        /**
                         * Converts this OAuthToken to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.OAuthToken
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OAuthToken.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OAuthToken
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.OAuthToken
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OAuthToken.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.OAuthToken";
                        };
    
                        return OAuthToken;
                    })();
    
                    v2beta2.OidcToken = (function() {
    
                        /**
                         * Properties of an OidcToken.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IOidcToken
                         * @property {string|null} [serviceAccountEmail] OidcToken serviceAccountEmail
                         * @property {string|null} [audience] OidcToken audience
                         */
    
                        /**
                         * Constructs a new OidcToken.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents an OidcToken.
                         * @implements IOidcToken
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IOidcToken=} [properties] Properties to set
                         */
                        function OidcToken(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OidcToken serviceAccountEmail.
                         * @member {string} serviceAccountEmail
                         * @memberof google.cloud.tasks.v2beta2.OidcToken
                         * @instance
                         */
                        OidcToken.prototype.serviceAccountEmail = "";
    
                        /**
                         * OidcToken audience.
                         * @member {string} audience
                         * @memberof google.cloud.tasks.v2beta2.OidcToken
                         * @instance
                         */
                        OidcToken.prototype.audience = "";
    
                        /**
                         * Creates a new OidcToken instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.OidcToken
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IOidcToken=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.OidcToken} OidcToken instance
                         */
                        OidcToken.create = function create(properties) {
                            return new OidcToken(properties);
                        };
    
                        /**
                         * Encodes the specified OidcToken message. Does not implicitly {@link google.cloud.tasks.v2beta2.OidcToken.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.OidcToken
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IOidcToken} message OidcToken message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OidcToken.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.serviceAccountEmail != null && Object.hasOwnProperty.call(message, "serviceAccountEmail"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.serviceAccountEmail);
                            if (message.audience != null && Object.hasOwnProperty.call(message, "audience"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.audience);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OidcToken message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.OidcToken.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.OidcToken
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IOidcToken} message OidcToken message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OidcToken.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OidcToken message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.OidcToken
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.OidcToken} OidcToken
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OidcToken.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.OidcToken();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.serviceAccountEmail = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.audience = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OidcToken message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.OidcToken
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.OidcToken} OidcToken
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OidcToken.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OidcToken message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.OidcToken
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OidcToken.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                if (!$util.isString(message.serviceAccountEmail))
                                    return "serviceAccountEmail: string expected";
                            if (message.audience != null && message.hasOwnProperty("audience"))
                                if (!$util.isString(message.audience))
                                    return "audience: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an OidcToken message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.OidcToken
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.OidcToken} OidcToken
                         */
                        OidcToken.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.OidcToken)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.OidcToken();
                            if (object.serviceAccountEmail != null)
                                message.serviceAccountEmail = String(object.serviceAccountEmail);
                            if (object.audience != null)
                                message.audience = String(object.audience);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OidcToken message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.OidcToken
                         * @static
                         * @param {google.cloud.tasks.v2beta2.OidcToken} message OidcToken
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OidcToken.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.serviceAccountEmail = "";
                                object.audience = "";
                            }
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                object.serviceAccountEmail = message.serviceAccountEmail;
                            if (message.audience != null && message.hasOwnProperty("audience"))
                                object.audience = message.audience;
                            return object;
                        };
    
                        /**
                         * Converts this OidcToken to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.OidcToken
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OidcToken.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OidcToken
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.OidcToken
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OidcToken.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.OidcToken";
                        };
    
                        return OidcToken;
                    })();
    
                    /**
                     * HttpMethod enum.
                     * @name google.cloud.tasks.v2beta2.HttpMethod
                     * @enum {number}
                     * @property {number} HTTP_METHOD_UNSPECIFIED=0 HTTP_METHOD_UNSPECIFIED value
                     * @property {number} POST=1 POST value
                     * @property {number} GET=2 GET value
                     * @property {number} HEAD=3 HEAD value
                     * @property {number} PUT=4 PUT value
                     * @property {number} DELETE=5 DELETE value
                     * @property {number} PATCH=6 PATCH value
                     * @property {number} OPTIONS=7 OPTIONS value
                     */
                    v2beta2.HttpMethod = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "HTTP_METHOD_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "POST"] = 1;
                        values[valuesById[2] = "GET"] = 2;
                        values[valuesById[3] = "HEAD"] = 3;
                        values[valuesById[4] = "PUT"] = 4;
                        values[valuesById[5] = "DELETE"] = 5;
                        values[valuesById[6] = "PATCH"] = 6;
                        values[valuesById[7] = "OPTIONS"] = 7;
                        return values;
                    })();
    
                    v2beta2.Task = (function() {
    
                        /**
                         * Properties of a Task.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface ITask
                         * @property {string|null} [name] Task name
                         * @property {google.cloud.tasks.v2beta2.IAppEngineHttpRequest|null} [appEngineHttpRequest] Task appEngineHttpRequest
                         * @property {google.cloud.tasks.v2beta2.IPullMessage|null} [pullMessage] Task pullMessage
                         * @property {google.cloud.tasks.v2beta2.IHttpRequest|null} [httpRequest] Task httpRequest
                         * @property {google.protobuf.ITimestamp|null} [scheduleTime] Task scheduleTime
                         * @property {google.protobuf.ITimestamp|null} [createTime] Task createTime
                         * @property {google.cloud.tasks.v2beta2.ITaskStatus|null} [status] Task status
                         * @property {google.cloud.tasks.v2beta2.Task.View|null} [view] Task view
                         */
    
                        /**
                         * Constructs a new Task.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a Task.
                         * @implements ITask
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.ITask=} [properties] Properties to set
                         */
                        function Task(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Task name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @instance
                         */
                        Task.prototype.name = "";
    
                        /**
                         * Task appEngineHttpRequest.
                         * @member {google.cloud.tasks.v2beta2.IAppEngineHttpRequest|null|undefined} appEngineHttpRequest
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @instance
                         */
                        Task.prototype.appEngineHttpRequest = null;
    
                        /**
                         * Task pullMessage.
                         * @member {google.cloud.tasks.v2beta2.IPullMessage|null|undefined} pullMessage
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @instance
                         */
                        Task.prototype.pullMessage = null;
    
                        /**
                         * Task httpRequest.
                         * @member {google.cloud.tasks.v2beta2.IHttpRequest|null|undefined} httpRequest
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @instance
                         */
                        Task.prototype.httpRequest = null;
    
                        /**
                         * Task scheduleTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} scheduleTime
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @instance
                         */
                        Task.prototype.scheduleTime = null;
    
                        /**
                         * Task createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @instance
                         */
                        Task.prototype.createTime = null;
    
                        /**
                         * Task status.
                         * @member {google.cloud.tasks.v2beta2.ITaskStatus|null|undefined} status
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @instance
                         */
                        Task.prototype.status = null;
    
                        /**
                         * Task view.
                         * @member {google.cloud.tasks.v2beta2.Task.View} view
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @instance
                         */
                        Task.prototype.view = 0;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Task payloadType.
                         * @member {"appEngineHttpRequest"|"pullMessage"|"httpRequest"|undefined} payloadType
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @instance
                         */
                        Object.defineProperty(Task.prototype, "payloadType", {
                            get: $util.oneOfGetter($oneOfFields = ["appEngineHttpRequest", "pullMessage", "httpRequest"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Task instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ITask=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.Task} Task instance
                         */
                        Task.create = function create(properties) {
                            return new Task(properties);
                        };
    
                        /**
                         * Encodes the specified Task message. Does not implicitly {@link google.cloud.tasks.v2beta2.Task.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ITask} message Task message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Task.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.appEngineHttpRequest != null && Object.hasOwnProperty.call(message, "appEngineHttpRequest"))
                                $root.google.cloud.tasks.v2beta2.AppEngineHttpRequest.encode(message.appEngineHttpRequest, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.pullMessage != null && Object.hasOwnProperty.call(message, "pullMessage"))
                                $root.google.cloud.tasks.v2beta2.PullMessage.encode(message.pullMessage, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.scheduleTime != null && Object.hasOwnProperty.call(message, "scheduleTime"))
                                $root.google.protobuf.Timestamp.encode(message.scheduleTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                                $root.google.cloud.tasks.v2beta2.TaskStatus.encode(message.status, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.view != null && Object.hasOwnProperty.call(message, "view"))
                                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.view);
                            if (message.httpRequest != null && Object.hasOwnProperty.call(message, "httpRequest"))
                                $root.google.cloud.tasks.v2beta2.HttpRequest.encode(message.httpRequest, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Task message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.Task.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ITask} message Task message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Task.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Task message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.Task} Task
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Task.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.Task();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.appEngineHttpRequest = $root.google.cloud.tasks.v2beta2.AppEngineHttpRequest.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.pullMessage = $root.google.cloud.tasks.v2beta2.PullMessage.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        message.httpRequest = $root.google.cloud.tasks.v2beta2.HttpRequest.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.scheduleTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.status = $root.google.cloud.tasks.v2beta2.TaskStatus.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.view = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Task message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.Task} Task
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Task.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Task message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Task.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.appEngineHttpRequest != null && message.hasOwnProperty("appEngineHttpRequest")) {
                                properties.payloadType = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2beta2.AppEngineHttpRequest.verify(message.appEngineHttpRequest);
                                    if (error)
                                        return "appEngineHttpRequest." + error;
                                }
                            }
                            if (message.pullMessage != null && message.hasOwnProperty("pullMessage")) {
                                if (properties.payloadType === 1)
                                    return "payloadType: multiple values";
                                properties.payloadType = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2beta2.PullMessage.verify(message.pullMessage);
                                    if (error)
                                        return "pullMessage." + error;
                                }
                            }
                            if (message.httpRequest != null && message.hasOwnProperty("httpRequest")) {
                                if (properties.payloadType === 1)
                                    return "payloadType: multiple values";
                                properties.payloadType = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2beta2.HttpRequest.verify(message.httpRequest);
                                    if (error)
                                        return "httpRequest." + error;
                                }
                            }
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.scheduleTime);
                                if (error)
                                    return "scheduleTime." + error;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.status != null && message.hasOwnProperty("status")) {
                                var error = $root.google.cloud.tasks.v2beta2.TaskStatus.verify(message.status);
                                if (error)
                                    return "status." + error;
                            }
                            if (message.view != null && message.hasOwnProperty("view"))
                                switch (message.view) {
                                default:
                                    return "view: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a Task message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.Task} Task
                         */
                        Task.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.Task)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.Task();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.appEngineHttpRequest != null) {
                                if (typeof object.appEngineHttpRequest !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.Task.appEngineHttpRequest: object expected");
                                message.appEngineHttpRequest = $root.google.cloud.tasks.v2beta2.AppEngineHttpRequest.fromObject(object.appEngineHttpRequest);
                            }
                            if (object.pullMessage != null) {
                                if (typeof object.pullMessage !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.Task.pullMessage: object expected");
                                message.pullMessage = $root.google.cloud.tasks.v2beta2.PullMessage.fromObject(object.pullMessage);
                            }
                            if (object.httpRequest != null) {
                                if (typeof object.httpRequest !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.Task.httpRequest: object expected");
                                message.httpRequest = $root.google.cloud.tasks.v2beta2.HttpRequest.fromObject(object.httpRequest);
                            }
                            if (object.scheduleTime != null) {
                                if (typeof object.scheduleTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.Task.scheduleTime: object expected");
                                message.scheduleTime = $root.google.protobuf.Timestamp.fromObject(object.scheduleTime);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.Task.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.status != null) {
                                if (typeof object.status !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.Task.status: object expected");
                                message.status = $root.google.cloud.tasks.v2beta2.TaskStatus.fromObject(object.status);
                            }
                            switch (object.view) {
                            default:
                                if (typeof object.view === "number") {
                                    message.view = object.view;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.view = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.view = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.view = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Task message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @static
                         * @param {google.cloud.tasks.v2beta2.Task} message Task
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Task.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.scheduleTime = null;
                                object.createTime = null;
                                object.status = null;
                                object.view = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.appEngineHttpRequest != null && message.hasOwnProperty("appEngineHttpRequest")) {
                                object.appEngineHttpRequest = $root.google.cloud.tasks.v2beta2.AppEngineHttpRequest.toObject(message.appEngineHttpRequest, options);
                                if (options.oneofs)
                                    object.payloadType = "appEngineHttpRequest";
                            }
                            if (message.pullMessage != null && message.hasOwnProperty("pullMessage")) {
                                object.pullMessage = $root.google.cloud.tasks.v2beta2.PullMessage.toObject(message.pullMessage, options);
                                if (options.oneofs)
                                    object.payloadType = "pullMessage";
                            }
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime"))
                                object.scheduleTime = $root.google.protobuf.Timestamp.toObject(message.scheduleTime, options);
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.status != null && message.hasOwnProperty("status"))
                                object.status = $root.google.cloud.tasks.v2beta2.TaskStatus.toObject(message.status, options);
                            if (message.view != null && message.hasOwnProperty("view"))
                                object.view = options.enums === String ? $root.google.cloud.tasks.v2beta2.Task.View[message.view] === undefined ? message.view : $root.google.cloud.tasks.v2beta2.Task.View[message.view] : message.view;
                            if (message.httpRequest != null && message.hasOwnProperty("httpRequest")) {
                                object.httpRequest = $root.google.cloud.tasks.v2beta2.HttpRequest.toObject(message.httpRequest, options);
                                if (options.oneofs)
                                    object.payloadType = "httpRequest";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Task to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Task.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Task
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Task.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.Task";
                        };
    
                        /**
                         * View enum.
                         * @name google.cloud.tasks.v2beta2.Task.View
                         * @enum {number}
                         * @property {number} VIEW_UNSPECIFIED=0 VIEW_UNSPECIFIED value
                         * @property {number} BASIC=1 BASIC value
                         * @property {number} FULL=2 FULL value
                         */
                        Task.View = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "VIEW_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "BASIC"] = 1;
                            values[valuesById[2] = "FULL"] = 2;
                            return values;
                        })();
    
                        return Task;
                    })();
    
                    v2beta2.TaskStatus = (function() {
    
                        /**
                         * Properties of a TaskStatus.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface ITaskStatus
                         * @property {number|null} [attemptDispatchCount] TaskStatus attemptDispatchCount
                         * @property {number|null} [attemptResponseCount] TaskStatus attemptResponseCount
                         * @property {google.cloud.tasks.v2beta2.IAttemptStatus|null} [firstAttemptStatus] TaskStatus firstAttemptStatus
                         * @property {google.cloud.tasks.v2beta2.IAttemptStatus|null} [lastAttemptStatus] TaskStatus lastAttemptStatus
                         */
    
                        /**
                         * Constructs a new TaskStatus.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a TaskStatus.
                         * @implements ITaskStatus
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.ITaskStatus=} [properties] Properties to set
                         */
                        function TaskStatus(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TaskStatus attemptDispatchCount.
                         * @member {number} attemptDispatchCount
                         * @memberof google.cloud.tasks.v2beta2.TaskStatus
                         * @instance
                         */
                        TaskStatus.prototype.attemptDispatchCount = 0;
    
                        /**
                         * TaskStatus attemptResponseCount.
                         * @member {number} attemptResponseCount
                         * @memberof google.cloud.tasks.v2beta2.TaskStatus
                         * @instance
                         */
                        TaskStatus.prototype.attemptResponseCount = 0;
    
                        /**
                         * TaskStatus firstAttemptStatus.
                         * @member {google.cloud.tasks.v2beta2.IAttemptStatus|null|undefined} firstAttemptStatus
                         * @memberof google.cloud.tasks.v2beta2.TaskStatus
                         * @instance
                         */
                        TaskStatus.prototype.firstAttemptStatus = null;
    
                        /**
                         * TaskStatus lastAttemptStatus.
                         * @member {google.cloud.tasks.v2beta2.IAttemptStatus|null|undefined} lastAttemptStatus
                         * @memberof google.cloud.tasks.v2beta2.TaskStatus
                         * @instance
                         */
                        TaskStatus.prototype.lastAttemptStatus = null;
    
                        /**
                         * Creates a new TaskStatus instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.TaskStatus
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ITaskStatus=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.TaskStatus} TaskStatus instance
                         */
                        TaskStatus.create = function create(properties) {
                            return new TaskStatus(properties);
                        };
    
                        /**
                         * Encodes the specified TaskStatus message. Does not implicitly {@link google.cloud.tasks.v2beta2.TaskStatus.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.TaskStatus
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ITaskStatus} message TaskStatus message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TaskStatus.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.attemptDispatchCount != null && Object.hasOwnProperty.call(message, "attemptDispatchCount"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.attemptDispatchCount);
                            if (message.attemptResponseCount != null && Object.hasOwnProperty.call(message, "attemptResponseCount"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.attemptResponseCount);
                            if (message.firstAttemptStatus != null && Object.hasOwnProperty.call(message, "firstAttemptStatus"))
                                $root.google.cloud.tasks.v2beta2.AttemptStatus.encode(message.firstAttemptStatus, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.lastAttemptStatus != null && Object.hasOwnProperty.call(message, "lastAttemptStatus"))
                                $root.google.cloud.tasks.v2beta2.AttemptStatus.encode(message.lastAttemptStatus, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TaskStatus message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.TaskStatus.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.TaskStatus
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ITaskStatus} message TaskStatus message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TaskStatus.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TaskStatus message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.TaskStatus
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.TaskStatus} TaskStatus
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TaskStatus.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.TaskStatus();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.attemptDispatchCount = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.attemptResponseCount = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.firstAttemptStatus = $root.google.cloud.tasks.v2beta2.AttemptStatus.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.lastAttemptStatus = $root.google.cloud.tasks.v2beta2.AttemptStatus.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TaskStatus message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.TaskStatus
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.TaskStatus} TaskStatus
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TaskStatus.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TaskStatus message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.TaskStatus
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TaskStatus.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.attemptDispatchCount != null && message.hasOwnProperty("attemptDispatchCount"))
                                if (!$util.isInteger(message.attemptDispatchCount))
                                    return "attemptDispatchCount: integer expected";
                            if (message.attemptResponseCount != null && message.hasOwnProperty("attemptResponseCount"))
                                if (!$util.isInteger(message.attemptResponseCount))
                                    return "attemptResponseCount: integer expected";
                            if (message.firstAttemptStatus != null && message.hasOwnProperty("firstAttemptStatus")) {
                                var error = $root.google.cloud.tasks.v2beta2.AttemptStatus.verify(message.firstAttemptStatus);
                                if (error)
                                    return "firstAttemptStatus." + error;
                            }
                            if (message.lastAttemptStatus != null && message.hasOwnProperty("lastAttemptStatus")) {
                                var error = $root.google.cloud.tasks.v2beta2.AttemptStatus.verify(message.lastAttemptStatus);
                                if (error)
                                    return "lastAttemptStatus." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a TaskStatus message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.TaskStatus
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.TaskStatus} TaskStatus
                         */
                        TaskStatus.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.TaskStatus)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.TaskStatus();
                            if (object.attemptDispatchCount != null)
                                message.attemptDispatchCount = object.attemptDispatchCount | 0;
                            if (object.attemptResponseCount != null)
                                message.attemptResponseCount = object.attemptResponseCount | 0;
                            if (object.firstAttemptStatus != null) {
                                if (typeof object.firstAttemptStatus !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.TaskStatus.firstAttemptStatus: object expected");
                                message.firstAttemptStatus = $root.google.cloud.tasks.v2beta2.AttemptStatus.fromObject(object.firstAttemptStatus);
                            }
                            if (object.lastAttemptStatus != null) {
                                if (typeof object.lastAttemptStatus !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.TaskStatus.lastAttemptStatus: object expected");
                                message.lastAttemptStatus = $root.google.cloud.tasks.v2beta2.AttemptStatus.fromObject(object.lastAttemptStatus);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TaskStatus message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.TaskStatus
                         * @static
                         * @param {google.cloud.tasks.v2beta2.TaskStatus} message TaskStatus
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TaskStatus.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.attemptDispatchCount = 0;
                                object.attemptResponseCount = 0;
                                object.firstAttemptStatus = null;
                                object.lastAttemptStatus = null;
                            }
                            if (message.attemptDispatchCount != null && message.hasOwnProperty("attemptDispatchCount"))
                                object.attemptDispatchCount = message.attemptDispatchCount;
                            if (message.attemptResponseCount != null && message.hasOwnProperty("attemptResponseCount"))
                                object.attemptResponseCount = message.attemptResponseCount;
                            if (message.firstAttemptStatus != null && message.hasOwnProperty("firstAttemptStatus"))
                                object.firstAttemptStatus = $root.google.cloud.tasks.v2beta2.AttemptStatus.toObject(message.firstAttemptStatus, options);
                            if (message.lastAttemptStatus != null && message.hasOwnProperty("lastAttemptStatus"))
                                object.lastAttemptStatus = $root.google.cloud.tasks.v2beta2.AttemptStatus.toObject(message.lastAttemptStatus, options);
                            return object;
                        };
    
                        /**
                         * Converts this TaskStatus to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.TaskStatus
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TaskStatus.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TaskStatus
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.TaskStatus
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TaskStatus.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.TaskStatus";
                        };
    
                        return TaskStatus;
                    })();
    
                    v2beta2.AttemptStatus = (function() {
    
                        /**
                         * Properties of an AttemptStatus.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IAttemptStatus
                         * @property {google.protobuf.ITimestamp|null} [scheduleTime] AttemptStatus scheduleTime
                         * @property {google.protobuf.ITimestamp|null} [dispatchTime] AttemptStatus dispatchTime
                         * @property {google.protobuf.ITimestamp|null} [responseTime] AttemptStatus responseTime
                         * @property {google.rpc.IStatus|null} [responseStatus] AttemptStatus responseStatus
                         */
    
                        /**
                         * Constructs a new AttemptStatus.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents an AttemptStatus.
                         * @implements IAttemptStatus
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IAttemptStatus=} [properties] Properties to set
                         */
                        function AttemptStatus(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AttemptStatus scheduleTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} scheduleTime
                         * @memberof google.cloud.tasks.v2beta2.AttemptStatus
                         * @instance
                         */
                        AttemptStatus.prototype.scheduleTime = null;
    
                        /**
                         * AttemptStatus dispatchTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} dispatchTime
                         * @memberof google.cloud.tasks.v2beta2.AttemptStatus
                         * @instance
                         */
                        AttemptStatus.prototype.dispatchTime = null;
    
                        /**
                         * AttemptStatus responseTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} responseTime
                         * @memberof google.cloud.tasks.v2beta2.AttemptStatus
                         * @instance
                         */
                        AttemptStatus.prototype.responseTime = null;
    
                        /**
                         * AttemptStatus responseStatus.
                         * @member {google.rpc.IStatus|null|undefined} responseStatus
                         * @memberof google.cloud.tasks.v2beta2.AttemptStatus
                         * @instance
                         */
                        AttemptStatus.prototype.responseStatus = null;
    
                        /**
                         * Creates a new AttemptStatus instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.AttemptStatus
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IAttemptStatus=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.AttemptStatus} AttemptStatus instance
                         */
                        AttemptStatus.create = function create(properties) {
                            return new AttemptStatus(properties);
                        };
    
                        /**
                         * Encodes the specified AttemptStatus message. Does not implicitly {@link google.cloud.tasks.v2beta2.AttemptStatus.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.AttemptStatus
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IAttemptStatus} message AttemptStatus message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AttemptStatus.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.scheduleTime != null && Object.hasOwnProperty.call(message, "scheduleTime"))
                                $root.google.protobuf.Timestamp.encode(message.scheduleTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.dispatchTime != null && Object.hasOwnProperty.call(message, "dispatchTime"))
                                $root.google.protobuf.Timestamp.encode(message.dispatchTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.responseTime != null && Object.hasOwnProperty.call(message, "responseTime"))
                                $root.google.protobuf.Timestamp.encode(message.responseTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.responseStatus != null && Object.hasOwnProperty.call(message, "responseStatus"))
                                $root.google.rpc.Status.encode(message.responseStatus, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AttemptStatus message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.AttemptStatus.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.AttemptStatus
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IAttemptStatus} message AttemptStatus message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AttemptStatus.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AttemptStatus message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.AttemptStatus
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.AttemptStatus} AttemptStatus
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AttemptStatus.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.AttemptStatus();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.scheduleTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.dispatchTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.responseTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.responseStatus = $root.google.rpc.Status.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AttemptStatus message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.AttemptStatus
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.AttemptStatus} AttemptStatus
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AttemptStatus.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AttemptStatus message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.AttemptStatus
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AttemptStatus.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.scheduleTime);
                                if (error)
                                    return "scheduleTime." + error;
                            }
                            if (message.dispatchTime != null && message.hasOwnProperty("dispatchTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.dispatchTime);
                                if (error)
                                    return "dispatchTime." + error;
                            }
                            if (message.responseTime != null && message.hasOwnProperty("responseTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.responseTime);
                                if (error)
                                    return "responseTime." + error;
                            }
                            if (message.responseStatus != null && message.hasOwnProperty("responseStatus")) {
                                var error = $root.google.rpc.Status.verify(message.responseStatus);
                                if (error)
                                    return "responseStatus." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an AttemptStatus message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.AttemptStatus
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.AttemptStatus} AttemptStatus
                         */
                        AttemptStatus.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.AttemptStatus)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.AttemptStatus();
                            if (object.scheduleTime != null) {
                                if (typeof object.scheduleTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.AttemptStatus.scheduleTime: object expected");
                                message.scheduleTime = $root.google.protobuf.Timestamp.fromObject(object.scheduleTime);
                            }
                            if (object.dispatchTime != null) {
                                if (typeof object.dispatchTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.AttemptStatus.dispatchTime: object expected");
                                message.dispatchTime = $root.google.protobuf.Timestamp.fromObject(object.dispatchTime);
                            }
                            if (object.responseTime != null) {
                                if (typeof object.responseTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.AttemptStatus.responseTime: object expected");
                                message.responseTime = $root.google.protobuf.Timestamp.fromObject(object.responseTime);
                            }
                            if (object.responseStatus != null) {
                                if (typeof object.responseStatus !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.AttemptStatus.responseStatus: object expected");
                                message.responseStatus = $root.google.rpc.Status.fromObject(object.responseStatus);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AttemptStatus message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.AttemptStatus
                         * @static
                         * @param {google.cloud.tasks.v2beta2.AttemptStatus} message AttemptStatus
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AttemptStatus.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.scheduleTime = null;
                                object.dispatchTime = null;
                                object.responseTime = null;
                                object.responseStatus = null;
                            }
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime"))
                                object.scheduleTime = $root.google.protobuf.Timestamp.toObject(message.scheduleTime, options);
                            if (message.dispatchTime != null && message.hasOwnProperty("dispatchTime"))
                                object.dispatchTime = $root.google.protobuf.Timestamp.toObject(message.dispatchTime, options);
                            if (message.responseTime != null && message.hasOwnProperty("responseTime"))
                                object.responseTime = $root.google.protobuf.Timestamp.toObject(message.responseTime, options);
                            if (message.responseStatus != null && message.hasOwnProperty("responseStatus"))
                                object.responseStatus = $root.google.rpc.Status.toObject(message.responseStatus, options);
                            return object;
                        };
    
                        /**
                         * Converts this AttemptStatus to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.AttemptStatus
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AttemptStatus.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AttemptStatus
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.AttemptStatus
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AttemptStatus.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.AttemptStatus";
                        };
    
                        return AttemptStatus;
                    })();
    
                    return v2beta2;
                })();
    
                tasks.v2beta3 = (function() {
    
                    /**
                     * Namespace v2beta3.
                     * @memberof google.cloud.tasks
                     * @namespace
                     */
                    var v2beta3 = {};
    
                    v2beta3.CloudTasks = (function() {
    
                        /**
                         * Constructs a new CloudTasks service.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a CloudTasks
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function CloudTasks(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (CloudTasks.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = CloudTasks;
    
                        /**
                         * Creates new CloudTasks service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {CloudTasks} RPC service. Useful where requests and/or responses are streamed.
                         */
                        CloudTasks.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|listQueues}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef ListQueuesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta3.ListQueuesResponse} [response] ListQueuesResponse
                         */
    
                        /**
                         * Calls ListQueues.
                         * @function listQueues
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IListQueuesRequest} request ListQueuesRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.ListQueuesCallback} callback Node-style callback called with the error, if any, and ListQueuesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.listQueues = function listQueues(request, callback) {
                            return this.rpcCall(listQueues, $root.google.cloud.tasks.v2beta3.ListQueuesRequest, $root.google.cloud.tasks.v2beta3.ListQueuesResponse, request, callback);
                        }, "name", { value: "ListQueues" });
    
                        /**
                         * Calls ListQueues.
                         * @function listQueues
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IListQueuesRequest} request ListQueuesRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta3.ListQueuesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|getQueue}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef GetQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta3.Queue} [response] Queue
                         */
    
                        /**
                         * Calls GetQueue.
                         * @function getQueue
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IGetQueueRequest} request GetQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.GetQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.getQueue = function getQueue(request, callback) {
                            return this.rpcCall(getQueue, $root.google.cloud.tasks.v2beta3.GetQueueRequest, $root.google.cloud.tasks.v2beta3.Queue, request, callback);
                        }, "name", { value: "GetQueue" });
    
                        /**
                         * Calls GetQueue.
                         * @function getQueue
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IGetQueueRequest} request GetQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta3.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|createQueue}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef CreateQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta3.Queue} [response] Queue
                         */
    
                        /**
                         * Calls CreateQueue.
                         * @function createQueue
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.ICreateQueueRequest} request CreateQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.CreateQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.createQueue = function createQueue(request, callback) {
                            return this.rpcCall(createQueue, $root.google.cloud.tasks.v2beta3.CreateQueueRequest, $root.google.cloud.tasks.v2beta3.Queue, request, callback);
                        }, "name", { value: "CreateQueue" });
    
                        /**
                         * Calls CreateQueue.
                         * @function createQueue
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.ICreateQueueRequest} request CreateQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta3.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|updateQueue}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef UpdateQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta3.Queue} [response] Queue
                         */
    
                        /**
                         * Calls UpdateQueue.
                         * @function updateQueue
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IUpdateQueueRequest} request UpdateQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.UpdateQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.updateQueue = function updateQueue(request, callback) {
                            return this.rpcCall(updateQueue, $root.google.cloud.tasks.v2beta3.UpdateQueueRequest, $root.google.cloud.tasks.v2beta3.Queue, request, callback);
                        }, "name", { value: "UpdateQueue" });
    
                        /**
                         * Calls UpdateQueue.
                         * @function updateQueue
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IUpdateQueueRequest} request UpdateQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta3.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|deleteQueue}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef DeleteQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteQueue.
                         * @function deleteQueue
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IDeleteQueueRequest} request DeleteQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.DeleteQueueCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.deleteQueue = function deleteQueue(request, callback) {
                            return this.rpcCall(deleteQueue, $root.google.cloud.tasks.v2beta3.DeleteQueueRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteQueue" });
    
                        /**
                         * Calls DeleteQueue.
                         * @function deleteQueue
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IDeleteQueueRequest} request DeleteQueueRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|purgeQueue}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef PurgeQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta3.Queue} [response] Queue
                         */
    
                        /**
                         * Calls PurgeQueue.
                         * @function purgeQueue
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IPurgeQueueRequest} request PurgeQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.PurgeQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.purgeQueue = function purgeQueue(request, callback) {
                            return this.rpcCall(purgeQueue, $root.google.cloud.tasks.v2beta3.PurgeQueueRequest, $root.google.cloud.tasks.v2beta3.Queue, request, callback);
                        }, "name", { value: "PurgeQueue" });
    
                        /**
                         * Calls PurgeQueue.
                         * @function purgeQueue
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IPurgeQueueRequest} request PurgeQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta3.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|pauseQueue}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef PauseQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta3.Queue} [response] Queue
                         */
    
                        /**
                         * Calls PauseQueue.
                         * @function pauseQueue
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IPauseQueueRequest} request PauseQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.PauseQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.pauseQueue = function pauseQueue(request, callback) {
                            return this.rpcCall(pauseQueue, $root.google.cloud.tasks.v2beta3.PauseQueueRequest, $root.google.cloud.tasks.v2beta3.Queue, request, callback);
                        }, "name", { value: "PauseQueue" });
    
                        /**
                         * Calls PauseQueue.
                         * @function pauseQueue
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IPauseQueueRequest} request PauseQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta3.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|resumeQueue}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef ResumeQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta3.Queue} [response] Queue
                         */
    
                        /**
                         * Calls ResumeQueue.
                         * @function resumeQueue
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IResumeQueueRequest} request ResumeQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.ResumeQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.resumeQueue = function resumeQueue(request, callback) {
                            return this.rpcCall(resumeQueue, $root.google.cloud.tasks.v2beta3.ResumeQueueRequest, $root.google.cloud.tasks.v2beta3.Queue, request, callback);
                        }, "name", { value: "ResumeQueue" });
    
                        /**
                         * Calls ResumeQueue.
                         * @function resumeQueue
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IResumeQueueRequest} request ResumeQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta3.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|getIamPolicy}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef GetIamPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.iam.v1.Policy} [response] Policy
                         */
    
                        /**
                         * Calls GetIamPolicy.
                         * @function getIamPolicy
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.iam.v1.IGetIamPolicyRequest} request GetIamPolicyRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.GetIamPolicyCallback} callback Node-style callback called with the error, if any, and Policy
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.getIamPolicy = function getIamPolicy(request, callback) {
                            return this.rpcCall(getIamPolicy, $root.google.iam.v1.GetIamPolicyRequest, $root.google.iam.v1.Policy, request, callback);
                        }, "name", { value: "GetIamPolicy" });
    
                        /**
                         * Calls GetIamPolicy.
                         * @function getIamPolicy
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.iam.v1.IGetIamPolicyRequest} request GetIamPolicyRequest message or plain object
                         * @returns {Promise<google.iam.v1.Policy>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|setIamPolicy}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef SetIamPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.iam.v1.Policy} [response] Policy
                         */
    
                        /**
                         * Calls SetIamPolicy.
                         * @function setIamPolicy
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.iam.v1.ISetIamPolicyRequest} request SetIamPolicyRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.SetIamPolicyCallback} callback Node-style callback called with the error, if any, and Policy
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.setIamPolicy = function setIamPolicy(request, callback) {
                            return this.rpcCall(setIamPolicy, $root.google.iam.v1.SetIamPolicyRequest, $root.google.iam.v1.Policy, request, callback);
                        }, "name", { value: "SetIamPolicy" });
    
                        /**
                         * Calls SetIamPolicy.
                         * @function setIamPolicy
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.iam.v1.ISetIamPolicyRequest} request SetIamPolicyRequest message or plain object
                         * @returns {Promise<google.iam.v1.Policy>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|testIamPermissions}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef TestIamPermissionsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.iam.v1.TestIamPermissionsResponse} [response] TestIamPermissionsResponse
                         */
    
                        /**
                         * Calls TestIamPermissions.
                         * @function testIamPermissions
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.iam.v1.ITestIamPermissionsRequest} request TestIamPermissionsRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.TestIamPermissionsCallback} callback Node-style callback called with the error, if any, and TestIamPermissionsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.testIamPermissions = function testIamPermissions(request, callback) {
                            return this.rpcCall(testIamPermissions, $root.google.iam.v1.TestIamPermissionsRequest, $root.google.iam.v1.TestIamPermissionsResponse, request, callback);
                        }, "name", { value: "TestIamPermissions" });
    
                        /**
                         * Calls TestIamPermissions.
                         * @function testIamPermissions
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.iam.v1.ITestIamPermissionsRequest} request TestIamPermissionsRequest message or plain object
                         * @returns {Promise<google.iam.v1.TestIamPermissionsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|listTasks}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef ListTasksCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta3.ListTasksResponse} [response] ListTasksResponse
                         */
    
                        /**
                         * Calls ListTasks.
                         * @function listTasks
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IListTasksRequest} request ListTasksRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.ListTasksCallback} callback Node-style callback called with the error, if any, and ListTasksResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.listTasks = function listTasks(request, callback) {
                            return this.rpcCall(listTasks, $root.google.cloud.tasks.v2beta3.ListTasksRequest, $root.google.cloud.tasks.v2beta3.ListTasksResponse, request, callback);
                        }, "name", { value: "ListTasks" });
    
                        /**
                         * Calls ListTasks.
                         * @function listTasks
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IListTasksRequest} request ListTasksRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta3.ListTasksResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|getTask}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef GetTaskCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta3.Task} [response] Task
                         */
    
                        /**
                         * Calls GetTask.
                         * @function getTask
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IGetTaskRequest} request GetTaskRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.GetTaskCallback} callback Node-style callback called with the error, if any, and Task
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.getTask = function getTask(request, callback) {
                            return this.rpcCall(getTask, $root.google.cloud.tasks.v2beta3.GetTaskRequest, $root.google.cloud.tasks.v2beta3.Task, request, callback);
                        }, "name", { value: "GetTask" });
    
                        /**
                         * Calls GetTask.
                         * @function getTask
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IGetTaskRequest} request GetTaskRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta3.Task>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|createTask}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef CreateTaskCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta3.Task} [response] Task
                         */
    
                        /**
                         * Calls CreateTask.
                         * @function createTask
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.ICreateTaskRequest} request CreateTaskRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.CreateTaskCallback} callback Node-style callback called with the error, if any, and Task
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.createTask = function createTask(request, callback) {
                            return this.rpcCall(createTask, $root.google.cloud.tasks.v2beta3.CreateTaskRequest, $root.google.cloud.tasks.v2beta3.Task, request, callback);
                        }, "name", { value: "CreateTask" });
    
                        /**
                         * Calls CreateTask.
                         * @function createTask
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.ICreateTaskRequest} request CreateTaskRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta3.Task>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|deleteTask}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef DeleteTaskCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteTask.
                         * @function deleteTask
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IDeleteTaskRequest} request DeleteTaskRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.DeleteTaskCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.deleteTask = function deleteTask(request, callback) {
                            return this.rpcCall(deleteTask, $root.google.cloud.tasks.v2beta3.DeleteTaskRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteTask" });
    
                        /**
                         * Calls DeleteTask.
                         * @function deleteTask
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IDeleteTaskRequest} request DeleteTaskRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|runTask}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef RunTaskCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta3.Task} [response] Task
                         */
    
                        /**
                         * Calls RunTask.
                         * @function runTask
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IRunTaskRequest} request RunTaskRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.RunTaskCallback} callback Node-style callback called with the error, if any, and Task
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.runTask = function runTask(request, callback) {
                            return this.rpcCall(runTask, $root.google.cloud.tasks.v2beta3.RunTaskRequest, $root.google.cloud.tasks.v2beta3.Task, request, callback);
                        }, "name", { value: "RunTask" });
    
                        /**
                         * Calls RunTask.
                         * @function runTask
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IRunTaskRequest} request RunTaskRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta3.Task>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|bufferTask}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef BufferTaskCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta3.BufferTaskResponse} [response] BufferTaskResponse
                         */
    
                        /**
                         * Calls BufferTask.
                         * @function bufferTask
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IBufferTaskRequest} request BufferTaskRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.BufferTaskCallback} callback Node-style callback called with the error, if any, and BufferTaskResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.bufferTask = function bufferTask(request, callback) {
                            return this.rpcCall(bufferTask, $root.google.cloud.tasks.v2beta3.BufferTaskRequest, $root.google.cloud.tasks.v2beta3.BufferTaskResponse, request, callback);
                        }, "name", { value: "BufferTask" });
    
                        /**
                         * Calls BufferTask.
                         * @function bufferTask
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IBufferTaskRequest} request BufferTaskRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta3.BufferTaskResponse>} Promise
                         * @variation 2
                         */
    
                        return CloudTasks;
                    })();
    
                    v2beta3.ListQueuesRequest = (function() {
    
                        /**
                         * Properties of a ListQueuesRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IListQueuesRequest
                         * @property {string|null} [parent] ListQueuesRequest parent
                         * @property {string|null} [filter] ListQueuesRequest filter
                         * @property {number|null} [pageSize] ListQueuesRequest pageSize
                         * @property {string|null} [pageToken] ListQueuesRequest pageToken
                         * @property {google.protobuf.IFieldMask|null} [readMask] ListQueuesRequest readMask
                         */
    
                        /**
                         * Constructs a new ListQueuesRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a ListQueuesRequest.
                         * @implements IListQueuesRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IListQueuesRequest=} [properties] Properties to set
                         */
                        function ListQueuesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListQueuesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesRequest
                         * @instance
                         */
                        ListQueuesRequest.prototype.parent = "";
    
                        /**
                         * ListQueuesRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesRequest
                         * @instance
                         */
                        ListQueuesRequest.prototype.filter = "";
    
                        /**
                         * ListQueuesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesRequest
                         * @instance
                         */
                        ListQueuesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListQueuesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesRequest
                         * @instance
                         */
                        ListQueuesRequest.prototype.pageToken = "";
    
                        /**
                         * ListQueuesRequest readMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} readMask
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesRequest
                         * @instance
                         */
                        ListQueuesRequest.prototype.readMask = null;
    
                        /**
                         * Creates a new ListQueuesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IListQueuesRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.ListQueuesRequest} ListQueuesRequest instance
                         */
                        ListQueuesRequest.create = function create(properties) {
                            return new ListQueuesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListQueuesRequest message. Does not implicitly {@link google.cloud.tasks.v2beta3.ListQueuesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IListQueuesRequest} message ListQueuesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListQueuesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.filter);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.pageToken);
                            if (message.readMask != null && Object.hasOwnProperty.call(message, "readMask"))
                                $root.google.protobuf.FieldMask.encode(message.readMask, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListQueuesRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.ListQueuesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IListQueuesRequest} message ListQueuesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListQueuesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListQueuesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.ListQueuesRequest} ListQueuesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListQueuesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.ListQueuesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.readMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListQueuesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.ListQueuesRequest} ListQueuesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListQueuesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListQueuesRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListQueuesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.readMask != null && message.hasOwnProperty("readMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.readMask);
                                if (error)
                                    return "readMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListQueuesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.ListQueuesRequest} ListQueuesRequest
                         */
                        ListQueuesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.ListQueuesRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.ListQueuesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.readMask != null) {
                                if (typeof object.readMask !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.ListQueuesRequest.readMask: object expected");
                                message.readMask = $root.google.protobuf.FieldMask.fromObject(object.readMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListQueuesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.ListQueuesRequest} message ListQueuesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListQueuesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.filter = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.readMask = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.readMask != null && message.hasOwnProperty("readMask"))
                                object.readMask = $root.google.protobuf.FieldMask.toObject(message.readMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this ListQueuesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListQueuesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListQueuesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListQueuesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.ListQueuesRequest";
                        };
    
                        return ListQueuesRequest;
                    })();
    
                    v2beta3.ListQueuesResponse = (function() {
    
                        /**
                         * Properties of a ListQueuesResponse.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IListQueuesResponse
                         * @property {Array.<google.cloud.tasks.v2beta3.IQueue>|null} [queues] ListQueuesResponse queues
                         * @property {string|null} [nextPageToken] ListQueuesResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListQueuesResponse.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a ListQueuesResponse.
                         * @implements IListQueuesResponse
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IListQueuesResponse=} [properties] Properties to set
                         */
                        function ListQueuesResponse(properties) {
                            this.queues = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListQueuesResponse queues.
                         * @member {Array.<google.cloud.tasks.v2beta3.IQueue>} queues
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesResponse
                         * @instance
                         */
                        ListQueuesResponse.prototype.queues = $util.emptyArray;
    
                        /**
                         * ListQueuesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesResponse
                         * @instance
                         */
                        ListQueuesResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListQueuesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IListQueuesResponse=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.ListQueuesResponse} ListQueuesResponse instance
                         */
                        ListQueuesResponse.create = function create(properties) {
                            return new ListQueuesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListQueuesResponse message. Does not implicitly {@link google.cloud.tasks.v2beta3.ListQueuesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IListQueuesResponse} message ListQueuesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListQueuesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.queues != null && message.queues.length)
                                for (var i = 0; i < message.queues.length; ++i)
                                    $root.google.cloud.tasks.v2beta3.Queue.encode(message.queues[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListQueuesResponse message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.ListQueuesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IListQueuesResponse} message ListQueuesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListQueuesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListQueuesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.ListQueuesResponse} ListQueuesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListQueuesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.ListQueuesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.queues && message.queues.length))
                                            message.queues = [];
                                        message.queues.push($root.google.cloud.tasks.v2beta3.Queue.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListQueuesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.ListQueuesResponse} ListQueuesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListQueuesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListQueuesResponse message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListQueuesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.queues != null && message.hasOwnProperty("queues")) {
                                if (!Array.isArray(message.queues))
                                    return "queues: array expected";
                                for (var i = 0; i < message.queues.length; ++i) {
                                    var error = $root.google.cloud.tasks.v2beta3.Queue.verify(message.queues[i]);
                                    if (error)
                                        return "queues." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListQueuesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.ListQueuesResponse} ListQueuesResponse
                         */
                        ListQueuesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.ListQueuesResponse)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.ListQueuesResponse();
                            if (object.queues) {
                                if (!Array.isArray(object.queues))
                                    throw TypeError(".google.cloud.tasks.v2beta3.ListQueuesResponse.queues: array expected");
                                message.queues = [];
                                for (var i = 0; i < object.queues.length; ++i) {
                                    if (typeof object.queues[i] !== "object")
                                        throw TypeError(".google.cloud.tasks.v2beta3.ListQueuesResponse.queues: object expected");
                                    message.queues[i] = $root.google.cloud.tasks.v2beta3.Queue.fromObject(object.queues[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListQueuesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta3.ListQueuesResponse} message ListQueuesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListQueuesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.queues = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.queues && message.queues.length) {
                                object.queues = [];
                                for (var j = 0; j < message.queues.length; ++j)
                                    object.queues[j] = $root.google.cloud.tasks.v2beta3.Queue.toObject(message.queues[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListQueuesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListQueuesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListQueuesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListQueuesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.ListQueuesResponse";
                        };
    
                        return ListQueuesResponse;
                    })();
    
                    v2beta3.GetQueueRequest = (function() {
    
                        /**
                         * Properties of a GetQueueRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IGetQueueRequest
                         * @property {string|null} [name] GetQueueRequest name
                         * @property {google.protobuf.IFieldMask|null} [readMask] GetQueueRequest readMask
                         */
    
                        /**
                         * Constructs a new GetQueueRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a GetQueueRequest.
                         * @implements IGetQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IGetQueueRequest=} [properties] Properties to set
                         */
                        function GetQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetQueueRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta3.GetQueueRequest
                         * @instance
                         */
                        GetQueueRequest.prototype.name = "";
    
                        /**
                         * GetQueueRequest readMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} readMask
                         * @memberof google.cloud.tasks.v2beta3.GetQueueRequest
                         * @instance
                         */
                        GetQueueRequest.prototype.readMask = null;
    
                        /**
                         * Creates a new GetQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.GetQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IGetQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.GetQueueRequest} GetQueueRequest instance
                         */
                        GetQueueRequest.create = function create(properties) {
                            return new GetQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2beta3.GetQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.GetQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IGetQueueRequest} message GetQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.readMask != null && Object.hasOwnProperty.call(message, "readMask"))
                                $root.google.protobuf.FieldMask.encode(message.readMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.GetQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.GetQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IGetQueueRequest} message GetQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.GetQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.GetQueueRequest} GetQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.GetQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.readMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.GetQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.GetQueueRequest} GetQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.GetQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.readMask != null && message.hasOwnProperty("readMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.readMask);
                                if (error)
                                    return "readMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GetQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.GetQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.GetQueueRequest} GetQueueRequest
                         */
                        GetQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.GetQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.GetQueueRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.readMask != null) {
                                if (typeof object.readMask !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.GetQueueRequest.readMask: object expected");
                                message.readMask = $root.google.protobuf.FieldMask.fromObject(object.readMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.GetQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.GetQueueRequest} message GetQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.readMask = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.readMask != null && message.hasOwnProperty("readMask"))
                                object.readMask = $root.google.protobuf.FieldMask.toObject(message.readMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this GetQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.GetQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.GetQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.GetQueueRequest";
                        };
    
                        return GetQueueRequest;
                    })();
    
                    v2beta3.CreateQueueRequest = (function() {
    
                        /**
                         * Properties of a CreateQueueRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface ICreateQueueRequest
                         * @property {string|null} [parent] CreateQueueRequest parent
                         * @property {google.cloud.tasks.v2beta3.IQueue|null} [queue] CreateQueueRequest queue
                         */
    
                        /**
                         * Constructs a new CreateQueueRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a CreateQueueRequest.
                         * @implements ICreateQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.ICreateQueueRequest=} [properties] Properties to set
                         */
                        function CreateQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateQueueRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.tasks.v2beta3.CreateQueueRequest
                         * @instance
                         */
                        CreateQueueRequest.prototype.parent = "";
    
                        /**
                         * CreateQueueRequest queue.
                         * @member {google.cloud.tasks.v2beta3.IQueue|null|undefined} queue
                         * @memberof google.cloud.tasks.v2beta3.CreateQueueRequest
                         * @instance
                         */
                        CreateQueueRequest.prototype.queue = null;
    
                        /**
                         * Creates a new CreateQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.CreateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.ICreateQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.CreateQueueRequest} CreateQueueRequest instance
                         */
                        CreateQueueRequest.create = function create(properties) {
                            return new CreateQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2beta3.CreateQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.CreateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.ICreateQueueRequest} message CreateQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.queue != null && Object.hasOwnProperty.call(message, "queue"))
                                $root.google.cloud.tasks.v2beta3.Queue.encode(message.queue, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.CreateQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.CreateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.ICreateQueueRequest} message CreateQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.CreateQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.CreateQueueRequest} CreateQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.CreateQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.queue = $root.google.cloud.tasks.v2beta3.Queue.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.CreateQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.CreateQueueRequest} CreateQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.CreateQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.queue != null && message.hasOwnProperty("queue")) {
                                var error = $root.google.cloud.tasks.v2beta3.Queue.verify(message.queue);
                                if (error)
                                    return "queue." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.CreateQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.CreateQueueRequest} CreateQueueRequest
                         */
                        CreateQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.CreateQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.CreateQueueRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.queue != null) {
                                if (typeof object.queue !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.CreateQueueRequest.queue: object expected");
                                message.queue = $root.google.cloud.tasks.v2beta3.Queue.fromObject(object.queue);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.CreateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.CreateQueueRequest} message CreateQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.queue = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.queue != null && message.hasOwnProperty("queue"))
                                object.queue = $root.google.cloud.tasks.v2beta3.Queue.toObject(message.queue, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.CreateQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.CreateQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.CreateQueueRequest";
                        };
    
                        return CreateQueueRequest;
                    })();
    
                    v2beta3.UpdateQueueRequest = (function() {
    
                        /**
                         * Properties of an UpdateQueueRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IUpdateQueueRequest
                         * @property {google.cloud.tasks.v2beta3.IQueue|null} [queue] UpdateQueueRequest queue
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateQueueRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateQueueRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents an UpdateQueueRequest.
                         * @implements IUpdateQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IUpdateQueueRequest=} [properties] Properties to set
                         */
                        function UpdateQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateQueueRequest queue.
                         * @member {google.cloud.tasks.v2beta3.IQueue|null|undefined} queue
                         * @memberof google.cloud.tasks.v2beta3.UpdateQueueRequest
                         * @instance
                         */
                        UpdateQueueRequest.prototype.queue = null;
    
                        /**
                         * UpdateQueueRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.tasks.v2beta3.UpdateQueueRequest
                         * @instance
                         */
                        UpdateQueueRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.UpdateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IUpdateQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.UpdateQueueRequest} UpdateQueueRequest instance
                         */
                        UpdateQueueRequest.create = function create(properties) {
                            return new UpdateQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2beta3.UpdateQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.UpdateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IUpdateQueueRequest} message UpdateQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.queue != null && Object.hasOwnProperty.call(message, "queue"))
                                $root.google.cloud.tasks.v2beta3.Queue.encode(message.queue, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.UpdateQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.UpdateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IUpdateQueueRequest} message UpdateQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.UpdateQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.UpdateQueueRequest} UpdateQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.UpdateQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.queue = $root.google.cloud.tasks.v2beta3.Queue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.UpdateQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.UpdateQueueRequest} UpdateQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.UpdateQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.queue != null && message.hasOwnProperty("queue")) {
                                var error = $root.google.cloud.tasks.v2beta3.Queue.verify(message.queue);
                                if (error)
                                    return "queue." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.UpdateQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.UpdateQueueRequest} UpdateQueueRequest
                         */
                        UpdateQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.UpdateQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.UpdateQueueRequest();
                            if (object.queue != null) {
                                if (typeof object.queue !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.UpdateQueueRequest.queue: object expected");
                                message.queue = $root.google.cloud.tasks.v2beta3.Queue.fromObject(object.queue);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.UpdateQueueRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.UpdateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.UpdateQueueRequest} message UpdateQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.queue = null;
                                object.updateMask = null;
                            }
                            if (message.queue != null && message.hasOwnProperty("queue"))
                                object.queue = $root.google.cloud.tasks.v2beta3.Queue.toObject(message.queue, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.UpdateQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.UpdateQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.UpdateQueueRequest";
                        };
    
                        return UpdateQueueRequest;
                    })();
    
                    v2beta3.DeleteQueueRequest = (function() {
    
                        /**
                         * Properties of a DeleteQueueRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IDeleteQueueRequest
                         * @property {string|null} [name] DeleteQueueRequest name
                         */
    
                        /**
                         * Constructs a new DeleteQueueRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a DeleteQueueRequest.
                         * @implements IDeleteQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IDeleteQueueRequest=} [properties] Properties to set
                         */
                        function DeleteQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteQueueRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta3.DeleteQueueRequest
                         * @instance
                         */
                        DeleteQueueRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.DeleteQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IDeleteQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.DeleteQueueRequest} DeleteQueueRequest instance
                         */
                        DeleteQueueRequest.create = function create(properties) {
                            return new DeleteQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2beta3.DeleteQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.DeleteQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IDeleteQueueRequest} message DeleteQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.DeleteQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.DeleteQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IDeleteQueueRequest} message DeleteQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.DeleteQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.DeleteQueueRequest} DeleteQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.DeleteQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.DeleteQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.DeleteQueueRequest} DeleteQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.DeleteQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.DeleteQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.DeleteQueueRequest} DeleteQueueRequest
                         */
                        DeleteQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.DeleteQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.DeleteQueueRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.DeleteQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.DeleteQueueRequest} message DeleteQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.DeleteQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.DeleteQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.DeleteQueueRequest";
                        };
    
                        return DeleteQueueRequest;
                    })();
    
                    v2beta3.PurgeQueueRequest = (function() {
    
                        /**
                         * Properties of a PurgeQueueRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IPurgeQueueRequest
                         * @property {string|null} [name] PurgeQueueRequest name
                         */
    
                        /**
                         * Constructs a new PurgeQueueRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a PurgeQueueRequest.
                         * @implements IPurgeQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IPurgeQueueRequest=} [properties] Properties to set
                         */
                        function PurgeQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PurgeQueueRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta3.PurgeQueueRequest
                         * @instance
                         */
                        PurgeQueueRequest.prototype.name = "";
    
                        /**
                         * Creates a new PurgeQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.PurgeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IPurgeQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.PurgeQueueRequest} PurgeQueueRequest instance
                         */
                        PurgeQueueRequest.create = function create(properties) {
                            return new PurgeQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified PurgeQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2beta3.PurgeQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.PurgeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IPurgeQueueRequest} message PurgeQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PurgeQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PurgeQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.PurgeQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.PurgeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IPurgeQueueRequest} message PurgeQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PurgeQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PurgeQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.PurgeQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.PurgeQueueRequest} PurgeQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PurgeQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.PurgeQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PurgeQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.PurgeQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.PurgeQueueRequest} PurgeQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PurgeQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PurgeQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.PurgeQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PurgeQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PurgeQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.PurgeQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.PurgeQueueRequest} PurgeQueueRequest
                         */
                        PurgeQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.PurgeQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.PurgeQueueRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PurgeQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.PurgeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.PurgeQueueRequest} message PurgeQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PurgeQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this PurgeQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.PurgeQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PurgeQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PurgeQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.PurgeQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PurgeQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.PurgeQueueRequest";
                        };
    
                        return PurgeQueueRequest;
                    })();
    
                    v2beta3.PauseQueueRequest = (function() {
    
                        /**
                         * Properties of a PauseQueueRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IPauseQueueRequest
                         * @property {string|null} [name] PauseQueueRequest name
                         */
    
                        /**
                         * Constructs a new PauseQueueRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a PauseQueueRequest.
                         * @implements IPauseQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IPauseQueueRequest=} [properties] Properties to set
                         */
                        function PauseQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PauseQueueRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta3.PauseQueueRequest
                         * @instance
                         */
                        PauseQueueRequest.prototype.name = "";
    
                        /**
                         * Creates a new PauseQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.PauseQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IPauseQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.PauseQueueRequest} PauseQueueRequest instance
                         */
                        PauseQueueRequest.create = function create(properties) {
                            return new PauseQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified PauseQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2beta3.PauseQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.PauseQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IPauseQueueRequest} message PauseQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PauseQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PauseQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.PauseQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.PauseQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IPauseQueueRequest} message PauseQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PauseQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PauseQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.PauseQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.PauseQueueRequest} PauseQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PauseQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.PauseQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PauseQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.PauseQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.PauseQueueRequest} PauseQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PauseQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PauseQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.PauseQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PauseQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PauseQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.PauseQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.PauseQueueRequest} PauseQueueRequest
                         */
                        PauseQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.PauseQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.PauseQueueRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PauseQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.PauseQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.PauseQueueRequest} message PauseQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PauseQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this PauseQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.PauseQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PauseQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PauseQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.PauseQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PauseQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.PauseQueueRequest";
                        };
    
                        return PauseQueueRequest;
                    })();
    
                    v2beta3.ResumeQueueRequest = (function() {
    
                        /**
                         * Properties of a ResumeQueueRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IResumeQueueRequest
                         * @property {string|null} [name] ResumeQueueRequest name
                         */
    
                        /**
                         * Constructs a new ResumeQueueRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a ResumeQueueRequest.
                         * @implements IResumeQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IResumeQueueRequest=} [properties] Properties to set
                         */
                        function ResumeQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ResumeQueueRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta3.ResumeQueueRequest
                         * @instance
                         */
                        ResumeQueueRequest.prototype.name = "";
    
                        /**
                         * Creates a new ResumeQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.ResumeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IResumeQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.ResumeQueueRequest} ResumeQueueRequest instance
                         */
                        ResumeQueueRequest.create = function create(properties) {
                            return new ResumeQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ResumeQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2beta3.ResumeQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.ResumeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IResumeQueueRequest} message ResumeQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResumeQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ResumeQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.ResumeQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.ResumeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IResumeQueueRequest} message ResumeQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResumeQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ResumeQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.ResumeQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.ResumeQueueRequest} ResumeQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResumeQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.ResumeQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ResumeQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.ResumeQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.ResumeQueueRequest} ResumeQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResumeQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ResumeQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.ResumeQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ResumeQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ResumeQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.ResumeQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.ResumeQueueRequest} ResumeQueueRequest
                         */
                        ResumeQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.ResumeQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.ResumeQueueRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ResumeQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.ResumeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.ResumeQueueRequest} message ResumeQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ResumeQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this ResumeQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.ResumeQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ResumeQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ResumeQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.ResumeQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ResumeQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.ResumeQueueRequest";
                        };
    
                        return ResumeQueueRequest;
                    })();
    
                    v2beta3.ListTasksRequest = (function() {
    
                        /**
                         * Properties of a ListTasksRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IListTasksRequest
                         * @property {string|null} [parent] ListTasksRequest parent
                         * @property {google.cloud.tasks.v2beta3.Task.View|null} [responseView] ListTasksRequest responseView
                         * @property {number|null} [pageSize] ListTasksRequest pageSize
                         * @property {string|null} [pageToken] ListTasksRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListTasksRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a ListTasksRequest.
                         * @implements IListTasksRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IListTasksRequest=} [properties] Properties to set
                         */
                        function ListTasksRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListTasksRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.tasks.v2beta3.ListTasksRequest
                         * @instance
                         */
                        ListTasksRequest.prototype.parent = "";
    
                        /**
                         * ListTasksRequest responseView.
                         * @member {google.cloud.tasks.v2beta3.Task.View} responseView
                         * @memberof google.cloud.tasks.v2beta3.ListTasksRequest
                         * @instance
                         */
                        ListTasksRequest.prototype.responseView = 0;
    
                        /**
                         * ListTasksRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.tasks.v2beta3.ListTasksRequest
                         * @instance
                         */
                        ListTasksRequest.prototype.pageSize = 0;
    
                        /**
                         * ListTasksRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.tasks.v2beta3.ListTasksRequest
                         * @instance
                         */
                        ListTasksRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListTasksRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.ListTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IListTasksRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.ListTasksRequest} ListTasksRequest instance
                         */
                        ListTasksRequest.create = function create(properties) {
                            return new ListTasksRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListTasksRequest message. Does not implicitly {@link google.cloud.tasks.v2beta3.ListTasksRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.ListTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IListTasksRequest} message ListTasksRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTasksRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.responseView != null && Object.hasOwnProperty.call(message, "responseView"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.responseView);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListTasksRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.ListTasksRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.ListTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IListTasksRequest} message ListTasksRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTasksRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListTasksRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.ListTasksRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.ListTasksRequest} ListTasksRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTasksRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.ListTasksRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.responseView = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListTasksRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.ListTasksRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.ListTasksRequest} ListTasksRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTasksRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListTasksRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.ListTasksRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListTasksRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                switch (message.responseView) {
                                default:
                                    return "responseView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListTasksRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.ListTasksRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.ListTasksRequest} ListTasksRequest
                         */
                        ListTasksRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.ListTasksRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.ListTasksRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            switch (object.responseView) {
                            default:
                                if (typeof object.responseView === "number") {
                                    message.responseView = object.responseView;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.responseView = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.responseView = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.responseView = 2;
                                break;
                            }
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListTasksRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.ListTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.ListTasksRequest} message ListTasksRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListTasksRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.responseView = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                object.responseView = options.enums === String ? $root.google.cloud.tasks.v2beta3.Task.View[message.responseView] === undefined ? message.responseView : $root.google.cloud.tasks.v2beta3.Task.View[message.responseView] : message.responseView;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListTasksRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.ListTasksRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListTasksRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListTasksRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.ListTasksRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListTasksRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.ListTasksRequest";
                        };
    
                        return ListTasksRequest;
                    })();
    
                    v2beta3.ListTasksResponse = (function() {
    
                        /**
                         * Properties of a ListTasksResponse.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IListTasksResponse
                         * @property {Array.<google.cloud.tasks.v2beta3.ITask>|null} [tasks] ListTasksResponse tasks
                         * @property {string|null} [nextPageToken] ListTasksResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListTasksResponse.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a ListTasksResponse.
                         * @implements IListTasksResponse
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IListTasksResponse=} [properties] Properties to set
                         */
                        function ListTasksResponse(properties) {
                            this.tasks = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListTasksResponse tasks.
                         * @member {Array.<google.cloud.tasks.v2beta3.ITask>} tasks
                         * @memberof google.cloud.tasks.v2beta3.ListTasksResponse
                         * @instance
                         */
                        ListTasksResponse.prototype.tasks = $util.emptyArray;
    
                        /**
                         * ListTasksResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.tasks.v2beta3.ListTasksResponse
                         * @instance
                         */
                        ListTasksResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListTasksResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.ListTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IListTasksResponse=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.ListTasksResponse} ListTasksResponse instance
                         */
                        ListTasksResponse.create = function create(properties) {
                            return new ListTasksResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListTasksResponse message. Does not implicitly {@link google.cloud.tasks.v2beta3.ListTasksResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.ListTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IListTasksResponse} message ListTasksResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTasksResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.tasks != null && message.tasks.length)
                                for (var i = 0; i < message.tasks.length; ++i)
                                    $root.google.cloud.tasks.v2beta3.Task.encode(message.tasks[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListTasksResponse message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.ListTasksResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.ListTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IListTasksResponse} message ListTasksResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTasksResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListTasksResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.ListTasksResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.ListTasksResponse} ListTasksResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTasksResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.ListTasksResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.tasks && message.tasks.length))
                                            message.tasks = [];
                                        message.tasks.push($root.google.cloud.tasks.v2beta3.Task.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListTasksResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.ListTasksResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.ListTasksResponse} ListTasksResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTasksResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListTasksResponse message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.ListTasksResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListTasksResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.tasks != null && message.hasOwnProperty("tasks")) {
                                if (!Array.isArray(message.tasks))
                                    return "tasks: array expected";
                                for (var i = 0; i < message.tasks.length; ++i) {
                                    var error = $root.google.cloud.tasks.v2beta3.Task.verify(message.tasks[i]);
                                    if (error)
                                        return "tasks." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListTasksResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.ListTasksResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.ListTasksResponse} ListTasksResponse
                         */
                        ListTasksResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.ListTasksResponse)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.ListTasksResponse();
                            if (object.tasks) {
                                if (!Array.isArray(object.tasks))
                                    throw TypeError(".google.cloud.tasks.v2beta3.ListTasksResponse.tasks: array expected");
                                message.tasks = [];
                                for (var i = 0; i < object.tasks.length; ++i) {
                                    if (typeof object.tasks[i] !== "object")
                                        throw TypeError(".google.cloud.tasks.v2beta3.ListTasksResponse.tasks: object expected");
                                    message.tasks[i] = $root.google.cloud.tasks.v2beta3.Task.fromObject(object.tasks[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListTasksResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.ListTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta3.ListTasksResponse} message ListTasksResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListTasksResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.tasks = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.tasks && message.tasks.length) {
                                object.tasks = [];
                                for (var j = 0; j < message.tasks.length; ++j)
                                    object.tasks[j] = $root.google.cloud.tasks.v2beta3.Task.toObject(message.tasks[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListTasksResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.ListTasksResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListTasksResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListTasksResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.ListTasksResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListTasksResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.ListTasksResponse";
                        };
    
                        return ListTasksResponse;
                    })();
    
                    v2beta3.GetTaskRequest = (function() {
    
                        /**
                         * Properties of a GetTaskRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IGetTaskRequest
                         * @property {string|null} [name] GetTaskRequest name
                         * @property {google.cloud.tasks.v2beta3.Task.View|null} [responseView] GetTaskRequest responseView
                         */
    
                        /**
                         * Constructs a new GetTaskRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a GetTaskRequest.
                         * @implements IGetTaskRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IGetTaskRequest=} [properties] Properties to set
                         */
                        function GetTaskRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetTaskRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta3.GetTaskRequest
                         * @instance
                         */
                        GetTaskRequest.prototype.name = "";
    
                        /**
                         * GetTaskRequest responseView.
                         * @member {google.cloud.tasks.v2beta3.Task.View} responseView
                         * @memberof google.cloud.tasks.v2beta3.GetTaskRequest
                         * @instance
                         */
                        GetTaskRequest.prototype.responseView = 0;
    
                        /**
                         * Creates a new GetTaskRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.GetTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IGetTaskRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.GetTaskRequest} GetTaskRequest instance
                         */
                        GetTaskRequest.create = function create(properties) {
                            return new GetTaskRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetTaskRequest message. Does not implicitly {@link google.cloud.tasks.v2beta3.GetTaskRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.GetTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IGetTaskRequest} message GetTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetTaskRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.responseView != null && Object.hasOwnProperty.call(message, "responseView"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.responseView);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetTaskRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.GetTaskRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.GetTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IGetTaskRequest} message GetTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetTaskRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetTaskRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.GetTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.GetTaskRequest} GetTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetTaskRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.GetTaskRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.responseView = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetTaskRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.GetTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.GetTaskRequest} GetTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetTaskRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetTaskRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.GetTaskRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetTaskRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                switch (message.responseView) {
                                default:
                                    return "responseView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a GetTaskRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.GetTaskRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.GetTaskRequest} GetTaskRequest
                         */
                        GetTaskRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.GetTaskRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.GetTaskRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            switch (object.responseView) {
                            default:
                                if (typeof object.responseView === "number") {
                                    message.responseView = object.responseView;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.responseView = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.responseView = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.responseView = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetTaskRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.GetTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.GetTaskRequest} message GetTaskRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetTaskRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.responseView = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                object.responseView = options.enums === String ? $root.google.cloud.tasks.v2beta3.Task.View[message.responseView] === undefined ? message.responseView : $root.google.cloud.tasks.v2beta3.Task.View[message.responseView] : message.responseView;
                            return object;
                        };
    
                        /**
                         * Converts this GetTaskRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.GetTaskRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetTaskRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetTaskRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.GetTaskRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetTaskRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.GetTaskRequest";
                        };
    
                        return GetTaskRequest;
                    })();
    
                    v2beta3.CreateTaskRequest = (function() {
    
                        /**
                         * Properties of a CreateTaskRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface ICreateTaskRequest
                         * @property {string|null} [parent] CreateTaskRequest parent
                         * @property {google.cloud.tasks.v2beta3.ITask|null} [task] CreateTaskRequest task
                         * @property {google.cloud.tasks.v2beta3.Task.View|null} [responseView] CreateTaskRequest responseView
                         */
    
                        /**
                         * Constructs a new CreateTaskRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a CreateTaskRequest.
                         * @implements ICreateTaskRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.ICreateTaskRequest=} [properties] Properties to set
                         */
                        function CreateTaskRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateTaskRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.tasks.v2beta3.CreateTaskRequest
                         * @instance
                         */
                        CreateTaskRequest.prototype.parent = "";
    
                        /**
                         * CreateTaskRequest task.
                         * @member {google.cloud.tasks.v2beta3.ITask|null|undefined} task
                         * @memberof google.cloud.tasks.v2beta3.CreateTaskRequest
                         * @instance
                         */
                        CreateTaskRequest.prototype.task = null;
    
                        /**
                         * CreateTaskRequest responseView.
                         * @member {google.cloud.tasks.v2beta3.Task.View} responseView
                         * @memberof google.cloud.tasks.v2beta3.CreateTaskRequest
                         * @instance
                         */
                        CreateTaskRequest.prototype.responseView = 0;
    
                        /**
                         * Creates a new CreateTaskRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.CreateTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.ICreateTaskRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.CreateTaskRequest} CreateTaskRequest instance
                         */
                        CreateTaskRequest.create = function create(properties) {
                            return new CreateTaskRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateTaskRequest message. Does not implicitly {@link google.cloud.tasks.v2beta3.CreateTaskRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.CreateTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.ICreateTaskRequest} message CreateTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateTaskRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.task != null && Object.hasOwnProperty.call(message, "task"))
                                $root.google.cloud.tasks.v2beta3.Task.encode(message.task, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.responseView != null && Object.hasOwnProperty.call(message, "responseView"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.responseView);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateTaskRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.CreateTaskRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.CreateTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.ICreateTaskRequest} message CreateTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateTaskRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateTaskRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.CreateTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.CreateTaskRequest} CreateTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateTaskRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.CreateTaskRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.task = $root.google.cloud.tasks.v2beta3.Task.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.responseView = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateTaskRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.CreateTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.CreateTaskRequest} CreateTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateTaskRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateTaskRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.CreateTaskRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateTaskRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.task != null && message.hasOwnProperty("task")) {
                                var error = $root.google.cloud.tasks.v2beta3.Task.verify(message.task);
                                if (error)
                                    return "task." + error;
                            }
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                switch (message.responseView) {
                                default:
                                    return "responseView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a CreateTaskRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.CreateTaskRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.CreateTaskRequest} CreateTaskRequest
                         */
                        CreateTaskRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.CreateTaskRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.CreateTaskRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.task != null) {
                                if (typeof object.task !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.CreateTaskRequest.task: object expected");
                                message.task = $root.google.cloud.tasks.v2beta3.Task.fromObject(object.task);
                            }
                            switch (object.responseView) {
                            default:
                                if (typeof object.responseView === "number") {
                                    message.responseView = object.responseView;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.responseView = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.responseView = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.responseView = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateTaskRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.CreateTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.CreateTaskRequest} message CreateTaskRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateTaskRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.task = null;
                                object.responseView = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.task != null && message.hasOwnProperty("task"))
                                object.task = $root.google.cloud.tasks.v2beta3.Task.toObject(message.task, options);
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                object.responseView = options.enums === String ? $root.google.cloud.tasks.v2beta3.Task.View[message.responseView] === undefined ? message.responseView : $root.google.cloud.tasks.v2beta3.Task.View[message.responseView] : message.responseView;
                            return object;
                        };
    
                        /**
                         * Converts this CreateTaskRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.CreateTaskRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateTaskRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateTaskRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.CreateTaskRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateTaskRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.CreateTaskRequest";
                        };
    
                        return CreateTaskRequest;
                    })();
    
                    v2beta3.DeleteTaskRequest = (function() {
    
                        /**
                         * Properties of a DeleteTaskRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IDeleteTaskRequest
                         * @property {string|null} [name] DeleteTaskRequest name
                         */
    
                        /**
                         * Constructs a new DeleteTaskRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a DeleteTaskRequest.
                         * @implements IDeleteTaskRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IDeleteTaskRequest=} [properties] Properties to set
                         */
                        function DeleteTaskRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteTaskRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta3.DeleteTaskRequest
                         * @instance
                         */
                        DeleteTaskRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteTaskRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.DeleteTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IDeleteTaskRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.DeleteTaskRequest} DeleteTaskRequest instance
                         */
                        DeleteTaskRequest.create = function create(properties) {
                            return new DeleteTaskRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteTaskRequest message. Does not implicitly {@link google.cloud.tasks.v2beta3.DeleteTaskRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.DeleteTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IDeleteTaskRequest} message DeleteTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteTaskRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteTaskRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.DeleteTaskRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.DeleteTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IDeleteTaskRequest} message DeleteTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteTaskRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteTaskRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.DeleteTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.DeleteTaskRequest} DeleteTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteTaskRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.DeleteTaskRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteTaskRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.DeleteTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.DeleteTaskRequest} DeleteTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteTaskRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteTaskRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.DeleteTaskRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteTaskRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteTaskRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.DeleteTaskRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.DeleteTaskRequest} DeleteTaskRequest
                         */
                        DeleteTaskRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.DeleteTaskRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.DeleteTaskRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteTaskRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.DeleteTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.DeleteTaskRequest} message DeleteTaskRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteTaskRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteTaskRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.DeleteTaskRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteTaskRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteTaskRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.DeleteTaskRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteTaskRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.DeleteTaskRequest";
                        };
    
                        return DeleteTaskRequest;
                    })();
    
                    v2beta3.RunTaskRequest = (function() {
    
                        /**
                         * Properties of a RunTaskRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IRunTaskRequest
                         * @property {string|null} [name] RunTaskRequest name
                         * @property {google.cloud.tasks.v2beta3.Task.View|null} [responseView] RunTaskRequest responseView
                         */
    
                        /**
                         * Constructs a new RunTaskRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a RunTaskRequest.
                         * @implements IRunTaskRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IRunTaskRequest=} [properties] Properties to set
                         */
                        function RunTaskRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RunTaskRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta3.RunTaskRequest
                         * @instance
                         */
                        RunTaskRequest.prototype.name = "";
    
                        /**
                         * RunTaskRequest responseView.
                         * @member {google.cloud.tasks.v2beta3.Task.View} responseView
                         * @memberof google.cloud.tasks.v2beta3.RunTaskRequest
                         * @instance
                         */
                        RunTaskRequest.prototype.responseView = 0;
    
                        /**
                         * Creates a new RunTaskRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.RunTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IRunTaskRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.RunTaskRequest} RunTaskRequest instance
                         */
                        RunTaskRequest.create = function create(properties) {
                            return new RunTaskRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RunTaskRequest message. Does not implicitly {@link google.cloud.tasks.v2beta3.RunTaskRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.RunTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IRunTaskRequest} message RunTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunTaskRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.responseView != null && Object.hasOwnProperty.call(message, "responseView"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.responseView);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RunTaskRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.RunTaskRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.RunTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IRunTaskRequest} message RunTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunTaskRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RunTaskRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.RunTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.RunTaskRequest} RunTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunTaskRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.RunTaskRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.responseView = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RunTaskRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.RunTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.RunTaskRequest} RunTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunTaskRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RunTaskRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.RunTaskRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RunTaskRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                switch (message.responseView) {
                                default:
                                    return "responseView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a RunTaskRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.RunTaskRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.RunTaskRequest} RunTaskRequest
                         */
                        RunTaskRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.RunTaskRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.RunTaskRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            switch (object.responseView) {
                            default:
                                if (typeof object.responseView === "number") {
                                    message.responseView = object.responseView;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.responseView = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.responseView = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.responseView = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RunTaskRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.RunTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.RunTaskRequest} message RunTaskRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RunTaskRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.responseView = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                object.responseView = options.enums === String ? $root.google.cloud.tasks.v2beta3.Task.View[message.responseView] === undefined ? message.responseView : $root.google.cloud.tasks.v2beta3.Task.View[message.responseView] : message.responseView;
                            return object;
                        };
    
                        /**
                         * Converts this RunTaskRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.RunTaskRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RunTaskRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RunTaskRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.RunTaskRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RunTaskRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.RunTaskRequest";
                        };
    
                        return RunTaskRequest;
                    })();
    
                    v2beta3.BufferTaskRequest = (function() {
    
                        /**
                         * Properties of a BufferTaskRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IBufferTaskRequest
                         * @property {string|null} [queue] BufferTaskRequest queue
                         * @property {string|null} [taskId] BufferTaskRequest taskId
                         * @property {google.api.IHttpBody|null} [body] BufferTaskRequest body
                         */
    
                        /**
                         * Constructs a new BufferTaskRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a BufferTaskRequest.
                         * @implements IBufferTaskRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IBufferTaskRequest=} [properties] Properties to set
                         */
                        function BufferTaskRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BufferTaskRequest queue.
                         * @member {string} queue
                         * @memberof google.cloud.tasks.v2beta3.BufferTaskRequest
                         * @instance
                         */
                        BufferTaskRequest.prototype.queue = "";
    
                        /**
                         * BufferTaskRequest taskId.
                         * @member {string} taskId
                         * @memberof google.cloud.tasks.v2beta3.BufferTaskRequest
                         * @instance
                         */
                        BufferTaskRequest.prototype.taskId = "";
    
                        /**
                         * BufferTaskRequest body.
                         * @member {google.api.IHttpBody|null|undefined} body
                         * @memberof google.cloud.tasks.v2beta3.BufferTaskRequest
                         * @instance
                         */
                        BufferTaskRequest.prototype.body = null;
    
                        /**
                         * Creates a new BufferTaskRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.BufferTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IBufferTaskRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.BufferTaskRequest} BufferTaskRequest instance
                         */
                        BufferTaskRequest.create = function create(properties) {
                            return new BufferTaskRequest(properties);
                        };
    
                        /**
                         * Encodes the specified BufferTaskRequest message. Does not implicitly {@link google.cloud.tasks.v2beta3.BufferTaskRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.BufferTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IBufferTaskRequest} message BufferTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BufferTaskRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.queue != null && Object.hasOwnProperty.call(message, "queue"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.queue);
                            if (message.taskId != null && Object.hasOwnProperty.call(message, "taskId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.taskId);
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                $root.google.api.HttpBody.encode(message.body, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BufferTaskRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.BufferTaskRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.BufferTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IBufferTaskRequest} message BufferTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BufferTaskRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BufferTaskRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.BufferTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.BufferTaskRequest} BufferTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BufferTaskRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.BufferTaskRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.queue = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.taskId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.body = $root.google.api.HttpBody.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BufferTaskRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.BufferTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.BufferTaskRequest} BufferTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BufferTaskRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BufferTaskRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.BufferTaskRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BufferTaskRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.queue != null && message.hasOwnProperty("queue"))
                                if (!$util.isString(message.queue))
                                    return "queue: string expected";
                            if (message.taskId != null && message.hasOwnProperty("taskId"))
                                if (!$util.isString(message.taskId))
                                    return "taskId: string expected";
                            if (message.body != null && message.hasOwnProperty("body")) {
                                var error = $root.google.api.HttpBody.verify(message.body);
                                if (error)
                                    return "body." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BufferTaskRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.BufferTaskRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.BufferTaskRequest} BufferTaskRequest
                         */
                        BufferTaskRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.BufferTaskRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.BufferTaskRequest();
                            if (object.queue != null)
                                message.queue = String(object.queue);
                            if (object.taskId != null)
                                message.taskId = String(object.taskId);
                            if (object.body != null) {
                                if (typeof object.body !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.BufferTaskRequest.body: object expected");
                                message.body = $root.google.api.HttpBody.fromObject(object.body);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BufferTaskRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.BufferTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.BufferTaskRequest} message BufferTaskRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BufferTaskRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.queue = "";
                                object.taskId = "";
                                object.body = null;
                            }
                            if (message.queue != null && message.hasOwnProperty("queue"))
                                object.queue = message.queue;
                            if (message.taskId != null && message.hasOwnProperty("taskId"))
                                object.taskId = message.taskId;
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = $root.google.api.HttpBody.toObject(message.body, options);
                            return object;
                        };
    
                        /**
                         * Converts this BufferTaskRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.BufferTaskRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BufferTaskRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BufferTaskRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.BufferTaskRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BufferTaskRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.BufferTaskRequest";
                        };
    
                        return BufferTaskRequest;
                    })();
    
                    v2beta3.BufferTaskResponse = (function() {
    
                        /**
                         * Properties of a BufferTaskResponse.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IBufferTaskResponse
                         * @property {google.cloud.tasks.v2beta3.ITask|null} [task] BufferTaskResponse task
                         */
    
                        /**
                         * Constructs a new BufferTaskResponse.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a BufferTaskResponse.
                         * @implements IBufferTaskResponse
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IBufferTaskResponse=} [properties] Properties to set
                         */
                        function BufferTaskResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BufferTaskResponse task.
                         * @member {google.cloud.tasks.v2beta3.ITask|null|undefined} task
                         * @memberof google.cloud.tasks.v2beta3.BufferTaskResponse
                         * @instance
                         */
                        BufferTaskResponse.prototype.task = null;
    
                        /**
                         * Creates a new BufferTaskResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.BufferTaskResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IBufferTaskResponse=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.BufferTaskResponse} BufferTaskResponse instance
                         */
                        BufferTaskResponse.create = function create(properties) {
                            return new BufferTaskResponse(properties);
                        };
    
                        /**
                         * Encodes the specified BufferTaskResponse message. Does not implicitly {@link google.cloud.tasks.v2beta3.BufferTaskResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.BufferTaskResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IBufferTaskResponse} message BufferTaskResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BufferTaskResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.task != null && Object.hasOwnProperty.call(message, "task"))
                                $root.google.cloud.tasks.v2beta3.Task.encode(message.task, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BufferTaskResponse message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.BufferTaskResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.BufferTaskResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IBufferTaskResponse} message BufferTaskResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BufferTaskResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BufferTaskResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.BufferTaskResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.BufferTaskResponse} BufferTaskResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BufferTaskResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.BufferTaskResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.task = $root.google.cloud.tasks.v2beta3.Task.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BufferTaskResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.BufferTaskResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.BufferTaskResponse} BufferTaskResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BufferTaskResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BufferTaskResponse message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.BufferTaskResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BufferTaskResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.task != null && message.hasOwnProperty("task")) {
                                var error = $root.google.cloud.tasks.v2beta3.Task.verify(message.task);
                                if (error)
                                    return "task." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BufferTaskResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.BufferTaskResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.BufferTaskResponse} BufferTaskResponse
                         */
                        BufferTaskResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.BufferTaskResponse)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.BufferTaskResponse();
                            if (object.task != null) {
                                if (typeof object.task !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.BufferTaskResponse.task: object expected");
                                message.task = $root.google.cloud.tasks.v2beta3.Task.fromObject(object.task);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BufferTaskResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.BufferTaskResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta3.BufferTaskResponse} message BufferTaskResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BufferTaskResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.task = null;
                            if (message.task != null && message.hasOwnProperty("task"))
                                object.task = $root.google.cloud.tasks.v2beta3.Task.toObject(message.task, options);
                            return object;
                        };
    
                        /**
                         * Converts this BufferTaskResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.BufferTaskResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BufferTaskResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BufferTaskResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.BufferTaskResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BufferTaskResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.BufferTaskResponse";
                        };
    
                        return BufferTaskResponse;
                    })();
    
                    v2beta3.Queue = (function() {
    
                        /**
                         * Properties of a Queue.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IQueue
                         * @property {string|null} [name] Queue name
                         * @property {google.cloud.tasks.v2beta3.IAppEngineHttpQueue|null} [appEngineHttpQueue] Queue appEngineHttpQueue
                         * @property {google.cloud.tasks.v2beta3.IHttpTarget|null} [httpTarget] Queue httpTarget
                         * @property {google.cloud.tasks.v2beta3.IRateLimits|null} [rateLimits] Queue rateLimits
                         * @property {google.cloud.tasks.v2beta3.IRetryConfig|null} [retryConfig] Queue retryConfig
                         * @property {google.cloud.tasks.v2beta3.Queue.State|null} [state] Queue state
                         * @property {google.protobuf.ITimestamp|null} [purgeTime] Queue purgeTime
                         * @property {google.protobuf.IDuration|null} [taskTtl] Queue taskTtl
                         * @property {google.protobuf.IDuration|null} [tombstoneTtl] Queue tombstoneTtl
                         * @property {google.cloud.tasks.v2beta3.IStackdriverLoggingConfig|null} [stackdriverLoggingConfig] Queue stackdriverLoggingConfig
                         * @property {google.cloud.tasks.v2beta3.Queue.Type|null} [type] Queue type
                         * @property {google.cloud.tasks.v2beta3.IQueueStats|null} [stats] Queue stats
                         */
    
                        /**
                         * Constructs a new Queue.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a Queue.
                         * @implements IQueue
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IQueue=} [properties] Properties to set
                         */
                        function Queue(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Queue name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @instance
                         */
                        Queue.prototype.name = "";
    
                        /**
                         * Queue appEngineHttpQueue.
                         * @member {google.cloud.tasks.v2beta3.IAppEngineHttpQueue|null|undefined} appEngineHttpQueue
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @instance
                         */
                        Queue.prototype.appEngineHttpQueue = null;
    
                        /**
                         * Queue httpTarget.
                         * @member {google.cloud.tasks.v2beta3.IHttpTarget|null|undefined} httpTarget
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @instance
                         */
                        Queue.prototype.httpTarget = null;
    
                        /**
                         * Queue rateLimits.
                         * @member {google.cloud.tasks.v2beta3.IRateLimits|null|undefined} rateLimits
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @instance
                         */
                        Queue.prototype.rateLimits = null;
    
                        /**
                         * Queue retryConfig.
                         * @member {google.cloud.tasks.v2beta3.IRetryConfig|null|undefined} retryConfig
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @instance
                         */
                        Queue.prototype.retryConfig = null;
    
                        /**
                         * Queue state.
                         * @member {google.cloud.tasks.v2beta3.Queue.State} state
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @instance
                         */
                        Queue.prototype.state = 0;
    
                        /**
                         * Queue purgeTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} purgeTime
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @instance
                         */
                        Queue.prototype.purgeTime = null;
    
                        /**
                         * Queue taskTtl.
                         * @member {google.protobuf.IDuration|null|undefined} taskTtl
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @instance
                         */
                        Queue.prototype.taskTtl = null;
    
                        /**
                         * Queue tombstoneTtl.
                         * @member {google.protobuf.IDuration|null|undefined} tombstoneTtl
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @instance
                         */
                        Queue.prototype.tombstoneTtl = null;
    
                        /**
                         * Queue stackdriverLoggingConfig.
                         * @member {google.cloud.tasks.v2beta3.IStackdriverLoggingConfig|null|undefined} stackdriverLoggingConfig
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @instance
                         */
                        Queue.prototype.stackdriverLoggingConfig = null;
    
                        /**
                         * Queue type.
                         * @member {google.cloud.tasks.v2beta3.Queue.Type} type
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @instance
                         */
                        Queue.prototype.type = 0;
    
                        /**
                         * Queue stats.
                         * @member {google.cloud.tasks.v2beta3.IQueueStats|null|undefined} stats
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @instance
                         */
                        Queue.prototype.stats = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Queue queueType.
                         * @member {"appEngineHttpQueue"|undefined} queueType
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @instance
                         */
                        Object.defineProperty(Queue.prototype, "queueType", {
                            get: $util.oneOfGetter($oneOfFields = ["appEngineHttpQueue"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Queue instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IQueue=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.Queue} Queue instance
                         */
                        Queue.create = function create(properties) {
                            return new Queue(properties);
                        };
    
                        /**
                         * Encodes the specified Queue message. Does not implicitly {@link google.cloud.tasks.v2beta3.Queue.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IQueue} message Queue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Queue.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.appEngineHttpQueue != null && Object.hasOwnProperty.call(message, "appEngineHttpQueue"))
                                $root.google.cloud.tasks.v2beta3.AppEngineHttpQueue.encode(message.appEngineHttpQueue, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.rateLimits != null && Object.hasOwnProperty.call(message, "rateLimits"))
                                $root.google.cloud.tasks.v2beta3.RateLimits.encode(message.rateLimits, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.retryConfig != null && Object.hasOwnProperty.call(message, "retryConfig"))
                                $root.google.cloud.tasks.v2beta3.RetryConfig.encode(message.retryConfig, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.state);
                            if (message.purgeTime != null && Object.hasOwnProperty.call(message, "purgeTime"))
                                $root.google.protobuf.Timestamp.encode(message.purgeTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.taskTtl != null && Object.hasOwnProperty.call(message, "taskTtl"))
                                $root.google.protobuf.Duration.encode(message.taskTtl, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.tombstoneTtl != null && Object.hasOwnProperty.call(message, "tombstoneTtl"))
                                $root.google.protobuf.Duration.encode(message.tombstoneTtl, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.stackdriverLoggingConfig != null && Object.hasOwnProperty.call(message, "stackdriverLoggingConfig"))
                                $root.google.cloud.tasks.v2beta3.StackdriverLoggingConfig.encode(message.stackdriverLoggingConfig, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 11, wireType 0 =*/88).int32(message.type);
                            if (message.stats != null && Object.hasOwnProperty.call(message, "stats"))
                                $root.google.cloud.tasks.v2beta3.QueueStats.encode(message.stats, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            if (message.httpTarget != null && Object.hasOwnProperty.call(message, "httpTarget"))
                                $root.google.cloud.tasks.v2beta3.HttpTarget.encode(message.httpTarget, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Queue message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.Queue.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IQueue} message Queue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Queue.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Queue message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.Queue} Queue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Queue.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.Queue();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.appEngineHttpQueue = $root.google.cloud.tasks.v2beta3.AppEngineHttpQueue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        message.httpTarget = $root.google.cloud.tasks.v2beta3.HttpTarget.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.rateLimits = $root.google.cloud.tasks.v2beta3.RateLimits.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.retryConfig = $root.google.cloud.tasks.v2beta3.RetryConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        message.purgeTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.taskTtl = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.tombstoneTtl = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.stackdriverLoggingConfig = $root.google.cloud.tasks.v2beta3.StackdriverLoggingConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                case 12: {
                                        message.stats = $root.google.cloud.tasks.v2beta3.QueueStats.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Queue message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.Queue} Queue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Queue.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Queue message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Queue.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.appEngineHttpQueue != null && message.hasOwnProperty("appEngineHttpQueue")) {
                                properties.queueType = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2beta3.AppEngineHttpQueue.verify(message.appEngineHttpQueue);
                                    if (error)
                                        return "appEngineHttpQueue." + error;
                                }
                            }
                            if (message.httpTarget != null && message.hasOwnProperty("httpTarget")) {
                                var error = $root.google.cloud.tasks.v2beta3.HttpTarget.verify(message.httpTarget);
                                if (error)
                                    return "httpTarget." + error;
                            }
                            if (message.rateLimits != null && message.hasOwnProperty("rateLimits")) {
                                var error = $root.google.cloud.tasks.v2beta3.RateLimits.verify(message.rateLimits);
                                if (error)
                                    return "rateLimits." + error;
                            }
                            if (message.retryConfig != null && message.hasOwnProperty("retryConfig")) {
                                var error = $root.google.cloud.tasks.v2beta3.RetryConfig.verify(message.retryConfig);
                                if (error)
                                    return "retryConfig." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.purgeTime != null && message.hasOwnProperty("purgeTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.purgeTime);
                                if (error)
                                    return "purgeTime." + error;
                            }
                            if (message.taskTtl != null && message.hasOwnProperty("taskTtl")) {
                                var error = $root.google.protobuf.Duration.verify(message.taskTtl);
                                if (error)
                                    return "taskTtl." + error;
                            }
                            if (message.tombstoneTtl != null && message.hasOwnProperty("tombstoneTtl")) {
                                var error = $root.google.protobuf.Duration.verify(message.tombstoneTtl);
                                if (error)
                                    return "tombstoneTtl." + error;
                            }
                            if (message.stackdriverLoggingConfig != null && message.hasOwnProperty("stackdriverLoggingConfig")) {
                                var error = $root.google.cloud.tasks.v2beta3.StackdriverLoggingConfig.verify(message.stackdriverLoggingConfig);
                                if (error)
                                    return "stackdriverLoggingConfig." + error;
                            }
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.stats != null && message.hasOwnProperty("stats")) {
                                var error = $root.google.cloud.tasks.v2beta3.QueueStats.verify(message.stats);
                                if (error)
                                    return "stats." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Queue message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.Queue} Queue
                         */
                        Queue.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.Queue)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.Queue();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.appEngineHttpQueue != null) {
                                if (typeof object.appEngineHttpQueue !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.Queue.appEngineHttpQueue: object expected");
                                message.appEngineHttpQueue = $root.google.cloud.tasks.v2beta3.AppEngineHttpQueue.fromObject(object.appEngineHttpQueue);
                            }
                            if (object.httpTarget != null) {
                                if (typeof object.httpTarget !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.Queue.httpTarget: object expected");
                                message.httpTarget = $root.google.cloud.tasks.v2beta3.HttpTarget.fromObject(object.httpTarget);
                            }
                            if (object.rateLimits != null) {
                                if (typeof object.rateLimits !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.Queue.rateLimits: object expected");
                                message.rateLimits = $root.google.cloud.tasks.v2beta3.RateLimits.fromObject(object.rateLimits);
                            }
                            if (object.retryConfig != null) {
                                if (typeof object.retryConfig !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.Queue.retryConfig: object expected");
                                message.retryConfig = $root.google.cloud.tasks.v2beta3.RetryConfig.fromObject(object.retryConfig);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "RUNNING":
                            case 1:
                                message.state = 1;
                                break;
                            case "PAUSED":
                            case 2:
                                message.state = 2;
                                break;
                            case "DISABLED":
                            case 3:
                                message.state = 3;
                                break;
                            }
                            if (object.purgeTime != null) {
                                if (typeof object.purgeTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.Queue.purgeTime: object expected");
                                message.purgeTime = $root.google.protobuf.Timestamp.fromObject(object.purgeTime);
                            }
                            if (object.taskTtl != null) {
                                if (typeof object.taskTtl !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.Queue.taskTtl: object expected");
                                message.taskTtl = $root.google.protobuf.Duration.fromObject(object.taskTtl);
                            }
                            if (object.tombstoneTtl != null) {
                                if (typeof object.tombstoneTtl !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.Queue.tombstoneTtl: object expected");
                                message.tombstoneTtl = $root.google.protobuf.Duration.fromObject(object.tombstoneTtl);
                            }
                            if (object.stackdriverLoggingConfig != null) {
                                if (typeof object.stackdriverLoggingConfig !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.Queue.stackdriverLoggingConfig: object expected");
                                message.stackdriverLoggingConfig = $root.google.cloud.tasks.v2beta3.StackdriverLoggingConfig.fromObject(object.stackdriverLoggingConfig);
                            }
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "PULL":
                            case 1:
                                message.type = 1;
                                break;
                            case "PUSH":
                            case 2:
                                message.type = 2;
                                break;
                            }
                            if (object.stats != null) {
                                if (typeof object.stats !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.Queue.stats: object expected");
                                message.stats = $root.google.cloud.tasks.v2beta3.QueueStats.fromObject(object.stats);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Queue message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @static
                         * @param {google.cloud.tasks.v2beta3.Queue} message Queue
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Queue.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.rateLimits = null;
                                object.retryConfig = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.purgeTime = null;
                                object.taskTtl = null;
                                object.tombstoneTtl = null;
                                object.stackdriverLoggingConfig = null;
                                object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                                object.stats = null;
                                object.httpTarget = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.appEngineHttpQueue != null && message.hasOwnProperty("appEngineHttpQueue")) {
                                object.appEngineHttpQueue = $root.google.cloud.tasks.v2beta3.AppEngineHttpQueue.toObject(message.appEngineHttpQueue, options);
                                if (options.oneofs)
                                    object.queueType = "appEngineHttpQueue";
                            }
                            if (message.rateLimits != null && message.hasOwnProperty("rateLimits"))
                                object.rateLimits = $root.google.cloud.tasks.v2beta3.RateLimits.toObject(message.rateLimits, options);
                            if (message.retryConfig != null && message.hasOwnProperty("retryConfig"))
                                object.retryConfig = $root.google.cloud.tasks.v2beta3.RetryConfig.toObject(message.retryConfig, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.tasks.v2beta3.Queue.State[message.state] === undefined ? message.state : $root.google.cloud.tasks.v2beta3.Queue.State[message.state] : message.state;
                            if (message.purgeTime != null && message.hasOwnProperty("purgeTime"))
                                object.purgeTime = $root.google.protobuf.Timestamp.toObject(message.purgeTime, options);
                            if (message.taskTtl != null && message.hasOwnProperty("taskTtl"))
                                object.taskTtl = $root.google.protobuf.Duration.toObject(message.taskTtl, options);
                            if (message.tombstoneTtl != null && message.hasOwnProperty("tombstoneTtl"))
                                object.tombstoneTtl = $root.google.protobuf.Duration.toObject(message.tombstoneTtl, options);
                            if (message.stackdriverLoggingConfig != null && message.hasOwnProperty("stackdriverLoggingConfig"))
                                object.stackdriverLoggingConfig = $root.google.cloud.tasks.v2beta3.StackdriverLoggingConfig.toObject(message.stackdriverLoggingConfig, options);
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.tasks.v2beta3.Queue.Type[message.type] === undefined ? message.type : $root.google.cloud.tasks.v2beta3.Queue.Type[message.type] : message.type;
                            if (message.stats != null && message.hasOwnProperty("stats"))
                                object.stats = $root.google.cloud.tasks.v2beta3.QueueStats.toObject(message.stats, options);
                            if (message.httpTarget != null && message.hasOwnProperty("httpTarget"))
                                object.httpTarget = $root.google.cloud.tasks.v2beta3.HttpTarget.toObject(message.httpTarget, options);
                            return object;
                        };
    
                        /**
                         * Converts this Queue to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Queue.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Queue
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Queue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.Queue";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.tasks.v2beta3.Queue.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} RUNNING=1 RUNNING value
                         * @property {number} PAUSED=2 PAUSED value
                         * @property {number} DISABLED=3 DISABLED value
                         */
                        Queue.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "RUNNING"] = 1;
                            values[valuesById[2] = "PAUSED"] = 2;
                            values[valuesById[3] = "DISABLED"] = 3;
                            return values;
                        })();
    
                        /**
                         * Type enum.
                         * @name google.cloud.tasks.v2beta3.Queue.Type
                         * @enum {number}
                         * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value
                         * @property {number} PULL=1 PULL value
                         * @property {number} PUSH=2 PUSH value
                         */
                        Queue.Type = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "PULL"] = 1;
                            values[valuesById[2] = "PUSH"] = 2;
                            return values;
                        })();
    
                        return Queue;
                    })();
    
                    v2beta3.RateLimits = (function() {
    
                        /**
                         * Properties of a RateLimits.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IRateLimits
                         * @property {number|null} [maxDispatchesPerSecond] RateLimits maxDispatchesPerSecond
                         * @property {number|null} [maxBurstSize] RateLimits maxBurstSize
                         * @property {number|null} [maxConcurrentDispatches] RateLimits maxConcurrentDispatches
                         */
    
                        /**
                         * Constructs a new RateLimits.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a RateLimits.
                         * @implements IRateLimits
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IRateLimits=} [properties] Properties to set
                         */
                        function RateLimits(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RateLimits maxDispatchesPerSecond.
                         * @member {number} maxDispatchesPerSecond
                         * @memberof google.cloud.tasks.v2beta3.RateLimits
                         * @instance
                         */
                        RateLimits.prototype.maxDispatchesPerSecond = 0;
    
                        /**
                         * RateLimits maxBurstSize.
                         * @member {number} maxBurstSize
                         * @memberof google.cloud.tasks.v2beta3.RateLimits
                         * @instance
                         */
                        RateLimits.prototype.maxBurstSize = 0;
    
                        /**
                         * RateLimits maxConcurrentDispatches.
                         * @member {number} maxConcurrentDispatches
                         * @memberof google.cloud.tasks.v2beta3.RateLimits
                         * @instance
                         */
                        RateLimits.prototype.maxConcurrentDispatches = 0;
    
                        /**
                         * Creates a new RateLimits instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.RateLimits
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IRateLimits=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.RateLimits} RateLimits instance
                         */
                        RateLimits.create = function create(properties) {
                            return new RateLimits(properties);
                        };
    
                        /**
                         * Encodes the specified RateLimits message. Does not implicitly {@link google.cloud.tasks.v2beta3.RateLimits.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.RateLimits
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IRateLimits} message RateLimits message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RateLimits.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.maxDispatchesPerSecond != null && Object.hasOwnProperty.call(message, "maxDispatchesPerSecond"))
                                writer.uint32(/* id 1, wireType 1 =*/9).double(message.maxDispatchesPerSecond);
                            if (message.maxBurstSize != null && Object.hasOwnProperty.call(message, "maxBurstSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.maxBurstSize);
                            if (message.maxConcurrentDispatches != null && Object.hasOwnProperty.call(message, "maxConcurrentDispatches"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.maxConcurrentDispatches);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RateLimits message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.RateLimits.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.RateLimits
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IRateLimits} message RateLimits message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RateLimits.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RateLimits message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.RateLimits
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.RateLimits} RateLimits
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RateLimits.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.RateLimits();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.maxDispatchesPerSecond = reader.double();
                                        break;
                                    }
                                case 2: {
                                        message.maxBurstSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.maxConcurrentDispatches = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RateLimits message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.RateLimits
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.RateLimits} RateLimits
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RateLimits.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RateLimits message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.RateLimits
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RateLimits.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.maxDispatchesPerSecond != null && message.hasOwnProperty("maxDispatchesPerSecond"))
                                if (typeof message.maxDispatchesPerSecond !== "number")
                                    return "maxDispatchesPerSecond: number expected";
                            if (message.maxBurstSize != null && message.hasOwnProperty("maxBurstSize"))
                                if (!$util.isInteger(message.maxBurstSize))
                                    return "maxBurstSize: integer expected";
                            if (message.maxConcurrentDispatches != null && message.hasOwnProperty("maxConcurrentDispatches"))
                                if (!$util.isInteger(message.maxConcurrentDispatches))
                                    return "maxConcurrentDispatches: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a RateLimits message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.RateLimits
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.RateLimits} RateLimits
                         */
                        RateLimits.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.RateLimits)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.RateLimits();
                            if (object.maxDispatchesPerSecond != null)
                                message.maxDispatchesPerSecond = Number(object.maxDispatchesPerSecond);
                            if (object.maxBurstSize != null)
                                message.maxBurstSize = object.maxBurstSize | 0;
                            if (object.maxConcurrentDispatches != null)
                                message.maxConcurrentDispatches = object.maxConcurrentDispatches | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RateLimits message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.RateLimits
                         * @static
                         * @param {google.cloud.tasks.v2beta3.RateLimits} message RateLimits
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RateLimits.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.maxDispatchesPerSecond = 0;
                                object.maxBurstSize = 0;
                                object.maxConcurrentDispatches = 0;
                            }
                            if (message.maxDispatchesPerSecond != null && message.hasOwnProperty("maxDispatchesPerSecond"))
                                object.maxDispatchesPerSecond = options.json && !isFinite(message.maxDispatchesPerSecond) ? String(message.maxDispatchesPerSecond) : message.maxDispatchesPerSecond;
                            if (message.maxBurstSize != null && message.hasOwnProperty("maxBurstSize"))
                                object.maxBurstSize = message.maxBurstSize;
                            if (message.maxConcurrentDispatches != null && message.hasOwnProperty("maxConcurrentDispatches"))
                                object.maxConcurrentDispatches = message.maxConcurrentDispatches;
                            return object;
                        };
    
                        /**
                         * Converts this RateLimits to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.RateLimits
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RateLimits.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RateLimits
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.RateLimits
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RateLimits.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.RateLimits";
                        };
    
                        return RateLimits;
                    })();
    
                    v2beta3.RetryConfig = (function() {
    
                        /**
                         * Properties of a RetryConfig.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IRetryConfig
                         * @property {number|null} [maxAttempts] RetryConfig maxAttempts
                         * @property {google.protobuf.IDuration|null} [maxRetryDuration] RetryConfig maxRetryDuration
                         * @property {google.protobuf.IDuration|null} [minBackoff] RetryConfig minBackoff
                         * @property {google.protobuf.IDuration|null} [maxBackoff] RetryConfig maxBackoff
                         * @property {number|null} [maxDoublings] RetryConfig maxDoublings
                         */
    
                        /**
                         * Constructs a new RetryConfig.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a RetryConfig.
                         * @implements IRetryConfig
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IRetryConfig=} [properties] Properties to set
                         */
                        function RetryConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RetryConfig maxAttempts.
                         * @member {number} maxAttempts
                         * @memberof google.cloud.tasks.v2beta3.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.maxAttempts = 0;
    
                        /**
                         * RetryConfig maxRetryDuration.
                         * @member {google.protobuf.IDuration|null|undefined} maxRetryDuration
                         * @memberof google.cloud.tasks.v2beta3.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.maxRetryDuration = null;
    
                        /**
                         * RetryConfig minBackoff.
                         * @member {google.protobuf.IDuration|null|undefined} minBackoff
                         * @memberof google.cloud.tasks.v2beta3.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.minBackoff = null;
    
                        /**
                         * RetryConfig maxBackoff.
                         * @member {google.protobuf.IDuration|null|undefined} maxBackoff
                         * @memberof google.cloud.tasks.v2beta3.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.maxBackoff = null;
    
                        /**
                         * RetryConfig maxDoublings.
                         * @member {number} maxDoublings
                         * @memberof google.cloud.tasks.v2beta3.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.maxDoublings = 0;
    
                        /**
                         * Creates a new RetryConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.RetryConfig
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IRetryConfig=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.RetryConfig} RetryConfig instance
                         */
                        RetryConfig.create = function create(properties) {
                            return new RetryConfig(properties);
                        };
    
                        /**
                         * Encodes the specified RetryConfig message. Does not implicitly {@link google.cloud.tasks.v2beta3.RetryConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.RetryConfig
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IRetryConfig} message RetryConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetryConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.maxAttempts != null && Object.hasOwnProperty.call(message, "maxAttempts"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.maxAttempts);
                            if (message.maxRetryDuration != null && Object.hasOwnProperty.call(message, "maxRetryDuration"))
                                $root.google.protobuf.Duration.encode(message.maxRetryDuration, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.minBackoff != null && Object.hasOwnProperty.call(message, "minBackoff"))
                                $root.google.protobuf.Duration.encode(message.minBackoff, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.maxBackoff != null && Object.hasOwnProperty.call(message, "maxBackoff"))
                                $root.google.protobuf.Duration.encode(message.maxBackoff, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.maxDoublings != null && Object.hasOwnProperty.call(message, "maxDoublings"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.maxDoublings);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RetryConfig message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.RetryConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.RetryConfig
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IRetryConfig} message RetryConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetryConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RetryConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.RetryConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.RetryConfig} RetryConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetryConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.RetryConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.maxAttempts = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.maxRetryDuration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.minBackoff = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.maxBackoff = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.maxDoublings = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RetryConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.RetryConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.RetryConfig} RetryConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetryConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RetryConfig message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.RetryConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RetryConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.maxAttempts != null && message.hasOwnProperty("maxAttempts"))
                                if (!$util.isInteger(message.maxAttempts))
                                    return "maxAttempts: integer expected";
                            if (message.maxRetryDuration != null && message.hasOwnProperty("maxRetryDuration")) {
                                var error = $root.google.protobuf.Duration.verify(message.maxRetryDuration);
                                if (error)
                                    return "maxRetryDuration." + error;
                            }
                            if (message.minBackoff != null && message.hasOwnProperty("minBackoff")) {
                                var error = $root.google.protobuf.Duration.verify(message.minBackoff);
                                if (error)
                                    return "minBackoff." + error;
                            }
                            if (message.maxBackoff != null && message.hasOwnProperty("maxBackoff")) {
                                var error = $root.google.protobuf.Duration.verify(message.maxBackoff);
                                if (error)
                                    return "maxBackoff." + error;
                            }
                            if (message.maxDoublings != null && message.hasOwnProperty("maxDoublings"))
                                if (!$util.isInteger(message.maxDoublings))
                                    return "maxDoublings: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a RetryConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.RetryConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.RetryConfig} RetryConfig
                         */
                        RetryConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.RetryConfig)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.RetryConfig();
                            if (object.maxAttempts != null)
                                message.maxAttempts = object.maxAttempts | 0;
                            if (object.maxRetryDuration != null) {
                                if (typeof object.maxRetryDuration !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.RetryConfig.maxRetryDuration: object expected");
                                message.maxRetryDuration = $root.google.protobuf.Duration.fromObject(object.maxRetryDuration);
                            }
                            if (object.minBackoff != null) {
                                if (typeof object.minBackoff !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.RetryConfig.minBackoff: object expected");
                                message.minBackoff = $root.google.protobuf.Duration.fromObject(object.minBackoff);
                            }
                            if (object.maxBackoff != null) {
                                if (typeof object.maxBackoff !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.RetryConfig.maxBackoff: object expected");
                                message.maxBackoff = $root.google.protobuf.Duration.fromObject(object.maxBackoff);
                            }
                            if (object.maxDoublings != null)
                                message.maxDoublings = object.maxDoublings | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RetryConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.RetryConfig
                         * @static
                         * @param {google.cloud.tasks.v2beta3.RetryConfig} message RetryConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RetryConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.maxAttempts = 0;
                                object.maxRetryDuration = null;
                                object.minBackoff = null;
                                object.maxBackoff = null;
                                object.maxDoublings = 0;
                            }
                            if (message.maxAttempts != null && message.hasOwnProperty("maxAttempts"))
                                object.maxAttempts = message.maxAttempts;
                            if (message.maxRetryDuration != null && message.hasOwnProperty("maxRetryDuration"))
                                object.maxRetryDuration = $root.google.protobuf.Duration.toObject(message.maxRetryDuration, options);
                            if (message.minBackoff != null && message.hasOwnProperty("minBackoff"))
                                object.minBackoff = $root.google.protobuf.Duration.toObject(message.minBackoff, options);
                            if (message.maxBackoff != null && message.hasOwnProperty("maxBackoff"))
                                object.maxBackoff = $root.google.protobuf.Duration.toObject(message.maxBackoff, options);
                            if (message.maxDoublings != null && message.hasOwnProperty("maxDoublings"))
                                object.maxDoublings = message.maxDoublings;
                            return object;
                        };
    
                        /**
                         * Converts this RetryConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.RetryConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RetryConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RetryConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.RetryConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RetryConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.RetryConfig";
                        };
    
                        return RetryConfig;
                    })();
    
                    v2beta3.StackdriverLoggingConfig = (function() {
    
                        /**
                         * Properties of a StackdriverLoggingConfig.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IStackdriverLoggingConfig
                         * @property {number|null} [samplingRatio] StackdriverLoggingConfig samplingRatio
                         */
    
                        /**
                         * Constructs a new StackdriverLoggingConfig.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a StackdriverLoggingConfig.
                         * @implements IStackdriverLoggingConfig
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IStackdriverLoggingConfig=} [properties] Properties to set
                         */
                        function StackdriverLoggingConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StackdriverLoggingConfig samplingRatio.
                         * @member {number} samplingRatio
                         * @memberof google.cloud.tasks.v2beta3.StackdriverLoggingConfig
                         * @instance
                         */
                        StackdriverLoggingConfig.prototype.samplingRatio = 0;
    
                        /**
                         * Creates a new StackdriverLoggingConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.StackdriverLoggingConfig
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IStackdriverLoggingConfig=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.StackdriverLoggingConfig} StackdriverLoggingConfig instance
                         */
                        StackdriverLoggingConfig.create = function create(properties) {
                            return new StackdriverLoggingConfig(properties);
                        };
    
                        /**
                         * Encodes the specified StackdriverLoggingConfig message. Does not implicitly {@link google.cloud.tasks.v2beta3.StackdriverLoggingConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.StackdriverLoggingConfig
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IStackdriverLoggingConfig} message StackdriverLoggingConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StackdriverLoggingConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.samplingRatio != null && Object.hasOwnProperty.call(message, "samplingRatio"))
                                writer.uint32(/* id 1, wireType 1 =*/9).double(message.samplingRatio);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StackdriverLoggingConfig message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.StackdriverLoggingConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.StackdriverLoggingConfig
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IStackdriverLoggingConfig} message StackdriverLoggingConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StackdriverLoggingConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StackdriverLoggingConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.StackdriverLoggingConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.StackdriverLoggingConfig} StackdriverLoggingConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StackdriverLoggingConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.StackdriverLoggingConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.samplingRatio = reader.double();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StackdriverLoggingConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.StackdriverLoggingConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.StackdriverLoggingConfig} StackdriverLoggingConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StackdriverLoggingConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StackdriverLoggingConfig message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.StackdriverLoggingConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StackdriverLoggingConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.samplingRatio != null && message.hasOwnProperty("samplingRatio"))
                                if (typeof message.samplingRatio !== "number")
                                    return "samplingRatio: number expected";
                            return null;
                        };
    
                        /**
                         * Creates a StackdriverLoggingConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.StackdriverLoggingConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.StackdriverLoggingConfig} StackdriverLoggingConfig
                         */
                        StackdriverLoggingConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.StackdriverLoggingConfig)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.StackdriverLoggingConfig();
                            if (object.samplingRatio != null)
                                message.samplingRatio = Number(object.samplingRatio);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StackdriverLoggingConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.StackdriverLoggingConfig
                         * @static
                         * @param {google.cloud.tasks.v2beta3.StackdriverLoggingConfig} message StackdriverLoggingConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StackdriverLoggingConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.samplingRatio = 0;
                            if (message.samplingRatio != null && message.hasOwnProperty("samplingRatio"))
                                object.samplingRatio = options.json && !isFinite(message.samplingRatio) ? String(message.samplingRatio) : message.samplingRatio;
                            return object;
                        };
    
                        /**
                         * Converts this StackdriverLoggingConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.StackdriverLoggingConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StackdriverLoggingConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StackdriverLoggingConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.StackdriverLoggingConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StackdriverLoggingConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.StackdriverLoggingConfig";
                        };
    
                        return StackdriverLoggingConfig;
                    })();
    
                    v2beta3.QueueStats = (function() {
    
                        /**
                         * Properties of a QueueStats.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IQueueStats
                         * @property {number|Long|null} [tasksCount] QueueStats tasksCount
                         * @property {google.protobuf.ITimestamp|null} [oldestEstimatedArrivalTime] QueueStats oldestEstimatedArrivalTime
                         * @property {number|Long|null} [executedLastMinuteCount] QueueStats executedLastMinuteCount
                         * @property {number|Long|null} [concurrentDispatchesCount] QueueStats concurrentDispatchesCount
                         * @property {number|null} [effectiveExecutionRate] QueueStats effectiveExecutionRate
                         */
    
                        /**
                         * Constructs a new QueueStats.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a QueueStats.
                         * @implements IQueueStats
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IQueueStats=} [properties] Properties to set
                         */
                        function QueueStats(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * QueueStats tasksCount.
                         * @member {number|Long} tasksCount
                         * @memberof google.cloud.tasks.v2beta3.QueueStats
                         * @instance
                         */
                        QueueStats.prototype.tasksCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * QueueStats oldestEstimatedArrivalTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} oldestEstimatedArrivalTime
                         * @memberof google.cloud.tasks.v2beta3.QueueStats
                         * @instance
                         */
                        QueueStats.prototype.oldestEstimatedArrivalTime = null;
    
                        /**
                         * QueueStats executedLastMinuteCount.
                         * @member {number|Long} executedLastMinuteCount
                         * @memberof google.cloud.tasks.v2beta3.QueueStats
                         * @instance
                         */
                        QueueStats.prototype.executedLastMinuteCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * QueueStats concurrentDispatchesCount.
                         * @member {number|Long} concurrentDispatchesCount
                         * @memberof google.cloud.tasks.v2beta3.QueueStats
                         * @instance
                         */
                        QueueStats.prototype.concurrentDispatchesCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * QueueStats effectiveExecutionRate.
                         * @member {number} effectiveExecutionRate
                         * @memberof google.cloud.tasks.v2beta3.QueueStats
                         * @instance
                         */
                        QueueStats.prototype.effectiveExecutionRate = 0;
    
                        /**
                         * Creates a new QueueStats instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.QueueStats
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IQueueStats=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.QueueStats} QueueStats instance
                         */
                        QueueStats.create = function create(properties) {
                            return new QueueStats(properties);
                        };
    
                        /**
                         * Encodes the specified QueueStats message. Does not implicitly {@link google.cloud.tasks.v2beta3.QueueStats.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.QueueStats
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IQueueStats} message QueueStats message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QueueStats.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.tasksCount != null && Object.hasOwnProperty.call(message, "tasksCount"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.tasksCount);
                            if (message.oldestEstimatedArrivalTime != null && Object.hasOwnProperty.call(message, "oldestEstimatedArrivalTime"))
                                $root.google.protobuf.Timestamp.encode(message.oldestEstimatedArrivalTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.executedLastMinuteCount != null && Object.hasOwnProperty.call(message, "executedLastMinuteCount"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.executedLastMinuteCount);
                            if (message.concurrentDispatchesCount != null && Object.hasOwnProperty.call(message, "concurrentDispatchesCount"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int64(message.concurrentDispatchesCount);
                            if (message.effectiveExecutionRate != null && Object.hasOwnProperty.call(message, "effectiveExecutionRate"))
                                writer.uint32(/* id 5, wireType 1 =*/41).double(message.effectiveExecutionRate);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified QueueStats message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.QueueStats.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.QueueStats
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IQueueStats} message QueueStats message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QueueStats.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a QueueStats message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.QueueStats
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.QueueStats} QueueStats
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QueueStats.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.QueueStats();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.tasksCount = reader.int64();
                                        break;
                                    }
                                case 2: {
                                        message.oldestEstimatedArrivalTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.executedLastMinuteCount = reader.int64();
                                        break;
                                    }
                                case 4: {
                                        message.concurrentDispatchesCount = reader.int64();
                                        break;
                                    }
                                case 5: {
                                        message.effectiveExecutionRate = reader.double();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a QueueStats message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.QueueStats
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.QueueStats} QueueStats
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QueueStats.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a QueueStats message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.QueueStats
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        QueueStats.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.tasksCount != null && message.hasOwnProperty("tasksCount"))
                                if (!$util.isInteger(message.tasksCount) && !(message.tasksCount && $util.isInteger(message.tasksCount.low) && $util.isInteger(message.tasksCount.high)))
                                    return "tasksCount: integer|Long expected";
                            if (message.oldestEstimatedArrivalTime != null && message.hasOwnProperty("oldestEstimatedArrivalTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.oldestEstimatedArrivalTime);
                                if (error)
                                    return "oldestEstimatedArrivalTime." + error;
                            }
                            if (message.executedLastMinuteCount != null && message.hasOwnProperty("executedLastMinuteCount"))
                                if (!$util.isInteger(message.executedLastMinuteCount) && !(message.executedLastMinuteCount && $util.isInteger(message.executedLastMinuteCount.low) && $util.isInteger(message.executedLastMinuteCount.high)))
                                    return "executedLastMinuteCount: integer|Long expected";
                            if (message.concurrentDispatchesCount != null && message.hasOwnProperty("concurrentDispatchesCount"))
                                if (!$util.isInteger(message.concurrentDispatchesCount) && !(message.concurrentDispatchesCount && $util.isInteger(message.concurrentDispatchesCount.low) && $util.isInteger(message.concurrentDispatchesCount.high)))
                                    return "concurrentDispatchesCount: integer|Long expected";
                            if (message.effectiveExecutionRate != null && message.hasOwnProperty("effectiveExecutionRate"))
                                if (typeof message.effectiveExecutionRate !== "number")
                                    return "effectiveExecutionRate: number expected";
                            return null;
                        };
    
                        /**
                         * Creates a QueueStats message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.QueueStats
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.QueueStats} QueueStats
                         */
                        QueueStats.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.QueueStats)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.QueueStats();
                            if (object.tasksCount != null)
                                if ($util.Long)
                                    (message.tasksCount = $util.Long.fromValue(object.tasksCount)).unsigned = false;
                                else if (typeof object.tasksCount === "string")
                                    message.tasksCount = parseInt(object.tasksCount, 10);
                                else if (typeof object.tasksCount === "number")
                                    message.tasksCount = object.tasksCount;
                                else if (typeof object.tasksCount === "object")
                                    message.tasksCount = new $util.LongBits(object.tasksCount.low >>> 0, object.tasksCount.high >>> 0).toNumber();
                            if (object.oldestEstimatedArrivalTime != null) {
                                if (typeof object.oldestEstimatedArrivalTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.QueueStats.oldestEstimatedArrivalTime: object expected");
                                message.oldestEstimatedArrivalTime = $root.google.protobuf.Timestamp.fromObject(object.oldestEstimatedArrivalTime);
                            }
                            if (object.executedLastMinuteCount != null)
                                if ($util.Long)
                                    (message.executedLastMinuteCount = $util.Long.fromValue(object.executedLastMinuteCount)).unsigned = false;
                                else if (typeof object.executedLastMinuteCount === "string")
                                    message.executedLastMinuteCount = parseInt(object.executedLastMinuteCount, 10);
                                else if (typeof object.executedLastMinuteCount === "number")
                                    message.executedLastMinuteCount = object.executedLastMinuteCount;
                                else if (typeof object.executedLastMinuteCount === "object")
                                    message.executedLastMinuteCount = new $util.LongBits(object.executedLastMinuteCount.low >>> 0, object.executedLastMinuteCount.high >>> 0).toNumber();
                            if (object.concurrentDispatchesCount != null)
                                if ($util.Long)
                                    (message.concurrentDispatchesCount = $util.Long.fromValue(object.concurrentDispatchesCount)).unsigned = false;
                                else if (typeof object.concurrentDispatchesCount === "string")
                                    message.concurrentDispatchesCount = parseInt(object.concurrentDispatchesCount, 10);
                                else if (typeof object.concurrentDispatchesCount === "number")
                                    message.concurrentDispatchesCount = object.concurrentDispatchesCount;
                                else if (typeof object.concurrentDispatchesCount === "object")
                                    message.concurrentDispatchesCount = new $util.LongBits(object.concurrentDispatchesCount.low >>> 0, object.concurrentDispatchesCount.high >>> 0).toNumber();
                            if (object.effectiveExecutionRate != null)
                                message.effectiveExecutionRate = Number(object.effectiveExecutionRate);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a QueueStats message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.QueueStats
                         * @static
                         * @param {google.cloud.tasks.v2beta3.QueueStats} message QueueStats
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        QueueStats.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.tasksCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.tasksCount = options.longs === String ? "0" : 0;
                                object.oldestEstimatedArrivalTime = null;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.executedLastMinuteCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.executedLastMinuteCount = options.longs === String ? "0" : 0;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.concurrentDispatchesCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.concurrentDispatchesCount = options.longs === String ? "0" : 0;
                                object.effectiveExecutionRate = 0;
                            }
                            if (message.tasksCount != null && message.hasOwnProperty("tasksCount"))
                                if (typeof message.tasksCount === "number")
                                    object.tasksCount = options.longs === String ? String(message.tasksCount) : message.tasksCount;
                                else
                                    object.tasksCount = options.longs === String ? $util.Long.prototype.toString.call(message.tasksCount) : options.longs === Number ? new $util.LongBits(message.tasksCount.low >>> 0, message.tasksCount.high >>> 0).toNumber() : message.tasksCount;
                            if (message.oldestEstimatedArrivalTime != null && message.hasOwnProperty("oldestEstimatedArrivalTime"))
                                object.oldestEstimatedArrivalTime = $root.google.protobuf.Timestamp.toObject(message.oldestEstimatedArrivalTime, options);
                            if (message.executedLastMinuteCount != null && message.hasOwnProperty("executedLastMinuteCount"))
                                if (typeof message.executedLastMinuteCount === "number")
                                    object.executedLastMinuteCount = options.longs === String ? String(message.executedLastMinuteCount) : message.executedLastMinuteCount;
                                else
                                    object.executedLastMinuteCount = options.longs === String ? $util.Long.prototype.toString.call(message.executedLastMinuteCount) : options.longs === Number ? new $util.LongBits(message.executedLastMinuteCount.low >>> 0, message.executedLastMinuteCount.high >>> 0).toNumber() : message.executedLastMinuteCount;
                            if (message.concurrentDispatchesCount != null && message.hasOwnProperty("concurrentDispatchesCount"))
                                if (typeof message.concurrentDispatchesCount === "number")
                                    object.concurrentDispatchesCount = options.longs === String ? String(message.concurrentDispatchesCount) : message.concurrentDispatchesCount;
                                else
                                    object.concurrentDispatchesCount = options.longs === String ? $util.Long.prototype.toString.call(message.concurrentDispatchesCount) : options.longs === Number ? new $util.LongBits(message.concurrentDispatchesCount.low >>> 0, message.concurrentDispatchesCount.high >>> 0).toNumber() : message.concurrentDispatchesCount;
                            if (message.effectiveExecutionRate != null && message.hasOwnProperty("effectiveExecutionRate"))
                                object.effectiveExecutionRate = options.json && !isFinite(message.effectiveExecutionRate) ? String(message.effectiveExecutionRate) : message.effectiveExecutionRate;
                            return object;
                        };
    
                        /**
                         * Converts this QueueStats to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.QueueStats
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        QueueStats.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for QueueStats
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.QueueStats
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        QueueStats.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.QueueStats";
                        };
    
                        return QueueStats;
                    })();
    
                    v2beta3.PullMessage = (function() {
    
                        /**
                         * Properties of a PullMessage.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IPullMessage
                         * @property {Uint8Array|null} [payload] PullMessage payload
                         * @property {string|null} [tag] PullMessage tag
                         */
    
                        /**
                         * Constructs a new PullMessage.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a PullMessage.
                         * @implements IPullMessage
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IPullMessage=} [properties] Properties to set
                         */
                        function PullMessage(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PullMessage payload.
                         * @member {Uint8Array} payload
                         * @memberof google.cloud.tasks.v2beta3.PullMessage
                         * @instance
                         */
                        PullMessage.prototype.payload = $util.newBuffer([]);
    
                        /**
                         * PullMessage tag.
                         * @member {string} tag
                         * @memberof google.cloud.tasks.v2beta3.PullMessage
                         * @instance
                         */
                        PullMessage.prototype.tag = "";
    
                        /**
                         * Creates a new PullMessage instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.PullMessage
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IPullMessage=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.PullMessage} PullMessage instance
                         */
                        PullMessage.create = function create(properties) {
                            return new PullMessage(properties);
                        };
    
                        /**
                         * Encodes the specified PullMessage message. Does not implicitly {@link google.cloud.tasks.v2beta3.PullMessage.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.PullMessage
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IPullMessage} message PullMessage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PullMessage.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.payload != null && Object.hasOwnProperty.call(message, "payload"))
                                writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.payload);
                            if (message.tag != null && Object.hasOwnProperty.call(message, "tag"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.tag);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PullMessage message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.PullMessage.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.PullMessage
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IPullMessage} message PullMessage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PullMessage.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PullMessage message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.PullMessage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.PullMessage} PullMessage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PullMessage.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.PullMessage();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.payload = reader.bytes();
                                        break;
                                    }
                                case 2: {
                                        message.tag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PullMessage message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.PullMessage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.PullMessage} PullMessage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PullMessage.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PullMessage message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.PullMessage
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PullMessage.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.payload != null && message.hasOwnProperty("payload"))
                                if (!(message.payload && typeof message.payload.length === "number" || $util.isString(message.payload)))
                                    return "payload: buffer expected";
                            if (message.tag != null && message.hasOwnProperty("tag"))
                                if (!$util.isString(message.tag))
                                    return "tag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PullMessage message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.PullMessage
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.PullMessage} PullMessage
                         */
                        PullMessage.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.PullMessage)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.PullMessage();
                            if (object.payload != null)
                                if (typeof object.payload === "string")
                                    $util.base64.decode(object.payload, message.payload = $util.newBuffer($util.base64.length(object.payload)), 0);
                                else if (object.payload.length >= 0)
                                    message.payload = object.payload;
                            if (object.tag != null)
                                message.tag = String(object.tag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PullMessage message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.PullMessage
                         * @static
                         * @param {google.cloud.tasks.v2beta3.PullMessage} message PullMessage
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PullMessage.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                if (options.bytes === String)
                                    object.payload = "";
                                else {
                                    object.payload = [];
                                    if (options.bytes !== Array)
                                        object.payload = $util.newBuffer(object.payload);
                                }
                                object.tag = "";
                            }
                            if (message.payload != null && message.hasOwnProperty("payload"))
                                object.payload = options.bytes === String ? $util.base64.encode(message.payload, 0, message.payload.length) : options.bytes === Array ? Array.prototype.slice.call(message.payload) : message.payload;
                            if (message.tag != null && message.hasOwnProperty("tag"))
                                object.tag = message.tag;
                            return object;
                        };
    
                        /**
                         * Converts this PullMessage to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.PullMessage
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PullMessage.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PullMessage
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.PullMessage
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PullMessage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.PullMessage";
                        };
    
                        return PullMessage;
                    })();
    
                    v2beta3.PathOverride = (function() {
    
                        /**
                         * Properties of a PathOverride.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IPathOverride
                         * @property {string|null} [path] PathOverride path
                         */
    
                        /**
                         * Constructs a new PathOverride.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a PathOverride.
                         * @implements IPathOverride
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IPathOverride=} [properties] Properties to set
                         */
                        function PathOverride(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PathOverride path.
                         * @member {string} path
                         * @memberof google.cloud.tasks.v2beta3.PathOverride
                         * @instance
                         */
                        PathOverride.prototype.path = "";
    
                        /**
                         * Creates a new PathOverride instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.PathOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IPathOverride=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.PathOverride} PathOverride instance
                         */
                        PathOverride.create = function create(properties) {
                            return new PathOverride(properties);
                        };
    
                        /**
                         * Encodes the specified PathOverride message. Does not implicitly {@link google.cloud.tasks.v2beta3.PathOverride.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.PathOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IPathOverride} message PathOverride message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PathOverride.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.path);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PathOverride message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.PathOverride.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.PathOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IPathOverride} message PathOverride message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PathOverride.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PathOverride message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.PathOverride
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.PathOverride} PathOverride
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PathOverride.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.PathOverride();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.path = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PathOverride message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.PathOverride
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.PathOverride} PathOverride
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PathOverride.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PathOverride message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.PathOverride
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PathOverride.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.path != null && message.hasOwnProperty("path"))
                                if (!$util.isString(message.path))
                                    return "path: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PathOverride message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.PathOverride
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.PathOverride} PathOverride
                         */
                        PathOverride.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.PathOverride)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.PathOverride();
                            if (object.path != null)
                                message.path = String(object.path);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PathOverride message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.PathOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta3.PathOverride} message PathOverride
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PathOverride.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.path = "";
                            if (message.path != null && message.hasOwnProperty("path"))
                                object.path = message.path;
                            return object;
                        };
    
                        /**
                         * Converts this PathOverride to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.PathOverride
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PathOverride.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PathOverride
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.PathOverride
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PathOverride.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.PathOverride";
                        };
    
                        return PathOverride;
                    })();
    
                    v2beta3.QueryOverride = (function() {
    
                        /**
                         * Properties of a QueryOverride.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IQueryOverride
                         * @property {string|null} [queryParams] QueryOverride queryParams
                         */
    
                        /**
                         * Constructs a new QueryOverride.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a QueryOverride.
                         * @implements IQueryOverride
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IQueryOverride=} [properties] Properties to set
                         */
                        function QueryOverride(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * QueryOverride queryParams.
                         * @member {string} queryParams
                         * @memberof google.cloud.tasks.v2beta3.QueryOverride
                         * @instance
                         */
                        QueryOverride.prototype.queryParams = "";
    
                        /**
                         * Creates a new QueryOverride instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.QueryOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IQueryOverride=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.QueryOverride} QueryOverride instance
                         */
                        QueryOverride.create = function create(properties) {
                            return new QueryOverride(properties);
                        };
    
                        /**
                         * Encodes the specified QueryOverride message. Does not implicitly {@link google.cloud.tasks.v2beta3.QueryOverride.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.QueryOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IQueryOverride} message QueryOverride message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QueryOverride.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.queryParams != null && Object.hasOwnProperty.call(message, "queryParams"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.queryParams);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified QueryOverride message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.QueryOverride.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.QueryOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IQueryOverride} message QueryOverride message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QueryOverride.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a QueryOverride message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.QueryOverride
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.QueryOverride} QueryOverride
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QueryOverride.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.QueryOverride();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.queryParams = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a QueryOverride message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.QueryOverride
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.QueryOverride} QueryOverride
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QueryOverride.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a QueryOverride message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.QueryOverride
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        QueryOverride.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.queryParams != null && message.hasOwnProperty("queryParams"))
                                if (!$util.isString(message.queryParams))
                                    return "queryParams: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a QueryOverride message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.QueryOverride
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.QueryOverride} QueryOverride
                         */
                        QueryOverride.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.QueryOverride)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.QueryOverride();
                            if (object.queryParams != null)
                                message.queryParams = String(object.queryParams);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a QueryOverride message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.QueryOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta3.QueryOverride} message QueryOverride
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        QueryOverride.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.queryParams = "";
                            if (message.queryParams != null && message.hasOwnProperty("queryParams"))
                                object.queryParams = message.queryParams;
                            return object;
                        };
    
                        /**
                         * Converts this QueryOverride to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.QueryOverride
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        QueryOverride.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for QueryOverride
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.QueryOverride
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        QueryOverride.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.QueryOverride";
                        };
    
                        return QueryOverride;
                    })();
    
                    v2beta3.UriOverride = (function() {
    
                        /**
                         * Properties of an UriOverride.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IUriOverride
                         * @property {google.cloud.tasks.v2beta3.UriOverride.Scheme|null} [scheme] UriOverride scheme
                         * @property {string|null} [host] UriOverride host
                         * @property {number|Long|null} [port] UriOverride port
                         * @property {google.cloud.tasks.v2beta3.IPathOverride|null} [pathOverride] UriOverride pathOverride
                         * @property {google.cloud.tasks.v2beta3.IQueryOverride|null} [queryOverride] UriOverride queryOverride
                         * @property {google.cloud.tasks.v2beta3.UriOverride.UriOverrideEnforceMode|null} [uriOverrideEnforceMode] UriOverride uriOverrideEnforceMode
                         */
    
                        /**
                         * Constructs a new UriOverride.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents an UriOverride.
                         * @implements IUriOverride
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IUriOverride=} [properties] Properties to set
                         */
                        function UriOverride(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UriOverride scheme.
                         * @member {google.cloud.tasks.v2beta3.UriOverride.Scheme|null|undefined} scheme
                         * @memberof google.cloud.tasks.v2beta3.UriOverride
                         * @instance
                         */
                        UriOverride.prototype.scheme = null;
    
                        /**
                         * UriOverride host.
                         * @member {string|null|undefined} host
                         * @memberof google.cloud.tasks.v2beta3.UriOverride
                         * @instance
                         */
                        UriOverride.prototype.host = null;
    
                        /**
                         * UriOverride port.
                         * @member {number|Long|null|undefined} port
                         * @memberof google.cloud.tasks.v2beta3.UriOverride
                         * @instance
                         */
                        UriOverride.prototype.port = null;
    
                        /**
                         * UriOverride pathOverride.
                         * @member {google.cloud.tasks.v2beta3.IPathOverride|null|undefined} pathOverride
                         * @memberof google.cloud.tasks.v2beta3.UriOverride
                         * @instance
                         */
                        UriOverride.prototype.pathOverride = null;
    
                        /**
                         * UriOverride queryOverride.
                         * @member {google.cloud.tasks.v2beta3.IQueryOverride|null|undefined} queryOverride
                         * @memberof google.cloud.tasks.v2beta3.UriOverride
                         * @instance
                         */
                        UriOverride.prototype.queryOverride = null;
    
                        /**
                         * UriOverride uriOverrideEnforceMode.
                         * @member {google.cloud.tasks.v2beta3.UriOverride.UriOverrideEnforceMode} uriOverrideEnforceMode
                         * @memberof google.cloud.tasks.v2beta3.UriOverride
                         * @instance
                         */
                        UriOverride.prototype.uriOverrideEnforceMode = 0;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * UriOverride _scheme.
                         * @member {"scheme"|undefined} _scheme
                         * @memberof google.cloud.tasks.v2beta3.UriOverride
                         * @instance
                         */
                        Object.defineProperty(UriOverride.prototype, "_scheme", {
                            get: $util.oneOfGetter($oneOfFields = ["scheme"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * UriOverride _host.
                         * @member {"host"|undefined} _host
                         * @memberof google.cloud.tasks.v2beta3.UriOverride
                         * @instance
                         */
                        Object.defineProperty(UriOverride.prototype, "_host", {
                            get: $util.oneOfGetter($oneOfFields = ["host"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * UriOverride _port.
                         * @member {"port"|undefined} _port
                         * @memberof google.cloud.tasks.v2beta3.UriOverride
                         * @instance
                         */
                        Object.defineProperty(UriOverride.prototype, "_port", {
                            get: $util.oneOfGetter($oneOfFields = ["port"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new UriOverride instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.UriOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IUriOverride=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.UriOverride} UriOverride instance
                         */
                        UriOverride.create = function create(properties) {
                            return new UriOverride(properties);
                        };
    
                        /**
                         * Encodes the specified UriOverride message. Does not implicitly {@link google.cloud.tasks.v2beta3.UriOverride.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.UriOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IUriOverride} message UriOverride message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UriOverride.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.scheme != null && Object.hasOwnProperty.call(message, "scheme"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.scheme);
                            if (message.host != null && Object.hasOwnProperty.call(message, "host"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.host);
                            if (message.port != null && Object.hasOwnProperty.call(message, "port"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.port);
                            if (message.pathOverride != null && Object.hasOwnProperty.call(message, "pathOverride"))
                                $root.google.cloud.tasks.v2beta3.PathOverride.encode(message.pathOverride, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.queryOverride != null && Object.hasOwnProperty.call(message, "queryOverride"))
                                $root.google.cloud.tasks.v2beta3.QueryOverride.encode(message.queryOverride, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.uriOverrideEnforceMode != null && Object.hasOwnProperty.call(message, "uriOverrideEnforceMode"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.uriOverrideEnforceMode);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UriOverride message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.UriOverride.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.UriOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IUriOverride} message UriOverride message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UriOverride.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UriOverride message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.UriOverride
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.UriOverride} UriOverride
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UriOverride.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.UriOverride();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.scheme = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.host = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.port = reader.int64();
                                        break;
                                    }
                                case 4: {
                                        message.pathOverride = $root.google.cloud.tasks.v2beta3.PathOverride.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.queryOverride = $root.google.cloud.tasks.v2beta3.QueryOverride.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.uriOverrideEnforceMode = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UriOverride message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.UriOverride
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.UriOverride} UriOverride
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UriOverride.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UriOverride message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.UriOverride
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UriOverride.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.scheme != null && message.hasOwnProperty("scheme")) {
                                properties._scheme = 1;
                                switch (message.scheme) {
                                default:
                                    return "scheme: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            }
                            if (message.host != null && message.hasOwnProperty("host")) {
                                properties._host = 1;
                                if (!$util.isString(message.host))
                                    return "host: string expected";
                            }
                            if (message.port != null && message.hasOwnProperty("port")) {
                                properties._port = 1;
                                if (!$util.isInteger(message.port) && !(message.port && $util.isInteger(message.port.low) && $util.isInteger(message.port.high)))
                                    return "port: integer|Long expected";
                            }
                            if (message.pathOverride != null && message.hasOwnProperty("pathOverride")) {
                                var error = $root.google.cloud.tasks.v2beta3.PathOverride.verify(message.pathOverride);
                                if (error)
                                    return "pathOverride." + error;
                            }
                            if (message.queryOverride != null && message.hasOwnProperty("queryOverride")) {
                                var error = $root.google.cloud.tasks.v2beta3.QueryOverride.verify(message.queryOverride);
                                if (error)
                                    return "queryOverride." + error;
                            }
                            if (message.uriOverrideEnforceMode != null && message.hasOwnProperty("uriOverrideEnforceMode"))
                                switch (message.uriOverrideEnforceMode) {
                                default:
                                    return "uriOverrideEnforceMode: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates an UriOverride message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.UriOverride
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.UriOverride} UriOverride
                         */
                        UriOverride.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.UriOverride)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.UriOverride();
                            switch (object.scheme) {
                            default:
                                if (typeof object.scheme === "number") {
                                    message.scheme = object.scheme;
                                    break;
                                }
                                break;
                            case "SCHEME_UNSPECIFIED":
                            case 0:
                                message.scheme = 0;
                                break;
                            case "HTTP":
                            case 1:
                                message.scheme = 1;
                                break;
                            case "HTTPS":
                            case 2:
                                message.scheme = 2;
                                break;
                            }
                            if (object.host != null)
                                message.host = String(object.host);
                            if (object.port != null)
                                if ($util.Long)
                                    (message.port = $util.Long.fromValue(object.port)).unsigned = false;
                                else if (typeof object.port === "string")
                                    message.port = parseInt(object.port, 10);
                                else if (typeof object.port === "number")
                                    message.port = object.port;
                                else if (typeof object.port === "object")
                                    message.port = new $util.LongBits(object.port.low >>> 0, object.port.high >>> 0).toNumber();
                            if (object.pathOverride != null) {
                                if (typeof object.pathOverride !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.UriOverride.pathOverride: object expected");
                                message.pathOverride = $root.google.cloud.tasks.v2beta3.PathOverride.fromObject(object.pathOverride);
                            }
                            if (object.queryOverride != null) {
                                if (typeof object.queryOverride !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.UriOverride.queryOverride: object expected");
                                message.queryOverride = $root.google.cloud.tasks.v2beta3.QueryOverride.fromObject(object.queryOverride);
                            }
                            switch (object.uriOverrideEnforceMode) {
                            default:
                                if (typeof object.uriOverrideEnforceMode === "number") {
                                    message.uriOverrideEnforceMode = object.uriOverrideEnforceMode;
                                    break;
                                }
                                break;
                            case "URI_OVERRIDE_ENFORCE_MODE_UNSPECIFIED":
                            case 0:
                                message.uriOverrideEnforceMode = 0;
                                break;
                            case "IF_NOT_EXISTS":
                            case 1:
                                message.uriOverrideEnforceMode = 1;
                                break;
                            case "ALWAYS":
                            case 2:
                                message.uriOverrideEnforceMode = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UriOverride message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.UriOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta3.UriOverride} message UriOverride
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UriOverride.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.pathOverride = null;
                                object.queryOverride = null;
                                object.uriOverrideEnforceMode = options.enums === String ? "URI_OVERRIDE_ENFORCE_MODE_UNSPECIFIED" : 0;
                            }
                            if (message.scheme != null && message.hasOwnProperty("scheme")) {
                                object.scheme = options.enums === String ? $root.google.cloud.tasks.v2beta3.UriOverride.Scheme[message.scheme] === undefined ? message.scheme : $root.google.cloud.tasks.v2beta3.UriOverride.Scheme[message.scheme] : message.scheme;
                                if (options.oneofs)
                                    object._scheme = "scheme";
                            }
                            if (message.host != null && message.hasOwnProperty("host")) {
                                object.host = message.host;
                                if (options.oneofs)
                                    object._host = "host";
                            }
                            if (message.port != null && message.hasOwnProperty("port")) {
                                if (typeof message.port === "number")
                                    object.port = options.longs === String ? String(message.port) : message.port;
                                else
                                    object.port = options.longs === String ? $util.Long.prototype.toString.call(message.port) : options.longs === Number ? new $util.LongBits(message.port.low >>> 0, message.port.high >>> 0).toNumber() : message.port;
                                if (options.oneofs)
                                    object._port = "port";
                            }
                            if (message.pathOverride != null && message.hasOwnProperty("pathOverride"))
                                object.pathOverride = $root.google.cloud.tasks.v2beta3.PathOverride.toObject(message.pathOverride, options);
                            if (message.queryOverride != null && message.hasOwnProperty("queryOverride"))
                                object.queryOverride = $root.google.cloud.tasks.v2beta3.QueryOverride.toObject(message.queryOverride, options);
                            if (message.uriOverrideEnforceMode != null && message.hasOwnProperty("uriOverrideEnforceMode"))
                                object.uriOverrideEnforceMode = options.enums === String ? $root.google.cloud.tasks.v2beta3.UriOverride.UriOverrideEnforceMode[message.uriOverrideEnforceMode] === undefined ? message.uriOverrideEnforceMode : $root.google.cloud.tasks.v2beta3.UriOverride.UriOverrideEnforceMode[message.uriOverrideEnforceMode] : message.uriOverrideEnforceMode;
                            return object;
                        };
    
                        /**
                         * Converts this UriOverride to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.UriOverride
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UriOverride.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UriOverride
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.UriOverride
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UriOverride.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.UriOverride";
                        };
    
                        /**
                         * Scheme enum.
                         * @name google.cloud.tasks.v2beta3.UriOverride.Scheme
                         * @enum {number}
                         * @property {number} SCHEME_UNSPECIFIED=0 SCHEME_UNSPECIFIED value
                         * @property {number} HTTP=1 HTTP value
                         * @property {number} HTTPS=2 HTTPS value
                         */
                        UriOverride.Scheme = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "SCHEME_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "HTTP"] = 1;
                            values[valuesById[2] = "HTTPS"] = 2;
                            return values;
                        })();
    
                        /**
                         * UriOverrideEnforceMode enum.
                         * @name google.cloud.tasks.v2beta3.UriOverride.UriOverrideEnforceMode
                         * @enum {number}
                         * @property {number} URI_OVERRIDE_ENFORCE_MODE_UNSPECIFIED=0 URI_OVERRIDE_ENFORCE_MODE_UNSPECIFIED value
                         * @property {number} IF_NOT_EXISTS=1 IF_NOT_EXISTS value
                         * @property {number} ALWAYS=2 ALWAYS value
                         */
                        UriOverride.UriOverrideEnforceMode = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "URI_OVERRIDE_ENFORCE_MODE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "IF_NOT_EXISTS"] = 1;
                            values[valuesById[2] = "ALWAYS"] = 2;
                            return values;
                        })();
    
                        return UriOverride;
                    })();
    
                    v2beta3.HttpTarget = (function() {
    
                        /**
                         * Properties of a HttpTarget.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IHttpTarget
                         * @property {google.cloud.tasks.v2beta3.IUriOverride|null} [uriOverride] HttpTarget uriOverride
                         * @property {google.cloud.tasks.v2beta3.HttpMethod|null} [httpMethod] HttpTarget httpMethod
                         * @property {Array.<google.cloud.tasks.v2beta3.HttpTarget.IHeaderOverride>|null} [headerOverrides] HttpTarget headerOverrides
                         * @property {google.cloud.tasks.v2beta3.IOAuthToken|null} [oauthToken] HttpTarget oauthToken
                         * @property {google.cloud.tasks.v2beta3.IOidcToken|null} [oidcToken] HttpTarget oidcToken
                         */
    
                        /**
                         * Constructs a new HttpTarget.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a HttpTarget.
                         * @implements IHttpTarget
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IHttpTarget=} [properties] Properties to set
                         */
                        function HttpTarget(properties) {
                            this.headerOverrides = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * HttpTarget uriOverride.
                         * @member {google.cloud.tasks.v2beta3.IUriOverride|null|undefined} uriOverride
                         * @memberof google.cloud.tasks.v2beta3.HttpTarget
                         * @instance
                         */
                        HttpTarget.prototype.uriOverride = null;
    
                        /**
                         * HttpTarget httpMethod.
                         * @member {google.cloud.tasks.v2beta3.HttpMethod} httpMethod
                         * @memberof google.cloud.tasks.v2beta3.HttpTarget
                         * @instance
                         */
                        HttpTarget.prototype.httpMethod = 0;
    
                        /**
                         * HttpTarget headerOverrides.
                         * @member {Array.<google.cloud.tasks.v2beta3.HttpTarget.IHeaderOverride>} headerOverrides
                         * @memberof google.cloud.tasks.v2beta3.HttpTarget
                         * @instance
                         */
                        HttpTarget.prototype.headerOverrides = $util.emptyArray;
    
                        /**
                         * HttpTarget oauthToken.
                         * @member {google.cloud.tasks.v2beta3.IOAuthToken|null|undefined} oauthToken
                         * @memberof google.cloud.tasks.v2beta3.HttpTarget
                         * @instance
                         */
                        HttpTarget.prototype.oauthToken = null;
    
                        /**
                         * HttpTarget oidcToken.
                         * @member {google.cloud.tasks.v2beta3.IOidcToken|null|undefined} oidcToken
                         * @memberof google.cloud.tasks.v2beta3.HttpTarget
                         * @instance
                         */
                        HttpTarget.prototype.oidcToken = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * HttpTarget authorizationHeader.
                         * @member {"oauthToken"|"oidcToken"|undefined} authorizationHeader
                         * @memberof google.cloud.tasks.v2beta3.HttpTarget
                         * @instance
                         */
                        Object.defineProperty(HttpTarget.prototype, "authorizationHeader", {
                            get: $util.oneOfGetter($oneOfFields = ["oauthToken", "oidcToken"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new HttpTarget instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.HttpTarget
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IHttpTarget=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.HttpTarget} HttpTarget instance
                         */
                        HttpTarget.create = function create(properties) {
                            return new HttpTarget(properties);
                        };
    
                        /**
                         * Encodes the specified HttpTarget message. Does not implicitly {@link google.cloud.tasks.v2beta3.HttpTarget.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.HttpTarget
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IHttpTarget} message HttpTarget message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HttpTarget.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.uriOverride != null && Object.hasOwnProperty.call(message, "uriOverride"))
                                $root.google.cloud.tasks.v2beta3.UriOverride.encode(message.uriOverride, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.httpMethod != null && Object.hasOwnProperty.call(message, "httpMethod"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.httpMethod);
                            if (message.headerOverrides != null && message.headerOverrides.length)
                                for (var i = 0; i < message.headerOverrides.length; ++i)
                                    $root.google.cloud.tasks.v2beta3.HttpTarget.HeaderOverride.encode(message.headerOverrides[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.oauthToken != null && Object.hasOwnProperty.call(message, "oauthToken"))
                                $root.google.cloud.tasks.v2beta3.OAuthToken.encode(message.oauthToken, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.oidcToken != null && Object.hasOwnProperty.call(message, "oidcToken"))
                                $root.google.cloud.tasks.v2beta3.OidcToken.encode(message.oidcToken, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified HttpTarget message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.HttpTarget.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.HttpTarget
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IHttpTarget} message HttpTarget message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HttpTarget.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a HttpTarget message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.HttpTarget
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.HttpTarget} HttpTarget
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HttpTarget.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.HttpTarget();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.uriOverride = $root.google.cloud.tasks.v2beta3.UriOverride.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.httpMethod = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.headerOverrides && message.headerOverrides.length))
                                            message.headerOverrides = [];
                                        message.headerOverrides.push($root.google.cloud.tasks.v2beta3.HttpTarget.HeaderOverride.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 5: {
                                        message.oauthToken = $root.google.cloud.tasks.v2beta3.OAuthToken.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.oidcToken = $root.google.cloud.tasks.v2beta3.OidcToken.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a HttpTarget message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.HttpTarget
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.HttpTarget} HttpTarget
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HttpTarget.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a HttpTarget message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.HttpTarget
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        HttpTarget.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.uriOverride != null && message.hasOwnProperty("uriOverride")) {
                                var error = $root.google.cloud.tasks.v2beta3.UriOverride.verify(message.uriOverride);
                                if (error)
                                    return "uriOverride." + error;
                            }
                            if (message.httpMethod != null && message.hasOwnProperty("httpMethod"))
                                switch (message.httpMethod) {
                                default:
                                    return "httpMethod: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            if (message.headerOverrides != null && message.hasOwnProperty("headerOverrides")) {
                                if (!Array.isArray(message.headerOverrides))
                                    return "headerOverrides: array expected";
                                for (var i = 0; i < message.headerOverrides.length; ++i) {
                                    var error = $root.google.cloud.tasks.v2beta3.HttpTarget.HeaderOverride.verify(message.headerOverrides[i]);
                                    if (error)
                                        return "headerOverrides." + error;
                                }
                            }
                            if (message.oauthToken != null && message.hasOwnProperty("oauthToken")) {
                                properties.authorizationHeader = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2beta3.OAuthToken.verify(message.oauthToken);
                                    if (error)
                                        return "oauthToken." + error;
                                }
                            }
                            if (message.oidcToken != null && message.hasOwnProperty("oidcToken")) {
                                if (properties.authorizationHeader === 1)
                                    return "authorizationHeader: multiple values";
                                properties.authorizationHeader = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2beta3.OidcToken.verify(message.oidcToken);
                                    if (error)
                                        return "oidcToken." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a HttpTarget message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.HttpTarget
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.HttpTarget} HttpTarget
                         */
                        HttpTarget.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.HttpTarget)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.HttpTarget();
                            if (object.uriOverride != null) {
                                if (typeof object.uriOverride !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.HttpTarget.uriOverride: object expected");
                                message.uriOverride = $root.google.cloud.tasks.v2beta3.UriOverride.fromObject(object.uriOverride);
                            }
                            switch (object.httpMethod) {
                            default:
                                if (typeof object.httpMethod === "number") {
                                    message.httpMethod = object.httpMethod;
                                    break;
                                }
                                break;
                            case "HTTP_METHOD_UNSPECIFIED":
                            case 0:
                                message.httpMethod = 0;
                                break;
                            case "POST":
                            case 1:
                                message.httpMethod = 1;
                                break;
                            case "GET":
                            case 2:
                                message.httpMethod = 2;
                                break;
                            case "HEAD":
                            case 3:
                                message.httpMethod = 3;
                                break;
                            case "PUT":
                            case 4:
                                message.httpMethod = 4;
                                break;
                            case "DELETE":
                            case 5:
                                message.httpMethod = 5;
                                break;
                            case "PATCH":
                            case 6:
                                message.httpMethod = 6;
                                break;
                            case "OPTIONS":
                            case 7:
                                message.httpMethod = 7;
                                break;
                            }
                            if (object.headerOverrides) {
                                if (!Array.isArray(object.headerOverrides))
                                    throw TypeError(".google.cloud.tasks.v2beta3.HttpTarget.headerOverrides: array expected");
                                message.headerOverrides = [];
                                for (var i = 0; i < object.headerOverrides.length; ++i) {
                                    if (typeof object.headerOverrides[i] !== "object")
                                        throw TypeError(".google.cloud.tasks.v2beta3.HttpTarget.headerOverrides: object expected");
                                    message.headerOverrides[i] = $root.google.cloud.tasks.v2beta3.HttpTarget.HeaderOverride.fromObject(object.headerOverrides[i]);
                                }
                            }
                            if (object.oauthToken != null) {
                                if (typeof object.oauthToken !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.HttpTarget.oauthToken: object expected");
                                message.oauthToken = $root.google.cloud.tasks.v2beta3.OAuthToken.fromObject(object.oauthToken);
                            }
                            if (object.oidcToken != null) {
                                if (typeof object.oidcToken !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.HttpTarget.oidcToken: object expected");
                                message.oidcToken = $root.google.cloud.tasks.v2beta3.OidcToken.fromObject(object.oidcToken);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a HttpTarget message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.HttpTarget
                         * @static
                         * @param {google.cloud.tasks.v2beta3.HttpTarget} message HttpTarget
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        HttpTarget.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.headerOverrides = [];
                            if (options.defaults) {
                                object.uriOverride = null;
                                object.httpMethod = options.enums === String ? "HTTP_METHOD_UNSPECIFIED" : 0;
                            }
                            if (message.uriOverride != null && message.hasOwnProperty("uriOverride"))
                                object.uriOverride = $root.google.cloud.tasks.v2beta3.UriOverride.toObject(message.uriOverride, options);
                            if (message.httpMethod != null && message.hasOwnProperty("httpMethod"))
                                object.httpMethod = options.enums === String ? $root.google.cloud.tasks.v2beta3.HttpMethod[message.httpMethod] === undefined ? message.httpMethod : $root.google.cloud.tasks.v2beta3.HttpMethod[message.httpMethod] : message.httpMethod;
                            if (message.headerOverrides && message.headerOverrides.length) {
                                object.headerOverrides = [];
                                for (var j = 0; j < message.headerOverrides.length; ++j)
                                    object.headerOverrides[j] = $root.google.cloud.tasks.v2beta3.HttpTarget.HeaderOverride.toObject(message.headerOverrides[j], options);
                            }
                            if (message.oauthToken != null && message.hasOwnProperty("oauthToken")) {
                                object.oauthToken = $root.google.cloud.tasks.v2beta3.OAuthToken.toObject(message.oauthToken, options);
                                if (options.oneofs)
                                    object.authorizationHeader = "oauthToken";
                            }
                            if (message.oidcToken != null && message.hasOwnProperty("oidcToken")) {
                                object.oidcToken = $root.google.cloud.tasks.v2beta3.OidcToken.toObject(message.oidcToken, options);
                                if (options.oneofs)
                                    object.authorizationHeader = "oidcToken";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this HttpTarget to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.HttpTarget
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        HttpTarget.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for HttpTarget
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.HttpTarget
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        HttpTarget.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.HttpTarget";
                        };
    
                        HttpTarget.Header = (function() {
    
                            /**
                             * Properties of a Header.
                             * @memberof google.cloud.tasks.v2beta3.HttpTarget
                             * @interface IHeader
                             * @property {string|null} [key] Header key
                             * @property {string|null} [value] Header value
                             */
    
                            /**
                             * Constructs a new Header.
                             * @memberof google.cloud.tasks.v2beta3.HttpTarget
                             * @classdesc Represents a Header.
                             * @implements IHeader
                             * @constructor
                             * @param {google.cloud.tasks.v2beta3.HttpTarget.IHeader=} [properties] Properties to set
                             */
                            function Header(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Header key.
                             * @member {string} key
                             * @memberof google.cloud.tasks.v2beta3.HttpTarget.Header
                             * @instance
                             */
                            Header.prototype.key = "";
    
                            /**
                             * Header value.
                             * @member {string} value
                             * @memberof google.cloud.tasks.v2beta3.HttpTarget.Header
                             * @instance
                             */
                            Header.prototype.value = "";
    
                            /**
                             * Creates a new Header instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.tasks.v2beta3.HttpTarget.Header
                             * @static
                             * @param {google.cloud.tasks.v2beta3.HttpTarget.IHeader=} [properties] Properties to set
                             * @returns {google.cloud.tasks.v2beta3.HttpTarget.Header} Header instance
                             */
                            Header.create = function create(properties) {
                                return new Header(properties);
                            };
    
                            /**
                             * Encodes the specified Header message. Does not implicitly {@link google.cloud.tasks.v2beta3.HttpTarget.Header.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.tasks.v2beta3.HttpTarget.Header
                             * @static
                             * @param {google.cloud.tasks.v2beta3.HttpTarget.IHeader} message Header message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Header.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.key != null && Object.hasOwnProperty.call(message, "key"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);
                                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Header message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.HttpTarget.Header.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.tasks.v2beta3.HttpTarget.Header
                             * @static
                             * @param {google.cloud.tasks.v2beta3.HttpTarget.IHeader} message Header message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Header.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Header message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.tasks.v2beta3.HttpTarget.Header
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.tasks.v2beta3.HttpTarget.Header} Header
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Header.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.HttpTarget.Header();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.key = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.value = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Header message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.tasks.v2beta3.HttpTarget.Header
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.tasks.v2beta3.HttpTarget.Header} Header
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Header.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Header message.
                             * @function verify
                             * @memberof google.cloud.tasks.v2beta3.HttpTarget.Header
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Header.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.key != null && message.hasOwnProperty("key"))
                                    if (!$util.isString(message.key))
                                        return "key: string expected";
                                if (message.value != null && message.hasOwnProperty("value"))
                                    if (!$util.isString(message.value))
                                        return "value: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a Header message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.tasks.v2beta3.HttpTarget.Header
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.tasks.v2beta3.HttpTarget.Header} Header
                             */
                            Header.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.tasks.v2beta3.HttpTarget.Header)
                                    return object;
                                var message = new $root.google.cloud.tasks.v2beta3.HttpTarget.Header();
                                if (object.key != null)
                                    message.key = String(object.key);
                                if (object.value != null)
                                    message.value = String(object.value);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Header message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.tasks.v2beta3.HttpTarget.Header
                             * @static
                             * @param {google.cloud.tasks.v2beta3.HttpTarget.Header} message Header
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Header.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.key = "";
                                    object.value = "";
                                }
                                if (message.key != null && message.hasOwnProperty("key"))
                                    object.key = message.key;
                                if (message.value != null && message.hasOwnProperty("value"))
                                    object.value = message.value;
                                return object;
                            };
    
                            /**
                             * Converts this Header to JSON.
                             * @function toJSON
                             * @memberof google.cloud.tasks.v2beta3.HttpTarget.Header
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Header.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Header
                             * @function getTypeUrl
                             * @memberof google.cloud.tasks.v2beta3.HttpTarget.Header
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Header.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.tasks.v2beta3.HttpTarget.Header";
                            };
    
                            return Header;
                        })();
    
                        HttpTarget.HeaderOverride = (function() {
    
                            /**
                             * Properties of a HeaderOverride.
                             * @memberof google.cloud.tasks.v2beta3.HttpTarget
                             * @interface IHeaderOverride
                             * @property {google.cloud.tasks.v2beta3.HttpTarget.IHeader|null} [header] HeaderOverride header
                             */
    
                            /**
                             * Constructs a new HeaderOverride.
                             * @memberof google.cloud.tasks.v2beta3.HttpTarget
                             * @classdesc Represents a HeaderOverride.
                             * @implements IHeaderOverride
                             * @constructor
                             * @param {google.cloud.tasks.v2beta3.HttpTarget.IHeaderOverride=} [properties] Properties to set
                             */
                            function HeaderOverride(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * HeaderOverride header.
                             * @member {google.cloud.tasks.v2beta3.HttpTarget.IHeader|null|undefined} header
                             * @memberof google.cloud.tasks.v2beta3.HttpTarget.HeaderOverride
                             * @instance
                             */
                            HeaderOverride.prototype.header = null;
    
                            /**
                             * Creates a new HeaderOverride instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.tasks.v2beta3.HttpTarget.HeaderOverride
                             * @static
                             * @param {google.cloud.tasks.v2beta3.HttpTarget.IHeaderOverride=} [properties] Properties to set
                             * @returns {google.cloud.tasks.v2beta3.HttpTarget.HeaderOverride} HeaderOverride instance
                             */
                            HeaderOverride.create = function create(properties) {
                                return new HeaderOverride(properties);
                            };
    
                            /**
                             * Encodes the specified HeaderOverride message. Does not implicitly {@link google.cloud.tasks.v2beta3.HttpTarget.HeaderOverride.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.tasks.v2beta3.HttpTarget.HeaderOverride
                             * @static
                             * @param {google.cloud.tasks.v2beta3.HttpTarget.IHeaderOverride} message HeaderOverride message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HeaderOverride.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.header != null && Object.hasOwnProperty.call(message, "header"))
                                    $root.google.cloud.tasks.v2beta3.HttpTarget.Header.encode(message.header, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified HeaderOverride message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.HttpTarget.HeaderOverride.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.tasks.v2beta3.HttpTarget.HeaderOverride
                             * @static
                             * @param {google.cloud.tasks.v2beta3.HttpTarget.IHeaderOverride} message HeaderOverride message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HeaderOverride.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a HeaderOverride message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.tasks.v2beta3.HttpTarget.HeaderOverride
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.tasks.v2beta3.HttpTarget.HeaderOverride} HeaderOverride
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HeaderOverride.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.HttpTarget.HeaderOverride();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.header = $root.google.cloud.tasks.v2beta3.HttpTarget.Header.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a HeaderOverride message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.tasks.v2beta3.HttpTarget.HeaderOverride
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.tasks.v2beta3.HttpTarget.HeaderOverride} HeaderOverride
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HeaderOverride.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a HeaderOverride message.
                             * @function verify
                             * @memberof google.cloud.tasks.v2beta3.HttpTarget.HeaderOverride
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            HeaderOverride.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.header != null && message.hasOwnProperty("header")) {
                                    var error = $root.google.cloud.tasks.v2beta3.HttpTarget.Header.verify(message.header);
                                    if (error)
                                        return "header." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a HeaderOverride message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.tasks.v2beta3.HttpTarget.HeaderOverride
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.tasks.v2beta3.HttpTarget.HeaderOverride} HeaderOverride
                             */
                            HeaderOverride.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.tasks.v2beta3.HttpTarget.HeaderOverride)
                                    return object;
                                var message = new $root.google.cloud.tasks.v2beta3.HttpTarget.HeaderOverride();
                                if (object.header != null) {
                                    if (typeof object.header !== "object")
                                        throw TypeError(".google.cloud.tasks.v2beta3.HttpTarget.HeaderOverride.header: object expected");
                                    message.header = $root.google.cloud.tasks.v2beta3.HttpTarget.Header.fromObject(object.header);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a HeaderOverride message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.tasks.v2beta3.HttpTarget.HeaderOverride
                             * @static
                             * @param {google.cloud.tasks.v2beta3.HttpTarget.HeaderOverride} message HeaderOverride
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            HeaderOverride.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.header = null;
                                if (message.header != null && message.hasOwnProperty("header"))
                                    object.header = $root.google.cloud.tasks.v2beta3.HttpTarget.Header.toObject(message.header, options);
                                return object;
                            };
    
                            /**
                             * Converts this HeaderOverride to JSON.
                             * @function toJSON
                             * @memberof google.cloud.tasks.v2beta3.HttpTarget.HeaderOverride
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            HeaderOverride.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for HeaderOverride
                             * @function getTypeUrl
                             * @memberof google.cloud.tasks.v2beta3.HttpTarget.HeaderOverride
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            HeaderOverride.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.tasks.v2beta3.HttpTarget.HeaderOverride";
                            };
    
                            return HeaderOverride;
                        })();
    
                        return HttpTarget;
                    })();
    
                    v2beta3.HttpRequest = (function() {
    
                        /**
                         * Properties of a HttpRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IHttpRequest
                         * @property {string|null} [url] HttpRequest url
                         * @property {google.cloud.tasks.v2beta3.HttpMethod|null} [httpMethod] HttpRequest httpMethod
                         * @property {Object.<string,string>|null} [headers] HttpRequest headers
                         * @property {Uint8Array|null} [body] HttpRequest body
                         * @property {google.cloud.tasks.v2beta3.IOAuthToken|null} [oauthToken] HttpRequest oauthToken
                         * @property {google.cloud.tasks.v2beta3.IOidcToken|null} [oidcToken] HttpRequest oidcToken
                         */
    
                        /**
                         * Constructs a new HttpRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a HttpRequest.
                         * @implements IHttpRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IHttpRequest=} [properties] Properties to set
                         */
                        function HttpRequest(properties) {
                            this.headers = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * HttpRequest url.
                         * @member {string} url
                         * @memberof google.cloud.tasks.v2beta3.HttpRequest
                         * @instance
                         */
                        HttpRequest.prototype.url = "";
    
                        /**
                         * HttpRequest httpMethod.
                         * @member {google.cloud.tasks.v2beta3.HttpMethod} httpMethod
                         * @memberof google.cloud.tasks.v2beta3.HttpRequest
                         * @instance
                         */
                        HttpRequest.prototype.httpMethod = 0;
    
                        /**
                         * HttpRequest headers.
                         * @member {Object.<string,string>} headers
                         * @memberof google.cloud.tasks.v2beta3.HttpRequest
                         * @instance
                         */
                        HttpRequest.prototype.headers = $util.emptyObject;
    
                        /**
                         * HttpRequest body.
                         * @member {Uint8Array} body
                         * @memberof google.cloud.tasks.v2beta3.HttpRequest
                         * @instance
                         */
                        HttpRequest.prototype.body = $util.newBuffer([]);
    
                        /**
                         * HttpRequest oauthToken.
                         * @member {google.cloud.tasks.v2beta3.IOAuthToken|null|undefined} oauthToken
                         * @memberof google.cloud.tasks.v2beta3.HttpRequest
                         * @instance
                         */
                        HttpRequest.prototype.oauthToken = null;
    
                        /**
                         * HttpRequest oidcToken.
                         * @member {google.cloud.tasks.v2beta3.IOidcToken|null|undefined} oidcToken
                         * @memberof google.cloud.tasks.v2beta3.HttpRequest
                         * @instance
                         */
                        HttpRequest.prototype.oidcToken = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * HttpRequest authorizationHeader.
                         * @member {"oauthToken"|"oidcToken"|undefined} authorizationHeader
                         * @memberof google.cloud.tasks.v2beta3.HttpRequest
                         * @instance
                         */
                        Object.defineProperty(HttpRequest.prototype, "authorizationHeader", {
                            get: $util.oneOfGetter($oneOfFields = ["oauthToken", "oidcToken"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new HttpRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.HttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IHttpRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.HttpRequest} HttpRequest instance
                         */
                        HttpRequest.create = function create(properties) {
                            return new HttpRequest(properties);
                        };
    
                        /**
                         * Encodes the specified HttpRequest message. Does not implicitly {@link google.cloud.tasks.v2beta3.HttpRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.HttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IHttpRequest} message HttpRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HttpRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.url != null && Object.hasOwnProperty.call(message, "url"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.url);
                            if (message.httpMethod != null && Object.hasOwnProperty.call(message, "httpMethod"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.httpMethod);
                            if (message.headers != null && Object.hasOwnProperty.call(message, "headers"))
                                for (var keys = Object.keys(message.headers), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.headers[keys[i]]).ldelim();
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.body);
                            if (message.oauthToken != null && Object.hasOwnProperty.call(message, "oauthToken"))
                                $root.google.cloud.tasks.v2beta3.OAuthToken.encode(message.oauthToken, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.oidcToken != null && Object.hasOwnProperty.call(message, "oidcToken"))
                                $root.google.cloud.tasks.v2beta3.OidcToken.encode(message.oidcToken, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified HttpRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.HttpRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.HttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IHttpRequest} message HttpRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HttpRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a HttpRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.HttpRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.HttpRequest} HttpRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HttpRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.HttpRequest(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.url = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.httpMethod = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        if (message.headers === $util.emptyObject)
                                            message.headers = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.headers[key] = value;
                                        break;
                                    }
                                case 4: {
                                        message.body = reader.bytes();
                                        break;
                                    }
                                case 5: {
                                        message.oauthToken = $root.google.cloud.tasks.v2beta3.OAuthToken.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.oidcToken = $root.google.cloud.tasks.v2beta3.OidcToken.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a HttpRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.HttpRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.HttpRequest} HttpRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HttpRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a HttpRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.HttpRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        HttpRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.url != null && message.hasOwnProperty("url"))
                                if (!$util.isString(message.url))
                                    return "url: string expected";
                            if (message.httpMethod != null && message.hasOwnProperty("httpMethod"))
                                switch (message.httpMethod) {
                                default:
                                    return "httpMethod: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            if (message.headers != null && message.hasOwnProperty("headers")) {
                                if (!$util.isObject(message.headers))
                                    return "headers: object expected";
                                var key = Object.keys(message.headers);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.headers[key[i]]))
                                        return "headers: string{k:string} expected";
                            }
                            if (message.body != null && message.hasOwnProperty("body"))
                                if (!(message.body && typeof message.body.length === "number" || $util.isString(message.body)))
                                    return "body: buffer expected";
                            if (message.oauthToken != null && message.hasOwnProperty("oauthToken")) {
                                properties.authorizationHeader = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2beta3.OAuthToken.verify(message.oauthToken);
                                    if (error)
                                        return "oauthToken." + error;
                                }
                            }
                            if (message.oidcToken != null && message.hasOwnProperty("oidcToken")) {
                                if (properties.authorizationHeader === 1)
                                    return "authorizationHeader: multiple values";
                                properties.authorizationHeader = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2beta3.OidcToken.verify(message.oidcToken);
                                    if (error)
                                        return "oidcToken." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a HttpRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.HttpRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.HttpRequest} HttpRequest
                         */
                        HttpRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.HttpRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.HttpRequest();
                            if (object.url != null)
                                message.url = String(object.url);
                            switch (object.httpMethod) {
                            default:
                                if (typeof object.httpMethod === "number") {
                                    message.httpMethod = object.httpMethod;
                                    break;
                                }
                                break;
                            case "HTTP_METHOD_UNSPECIFIED":
                            case 0:
                                message.httpMethod = 0;
                                break;
                            case "POST":
                            case 1:
                                message.httpMethod = 1;
                                break;
                            case "GET":
                            case 2:
                                message.httpMethod = 2;
                                break;
                            case "HEAD":
                            case 3:
                                message.httpMethod = 3;
                                break;
                            case "PUT":
                            case 4:
                                message.httpMethod = 4;
                                break;
                            case "DELETE":
                            case 5:
                                message.httpMethod = 5;
                                break;
                            case "PATCH":
                            case 6:
                                message.httpMethod = 6;
                                break;
                            case "OPTIONS":
                            case 7:
                                message.httpMethod = 7;
                                break;
                            }
                            if (object.headers) {
                                if (typeof object.headers !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.HttpRequest.headers: object expected");
                                message.headers = {};
                                for (var keys = Object.keys(object.headers), i = 0; i < keys.length; ++i)
                                    message.headers[keys[i]] = String(object.headers[keys[i]]);
                            }
                            if (object.body != null)
                                if (typeof object.body === "string")
                                    $util.base64.decode(object.body, message.body = $util.newBuffer($util.base64.length(object.body)), 0);
                                else if (object.body.length >= 0)
                                    message.body = object.body;
                            if (object.oauthToken != null) {
                                if (typeof object.oauthToken !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.HttpRequest.oauthToken: object expected");
                                message.oauthToken = $root.google.cloud.tasks.v2beta3.OAuthToken.fromObject(object.oauthToken);
                            }
                            if (object.oidcToken != null) {
                                if (typeof object.oidcToken !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.HttpRequest.oidcToken: object expected");
                                message.oidcToken = $root.google.cloud.tasks.v2beta3.OidcToken.fromObject(object.oidcToken);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a HttpRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.HttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.HttpRequest} message HttpRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        HttpRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.headers = {};
                            if (options.defaults) {
                                object.url = "";
                                object.httpMethod = options.enums === String ? "HTTP_METHOD_UNSPECIFIED" : 0;
                                if (options.bytes === String)
                                    object.body = "";
                                else {
                                    object.body = [];
                                    if (options.bytes !== Array)
                                        object.body = $util.newBuffer(object.body);
                                }
                            }
                            if (message.url != null && message.hasOwnProperty("url"))
                                object.url = message.url;
                            if (message.httpMethod != null && message.hasOwnProperty("httpMethod"))
                                object.httpMethod = options.enums === String ? $root.google.cloud.tasks.v2beta3.HttpMethod[message.httpMethod] === undefined ? message.httpMethod : $root.google.cloud.tasks.v2beta3.HttpMethod[message.httpMethod] : message.httpMethod;
                            var keys2;
                            if (message.headers && (keys2 = Object.keys(message.headers)).length) {
                                object.headers = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.headers[keys2[j]] = message.headers[keys2[j]];
                            }
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = options.bytes === String ? $util.base64.encode(message.body, 0, message.body.length) : options.bytes === Array ? Array.prototype.slice.call(message.body) : message.body;
                            if (message.oauthToken != null && message.hasOwnProperty("oauthToken")) {
                                object.oauthToken = $root.google.cloud.tasks.v2beta3.OAuthToken.toObject(message.oauthToken, options);
                                if (options.oneofs)
                                    object.authorizationHeader = "oauthToken";
                            }
                            if (message.oidcToken != null && message.hasOwnProperty("oidcToken")) {
                                object.oidcToken = $root.google.cloud.tasks.v2beta3.OidcToken.toObject(message.oidcToken, options);
                                if (options.oneofs)
                                    object.authorizationHeader = "oidcToken";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this HttpRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.HttpRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        HttpRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for HttpRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.HttpRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        HttpRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.HttpRequest";
                        };
    
                        return HttpRequest;
                    })();
    
                    v2beta3.AppEngineHttpQueue = (function() {
    
                        /**
                         * Properties of an AppEngineHttpQueue.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IAppEngineHttpQueue
                         * @property {google.cloud.tasks.v2beta3.IAppEngineRouting|null} [appEngineRoutingOverride] AppEngineHttpQueue appEngineRoutingOverride
                         */
    
                        /**
                         * Constructs a new AppEngineHttpQueue.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents an AppEngineHttpQueue.
                         * @implements IAppEngineHttpQueue
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IAppEngineHttpQueue=} [properties] Properties to set
                         */
                        function AppEngineHttpQueue(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AppEngineHttpQueue appEngineRoutingOverride.
                         * @member {google.cloud.tasks.v2beta3.IAppEngineRouting|null|undefined} appEngineRoutingOverride
                         * @memberof google.cloud.tasks.v2beta3.AppEngineHttpQueue
                         * @instance
                         */
                        AppEngineHttpQueue.prototype.appEngineRoutingOverride = null;
    
                        /**
                         * Creates a new AppEngineHttpQueue instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.AppEngineHttpQueue
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IAppEngineHttpQueue=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.AppEngineHttpQueue} AppEngineHttpQueue instance
                         */
                        AppEngineHttpQueue.create = function create(properties) {
                            return new AppEngineHttpQueue(properties);
                        };
    
                        /**
                         * Encodes the specified AppEngineHttpQueue message. Does not implicitly {@link google.cloud.tasks.v2beta3.AppEngineHttpQueue.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.AppEngineHttpQueue
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IAppEngineHttpQueue} message AppEngineHttpQueue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AppEngineHttpQueue.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.appEngineRoutingOverride != null && Object.hasOwnProperty.call(message, "appEngineRoutingOverride"))
                                $root.google.cloud.tasks.v2beta3.AppEngineRouting.encode(message.appEngineRoutingOverride, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AppEngineHttpQueue message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.AppEngineHttpQueue.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.AppEngineHttpQueue
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IAppEngineHttpQueue} message AppEngineHttpQueue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AppEngineHttpQueue.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AppEngineHttpQueue message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.AppEngineHttpQueue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.AppEngineHttpQueue} AppEngineHttpQueue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AppEngineHttpQueue.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.AppEngineHttpQueue();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.appEngineRoutingOverride = $root.google.cloud.tasks.v2beta3.AppEngineRouting.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AppEngineHttpQueue message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.AppEngineHttpQueue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.AppEngineHttpQueue} AppEngineHttpQueue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AppEngineHttpQueue.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AppEngineHttpQueue message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.AppEngineHttpQueue
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AppEngineHttpQueue.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.appEngineRoutingOverride != null && message.hasOwnProperty("appEngineRoutingOverride")) {
                                var error = $root.google.cloud.tasks.v2beta3.AppEngineRouting.verify(message.appEngineRoutingOverride);
                                if (error)
                                    return "appEngineRoutingOverride." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an AppEngineHttpQueue message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.AppEngineHttpQueue
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.AppEngineHttpQueue} AppEngineHttpQueue
                         */
                        AppEngineHttpQueue.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.AppEngineHttpQueue)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.AppEngineHttpQueue();
                            if (object.appEngineRoutingOverride != null) {
                                if (typeof object.appEngineRoutingOverride !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.AppEngineHttpQueue.appEngineRoutingOverride: object expected");
                                message.appEngineRoutingOverride = $root.google.cloud.tasks.v2beta3.AppEngineRouting.fromObject(object.appEngineRoutingOverride);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AppEngineHttpQueue message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.AppEngineHttpQueue
                         * @static
                         * @param {google.cloud.tasks.v2beta3.AppEngineHttpQueue} message AppEngineHttpQueue
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AppEngineHttpQueue.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.appEngineRoutingOverride = null;
                            if (message.appEngineRoutingOverride != null && message.hasOwnProperty("appEngineRoutingOverride"))
                                object.appEngineRoutingOverride = $root.google.cloud.tasks.v2beta3.AppEngineRouting.toObject(message.appEngineRoutingOverride, options);
                            return object;
                        };
    
                        /**
                         * Converts this AppEngineHttpQueue to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.AppEngineHttpQueue
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AppEngineHttpQueue.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AppEngineHttpQueue
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.AppEngineHttpQueue
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AppEngineHttpQueue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.AppEngineHttpQueue";
                        };
    
                        return AppEngineHttpQueue;
                    })();
    
                    v2beta3.AppEngineHttpRequest = (function() {
    
                        /**
                         * Properties of an AppEngineHttpRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IAppEngineHttpRequest
                         * @property {google.cloud.tasks.v2beta3.HttpMethod|null} [httpMethod] AppEngineHttpRequest httpMethod
                         * @property {google.cloud.tasks.v2beta3.IAppEngineRouting|null} [appEngineRouting] AppEngineHttpRequest appEngineRouting
                         * @property {string|null} [relativeUri] AppEngineHttpRequest relativeUri
                         * @property {Object.<string,string>|null} [headers] AppEngineHttpRequest headers
                         * @property {Uint8Array|null} [body] AppEngineHttpRequest body
                         */
    
                        /**
                         * Constructs a new AppEngineHttpRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents an AppEngineHttpRequest.
                         * @implements IAppEngineHttpRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IAppEngineHttpRequest=} [properties] Properties to set
                         */
                        function AppEngineHttpRequest(properties) {
                            this.headers = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AppEngineHttpRequest httpMethod.
                         * @member {google.cloud.tasks.v2beta3.HttpMethod} httpMethod
                         * @memberof google.cloud.tasks.v2beta3.AppEngineHttpRequest
                         * @instance
                         */
                        AppEngineHttpRequest.prototype.httpMethod = 0;
    
                        /**
                         * AppEngineHttpRequest appEngineRouting.
                         * @member {google.cloud.tasks.v2beta3.IAppEngineRouting|null|undefined} appEngineRouting
                         * @memberof google.cloud.tasks.v2beta3.AppEngineHttpRequest
                         * @instance
                         */
                        AppEngineHttpRequest.prototype.appEngineRouting = null;
    
                        /**
                         * AppEngineHttpRequest relativeUri.
                         * @member {string} relativeUri
                         * @memberof google.cloud.tasks.v2beta3.AppEngineHttpRequest
                         * @instance
                         */
                        AppEngineHttpRequest.prototype.relativeUri = "";
    
                        /**
                         * AppEngineHttpRequest headers.
                         * @member {Object.<string,string>} headers
                         * @memberof google.cloud.tasks.v2beta3.AppEngineHttpRequest
                         * @instance
                         */
                        AppEngineHttpRequest.prototype.headers = $util.emptyObject;
    
                        /**
                         * AppEngineHttpRequest body.
                         * @member {Uint8Array} body
                         * @memberof google.cloud.tasks.v2beta3.AppEngineHttpRequest
                         * @instance
                         */
                        AppEngineHttpRequest.prototype.body = $util.newBuffer([]);
    
                        /**
                         * Creates a new AppEngineHttpRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.AppEngineHttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IAppEngineHttpRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.AppEngineHttpRequest} AppEngineHttpRequest instance
                         */
                        AppEngineHttpRequest.create = function create(properties) {
                            return new AppEngineHttpRequest(properties);
                        };
    
                        /**
                         * Encodes the specified AppEngineHttpRequest message. Does not implicitly {@link google.cloud.tasks.v2beta3.AppEngineHttpRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.AppEngineHttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IAppEngineHttpRequest} message AppEngineHttpRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AppEngineHttpRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.httpMethod != null && Object.hasOwnProperty.call(message, "httpMethod"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.httpMethod);
                            if (message.appEngineRouting != null && Object.hasOwnProperty.call(message, "appEngineRouting"))
                                $root.google.cloud.tasks.v2beta3.AppEngineRouting.encode(message.appEngineRouting, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.relativeUri != null && Object.hasOwnProperty.call(message, "relativeUri"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.relativeUri);
                            if (message.headers != null && Object.hasOwnProperty.call(message, "headers"))
                                for (var keys = Object.keys(message.headers), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.headers[keys[i]]).ldelim();
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.body);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AppEngineHttpRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.AppEngineHttpRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.AppEngineHttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IAppEngineHttpRequest} message AppEngineHttpRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AppEngineHttpRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AppEngineHttpRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.AppEngineHttpRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.AppEngineHttpRequest} AppEngineHttpRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AppEngineHttpRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.AppEngineHttpRequest(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.httpMethod = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.appEngineRouting = $root.google.cloud.tasks.v2beta3.AppEngineRouting.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.relativeUri = reader.string();
                                        break;
                                    }
                                case 4: {
                                        if (message.headers === $util.emptyObject)
                                            message.headers = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.headers[key] = value;
                                        break;
                                    }
                                case 5: {
                                        message.body = reader.bytes();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AppEngineHttpRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.AppEngineHttpRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.AppEngineHttpRequest} AppEngineHttpRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AppEngineHttpRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AppEngineHttpRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.AppEngineHttpRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AppEngineHttpRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.httpMethod != null && message.hasOwnProperty("httpMethod"))
                                switch (message.httpMethod) {
                                default:
                                    return "httpMethod: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            if (message.appEngineRouting != null && message.hasOwnProperty("appEngineRouting")) {
                                var error = $root.google.cloud.tasks.v2beta3.AppEngineRouting.verify(message.appEngineRouting);
                                if (error)
                                    return "appEngineRouting." + error;
                            }
                            if (message.relativeUri != null && message.hasOwnProperty("relativeUri"))
                                if (!$util.isString(message.relativeUri))
                                    return "relativeUri: string expected";
                            if (message.headers != null && message.hasOwnProperty("headers")) {
                                if (!$util.isObject(message.headers))
                                    return "headers: object expected";
                                var key = Object.keys(message.headers);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.headers[key[i]]))
                                        return "headers: string{k:string} expected";
                            }
                            if (message.body != null && message.hasOwnProperty("body"))
                                if (!(message.body && typeof message.body.length === "number" || $util.isString(message.body)))
                                    return "body: buffer expected";
                            return null;
                        };
    
                        /**
                         * Creates an AppEngineHttpRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.AppEngineHttpRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.AppEngineHttpRequest} AppEngineHttpRequest
                         */
                        AppEngineHttpRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.AppEngineHttpRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.AppEngineHttpRequest();
                            switch (object.httpMethod) {
                            default:
                                if (typeof object.httpMethod === "number") {
                                    message.httpMethod = object.httpMethod;
                                    break;
                                }
                                break;
                            case "HTTP_METHOD_UNSPECIFIED":
                            case 0:
                                message.httpMethod = 0;
                                break;
                            case "POST":
                            case 1:
                                message.httpMethod = 1;
                                break;
                            case "GET":
                            case 2:
                                message.httpMethod = 2;
                                break;
                            case "HEAD":
                            case 3:
                                message.httpMethod = 3;
                                break;
                            case "PUT":
                            case 4:
                                message.httpMethod = 4;
                                break;
                            case "DELETE":
                            case 5:
                                message.httpMethod = 5;
                                break;
                            case "PATCH":
                            case 6:
                                message.httpMethod = 6;
                                break;
                            case "OPTIONS":
                            case 7:
                                message.httpMethod = 7;
                                break;
                            }
                            if (object.appEngineRouting != null) {
                                if (typeof object.appEngineRouting !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.AppEngineHttpRequest.appEngineRouting: object expected");
                                message.appEngineRouting = $root.google.cloud.tasks.v2beta3.AppEngineRouting.fromObject(object.appEngineRouting);
                            }
                            if (object.relativeUri != null)
                                message.relativeUri = String(object.relativeUri);
                            if (object.headers) {
                                if (typeof object.headers !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.AppEngineHttpRequest.headers: object expected");
                                message.headers = {};
                                for (var keys = Object.keys(object.headers), i = 0; i < keys.length; ++i)
                                    message.headers[keys[i]] = String(object.headers[keys[i]]);
                            }
                            if (object.body != null)
                                if (typeof object.body === "string")
                                    $util.base64.decode(object.body, message.body = $util.newBuffer($util.base64.length(object.body)), 0);
                                else if (object.body.length >= 0)
                                    message.body = object.body;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AppEngineHttpRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.AppEngineHttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.AppEngineHttpRequest} message AppEngineHttpRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AppEngineHttpRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.headers = {};
                            if (options.defaults) {
                                object.httpMethod = options.enums === String ? "HTTP_METHOD_UNSPECIFIED" : 0;
                                object.appEngineRouting = null;
                                object.relativeUri = "";
                                if (options.bytes === String)
                                    object.body = "";
                                else {
                                    object.body = [];
                                    if (options.bytes !== Array)
                                        object.body = $util.newBuffer(object.body);
                                }
                            }
                            if (message.httpMethod != null && message.hasOwnProperty("httpMethod"))
                                object.httpMethod = options.enums === String ? $root.google.cloud.tasks.v2beta3.HttpMethod[message.httpMethod] === undefined ? message.httpMethod : $root.google.cloud.tasks.v2beta3.HttpMethod[message.httpMethod] : message.httpMethod;
                            if (message.appEngineRouting != null && message.hasOwnProperty("appEngineRouting"))
                                object.appEngineRouting = $root.google.cloud.tasks.v2beta3.AppEngineRouting.toObject(message.appEngineRouting, options);
                            if (message.relativeUri != null && message.hasOwnProperty("relativeUri"))
                                object.relativeUri = message.relativeUri;
                            var keys2;
                            if (message.headers && (keys2 = Object.keys(message.headers)).length) {
                                object.headers = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.headers[keys2[j]] = message.headers[keys2[j]];
                            }
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = options.bytes === String ? $util.base64.encode(message.body, 0, message.body.length) : options.bytes === Array ? Array.prototype.slice.call(message.body) : message.body;
                            return object;
                        };
    
                        /**
                         * Converts this AppEngineHttpRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.AppEngineHttpRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AppEngineHttpRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AppEngineHttpRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.AppEngineHttpRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AppEngineHttpRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.AppEngineHttpRequest";
                        };
    
                        return AppEngineHttpRequest;
                    })();
    
                    v2beta3.AppEngineRouting = (function() {
    
                        /**
                         * Properties of an AppEngineRouting.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IAppEngineRouting
                         * @property {string|null} [service] AppEngineRouting service
                         * @property {string|null} [version] AppEngineRouting version
                         * @property {string|null} [instance] AppEngineRouting instance
                         * @property {string|null} [host] AppEngineRouting host
                         */
    
                        /**
                         * Constructs a new AppEngineRouting.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents an AppEngineRouting.
                         * @implements IAppEngineRouting
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IAppEngineRouting=} [properties] Properties to set
                         */
                        function AppEngineRouting(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AppEngineRouting service.
                         * @member {string} service
                         * @memberof google.cloud.tasks.v2beta3.AppEngineRouting
                         * @instance
                         */
                        AppEngineRouting.prototype.service = "";
    
                        /**
                         * AppEngineRouting version.
                         * @member {string} version
                         * @memberof google.cloud.tasks.v2beta3.AppEngineRouting
                         * @instance
                         */
                        AppEngineRouting.prototype.version = "";
    
                        /**
                         * AppEngineRouting instance.
                         * @member {string} instance
                         * @memberof google.cloud.tasks.v2beta3.AppEngineRouting
                         * @instance
                         */
                        AppEngineRouting.prototype.instance = "";
    
                        /**
                         * AppEngineRouting host.
                         * @member {string} host
                         * @memberof google.cloud.tasks.v2beta3.AppEngineRouting
                         * @instance
                         */
                        AppEngineRouting.prototype.host = "";
    
                        /**
                         * Creates a new AppEngineRouting instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.AppEngineRouting
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IAppEngineRouting=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.AppEngineRouting} AppEngineRouting instance
                         */
                        AppEngineRouting.create = function create(properties) {
                            return new AppEngineRouting(properties);
                        };
    
                        /**
                         * Encodes the specified AppEngineRouting message. Does not implicitly {@link google.cloud.tasks.v2beta3.AppEngineRouting.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.AppEngineRouting
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IAppEngineRouting} message AppEngineRouting message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AppEngineRouting.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.service);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.version);
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.instance);
                            if (message.host != null && Object.hasOwnProperty.call(message, "host"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.host);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AppEngineRouting message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.AppEngineRouting.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.AppEngineRouting
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IAppEngineRouting} message AppEngineRouting message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AppEngineRouting.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AppEngineRouting message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.AppEngineRouting
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.AppEngineRouting} AppEngineRouting
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AppEngineRouting.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.AppEngineRouting();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.service = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.version = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.instance = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.host = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AppEngineRouting message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.AppEngineRouting
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.AppEngineRouting} AppEngineRouting
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AppEngineRouting.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AppEngineRouting message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.AppEngineRouting
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AppEngineRouting.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.service != null && message.hasOwnProperty("service"))
                                if (!$util.isString(message.service))
                                    return "service: string expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.host != null && message.hasOwnProperty("host"))
                                if (!$util.isString(message.host))
                                    return "host: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an AppEngineRouting message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.AppEngineRouting
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.AppEngineRouting} AppEngineRouting
                         */
                        AppEngineRouting.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.AppEngineRouting)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.AppEngineRouting();
                            if (object.service != null)
                                message.service = String(object.service);
                            if (object.version != null)
                                message.version = String(object.version);
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.host != null)
                                message.host = String(object.host);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AppEngineRouting message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.AppEngineRouting
                         * @static
                         * @param {google.cloud.tasks.v2beta3.AppEngineRouting} message AppEngineRouting
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AppEngineRouting.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.service = "";
                                object.version = "";
                                object.instance = "";
                                object.host = "";
                            }
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = message.service;
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.host != null && message.hasOwnProperty("host"))
                                object.host = message.host;
                            return object;
                        };
    
                        /**
                         * Converts this AppEngineRouting to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.AppEngineRouting
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AppEngineRouting.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AppEngineRouting
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.AppEngineRouting
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AppEngineRouting.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.AppEngineRouting";
                        };
    
                        return AppEngineRouting;
                    })();
    
                    /**
                     * HttpMethod enum.
                     * @name google.cloud.tasks.v2beta3.HttpMethod
                     * @enum {number}
                     * @property {number} HTTP_METHOD_UNSPECIFIED=0 HTTP_METHOD_UNSPECIFIED value
                     * @property {number} POST=1 POST value
                     * @property {number} GET=2 GET value
                     * @property {number} HEAD=3 HEAD value
                     * @property {number} PUT=4 PUT value
                     * @property {number} DELETE=5 DELETE value
                     * @property {number} PATCH=6 PATCH value
                     * @property {number} OPTIONS=7 OPTIONS value
                     */
                    v2beta3.HttpMethod = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "HTTP_METHOD_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "POST"] = 1;
                        values[valuesById[2] = "GET"] = 2;
                        values[valuesById[3] = "HEAD"] = 3;
                        values[valuesById[4] = "PUT"] = 4;
                        values[valuesById[5] = "DELETE"] = 5;
                        values[valuesById[6] = "PATCH"] = 6;
                        values[valuesById[7] = "OPTIONS"] = 7;
                        return values;
                    })();
    
                    v2beta3.OAuthToken = (function() {
    
                        /**
                         * Properties of a OAuthToken.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IOAuthToken
                         * @property {string|null} [serviceAccountEmail] OAuthToken serviceAccountEmail
                         * @property {string|null} [scope] OAuthToken scope
                         */
    
                        /**
                         * Constructs a new OAuthToken.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a OAuthToken.
                         * @implements IOAuthToken
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IOAuthToken=} [properties] Properties to set
                         */
                        function OAuthToken(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OAuthToken serviceAccountEmail.
                         * @member {string} serviceAccountEmail
                         * @memberof google.cloud.tasks.v2beta3.OAuthToken
                         * @instance
                         */
                        OAuthToken.prototype.serviceAccountEmail = "";
    
                        /**
                         * OAuthToken scope.
                         * @member {string} scope
                         * @memberof google.cloud.tasks.v2beta3.OAuthToken
                         * @instance
                         */
                        OAuthToken.prototype.scope = "";
    
                        /**
                         * Creates a new OAuthToken instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.OAuthToken
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IOAuthToken=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.OAuthToken} OAuthToken instance
                         */
                        OAuthToken.create = function create(properties) {
                            return new OAuthToken(properties);
                        };
    
                        /**
                         * Encodes the specified OAuthToken message. Does not implicitly {@link google.cloud.tasks.v2beta3.OAuthToken.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.OAuthToken
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IOAuthToken} message OAuthToken message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OAuthToken.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.serviceAccountEmail != null && Object.hasOwnProperty.call(message, "serviceAccountEmail"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.serviceAccountEmail);
                            if (message.scope != null && Object.hasOwnProperty.call(message, "scope"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.scope);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OAuthToken message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.OAuthToken.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.OAuthToken
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IOAuthToken} message OAuthToken message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OAuthToken.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a OAuthToken message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.OAuthToken
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.OAuthToken} OAuthToken
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OAuthToken.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.OAuthToken();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.serviceAccountEmail = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.scope = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a OAuthToken message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.OAuthToken
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.OAuthToken} OAuthToken
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OAuthToken.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a OAuthToken message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.OAuthToken
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OAuthToken.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                if (!$util.isString(message.serviceAccountEmail))
                                    return "serviceAccountEmail: string expected";
                            if (message.scope != null && message.hasOwnProperty("scope"))
                                if (!$util.isString(message.scope))
                                    return "scope: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a OAuthToken message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.OAuthToken
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.OAuthToken} OAuthToken
                         */
                        OAuthToken.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.OAuthToken)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.OAuthToken();
                            if (object.serviceAccountEmail != null)
                                message.serviceAccountEmail = String(object.serviceAccountEmail);
                            if (object.scope != null)
                                message.scope = String(object.scope);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a OAuthToken message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.OAuthToken
                         * @static
                         * @param {google.cloud.tasks.v2beta3.OAuthToken} message OAuthToken
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OAuthToken.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.serviceAccountEmail = "";
                                object.scope = "";
                            }
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                object.serviceAccountEmail = message.serviceAccountEmail;
                            if (message.scope != null && message.hasOwnProperty("scope"))
                                object.scope = message.scope;
                            return object;
                        };
    
                        /**
                         * Converts this OAuthToken to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.OAuthToken
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OAuthToken.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OAuthToken
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.OAuthToken
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OAuthToken.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.OAuthToken";
                        };
    
                        return OAuthToken;
                    })();
    
                    v2beta3.OidcToken = (function() {
    
                        /**
                         * Properties of an OidcToken.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IOidcToken
                         * @property {string|null} [serviceAccountEmail] OidcToken serviceAccountEmail
                         * @property {string|null} [audience] OidcToken audience
                         */
    
                        /**
                         * Constructs a new OidcToken.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents an OidcToken.
                         * @implements IOidcToken
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IOidcToken=} [properties] Properties to set
                         */
                        function OidcToken(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OidcToken serviceAccountEmail.
                         * @member {string} serviceAccountEmail
                         * @memberof google.cloud.tasks.v2beta3.OidcToken
                         * @instance
                         */
                        OidcToken.prototype.serviceAccountEmail = "";
    
                        /**
                         * OidcToken audience.
                         * @member {string} audience
                         * @memberof google.cloud.tasks.v2beta3.OidcToken
                         * @instance
                         */
                        OidcToken.prototype.audience = "";
    
                        /**
                         * Creates a new OidcToken instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.OidcToken
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IOidcToken=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.OidcToken} OidcToken instance
                         */
                        OidcToken.create = function create(properties) {
                            return new OidcToken(properties);
                        };
    
                        /**
                         * Encodes the specified OidcToken message. Does not implicitly {@link google.cloud.tasks.v2beta3.OidcToken.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.OidcToken
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IOidcToken} message OidcToken message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OidcToken.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.serviceAccountEmail != null && Object.hasOwnProperty.call(message, "serviceAccountEmail"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.serviceAccountEmail);
                            if (message.audience != null && Object.hasOwnProperty.call(message, "audience"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.audience);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OidcToken message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.OidcToken.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.OidcToken
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IOidcToken} message OidcToken message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OidcToken.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OidcToken message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.OidcToken
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.OidcToken} OidcToken
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OidcToken.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.OidcToken();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.serviceAccountEmail = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.audience = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OidcToken message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.OidcToken
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.OidcToken} OidcToken
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OidcToken.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OidcToken message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.OidcToken
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OidcToken.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                if (!$util.isString(message.serviceAccountEmail))
                                    return "serviceAccountEmail: string expected";
                            if (message.audience != null && message.hasOwnProperty("audience"))
                                if (!$util.isString(message.audience))
                                    return "audience: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an OidcToken message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.OidcToken
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.OidcToken} OidcToken
                         */
                        OidcToken.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.OidcToken)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.OidcToken();
                            if (object.serviceAccountEmail != null)
                                message.serviceAccountEmail = String(object.serviceAccountEmail);
                            if (object.audience != null)
                                message.audience = String(object.audience);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OidcToken message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.OidcToken
                         * @static
                         * @param {google.cloud.tasks.v2beta3.OidcToken} message OidcToken
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OidcToken.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.serviceAccountEmail = "";
                                object.audience = "";
                            }
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                object.serviceAccountEmail = message.serviceAccountEmail;
                            if (message.audience != null && message.hasOwnProperty("audience"))
                                object.audience = message.audience;
                            return object;
                        };
    
                        /**
                         * Converts this OidcToken to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.OidcToken
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OidcToken.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OidcToken
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.OidcToken
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OidcToken.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.OidcToken";
                        };
    
                        return OidcToken;
                    })();
    
                    v2beta3.Task = (function() {
    
                        /**
                         * Properties of a Task.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface ITask
                         * @property {string|null} [name] Task name
                         * @property {google.cloud.tasks.v2beta3.IAppEngineHttpRequest|null} [appEngineHttpRequest] Task appEngineHttpRequest
                         * @property {google.cloud.tasks.v2beta3.IHttpRequest|null} [httpRequest] Task httpRequest
                         * @property {google.cloud.tasks.v2beta3.IPullMessage|null} [pullMessage] Task pullMessage
                         * @property {google.protobuf.ITimestamp|null} [scheduleTime] Task scheduleTime
                         * @property {google.protobuf.ITimestamp|null} [createTime] Task createTime
                         * @property {google.protobuf.IDuration|null} [dispatchDeadline] Task dispatchDeadline
                         * @property {number|null} [dispatchCount] Task dispatchCount
                         * @property {number|null} [responseCount] Task responseCount
                         * @property {google.cloud.tasks.v2beta3.IAttempt|null} [firstAttempt] Task firstAttempt
                         * @property {google.cloud.tasks.v2beta3.IAttempt|null} [lastAttempt] Task lastAttempt
                         * @property {google.cloud.tasks.v2beta3.Task.View|null} [view] Task view
                         */
    
                        /**
                         * Constructs a new Task.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a Task.
                         * @implements ITask
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.ITask=} [properties] Properties to set
                         */
                        function Task(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Task name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta3.Task
                         * @instance
                         */
                        Task.prototype.name = "";
    
                        /**
                         * Task appEngineHttpRequest.
                         * @member {google.cloud.tasks.v2beta3.IAppEngineHttpRequest|null|undefined} appEngineHttpRequest
                         * @memberof google.cloud.tasks.v2beta3.Task
                         * @instance
                         */
                        Task.prototype.appEngineHttpRequest = null;
    
                        /**
                         * Task httpRequest.
                         * @member {google.cloud.tasks.v2beta3.IHttpRequest|null|undefined} httpRequest
                         * @memberof google.cloud.tasks.v2beta3.Task
                         * @instance
                         */
                        Task.prototype.httpRequest = null;
    
                        /**
                         * Task pullMessage.
                         * @member {google.cloud.tasks.v2beta3.IPullMessage|null|undefined} pullMessage
                         * @memberof google.cloud.tasks.v2beta3.Task
                         * @instance
                         */
                        Task.prototype.pullMessage = null;
    
                        /**
                         * Task scheduleTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} scheduleTime
                         * @memberof google.cloud.tasks.v2beta3.Task
                         * @instance
                         */
                        Task.prototype.scheduleTime = null;
    
                        /**
                         * Task createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.tasks.v2beta3.Task
                         * @instance
                         */
                        Task.prototype.createTime = null;
    
                        /**
                         * Task dispatchDeadline.
                         * @member {google.protobuf.IDuration|null|undefined} dispatchDeadline
                         * @memberof google.cloud.tasks.v2beta3.Task
                         * @instance
                         */
                        Task.prototype.dispatchDeadline = null;
    
                        /**
                         * Task dispatchCount.
                         * @member {number} dispatchCount
                         * @memberof google.cloud.tasks.v2beta3.Task
                         * @instance
                         */
                        Task.prototype.dispatchCount = 0;
    
                        /**
                         * Task responseCount.
                         * @member {number} responseCount
                         * @memberof google.cloud.tasks.v2beta3.Task
                         * @instance
                         */
                        Task.prototype.responseCount = 0;
    
                        /**
                         * Task firstAttempt.
                         * @member {google.cloud.tasks.v2beta3.IAttempt|null|undefined} firstAttempt
                         * @memberof google.cloud.tasks.v2beta3.Task
                         * @instance
                         */
                        Task.prototype.firstAttempt = null;
    
                        /**
                         * Task lastAttempt.
                         * @member {google.cloud.tasks.v2beta3.IAttempt|null|undefined} lastAttempt
                         * @memberof google.cloud.tasks.v2beta3.Task
                         * @instance
                         */
                        Task.prototype.lastAttempt = null;
    
                        /**
                         * Task view.
                         * @member {google.cloud.tasks.v2beta3.Task.View} view
                         * @memberof google.cloud.tasks.v2beta3.Task
                         * @instance
                         */
                        Task.prototype.view = 0;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Task payloadType.
                         * @member {"appEngineHttpRequest"|"httpRequest"|"pullMessage"|undefined} payloadType
                         * @memberof google.cloud.tasks.v2beta3.Task
                         * @instance
                         */
                        Object.defineProperty(Task.prototype, "payloadType", {
                            get: $util.oneOfGetter($oneOfFields = ["appEngineHttpRequest", "httpRequest", "pullMessage"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Task instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.Task
                         * @static
                         * @param {google.cloud.tasks.v2beta3.ITask=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.Task} Task instance
                         */
                        Task.create = function create(properties) {
                            return new Task(properties);
                        };
    
                        /**
                         * Encodes the specified Task message. Does not implicitly {@link google.cloud.tasks.v2beta3.Task.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.Task
                         * @static
                         * @param {google.cloud.tasks.v2beta3.ITask} message Task message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Task.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.appEngineHttpRequest != null && Object.hasOwnProperty.call(message, "appEngineHttpRequest"))
                                $root.google.cloud.tasks.v2beta3.AppEngineHttpRequest.encode(message.appEngineHttpRequest, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.scheduleTime != null && Object.hasOwnProperty.call(message, "scheduleTime"))
                                $root.google.protobuf.Timestamp.encode(message.scheduleTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.dispatchCount != null && Object.hasOwnProperty.call(message, "dispatchCount"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.dispatchCount);
                            if (message.responseCount != null && Object.hasOwnProperty.call(message, "responseCount"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.responseCount);
                            if (message.firstAttempt != null && Object.hasOwnProperty.call(message, "firstAttempt"))
                                $root.google.cloud.tasks.v2beta3.Attempt.encode(message.firstAttempt, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.lastAttempt != null && Object.hasOwnProperty.call(message, "lastAttempt"))
                                $root.google.cloud.tasks.v2beta3.Attempt.encode(message.lastAttempt, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.view != null && Object.hasOwnProperty.call(message, "view"))
                                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.view);
                            if (message.httpRequest != null && Object.hasOwnProperty.call(message, "httpRequest"))
                                $root.google.cloud.tasks.v2beta3.HttpRequest.encode(message.httpRequest, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.dispatchDeadline != null && Object.hasOwnProperty.call(message, "dispatchDeadline"))
                                $root.google.protobuf.Duration.encode(message.dispatchDeadline, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            if (message.pullMessage != null && Object.hasOwnProperty.call(message, "pullMessage"))
                                $root.google.cloud.tasks.v2beta3.PullMessage.encode(message.pullMessage, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Task message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.Task.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.Task
                         * @static
                         * @param {google.cloud.tasks.v2beta3.ITask} message Task message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Task.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Task message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.Task
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.Task} Task
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Task.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.Task();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.appEngineHttpRequest = $root.google.cloud.tasks.v2beta3.AppEngineHttpRequest.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        message.httpRequest = $root.google.cloud.tasks.v2beta3.HttpRequest.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        message.pullMessage = $root.google.cloud.tasks.v2beta3.PullMessage.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.scheduleTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 12: {
                                        message.dispatchDeadline = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.dispatchCount = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        message.responseCount = reader.int32();
                                        break;
                                    }
                                case 8: {
                                        message.firstAttempt = $root.google.cloud.tasks.v2beta3.Attempt.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.lastAttempt = $root.google.cloud.tasks.v2beta3.Attempt.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.view = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Task message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.Task
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.Task} Task
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Task.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Task message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.Task
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Task.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.appEngineHttpRequest != null && message.hasOwnProperty("appEngineHttpRequest")) {
                                properties.payloadType = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2beta3.AppEngineHttpRequest.verify(message.appEngineHttpRequest);
                                    if (error)
                                        return "appEngineHttpRequest." + error;
                                }
                            }
                            if (message.httpRequest != null && message.hasOwnProperty("httpRequest")) {
                                if (properties.payloadType === 1)
                                    return "payloadType: multiple values";
                                properties.payloadType = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2beta3.HttpRequest.verify(message.httpRequest);
                                    if (error)
                                        return "httpRequest." + error;
                                }
                            }
                            if (message.pullMessage != null && message.hasOwnProperty("pullMessage")) {
                                if (properties.payloadType === 1)
                                    return "payloadType: multiple values";
                                properties.payloadType = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2beta3.PullMessage.verify(message.pullMessage);
                                    if (error)
                                        return "pullMessage." + error;
                                }
                            }
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.scheduleTime);
                                if (error)
                                    return "scheduleTime." + error;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.dispatchDeadline != null && message.hasOwnProperty("dispatchDeadline")) {
                                var error = $root.google.protobuf.Duration.verify(message.dispatchDeadline);
                                if (error)
                                    return "dispatchDeadline." + error;
                            }
                            if (message.dispatchCount != null && message.hasOwnProperty("dispatchCount"))
                                if (!$util.isInteger(message.dispatchCount))
                                    return "dispatchCount: integer expected";
                            if (message.responseCount != null && message.hasOwnProperty("responseCount"))
                                if (!$util.isInteger(message.responseCount))
                                    return "responseCount: integer expected";
                            if (message.firstAttempt != null && message.hasOwnProperty("firstAttempt")) {
                                var error = $root.google.cloud.tasks.v2beta3.Attempt.verify(message.firstAttempt);
                                if (error)
                                    return "firstAttempt." + error;
                            }
                            if (message.lastAttempt != null && message.hasOwnProperty("lastAttempt")) {
                                var error = $root.google.cloud.tasks.v2beta3.Attempt.verify(message.lastAttempt);
                                if (error)
                                    return "lastAttempt." + error;
                            }
                            if (message.view != null && message.hasOwnProperty("view"))
                                switch (message.view) {
                                default:
                                    return "view: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a Task message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.Task
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.Task} Task
                         */
                        Task.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.Task)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.Task();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.appEngineHttpRequest != null) {
                                if (typeof object.appEngineHttpRequest !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.Task.appEngineHttpRequest: object expected");
                                message.appEngineHttpRequest = $root.google.cloud.tasks.v2beta3.AppEngineHttpRequest.fromObject(object.appEngineHttpRequest);
                            }
                            if (object.httpRequest != null) {
                                if (typeof object.httpRequest !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.Task.httpRequest: object expected");
                                message.httpRequest = $root.google.cloud.tasks.v2beta3.HttpRequest.fromObject(object.httpRequest);
                            }
                            if (object.pullMessage != null) {
                                if (typeof object.pullMessage !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.Task.pullMessage: object expected");
                                message.pullMessage = $root.google.cloud.tasks.v2beta3.PullMessage.fromObject(object.pullMessage);
                            }
                            if (object.scheduleTime != null) {
                                if (typeof object.scheduleTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.Task.scheduleTime: object expected");
                                message.scheduleTime = $root.google.protobuf.Timestamp.fromObject(object.scheduleTime);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.Task.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.dispatchDeadline != null) {
                                if (typeof object.dispatchDeadline !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.Task.dispatchDeadline: object expected");
                                message.dispatchDeadline = $root.google.protobuf.Duration.fromObject(object.dispatchDeadline);
                            }
                            if (object.dispatchCount != null)
                                message.dispatchCount = object.dispatchCount | 0;
                            if (object.responseCount != null)
                                message.responseCount = object.responseCount | 0;
                            if (object.firstAttempt != null) {
                                if (typeof object.firstAttempt !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.Task.firstAttempt: object expected");
                                message.firstAttempt = $root.google.cloud.tasks.v2beta3.Attempt.fromObject(object.firstAttempt);
                            }
                            if (object.lastAttempt != null) {
                                if (typeof object.lastAttempt !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.Task.lastAttempt: object expected");
                                message.lastAttempt = $root.google.cloud.tasks.v2beta3.Attempt.fromObject(object.lastAttempt);
                            }
                            switch (object.view) {
                            default:
                                if (typeof object.view === "number") {
                                    message.view = object.view;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.view = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.view = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.view = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Task message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.Task
                         * @static
                         * @param {google.cloud.tasks.v2beta3.Task} message Task
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Task.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.scheduleTime = null;
                                object.createTime = null;
                                object.dispatchCount = 0;
                                object.responseCount = 0;
                                object.firstAttempt = null;
                                object.lastAttempt = null;
                                object.view = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                                object.dispatchDeadline = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.appEngineHttpRequest != null && message.hasOwnProperty("appEngineHttpRequest")) {
                                object.appEngineHttpRequest = $root.google.cloud.tasks.v2beta3.AppEngineHttpRequest.toObject(message.appEngineHttpRequest, options);
                                if (options.oneofs)
                                    object.payloadType = "appEngineHttpRequest";
                            }
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime"))
                                object.scheduleTime = $root.google.protobuf.Timestamp.toObject(message.scheduleTime, options);
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.dispatchCount != null && message.hasOwnProperty("dispatchCount"))
                                object.dispatchCount = message.dispatchCount;
                            if (message.responseCount != null && message.hasOwnProperty("responseCount"))
                                object.responseCount = message.responseCount;
                            if (message.firstAttempt != null && message.hasOwnProperty("firstAttempt"))
                                object.firstAttempt = $root.google.cloud.tasks.v2beta3.Attempt.toObject(message.firstAttempt, options);
                            if (message.lastAttempt != null && message.hasOwnProperty("lastAttempt"))
                                object.lastAttempt = $root.google.cloud.tasks.v2beta3.Attempt.toObject(message.lastAttempt, options);
                            if (message.view != null && message.hasOwnProperty("view"))
                                object.view = options.enums === String ? $root.google.cloud.tasks.v2beta3.Task.View[message.view] === undefined ? message.view : $root.google.cloud.tasks.v2beta3.Task.View[message.view] : message.view;
                            if (message.httpRequest != null && message.hasOwnProperty("httpRequest")) {
                                object.httpRequest = $root.google.cloud.tasks.v2beta3.HttpRequest.toObject(message.httpRequest, options);
                                if (options.oneofs)
                                    object.payloadType = "httpRequest";
                            }
                            if (message.dispatchDeadline != null && message.hasOwnProperty("dispatchDeadline"))
                                object.dispatchDeadline = $root.google.protobuf.Duration.toObject(message.dispatchDeadline, options);
                            if (message.pullMessage != null && message.hasOwnProperty("pullMessage")) {
                                object.pullMessage = $root.google.cloud.tasks.v2beta3.PullMessage.toObject(message.pullMessage, options);
                                if (options.oneofs)
                                    object.payloadType = "pullMessage";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Task to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.Task
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Task.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Task
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.Task
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Task.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.Task";
                        };
    
                        /**
                         * View enum.
                         * @name google.cloud.tasks.v2beta3.Task.View
                         * @enum {number}
                         * @property {number} VIEW_UNSPECIFIED=0 VIEW_UNSPECIFIED value
                         * @property {number} BASIC=1 BASIC value
                         * @property {number} FULL=2 FULL value
                         */
                        Task.View = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "VIEW_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "BASIC"] = 1;
                            values[valuesById[2] = "FULL"] = 2;
                            return values;
                        })();
    
                        return Task;
                    })();
    
                    v2beta3.Attempt = (function() {
    
                        /**
                         * Properties of an Attempt.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IAttempt
                         * @property {google.protobuf.ITimestamp|null} [scheduleTime] Attempt scheduleTime
                         * @property {google.protobuf.ITimestamp|null} [dispatchTime] Attempt dispatchTime
                         * @property {google.protobuf.ITimestamp|null} [responseTime] Attempt responseTime
                         * @property {google.rpc.IStatus|null} [responseStatus] Attempt responseStatus
                         */
    
                        /**
                         * Constructs a new Attempt.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents an Attempt.
                         * @implements IAttempt
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IAttempt=} [properties] Properties to set
                         */
                        function Attempt(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Attempt scheduleTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} scheduleTime
                         * @memberof google.cloud.tasks.v2beta3.Attempt
                         * @instance
                         */
                        Attempt.prototype.scheduleTime = null;
    
                        /**
                         * Attempt dispatchTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} dispatchTime
                         * @memberof google.cloud.tasks.v2beta3.Attempt
                         * @instance
                         */
                        Attempt.prototype.dispatchTime = null;
    
                        /**
                         * Attempt responseTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} responseTime
                         * @memberof google.cloud.tasks.v2beta3.Attempt
                         * @instance
                         */
                        Attempt.prototype.responseTime = null;
    
                        /**
                         * Attempt responseStatus.
                         * @member {google.rpc.IStatus|null|undefined} responseStatus
                         * @memberof google.cloud.tasks.v2beta3.Attempt
                         * @instance
                         */
                        Attempt.prototype.responseStatus = null;
    
                        /**
                         * Creates a new Attempt instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.Attempt
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IAttempt=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.Attempt} Attempt instance
                         */
                        Attempt.create = function create(properties) {
                            return new Attempt(properties);
                        };
    
                        /**
                         * Encodes the specified Attempt message. Does not implicitly {@link google.cloud.tasks.v2beta3.Attempt.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.Attempt
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IAttempt} message Attempt message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Attempt.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.scheduleTime != null && Object.hasOwnProperty.call(message, "scheduleTime"))
                                $root.google.protobuf.Timestamp.encode(message.scheduleTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.dispatchTime != null && Object.hasOwnProperty.call(message, "dispatchTime"))
                                $root.google.protobuf.Timestamp.encode(message.dispatchTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.responseTime != null && Object.hasOwnProperty.call(message, "responseTime"))
                                $root.google.protobuf.Timestamp.encode(message.responseTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.responseStatus != null && Object.hasOwnProperty.call(message, "responseStatus"))
                                $root.google.rpc.Status.encode(message.responseStatus, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Attempt message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.Attempt.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.Attempt
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IAttempt} message Attempt message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Attempt.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Attempt message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.Attempt
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.Attempt} Attempt
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Attempt.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.Attempt();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.scheduleTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.dispatchTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.responseTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.responseStatus = $root.google.rpc.Status.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Attempt message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.Attempt
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.Attempt} Attempt
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Attempt.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Attempt message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.Attempt
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Attempt.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.scheduleTime);
                                if (error)
                                    return "scheduleTime." + error;
                            }
                            if (message.dispatchTime != null && message.hasOwnProperty("dispatchTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.dispatchTime);
                                if (error)
                                    return "dispatchTime." + error;
                            }
                            if (message.responseTime != null && message.hasOwnProperty("responseTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.responseTime);
                                if (error)
                                    return "responseTime." + error;
                            }
                            if (message.responseStatus != null && message.hasOwnProperty("responseStatus")) {
                                var error = $root.google.rpc.Status.verify(message.responseStatus);
                                if (error)
                                    return "responseStatus." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an Attempt message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.Attempt
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.Attempt} Attempt
                         */
                        Attempt.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.Attempt)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.Attempt();
                            if (object.scheduleTime != null) {
                                if (typeof object.scheduleTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.Attempt.scheduleTime: object expected");
                                message.scheduleTime = $root.google.protobuf.Timestamp.fromObject(object.scheduleTime);
                            }
                            if (object.dispatchTime != null) {
                                if (typeof object.dispatchTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.Attempt.dispatchTime: object expected");
                                message.dispatchTime = $root.google.protobuf.Timestamp.fromObject(object.dispatchTime);
                            }
                            if (object.responseTime != null) {
                                if (typeof object.responseTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.Attempt.responseTime: object expected");
                                message.responseTime = $root.google.protobuf.Timestamp.fromObject(object.responseTime);
                            }
                            if (object.responseStatus != null) {
                                if (typeof object.responseStatus !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.Attempt.responseStatus: object expected");
                                message.responseStatus = $root.google.rpc.Status.fromObject(object.responseStatus);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Attempt message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.Attempt
                         * @static
                         * @param {google.cloud.tasks.v2beta3.Attempt} message Attempt
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Attempt.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.scheduleTime = null;
                                object.dispatchTime = null;
                                object.responseTime = null;
                                object.responseStatus = null;
                            }
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime"))
                                object.scheduleTime = $root.google.protobuf.Timestamp.toObject(message.scheduleTime, options);
                            if (message.dispatchTime != null && message.hasOwnProperty("dispatchTime"))
                                object.dispatchTime = $root.google.protobuf.Timestamp.toObject(message.dispatchTime, options);
                            if (message.responseTime != null && message.hasOwnProperty("responseTime"))
                                object.responseTime = $root.google.protobuf.Timestamp.toObject(message.responseTime, options);
                            if (message.responseStatus != null && message.hasOwnProperty("responseStatus"))
                                object.responseStatus = $root.google.rpc.Status.toObject(message.responseStatus, options);
                            return object;
                        };
    
                        /**
                         * Converts this Attempt to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.Attempt
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Attempt.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Attempt
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.Attempt
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Attempt.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.Attempt";
                        };
    
                        return Attempt;
                    })();
    
                    return v2beta3;
                })();
    
                return tasks;
            })();
    
            return cloud;
        })();
    
        google.api = (function() {
    
            /**
             * Namespace api.
             * @memberof google
             * @namespace
             */
            var api = {};
    
            api.Http = (function() {
    
                /**
                 * Properties of a Http.
                 * @memberof google.api
                 * @interface IHttp
                 * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules
                 * @property {boolean|null} [fullyDecodeReservedExpansion] Http fullyDecodeReservedExpansion
                 */
    
                /**
                 * Constructs a new Http.
                 * @memberof google.api
                 * @classdesc Represents a Http.
                 * @implements IHttp
                 * @constructor
                 * @param {google.api.IHttp=} [properties] Properties to set
                 */
                function Http(properties) {
                    this.rules = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Http rules.
                 * @member {Array.<google.api.IHttpRule>} rules
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.rules = $util.emptyArray;
    
                /**
                 * Http fullyDecodeReservedExpansion.
                 * @member {boolean} fullyDecodeReservedExpansion
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.fullyDecodeReservedExpansion = false;
    
                /**
                 * Creates a new Http instance using the specified properties.
                 * @function create
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp=} [properties] Properties to set
                 * @returns {google.api.Http} Http instance
                 */
                Http.create = function create(properties) {
                    return new Http(properties);
                };
    
                /**
                 * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.rules != null && message.rules.length)
                        for (var i = 0; i < message.rules.length; ++i)
                            $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.fullyDecodeReservedExpansion != null && Object.hasOwnProperty.call(message, "fullyDecodeReservedExpansion"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.fullyDecodeReservedExpansion);
                    return writer;
                };
    
                /**
                 * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.rules && message.rules.length))
                                    message.rules = [];
                                message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.fullyDecodeReservedExpansion = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Http message.
                 * @function verify
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Http.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.rules != null && message.hasOwnProperty("rules")) {
                        if (!Array.isArray(message.rules))
                            return "rules: array expected";
                        for (var i = 0; i < message.rules.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.rules[i]);
                            if (error)
                                return "rules." + error;
                        }
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        if (typeof message.fullyDecodeReservedExpansion !== "boolean")
                            return "fullyDecodeReservedExpansion: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a Http message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Http} Http
                 */
                Http.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Http)
                        return object;
                    var message = new $root.google.api.Http();
                    if (object.rules) {
                        if (!Array.isArray(object.rules))
                            throw TypeError(".google.api.Http.rules: array expected");
                        message.rules = [];
                        for (var i = 0; i < object.rules.length; ++i) {
                            if (typeof object.rules[i] !== "object")
                                throw TypeError(".google.api.Http.rules: object expected");
                            message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);
                        }
                    }
                    if (object.fullyDecodeReservedExpansion != null)
                        message.fullyDecodeReservedExpansion = Boolean(object.fullyDecodeReservedExpansion);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Http message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.Http} message Http
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Http.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.rules = [];
                    if (options.defaults)
                        object.fullyDecodeReservedExpansion = false;
                    if (message.rules && message.rules.length) {
                        object.rules = [];
                        for (var j = 0; j < message.rules.length; ++j)
                            object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        object.fullyDecodeReservedExpansion = message.fullyDecodeReservedExpansion;
                    return object;
                };
    
                /**
                 * Converts this Http to JSON.
                 * @function toJSON
                 * @memberof google.api.Http
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Http.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Http
                 * @function getTypeUrl
                 * @memberof google.api.Http
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Http.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Http";
                };
    
                return Http;
            })();
    
            api.HttpRule = (function() {
    
                /**
                 * Properties of a HttpRule.
                 * @memberof google.api
                 * @interface IHttpRule
                 * @property {string|null} [selector] HttpRule selector
                 * @property {string|null} [get] HttpRule get
                 * @property {string|null} [put] HttpRule put
                 * @property {string|null} [post] HttpRule post
                 * @property {string|null} ["delete"] HttpRule delete
                 * @property {string|null} [patch] HttpRule patch
                 * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom
                 * @property {string|null} [body] HttpRule body
                 * @property {string|null} [responseBody] HttpRule responseBody
                 * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings
                 */
    
                /**
                 * Constructs a new HttpRule.
                 * @memberof google.api
                 * @classdesc Represents a HttpRule.
                 * @implements IHttpRule
                 * @constructor
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 */
                function HttpRule(properties) {
                    this.additionalBindings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * HttpRule selector.
                 * @member {string} selector
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.selector = "";
    
                /**
                 * HttpRule get.
                 * @member {string|null|undefined} get
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.get = null;
    
                /**
                 * HttpRule put.
                 * @member {string|null|undefined} put
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.put = null;
    
                /**
                 * HttpRule post.
                 * @member {string|null|undefined} post
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.post = null;
    
                /**
                 * HttpRule delete.
                 * @member {string|null|undefined} delete
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype["delete"] = null;
    
                /**
                 * HttpRule patch.
                 * @member {string|null|undefined} patch
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.patch = null;
    
                /**
                 * HttpRule custom.
                 * @member {google.api.ICustomHttpPattern|null|undefined} custom
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.custom = null;
    
                /**
                 * HttpRule body.
                 * @member {string} body
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.body = "";
    
                /**
                 * HttpRule responseBody.
                 * @member {string} responseBody
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.responseBody = "";
    
                /**
                 * HttpRule additionalBindings.
                 * @member {Array.<google.api.IHttpRule>} additionalBindings
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.additionalBindings = $util.emptyArray;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * HttpRule pattern.
                 * @member {"get"|"put"|"post"|"delete"|"patch"|"custom"|undefined} pattern
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                Object.defineProperty(HttpRule.prototype, "pattern", {
                    get: $util.oneOfGetter($oneOfFields = ["get", "put", "post", "delete", "patch", "custom"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new HttpRule instance using the specified properties.
                 * @function create
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 * @returns {google.api.HttpRule} HttpRule instance
                 */
                HttpRule.create = function create(properties) {
                    return new HttpRule(properties);
                };
    
                /**
                 * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.get != null && Object.hasOwnProperty.call(message, "get"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);
                    if (message.put != null && Object.hasOwnProperty.call(message, "put"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);
                    if (message.post != null && Object.hasOwnProperty.call(message, "post"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);
                    if (message["delete"] != null && Object.hasOwnProperty.call(message, "delete"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message["delete"]);
                    if (message.patch != null && Object.hasOwnProperty.call(message, "patch"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);
                    if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
                    if (message.custom != null && Object.hasOwnProperty.call(message, "custom"))
                        $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.additionalBindings != null && message.additionalBindings.length)
                        for (var i = 0; i < message.additionalBindings.length; ++i)
                            $root.google.api.HttpRule.encode(message.additionalBindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                    if (message.responseBody != null && Object.hasOwnProperty.call(message, "responseBody"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.responseBody);
                    return writer;
                };
    
                /**
                 * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.get = reader.string();
                                break;
                            }
                        case 3: {
                                message.put = reader.string();
                                break;
                            }
                        case 4: {
                                message.post = reader.string();
                                break;
                            }
                        case 5: {
                                message["delete"] = reader.string();
                                break;
                            }
                        case 6: {
                                message.patch = reader.string();
                                break;
                            }
                        case 8: {
                                message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());
                                break;
                            }
                        case 7: {
                                message.body = reader.string();
                                break;
                            }
                        case 12: {
                                message.responseBody = reader.string();
                                break;
                            }
                        case 11: {
                                if (!(message.additionalBindings && message.additionalBindings.length))
                                    message.additionalBindings = [];
                                message.additionalBindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a HttpRule message.
                 * @function verify
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                HttpRule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.get != null && message.hasOwnProperty("get")) {
                        properties.pattern = 1;
                        if (!$util.isString(message.get))
                            return "get: string expected";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.put))
                            return "put: string expected";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.post))
                            return "post: string expected";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message["delete"]))
                            return "delete: string expected";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.patch))
                            return "patch: string expected";
                    }
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        {
                            var error = $root.google.api.CustomHttpPattern.verify(message.custom);
                            if (error)
                                return "custom." + error;
                        }
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        if (!$util.isString(message.body))
                            return "body: string expected";
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        if (!$util.isString(message.responseBody))
                            return "responseBody: string expected";
                    if (message.additionalBindings != null && message.hasOwnProperty("additionalBindings")) {
                        if (!Array.isArray(message.additionalBindings))
                            return "additionalBindings: array expected";
                        for (var i = 0; i < message.additionalBindings.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.additionalBindings[i]);
                            if (error)
                                return "additionalBindings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.HttpRule} HttpRule
                 */
                HttpRule.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.HttpRule)
                        return object;
                    var message = new $root.google.api.HttpRule();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.get != null)
                        message.get = String(object.get);
                    if (object.put != null)
                        message.put = String(object.put);
                    if (object.post != null)
                        message.post = String(object.post);
                    if (object["delete"] != null)
                        message["delete"] = String(object["delete"]);
                    if (object.patch != null)
                        message.patch = String(object.patch);
                    if (object.custom != null) {
                        if (typeof object.custom !== "object")
                            throw TypeError(".google.api.HttpRule.custom: object expected");
                        message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);
                    }
                    if (object.body != null)
                        message.body = String(object.body);
                    if (object.responseBody != null)
                        message.responseBody = String(object.responseBody);
                    if (object.additionalBindings) {
                        if (!Array.isArray(object.additionalBindings))
                            throw TypeError(".google.api.HttpRule.additionalBindings: array expected");
                        message.additionalBindings = [];
                        for (var i = 0; i < object.additionalBindings.length; ++i) {
                            if (typeof object.additionalBindings[i] !== "object")
                                throw TypeError(".google.api.HttpRule.additionalBindings: object expected");
                            message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.HttpRule} message HttpRule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                HttpRule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.additionalBindings = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.body = "";
                        object.responseBody = "";
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.get != null && message.hasOwnProperty("get")) {
                        object.get = message.get;
                        if (options.oneofs)
                            object.pattern = "get";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        object.put = message.put;
                        if (options.oneofs)
                            object.pattern = "put";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        object.post = message.post;
                        if (options.oneofs)
                            object.pattern = "post";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        object["delete"] = message["delete"];
                        if (options.oneofs)
                            object.pattern = "delete";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        object.patch = message.patch;
                        if (options.oneofs)
                            object.pattern = "patch";
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        object.body = message.body;
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);
                        if (options.oneofs)
                            object.pattern = "custom";
                    }
                    if (message.additionalBindings && message.additionalBindings.length) {
                        object.additionalBindings = [];
                        for (var j = 0; j < message.additionalBindings.length; ++j)
                            object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);
                    }
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        object.responseBody = message.responseBody;
                    return object;
                };
    
                /**
                 * Converts this HttpRule to JSON.
                 * @function toJSON
                 * @memberof google.api.HttpRule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                HttpRule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for HttpRule
                 * @function getTypeUrl
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                HttpRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.HttpRule";
                };
    
                return HttpRule;
            })();
    
            api.CustomHttpPattern = (function() {
    
                /**
                 * Properties of a CustomHttpPattern.
                 * @memberof google.api
                 * @interface ICustomHttpPattern
                 * @property {string|null} [kind] CustomHttpPattern kind
                 * @property {string|null} [path] CustomHttpPattern path
                 */
    
                /**
                 * Constructs a new CustomHttpPattern.
                 * @memberof google.api
                 * @classdesc Represents a CustomHttpPattern.
                 * @implements ICustomHttpPattern
                 * @constructor
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 */
                function CustomHttpPattern(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CustomHttpPattern kind.
                 * @member {string} kind
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.kind = "";
    
                /**
                 * CustomHttpPattern path.
                 * @member {string} path
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.path = "";
    
                /**
                 * Creates a new CustomHttpPattern instance using the specified properties.
                 * @function create
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern instance
                 */
                CustomHttpPattern.create = function create(properties) {
                    return new CustomHttpPattern(properties);
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                    if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                    return writer;
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.kind = reader.string();
                                break;
                            }
                        case 2: {
                                message.path = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CustomHttpPattern message.
                 * @function verify
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CustomHttpPattern.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        if (!$util.isString(message.kind))
                            return "kind: string expected";
                    if (message.path != null && message.hasOwnProperty("path"))
                        if (!$util.isString(message.path))
                            return "path: string expected";
                    return null;
                };
    
                /**
                 * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 */
                CustomHttpPattern.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CustomHttpPattern)
                        return object;
                    var message = new $root.google.api.CustomHttpPattern();
                    if (object.kind != null)
                        message.kind = String(object.kind);
                    if (object.path != null)
                        message.path = String(object.path);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.CustomHttpPattern} message CustomHttpPattern
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CustomHttpPattern.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.kind = "";
                        object.path = "";
                    }
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        object.kind = message.kind;
                    if (message.path != null && message.hasOwnProperty("path"))
                        object.path = message.path;
                    return object;
                };
    
                /**
                 * Converts this CustomHttpPattern to JSON.
                 * @function toJSON
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CustomHttpPattern.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CustomHttpPattern
                 * @function getTypeUrl
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CustomHttpPattern.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CustomHttpPattern";
                };
    
                return CustomHttpPattern;
            })();
    
            api.CommonLanguageSettings = (function() {
    
                /**
                 * Properties of a CommonLanguageSettings.
                 * @memberof google.api
                 * @interface ICommonLanguageSettings
                 * @property {string|null} [referenceDocsUri] CommonLanguageSettings referenceDocsUri
                 * @property {Array.<google.api.ClientLibraryDestination>|null} [destinations] CommonLanguageSettings destinations
                 */
    
                /**
                 * Constructs a new CommonLanguageSettings.
                 * @memberof google.api
                 * @classdesc Represents a CommonLanguageSettings.
                 * @implements ICommonLanguageSettings
                 * @constructor
                 * @param {google.api.ICommonLanguageSettings=} [properties] Properties to set
                 */
                function CommonLanguageSettings(properties) {
                    this.destinations = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CommonLanguageSettings referenceDocsUri.
                 * @member {string} referenceDocsUri
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 */
                CommonLanguageSettings.prototype.referenceDocsUri = "";
    
                /**
                 * CommonLanguageSettings destinations.
                 * @member {Array.<google.api.ClientLibraryDestination>} destinations
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 */
                CommonLanguageSettings.prototype.destinations = $util.emptyArray;
    
                /**
                 * Creates a new CommonLanguageSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings=} [properties] Properties to set
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings instance
                 */
                CommonLanguageSettings.create = function create(properties) {
                    return new CommonLanguageSettings(properties);
                };
    
                /**
                 * Encodes the specified CommonLanguageSettings message. Does not implicitly {@link google.api.CommonLanguageSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings} message CommonLanguageSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CommonLanguageSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.referenceDocsUri != null && Object.hasOwnProperty.call(message, "referenceDocsUri"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.referenceDocsUri);
                    if (message.destinations != null && message.destinations.length) {
                        writer.uint32(/* id 2, wireType 2 =*/18).fork();
                        for (var i = 0; i < message.destinations.length; ++i)
                            writer.int32(message.destinations[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified CommonLanguageSettings message, length delimited. Does not implicitly {@link google.api.CommonLanguageSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings} message CommonLanguageSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CommonLanguageSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CommonLanguageSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CommonLanguageSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CommonLanguageSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.referenceDocsUri = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.destinations && message.destinations.length))
                                    message.destinations = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.destinations.push(reader.int32());
                                } else
                                    message.destinations.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CommonLanguageSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CommonLanguageSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CommonLanguageSettings message.
                 * @function verify
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CommonLanguageSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.referenceDocsUri != null && message.hasOwnProperty("referenceDocsUri"))
                        if (!$util.isString(message.referenceDocsUri))
                            return "referenceDocsUri: string expected";
                    if (message.destinations != null && message.hasOwnProperty("destinations")) {
                        if (!Array.isArray(message.destinations))
                            return "destinations: array expected";
                        for (var i = 0; i < message.destinations.length; ++i)
                            switch (message.destinations[i]) {
                            default:
                                return "destinations: enum value[] expected";
                            case 0:
                            case 10:
                            case 20:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a CommonLanguageSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 */
                CommonLanguageSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CommonLanguageSettings)
                        return object;
                    var message = new $root.google.api.CommonLanguageSettings();
                    if (object.referenceDocsUri != null)
                        message.referenceDocsUri = String(object.referenceDocsUri);
                    if (object.destinations) {
                        if (!Array.isArray(object.destinations))
                            throw TypeError(".google.api.CommonLanguageSettings.destinations: array expected");
                        message.destinations = [];
                        for (var i = 0; i < object.destinations.length; ++i)
                            switch (object.destinations[i]) {
                            default:
                                if (typeof object.destinations[i] === "number") {
                                    message.destinations[i] = object.destinations[i];
                                    break;
                                }
                            case "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED":
                            case 0:
                                message.destinations[i] = 0;
                                break;
                            case "GITHUB":
                            case 10:
                                message.destinations[i] = 10;
                                break;
                            case "PACKAGE_MANAGER":
                            case 20:
                                message.destinations[i] = 20;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a CommonLanguageSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.CommonLanguageSettings} message CommonLanguageSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CommonLanguageSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.destinations = [];
                    if (options.defaults)
                        object.referenceDocsUri = "";
                    if (message.referenceDocsUri != null && message.hasOwnProperty("referenceDocsUri"))
                        object.referenceDocsUri = message.referenceDocsUri;
                    if (message.destinations && message.destinations.length) {
                        object.destinations = [];
                        for (var j = 0; j < message.destinations.length; ++j)
                            object.destinations[j] = options.enums === String ? $root.google.api.ClientLibraryDestination[message.destinations[j]] === undefined ? message.destinations[j] : $root.google.api.ClientLibraryDestination[message.destinations[j]] : message.destinations[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this CommonLanguageSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CommonLanguageSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CommonLanguageSettings
                 * @function getTypeUrl
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CommonLanguageSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CommonLanguageSettings";
                };
    
                return CommonLanguageSettings;
            })();
    
            api.ClientLibrarySettings = (function() {
    
                /**
                 * Properties of a ClientLibrarySettings.
                 * @memberof google.api
                 * @interface IClientLibrarySettings
                 * @property {string|null} [version] ClientLibrarySettings version
                 * @property {google.api.LaunchStage|null} [launchStage] ClientLibrarySettings launchStage
                 * @property {boolean|null} [restNumericEnums] ClientLibrarySettings restNumericEnums
                 * @property {google.api.IJavaSettings|null} [javaSettings] ClientLibrarySettings javaSettings
                 * @property {google.api.ICppSettings|null} [cppSettings] ClientLibrarySettings cppSettings
                 * @property {google.api.IPhpSettings|null} [phpSettings] ClientLibrarySettings phpSettings
                 * @property {google.api.IPythonSettings|null} [pythonSettings] ClientLibrarySettings pythonSettings
                 * @property {google.api.INodeSettings|null} [nodeSettings] ClientLibrarySettings nodeSettings
                 * @property {google.api.IDotnetSettings|null} [dotnetSettings] ClientLibrarySettings dotnetSettings
                 * @property {google.api.IRubySettings|null} [rubySettings] ClientLibrarySettings rubySettings
                 * @property {google.api.IGoSettings|null} [goSettings] ClientLibrarySettings goSettings
                 */
    
                /**
                 * Constructs a new ClientLibrarySettings.
                 * @memberof google.api
                 * @classdesc Represents a ClientLibrarySettings.
                 * @implements IClientLibrarySettings
                 * @constructor
                 * @param {google.api.IClientLibrarySettings=} [properties] Properties to set
                 */
                function ClientLibrarySettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ClientLibrarySettings version.
                 * @member {string} version
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.version = "";
    
                /**
                 * ClientLibrarySettings launchStage.
                 * @member {google.api.LaunchStage} launchStage
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.launchStage = 0;
    
                /**
                 * ClientLibrarySettings restNumericEnums.
                 * @member {boolean} restNumericEnums
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.restNumericEnums = false;
    
                /**
                 * ClientLibrarySettings javaSettings.
                 * @member {google.api.IJavaSettings|null|undefined} javaSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.javaSettings = null;
    
                /**
                 * ClientLibrarySettings cppSettings.
                 * @member {google.api.ICppSettings|null|undefined} cppSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.cppSettings = null;
    
                /**
                 * ClientLibrarySettings phpSettings.
                 * @member {google.api.IPhpSettings|null|undefined} phpSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.phpSettings = null;
    
                /**
                 * ClientLibrarySettings pythonSettings.
                 * @member {google.api.IPythonSettings|null|undefined} pythonSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.pythonSettings = null;
    
                /**
                 * ClientLibrarySettings nodeSettings.
                 * @member {google.api.INodeSettings|null|undefined} nodeSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.nodeSettings = null;
    
                /**
                 * ClientLibrarySettings dotnetSettings.
                 * @member {google.api.IDotnetSettings|null|undefined} dotnetSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.dotnetSettings = null;
    
                /**
                 * ClientLibrarySettings rubySettings.
                 * @member {google.api.IRubySettings|null|undefined} rubySettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.rubySettings = null;
    
                /**
                 * ClientLibrarySettings goSettings.
                 * @member {google.api.IGoSettings|null|undefined} goSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.goSettings = null;
    
                /**
                 * Creates a new ClientLibrarySettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings=} [properties] Properties to set
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings instance
                 */
                ClientLibrarySettings.create = function create(properties) {
                    return new ClientLibrarySettings(properties);
                };
    
                /**
                 * Encodes the specified ClientLibrarySettings message. Does not implicitly {@link google.api.ClientLibrarySettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings} message ClientLibrarySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ClientLibrarySettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                    if (message.launchStage != null && Object.hasOwnProperty.call(message, "launchStage"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.launchStage);
                    if (message.restNumericEnums != null && Object.hasOwnProperty.call(message, "restNumericEnums"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.restNumericEnums);
                    if (message.javaSettings != null && Object.hasOwnProperty.call(message, "javaSettings"))
                        $root.google.api.JavaSettings.encode(message.javaSettings, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                    if (message.cppSettings != null && Object.hasOwnProperty.call(message, "cppSettings"))
                        $root.google.api.CppSettings.encode(message.cppSettings, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
                    if (message.phpSettings != null && Object.hasOwnProperty.call(message, "phpSettings"))
                        $root.google.api.PhpSettings.encode(message.phpSettings, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                    if (message.pythonSettings != null && Object.hasOwnProperty.call(message, "pythonSettings"))
                        $root.google.api.PythonSettings.encode(message.pythonSettings, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();
                    if (message.nodeSettings != null && Object.hasOwnProperty.call(message, "nodeSettings"))
                        $root.google.api.NodeSettings.encode(message.nodeSettings, writer.uint32(/* id 25, wireType 2 =*/202).fork()).ldelim();
                    if (message.dotnetSettings != null && Object.hasOwnProperty.call(message, "dotnetSettings"))
                        $root.google.api.DotnetSettings.encode(message.dotnetSettings, writer.uint32(/* id 26, wireType 2 =*/210).fork()).ldelim();
                    if (message.rubySettings != null && Object.hasOwnProperty.call(message, "rubySettings"))
                        $root.google.api.RubySettings.encode(message.rubySettings, writer.uint32(/* id 27, wireType 2 =*/218).fork()).ldelim();
                    if (message.goSettings != null && Object.hasOwnProperty.call(message, "goSettings"))
                        $root.google.api.GoSettings.encode(message.goSettings, writer.uint32(/* id 28, wireType 2 =*/226).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ClientLibrarySettings message, length delimited. Does not implicitly {@link google.api.ClientLibrarySettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings} message ClientLibrarySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ClientLibrarySettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ClientLibrarySettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ClientLibrarySettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ClientLibrarySettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.version = reader.string();
                                break;
                            }
                        case 2: {
                                message.launchStage = reader.int32();
                                break;
                            }
                        case 3: {
                                message.restNumericEnums = reader.bool();
                                break;
                            }
                        case 21: {
                                message.javaSettings = $root.google.api.JavaSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 22: {
                                message.cppSettings = $root.google.api.CppSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 23: {
                                message.phpSettings = $root.google.api.PhpSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 24: {
                                message.pythonSettings = $root.google.api.PythonSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 25: {
                                message.nodeSettings = $root.google.api.NodeSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 26: {
                                message.dotnetSettings = $root.google.api.DotnetSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 27: {
                                message.rubySettings = $root.google.api.RubySettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 28: {
                                message.goSettings = $root.google.api.GoSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ClientLibrarySettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ClientLibrarySettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ClientLibrarySettings message.
                 * @function verify
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ClientLibrarySettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.version != null && message.hasOwnProperty("version"))
                        if (!$util.isString(message.version))
                            return "version: string expected";
                    if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                        switch (message.launchStage) {
                        default:
                            return "launchStage: enum value expected";
                        case 0:
                        case 6:
                        case 7:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                            break;
                        }
                    if (message.restNumericEnums != null && message.hasOwnProperty("restNumericEnums"))
                        if (typeof message.restNumericEnums !== "boolean")
                            return "restNumericEnums: boolean expected";
                    if (message.javaSettings != null && message.hasOwnProperty("javaSettings")) {
                        var error = $root.google.api.JavaSettings.verify(message.javaSettings);
                        if (error)
                            return "javaSettings." + error;
                    }
                    if (message.cppSettings != null && message.hasOwnProperty("cppSettings")) {
                        var error = $root.google.api.CppSettings.verify(message.cppSettings);
                        if (error)
                            return "cppSettings." + error;
                    }
                    if (message.phpSettings != null && message.hasOwnProperty("phpSettings")) {
                        var error = $root.google.api.PhpSettings.verify(message.phpSettings);
                        if (error)
                            return "phpSettings." + error;
                    }
                    if (message.pythonSettings != null && message.hasOwnProperty("pythonSettings")) {
                        var error = $root.google.api.PythonSettings.verify(message.pythonSettings);
                        if (error)
                            return "pythonSettings." + error;
                    }
                    if (message.nodeSettings != null && message.hasOwnProperty("nodeSettings")) {
                        var error = $root.google.api.NodeSettings.verify(message.nodeSettings);
                        if (error)
                            return "nodeSettings." + error;
                    }
                    if (message.dotnetSettings != null && message.hasOwnProperty("dotnetSettings")) {
                        var error = $root.google.api.DotnetSettings.verify(message.dotnetSettings);
                        if (error)
                            return "dotnetSettings." + error;
                    }
                    if (message.rubySettings != null && message.hasOwnProperty("rubySettings")) {
                        var error = $root.google.api.RubySettings.verify(message.rubySettings);
                        if (error)
                            return "rubySettings." + error;
                    }
                    if (message.goSettings != null && message.hasOwnProperty("goSettings")) {
                        var error = $root.google.api.GoSettings.verify(message.goSettings);
                        if (error)
                            return "goSettings." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ClientLibrarySettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 */
                ClientLibrarySettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ClientLibrarySettings)
                        return object;
                    var message = new $root.google.api.ClientLibrarySettings();
                    if (object.version != null)
                        message.version = String(object.version);
                    switch (object.launchStage) {
                    default:
                        if (typeof object.launchStage === "number") {
                            message.launchStage = object.launchStage;
                            break;
                        }
                        break;
                    case "LAUNCH_STAGE_UNSPECIFIED":
                    case 0:
                        message.launchStage = 0;
                        break;
                    case "UNIMPLEMENTED":
                    case 6:
                        message.launchStage = 6;
                        break;
                    case "PRELAUNCH":
                    case 7:
                        message.launchStage = 7;
                        break;
                    case "EARLY_ACCESS":
                    case 1:
                        message.launchStage = 1;
                        break;
                    case "ALPHA":
                    case 2:
                        message.launchStage = 2;
                        break;
                    case "BETA":
                    case 3:
                        message.launchStage = 3;
                        break;
                    case "GA":
                    case 4:
                        message.launchStage = 4;
                        break;
                    case "DEPRECATED":
                    case 5:
                        message.launchStage = 5;
                        break;
                    }
                    if (object.restNumericEnums != null)
                        message.restNumericEnums = Boolean(object.restNumericEnums);
                    if (object.javaSettings != null) {
                        if (typeof object.javaSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.javaSettings: object expected");
                        message.javaSettings = $root.google.api.JavaSettings.fromObject(object.javaSettings);
                    }
                    if (object.cppSettings != null) {
                        if (typeof object.cppSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.cppSettings: object expected");
                        message.cppSettings = $root.google.api.CppSettings.fromObject(object.cppSettings);
                    }
                    if (object.phpSettings != null) {
                        if (typeof object.phpSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.phpSettings: object expected");
                        message.phpSettings = $root.google.api.PhpSettings.fromObject(object.phpSettings);
                    }
                    if (object.pythonSettings != null) {
                        if (typeof object.pythonSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.pythonSettings: object expected");
                        message.pythonSettings = $root.google.api.PythonSettings.fromObject(object.pythonSettings);
                    }
                    if (object.nodeSettings != null) {
                        if (typeof object.nodeSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.nodeSettings: object expected");
                        message.nodeSettings = $root.google.api.NodeSettings.fromObject(object.nodeSettings);
                    }
                    if (object.dotnetSettings != null) {
                        if (typeof object.dotnetSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.dotnetSettings: object expected");
                        message.dotnetSettings = $root.google.api.DotnetSettings.fromObject(object.dotnetSettings);
                    }
                    if (object.rubySettings != null) {
                        if (typeof object.rubySettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.rubySettings: object expected");
                        message.rubySettings = $root.google.api.RubySettings.fromObject(object.rubySettings);
                    }
                    if (object.goSettings != null) {
                        if (typeof object.goSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.goSettings: object expected");
                        message.goSettings = $root.google.api.GoSettings.fromObject(object.goSettings);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ClientLibrarySettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.ClientLibrarySettings} message ClientLibrarySettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ClientLibrarySettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.version = "";
                        object.launchStage = options.enums === String ? "LAUNCH_STAGE_UNSPECIFIED" : 0;
                        object.restNumericEnums = false;
                        object.javaSettings = null;
                        object.cppSettings = null;
                        object.phpSettings = null;
                        object.pythonSettings = null;
                        object.nodeSettings = null;
                        object.dotnetSettings = null;
                        object.rubySettings = null;
                        object.goSettings = null;
                    }
                    if (message.version != null && message.hasOwnProperty("version"))
                        object.version = message.version;
                    if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                        object.launchStage = options.enums === String ? $root.google.api.LaunchStage[message.launchStage] === undefined ? message.launchStage : $root.google.api.LaunchStage[message.launchStage] : message.launchStage;
                    if (message.restNumericEnums != null && message.hasOwnProperty("restNumericEnums"))
                        object.restNumericEnums = message.restNumericEnums;
                    if (message.javaSettings != null && message.hasOwnProperty("javaSettings"))
                        object.javaSettings = $root.google.api.JavaSettings.toObject(message.javaSettings, options);
                    if (message.cppSettings != null && message.hasOwnProperty("cppSettings"))
                        object.cppSettings = $root.google.api.CppSettings.toObject(message.cppSettings, options);
                    if (message.phpSettings != null && message.hasOwnProperty("phpSettings"))
                        object.phpSettings = $root.google.api.PhpSettings.toObject(message.phpSettings, options);
                    if (message.pythonSettings != null && message.hasOwnProperty("pythonSettings"))
                        object.pythonSettings = $root.google.api.PythonSettings.toObject(message.pythonSettings, options);
                    if (message.nodeSettings != null && message.hasOwnProperty("nodeSettings"))
                        object.nodeSettings = $root.google.api.NodeSettings.toObject(message.nodeSettings, options);
                    if (message.dotnetSettings != null && message.hasOwnProperty("dotnetSettings"))
                        object.dotnetSettings = $root.google.api.DotnetSettings.toObject(message.dotnetSettings, options);
                    if (message.rubySettings != null && message.hasOwnProperty("rubySettings"))
                        object.rubySettings = $root.google.api.RubySettings.toObject(message.rubySettings, options);
                    if (message.goSettings != null && message.hasOwnProperty("goSettings"))
                        object.goSettings = $root.google.api.GoSettings.toObject(message.goSettings, options);
                    return object;
                };
    
                /**
                 * Converts this ClientLibrarySettings to JSON.
                 * @function toJSON
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ClientLibrarySettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ClientLibrarySettings
                 * @function getTypeUrl
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ClientLibrarySettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ClientLibrarySettings";
                };
    
                return ClientLibrarySettings;
            })();
    
            api.Publishing = (function() {
    
                /**
                 * Properties of a Publishing.
                 * @memberof google.api
                 * @interface IPublishing
                 * @property {Array.<google.api.IMethodSettings>|null} [methodSettings] Publishing methodSettings
                 * @property {string|null} [newIssueUri] Publishing newIssueUri
                 * @property {string|null} [documentationUri] Publishing documentationUri
                 * @property {string|null} [apiShortName] Publishing apiShortName
                 * @property {string|null} [githubLabel] Publishing githubLabel
                 * @property {Array.<string>|null} [codeownerGithubTeams] Publishing codeownerGithubTeams
                 * @property {string|null} [docTagPrefix] Publishing docTagPrefix
                 * @property {google.api.ClientLibraryOrganization|null} [organization] Publishing organization
                 * @property {Array.<google.api.IClientLibrarySettings>|null} [librarySettings] Publishing librarySettings
                 */
    
                /**
                 * Constructs a new Publishing.
                 * @memberof google.api
                 * @classdesc Represents a Publishing.
                 * @implements IPublishing
                 * @constructor
                 * @param {google.api.IPublishing=} [properties] Properties to set
                 */
                function Publishing(properties) {
                    this.methodSettings = [];
                    this.codeownerGithubTeams = [];
                    this.librarySettings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Publishing methodSettings.
                 * @member {Array.<google.api.IMethodSettings>} methodSettings
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.methodSettings = $util.emptyArray;
    
                /**
                 * Publishing newIssueUri.
                 * @member {string} newIssueUri
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.newIssueUri = "";
    
                /**
                 * Publishing documentationUri.
                 * @member {string} documentationUri
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.documentationUri = "";
    
                /**
                 * Publishing apiShortName.
                 * @member {string} apiShortName
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.apiShortName = "";
    
                /**
                 * Publishing githubLabel.
                 * @member {string} githubLabel
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.githubLabel = "";
    
                /**
                 * Publishing codeownerGithubTeams.
                 * @member {Array.<string>} codeownerGithubTeams
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.codeownerGithubTeams = $util.emptyArray;
    
                /**
                 * Publishing docTagPrefix.
                 * @member {string} docTagPrefix
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.docTagPrefix = "";
    
                /**
                 * Publishing organization.
                 * @member {google.api.ClientLibraryOrganization} organization
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.organization = 0;
    
                /**
                 * Publishing librarySettings.
                 * @member {Array.<google.api.IClientLibrarySettings>} librarySettings
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.librarySettings = $util.emptyArray;
    
                /**
                 * Creates a new Publishing instance using the specified properties.
                 * @function create
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing=} [properties] Properties to set
                 * @returns {google.api.Publishing} Publishing instance
                 */
                Publishing.create = function create(properties) {
                    return new Publishing(properties);
                };
    
                /**
                 * Encodes the specified Publishing message. Does not implicitly {@link google.api.Publishing.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing} message Publishing message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Publishing.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.methodSettings != null && message.methodSettings.length)
                        for (var i = 0; i < message.methodSettings.length; ++i)
                            $root.google.api.MethodSettings.encode(message.methodSettings[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.newIssueUri != null && Object.hasOwnProperty.call(message, "newIssueUri"))
                        writer.uint32(/* id 101, wireType 2 =*/810).string(message.newIssueUri);
                    if (message.documentationUri != null && Object.hasOwnProperty.call(message, "documentationUri"))
                        writer.uint32(/* id 102, wireType 2 =*/818).string(message.documentationUri);
                    if (message.apiShortName != null && Object.hasOwnProperty.call(message, "apiShortName"))
                        writer.uint32(/* id 103, wireType 2 =*/826).string(message.apiShortName);
                    if (message.githubLabel != null && Object.hasOwnProperty.call(message, "githubLabel"))
                        writer.uint32(/* id 104, wireType 2 =*/834).string(message.githubLabel);
                    if (message.codeownerGithubTeams != null && message.codeownerGithubTeams.length)
                        for (var i = 0; i < message.codeownerGithubTeams.length; ++i)
                            writer.uint32(/* id 105, wireType 2 =*/842).string(message.codeownerGithubTeams[i]);
                    if (message.docTagPrefix != null && Object.hasOwnProperty.call(message, "docTagPrefix"))
                        writer.uint32(/* id 106, wireType 2 =*/850).string(message.docTagPrefix);
                    if (message.organization != null && Object.hasOwnProperty.call(message, "organization"))
                        writer.uint32(/* id 107, wireType 0 =*/856).int32(message.organization);
                    if (message.librarySettings != null && message.librarySettings.length)
                        for (var i = 0; i < message.librarySettings.length; ++i)
                            $root.google.api.ClientLibrarySettings.encode(message.librarySettings[i], writer.uint32(/* id 109, wireType 2 =*/874).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Publishing message, length delimited. Does not implicitly {@link google.api.Publishing.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing} message Publishing message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Publishing.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Publishing message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Publishing
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Publishing} Publishing
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Publishing.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Publishing();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.methodSettings && message.methodSettings.length))
                                    message.methodSettings = [];
                                message.methodSettings.push($root.google.api.MethodSettings.decode(reader, reader.uint32()));
                                break;
                            }
                        case 101: {
                                message.newIssueUri = reader.string();
                                break;
                            }
                        case 102: {
                                message.documentationUri = reader.string();
                                break;
                            }
                        case 103: {
                                message.apiShortName = reader.string();
                                break;
                            }
                        case 104: {
                                message.githubLabel = reader.string();
                                break;
                            }
                        case 105: {
                                if (!(message.codeownerGithubTeams && message.codeownerGithubTeams.length))
                                    message.codeownerGithubTeams = [];
                                message.codeownerGithubTeams.push(reader.string());
                                break;
                            }
                        case 106: {
                                message.docTagPrefix = reader.string();
                                break;
                            }
                        case 107: {
                                message.organization = reader.int32();
                                break;
                            }
                        case 109: {
                                if (!(message.librarySettings && message.librarySettings.length))
                                    message.librarySettings = [];
                                message.librarySettings.push($root.google.api.ClientLibrarySettings.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Publishing message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Publishing
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Publishing} Publishing
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Publishing.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Publishing message.
                 * @function verify
                 * @memberof google.api.Publishing
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Publishing.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.methodSettings != null && message.hasOwnProperty("methodSettings")) {
                        if (!Array.isArray(message.methodSettings))
                            return "methodSettings: array expected";
                        for (var i = 0; i < message.methodSettings.length; ++i) {
                            var error = $root.google.api.MethodSettings.verify(message.methodSettings[i]);
                            if (error)
                                return "methodSettings." + error;
                        }
                    }
                    if (message.newIssueUri != null && message.hasOwnProperty("newIssueUri"))
                        if (!$util.isString(message.newIssueUri))
                            return "newIssueUri: string expected";
                    if (message.documentationUri != null && message.hasOwnProperty("documentationUri"))
                        if (!$util.isString(message.documentationUri))
                            return "documentationUri: string expected";
                    if (message.apiShortName != null && message.hasOwnProperty("apiShortName"))
                        if (!$util.isString(message.apiShortName))
                            return "apiShortName: string expected";
                    if (message.githubLabel != null && message.hasOwnProperty("githubLabel"))
                        if (!$util.isString(message.githubLabel))
                            return "githubLabel: string expected";
                    if (message.codeownerGithubTeams != null && message.hasOwnProperty("codeownerGithubTeams")) {
                        if (!Array.isArray(message.codeownerGithubTeams))
                            return "codeownerGithubTeams: array expected";
                        for (var i = 0; i < message.codeownerGithubTeams.length; ++i)
                            if (!$util.isString(message.codeownerGithubTeams[i]))
                                return "codeownerGithubTeams: string[] expected";
                    }
                    if (message.docTagPrefix != null && message.hasOwnProperty("docTagPrefix"))
                        if (!$util.isString(message.docTagPrefix))
                            return "docTagPrefix: string expected";
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        switch (message.organization) {
                        default:
                            return "organization: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                            break;
                        }
                    if (message.librarySettings != null && message.hasOwnProperty("librarySettings")) {
                        if (!Array.isArray(message.librarySettings))
                            return "librarySettings: array expected";
                        for (var i = 0; i < message.librarySettings.length; ++i) {
                            var error = $root.google.api.ClientLibrarySettings.verify(message.librarySettings[i]);
                            if (error)
                                return "librarySettings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Publishing message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Publishing
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Publishing} Publishing
                 */
                Publishing.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Publishing)
                        return object;
                    var message = new $root.google.api.Publishing();
                    if (object.methodSettings) {
                        if (!Array.isArray(object.methodSettings))
                            throw TypeError(".google.api.Publishing.methodSettings: array expected");
                        message.methodSettings = [];
                        for (var i = 0; i < object.methodSettings.length; ++i) {
                            if (typeof object.methodSettings[i] !== "object")
                                throw TypeError(".google.api.Publishing.methodSettings: object expected");
                            message.methodSettings[i] = $root.google.api.MethodSettings.fromObject(object.methodSettings[i]);
                        }
                    }
                    if (object.newIssueUri != null)
                        message.newIssueUri = String(object.newIssueUri);
                    if (object.documentationUri != null)
                        message.documentationUri = String(object.documentationUri);
                    if (object.apiShortName != null)
                        message.apiShortName = String(object.apiShortName);
                    if (object.githubLabel != null)
                        message.githubLabel = String(object.githubLabel);
                    if (object.codeownerGithubTeams) {
                        if (!Array.isArray(object.codeownerGithubTeams))
                            throw TypeError(".google.api.Publishing.codeownerGithubTeams: array expected");
                        message.codeownerGithubTeams = [];
                        for (var i = 0; i < object.codeownerGithubTeams.length; ++i)
                            message.codeownerGithubTeams[i] = String(object.codeownerGithubTeams[i]);
                    }
                    if (object.docTagPrefix != null)
                        message.docTagPrefix = String(object.docTagPrefix);
                    switch (object.organization) {
                    default:
                        if (typeof object.organization === "number") {
                            message.organization = object.organization;
                            break;
                        }
                        break;
                    case "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED":
                    case 0:
                        message.organization = 0;
                        break;
                    case "CLOUD":
                    case 1:
                        message.organization = 1;
                        break;
                    case "ADS":
                    case 2:
                        message.organization = 2;
                        break;
                    case "PHOTOS":
                    case 3:
                        message.organization = 3;
                        break;
                    case "STREET_VIEW":
                    case 4:
                        message.organization = 4;
                        break;
                    }
                    if (object.librarySettings) {
                        if (!Array.isArray(object.librarySettings))
                            throw TypeError(".google.api.Publishing.librarySettings: array expected");
                        message.librarySettings = [];
                        for (var i = 0; i < object.librarySettings.length; ++i) {
                            if (typeof object.librarySettings[i] !== "object")
                                throw TypeError(".google.api.Publishing.librarySettings: object expected");
                            message.librarySettings[i] = $root.google.api.ClientLibrarySettings.fromObject(object.librarySettings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Publishing message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.Publishing} message Publishing
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Publishing.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.methodSettings = [];
                        object.codeownerGithubTeams = [];
                        object.librarySettings = [];
                    }
                    if (options.defaults) {
                        object.newIssueUri = "";
                        object.documentationUri = "";
                        object.apiShortName = "";
                        object.githubLabel = "";
                        object.docTagPrefix = "";
                        object.organization = options.enums === String ? "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED" : 0;
                    }
                    if (message.methodSettings && message.methodSettings.length) {
                        object.methodSettings = [];
                        for (var j = 0; j < message.methodSettings.length; ++j)
                            object.methodSettings[j] = $root.google.api.MethodSettings.toObject(message.methodSettings[j], options);
                    }
                    if (message.newIssueUri != null && message.hasOwnProperty("newIssueUri"))
                        object.newIssueUri = message.newIssueUri;
                    if (message.documentationUri != null && message.hasOwnProperty("documentationUri"))
                        object.documentationUri = message.documentationUri;
                    if (message.apiShortName != null && message.hasOwnProperty("apiShortName"))
                        object.apiShortName = message.apiShortName;
                    if (message.githubLabel != null && message.hasOwnProperty("githubLabel"))
                        object.githubLabel = message.githubLabel;
                    if (message.codeownerGithubTeams && message.codeownerGithubTeams.length) {
                        object.codeownerGithubTeams = [];
                        for (var j = 0; j < message.codeownerGithubTeams.length; ++j)
                            object.codeownerGithubTeams[j] = message.codeownerGithubTeams[j];
                    }
                    if (message.docTagPrefix != null && message.hasOwnProperty("docTagPrefix"))
                        object.docTagPrefix = message.docTagPrefix;
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        object.organization = options.enums === String ? $root.google.api.ClientLibraryOrganization[message.organization] === undefined ? message.organization : $root.google.api.ClientLibraryOrganization[message.organization] : message.organization;
                    if (message.librarySettings && message.librarySettings.length) {
                        object.librarySettings = [];
                        for (var j = 0; j < message.librarySettings.length; ++j)
                            object.librarySettings[j] = $root.google.api.ClientLibrarySettings.toObject(message.librarySettings[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Publishing to JSON.
                 * @function toJSON
                 * @memberof google.api.Publishing
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Publishing.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Publishing
                 * @function getTypeUrl
                 * @memberof google.api.Publishing
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Publishing.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Publishing";
                };
    
                return Publishing;
            })();
    
            api.JavaSettings = (function() {
    
                /**
                 * Properties of a JavaSettings.
                 * @memberof google.api
                 * @interface IJavaSettings
                 * @property {string|null} [libraryPackage] JavaSettings libraryPackage
                 * @property {Object.<string,string>|null} [serviceClassNames] JavaSettings serviceClassNames
                 * @property {google.api.ICommonLanguageSettings|null} [common] JavaSettings common
                 */
    
                /**
                 * Constructs a new JavaSettings.
                 * @memberof google.api
                 * @classdesc Represents a JavaSettings.
                 * @implements IJavaSettings
                 * @constructor
                 * @param {google.api.IJavaSettings=} [properties] Properties to set
                 */
                function JavaSettings(properties) {
                    this.serviceClassNames = {};
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * JavaSettings libraryPackage.
                 * @member {string} libraryPackage
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.libraryPackage = "";
    
                /**
                 * JavaSettings serviceClassNames.
                 * @member {Object.<string,string>} serviceClassNames
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.serviceClassNames = $util.emptyObject;
    
                /**
                 * JavaSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.common = null;
    
                /**
                 * Creates a new JavaSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings=} [properties] Properties to set
                 * @returns {google.api.JavaSettings} JavaSettings instance
                 */
                JavaSettings.create = function create(properties) {
                    return new JavaSettings(properties);
                };
    
                /**
                 * Encodes the specified JavaSettings message. Does not implicitly {@link google.api.JavaSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings} message JavaSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                JavaSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.libraryPackage != null && Object.hasOwnProperty.call(message, "libraryPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.libraryPackage);
                    if (message.serviceClassNames != null && Object.hasOwnProperty.call(message, "serviceClassNames"))
                        for (var keys = Object.keys(message.serviceClassNames), i = 0; i < keys.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.serviceClassNames[keys[i]]).ldelim();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified JavaSettings message, length delimited. Does not implicitly {@link google.api.JavaSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings} message JavaSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                JavaSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a JavaSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.JavaSettings} JavaSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                JavaSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.JavaSettings(), key, value;
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.libraryPackage = reader.string();
                                break;
                            }
                        case 2: {
                                if (message.serviceClassNames === $util.emptyObject)
                                    message.serviceClassNames = {};
                                var end2 = reader.uint32() + reader.pos;
                                key = "";
                                value = "";
                                while (reader.pos < end2) {
                                    var tag2 = reader.uint32();
                                    switch (tag2 >>> 3) {
                                    case 1:
                                        key = reader.string();
                                        break;
                                    case 2:
                                        value = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag2 & 7);
                                        break;
                                    }
                                }
                                message.serviceClassNames[key] = value;
                                break;
                            }
                        case 3: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a JavaSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.JavaSettings} JavaSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                JavaSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a JavaSettings message.
                 * @function verify
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                JavaSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.libraryPackage != null && message.hasOwnProperty("libraryPackage"))
                        if (!$util.isString(message.libraryPackage))
                            return "libraryPackage: string expected";
                    if (message.serviceClassNames != null && message.hasOwnProperty("serviceClassNames")) {
                        if (!$util.isObject(message.serviceClassNames))
                            return "serviceClassNames: object expected";
                        var key = Object.keys(message.serviceClassNames);
                        for (var i = 0; i < key.length; ++i)
                            if (!$util.isString(message.serviceClassNames[key[i]]))
                                return "serviceClassNames: string{k:string} expected";
                    }
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a JavaSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.JavaSettings} JavaSettings
                 */
                JavaSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.JavaSettings)
                        return object;
                    var message = new $root.google.api.JavaSettings();
                    if (object.libraryPackage != null)
                        message.libraryPackage = String(object.libraryPackage);
                    if (object.serviceClassNames) {
                        if (typeof object.serviceClassNames !== "object")
                            throw TypeError(".google.api.JavaSettings.serviceClassNames: object expected");
                        message.serviceClassNames = {};
                        for (var keys = Object.keys(object.serviceClassNames), i = 0; i < keys.length; ++i)
                            message.serviceClassNames[keys[i]] = String(object.serviceClassNames[keys[i]]);
                    }
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.JavaSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a JavaSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.JavaSettings} message JavaSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                JavaSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.objects || options.defaults)
                        object.serviceClassNames = {};
                    if (options.defaults) {
                        object.libraryPackage = "";
                        object.common = null;
                    }
                    if (message.libraryPackage != null && message.hasOwnProperty("libraryPackage"))
                        object.libraryPackage = message.libraryPackage;
                    var keys2;
                    if (message.serviceClassNames && (keys2 = Object.keys(message.serviceClassNames)).length) {
                        object.serviceClassNames = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.serviceClassNames[keys2[j]] = message.serviceClassNames[keys2[j]];
                    }
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this JavaSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.JavaSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                JavaSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for JavaSettings
                 * @function getTypeUrl
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                JavaSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.JavaSettings";
                };
    
                return JavaSettings;
            })();
    
            api.CppSettings = (function() {
    
                /**
                 * Properties of a CppSettings.
                 * @memberof google.api
                 * @interface ICppSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] CppSettings common
                 */
    
                /**
                 * Constructs a new CppSettings.
                 * @memberof google.api
                 * @classdesc Represents a CppSettings.
                 * @implements ICppSettings
                 * @constructor
                 * @param {google.api.ICppSettings=} [properties] Properties to set
                 */
                function CppSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CppSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.CppSettings
                 * @instance
                 */
                CppSettings.prototype.common = null;
    
                /**
                 * Creates a new CppSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings=} [properties] Properties to set
                 * @returns {google.api.CppSettings} CppSettings instance
                 */
                CppSettings.create = function create(properties) {
                    return new CppSettings(properties);
                };
    
                /**
                 * Encodes the specified CppSettings message. Does not implicitly {@link google.api.CppSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings} message CppSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CppSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified CppSettings message, length delimited. Does not implicitly {@link google.api.CppSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings} message CppSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CppSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CppSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CppSettings} CppSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CppSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CppSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CppSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CppSettings} CppSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CppSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CppSettings message.
                 * @function verify
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CppSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a CppSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CppSettings} CppSettings
                 */
                CppSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CppSettings)
                        return object;
                    var message = new $root.google.api.CppSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.CppSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a CppSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.CppSettings} message CppSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CppSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this CppSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.CppSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CppSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CppSettings
                 * @function getTypeUrl
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CppSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CppSettings";
                };
    
                return CppSettings;
            })();
    
            api.PhpSettings = (function() {
    
                /**
                 * Properties of a PhpSettings.
                 * @memberof google.api
                 * @interface IPhpSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] PhpSettings common
                 */
    
                /**
                 * Constructs a new PhpSettings.
                 * @memberof google.api
                 * @classdesc Represents a PhpSettings.
                 * @implements IPhpSettings
                 * @constructor
                 * @param {google.api.IPhpSettings=} [properties] Properties to set
                 */
                function PhpSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * PhpSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.PhpSettings
                 * @instance
                 */
                PhpSettings.prototype.common = null;
    
                /**
                 * Creates a new PhpSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings=} [properties] Properties to set
                 * @returns {google.api.PhpSettings} PhpSettings instance
                 */
                PhpSettings.create = function create(properties) {
                    return new PhpSettings(properties);
                };
    
                /**
                 * Encodes the specified PhpSettings message. Does not implicitly {@link google.api.PhpSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings} message PhpSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PhpSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified PhpSettings message, length delimited. Does not implicitly {@link google.api.PhpSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings} message PhpSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PhpSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a PhpSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.PhpSettings} PhpSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PhpSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.PhpSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a PhpSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.PhpSettings} PhpSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PhpSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a PhpSettings message.
                 * @function verify
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                PhpSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a PhpSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.PhpSettings} PhpSettings
                 */
                PhpSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.PhpSettings)
                        return object;
                    var message = new $root.google.api.PhpSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.PhpSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a PhpSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.PhpSettings} message PhpSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                PhpSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this PhpSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.PhpSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                PhpSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for PhpSettings
                 * @function getTypeUrl
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                PhpSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.PhpSettings";
                };
    
                return PhpSettings;
            })();
    
            api.PythonSettings = (function() {
    
                /**
                 * Properties of a PythonSettings.
                 * @memberof google.api
                 * @interface IPythonSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] PythonSettings common
                 */
    
                /**
                 * Constructs a new PythonSettings.
                 * @memberof google.api
                 * @classdesc Represents a PythonSettings.
                 * @implements IPythonSettings
                 * @constructor
                 * @param {google.api.IPythonSettings=} [properties] Properties to set
                 */
                function PythonSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * PythonSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.PythonSettings
                 * @instance
                 */
                PythonSettings.prototype.common = null;
    
                /**
                 * Creates a new PythonSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings=} [properties] Properties to set
                 * @returns {google.api.PythonSettings} PythonSettings instance
                 */
                PythonSettings.create = function create(properties) {
                    return new PythonSettings(properties);
                };
    
                /**
                 * Encodes the specified PythonSettings message. Does not implicitly {@link google.api.PythonSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings} message PythonSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PythonSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified PythonSettings message, length delimited. Does not implicitly {@link google.api.PythonSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings} message PythonSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PythonSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a PythonSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.PythonSettings} PythonSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PythonSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.PythonSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a PythonSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.PythonSettings} PythonSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PythonSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a PythonSettings message.
                 * @function verify
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                PythonSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a PythonSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.PythonSettings} PythonSettings
                 */
                PythonSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.PythonSettings)
                        return object;
                    var message = new $root.google.api.PythonSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.PythonSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a PythonSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.PythonSettings} message PythonSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                PythonSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this PythonSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.PythonSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                PythonSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for PythonSettings
                 * @function getTypeUrl
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                PythonSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.PythonSettings";
                };
    
                return PythonSettings;
            })();
    
            api.NodeSettings = (function() {
    
                /**
                 * Properties of a NodeSettings.
                 * @memberof google.api
                 * @interface INodeSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] NodeSettings common
                 */
    
                /**
                 * Constructs a new NodeSettings.
                 * @memberof google.api
                 * @classdesc Represents a NodeSettings.
                 * @implements INodeSettings
                 * @constructor
                 * @param {google.api.INodeSettings=} [properties] Properties to set
                 */
                function NodeSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * NodeSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.NodeSettings
                 * @instance
                 */
                NodeSettings.prototype.common = null;
    
                /**
                 * Creates a new NodeSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings=} [properties] Properties to set
                 * @returns {google.api.NodeSettings} NodeSettings instance
                 */
                NodeSettings.create = function create(properties) {
                    return new NodeSettings(properties);
                };
    
                /**
                 * Encodes the specified NodeSettings message. Does not implicitly {@link google.api.NodeSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings} message NodeSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                NodeSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified NodeSettings message, length delimited. Does not implicitly {@link google.api.NodeSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings} message NodeSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                NodeSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a NodeSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.NodeSettings} NodeSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                NodeSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.NodeSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a NodeSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.NodeSettings} NodeSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                NodeSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a NodeSettings message.
                 * @function verify
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                NodeSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a NodeSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.NodeSettings} NodeSettings
                 */
                NodeSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.NodeSettings)
                        return object;
                    var message = new $root.google.api.NodeSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.NodeSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a NodeSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.NodeSettings} message NodeSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                NodeSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this NodeSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.NodeSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                NodeSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for NodeSettings
                 * @function getTypeUrl
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                NodeSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.NodeSettings";
                };
    
                return NodeSettings;
            })();
    
            api.DotnetSettings = (function() {
    
                /**
                 * Properties of a DotnetSettings.
                 * @memberof google.api
                 * @interface IDotnetSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] DotnetSettings common
                 */
    
                /**
                 * Constructs a new DotnetSettings.
                 * @memberof google.api
                 * @classdesc Represents a DotnetSettings.
                 * @implements IDotnetSettings
                 * @constructor
                 * @param {google.api.IDotnetSettings=} [properties] Properties to set
                 */
                function DotnetSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DotnetSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.DotnetSettings
                 * @instance
                 */
                DotnetSettings.prototype.common = null;
    
                /**
                 * Creates a new DotnetSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings=} [properties] Properties to set
                 * @returns {google.api.DotnetSettings} DotnetSettings instance
                 */
                DotnetSettings.create = function create(properties) {
                    return new DotnetSettings(properties);
                };
    
                /**
                 * Encodes the specified DotnetSettings message. Does not implicitly {@link google.api.DotnetSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings} message DotnetSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DotnetSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified DotnetSettings message, length delimited. Does not implicitly {@link google.api.DotnetSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings} message DotnetSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DotnetSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DotnetSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DotnetSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.DotnetSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DotnetSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DotnetSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DotnetSettings message.
                 * @function verify
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DotnetSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a DotnetSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 */
                DotnetSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.DotnetSettings)
                        return object;
                    var message = new $root.google.api.DotnetSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.DotnetSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DotnetSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.DotnetSettings} message DotnetSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DotnetSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this DotnetSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.DotnetSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DotnetSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DotnetSettings
                 * @function getTypeUrl
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DotnetSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.DotnetSettings";
                };
    
                return DotnetSettings;
            })();
    
            api.RubySettings = (function() {
    
                /**
                 * Properties of a RubySettings.
                 * @memberof google.api
                 * @interface IRubySettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] RubySettings common
                 */
    
                /**
                 * Constructs a new RubySettings.
                 * @memberof google.api
                 * @classdesc Represents a RubySettings.
                 * @implements IRubySettings
                 * @constructor
                 * @param {google.api.IRubySettings=} [properties] Properties to set
                 */
                function RubySettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * RubySettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.RubySettings
                 * @instance
                 */
                RubySettings.prototype.common = null;
    
                /**
                 * Creates a new RubySettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings=} [properties] Properties to set
                 * @returns {google.api.RubySettings} RubySettings instance
                 */
                RubySettings.create = function create(properties) {
                    return new RubySettings(properties);
                };
    
                /**
                 * Encodes the specified RubySettings message. Does not implicitly {@link google.api.RubySettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings} message RubySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RubySettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified RubySettings message, length delimited. Does not implicitly {@link google.api.RubySettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings} message RubySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RubySettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a RubySettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.RubySettings} RubySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RubySettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.RubySettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a RubySettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.RubySettings} RubySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RubySettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a RubySettings message.
                 * @function verify
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                RubySettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a RubySettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.RubySettings} RubySettings
                 */
                RubySettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.RubySettings)
                        return object;
                    var message = new $root.google.api.RubySettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.RubySettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a RubySettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.RubySettings} message RubySettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                RubySettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this RubySettings to JSON.
                 * @function toJSON
                 * @memberof google.api.RubySettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                RubySettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for RubySettings
                 * @function getTypeUrl
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                RubySettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.RubySettings";
                };
    
                return RubySettings;
            })();
    
            api.GoSettings = (function() {
    
                /**
                 * Properties of a GoSettings.
                 * @memberof google.api
                 * @interface IGoSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] GoSettings common
                 */
    
                /**
                 * Constructs a new GoSettings.
                 * @memberof google.api
                 * @classdesc Represents a GoSettings.
                 * @implements IGoSettings
                 * @constructor
                 * @param {google.api.IGoSettings=} [properties] Properties to set
                 */
                function GoSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GoSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.GoSettings
                 * @instance
                 */
                GoSettings.prototype.common = null;
    
                /**
                 * Creates a new GoSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings=} [properties] Properties to set
                 * @returns {google.api.GoSettings} GoSettings instance
                 */
                GoSettings.create = function create(properties) {
                    return new GoSettings(properties);
                };
    
                /**
                 * Encodes the specified GoSettings message. Does not implicitly {@link google.api.GoSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings} message GoSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GoSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GoSettings message, length delimited. Does not implicitly {@link google.api.GoSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings} message GoSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GoSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GoSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.GoSettings} GoSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GoSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.GoSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GoSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.GoSettings} GoSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GoSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GoSettings message.
                 * @function verify
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GoSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a GoSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.GoSettings} GoSettings
                 */
                GoSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.GoSettings)
                        return object;
                    var message = new $root.google.api.GoSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.GoSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GoSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.GoSettings} message GoSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GoSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this GoSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.GoSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GoSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GoSettings
                 * @function getTypeUrl
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GoSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.GoSettings";
                };
    
                return GoSettings;
            })();
    
            api.MethodSettings = (function() {
    
                /**
                 * Properties of a MethodSettings.
                 * @memberof google.api
                 * @interface IMethodSettings
                 * @property {string|null} [selector] MethodSettings selector
                 * @property {google.api.MethodSettings.ILongRunning|null} [longRunning] MethodSettings longRunning
                 */
    
                /**
                 * Constructs a new MethodSettings.
                 * @memberof google.api
                 * @classdesc Represents a MethodSettings.
                 * @implements IMethodSettings
                 * @constructor
                 * @param {google.api.IMethodSettings=} [properties] Properties to set
                 */
                function MethodSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodSettings selector.
                 * @member {string} selector
                 * @memberof google.api.MethodSettings
                 * @instance
                 */
                MethodSettings.prototype.selector = "";
    
                /**
                 * MethodSettings longRunning.
                 * @member {google.api.MethodSettings.ILongRunning|null|undefined} longRunning
                 * @memberof google.api.MethodSettings
                 * @instance
                 */
                MethodSettings.prototype.longRunning = null;
    
                /**
                 * Creates a new MethodSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings=} [properties] Properties to set
                 * @returns {google.api.MethodSettings} MethodSettings instance
                 */
                MethodSettings.create = function create(properties) {
                    return new MethodSettings(properties);
                };
    
                /**
                 * Encodes the specified MethodSettings message. Does not implicitly {@link google.api.MethodSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings} message MethodSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.longRunning != null && Object.hasOwnProperty.call(message, "longRunning"))
                        $root.google.api.MethodSettings.LongRunning.encode(message.longRunning, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodSettings message, length delimited. Does not implicitly {@link google.api.MethodSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings} message MethodSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.MethodSettings} MethodSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.MethodSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.longRunning = $root.google.api.MethodSettings.LongRunning.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.MethodSettings} MethodSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodSettings message.
                 * @function verify
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.longRunning != null && message.hasOwnProperty("longRunning")) {
                        var error = $root.google.api.MethodSettings.LongRunning.verify(message.longRunning);
                        if (error)
                            return "longRunning." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.MethodSettings} MethodSettings
                 */
                MethodSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.MethodSettings)
                        return object;
                    var message = new $root.google.api.MethodSettings();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.longRunning != null) {
                        if (typeof object.longRunning !== "object")
                            throw TypeError(".google.api.MethodSettings.longRunning: object expected");
                        message.longRunning = $root.google.api.MethodSettings.LongRunning.fromObject(object.longRunning);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.MethodSettings} message MethodSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.selector = "";
                        object.longRunning = null;
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.longRunning != null && message.hasOwnProperty("longRunning"))
                        object.longRunning = $root.google.api.MethodSettings.LongRunning.toObject(message.longRunning, options);
                    return object;
                };
    
                /**
                 * Converts this MethodSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.MethodSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodSettings
                 * @function getTypeUrl
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.MethodSettings";
                };
    
                MethodSettings.LongRunning = (function() {
    
                    /**
                     * Properties of a LongRunning.
                     * @memberof google.api.MethodSettings
                     * @interface ILongRunning
                     * @property {google.protobuf.IDuration|null} [initialPollDelay] LongRunning initialPollDelay
                     * @property {number|null} [pollDelayMultiplier] LongRunning pollDelayMultiplier
                     * @property {google.protobuf.IDuration|null} [maxPollDelay] LongRunning maxPollDelay
                     * @property {google.protobuf.IDuration|null} [totalPollTimeout] LongRunning totalPollTimeout
                     */
    
                    /**
                     * Constructs a new LongRunning.
                     * @memberof google.api.MethodSettings
                     * @classdesc Represents a LongRunning.
                     * @implements ILongRunning
                     * @constructor
                     * @param {google.api.MethodSettings.ILongRunning=} [properties] Properties to set
                     */
                    function LongRunning(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * LongRunning initialPollDelay.
                     * @member {google.protobuf.IDuration|null|undefined} initialPollDelay
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.initialPollDelay = null;
    
                    /**
                     * LongRunning pollDelayMultiplier.
                     * @member {number} pollDelayMultiplier
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.pollDelayMultiplier = 0;
    
                    /**
                     * LongRunning maxPollDelay.
                     * @member {google.protobuf.IDuration|null|undefined} maxPollDelay
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.maxPollDelay = null;
    
                    /**
                     * LongRunning totalPollTimeout.
                     * @member {google.protobuf.IDuration|null|undefined} totalPollTimeout
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.totalPollTimeout = null;
    
                    /**
                     * Creates a new LongRunning instance using the specified properties.
                     * @function create
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning=} [properties] Properties to set
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning instance
                     */
                    LongRunning.create = function create(properties) {
                        return new LongRunning(properties);
                    };
    
                    /**
                     * Encodes the specified LongRunning message. Does not implicitly {@link google.api.MethodSettings.LongRunning.verify|verify} messages.
                     * @function encode
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning} message LongRunning message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LongRunning.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.initialPollDelay != null && Object.hasOwnProperty.call(message, "initialPollDelay"))
                            $root.google.protobuf.Duration.encode(message.initialPollDelay, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.pollDelayMultiplier != null && Object.hasOwnProperty.call(message, "pollDelayMultiplier"))
                            writer.uint32(/* id 2, wireType 5 =*/21).float(message.pollDelayMultiplier);
                        if (message.maxPollDelay != null && Object.hasOwnProperty.call(message, "maxPollDelay"))
                            $root.google.protobuf.Duration.encode(message.maxPollDelay, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.totalPollTimeout != null && Object.hasOwnProperty.call(message, "totalPollTimeout"))
                            $root.google.protobuf.Duration.encode(message.totalPollTimeout, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified LongRunning message, length delimited. Does not implicitly {@link google.api.MethodSettings.LongRunning.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning} message LongRunning message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LongRunning.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a LongRunning message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LongRunning.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.MethodSettings.LongRunning();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.initialPollDelay = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.pollDelayMultiplier = reader.float();
                                    break;
                                }
                            case 3: {
                                    message.maxPollDelay = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            case 4: {
                                    message.totalPollTimeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a LongRunning message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LongRunning.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a LongRunning message.
                     * @function verify
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    LongRunning.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.initialPollDelay != null && message.hasOwnProperty("initialPollDelay")) {
                            var error = $root.google.protobuf.Duration.verify(message.initialPollDelay);
                            if (error)
                                return "initialPollDelay." + error;
                        }
                        if (message.pollDelayMultiplier != null && message.hasOwnProperty("pollDelayMultiplier"))
                            if (typeof message.pollDelayMultiplier !== "number")
                                return "pollDelayMultiplier: number expected";
                        if (message.maxPollDelay != null && message.hasOwnProperty("maxPollDelay")) {
                            var error = $root.google.protobuf.Duration.verify(message.maxPollDelay);
                            if (error)
                                return "maxPollDelay." + error;
                        }
                        if (message.totalPollTimeout != null && message.hasOwnProperty("totalPollTimeout")) {
                            var error = $root.google.protobuf.Duration.verify(message.totalPollTimeout);
                            if (error)
                                return "totalPollTimeout." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a LongRunning message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     */
                    LongRunning.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.api.MethodSettings.LongRunning)
                            return object;
                        var message = new $root.google.api.MethodSettings.LongRunning();
                        if (object.initialPollDelay != null) {
                            if (typeof object.initialPollDelay !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.initialPollDelay: object expected");
                            message.initialPollDelay = $root.google.protobuf.Duration.fromObject(object.initialPollDelay);
                        }
                        if (object.pollDelayMultiplier != null)
                            message.pollDelayMultiplier = Number(object.pollDelayMultiplier);
                        if (object.maxPollDelay != null) {
                            if (typeof object.maxPollDelay !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.maxPollDelay: object expected");
                            message.maxPollDelay = $root.google.protobuf.Duration.fromObject(object.maxPollDelay);
                        }
                        if (object.totalPollTimeout != null) {
                            if (typeof object.totalPollTimeout !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.totalPollTimeout: object expected");
                            message.totalPollTimeout = $root.google.protobuf.Duration.fromObject(object.totalPollTimeout);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a LongRunning message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.LongRunning} message LongRunning
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    LongRunning.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.initialPollDelay = null;
                            object.pollDelayMultiplier = 0;
                            object.maxPollDelay = null;
                            object.totalPollTimeout = null;
                        }
                        if (message.initialPollDelay != null && message.hasOwnProperty("initialPollDelay"))
                            object.initialPollDelay = $root.google.protobuf.Duration.toObject(message.initialPollDelay, options);
                        if (message.pollDelayMultiplier != null && message.hasOwnProperty("pollDelayMultiplier"))
                            object.pollDelayMultiplier = options.json && !isFinite(message.pollDelayMultiplier) ? String(message.pollDelayMultiplier) : message.pollDelayMultiplier;
                        if (message.maxPollDelay != null && message.hasOwnProperty("maxPollDelay"))
                            object.maxPollDelay = $root.google.protobuf.Duration.toObject(message.maxPollDelay, options);
                        if (message.totalPollTimeout != null && message.hasOwnProperty("totalPollTimeout"))
                            object.totalPollTimeout = $root.google.protobuf.Duration.toObject(message.totalPollTimeout, options);
                        return object;
                    };
    
                    /**
                     * Converts this LongRunning to JSON.
                     * @function toJSON
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    LongRunning.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for LongRunning
                     * @function getTypeUrl
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    LongRunning.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.api.MethodSettings.LongRunning";
                    };
    
                    return LongRunning;
                })();
    
                return MethodSettings;
            })();
    
            /**
             * ClientLibraryOrganization enum.
             * @name google.api.ClientLibraryOrganization
             * @enum {number}
             * @property {number} CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED=0 CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED value
             * @property {number} CLOUD=1 CLOUD value
             * @property {number} ADS=2 ADS value
             * @property {number} PHOTOS=3 PHOTOS value
             * @property {number} STREET_VIEW=4 STREET_VIEW value
             */
            api.ClientLibraryOrganization = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED"] = 0;
                values[valuesById[1] = "CLOUD"] = 1;
                values[valuesById[2] = "ADS"] = 2;
                values[valuesById[3] = "PHOTOS"] = 3;
                values[valuesById[4] = "STREET_VIEW"] = 4;
                return values;
            })();
    
            /**
             * ClientLibraryDestination enum.
             * @name google.api.ClientLibraryDestination
             * @enum {number}
             * @property {number} CLIENT_LIBRARY_DESTINATION_UNSPECIFIED=0 CLIENT_LIBRARY_DESTINATION_UNSPECIFIED value
             * @property {number} GITHUB=10 GITHUB value
             * @property {number} PACKAGE_MANAGER=20 PACKAGE_MANAGER value
             */
            api.ClientLibraryDestination = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED"] = 0;
                values[valuesById[10] = "GITHUB"] = 10;
                values[valuesById[20] = "PACKAGE_MANAGER"] = 20;
                return values;
            })();
    
            /**
             * LaunchStage enum.
             * @name google.api.LaunchStage
             * @enum {number}
             * @property {number} LAUNCH_STAGE_UNSPECIFIED=0 LAUNCH_STAGE_UNSPECIFIED value
             * @property {number} UNIMPLEMENTED=6 UNIMPLEMENTED value
             * @property {number} PRELAUNCH=7 PRELAUNCH value
             * @property {number} EARLY_ACCESS=1 EARLY_ACCESS value
             * @property {number} ALPHA=2 ALPHA value
             * @property {number} BETA=3 BETA value
             * @property {number} GA=4 GA value
             * @property {number} DEPRECATED=5 DEPRECATED value
             */
            api.LaunchStage = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "LAUNCH_STAGE_UNSPECIFIED"] = 0;
                values[valuesById[6] = "UNIMPLEMENTED"] = 6;
                values[valuesById[7] = "PRELAUNCH"] = 7;
                values[valuesById[1] = "EARLY_ACCESS"] = 1;
                values[valuesById[2] = "ALPHA"] = 2;
                values[valuesById[3] = "BETA"] = 3;
                values[valuesById[4] = "GA"] = 4;
                values[valuesById[5] = "DEPRECATED"] = 5;
                return values;
            })();
    
            /**
             * FieldBehavior enum.
             * @name google.api.FieldBehavior
             * @enum {number}
             * @property {number} FIELD_BEHAVIOR_UNSPECIFIED=0 FIELD_BEHAVIOR_UNSPECIFIED value
             * @property {number} OPTIONAL=1 OPTIONAL value
             * @property {number} REQUIRED=2 REQUIRED value
             * @property {number} OUTPUT_ONLY=3 OUTPUT_ONLY value
             * @property {number} INPUT_ONLY=4 INPUT_ONLY value
             * @property {number} IMMUTABLE=5 IMMUTABLE value
             * @property {number} UNORDERED_LIST=6 UNORDERED_LIST value
             * @property {number} NON_EMPTY_DEFAULT=7 NON_EMPTY_DEFAULT value
             */
            api.FieldBehavior = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "FIELD_BEHAVIOR_UNSPECIFIED"] = 0;
                values[valuesById[1] = "OPTIONAL"] = 1;
                values[valuesById[2] = "REQUIRED"] = 2;
                values[valuesById[3] = "OUTPUT_ONLY"] = 3;
                values[valuesById[4] = "INPUT_ONLY"] = 4;
                values[valuesById[5] = "IMMUTABLE"] = 5;
                values[valuesById[6] = "UNORDERED_LIST"] = 6;
                values[valuesById[7] = "NON_EMPTY_DEFAULT"] = 7;
                return values;
            })();
    
            api.ResourceDescriptor = (function() {
    
                /**
                 * Properties of a ResourceDescriptor.
                 * @memberof google.api
                 * @interface IResourceDescriptor
                 * @property {string|null} [type] ResourceDescriptor type
                 * @property {Array.<string>|null} [pattern] ResourceDescriptor pattern
                 * @property {string|null} [nameField] ResourceDescriptor nameField
                 * @property {google.api.ResourceDescriptor.History|null} [history] ResourceDescriptor history
                 * @property {string|null} [plural] ResourceDescriptor plural
                 * @property {string|null} [singular] ResourceDescriptor singular
                 * @property {Array.<google.api.ResourceDescriptor.Style>|null} [style] ResourceDescriptor style
                 */
    
                /**
                 * Constructs a new ResourceDescriptor.
                 * @memberof google.api
                 * @classdesc Represents a ResourceDescriptor.
                 * @implements IResourceDescriptor
                 * @constructor
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 */
                function ResourceDescriptor(properties) {
                    this.pattern = [];
                    this.style = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceDescriptor type.
                 * @member {string} type
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.type = "";
    
                /**
                 * ResourceDescriptor pattern.
                 * @member {Array.<string>} pattern
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.pattern = $util.emptyArray;
    
                /**
                 * ResourceDescriptor nameField.
                 * @member {string} nameField
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.nameField = "";
    
                /**
                 * ResourceDescriptor history.
                 * @member {google.api.ResourceDescriptor.History} history
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.history = 0;
    
                /**
                 * ResourceDescriptor plural.
                 * @member {string} plural
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.plural = "";
    
                /**
                 * ResourceDescriptor singular.
                 * @member {string} singular
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.singular = "";
    
                /**
                 * ResourceDescriptor style.
                 * @member {Array.<google.api.ResourceDescriptor.Style>} style
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.style = $util.emptyArray;
    
                /**
                 * Creates a new ResourceDescriptor instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor instance
                 */
                ResourceDescriptor.create = function create(properties) {
                    return new ResourceDescriptor(properties);
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.pattern != null && message.pattern.length)
                        for (var i = 0; i < message.pattern.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.pattern[i]);
                    if (message.nameField != null && Object.hasOwnProperty.call(message, "nameField"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.nameField);
                    if (message.history != null && Object.hasOwnProperty.call(message, "history"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.history);
                    if (message.plural != null && Object.hasOwnProperty.call(message, "plural"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.plural);
                    if (message.singular != null && Object.hasOwnProperty.call(message, "singular"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.singular);
                    if (message.style != null && message.style.length) {
                        writer.uint32(/* id 10, wireType 2 =*/82).fork();
                        for (var i = 0; i < message.style.length; ++i)
                            writer.int32(message.style[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message, length delimited. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceDescriptor();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.pattern && message.pattern.length))
                                    message.pattern = [];
                                message.pattern.push(reader.string());
                                break;
                            }
                        case 3: {
                                message.nameField = reader.string();
                                break;
                            }
                        case 4: {
                                message.history = reader.int32();
                                break;
                            }
                        case 5: {
                                message.plural = reader.string();
                                break;
                            }
                        case 6: {
                                message.singular = reader.string();
                                break;
                            }
                        case 10: {
                                if (!(message.style && message.style.length))
                                    message.style = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.style.push(reader.int32());
                                } else
                                    message.style.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceDescriptor message.
                 * @function verify
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceDescriptor.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.pattern != null && message.hasOwnProperty("pattern")) {
                        if (!Array.isArray(message.pattern))
                            return "pattern: array expected";
                        for (var i = 0; i < message.pattern.length; ++i)
                            if (!$util.isString(message.pattern[i]))
                                return "pattern: string[] expected";
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        if (!$util.isString(message.nameField))
                            return "nameField: string expected";
                    if (message.history != null && message.hasOwnProperty("history"))
                        switch (message.history) {
                        default:
                            return "history: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        if (!$util.isString(message.plural))
                            return "plural: string expected";
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        if (!$util.isString(message.singular))
                            return "singular: string expected";
                    if (message.style != null && message.hasOwnProperty("style")) {
                        if (!Array.isArray(message.style))
                            return "style: array expected";
                        for (var i = 0; i < message.style.length; ++i)
                            switch (message.style[i]) {
                            default:
                                return "style: enum value[] expected";
                            case 0:
                            case 1:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a ResourceDescriptor message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 */
                ResourceDescriptor.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceDescriptor)
                        return object;
                    var message = new $root.google.api.ResourceDescriptor();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.pattern) {
                        if (!Array.isArray(object.pattern))
                            throw TypeError(".google.api.ResourceDescriptor.pattern: array expected");
                        message.pattern = [];
                        for (var i = 0; i < object.pattern.length; ++i)
                            message.pattern[i] = String(object.pattern[i]);
                    }
                    if (object.nameField != null)
                        message.nameField = String(object.nameField);
                    switch (object.history) {
                    default:
                        if (typeof object.history === "number") {
                            message.history = object.history;
                            break;
                        }
                        break;
                    case "HISTORY_UNSPECIFIED":
                    case 0:
                        message.history = 0;
                        break;
                    case "ORIGINALLY_SINGLE_PATTERN":
                    case 1:
                        message.history = 1;
                        break;
                    case "FUTURE_MULTI_PATTERN":
                    case 2:
                        message.history = 2;
                        break;
                    }
                    if (object.plural != null)
                        message.plural = String(object.plural);
                    if (object.singular != null)
                        message.singular = String(object.singular);
                    if (object.style) {
                        if (!Array.isArray(object.style))
                            throw TypeError(".google.api.ResourceDescriptor.style: array expected");
                        message.style = [];
                        for (var i = 0; i < object.style.length; ++i)
                            switch (object.style[i]) {
                            default:
                                if (typeof object.style[i] === "number") {
                                    message.style[i] = object.style[i];
                                    break;
                                }
                            case "STYLE_UNSPECIFIED":
                            case 0:
                                message.style[i] = 0;
                                break;
                            case "DECLARATIVE_FRIENDLY":
                            case 1:
                                message.style[i] = 1;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceDescriptor message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.ResourceDescriptor} message ResourceDescriptor
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceDescriptor.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.pattern = [];
                        object.style = [];
                    }
                    if (options.defaults) {
                        object.type = "";
                        object.nameField = "";
                        object.history = options.enums === String ? "HISTORY_UNSPECIFIED" : 0;
                        object.plural = "";
                        object.singular = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.pattern && message.pattern.length) {
                        object.pattern = [];
                        for (var j = 0; j < message.pattern.length; ++j)
                            object.pattern[j] = message.pattern[j];
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        object.nameField = message.nameField;
                    if (message.history != null && message.hasOwnProperty("history"))
                        object.history = options.enums === String ? $root.google.api.ResourceDescriptor.History[message.history] === undefined ? message.history : $root.google.api.ResourceDescriptor.History[message.history] : message.history;
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        object.plural = message.plural;
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        object.singular = message.singular;
                    if (message.style && message.style.length) {
                        object.style = [];
                        for (var j = 0; j < message.style.length; ++j)
                            object.style[j] = options.enums === String ? $root.google.api.ResourceDescriptor.Style[message.style[j]] === undefined ? message.style[j] : $root.google.api.ResourceDescriptor.Style[message.style[j]] : message.style[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this ResourceDescriptor to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceDescriptor.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceDescriptor
                 * @function getTypeUrl
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceDescriptor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceDescriptor";
                };
    
                /**
                 * History enum.
                 * @name google.api.ResourceDescriptor.History
                 * @enum {number}
                 * @property {number} HISTORY_UNSPECIFIED=0 HISTORY_UNSPECIFIED value
                 * @property {number} ORIGINALLY_SINGLE_PATTERN=1 ORIGINALLY_SINGLE_PATTERN value
                 * @property {number} FUTURE_MULTI_PATTERN=2 FUTURE_MULTI_PATTERN value
                 */
                ResourceDescriptor.History = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "HISTORY_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "ORIGINALLY_SINGLE_PATTERN"] = 1;
                    values[valuesById[2] = "FUTURE_MULTI_PATTERN"] = 2;
                    return values;
                })();
    
                /**
                 * Style enum.
                 * @name google.api.ResourceDescriptor.Style
                 * @enum {number}
                 * @property {number} STYLE_UNSPECIFIED=0 STYLE_UNSPECIFIED value
                 * @property {number} DECLARATIVE_FRIENDLY=1 DECLARATIVE_FRIENDLY value
                 */
                ResourceDescriptor.Style = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STYLE_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "DECLARATIVE_FRIENDLY"] = 1;
                    return values;
                })();
    
                return ResourceDescriptor;
            })();
    
            api.ResourceReference = (function() {
    
                /**
                 * Properties of a ResourceReference.
                 * @memberof google.api
                 * @interface IResourceReference
                 * @property {string|null} [type] ResourceReference type
                 * @property {string|null} [childType] ResourceReference childType
                 */
    
                /**
                 * Constructs a new ResourceReference.
                 * @memberof google.api
                 * @classdesc Represents a ResourceReference.
                 * @implements IResourceReference
                 * @constructor
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 */
                function ResourceReference(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceReference type.
                 * @member {string} type
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.type = "";
    
                /**
                 * ResourceReference childType.
                 * @member {string} childType
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.childType = "";
    
                /**
                 * Creates a new ResourceReference instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 * @returns {google.api.ResourceReference} ResourceReference instance
                 */
                ResourceReference.create = function create(properties) {
                    return new ResourceReference(properties);
                };
    
                /**
                 * Encodes the specified ResourceReference message. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.childType != null && Object.hasOwnProperty.call(message, "childType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.childType);
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceReference message, length delimited. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceReference();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                message.childType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceReference message.
                 * @function verify
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceReference.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        if (!$util.isString(message.childType))
                            return "childType: string expected";
                    return null;
                };
    
                /**
                 * Creates a ResourceReference message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceReference} ResourceReference
                 */
                ResourceReference.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceReference)
                        return object;
                    var message = new $root.google.api.ResourceReference();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.childType != null)
                        message.childType = String(object.childType);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceReference message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.ResourceReference} message ResourceReference
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceReference.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type = "";
                        object.childType = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        object.childType = message.childType;
                    return object;
                };
    
                /**
                 * Converts this ResourceReference to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceReference
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceReference.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceReference
                 * @function getTypeUrl
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceReference.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceReference";
                };
    
                return ResourceReference;
            })();
    
            api.HttpBody = (function() {
    
                /**
                 * Properties of a HttpBody.
                 * @memberof google.api
                 * @interface IHttpBody
                 * @property {string|null} [contentType] HttpBody contentType
                 * @property {Uint8Array|null} [data] HttpBody data
                 * @property {Array.<google.protobuf.IAny>|null} [extensions] HttpBody extensions
                 */
    
                /**
                 * Constructs a new HttpBody.
                 * @memberof google.api
                 * @classdesc Represents a HttpBody.
                 * @implements IHttpBody
                 * @constructor
                 * @param {google.api.IHttpBody=} [properties] Properties to set
                 */
                function HttpBody(properties) {
                    this.extensions = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * HttpBody contentType.
                 * @member {string} contentType
                 * @memberof google.api.HttpBody
                 * @instance
                 */
                HttpBody.prototype.contentType = "";
    
                /**
                 * HttpBody data.
                 * @member {Uint8Array} data
                 * @memberof google.api.HttpBody
                 * @instance
                 */
                HttpBody.prototype.data = $util.newBuffer([]);
    
                /**
                 * HttpBody extensions.
                 * @member {Array.<google.protobuf.IAny>} extensions
                 * @memberof google.api.HttpBody
                 * @instance
                 */
                HttpBody.prototype.extensions = $util.emptyArray;
    
                /**
                 * Creates a new HttpBody instance using the specified properties.
                 * @function create
                 * @memberof google.api.HttpBody
                 * @static
                 * @param {google.api.IHttpBody=} [properties] Properties to set
                 * @returns {google.api.HttpBody} HttpBody instance
                 */
                HttpBody.create = function create(properties) {
                    return new HttpBody(properties);
                };
    
                /**
                 * Encodes the specified HttpBody message. Does not implicitly {@link google.api.HttpBody.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.HttpBody
                 * @static
                 * @param {google.api.IHttpBody} message HttpBody message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpBody.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.contentType != null && Object.hasOwnProperty.call(message, "contentType"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.contentType);
                    if (message.data != null && Object.hasOwnProperty.call(message, "data"))
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.data);
                    if (message.extensions != null && message.extensions.length)
                        for (var i = 0; i < message.extensions.length; ++i)
                            $root.google.protobuf.Any.encode(message.extensions[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified HttpBody message, length delimited. Does not implicitly {@link google.api.HttpBody.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.HttpBody
                 * @static
                 * @param {google.api.IHttpBody} message HttpBody message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpBody.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a HttpBody message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.HttpBody
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.HttpBody} HttpBody
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpBody.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpBody();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.contentType = reader.string();
                                break;
                            }
                        case 2: {
                                message.data = reader.bytes();
                                break;
                            }
                        case 3: {
                                if (!(message.extensions && message.extensions.length))
                                    message.extensions = [];
                                message.extensions.push($root.google.protobuf.Any.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a HttpBody message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.HttpBody
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.HttpBody} HttpBody
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpBody.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a HttpBody message.
                 * @function verify
                 * @memberof google.api.HttpBody
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                HttpBody.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.contentType != null && message.hasOwnProperty("contentType"))
                        if (!$util.isString(message.contentType))
                            return "contentType: string expected";
                    if (message.data != null && message.hasOwnProperty("data"))
                        if (!(message.data && typeof message.data.length === "number" || $util.isString(message.data)))
                            return "data: buffer expected";
                    if (message.extensions != null && message.hasOwnProperty("extensions")) {
                        if (!Array.isArray(message.extensions))
                            return "extensions: array expected";
                        for (var i = 0; i < message.extensions.length; ++i) {
                            var error = $root.google.protobuf.Any.verify(message.extensions[i]);
                            if (error)
                                return "extensions." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a HttpBody message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.HttpBody
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.HttpBody} HttpBody
                 */
                HttpBody.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.HttpBody)
                        return object;
                    var message = new $root.google.api.HttpBody();
                    if (object.contentType != null)
                        message.contentType = String(object.contentType);
                    if (object.data != null)
                        if (typeof object.data === "string")
                            $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);
                        else if (object.data.length >= 0)
                            message.data = object.data;
                    if (object.extensions) {
                        if (!Array.isArray(object.extensions))
                            throw TypeError(".google.api.HttpBody.extensions: array expected");
                        message.extensions = [];
                        for (var i = 0; i < object.extensions.length; ++i) {
                            if (typeof object.extensions[i] !== "object")
                                throw TypeError(".google.api.HttpBody.extensions: object expected");
                            message.extensions[i] = $root.google.protobuf.Any.fromObject(object.extensions[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a HttpBody message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.HttpBody
                 * @static
                 * @param {google.api.HttpBody} message HttpBody
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                HttpBody.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.extensions = [];
                    if (options.defaults) {
                        object.contentType = "";
                        if (options.bytes === String)
                            object.data = "";
                        else {
                            object.data = [];
                            if (options.bytes !== Array)
                                object.data = $util.newBuffer(object.data);
                        }
                    }
                    if (message.contentType != null && message.hasOwnProperty("contentType"))
                        object.contentType = message.contentType;
                    if (message.data != null && message.hasOwnProperty("data"))
                        object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;
                    if (message.extensions && message.extensions.length) {
                        object.extensions = [];
                        for (var j = 0; j < message.extensions.length; ++j)
                            object.extensions[j] = $root.google.protobuf.Any.toObject(message.extensions[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this HttpBody to JSON.
                 * @function toJSON
                 * @memberof google.api.HttpBody
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                HttpBody.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for HttpBody
                 * @function getTypeUrl
                 * @memberof google.api.HttpBody
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                HttpBody.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.HttpBody";
                };
    
                return HttpBody;
            })();
    
            return api;
        })();
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.file && message.file.length))
                                    message.file = [];
                                message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorSet
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorSet";
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency
                 * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 * @property {string|null} [edition] FileDescriptorProto edition
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.publicDependency = [];
                    this.weakDependency = [];
                    this.messageType = [];
                    this.enumType = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto publicDependency.
                 * @member {Array.<number>} publicDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.publicDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weakDependency.
                 * @member {Array.<number>} weakDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weakDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto messageType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} messageType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.messageType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto sourceCodeInfo.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.sourceCodeInfo = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * FileDescriptorProto edition.
                 * @member {string} edition
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.edition = "";
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.messageType != null && message.messageType.length)
                        for (var i = 0; i < message.messageType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.sourceCodeInfo != null && Object.hasOwnProperty.call(message, "sourceCodeInfo"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.publicDependency != null && message.publicDependency.length)
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);
                    if (message.weakDependency != null && message.weakDependency.length)
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);
                    if (message.syntax != null && Object.hasOwnProperty.call(message, "syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    if (message.edition != null && Object.hasOwnProperty.call(message, "edition"))
                        writer.uint32(/* id 13, wireType 2 =*/106).string(message.edition);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message["package"] = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.dependency && message.dependency.length))
                                    message.dependency = [];
                                message.dependency.push(reader.string());
                                break;
                            }
                        case 10: {
                                if (!(message.publicDependency && message.publicDependency.length))
                                    message.publicDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.publicDependency.push(reader.int32());
                                } else
                                    message.publicDependency.push(reader.int32());
                                break;
                            }
                        case 11: {
                                if (!(message.weakDependency && message.weakDependency.length))
                                    message.weakDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.weakDependency.push(reader.int32());
                                } else
                                    message.weakDependency.push(reader.int32());
                                break;
                            }
                        case 4: {
                                if (!(message.messageType && message.messageType.length))
                                    message.messageType = [];
                                message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.service && message.service.length))
                                    message.service = [];
                                message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                                break;
                            }
                        case 12: {
                                message.syntax = reader.string();
                                break;
                            }
                        case 13: {
                                message.edition = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.publicDependency != null && message.hasOwnProperty("publicDependency")) {
                        if (!Array.isArray(message.publicDependency))
                            return "publicDependency: array expected";
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            if (!$util.isInteger(message.publicDependency[i]))
                                return "publicDependency: integer[] expected";
                    }
                    if (message.weakDependency != null && message.hasOwnProperty("weakDependency")) {
                        if (!Array.isArray(message.weakDependency))
                            return "weakDependency: array expected";
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            if (!$util.isInteger(message.weakDependency[i]))
                                return "weakDependency: integer[] expected";
                    }
                    if (message.messageType != null && message.hasOwnProperty("messageType")) {
                        if (!Array.isArray(message.messageType))
                            return "messageType: array expected";
                        for (var i = 0; i < message.messageType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);
                            if (error)
                                return "messageType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);
                        if (error)
                            return "sourceCodeInfo." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        if (!$util.isString(message.edition))
                            return "edition: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.publicDependency) {
                        if (!Array.isArray(object.publicDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
                        message.publicDependency = [];
                        for (var i = 0; i < object.publicDependency.length; ++i)
                            message.publicDependency[i] = object.publicDependency[i] | 0;
                    }
                    if (object.weakDependency) {
                        if (!Array.isArray(object.weakDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
                        message.weakDependency = [];
                        for (var i = 0; i < object.weakDependency.length; ++i)
                            message.weakDependency[i] = object.weakDependency[i] | 0;
                    }
                    if (object.messageType) {
                        if (!Array.isArray(object.messageType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
                        message.messageType = [];
                        for (var i = 0; i < object.messageType.length; ++i) {
                            if (typeof object.messageType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                            message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.sourceCodeInfo != null) {
                        if (typeof object.sourceCodeInfo !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    if (object.edition != null)
                        message.edition = String(object.edition);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.messageType = [];
                        object.enumType = [];
                        object.service = [];
                        object.extension = [];
                        object.publicDependency = [];
                        object.weakDependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.sourceCodeInfo = null;
                        object.syntax = "";
                        object.edition = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.messageType && message.messageType.length) {
                        object.messageType = [];
                        for (var j = 0; j < message.messageType.length; ++j)
                            object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);
                    if (message.publicDependency && message.publicDependency.length) {
                        object.publicDependency = [];
                        for (var j = 0; j < message.publicDependency.length; ++j)
                            object.publicDependency[j] = message.publicDependency[j];
                    }
                    if (message.weakDependency && message.weakDependency.length) {
                        object.weakDependency = [];
                        for (var j = 0; j < message.weakDependency.length; ++j)
                            object.weakDependency[j] = message.weakDependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        object.edition = message.edition;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorProto";
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nestedType = [];
                    this.enumType = [];
                    this.extensionRange = [];
                    this.oneofDecl = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nestedType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nestedType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nestedType = $util.emptyArray;
    
                /**
                 * DescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * DescriptorProto extensionRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extensionRange = $util.emptyArray;
    
                /**
                 * DescriptorProto oneofDecl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneofDecl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * DescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nestedType != null && message.nestedType.length)
                        for (var i = 0; i < message.nestedType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extensionRange != null && message.extensionRange.length)
                        for (var i = 0; i < message.extensionRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneofDecl != null && message.oneofDecl.length)
                        for (var i = 0; i < message.oneofDecl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.field && message.field.length))
                                    message.field = [];
                                message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                if (!(message.nestedType && message.nestedType.length))
                                    message.nestedType = [];
                                message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 4: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.extensionRange && message.extensionRange.length))
                                    message.extensionRange = [];
                                message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                if (!(message.oneofDecl && message.oneofDecl.length))
                                    message.oneofDecl = [];
                                message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 10: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nestedType != null && message.hasOwnProperty("nestedType")) {
                        if (!Array.isArray(message.nestedType))
                            return "nestedType: array expected";
                        for (var i = 0; i < message.nestedType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);
                            if (error)
                                return "nestedType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.extensionRange != null && message.hasOwnProperty("extensionRange")) {
                        if (!Array.isArray(message.extensionRange))
                            return "extensionRange: array expected";
                        for (var i = 0; i < message.extensionRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);
                            if (error)
                                return "extensionRange." + error;
                        }
                    }
                    if (message.oneofDecl != null && message.hasOwnProperty("oneofDecl")) {
                        if (!Array.isArray(message.oneofDecl))
                            return "oneofDecl: array expected";
                        for (var i = 0; i < message.oneofDecl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);
                            if (error)
                                return "oneofDecl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nestedType) {
                        if (!Array.isArray(object.nestedType))
                            throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
                        message.nestedType = [];
                        for (var i = 0; i < object.nestedType.length; ++i) {
                            if (typeof object.nestedType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                            message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.extensionRange) {
                        if (!Array.isArray(object.extensionRange))
                            throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
                        message.extensionRange = [];
                        for (var i = 0; i < object.extensionRange.length; ++i) {
                            if (typeof object.extensionRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                            message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);
                        }
                    }
                    if (object.oneofDecl) {
                        if (!Array.isArray(object.oneofDecl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
                        message.oneofDecl = [];
                        for (var i = 0; i < object.oneofDecl.length; ++i) {
                            if (typeof object.oneofDecl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                            message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nestedType = [];
                        object.enumType = [];
                        object.extensionRange = [];
                        object.extension = [];
                        object.oneofDecl = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nestedType && message.nestedType.length) {
                        object.nestedType = [];
                        for (var j = 0; j < message.nestedType.length; ++j)
                            object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.extensionRange && message.extensionRange.length) {
                        object.extensionRange = [];
                        for (var j = 0; j < message.extensionRange.length; ++j)
                            object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneofDecl && message.oneofDecl.length) {
                        object.oneofDecl = [];
                        for (var j = 0; j < message.oneofDecl.length; ++j)
                            object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);
                    }
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DescriptorProto";
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     * @property {google.protobuf.IExtensionRangeOptions|null} [options] ExtensionRange options
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * ExtensionRange options.
                     * @member {google.protobuf.IExtensionRangeOptions|null|undefined} options
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.options = null;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                            $root.google.protobuf.ExtensionRangeOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.options = $root.google.protobuf.ExtensionRangeOptions.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.options != null && message.hasOwnProperty("options")) {
                            var error = $root.google.protobuf.ExtensionRangeOptions.verify(message.options);
                            if (error)
                                return "options." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        if (object.options != null) {
                            if (typeof object.options !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.ExtensionRange.options: object expected");
                            message.options = $root.google.protobuf.ExtensionRangeOptions.fromObject(object.options);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                            object.options = null;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.options != null && message.hasOwnProperty("options"))
                            object.options = $root.google.protobuf.ExtensionRangeOptions.toObject(message.options, options);
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ExtensionRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ExtensionRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ExtensionRange";
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ReservedRange";
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.ExtensionRangeOptions = (function() {
    
                /**
                 * Properties of an ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @interface IExtensionRangeOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ExtensionRangeOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an ExtensionRangeOptions.
                 * @implements IExtensionRangeOptions
                 * @constructor
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 */
                function ExtensionRangeOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ExtensionRangeOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new ExtensionRangeOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions instance
                 */
                ExtensionRangeOptions.create = function create(properties) {
                    return new ExtensionRangeOptions(properties);
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an ExtensionRangeOptions message.
                 * @function verify
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ExtensionRangeOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an ExtensionRangeOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 */
                ExtensionRangeOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ExtensionRangeOptions)
                        return object;
                    var message = new $root.google.protobuf.ExtensionRangeOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an ExtensionRangeOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.ExtensionRangeOptions} message ExtensionRangeOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ExtensionRangeOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ExtensionRangeOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ExtensionRangeOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ExtensionRangeOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ExtensionRangeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ExtensionRangeOptions";
                };
    
                return ExtensionRangeOptions;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [typeName] FieldDescriptorProto typeName
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue
                 * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex
                 * @property {string|null} [jsonName] FieldDescriptorProto jsonName
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 * @property {boolean|null} [proto3Optional] FieldDescriptorProto proto3Optional
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto typeName.
                 * @member {string} typeName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.typeName = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto defaultValue.
                 * @member {string} defaultValue
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.defaultValue = "";
    
                /**
                 * FieldDescriptorProto oneofIndex.
                 * @member {number} oneofIndex
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneofIndex = 0;
    
                /**
                 * FieldDescriptorProto jsonName.
                 * @member {string} jsonName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.jsonName = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * FieldDescriptorProto proto3Optional.
                 * @member {boolean} proto3Optional
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.proto3Optional = false;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.typeName != null && Object.hasOwnProperty.call(message, "typeName"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);
                    if (message.defaultValue != null && Object.hasOwnProperty.call(message, "defaultValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneofIndex != null && Object.hasOwnProperty.call(message, "oneofIndex"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);
                    if (message.jsonName != null && Object.hasOwnProperty.call(message, "jsonName"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);
                    if (message.proto3Optional != null && Object.hasOwnProperty.call(message, "proto3Optional"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.proto3Optional);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.number = reader.int32();
                                break;
                            }
                        case 4: {
                                message.label = reader.int32();
                                break;
                            }
                        case 5: {
                                message.type = reader.int32();
                                break;
                            }
                        case 6: {
                                message.typeName = reader.string();
                                break;
                            }
                        case 2: {
                                message.extendee = reader.string();
                                break;
                            }
                        case 7: {
                                message.defaultValue = reader.string();
                                break;
                            }
                        case 9: {
                                message.oneofIndex = reader.int32();
                                break;
                            }
                        case 10: {
                                message.jsonName = reader.string();
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 17: {
                                message.proto3Optional = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        if (!$util.isString(message.typeName))
                            return "typeName: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        if (!$util.isString(message.defaultValue))
                            return "defaultValue: string expected";
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        if (!$util.isInteger(message.oneofIndex))
                            return "oneofIndex: integer expected";
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        if (!$util.isString(message.jsonName))
                            return "jsonName: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        if (typeof message.proto3Optional !== "boolean")
                            return "proto3Optional: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    default:
                        if (typeof object.label === "number") {
                            message.label = object.label;
                            break;
                        }
                        break;
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    default:
                        if (typeof object.type === "number") {
                            message.type = object.type;
                            break;
                        }
                        break;
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.typeName != null)
                        message.typeName = String(object.typeName);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.defaultValue != null)
                        message.defaultValue = String(object.defaultValue);
                    if (object.oneofIndex != null)
                        message.oneofIndex = object.oneofIndex | 0;
                    if (object.jsonName != null)
                        message.jsonName = String(object.jsonName);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    if (object.proto3Optional != null)
                        message.proto3Optional = Boolean(object.proto3Optional);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.typeName = "";
                        object.defaultValue = "";
                        object.options = null;
                        object.oneofIndex = 0;
                        object.jsonName = "";
                        object.proto3Optional = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] === undefined ? message.label : $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] === undefined ? message.type : $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        object.typeName = message.typeName;
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        object.defaultValue = message.defaultValue;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        object.oneofIndex = message.oneofIndex;
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        object.jsonName = message.jsonName;
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        object.proto3Optional = message.proto3Optional;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldDescriptorProto";
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofDescriptorProto";
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 * @property {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>|null} [reservedRange] EnumDescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] EnumDescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * EnumDescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>} reservedRange
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.value && message.value.length))
                                    message.value = [];
                                message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 4: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.value = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto";
                };
    
                EnumDescriptorProto.EnumReservedRange = (function() {
    
                    /**
                     * Properties of an EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @interface IEnumReservedRange
                     * @property {number|null} [start] EnumReservedRange start
                     * @property {number|null} [end] EnumReservedRange end
                     */
    
                    /**
                     * Constructs a new EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @classdesc Represents an EnumReservedRange.
                     * @implements IEnumReservedRange
                     * @constructor
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     */
                    function EnumReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * EnumReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.start = 0;
    
                    /**
                     * EnumReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new EnumReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange instance
                     */
                    EnumReservedRange.create = function create(properties) {
                        return new EnumReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an EnumReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    EnumReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an EnumReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     */
                    EnumReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.EnumDescriptorProto.EnumReservedRange)
                            return object;
                        var message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an EnumReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.EnumReservedRange} message EnumReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    EnumReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this EnumReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    EnumReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for EnumReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    EnumReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto.EnumReservedRange";
                    };
    
                    return EnumReservedRange;
                })();
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.number = reader.int32();
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueDescriptorProto";
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.method && message.method.length))
                                    message.method = [];
                                message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceDescriptorProto";
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [inputType] MethodDescriptorProto inputType
                 * @property {string|null} [outputType] MethodDescriptorProto outputType
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming
                 * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto inputType.
                 * @member {string} inputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.inputType = "";
    
                /**
                 * MethodDescriptorProto outputType.
                 * @member {string} outputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.outputType = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto clientStreaming.
                 * @member {boolean} clientStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.clientStreaming = false;
    
                /**
                 * MethodDescriptorProto serverStreaming.
                 * @member {boolean} serverStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.serverStreaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.inputType != null && Object.hasOwnProperty.call(message, "inputType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);
                    if (message.outputType != null && Object.hasOwnProperty.call(message, "outputType"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.clientStreaming != null && Object.hasOwnProperty.call(message, "clientStreaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);
                    if (message.serverStreaming != null && Object.hasOwnProperty.call(message, "serverStreaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.inputType = reader.string();
                                break;
                            }
                        case 3: {
                                message.outputType = reader.string();
                                break;
                            }
                        case 4: {
                                message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.clientStreaming = reader.bool();
                                break;
                            }
                        case 6: {
                                message.serverStreaming = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        if (!$util.isString(message.inputType))
                            return "inputType: string expected";
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        if (!$util.isString(message.outputType))
                            return "outputType: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        if (typeof message.clientStreaming !== "boolean")
                            return "clientStreaming: boolean expected";
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        if (typeof message.serverStreaming !== "boolean")
                            return "serverStreaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.inputType != null)
                        message.inputType = String(object.inputType);
                    if (object.outputType != null)
                        message.outputType = String(object.outputType);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.clientStreaming != null)
                        message.clientStreaming = Boolean(object.clientStreaming);
                    if (object.serverStreaming != null)
                        message.serverStreaming = Boolean(object.serverStreaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.inputType = "";
                        object.outputType = "";
                        object.options = null;
                        object.clientStreaming = false;
                        object.serverStreaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        object.inputType = message.inputType;
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        object.outputType = message.outputType;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        object.clientStreaming = message.clientStreaming;
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        object.serverStreaming = message.serverStreaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodDescriptorProto";
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [javaPackage] FileOptions javaPackage
                 * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname
                 * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles
                 * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash
                 * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor
                 * @property {string|null} [goPackage] FileOptions goPackage
                 * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices
                 * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices
                 * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices
                 * @property {boolean|null} [phpGenericServices] FileOptions phpGenericServices
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas
                 * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix
                 * @property {string|null} [csharpNamespace] FileOptions csharpNamespace
                 * @property {string|null} [swiftPrefix] FileOptions swiftPrefix
                 * @property {string|null} [phpClassPrefix] FileOptions phpClassPrefix
                 * @property {string|null} [phpNamespace] FileOptions phpNamespace
                 * @property {string|null} [phpMetadataNamespace] FileOptions phpMetadataNamespace
                 * @property {string|null} [rubyPackage] FileOptions rubyPackage
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption
                 * @property {Array.<google.api.IResourceDescriptor>|null} [".google.api.resourceDefinition"] FileOptions .google.api.resourceDefinition
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.resourceDefinition"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions javaPackage.
                 * @member {string} javaPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaPackage = "";
    
                /**
                 * FileOptions javaOuterClassname.
                 * @member {string} javaOuterClassname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaOuterClassname = "";
    
                /**
                 * FileOptions javaMultipleFiles.
                 * @member {boolean} javaMultipleFiles
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaMultipleFiles = false;
    
                /**
                 * FileOptions javaGenerateEqualsAndHash.
                 * @member {boolean} javaGenerateEqualsAndHash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenerateEqualsAndHash = false;
    
                /**
                 * FileOptions javaStringCheckUtf8.
                 * @member {boolean} javaStringCheckUtf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaStringCheckUtf8 = false;
    
                /**
                 * FileOptions optimizeFor.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimizeFor = 1;
    
                /**
                 * FileOptions goPackage.
                 * @member {string} goPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.goPackage = "";
    
                /**
                 * FileOptions ccGenericServices.
                 * @member {boolean} ccGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccGenericServices = false;
    
                /**
                 * FileOptions javaGenericServices.
                 * @member {boolean} javaGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenericServices = false;
    
                /**
                 * FileOptions pyGenericServices.
                 * @member {boolean} pyGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.pyGenericServices = false;
    
                /**
                 * FileOptions phpGenericServices.
                 * @member {boolean} phpGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpGenericServices = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions ccEnableArenas.
                 * @member {boolean} ccEnableArenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccEnableArenas = true;
    
                /**
                 * FileOptions objcClassPrefix.
                 * @member {string} objcClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objcClassPrefix = "";
    
                /**
                 * FileOptions csharpNamespace.
                 * @member {string} csharpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharpNamespace = "";
    
                /**
                 * FileOptions swiftPrefix.
                 * @member {string} swiftPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.swiftPrefix = "";
    
                /**
                 * FileOptions phpClassPrefix.
                 * @member {string} phpClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpClassPrefix = "";
    
                /**
                 * FileOptions phpNamespace.
                 * @member {string} phpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpNamespace = "";
    
                /**
                 * FileOptions phpMetadataNamespace.
                 * @member {string} phpMetadataNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpMetadataNamespace = "";
    
                /**
                 * FileOptions rubyPackage.
                 * @member {string} rubyPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.rubyPackage = "";
    
                /**
                 * FileOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FileOptions .google.api.resourceDefinition.
                 * @member {Array.<google.api.IResourceDescriptor>} .google.api.resourceDefinition
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".google.api.resourceDefinition"] = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.javaPackage != null && Object.hasOwnProperty.call(message, "javaPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);
                    if (message.javaOuterClassname != null && Object.hasOwnProperty.call(message, "javaOuterClassname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);
                    if (message.optimizeFor != null && Object.hasOwnProperty.call(message, "optimizeFor"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);
                    if (message.javaMultipleFiles != null && Object.hasOwnProperty.call(message, "javaMultipleFiles"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);
                    if (message.goPackage != null && Object.hasOwnProperty.call(message, "goPackage"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);
                    if (message.ccGenericServices != null && Object.hasOwnProperty.call(message, "ccGenericServices"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);
                    if (message.javaGenericServices != null && Object.hasOwnProperty.call(message, "javaGenericServices"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);
                    if (message.pyGenericServices != null && Object.hasOwnProperty.call(message, "pyGenericServices"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);
                    if (message.javaGenerateEqualsAndHash != null && Object.hasOwnProperty.call(message, "javaGenerateEqualsAndHash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.javaStringCheckUtf8 != null && Object.hasOwnProperty.call(message, "javaStringCheckUtf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);
                    if (message.ccEnableArenas != null && Object.hasOwnProperty.call(message, "ccEnableArenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);
                    if (message.objcClassPrefix != null && Object.hasOwnProperty.call(message, "objcClassPrefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);
                    if (message.csharpNamespace != null && Object.hasOwnProperty.call(message, "csharpNamespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);
                    if (message.swiftPrefix != null && Object.hasOwnProperty.call(message, "swiftPrefix"))
                        writer.uint32(/* id 39, wireType 2 =*/314).string(message.swiftPrefix);
                    if (message.phpClassPrefix != null && Object.hasOwnProperty.call(message, "phpClassPrefix"))
                        writer.uint32(/* id 40, wireType 2 =*/322).string(message.phpClassPrefix);
                    if (message.phpNamespace != null && Object.hasOwnProperty.call(message, "phpNamespace"))
                        writer.uint32(/* id 41, wireType 2 =*/330).string(message.phpNamespace);
                    if (message.phpGenericServices != null && Object.hasOwnProperty.call(message, "phpGenericServices"))
                        writer.uint32(/* id 42, wireType 0 =*/336).bool(message.phpGenericServices);
                    if (message.phpMetadataNamespace != null && Object.hasOwnProperty.call(message, "phpMetadataNamespace"))
                        writer.uint32(/* id 44, wireType 2 =*/354).string(message.phpMetadataNamespace);
                    if (message.rubyPackage != null && Object.hasOwnProperty.call(message, "rubyPackage"))
                        writer.uint32(/* id 45, wireType 2 =*/362).string(message.rubyPackage);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resourceDefinition"] != null && message[".google.api.resourceDefinition"].length)
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i)
                            $root.google.api.ResourceDescriptor.encode(message[".google.api.resourceDefinition"][i], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.javaPackage = reader.string();
                                break;
                            }
                        case 8: {
                                message.javaOuterClassname = reader.string();
                                break;
                            }
                        case 10: {
                                message.javaMultipleFiles = reader.bool();
                                break;
                            }
                        case 20: {
                                message.javaGenerateEqualsAndHash = reader.bool();
                                break;
                            }
                        case 27: {
                                message.javaStringCheckUtf8 = reader.bool();
                                break;
                            }
                        case 9: {
                                message.optimizeFor = reader.int32();
                                break;
                            }
                        case 11: {
                                message.goPackage = reader.string();
                                break;
                            }
                        case 16: {
                                message.ccGenericServices = reader.bool();
                                break;
                            }
                        case 17: {
                                message.javaGenericServices = reader.bool();
                                break;
                            }
                        case 18: {
                                message.pyGenericServices = reader.bool();
                                break;
                            }
                        case 42: {
                                message.phpGenericServices = reader.bool();
                                break;
                            }
                        case 23: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 31: {
                                message.ccEnableArenas = reader.bool();
                                break;
                            }
                        case 36: {
                                message.objcClassPrefix = reader.string();
                                break;
                            }
                        case 37: {
                                message.csharpNamespace = reader.string();
                                break;
                            }
                        case 39: {
                                message.swiftPrefix = reader.string();
                                break;
                            }
                        case 40: {
                                message.phpClassPrefix = reader.string();
                                break;
                            }
                        case 41: {
                                message.phpNamespace = reader.string();
                                break;
                            }
                        case 44: {
                                message.phpMetadataNamespace = reader.string();
                                break;
                            }
                        case 45: {
                                message.rubyPackage = reader.string();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                if (!(message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length))
                                    message[".google.api.resourceDefinition"] = [];
                                message[".google.api.resourceDefinition"].push($root.google.api.ResourceDescriptor.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        if (!$util.isString(message.javaPackage))
                            return "javaPackage: string expected";
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        if (!$util.isString(message.javaOuterClassname))
                            return "javaOuterClassname: string expected";
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        if (typeof message.javaMultipleFiles !== "boolean")
                            return "javaMultipleFiles: boolean expected";
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        if (typeof message.javaGenerateEqualsAndHash !== "boolean")
                            return "javaGenerateEqualsAndHash: boolean expected";
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        if (typeof message.javaStringCheckUtf8 !== "boolean")
                            return "javaStringCheckUtf8: boolean expected";
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        switch (message.optimizeFor) {
                        default:
                            return "optimizeFor: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        if (!$util.isString(message.goPackage))
                            return "goPackage: string expected";
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        if (typeof message.ccGenericServices !== "boolean")
                            return "ccGenericServices: boolean expected";
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        if (typeof message.javaGenericServices !== "boolean")
                            return "javaGenericServices: boolean expected";
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        if (typeof message.pyGenericServices !== "boolean")
                            return "pyGenericServices: boolean expected";
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        if (typeof message.phpGenericServices !== "boolean")
                            return "phpGenericServices: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        if (typeof message.ccEnableArenas !== "boolean")
                            return "ccEnableArenas: boolean expected";
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        if (!$util.isString(message.objcClassPrefix))
                            return "objcClassPrefix: string expected";
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        if (!$util.isString(message.csharpNamespace))
                            return "csharpNamespace: string expected";
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        if (!$util.isString(message.swiftPrefix))
                            return "swiftPrefix: string expected";
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        if (!$util.isString(message.phpClassPrefix))
                            return "phpClassPrefix: string expected";
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        if (!$util.isString(message.phpNamespace))
                            return "phpNamespace: string expected";
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        if (!$util.isString(message.phpMetadataNamespace))
                            return "phpMetadataNamespace: string expected";
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        if (!$util.isString(message.rubyPackage))
                            return "rubyPackage: string expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resourceDefinition"] != null && message.hasOwnProperty(".google.api.resourceDefinition")) {
                        if (!Array.isArray(message[".google.api.resourceDefinition"]))
                            return ".google.api.resourceDefinition: array expected";
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i) {
                            var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resourceDefinition"][i]);
                            if (error)
                                return ".google.api.resourceDefinition." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.javaPackage != null)
                        message.javaPackage = String(object.javaPackage);
                    if (object.javaOuterClassname != null)
                        message.javaOuterClassname = String(object.javaOuterClassname);
                    if (object.javaMultipleFiles != null)
                        message.javaMultipleFiles = Boolean(object.javaMultipleFiles);
                    if (object.javaGenerateEqualsAndHash != null)
                        message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);
                    if (object.javaStringCheckUtf8 != null)
                        message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);
                    switch (object.optimizeFor) {
                    default:
                        if (typeof object.optimizeFor === "number") {
                            message.optimizeFor = object.optimizeFor;
                            break;
                        }
                        break;
                    case "SPEED":
                    case 1:
                        message.optimizeFor = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimizeFor = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimizeFor = 3;
                        break;
                    }
                    if (object.goPackage != null)
                        message.goPackage = String(object.goPackage);
                    if (object.ccGenericServices != null)
                        message.ccGenericServices = Boolean(object.ccGenericServices);
                    if (object.javaGenericServices != null)
                        message.javaGenericServices = Boolean(object.javaGenericServices);
                    if (object.pyGenericServices != null)
                        message.pyGenericServices = Boolean(object.pyGenericServices);
                    if (object.phpGenericServices != null)
                        message.phpGenericServices = Boolean(object.phpGenericServices);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.ccEnableArenas != null)
                        message.ccEnableArenas = Boolean(object.ccEnableArenas);
                    if (object.objcClassPrefix != null)
                        message.objcClassPrefix = String(object.objcClassPrefix);
                    if (object.csharpNamespace != null)
                        message.csharpNamespace = String(object.csharpNamespace);
                    if (object.swiftPrefix != null)
                        message.swiftPrefix = String(object.swiftPrefix);
                    if (object.phpClassPrefix != null)
                        message.phpClassPrefix = String(object.phpClassPrefix);
                    if (object.phpNamespace != null)
                        message.phpNamespace = String(object.phpNamespace);
                    if (object.phpMetadataNamespace != null)
                        message.phpMetadataNamespace = String(object.phpMetadataNamespace);
                    if (object.rubyPackage != null)
                        message.rubyPackage = String(object.rubyPackage);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resourceDefinition"]) {
                        if (!Array.isArray(object[".google.api.resourceDefinition"]))
                            throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: array expected");
                        message[".google.api.resourceDefinition"] = [];
                        for (var i = 0; i < object[".google.api.resourceDefinition"].length; ++i) {
                            if (typeof object[".google.api.resourceDefinition"][i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: object expected");
                            message[".google.api.resourceDefinition"][i] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resourceDefinition"][i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.resourceDefinition"] = [];
                    }
                    if (options.defaults) {
                        object.javaPackage = "";
                        object.javaOuterClassname = "";
                        object.optimizeFor = options.enums === String ? "SPEED" : 1;
                        object.javaMultipleFiles = false;
                        object.goPackage = "";
                        object.ccGenericServices = false;
                        object.javaGenericServices = false;
                        object.pyGenericServices = false;
                        object.javaGenerateEqualsAndHash = false;
                        object.deprecated = false;
                        object.javaStringCheckUtf8 = false;
                        object.ccEnableArenas = true;
                        object.objcClassPrefix = "";
                        object.csharpNamespace = "";
                        object.swiftPrefix = "";
                        object.phpClassPrefix = "";
                        object.phpNamespace = "";
                        object.phpGenericServices = false;
                        object.phpMetadataNamespace = "";
                        object.rubyPackage = "";
                    }
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        object.javaPackage = message.javaPackage;
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        object.javaOuterClassname = message.javaOuterClassname;
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] === undefined ? message.optimizeFor : $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        object.javaMultipleFiles = message.javaMultipleFiles;
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        object.goPackage = message.goPackage;
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        object.ccGenericServices = message.ccGenericServices;
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        object.javaGenericServices = message.javaGenericServices;
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        object.pyGenericServices = message.pyGenericServices;
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        object.javaStringCheckUtf8 = message.javaStringCheckUtf8;
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        object.ccEnableArenas = message.ccEnableArenas;
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        object.objcClassPrefix = message.objcClassPrefix;
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        object.csharpNamespace = message.csharpNamespace;
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        object.swiftPrefix = message.swiftPrefix;
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        object.phpClassPrefix = message.phpClassPrefix;
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        object.phpNamespace = message.phpNamespace;
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        object.phpGenericServices = message.phpGenericServices;
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        object.phpMetadataNamespace = message.phpMetadataNamespace;
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        object.rubyPackage = message.rubyPackage;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length) {
                        object[".google.api.resourceDefinition"] = [];
                        for (var j = 0; j < message[".google.api.resourceDefinition"].length; ++j)
                            object[".google.api.resourceDefinition"][j] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resourceDefinition"][j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileOptions";
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat
                 * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [mapEntry] MessageOptions mapEntry
                 * @property {boolean|null} [deprecatedLegacyJsonFieldConflicts] MessageOptions deprecatedLegacyJsonFieldConflicts
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption
                 * @property {google.api.IResourceDescriptor|null} [".google.api.resource"] MessageOptions .google.api.resource
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions messageSetWireFormat.
                 * @member {boolean} messageSetWireFormat
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.messageSetWireFormat = false;
    
                /**
                 * MessageOptions noStandardDescriptorAccessor.
                 * @member {boolean} noStandardDescriptorAccessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.noStandardDescriptorAccessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions mapEntry.
                 * @member {boolean} mapEntry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.mapEntry = false;
    
                /**
                 * MessageOptions deprecatedLegacyJsonFieldConflicts.
                 * @member {boolean} deprecatedLegacyJsonFieldConflicts
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecatedLegacyJsonFieldConflicts = false;
    
                /**
                 * MessageOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MessageOptions .google.api.resource.
                 * @member {google.api.IResourceDescriptor|null|undefined} .google.api.resource
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".google.api.resource"] = null;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.messageSetWireFormat != null && Object.hasOwnProperty.call(message, "messageSetWireFormat"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);
                    if (message.noStandardDescriptorAccessor != null && Object.hasOwnProperty.call(message, "noStandardDescriptorAccessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.mapEntry != null && Object.hasOwnProperty.call(message, "mapEntry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);
                    if (message.deprecatedLegacyJsonFieldConflicts != null && Object.hasOwnProperty.call(message, "deprecatedLegacyJsonFieldConflicts"))
                        writer.uint32(/* id 11, wireType 0 =*/88).bool(message.deprecatedLegacyJsonFieldConflicts);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resource"] != null && Object.hasOwnProperty.call(message, ".google.api.resource"))
                        $root.google.api.ResourceDescriptor.encode(message[".google.api.resource"], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.messageSetWireFormat = reader.bool();
                                break;
                            }
                        case 2: {
                                message.noStandardDescriptorAccessor = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 7: {
                                message.mapEntry = reader.bool();
                                break;
                            }
                        case 11: {
                                message.deprecatedLegacyJsonFieldConflicts = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                message[".google.api.resource"] = $root.google.api.ResourceDescriptor.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        if (typeof message.messageSetWireFormat !== "boolean")
                            return "messageSetWireFormat: boolean expected";
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        if (typeof message.noStandardDescriptorAccessor !== "boolean")
                            return "noStandardDescriptorAccessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        if (typeof message.mapEntry !== "boolean")
                            return "mapEntry: boolean expected";
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        if (typeof message.deprecatedLegacyJsonFieldConflicts !== "boolean")
                            return "deprecatedLegacyJsonFieldConflicts: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource")) {
                        var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resource"]);
                        if (error)
                            return ".google.api.resource." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.messageSetWireFormat != null)
                        message.messageSetWireFormat = Boolean(object.messageSetWireFormat);
                    if (object.noStandardDescriptorAccessor != null)
                        message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.mapEntry != null)
                        message.mapEntry = Boolean(object.mapEntry);
                    if (object.deprecatedLegacyJsonFieldConflicts != null)
                        message.deprecatedLegacyJsonFieldConflicts = Boolean(object.deprecatedLegacyJsonFieldConflicts);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resource"] != null) {
                        if (typeof object[".google.api.resource"] !== "object")
                            throw TypeError(".google.protobuf.MessageOptions..google.api.resource: object expected");
                        message[".google.api.resource"] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resource"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.messageSetWireFormat = false;
                        object.noStandardDescriptorAccessor = false;
                        object.deprecated = false;
                        object.mapEntry = false;
                        object.deprecatedLegacyJsonFieldConflicts = false;
                        object[".google.api.resource"] = null;
                    }
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        object.messageSetWireFormat = message.messageSetWireFormat;
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        object.mapEntry = message.mapEntry;
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        object.deprecatedLegacyJsonFieldConflicts = message.deprecatedLegacyJsonFieldConflicts;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource"))
                        object[".google.api.resource"] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resource"], options);
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MessageOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MessageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MessageOptions";
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [unverifiedLazy] FieldOptions unverifiedLazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {boolean|null} [debugRedact] FieldOptions debugRedact
                 * @property {google.protobuf.FieldOptions.OptionRetention|null} [retention] FieldOptions retention
                 * @property {google.protobuf.FieldOptions.OptionTargetType|null} [target] FieldOptions target
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption
                 * @property {Array.<google.api.FieldBehavior>|null} [".google.api.fieldBehavior"] FieldOptions .google.api.fieldBehavior
                 * @property {google.api.IResourceReference|null} [".google.api.resourceReference"] FieldOptions .google.api.resourceReference
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.fieldBehavior"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions unverifiedLazy.
                 * @member {boolean} unverifiedLazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.unverifiedLazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions debugRedact.
                 * @member {boolean} debugRedact
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.debugRedact = false;
    
                /**
                 * FieldOptions retention.
                 * @member {google.protobuf.FieldOptions.OptionRetention} retention
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.retention = 0;
    
                /**
                 * FieldOptions target.
                 * @member {google.protobuf.FieldOptions.OptionTargetType} target
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.target = 0;
    
                /**
                 * FieldOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.fieldBehavior.
                 * @member {Array.<google.api.FieldBehavior>} .google.api.fieldBehavior
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.fieldBehavior"] = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.resourceReference.
                 * @member {google.api.IResourceReference|null|undefined} .google.api.resourceReference
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.resourceReference"] = null;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && Object.hasOwnProperty.call(message, "lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && Object.hasOwnProperty.call(message, "jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && Object.hasOwnProperty.call(message, "weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.unverifiedLazy != null && Object.hasOwnProperty.call(message, "unverifiedLazy"))
                        writer.uint32(/* id 15, wireType 0 =*/120).bool(message.unverifiedLazy);
                    if (message.debugRedact != null && Object.hasOwnProperty.call(message, "debugRedact"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.debugRedact);
                    if (message.retention != null && Object.hasOwnProperty.call(message, "retention"))
                        writer.uint32(/* id 17, wireType 0 =*/136).int32(message.retention);
                    if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                        writer.uint32(/* id 18, wireType 0 =*/144).int32(message.target);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.fieldBehavior"] != null && message[".google.api.fieldBehavior"].length) {
                        writer.uint32(/* id 1052, wireType 2 =*/8418).fork();
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            writer.int32(message[".google.api.fieldBehavior"][i]);
                        writer.ldelim();
                    }
                    if (message[".google.api.resourceReference"] != null && Object.hasOwnProperty.call(message, ".google.api.resourceReference"))
                        $root.google.api.ResourceReference.encode(message[".google.api.resourceReference"], writer.uint32(/* id 1055, wireType 2 =*/8442).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.ctype = reader.int32();
                                break;
                            }
                        case 2: {
                                message.packed = reader.bool();
                                break;
                            }
                        case 6: {
                                message.jstype = reader.int32();
                                break;
                            }
                        case 5: {
                                message.lazy = reader.bool();
                                break;
                            }
                        case 15: {
                                message.unverifiedLazy = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 10: {
                                message.weak = reader.bool();
                                break;
                            }
                        case 16: {
                                message.debugRedact = reader.bool();
                                break;
                            }
                        case 17: {
                                message.retention = reader.int32();
                                break;
                            }
                        case 18: {
                                message.target = reader.int32();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1052: {
                                if (!(message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length))
                                    message[".google.api.fieldBehavior"] = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message[".google.api.fieldBehavior"].push(reader.int32());
                                } else
                                    message[".google.api.fieldBehavior"].push(reader.int32());
                                break;
                            }
                        case 1055: {
                                message[".google.api.resourceReference"] = $root.google.api.ResourceReference.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        if (typeof message.unverifiedLazy !== "boolean")
                            return "unverifiedLazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.debugRedact != null && message.hasOwnProperty("debugRedact"))
                        if (typeof message.debugRedact !== "boolean")
                            return "debugRedact: boolean expected";
                    if (message.retention != null && message.hasOwnProperty("retention"))
                        switch (message.retention) {
                        default:
                            return "retention: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.target != null && message.hasOwnProperty("target"))
                        switch (message.target) {
                        default:
                            return "target: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.fieldBehavior"] != null && message.hasOwnProperty(".google.api.fieldBehavior")) {
                        if (!Array.isArray(message[".google.api.fieldBehavior"]))
                            return ".google.api.fieldBehavior: array expected";
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            switch (message[".google.api.fieldBehavior"][i]) {
                            default:
                                return ".google.api.fieldBehavior: enum value[] expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                                break;
                            }
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference")) {
                        var error = $root.google.api.ResourceReference.verify(message[".google.api.resourceReference"]);
                        if (error)
                            return ".google.api.resourceReference." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    default:
                        if (typeof object.ctype === "number") {
                            message.ctype = object.ctype;
                            break;
                        }
                        break;
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    default:
                        if (typeof object.jstype === "number") {
                            message.jstype = object.jstype;
                            break;
                        }
                        break;
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.unverifiedLazy != null)
                        message.unverifiedLazy = Boolean(object.unverifiedLazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.debugRedact != null)
                        message.debugRedact = Boolean(object.debugRedact);
                    switch (object.retention) {
                    default:
                        if (typeof object.retention === "number") {
                            message.retention = object.retention;
                            break;
                        }
                        break;
                    case "RETENTION_UNKNOWN":
                    case 0:
                        message.retention = 0;
                        break;
                    case "RETENTION_RUNTIME":
                    case 1:
                        message.retention = 1;
                        break;
                    case "RETENTION_SOURCE":
                    case 2:
                        message.retention = 2;
                        break;
                    }
                    switch (object.target) {
                    default:
                        if (typeof object.target === "number") {
                            message.target = object.target;
                            break;
                        }
                        break;
                    case "TARGET_TYPE_UNKNOWN":
                    case 0:
                        message.target = 0;
                        break;
                    case "TARGET_TYPE_FILE":
                    case 1:
                        message.target = 1;
                        break;
                    case "TARGET_TYPE_EXTENSION_RANGE":
                    case 2:
                        message.target = 2;
                        break;
                    case "TARGET_TYPE_MESSAGE":
                    case 3:
                        message.target = 3;
                        break;
                    case "TARGET_TYPE_FIELD":
                    case 4:
                        message.target = 4;
                        break;
                    case "TARGET_TYPE_ONEOF":
                    case 5:
                        message.target = 5;
                        break;
                    case "TARGET_TYPE_ENUM":
                    case 6:
                        message.target = 6;
                        break;
                    case "TARGET_TYPE_ENUM_ENTRY":
                    case 7:
                        message.target = 7;
                        break;
                    case "TARGET_TYPE_SERVICE":
                    case 8:
                        message.target = 8;
                        break;
                    case "TARGET_TYPE_METHOD":
                    case 9:
                        message.target = 9;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.fieldBehavior"]) {
                        if (!Array.isArray(object[".google.api.fieldBehavior"]))
                            throw TypeError(".google.protobuf.FieldOptions..google.api.fieldBehavior: array expected");
                        message[".google.api.fieldBehavior"] = [];
                        for (var i = 0; i < object[".google.api.fieldBehavior"].length; ++i)
                            switch (object[".google.api.fieldBehavior"][i]) {
                            default:
                                if (typeof object[".google.api.fieldBehavior"][i] === "number") {
                                    message[".google.api.fieldBehavior"][i] = object[".google.api.fieldBehavior"][i];
                                    break;
                                }
                            case "FIELD_BEHAVIOR_UNSPECIFIED":
                            case 0:
                                message[".google.api.fieldBehavior"][i] = 0;
                                break;
                            case "OPTIONAL":
                            case 1:
                                message[".google.api.fieldBehavior"][i] = 1;
                                break;
                            case "REQUIRED":
                            case 2:
                                message[".google.api.fieldBehavior"][i] = 2;
                                break;
                            case "OUTPUT_ONLY":
                            case 3:
                                message[".google.api.fieldBehavior"][i] = 3;
                                break;
                            case "INPUT_ONLY":
                            case 4:
                                message[".google.api.fieldBehavior"][i] = 4;
                                break;
                            case "IMMUTABLE":
                            case 5:
                                message[".google.api.fieldBehavior"][i] = 5;
                                break;
                            case "UNORDERED_LIST":
                            case 6:
                                message[".google.api.fieldBehavior"][i] = 6;
                                break;
                            case "NON_EMPTY_DEFAULT":
                            case 7:
                                message[".google.api.fieldBehavior"][i] = 7;
                                break;
                            }
                    }
                    if (object[".google.api.resourceReference"] != null) {
                        if (typeof object[".google.api.resourceReference"] !== "object")
                            throw TypeError(".google.protobuf.FieldOptions..google.api.resourceReference: object expected");
                        message[".google.api.resourceReference"] = $root.google.api.ResourceReference.fromObject(object[".google.api.resourceReference"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.fieldBehavior"] = [];
                    }
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                        object.unverifiedLazy = false;
                        object.debugRedact = false;
                        object.retention = options.enums === String ? "RETENTION_UNKNOWN" : 0;
                        object.target = options.enums === String ? "TARGET_TYPE_UNKNOWN" : 0;
                        object[".google.api.resourceReference"] = null;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] === undefined ? message.ctype : $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] === undefined ? message.jstype : $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        object.unverifiedLazy = message.unverifiedLazy;
                    if (message.debugRedact != null && message.hasOwnProperty("debugRedact"))
                        object.debugRedact = message.debugRedact;
                    if (message.retention != null && message.hasOwnProperty("retention"))
                        object.retention = options.enums === String ? $root.google.protobuf.FieldOptions.OptionRetention[message.retention] === undefined ? message.retention : $root.google.protobuf.FieldOptions.OptionRetention[message.retention] : message.retention;
                    if (message.target != null && message.hasOwnProperty("target"))
                        object.target = options.enums === String ? $root.google.protobuf.FieldOptions.OptionTargetType[message.target] === undefined ? message.target : $root.google.protobuf.FieldOptions.OptionTargetType[message.target] : message.target;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length) {
                        object[".google.api.fieldBehavior"] = [];
                        for (var j = 0; j < message[".google.api.fieldBehavior"].length; ++j)
                            object[".google.api.fieldBehavior"][j] = options.enums === String ? $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] === undefined ? message[".google.api.fieldBehavior"][j] : $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] : message[".google.api.fieldBehavior"][j];
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference"))
                        object[".google.api.resourceReference"] = $root.google.api.ResourceReference.toObject(message[".google.api.resourceReference"], options);
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldOptions";
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {number}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                /**
                 * OptionRetention enum.
                 * @name google.protobuf.FieldOptions.OptionRetention
                 * @enum {number}
                 * @property {number} RETENTION_UNKNOWN=0 RETENTION_UNKNOWN value
                 * @property {number} RETENTION_RUNTIME=1 RETENTION_RUNTIME value
                 * @property {number} RETENTION_SOURCE=2 RETENTION_SOURCE value
                 */
                FieldOptions.OptionRetention = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "RETENTION_UNKNOWN"] = 0;
                    values[valuesById[1] = "RETENTION_RUNTIME"] = 1;
                    values[valuesById[2] = "RETENTION_SOURCE"] = 2;
                    return values;
                })();
    
                /**
                 * OptionTargetType enum.
                 * @name google.protobuf.FieldOptions.OptionTargetType
                 * @enum {number}
                 * @property {number} TARGET_TYPE_UNKNOWN=0 TARGET_TYPE_UNKNOWN value
                 * @property {number} TARGET_TYPE_FILE=1 TARGET_TYPE_FILE value
                 * @property {number} TARGET_TYPE_EXTENSION_RANGE=2 TARGET_TYPE_EXTENSION_RANGE value
                 * @property {number} TARGET_TYPE_MESSAGE=3 TARGET_TYPE_MESSAGE value
                 * @property {number} TARGET_TYPE_FIELD=4 TARGET_TYPE_FIELD value
                 * @property {number} TARGET_TYPE_ONEOF=5 TARGET_TYPE_ONEOF value
                 * @property {number} TARGET_TYPE_ENUM=6 TARGET_TYPE_ENUM value
                 * @property {number} TARGET_TYPE_ENUM_ENTRY=7 TARGET_TYPE_ENUM_ENTRY value
                 * @property {number} TARGET_TYPE_SERVICE=8 TARGET_TYPE_SERVICE value
                 * @property {number} TARGET_TYPE_METHOD=9 TARGET_TYPE_METHOD value
                 */
                FieldOptions.OptionTargetType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "TARGET_TYPE_UNKNOWN"] = 0;
                    values[valuesById[1] = "TARGET_TYPE_FILE"] = 1;
                    values[valuesById[2] = "TARGET_TYPE_EXTENSION_RANGE"] = 2;
                    values[valuesById[3] = "TARGET_TYPE_MESSAGE"] = 3;
                    values[valuesById[4] = "TARGET_TYPE_FIELD"] = 4;
                    values[valuesById[5] = "TARGET_TYPE_ONEOF"] = 5;
                    values[valuesById[6] = "TARGET_TYPE_ENUM"] = 6;
                    values[valuesById[7] = "TARGET_TYPE_ENUM_ENTRY"] = 7;
                    values[valuesById[8] = "TARGET_TYPE_SERVICE"] = 8;
                    values[valuesById[9] = "TARGET_TYPE_METHOD"] = 9;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofOptions";
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allowAlias] EnumOptions allowAlias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {boolean|null} [deprecatedLegacyJsonFieldConflicts] EnumOptions deprecatedLegacyJsonFieldConflicts
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allowAlias.
                 * @member {boolean} allowAlias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allowAlias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions deprecatedLegacyJsonFieldConflicts.
                 * @member {boolean} deprecatedLegacyJsonFieldConflicts
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecatedLegacyJsonFieldConflicts = false;
    
                /**
                 * EnumOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allowAlias != null && Object.hasOwnProperty.call(message, "allowAlias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.deprecatedLegacyJsonFieldConflicts != null && Object.hasOwnProperty.call(message, "deprecatedLegacyJsonFieldConflicts"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.deprecatedLegacyJsonFieldConflicts);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                message.allowAlias = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 6: {
                                message.deprecatedLegacyJsonFieldConflicts = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        if (typeof message.allowAlias !== "boolean")
                            return "allowAlias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        if (typeof message.deprecatedLegacyJsonFieldConflicts !== "boolean")
                            return "deprecatedLegacyJsonFieldConflicts: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allowAlias != null)
                        message.allowAlias = Boolean(object.allowAlias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.deprecatedLegacyJsonFieldConflicts != null)
                        message.deprecatedLegacyJsonFieldConflicts = Boolean(object.deprecatedLegacyJsonFieldConflicts);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.allowAlias = false;
                        object.deprecated = false;
                        object.deprecatedLegacyJsonFieldConflicts = false;
                    }
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        object.allowAlias = message.allowAlias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        object.deprecatedLegacyJsonFieldConflicts = message.deprecatedLegacyJsonFieldConflicts;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumOptions";
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueOptions";
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption
                 * @property {string|null} [".google.api.defaultHost"] ServiceOptions .google.api.defaultHost
                 * @property {string|null} [".google.api.oauthScopes"] ServiceOptions .google.api.oauthScopes
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * ServiceOptions .google.api.defaultHost.
                 * @member {string} .google.api.defaultHost
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.defaultHost"] = "";
    
                /**
                 * ServiceOptions .google.api.oauthScopes.
                 * @member {string} .google.api.oauthScopes
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.oauthScopes"] = "";
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.defaultHost"] != null && Object.hasOwnProperty.call(message, ".google.api.defaultHost"))
                        writer.uint32(/* id 1049, wireType 2 =*/8394).string(message[".google.api.defaultHost"]);
                    if (message[".google.api.oauthScopes"] != null && Object.hasOwnProperty.call(message, ".google.api.oauthScopes"))
                        writer.uint32(/* id 1050, wireType 2 =*/8402).string(message[".google.api.oauthScopes"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1049: {
                                message[".google.api.defaultHost"] = reader.string();
                                break;
                            }
                        case 1050: {
                                message[".google.api.oauthScopes"] = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        if (!$util.isString(message[".google.api.defaultHost"]))
                            return ".google.api.defaultHost: string expected";
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        if (!$util.isString(message[".google.api.oauthScopes"]))
                            return ".google.api.oauthScopes: string expected";
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.defaultHost"] != null)
                        message[".google.api.defaultHost"] = String(object[".google.api.defaultHost"]);
                    if (object[".google.api.oauthScopes"] != null)
                        message[".google.api.oauthScopes"] = String(object[".google.api.oauthScopes"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object[".google.api.defaultHost"] = "";
                        object[".google.api.oauthScopes"] = "";
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        object[".google.api.defaultHost"] = message[".google.api.defaultHost"];
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        object[".google.api.oauthScopes"] = message[".google.api.oauthScopes"];
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceOptions";
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {google.protobuf.MethodOptions.IdempotencyLevel|null} [idempotencyLevel] MethodOptions idempotencyLevel
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption
                 * @property {google.api.IHttpRule|null} [".google.api.http"] MethodOptions .google.api.http
                 * @property {Array.<string>|null} [".google.api.methodSignature"] MethodOptions .google.api.methodSignature
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.methodSignature"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions idempotencyLevel.
                 * @member {google.protobuf.MethodOptions.IdempotencyLevel} idempotencyLevel
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.idempotencyLevel = 0;
    
                /**
                 * MethodOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MethodOptions .google.api.http.
                 * @member {google.api.IHttpRule|null|undefined} .google.api.http
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.http"] = null;
    
                /**
                 * MethodOptions .google.api.methodSignature.
                 * @member {Array.<string>} .google.api.methodSignature
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.methodSignature"] = $util.emptyArray;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.idempotencyLevel != null && Object.hasOwnProperty.call(message, "idempotencyLevel"))
                        writer.uint32(/* id 34, wireType 0 =*/272).int32(message.idempotencyLevel);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.methodSignature"] != null && message[".google.api.methodSignature"].length)
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            writer.uint32(/* id 1051, wireType 2 =*/8410).string(message[".google.api.methodSignature"][i]);
                    if (message[".google.api.http"] != null && Object.hasOwnProperty.call(message, ".google.api.http"))
                        $root.google.api.HttpRule.encode(message[".google.api.http"], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 34: {
                                message.idempotencyLevel = reader.int32();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 72295728: {
                                message[".google.api.http"] = $root.google.api.HttpRule.decode(reader, reader.uint32());
                                break;
                            }
                        case 1051: {
                                if (!(message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length))
                                    message[".google.api.methodSignature"] = [];
                                message[".google.api.methodSignature"].push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        switch (message.idempotencyLevel) {
                        default:
                            return "idempotencyLevel: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http")) {
                        var error = $root.google.api.HttpRule.verify(message[".google.api.http"]);
                        if (error)
                            return ".google.api.http." + error;
                    }
                    if (message[".google.api.methodSignature"] != null && message.hasOwnProperty(".google.api.methodSignature")) {
                        if (!Array.isArray(message[".google.api.methodSignature"]))
                            return ".google.api.methodSignature: array expected";
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            if (!$util.isString(message[".google.api.methodSignature"][i]))
                                return ".google.api.methodSignature: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    switch (object.idempotencyLevel) {
                    default:
                        if (typeof object.idempotencyLevel === "number") {
                            message.idempotencyLevel = object.idempotencyLevel;
                            break;
                        }
                        break;
                    case "IDEMPOTENCY_UNKNOWN":
                    case 0:
                        message.idempotencyLevel = 0;
                        break;
                    case "NO_SIDE_EFFECTS":
                    case 1:
                        message.idempotencyLevel = 1;
                        break;
                    case "IDEMPOTENT":
                    case 2:
                        message.idempotencyLevel = 2;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.http"] != null) {
                        if (typeof object[".google.api.http"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
                        message[".google.api.http"] = $root.google.api.HttpRule.fromObject(object[".google.api.http"]);
                    }
                    if (object[".google.api.methodSignature"]) {
                        if (!Array.isArray(object[".google.api.methodSignature"]))
                            throw TypeError(".google.protobuf.MethodOptions..google.api.methodSignature: array expected");
                        message[".google.api.methodSignature"] = [];
                        for (var i = 0; i < object[".google.api.methodSignature"].length; ++i)
                            message[".google.api.methodSignature"][i] = String(object[".google.api.methodSignature"][i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.methodSignature"] = [];
                    }
                    if (options.defaults) {
                        object.deprecated = false;
                        object.idempotencyLevel = options.enums === String ? "IDEMPOTENCY_UNKNOWN" : 0;
                        object[".google.api.http"] = null;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        object.idempotencyLevel = options.enums === String ? $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] === undefined ? message.idempotencyLevel : $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] : message.idempotencyLevel;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length) {
                        object[".google.api.methodSignature"] = [];
                        for (var j = 0; j < message[".google.api.methodSignature"].length; ++j)
                            object[".google.api.methodSignature"][j] = message[".google.api.methodSignature"][j];
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                        object[".google.api.http"] = $root.google.api.HttpRule.toObject(message[".google.api.http"], options);
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodOptions";
                };
    
                /**
                 * IdempotencyLevel enum.
                 * @name google.protobuf.MethodOptions.IdempotencyLevel
                 * @enum {number}
                 * @property {number} IDEMPOTENCY_UNKNOWN=0 IDEMPOTENCY_UNKNOWN value
                 * @property {number} NO_SIDE_EFFECTS=1 NO_SIDE_EFFECTS value
                 * @property {number} IDEMPOTENT=2 IDEMPOTENT value
                 */
                MethodOptions.IdempotencyLevel = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "IDEMPOTENCY_UNKNOWN"] = 0;
                    values[valuesById[1] = "NO_SIDE_EFFECTS"] = 1;
                    values[valuesById[2] = "IDEMPOTENT"] = 2;
                    return values;
                })();
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifierValue] UninterpretedOption identifierValue
                 * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue
                 * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue
                 * @property {number|null} [doubleValue] UninterpretedOption doubleValue
                 * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue
                 * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifierValue.
                 * @member {string} identifierValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifierValue = "";
    
                /**
                 * UninterpretedOption positiveIntValue.
                 * @member {number|Long} positiveIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negativeIntValue.
                 * @member {number|Long} negativeIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption doubleValue.
                 * @member {number} doubleValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.doubleValue = 0;
    
                /**
                 * UninterpretedOption stringValue.
                 * @member {Uint8Array} stringValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.stringValue = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregateValue.
                 * @member {string} aggregateValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregateValue = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifierValue != null && Object.hasOwnProperty.call(message, "identifierValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);
                    if (message.positiveIntValue != null && Object.hasOwnProperty.call(message, "positiveIntValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);
                    if (message.negativeIntValue != null && Object.hasOwnProperty.call(message, "negativeIntValue"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);
                    if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);
                    if (message.aggregateValue != null && Object.hasOwnProperty.call(message, "aggregateValue"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.name && message.name.length))
                                    message.name = [];
                                message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.identifierValue = reader.string();
                                break;
                            }
                        case 4: {
                                message.positiveIntValue = reader.uint64();
                                break;
                            }
                        case 5: {
                                message.negativeIntValue = reader.int64();
                                break;
                            }
                        case 6: {
                                message.doubleValue = reader.double();
                                break;
                            }
                        case 7: {
                                message.stringValue = reader.bytes();
                                break;
                            }
                        case 8: {
                                message.aggregateValue = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        if (!$util.isString(message.identifierValue))
                            return "identifierValue: string expected";
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))
                            return "positiveIntValue: integer|Long expected";
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))
                            return "negativeIntValue: integer|Long expected";
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        if (typeof message.doubleValue !== "number")
                            return "doubleValue: number expected";
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        if (!(message.stringValue && typeof message.stringValue.length === "number" || $util.isString(message.stringValue)))
                            return "stringValue: buffer expected";
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        if (!$util.isString(message.aggregateValue))
                            return "aggregateValue: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifierValue != null)
                        message.identifierValue = String(object.identifierValue);
                    if (object.positiveIntValue != null)
                        if ($util.Long)
                            (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;
                        else if (typeof object.positiveIntValue === "string")
                            message.positiveIntValue = parseInt(object.positiveIntValue, 10);
                        else if (typeof object.positiveIntValue === "number")
                            message.positiveIntValue = object.positiveIntValue;
                        else if (typeof object.positiveIntValue === "object")
                            message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);
                    if (object.negativeIntValue != null)
                        if ($util.Long)
                            (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;
                        else if (typeof object.negativeIntValue === "string")
                            message.negativeIntValue = parseInt(object.negativeIntValue, 10);
                        else if (typeof object.negativeIntValue === "number")
                            message.negativeIntValue = object.negativeIntValue;
                        else if (typeof object.negativeIntValue === "object")
                            message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();
                    if (object.doubleValue != null)
                        message.doubleValue = Number(object.doubleValue);
                    if (object.stringValue != null)
                        if (typeof object.stringValue === "string")
                            $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);
                        else if (object.stringValue.length >= 0)
                            message.stringValue = object.stringValue;
                    if (object.aggregateValue != null)
                        message.aggregateValue = String(object.aggregateValue);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifierValue = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positiveIntValue = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negativeIntValue = options.longs === String ? "0" : 0;
                        object.doubleValue = 0;
                        if (options.bytes === String)
                            object.stringValue = "";
                        else {
                            object.stringValue = [];
                            if (options.bytes !== Array)
                                object.stringValue = $util.newBuffer(object.stringValue);
                        }
                        object.aggregateValue = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        object.identifierValue = message.identifierValue;
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (typeof message.positiveIntValue === "number")
                            object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;
                        else
                            object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (typeof message.negativeIntValue === "number")
                            object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;
                        else
                            object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        object.aggregateValue = message.aggregateValue;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UninterpretedOption
                 * @function getTypeUrl
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UninterpretedOption.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UninterpretedOption";
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} namePart NamePart namePart
                     * @property {boolean} isExtension NamePart isExtension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart namePart.
                     * @member {string} namePart
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.namePart = "";
    
                    /**
                     * NamePart isExtension.
                     * @member {boolean} isExtension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.isExtension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.namePart = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.isExtension = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("namePart"))
                            throw $util.ProtocolError("missing required 'namePart'", { instance: message });
                        if (!message.hasOwnProperty("isExtension"))
                            throw $util.ProtocolError("missing required 'isExtension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.namePart))
                            return "namePart: string expected";
                        if (typeof message.isExtension !== "boolean")
                            return "isExtension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.namePart != null)
                            message.namePart = String(object.namePart);
                        if (object.isExtension != null)
                            message.isExtension = Boolean(object.isExtension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.namePart = "";
                            object.isExtension = false;
                        }
                        if (message.namePart != null && message.hasOwnProperty("namePart"))
                            object.namePart = message.namePart;
                        if (message.isExtension != null && message.hasOwnProperty("isExtension"))
                            object.isExtension = message.isExtension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NamePart
                     * @function getTypeUrl
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NamePart.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.UninterpretedOption.NamePart";
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.location && message.location.length))
                                    message.location = [];
                                message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for SourceCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SourceCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.SourceCodeInfo";
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leadingComments] Location leadingComments
                     * @property {string|null} [trailingComments] Location trailingComments
                     * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leadingDetachedComments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leadingComments.
                     * @member {string} leadingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingComments = "";
    
                    /**
                     * Location trailingComments.
                     * @member {string} trailingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailingComments = "";
    
                    /**
                     * Location leadingDetachedComments.
                     * @member {Array.<string>} leadingDetachedComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingDetachedComments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leadingComments != null && Object.hasOwnProperty.call(message, "leadingComments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);
                        if (message.trailingComments != null && Object.hasOwnProperty.call(message, "trailingComments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);
                        if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    if (!(message.span && message.span.length))
                                        message.span = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.span.push(reader.int32());
                                    } else
                                        message.span.push(reader.int32());
                                    break;
                                }
                            case 3: {
                                    message.leadingComments = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.trailingComments = reader.string();
                                    break;
                                }
                            case 6: {
                                    if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))
                                        message.leadingDetachedComments = [];
                                    message.leadingDetachedComments.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            if (!$util.isString(message.leadingComments))
                                return "leadingComments: string expected";
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            if (!$util.isString(message.trailingComments))
                                return "trailingComments: string expected";
                        if (message.leadingDetachedComments != null && message.hasOwnProperty("leadingDetachedComments")) {
                            if (!Array.isArray(message.leadingDetachedComments))
                                return "leadingDetachedComments: array expected";
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                if (!$util.isString(message.leadingDetachedComments[i]))
                                    return "leadingDetachedComments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leadingComments != null)
                            message.leadingComments = String(object.leadingComments);
                        if (object.trailingComments != null)
                            message.trailingComments = String(object.trailingComments);
                        if (object.leadingDetachedComments) {
                            if (!Array.isArray(object.leadingDetachedComments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
                            message.leadingDetachedComments = [];
                            for (var i = 0; i < object.leadingDetachedComments.length; ++i)
                                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leadingDetachedComments = [];
                        }
                        if (options.defaults) {
                            object.leadingComments = "";
                            object.trailingComments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            object.leadingComments = message.leadingComments;
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            object.trailingComments = message.trailingComments;
                        if (message.leadingDetachedComments && message.leadingDetachedComments.length) {
                            object.leadingDetachedComments = [];
                            for (var j = 0; j < message.leadingDetachedComments.length; ++j)
                                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Location
                     * @function getTypeUrl
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Location.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.SourceCodeInfo.Location";
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.annotation && message.annotation.length))
                                    message.annotation = [];
                                message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GeneratedCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GeneratedCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo";
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [sourceFile] Annotation sourceFile
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     * @property {google.protobuf.GeneratedCodeInfo.Annotation.Semantic|null} [semantic] Annotation semantic
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation sourceFile.
                     * @member {string} sourceFile
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.sourceFile = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Annotation semantic.
                     * @member {google.protobuf.GeneratedCodeInfo.Annotation.Semantic} semantic
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.semantic = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.sourceFile != null && Object.hasOwnProperty.call(message, "sourceFile"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);
                        if (message.begin != null && Object.hasOwnProperty.call(message, "begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        if (message.semantic != null && Object.hasOwnProperty.call(message, "semantic"))
                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.semantic);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    message.sourceFile = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.begin = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 5: {
                                    message.semantic = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            if (!$util.isString(message.sourceFile))
                                return "sourceFile: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            switch (message.semantic) {
                            default:
                                return "semantic: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.sourceFile != null)
                            message.sourceFile = String(object.sourceFile);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        switch (object.semantic) {
                        default:
                            if (typeof object.semantic === "number") {
                                message.semantic = object.semantic;
                                break;
                            }
                            break;
                        case "NONE":
                        case 0:
                            message.semantic = 0;
                            break;
                        case "SET":
                        case 1:
                            message.semantic = 1;
                            break;
                        case "ALIAS":
                        case 2:
                            message.semantic = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.sourceFile = "";
                            object.begin = 0;
                            object.end = 0;
                            object.semantic = options.enums === String ? "NONE" : 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            object.sourceFile = message.sourceFile;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            object.semantic = options.enums === String ? $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] === undefined ? message.semantic : $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] : message.semantic;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Annotation
                     * @function getTypeUrl
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Annotation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo.Annotation";
                    };
    
                    /**
                     * Semantic enum.
                     * @name google.protobuf.GeneratedCodeInfo.Annotation.Semantic
                     * @enum {number}
                     * @property {number} NONE=0 NONE value
                     * @property {number} SET=1 SET value
                     * @property {number} ALIAS=2 ALIAS value
                     */
                    Annotation.Semantic = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "NONE"] = 0;
                        values[valuesById[1] = "SET"] = 1;
                        values[valuesById[2] = "ALIAS"] = 2;
                        return values;
                    })();
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            protobuf.Duration = (function() {
    
                /**
                 * Properties of a Duration.
                 * @memberof google.protobuf
                 * @interface IDuration
                 * @property {number|Long|null} [seconds] Duration seconds
                 * @property {number|null} [nanos] Duration nanos
                 */
    
                /**
                 * Constructs a new Duration.
                 * @memberof google.protobuf
                 * @classdesc Represents a Duration.
                 * @implements IDuration
                 * @constructor
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 */
                function Duration(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Duration seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Duration nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.nanos = 0;
    
                /**
                 * Creates a new Duration instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 * @returns {google.protobuf.Duration} Duration instance
                 */
                Duration.create = function create(properties) {
                    return new Duration(properties);
                };
    
                /**
                 * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Duration message, length delimited. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Duration();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Duration message.
                 * @function verify
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Duration.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Duration message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Duration} Duration
                 */
                Duration.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Duration)
                        return object;
                    var message = new $root.google.protobuf.Duration();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Duration message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.Duration} message Duration
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Duration.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Duration to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Duration
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Duration.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Duration
                 * @function getTypeUrl
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Duration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Duration";
                };
    
                return Duration;
            })();
    
            protobuf.Timestamp = (function() {
    
                /**
                 * Properties of a Timestamp.
                 * @memberof google.protobuf
                 * @interface ITimestamp
                 * @property {number|Long|null} [seconds] Timestamp seconds
                 * @property {number|null} [nanos] Timestamp nanos
                 */
    
                /**
                 * Constructs a new Timestamp.
                 * @memberof google.protobuf
                 * @classdesc Represents a Timestamp.
                 * @implements ITimestamp
                 * @constructor
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 */
                function Timestamp(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Timestamp seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Timestamp nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.nanos = 0;
    
                /**
                 * Creates a new Timestamp instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 * @returns {google.protobuf.Timestamp} Timestamp instance
                 */
                Timestamp.create = function create(properties) {
                    return new Timestamp(properties);
                };
    
                /**
                 * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Timestamp message.
                 * @function verify
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Timestamp.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Timestamp} Timestamp
                 */
                Timestamp.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Timestamp)
                        return object;
                    var message = new $root.google.protobuf.Timestamp();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.Timestamp} message Timestamp
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Timestamp.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Timestamp to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Timestamp.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Timestamp
                 * @function getTypeUrl
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Timestamp.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Timestamp";
                };
    
                return Timestamp;
            })();
    
            protobuf.Any = (function() {
    
                /**
                 * Properties of an Any.
                 * @memberof google.protobuf
                 * @interface IAny
                 * @property {string|null} [type_url] Any type_url
                 * @property {Uint8Array|null} [value] Any value
                 */
    
                /**
                 * Constructs a new Any.
                 * @memberof google.protobuf
                 * @classdesc Represents an Any.
                 * @implements IAny
                 * @constructor
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 */
                function Any(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Any type_url.
                 * @member {string} type_url
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.type_url = "";
    
                /**
                 * Any value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new Any instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 * @returns {google.protobuf.Any} Any instance
                 */
                Any.create = function create(properties) {
                    return new Any(properties);
                };
    
                /**
                 * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type_url != null && Object.hasOwnProperty.call(message, "type_url"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type_url);
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Any();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type_url = reader.string();
                                break;
                            }
                        case 2: {
                                message.value = reader.bytes();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Any message.
                 * @function verify
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Any.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        if (!$util.isString(message.type_url))
                            return "type_url: string expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates an Any message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Any} Any
                 */
                Any.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Any)
                        return object;
                    var message = new $root.google.protobuf.Any();
                    if (object.type_url != null)
                        message.type_url = String(object.type_url);
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length >= 0)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Any message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.Any} message Any
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Any.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type_url = "";
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    }
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        object.type_url = message.type_url;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this Any to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Any
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Any.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Any
                 * @function getTypeUrl
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Any.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Any";
                };
    
                return Any;
            })();
    
            protobuf.FieldMask = (function() {
    
                /**
                 * Properties of a FieldMask.
                 * @memberof google.protobuf
                 * @interface IFieldMask
                 * @property {Array.<string>|null} [paths] FieldMask paths
                 */
    
                /**
                 * Constructs a new FieldMask.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldMask.
                 * @implements IFieldMask
                 * @constructor
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 */
                function FieldMask(properties) {
                    this.paths = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldMask paths.
                 * @member {Array.<string>} paths
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 */
                FieldMask.prototype.paths = $util.emptyArray;
    
                /**
                 * Creates a new FieldMask instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 * @returns {google.protobuf.FieldMask} FieldMask instance
                 */
                FieldMask.create = function create(properties) {
                    return new FieldMask(properties);
                };
    
                /**
                 * Encodes the specified FieldMask message. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.paths != null && message.paths.length)
                        for (var i = 0; i < message.paths.length; ++i)
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.paths[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldMask message, length delimited. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldMask();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.paths && message.paths.length))
                                    message.paths = [];
                                message.paths.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldMask message.
                 * @function verify
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldMask.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.paths != null && message.hasOwnProperty("paths")) {
                        if (!Array.isArray(message.paths))
                            return "paths: array expected";
                        for (var i = 0; i < message.paths.length; ++i)
                            if (!$util.isString(message.paths[i]))
                                return "paths: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldMask message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldMask} FieldMask
                 */
                FieldMask.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldMask)
                        return object;
                    var message = new $root.google.protobuf.FieldMask();
                    if (object.paths) {
                        if (!Array.isArray(object.paths))
                            throw TypeError(".google.protobuf.FieldMask.paths: array expected");
                        message.paths = [];
                        for (var i = 0; i < object.paths.length; ++i)
                            message.paths[i] = String(object.paths[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldMask message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.FieldMask} message FieldMask
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldMask.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.paths = [];
                    if (message.paths && message.paths.length) {
                        object.paths = [];
                        for (var j = 0; j < message.paths.length; ++j)
                            object.paths[j] = message.paths[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this FieldMask to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldMask.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldMask
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldMask.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldMask";
                };
    
                return FieldMask;
            })();
    
            protobuf.Empty = (function() {
    
                /**
                 * Properties of an Empty.
                 * @memberof google.protobuf
                 * @interface IEmpty
                 */
    
                /**
                 * Constructs a new Empty.
                 * @memberof google.protobuf
                 * @classdesc Represents an Empty.
                 * @implements IEmpty
                 * @constructor
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 */
                function Empty(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Creates a new Empty instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 * @returns {google.protobuf.Empty} Empty instance
                 */
                Empty.create = function create(properties) {
                    return new Empty(properties);
                };
    
                /**
                 * Encodes the specified Empty message. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };
    
                /**
                 * Encodes the specified Empty message, length delimited. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Empty();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Empty message.
                 * @function verify
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Empty.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };
    
                /**
                 * Creates an Empty message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Empty} Empty
                 */
                Empty.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Empty)
                        return object;
                    return new $root.google.protobuf.Empty();
                };
    
                /**
                 * Creates a plain object from an Empty message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.Empty} message Empty
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Empty.toObject = function toObject() {
                    return {};
                };
    
                /**
                 * Converts this Empty to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Empty
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Empty.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Empty
                 * @function getTypeUrl
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Empty.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Empty";
                };
    
                return Empty;
            })();
    
            return protobuf;
        })();
    
        google.rpc = (function() {
    
            /**
             * Namespace rpc.
             * @memberof google
             * @namespace
             */
            var rpc = {};
    
            rpc.Status = (function() {
    
                /**
                 * Properties of a Status.
                 * @memberof google.rpc
                 * @interface IStatus
                 * @property {number|null} [code] Status code
                 * @property {string|null} [message] Status message
                 * @property {Array.<google.protobuf.IAny>|null} [details] Status details
                 */
    
                /**
                 * Constructs a new Status.
                 * @memberof google.rpc
                 * @classdesc Represents a Status.
                 * @implements IStatus
                 * @constructor
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 */
                function Status(properties) {
                    this.details = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Status code.
                 * @member {number} code
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.code = 0;
    
                /**
                 * Status message.
                 * @member {string} message
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.message = "";
    
                /**
                 * Status details.
                 * @member {Array.<google.protobuf.IAny>} details
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.details = $util.emptyArray;
    
                /**
                 * Creates a new Status instance using the specified properties.
                 * @function create
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 * @returns {google.rpc.Status} Status instance
                 */
                Status.create = function create(properties) {
                    return new Status(properties);
                };
    
                /**
                 * Encodes the specified Status message. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                    if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
                    if (message.details != null && message.details.length)
                        for (var i = 0; i < message.details.length; ++i)
                            $root.google.protobuf.Any.encode(message.details[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Status message, length delimited. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.rpc.Status();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.code = reader.int32();
                                break;
                            }
                        case 2: {
                                message.message = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.details && message.details.length))
                                    message.details = [];
                                message.details.push($root.google.protobuf.Any.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Status message.
                 * @function verify
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Status.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.code != null && message.hasOwnProperty("code"))
                        if (!$util.isInteger(message.code))
                            return "code: integer expected";
                    if (message.message != null && message.hasOwnProperty("message"))
                        if (!$util.isString(message.message))
                            return "message: string expected";
                    if (message.details != null && message.hasOwnProperty("details")) {
                        if (!Array.isArray(message.details))
                            return "details: array expected";
                        for (var i = 0; i < message.details.length; ++i) {
                            var error = $root.google.protobuf.Any.verify(message.details[i]);
                            if (error)
                                return "details." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Status message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.rpc.Status} Status
                 */
                Status.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.rpc.Status)
                        return object;
                    var message = new $root.google.rpc.Status();
                    if (object.code != null)
                        message.code = object.code | 0;
                    if (object.message != null)
                        message.message = String(object.message);
                    if (object.details) {
                        if (!Array.isArray(object.details))
                            throw TypeError(".google.rpc.Status.details: array expected");
                        message.details = [];
                        for (var i = 0; i < object.details.length; ++i) {
                            if (typeof object.details[i] !== "object")
                                throw TypeError(".google.rpc.Status.details: object expected");
                            message.details[i] = $root.google.protobuf.Any.fromObject(object.details[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Status message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.Status} message Status
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Status.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.details = [];
                    if (options.defaults) {
                        object.code = 0;
                        object.message = "";
                    }
                    if (message.code != null && message.hasOwnProperty("code"))
                        object.code = message.code;
                    if (message.message != null && message.hasOwnProperty("message"))
                        object.message = message.message;
                    if (message.details && message.details.length) {
                        object.details = [];
                        for (var j = 0; j < message.details.length; ++j)
                            object.details[j] = $root.google.protobuf.Any.toObject(message.details[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Status to JSON.
                 * @function toJSON
                 * @memberof google.rpc.Status
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Status.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Status
                 * @function getTypeUrl
                 * @memberof google.rpc.Status
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Status.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.rpc.Status";
                };
    
                return Status;
            })();
    
            return rpc;
        })();
    
        google.iam = (function() {
    
            /**
             * Namespace iam.
             * @memberof google
             * @namespace
             */
            var iam = {};
    
            iam.v1 = (function() {
    
                /**
                 * Namespace v1.
                 * @memberof google.iam
                 * @namespace
                 */
                var v1 = {};
    
                v1.IAMPolicy = (function() {
    
                    /**
                     * Constructs a new IAMPolicy service.
                     * @memberof google.iam.v1
                     * @classdesc Represents a IAMPolicy
                     * @extends $protobuf.rpc.Service
                     * @constructor
                     * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                     */
                    function IAMPolicy(rpcImpl, requestDelimited, responseDelimited) {
                        $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                    }
    
                    (IAMPolicy.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = IAMPolicy;
    
                    /**
                     * Creates new IAMPolicy service using the specified rpc implementation.
                     * @function create
                     * @memberof google.iam.v1.IAMPolicy
                     * @static
                     * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                     * @returns {IAMPolicy} RPC service. Useful where requests and/or responses are streamed.
                     */
                    IAMPolicy.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                        return new this(rpcImpl, requestDelimited, responseDelimited);
                    };
    
                    /**
                     * Callback as used by {@link google.iam.v1.IAMPolicy|setIamPolicy}.
                     * @memberof google.iam.v1.IAMPolicy
                     * @typedef SetIamPolicyCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.iam.v1.Policy} [response] Policy
                     */
    
                    /**
                     * Calls SetIamPolicy.
                     * @function setIamPolicy
                     * @memberof google.iam.v1.IAMPolicy
                     * @instance
                     * @param {google.iam.v1.ISetIamPolicyRequest} request SetIamPolicyRequest message or plain object
                     * @param {google.iam.v1.IAMPolicy.SetIamPolicyCallback} callback Node-style callback called with the error, if any, and Policy
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(IAMPolicy.prototype.setIamPolicy = function setIamPolicy(request, callback) {
                        return this.rpcCall(setIamPolicy, $root.google.iam.v1.SetIamPolicyRequest, $root.google.iam.v1.Policy, request, callback);
                    }, "name", { value: "SetIamPolicy" });
    
                    /**
                     * Calls SetIamPolicy.
                     * @function setIamPolicy
                     * @memberof google.iam.v1.IAMPolicy
                     * @instance
                     * @param {google.iam.v1.ISetIamPolicyRequest} request SetIamPolicyRequest message or plain object
                     * @returns {Promise<google.iam.v1.Policy>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.iam.v1.IAMPolicy|getIamPolicy}.
                     * @memberof google.iam.v1.IAMPolicy
                     * @typedef GetIamPolicyCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.iam.v1.Policy} [response] Policy
                     */
    
                    /**
                     * Calls GetIamPolicy.
                     * @function getIamPolicy
                     * @memberof google.iam.v1.IAMPolicy
                     * @instance
                     * @param {google.iam.v1.IGetIamPolicyRequest} request GetIamPolicyRequest message or plain object
                     * @param {google.iam.v1.IAMPolicy.GetIamPolicyCallback} callback Node-style callback called with the error, if any, and Policy
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(IAMPolicy.prototype.getIamPolicy = function getIamPolicy(request, callback) {
                        return this.rpcCall(getIamPolicy, $root.google.iam.v1.GetIamPolicyRequest, $root.google.iam.v1.Policy, request, callback);
                    }, "name", { value: "GetIamPolicy" });
    
                    /**
                     * Calls GetIamPolicy.
                     * @function getIamPolicy
                     * @memberof google.iam.v1.IAMPolicy
                     * @instance
                     * @param {google.iam.v1.IGetIamPolicyRequest} request GetIamPolicyRequest message or plain object
                     * @returns {Promise<google.iam.v1.Policy>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.iam.v1.IAMPolicy|testIamPermissions}.
                     * @memberof google.iam.v1.IAMPolicy
                     * @typedef TestIamPermissionsCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.iam.v1.TestIamPermissionsResponse} [response] TestIamPermissionsResponse
                     */
    
                    /**
                     * Calls TestIamPermissions.
                     * @function testIamPermissions
                     * @memberof google.iam.v1.IAMPolicy
                     * @instance
                     * @param {google.iam.v1.ITestIamPermissionsRequest} request TestIamPermissionsRequest message or plain object
                     * @param {google.iam.v1.IAMPolicy.TestIamPermissionsCallback} callback Node-style callback called with the error, if any, and TestIamPermissionsResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(IAMPolicy.prototype.testIamPermissions = function testIamPermissions(request, callback) {
                        return this.rpcCall(testIamPermissions, $root.google.iam.v1.TestIamPermissionsRequest, $root.google.iam.v1.TestIamPermissionsResponse, request, callback);
                    }, "name", { value: "TestIamPermissions" });
    
                    /**
                     * Calls TestIamPermissions.
                     * @function testIamPermissions
                     * @memberof google.iam.v1.IAMPolicy
                     * @instance
                     * @param {google.iam.v1.ITestIamPermissionsRequest} request TestIamPermissionsRequest message or plain object
                     * @returns {Promise<google.iam.v1.TestIamPermissionsResponse>} Promise
                     * @variation 2
                     */
    
                    return IAMPolicy;
                })();
    
                v1.SetIamPolicyRequest = (function() {
    
                    /**
                     * Properties of a SetIamPolicyRequest.
                     * @memberof google.iam.v1
                     * @interface ISetIamPolicyRequest
                     * @property {string|null} [resource] SetIamPolicyRequest resource
                     * @property {google.iam.v1.IPolicy|null} [policy] SetIamPolicyRequest policy
                     * @property {google.protobuf.IFieldMask|null} [updateMask] SetIamPolicyRequest updateMask
                     */
    
                    /**
                     * Constructs a new SetIamPolicyRequest.
                     * @memberof google.iam.v1
                     * @classdesc Represents a SetIamPolicyRequest.
                     * @implements ISetIamPolicyRequest
                     * @constructor
                     * @param {google.iam.v1.ISetIamPolicyRequest=} [properties] Properties to set
                     */
                    function SetIamPolicyRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * SetIamPolicyRequest resource.
                     * @member {string} resource
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @instance
                     */
                    SetIamPolicyRequest.prototype.resource = "";
    
                    /**
                     * SetIamPolicyRequest policy.
                     * @member {google.iam.v1.IPolicy|null|undefined} policy
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @instance
                     */
                    SetIamPolicyRequest.prototype.policy = null;
    
                    /**
                     * SetIamPolicyRequest updateMask.
                     * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @instance
                     */
                    SetIamPolicyRequest.prototype.updateMask = null;
    
                    /**
                     * Creates a new SetIamPolicyRequest instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @static
                     * @param {google.iam.v1.ISetIamPolicyRequest=} [properties] Properties to set
                     * @returns {google.iam.v1.SetIamPolicyRequest} SetIamPolicyRequest instance
                     */
                    SetIamPolicyRequest.create = function create(properties) {
                        return new SetIamPolicyRequest(properties);
                    };
    
                    /**
                     * Encodes the specified SetIamPolicyRequest message. Does not implicitly {@link google.iam.v1.SetIamPolicyRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @static
                     * @param {google.iam.v1.ISetIamPolicyRequest} message SetIamPolicyRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SetIamPolicyRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.resource);
                        if (message.policy != null && Object.hasOwnProperty.call(message, "policy"))
                            $root.google.iam.v1.Policy.encode(message.policy, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                            $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified SetIamPolicyRequest message, length delimited. Does not implicitly {@link google.iam.v1.SetIamPolicyRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @static
                     * @param {google.iam.v1.ISetIamPolicyRequest} message SetIamPolicyRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SetIamPolicyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a SetIamPolicyRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.SetIamPolicyRequest} SetIamPolicyRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SetIamPolicyRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.SetIamPolicyRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.resource = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.policy = $root.google.iam.v1.Policy.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a SetIamPolicyRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.SetIamPolicyRequest} SetIamPolicyRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SetIamPolicyRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a SetIamPolicyRequest message.
                     * @function verify
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    SetIamPolicyRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.resource != null && message.hasOwnProperty("resource"))
                            if (!$util.isString(message.resource))
                                return "resource: string expected";
                        if (message.policy != null && message.hasOwnProperty("policy")) {
                            var error = $root.google.iam.v1.Policy.verify(message.policy);
                            if (error)
                                return "policy." + error;
                        }
                        if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                            var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                            if (error)
                                return "updateMask." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a SetIamPolicyRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.SetIamPolicyRequest} SetIamPolicyRequest
                     */
                    SetIamPolicyRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.SetIamPolicyRequest)
                            return object;
                        var message = new $root.google.iam.v1.SetIamPolicyRequest();
                        if (object.resource != null)
                            message.resource = String(object.resource);
                        if (object.policy != null) {
                            if (typeof object.policy !== "object")
                                throw TypeError(".google.iam.v1.SetIamPolicyRequest.policy: object expected");
                            message.policy = $root.google.iam.v1.Policy.fromObject(object.policy);
                        }
                        if (object.updateMask != null) {
                            if (typeof object.updateMask !== "object")
                                throw TypeError(".google.iam.v1.SetIamPolicyRequest.updateMask: object expected");
                            message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a SetIamPolicyRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @static
                     * @param {google.iam.v1.SetIamPolicyRequest} message SetIamPolicyRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    SetIamPolicyRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.resource = "";
                            object.policy = null;
                            object.updateMask = null;
                        }
                        if (message.resource != null && message.hasOwnProperty("resource"))
                            object.resource = message.resource;
                        if (message.policy != null && message.hasOwnProperty("policy"))
                            object.policy = $root.google.iam.v1.Policy.toObject(message.policy, options);
                        if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                            object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                        return object;
                    };
    
                    /**
                     * Converts this SetIamPolicyRequest to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    SetIamPolicyRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for SetIamPolicyRequest
                     * @function getTypeUrl
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    SetIamPolicyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.SetIamPolicyRequest";
                    };
    
                    return SetIamPolicyRequest;
                })();
    
                v1.GetIamPolicyRequest = (function() {
    
                    /**
                     * Properties of a GetIamPolicyRequest.
                     * @memberof google.iam.v1
                     * @interface IGetIamPolicyRequest
                     * @property {string|null} [resource] GetIamPolicyRequest resource
                     * @property {google.iam.v1.IGetPolicyOptions|null} [options] GetIamPolicyRequest options
                     */
    
                    /**
                     * Constructs a new GetIamPolicyRequest.
                     * @memberof google.iam.v1
                     * @classdesc Represents a GetIamPolicyRequest.
                     * @implements IGetIamPolicyRequest
                     * @constructor
                     * @param {google.iam.v1.IGetIamPolicyRequest=} [properties] Properties to set
                     */
                    function GetIamPolicyRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GetIamPolicyRequest resource.
                     * @member {string} resource
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @instance
                     */
                    GetIamPolicyRequest.prototype.resource = "";
    
                    /**
                     * GetIamPolicyRequest options.
                     * @member {google.iam.v1.IGetPolicyOptions|null|undefined} options
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @instance
                     */
                    GetIamPolicyRequest.prototype.options = null;
    
                    /**
                     * Creates a new GetIamPolicyRequest instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @static
                     * @param {google.iam.v1.IGetIamPolicyRequest=} [properties] Properties to set
                     * @returns {google.iam.v1.GetIamPolicyRequest} GetIamPolicyRequest instance
                     */
                    GetIamPolicyRequest.create = function create(properties) {
                        return new GetIamPolicyRequest(properties);
                    };
    
                    /**
                     * Encodes the specified GetIamPolicyRequest message. Does not implicitly {@link google.iam.v1.GetIamPolicyRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @static
                     * @param {google.iam.v1.IGetIamPolicyRequest} message GetIamPolicyRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetIamPolicyRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.resource);
                        if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                            $root.google.iam.v1.GetPolicyOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GetIamPolicyRequest message, length delimited. Does not implicitly {@link google.iam.v1.GetIamPolicyRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @static
                     * @param {google.iam.v1.IGetIamPolicyRequest} message GetIamPolicyRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetIamPolicyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GetIamPolicyRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.GetIamPolicyRequest} GetIamPolicyRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetIamPolicyRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.GetIamPolicyRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.resource = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.options = $root.google.iam.v1.GetPolicyOptions.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GetIamPolicyRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.GetIamPolicyRequest} GetIamPolicyRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetIamPolicyRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GetIamPolicyRequest message.
                     * @function verify
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GetIamPolicyRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.resource != null && message.hasOwnProperty("resource"))
                            if (!$util.isString(message.resource))
                                return "resource: string expected";
                        if (message.options != null && message.hasOwnProperty("options")) {
                            var error = $root.google.iam.v1.GetPolicyOptions.verify(message.options);
                            if (error)
                                return "options." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a GetIamPolicyRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.GetIamPolicyRequest} GetIamPolicyRequest
                     */
                    GetIamPolicyRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.GetIamPolicyRequest)
                            return object;
                        var message = new $root.google.iam.v1.GetIamPolicyRequest();
                        if (object.resource != null)
                            message.resource = String(object.resource);
                        if (object.options != null) {
                            if (typeof object.options !== "object")
                                throw TypeError(".google.iam.v1.GetIamPolicyRequest.options: object expected");
                            message.options = $root.google.iam.v1.GetPolicyOptions.fromObject(object.options);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GetIamPolicyRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @static
                     * @param {google.iam.v1.GetIamPolicyRequest} message GetIamPolicyRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GetIamPolicyRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.resource = "";
                            object.options = null;
                        }
                        if (message.resource != null && message.hasOwnProperty("resource"))
                            object.resource = message.resource;
                        if (message.options != null && message.hasOwnProperty("options"))
                            object.options = $root.google.iam.v1.GetPolicyOptions.toObject(message.options, options);
                        return object;
                    };
    
                    /**
                     * Converts this GetIamPolicyRequest to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GetIamPolicyRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GetIamPolicyRequest
                     * @function getTypeUrl
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GetIamPolicyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.GetIamPolicyRequest";
                    };
    
                    return GetIamPolicyRequest;
                })();
    
                v1.TestIamPermissionsRequest = (function() {
    
                    /**
                     * Properties of a TestIamPermissionsRequest.
                     * @memberof google.iam.v1
                     * @interface ITestIamPermissionsRequest
                     * @property {string|null} [resource] TestIamPermissionsRequest resource
                     * @property {Array.<string>|null} [permissions] TestIamPermissionsRequest permissions
                     */
    
                    /**
                     * Constructs a new TestIamPermissionsRequest.
                     * @memberof google.iam.v1
                     * @classdesc Represents a TestIamPermissionsRequest.
                     * @implements ITestIamPermissionsRequest
                     * @constructor
                     * @param {google.iam.v1.ITestIamPermissionsRequest=} [properties] Properties to set
                     */
                    function TestIamPermissionsRequest(properties) {
                        this.permissions = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * TestIamPermissionsRequest resource.
                     * @member {string} resource
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @instance
                     */
                    TestIamPermissionsRequest.prototype.resource = "";
    
                    /**
                     * TestIamPermissionsRequest permissions.
                     * @member {Array.<string>} permissions
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @instance
                     */
                    TestIamPermissionsRequest.prototype.permissions = $util.emptyArray;
    
                    /**
                     * Creates a new TestIamPermissionsRequest instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @static
                     * @param {google.iam.v1.ITestIamPermissionsRequest=} [properties] Properties to set
                     * @returns {google.iam.v1.TestIamPermissionsRequest} TestIamPermissionsRequest instance
                     */
                    TestIamPermissionsRequest.create = function create(properties) {
                        return new TestIamPermissionsRequest(properties);
                    };
    
                    /**
                     * Encodes the specified TestIamPermissionsRequest message. Does not implicitly {@link google.iam.v1.TestIamPermissionsRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @static
                     * @param {google.iam.v1.ITestIamPermissionsRequest} message TestIamPermissionsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TestIamPermissionsRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.resource);
                        if (message.permissions != null && message.permissions.length)
                            for (var i = 0; i < message.permissions.length; ++i)
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.permissions[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified TestIamPermissionsRequest message, length delimited. Does not implicitly {@link google.iam.v1.TestIamPermissionsRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @static
                     * @param {google.iam.v1.ITestIamPermissionsRequest} message TestIamPermissionsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TestIamPermissionsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a TestIamPermissionsRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.TestIamPermissionsRequest} TestIamPermissionsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TestIamPermissionsRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.TestIamPermissionsRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.resource = reader.string();
                                    break;
                                }
                            case 2: {
                                    if (!(message.permissions && message.permissions.length))
                                        message.permissions = [];
                                    message.permissions.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a TestIamPermissionsRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.TestIamPermissionsRequest} TestIamPermissionsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TestIamPermissionsRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a TestIamPermissionsRequest message.
                     * @function verify
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    TestIamPermissionsRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.resource != null && message.hasOwnProperty("resource"))
                            if (!$util.isString(message.resource))
                                return "resource: string expected";
                        if (message.permissions != null && message.hasOwnProperty("permissions")) {
                            if (!Array.isArray(message.permissions))
                                return "permissions: array expected";
                            for (var i = 0; i < message.permissions.length; ++i)
                                if (!$util.isString(message.permissions[i]))
                                    return "permissions: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a TestIamPermissionsRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.TestIamPermissionsRequest} TestIamPermissionsRequest
                     */
                    TestIamPermissionsRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.TestIamPermissionsRequest)
                            return object;
                        var message = new $root.google.iam.v1.TestIamPermissionsRequest();
                        if (object.resource != null)
                            message.resource = String(object.resource);
                        if (object.permissions) {
                            if (!Array.isArray(object.permissions))
                                throw TypeError(".google.iam.v1.TestIamPermissionsRequest.permissions: array expected");
                            message.permissions = [];
                            for (var i = 0; i < object.permissions.length; ++i)
                                message.permissions[i] = String(object.permissions[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a TestIamPermissionsRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @static
                     * @param {google.iam.v1.TestIamPermissionsRequest} message TestIamPermissionsRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    TestIamPermissionsRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.permissions = [];
                        if (options.defaults)
                            object.resource = "";
                        if (message.resource != null && message.hasOwnProperty("resource"))
                            object.resource = message.resource;
                        if (message.permissions && message.permissions.length) {
                            object.permissions = [];
                            for (var j = 0; j < message.permissions.length; ++j)
                                object.permissions[j] = message.permissions[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this TestIamPermissionsRequest to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    TestIamPermissionsRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for TestIamPermissionsRequest
                     * @function getTypeUrl
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    TestIamPermissionsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.TestIamPermissionsRequest";
                    };
    
                    return TestIamPermissionsRequest;
                })();
    
                v1.TestIamPermissionsResponse = (function() {
    
                    /**
                     * Properties of a TestIamPermissionsResponse.
                     * @memberof google.iam.v1
                     * @interface ITestIamPermissionsResponse
                     * @property {Array.<string>|null} [permissions] TestIamPermissionsResponse permissions
                     */
    
                    /**
                     * Constructs a new TestIamPermissionsResponse.
                     * @memberof google.iam.v1
                     * @classdesc Represents a TestIamPermissionsResponse.
                     * @implements ITestIamPermissionsResponse
                     * @constructor
                     * @param {google.iam.v1.ITestIamPermissionsResponse=} [properties] Properties to set
                     */
                    function TestIamPermissionsResponse(properties) {
                        this.permissions = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * TestIamPermissionsResponse permissions.
                     * @member {Array.<string>} permissions
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @instance
                     */
                    TestIamPermissionsResponse.prototype.permissions = $util.emptyArray;
    
                    /**
                     * Creates a new TestIamPermissionsResponse instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @static
                     * @param {google.iam.v1.ITestIamPermissionsResponse=} [properties] Properties to set
                     * @returns {google.iam.v1.TestIamPermissionsResponse} TestIamPermissionsResponse instance
                     */
                    TestIamPermissionsResponse.create = function create(properties) {
                        return new TestIamPermissionsResponse(properties);
                    };
    
                    /**
                     * Encodes the specified TestIamPermissionsResponse message. Does not implicitly {@link google.iam.v1.TestIamPermissionsResponse.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @static
                     * @param {google.iam.v1.ITestIamPermissionsResponse} message TestIamPermissionsResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TestIamPermissionsResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.permissions != null && message.permissions.length)
                            for (var i = 0; i < message.permissions.length; ++i)
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.permissions[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified TestIamPermissionsResponse message, length delimited. Does not implicitly {@link google.iam.v1.TestIamPermissionsResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @static
                     * @param {google.iam.v1.ITestIamPermissionsResponse} message TestIamPermissionsResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TestIamPermissionsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a TestIamPermissionsResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.TestIamPermissionsResponse} TestIamPermissionsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TestIamPermissionsResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.TestIamPermissionsResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.permissions && message.permissions.length))
                                        message.permissions = [];
                                    message.permissions.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a TestIamPermissionsResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.TestIamPermissionsResponse} TestIamPermissionsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TestIamPermissionsResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a TestIamPermissionsResponse message.
                     * @function verify
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    TestIamPermissionsResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.permissions != null && message.hasOwnProperty("permissions")) {
                            if (!Array.isArray(message.permissions))
                                return "permissions: array expected";
                            for (var i = 0; i < message.permissions.length; ++i)
                                if (!$util.isString(message.permissions[i]))
                                    return "permissions: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a TestIamPermissionsResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.TestIamPermissionsResponse} TestIamPermissionsResponse
                     */
                    TestIamPermissionsResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.TestIamPermissionsResponse)
                            return object;
                        var message = new $root.google.iam.v1.TestIamPermissionsResponse();
                        if (object.permissions) {
                            if (!Array.isArray(object.permissions))
                                throw TypeError(".google.iam.v1.TestIamPermissionsResponse.permissions: array expected");
                            message.permissions = [];
                            for (var i = 0; i < object.permissions.length; ++i)
                                message.permissions[i] = String(object.permissions[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a TestIamPermissionsResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @static
                     * @param {google.iam.v1.TestIamPermissionsResponse} message TestIamPermissionsResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    TestIamPermissionsResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.permissions = [];
                        if (message.permissions && message.permissions.length) {
                            object.permissions = [];
                            for (var j = 0; j < message.permissions.length; ++j)
                                object.permissions[j] = message.permissions[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this TestIamPermissionsResponse to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    TestIamPermissionsResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for TestIamPermissionsResponse
                     * @function getTypeUrl
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    TestIamPermissionsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.TestIamPermissionsResponse";
                    };
    
                    return TestIamPermissionsResponse;
                })();
    
                v1.GetPolicyOptions = (function() {
    
                    /**
                     * Properties of a GetPolicyOptions.
                     * @memberof google.iam.v1
                     * @interface IGetPolicyOptions
                     * @property {number|null} [requestedPolicyVersion] GetPolicyOptions requestedPolicyVersion
                     */
    
                    /**
                     * Constructs a new GetPolicyOptions.
                     * @memberof google.iam.v1
                     * @classdesc Represents a GetPolicyOptions.
                     * @implements IGetPolicyOptions
                     * @constructor
                     * @param {google.iam.v1.IGetPolicyOptions=} [properties] Properties to set
                     */
                    function GetPolicyOptions(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GetPolicyOptions requestedPolicyVersion.
                     * @member {number} requestedPolicyVersion
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @instance
                     */
                    GetPolicyOptions.prototype.requestedPolicyVersion = 0;
    
                    /**
                     * Creates a new GetPolicyOptions instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @static
                     * @param {google.iam.v1.IGetPolicyOptions=} [properties] Properties to set
                     * @returns {google.iam.v1.GetPolicyOptions} GetPolicyOptions instance
                     */
                    GetPolicyOptions.create = function create(properties) {
                        return new GetPolicyOptions(properties);
                    };
    
                    /**
                     * Encodes the specified GetPolicyOptions message. Does not implicitly {@link google.iam.v1.GetPolicyOptions.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @static
                     * @param {google.iam.v1.IGetPolicyOptions} message GetPolicyOptions message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetPolicyOptions.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.requestedPolicyVersion != null && Object.hasOwnProperty.call(message, "requestedPolicyVersion"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.requestedPolicyVersion);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GetPolicyOptions message, length delimited. Does not implicitly {@link google.iam.v1.GetPolicyOptions.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @static
                     * @param {google.iam.v1.IGetPolicyOptions} message GetPolicyOptions message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetPolicyOptions.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GetPolicyOptions message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.GetPolicyOptions} GetPolicyOptions
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetPolicyOptions.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.GetPolicyOptions();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.requestedPolicyVersion = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GetPolicyOptions message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.GetPolicyOptions} GetPolicyOptions
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetPolicyOptions.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GetPolicyOptions message.
                     * @function verify
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GetPolicyOptions.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.requestedPolicyVersion != null && message.hasOwnProperty("requestedPolicyVersion"))
                            if (!$util.isInteger(message.requestedPolicyVersion))
                                return "requestedPolicyVersion: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a GetPolicyOptions message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.GetPolicyOptions} GetPolicyOptions
                     */
                    GetPolicyOptions.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.GetPolicyOptions)
                            return object;
                        var message = new $root.google.iam.v1.GetPolicyOptions();
                        if (object.requestedPolicyVersion != null)
                            message.requestedPolicyVersion = object.requestedPolicyVersion | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GetPolicyOptions message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @static
                     * @param {google.iam.v1.GetPolicyOptions} message GetPolicyOptions
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GetPolicyOptions.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.requestedPolicyVersion = 0;
                        if (message.requestedPolicyVersion != null && message.hasOwnProperty("requestedPolicyVersion"))
                            object.requestedPolicyVersion = message.requestedPolicyVersion;
                        return object;
                    };
    
                    /**
                     * Converts this GetPolicyOptions to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GetPolicyOptions.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GetPolicyOptions
                     * @function getTypeUrl
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GetPolicyOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.GetPolicyOptions";
                    };
    
                    return GetPolicyOptions;
                })();
    
                v1.Policy = (function() {
    
                    /**
                     * Properties of a Policy.
                     * @memberof google.iam.v1
                     * @interface IPolicy
                     * @property {number|null} [version] Policy version
                     * @property {Array.<google.iam.v1.IBinding>|null} [bindings] Policy bindings
                     * @property {Array.<google.iam.v1.IAuditConfig>|null} [auditConfigs] Policy auditConfigs
                     * @property {Uint8Array|null} [etag] Policy etag
                     */
    
                    /**
                     * Constructs a new Policy.
                     * @memberof google.iam.v1
                     * @classdesc Represents a Policy.
                     * @implements IPolicy
                     * @constructor
                     * @param {google.iam.v1.IPolicy=} [properties] Properties to set
                     */
                    function Policy(properties) {
                        this.bindings = [];
                        this.auditConfigs = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Policy version.
                     * @member {number} version
                     * @memberof google.iam.v1.Policy
                     * @instance
                     */
                    Policy.prototype.version = 0;
    
                    /**
                     * Policy bindings.
                     * @member {Array.<google.iam.v1.IBinding>} bindings
                     * @memberof google.iam.v1.Policy
                     * @instance
                     */
                    Policy.prototype.bindings = $util.emptyArray;
    
                    /**
                     * Policy auditConfigs.
                     * @member {Array.<google.iam.v1.IAuditConfig>} auditConfigs
                     * @memberof google.iam.v1.Policy
                     * @instance
                     */
                    Policy.prototype.auditConfigs = $util.emptyArray;
    
                    /**
                     * Policy etag.
                     * @member {Uint8Array} etag
                     * @memberof google.iam.v1.Policy
                     * @instance
                     */
                    Policy.prototype.etag = $util.newBuffer([]);
    
                    /**
                     * Creates a new Policy instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {google.iam.v1.IPolicy=} [properties] Properties to set
                     * @returns {google.iam.v1.Policy} Policy instance
                     */
                    Policy.create = function create(properties) {
                        return new Policy(properties);
                    };
    
                    /**
                     * Encodes the specified Policy message. Does not implicitly {@link google.iam.v1.Policy.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {google.iam.v1.IPolicy} message Policy message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Policy.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.version);
                        if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                            writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.etag);
                        if (message.bindings != null && message.bindings.length)
                            for (var i = 0; i < message.bindings.length; ++i)
                                $root.google.iam.v1.Binding.encode(message.bindings[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.auditConfigs != null && message.auditConfigs.length)
                            for (var i = 0; i < message.auditConfigs.length; ++i)
                                $root.google.iam.v1.AuditConfig.encode(message.auditConfigs[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Policy message, length delimited. Does not implicitly {@link google.iam.v1.Policy.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {google.iam.v1.IPolicy} message Policy message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Policy.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Policy message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.Policy} Policy
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Policy.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.Policy();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.version = reader.int32();
                                    break;
                                }
                            case 4: {
                                    if (!(message.bindings && message.bindings.length))
                                        message.bindings = [];
                                    message.bindings.push($root.google.iam.v1.Binding.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 6: {
                                    if (!(message.auditConfigs && message.auditConfigs.length))
                                        message.auditConfigs = [];
                                    message.auditConfigs.push($root.google.iam.v1.AuditConfig.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 3: {
                                    message.etag = reader.bytes();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Policy message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.Policy} Policy
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Policy.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Policy message.
                     * @function verify
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Policy.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.version != null && message.hasOwnProperty("version"))
                            if (!$util.isInteger(message.version))
                                return "version: integer expected";
                        if (message.bindings != null && message.hasOwnProperty("bindings")) {
                            if (!Array.isArray(message.bindings))
                                return "bindings: array expected";
                            for (var i = 0; i < message.bindings.length; ++i) {
                                var error = $root.google.iam.v1.Binding.verify(message.bindings[i]);
                                if (error)
                                    return "bindings." + error;
                            }
                        }
                        if (message.auditConfigs != null && message.hasOwnProperty("auditConfigs")) {
                            if (!Array.isArray(message.auditConfigs))
                                return "auditConfigs: array expected";
                            for (var i = 0; i < message.auditConfigs.length; ++i) {
                                var error = $root.google.iam.v1.AuditConfig.verify(message.auditConfigs[i]);
                                if (error)
                                    return "auditConfigs." + error;
                            }
                        }
                        if (message.etag != null && message.hasOwnProperty("etag"))
                            if (!(message.etag && typeof message.etag.length === "number" || $util.isString(message.etag)))
                                return "etag: buffer expected";
                        return null;
                    };
    
                    /**
                     * Creates a Policy message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.Policy} Policy
                     */
                    Policy.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.Policy)
                            return object;
                        var message = new $root.google.iam.v1.Policy();
                        if (object.version != null)
                            message.version = object.version | 0;
                        if (object.bindings) {
                            if (!Array.isArray(object.bindings))
                                throw TypeError(".google.iam.v1.Policy.bindings: array expected");
                            message.bindings = [];
                            for (var i = 0; i < object.bindings.length; ++i) {
                                if (typeof object.bindings[i] !== "object")
                                    throw TypeError(".google.iam.v1.Policy.bindings: object expected");
                                message.bindings[i] = $root.google.iam.v1.Binding.fromObject(object.bindings[i]);
                            }
                        }
                        if (object.auditConfigs) {
                            if (!Array.isArray(object.auditConfigs))
                                throw TypeError(".google.iam.v1.Policy.auditConfigs: array expected");
                            message.auditConfigs = [];
                            for (var i = 0; i < object.auditConfigs.length; ++i) {
                                if (typeof object.auditConfigs[i] !== "object")
                                    throw TypeError(".google.iam.v1.Policy.auditConfigs: object expected");
                                message.auditConfigs[i] = $root.google.iam.v1.AuditConfig.fromObject(object.auditConfigs[i]);
                            }
                        }
                        if (object.etag != null)
                            if (typeof object.etag === "string")
                                $util.base64.decode(object.etag, message.etag = $util.newBuffer($util.base64.length(object.etag)), 0);
                            else if (object.etag.length >= 0)
                                message.etag = object.etag;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Policy message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {google.iam.v1.Policy} message Policy
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Policy.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.bindings = [];
                            object.auditConfigs = [];
                        }
                        if (options.defaults) {
                            object.version = 0;
                            if (options.bytes === String)
                                object.etag = "";
                            else {
                                object.etag = [];
                                if (options.bytes !== Array)
                                    object.etag = $util.newBuffer(object.etag);
                            }
                        }
                        if (message.version != null && message.hasOwnProperty("version"))
                            object.version = message.version;
                        if (message.etag != null && message.hasOwnProperty("etag"))
                            object.etag = options.bytes === String ? $util.base64.encode(message.etag, 0, message.etag.length) : options.bytes === Array ? Array.prototype.slice.call(message.etag) : message.etag;
                        if (message.bindings && message.bindings.length) {
                            object.bindings = [];
                            for (var j = 0; j < message.bindings.length; ++j)
                                object.bindings[j] = $root.google.iam.v1.Binding.toObject(message.bindings[j], options);
                        }
                        if (message.auditConfigs && message.auditConfigs.length) {
                            object.auditConfigs = [];
                            for (var j = 0; j < message.auditConfigs.length; ++j)
                                object.auditConfigs[j] = $root.google.iam.v1.AuditConfig.toObject(message.auditConfigs[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Policy to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.Policy
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Policy.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Policy
                     * @function getTypeUrl
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Policy.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.Policy";
                    };
    
                    return Policy;
                })();
    
                v1.Binding = (function() {
    
                    /**
                     * Properties of a Binding.
                     * @memberof google.iam.v1
                     * @interface IBinding
                     * @property {string|null} [role] Binding role
                     * @property {Array.<string>|null} [members] Binding members
                     * @property {google.type.IExpr|null} [condition] Binding condition
                     */
    
                    /**
                     * Constructs a new Binding.
                     * @memberof google.iam.v1
                     * @classdesc Represents a Binding.
                     * @implements IBinding
                     * @constructor
                     * @param {google.iam.v1.IBinding=} [properties] Properties to set
                     */
                    function Binding(properties) {
                        this.members = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Binding role.
                     * @member {string} role
                     * @memberof google.iam.v1.Binding
                     * @instance
                     */
                    Binding.prototype.role = "";
    
                    /**
                     * Binding members.
                     * @member {Array.<string>} members
                     * @memberof google.iam.v1.Binding
                     * @instance
                     */
                    Binding.prototype.members = $util.emptyArray;
    
                    /**
                     * Binding condition.
                     * @member {google.type.IExpr|null|undefined} condition
                     * @memberof google.iam.v1.Binding
                     * @instance
                     */
                    Binding.prototype.condition = null;
    
                    /**
                     * Creates a new Binding instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {google.iam.v1.IBinding=} [properties] Properties to set
                     * @returns {google.iam.v1.Binding} Binding instance
                     */
                    Binding.create = function create(properties) {
                        return new Binding(properties);
                    };
    
                    /**
                     * Encodes the specified Binding message. Does not implicitly {@link google.iam.v1.Binding.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {google.iam.v1.IBinding} message Binding message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Binding.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.role != null && Object.hasOwnProperty.call(message, "role"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.role);
                        if (message.members != null && message.members.length)
                            for (var i = 0; i < message.members.length; ++i)
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.members[i]);
                        if (message.condition != null && Object.hasOwnProperty.call(message, "condition"))
                            $root.google.type.Expr.encode(message.condition, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Binding message, length delimited. Does not implicitly {@link google.iam.v1.Binding.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {google.iam.v1.IBinding} message Binding message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Binding.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Binding message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.Binding} Binding
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Binding.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.Binding();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.role = reader.string();
                                    break;
                                }
                            case 2: {
                                    if (!(message.members && message.members.length))
                                        message.members = [];
                                    message.members.push(reader.string());
                                    break;
                                }
                            case 3: {
                                    message.condition = $root.google.type.Expr.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Binding message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.Binding} Binding
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Binding.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Binding message.
                     * @function verify
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Binding.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.role != null && message.hasOwnProperty("role"))
                            if (!$util.isString(message.role))
                                return "role: string expected";
                        if (message.members != null && message.hasOwnProperty("members")) {
                            if (!Array.isArray(message.members))
                                return "members: array expected";
                            for (var i = 0; i < message.members.length; ++i)
                                if (!$util.isString(message.members[i]))
                                    return "members: string[] expected";
                        }
                        if (message.condition != null && message.hasOwnProperty("condition")) {
                            var error = $root.google.type.Expr.verify(message.condition);
                            if (error)
                                return "condition." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Binding message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.Binding} Binding
                     */
                    Binding.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.Binding)
                            return object;
                        var message = new $root.google.iam.v1.Binding();
                        if (object.role != null)
                            message.role = String(object.role);
                        if (object.members) {
                            if (!Array.isArray(object.members))
                                throw TypeError(".google.iam.v1.Binding.members: array expected");
                            message.members = [];
                            for (var i = 0; i < object.members.length; ++i)
                                message.members[i] = String(object.members[i]);
                        }
                        if (object.condition != null) {
                            if (typeof object.condition !== "object")
                                throw TypeError(".google.iam.v1.Binding.condition: object expected");
                            message.condition = $root.google.type.Expr.fromObject(object.condition);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Binding message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {google.iam.v1.Binding} message Binding
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Binding.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.members = [];
                        if (options.defaults) {
                            object.role = "";
                            object.condition = null;
                        }
                        if (message.role != null && message.hasOwnProperty("role"))
                            object.role = message.role;
                        if (message.members && message.members.length) {
                            object.members = [];
                            for (var j = 0; j < message.members.length; ++j)
                                object.members[j] = message.members[j];
                        }
                        if (message.condition != null && message.hasOwnProperty("condition"))
                            object.condition = $root.google.type.Expr.toObject(message.condition, options);
                        return object;
                    };
    
                    /**
                     * Converts this Binding to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.Binding
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Binding.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Binding
                     * @function getTypeUrl
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Binding.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.Binding";
                    };
    
                    return Binding;
                })();
    
                v1.AuditConfig = (function() {
    
                    /**
                     * Properties of an AuditConfig.
                     * @memberof google.iam.v1
                     * @interface IAuditConfig
                     * @property {string|null} [service] AuditConfig service
                     * @property {Array.<google.iam.v1.IAuditLogConfig>|null} [auditLogConfigs] AuditConfig auditLogConfigs
                     */
    
                    /**
                     * Constructs a new AuditConfig.
                     * @memberof google.iam.v1
                     * @classdesc Represents an AuditConfig.
                     * @implements IAuditConfig
                     * @constructor
                     * @param {google.iam.v1.IAuditConfig=} [properties] Properties to set
                     */
                    function AuditConfig(properties) {
                        this.auditLogConfigs = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * AuditConfig service.
                     * @member {string} service
                     * @memberof google.iam.v1.AuditConfig
                     * @instance
                     */
                    AuditConfig.prototype.service = "";
    
                    /**
                     * AuditConfig auditLogConfigs.
                     * @member {Array.<google.iam.v1.IAuditLogConfig>} auditLogConfigs
                     * @memberof google.iam.v1.AuditConfig
                     * @instance
                     */
                    AuditConfig.prototype.auditLogConfigs = $util.emptyArray;
    
                    /**
                     * Creates a new AuditConfig instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {google.iam.v1.IAuditConfig=} [properties] Properties to set
                     * @returns {google.iam.v1.AuditConfig} AuditConfig instance
                     */
                    AuditConfig.create = function create(properties) {
                        return new AuditConfig(properties);
                    };
    
                    /**
                     * Encodes the specified AuditConfig message. Does not implicitly {@link google.iam.v1.AuditConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {google.iam.v1.IAuditConfig} message AuditConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AuditConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.service);
                        if (message.auditLogConfigs != null && message.auditLogConfigs.length)
                            for (var i = 0; i < message.auditLogConfigs.length; ++i)
                                $root.google.iam.v1.AuditLogConfig.encode(message.auditLogConfigs[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified AuditConfig message, length delimited. Does not implicitly {@link google.iam.v1.AuditConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {google.iam.v1.IAuditConfig} message AuditConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AuditConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an AuditConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.AuditConfig} AuditConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AuditConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.AuditConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.service = reader.string();
                                    break;
                                }
                            case 3: {
                                    if (!(message.auditLogConfigs && message.auditLogConfigs.length))
                                        message.auditLogConfigs = [];
                                    message.auditLogConfigs.push($root.google.iam.v1.AuditLogConfig.decode(reader, reader.uint32()));
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an AuditConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.AuditConfig} AuditConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AuditConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an AuditConfig message.
                     * @function verify
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    AuditConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.service != null && message.hasOwnProperty("service"))
                            if (!$util.isString(message.service))
                                return "service: string expected";
                        if (message.auditLogConfigs != null && message.hasOwnProperty("auditLogConfigs")) {
                            if (!Array.isArray(message.auditLogConfigs))
                                return "auditLogConfigs: array expected";
                            for (var i = 0; i < message.auditLogConfigs.length; ++i) {
                                var error = $root.google.iam.v1.AuditLogConfig.verify(message.auditLogConfigs[i]);
                                if (error)
                                    return "auditLogConfigs." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates an AuditConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.AuditConfig} AuditConfig
                     */
                    AuditConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.AuditConfig)
                            return object;
                        var message = new $root.google.iam.v1.AuditConfig();
                        if (object.service != null)
                            message.service = String(object.service);
                        if (object.auditLogConfigs) {
                            if (!Array.isArray(object.auditLogConfigs))
                                throw TypeError(".google.iam.v1.AuditConfig.auditLogConfigs: array expected");
                            message.auditLogConfigs = [];
                            for (var i = 0; i < object.auditLogConfigs.length; ++i) {
                                if (typeof object.auditLogConfigs[i] !== "object")
                                    throw TypeError(".google.iam.v1.AuditConfig.auditLogConfigs: object expected");
                                message.auditLogConfigs[i] = $root.google.iam.v1.AuditLogConfig.fromObject(object.auditLogConfigs[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an AuditConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {google.iam.v1.AuditConfig} message AuditConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    AuditConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.auditLogConfigs = [];
                        if (options.defaults)
                            object.service = "";
                        if (message.service != null && message.hasOwnProperty("service"))
                            object.service = message.service;
                        if (message.auditLogConfigs && message.auditLogConfigs.length) {
                            object.auditLogConfigs = [];
                            for (var j = 0; j < message.auditLogConfigs.length; ++j)
                                object.auditLogConfigs[j] = $root.google.iam.v1.AuditLogConfig.toObject(message.auditLogConfigs[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this AuditConfig to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.AuditConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    AuditConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for AuditConfig
                     * @function getTypeUrl
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    AuditConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.AuditConfig";
                    };
    
                    return AuditConfig;
                })();
    
                v1.AuditLogConfig = (function() {
    
                    /**
                     * Properties of an AuditLogConfig.
                     * @memberof google.iam.v1
                     * @interface IAuditLogConfig
                     * @property {google.iam.v1.AuditLogConfig.LogType|null} [logType] AuditLogConfig logType
                     * @property {Array.<string>|null} [exemptedMembers] AuditLogConfig exemptedMembers
                     */
    
                    /**
                     * Constructs a new AuditLogConfig.
                     * @memberof google.iam.v1
                     * @classdesc Represents an AuditLogConfig.
                     * @implements IAuditLogConfig
                     * @constructor
                     * @param {google.iam.v1.IAuditLogConfig=} [properties] Properties to set
                     */
                    function AuditLogConfig(properties) {
                        this.exemptedMembers = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * AuditLogConfig logType.
                     * @member {google.iam.v1.AuditLogConfig.LogType} logType
                     * @memberof google.iam.v1.AuditLogConfig
                     * @instance
                     */
                    AuditLogConfig.prototype.logType = 0;
    
                    /**
                     * AuditLogConfig exemptedMembers.
                     * @member {Array.<string>} exemptedMembers
                     * @memberof google.iam.v1.AuditLogConfig
                     * @instance
                     */
                    AuditLogConfig.prototype.exemptedMembers = $util.emptyArray;
    
                    /**
                     * Creates a new AuditLogConfig instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {google.iam.v1.IAuditLogConfig=} [properties] Properties to set
                     * @returns {google.iam.v1.AuditLogConfig} AuditLogConfig instance
                     */
                    AuditLogConfig.create = function create(properties) {
                        return new AuditLogConfig(properties);
                    };
    
                    /**
                     * Encodes the specified AuditLogConfig message. Does not implicitly {@link google.iam.v1.AuditLogConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {google.iam.v1.IAuditLogConfig} message AuditLogConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AuditLogConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.logType != null && Object.hasOwnProperty.call(message, "logType"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.logType);
                        if (message.exemptedMembers != null && message.exemptedMembers.length)
                            for (var i = 0; i < message.exemptedMembers.length; ++i)
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.exemptedMembers[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified AuditLogConfig message, length delimited. Does not implicitly {@link google.iam.v1.AuditLogConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {google.iam.v1.IAuditLogConfig} message AuditLogConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AuditLogConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an AuditLogConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.AuditLogConfig} AuditLogConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AuditLogConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.AuditLogConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.logType = reader.int32();
                                    break;
                                }
                            case 2: {
                                    if (!(message.exemptedMembers && message.exemptedMembers.length))
                                        message.exemptedMembers = [];
                                    message.exemptedMembers.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an AuditLogConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.AuditLogConfig} AuditLogConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AuditLogConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an AuditLogConfig message.
                     * @function verify
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    AuditLogConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.logType != null && message.hasOwnProperty("logType"))
                            switch (message.logType) {
                            default:
                                return "logType: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                                break;
                            }
                        if (message.exemptedMembers != null && message.hasOwnProperty("exemptedMembers")) {
                            if (!Array.isArray(message.exemptedMembers))
                                return "exemptedMembers: array expected";
                            for (var i = 0; i < message.exemptedMembers.length; ++i)
                                if (!$util.isString(message.exemptedMembers[i]))
                                    return "exemptedMembers: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates an AuditLogConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.AuditLogConfig} AuditLogConfig
                     */
                    AuditLogConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.AuditLogConfig)
                            return object;
                        var message = new $root.google.iam.v1.AuditLogConfig();
                        switch (object.logType) {
                        default:
                            if (typeof object.logType === "number") {
                                message.logType = object.logType;
                                break;
                            }
                            break;
                        case "LOG_TYPE_UNSPECIFIED":
                        case 0:
                            message.logType = 0;
                            break;
                        case "ADMIN_READ":
                        case 1:
                            message.logType = 1;
                            break;
                        case "DATA_WRITE":
                        case 2:
                            message.logType = 2;
                            break;
                        case "DATA_READ":
                        case 3:
                            message.logType = 3;
                            break;
                        }
                        if (object.exemptedMembers) {
                            if (!Array.isArray(object.exemptedMembers))
                                throw TypeError(".google.iam.v1.AuditLogConfig.exemptedMembers: array expected");
                            message.exemptedMembers = [];
                            for (var i = 0; i < object.exemptedMembers.length; ++i)
                                message.exemptedMembers[i] = String(object.exemptedMembers[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an AuditLogConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {google.iam.v1.AuditLogConfig} message AuditLogConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    AuditLogConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.exemptedMembers = [];
                        if (options.defaults)
                            object.logType = options.enums === String ? "LOG_TYPE_UNSPECIFIED" : 0;
                        if (message.logType != null && message.hasOwnProperty("logType"))
                            object.logType = options.enums === String ? $root.google.iam.v1.AuditLogConfig.LogType[message.logType] === undefined ? message.logType : $root.google.iam.v1.AuditLogConfig.LogType[message.logType] : message.logType;
                        if (message.exemptedMembers && message.exemptedMembers.length) {
                            object.exemptedMembers = [];
                            for (var j = 0; j < message.exemptedMembers.length; ++j)
                                object.exemptedMembers[j] = message.exemptedMembers[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this AuditLogConfig to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.AuditLogConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    AuditLogConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for AuditLogConfig
                     * @function getTypeUrl
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    AuditLogConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.AuditLogConfig";
                    };
    
                    /**
                     * LogType enum.
                     * @name google.iam.v1.AuditLogConfig.LogType
                     * @enum {number}
                     * @property {number} LOG_TYPE_UNSPECIFIED=0 LOG_TYPE_UNSPECIFIED value
                     * @property {number} ADMIN_READ=1 ADMIN_READ value
                     * @property {number} DATA_WRITE=2 DATA_WRITE value
                     * @property {number} DATA_READ=3 DATA_READ value
                     */
                    AuditLogConfig.LogType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "LOG_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "ADMIN_READ"] = 1;
                        values[valuesById[2] = "DATA_WRITE"] = 2;
                        values[valuesById[3] = "DATA_READ"] = 3;
                        return values;
                    })();
    
                    return AuditLogConfig;
                })();
    
                v1.PolicyDelta = (function() {
    
                    /**
                     * Properties of a PolicyDelta.
                     * @memberof google.iam.v1
                     * @interface IPolicyDelta
                     * @property {Array.<google.iam.v1.IBindingDelta>|null} [bindingDeltas] PolicyDelta bindingDeltas
                     * @property {Array.<google.iam.v1.IAuditConfigDelta>|null} [auditConfigDeltas] PolicyDelta auditConfigDeltas
                     */
    
                    /**
                     * Constructs a new PolicyDelta.
                     * @memberof google.iam.v1
                     * @classdesc Represents a PolicyDelta.
                     * @implements IPolicyDelta
                     * @constructor
                     * @param {google.iam.v1.IPolicyDelta=} [properties] Properties to set
                     */
                    function PolicyDelta(properties) {
                        this.bindingDeltas = [];
                        this.auditConfigDeltas = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * PolicyDelta bindingDeltas.
                     * @member {Array.<google.iam.v1.IBindingDelta>} bindingDeltas
                     * @memberof google.iam.v1.PolicyDelta
                     * @instance
                     */
                    PolicyDelta.prototype.bindingDeltas = $util.emptyArray;
    
                    /**
                     * PolicyDelta auditConfigDeltas.
                     * @member {Array.<google.iam.v1.IAuditConfigDelta>} auditConfigDeltas
                     * @memberof google.iam.v1.PolicyDelta
                     * @instance
                     */
                    PolicyDelta.prototype.auditConfigDeltas = $util.emptyArray;
    
                    /**
                     * Creates a new PolicyDelta instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {google.iam.v1.IPolicyDelta=} [properties] Properties to set
                     * @returns {google.iam.v1.PolicyDelta} PolicyDelta instance
                     */
                    PolicyDelta.create = function create(properties) {
                        return new PolicyDelta(properties);
                    };
    
                    /**
                     * Encodes the specified PolicyDelta message. Does not implicitly {@link google.iam.v1.PolicyDelta.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {google.iam.v1.IPolicyDelta} message PolicyDelta message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    PolicyDelta.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.bindingDeltas != null && message.bindingDeltas.length)
                            for (var i = 0; i < message.bindingDeltas.length; ++i)
                                $root.google.iam.v1.BindingDelta.encode(message.bindingDeltas[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.auditConfigDeltas != null && message.auditConfigDeltas.length)
                            for (var i = 0; i < message.auditConfigDeltas.length; ++i)
                                $root.google.iam.v1.AuditConfigDelta.encode(message.auditConfigDeltas[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified PolicyDelta message, length delimited. Does not implicitly {@link google.iam.v1.PolicyDelta.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {google.iam.v1.IPolicyDelta} message PolicyDelta message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    PolicyDelta.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a PolicyDelta message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.PolicyDelta} PolicyDelta
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    PolicyDelta.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.PolicyDelta();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.bindingDeltas && message.bindingDeltas.length))
                                        message.bindingDeltas = [];
                                    message.bindingDeltas.push($root.google.iam.v1.BindingDelta.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 2: {
                                    if (!(message.auditConfigDeltas && message.auditConfigDeltas.length))
                                        message.auditConfigDeltas = [];
                                    message.auditConfigDeltas.push($root.google.iam.v1.AuditConfigDelta.decode(reader, reader.uint32()));
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a PolicyDelta message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.PolicyDelta} PolicyDelta
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    PolicyDelta.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a PolicyDelta message.
                     * @function verify
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    PolicyDelta.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.bindingDeltas != null && message.hasOwnProperty("bindingDeltas")) {
                            if (!Array.isArray(message.bindingDeltas))
                                return "bindingDeltas: array expected";
                            for (var i = 0; i < message.bindingDeltas.length; ++i) {
                                var error = $root.google.iam.v1.BindingDelta.verify(message.bindingDeltas[i]);
                                if (error)
                                    return "bindingDeltas." + error;
                            }
                        }
                        if (message.auditConfigDeltas != null && message.hasOwnProperty("auditConfigDeltas")) {
                            if (!Array.isArray(message.auditConfigDeltas))
                                return "auditConfigDeltas: array expected";
                            for (var i = 0; i < message.auditConfigDeltas.length; ++i) {
                                var error = $root.google.iam.v1.AuditConfigDelta.verify(message.auditConfigDeltas[i]);
                                if (error)
                                    return "auditConfigDeltas." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a PolicyDelta message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.PolicyDelta} PolicyDelta
                     */
                    PolicyDelta.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.PolicyDelta)
                            return object;
                        var message = new $root.google.iam.v1.PolicyDelta();
                        if (object.bindingDeltas) {
                            if (!Array.isArray(object.bindingDeltas))
                                throw TypeError(".google.iam.v1.PolicyDelta.bindingDeltas: array expected");
                            message.bindingDeltas = [];
                            for (var i = 0; i < object.bindingDeltas.length; ++i) {
                                if (typeof object.bindingDeltas[i] !== "object")
                                    throw TypeError(".google.iam.v1.PolicyDelta.bindingDeltas: object expected");
                                message.bindingDeltas[i] = $root.google.iam.v1.BindingDelta.fromObject(object.bindingDeltas[i]);
                            }
                        }
                        if (object.auditConfigDeltas) {
                            if (!Array.isArray(object.auditConfigDeltas))
                                throw TypeError(".google.iam.v1.PolicyDelta.auditConfigDeltas: array expected");
                            message.auditConfigDeltas = [];
                            for (var i = 0; i < object.auditConfigDeltas.length; ++i) {
                                if (typeof object.auditConfigDeltas[i] !== "object")
                                    throw TypeError(".google.iam.v1.PolicyDelta.auditConfigDeltas: object expected");
                                message.auditConfigDeltas[i] = $root.google.iam.v1.AuditConfigDelta.fromObject(object.auditConfigDeltas[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a PolicyDelta message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {google.iam.v1.PolicyDelta} message PolicyDelta
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    PolicyDelta.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.bindingDeltas = [];
                            object.auditConfigDeltas = [];
                        }
                        if (message.bindingDeltas && message.bindingDeltas.length) {
                            object.bindingDeltas = [];
                            for (var j = 0; j < message.bindingDeltas.length; ++j)
                                object.bindingDeltas[j] = $root.google.iam.v1.BindingDelta.toObject(message.bindingDeltas[j], options);
                        }
                        if (message.auditConfigDeltas && message.auditConfigDeltas.length) {
                            object.auditConfigDeltas = [];
                            for (var j = 0; j < message.auditConfigDeltas.length; ++j)
                                object.auditConfigDeltas[j] = $root.google.iam.v1.AuditConfigDelta.toObject(message.auditConfigDeltas[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this PolicyDelta to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.PolicyDelta
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    PolicyDelta.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for PolicyDelta
                     * @function getTypeUrl
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    PolicyDelta.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.PolicyDelta";
                    };
    
                    return PolicyDelta;
                })();
    
                v1.BindingDelta = (function() {
    
                    /**
                     * Properties of a BindingDelta.
                     * @memberof google.iam.v1
                     * @interface IBindingDelta
                     * @property {google.iam.v1.BindingDelta.Action|null} [action] BindingDelta action
                     * @property {string|null} [role] BindingDelta role
                     * @property {string|null} [member] BindingDelta member
                     * @property {google.type.IExpr|null} [condition] BindingDelta condition
                     */
    
                    /**
                     * Constructs a new BindingDelta.
                     * @memberof google.iam.v1
                     * @classdesc Represents a BindingDelta.
                     * @implements IBindingDelta
                     * @constructor
                     * @param {google.iam.v1.IBindingDelta=} [properties] Properties to set
                     */
                    function BindingDelta(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * BindingDelta action.
                     * @member {google.iam.v1.BindingDelta.Action} action
                     * @memberof google.iam.v1.BindingDelta
                     * @instance
                     */
                    BindingDelta.prototype.action = 0;
    
                    /**
                     * BindingDelta role.
                     * @member {string} role
                     * @memberof google.iam.v1.BindingDelta
                     * @instance
                     */
                    BindingDelta.prototype.role = "";
    
                    /**
                     * BindingDelta member.
                     * @member {string} member
                     * @memberof google.iam.v1.BindingDelta
                     * @instance
                     */
                    BindingDelta.prototype.member = "";
    
                    /**
                     * BindingDelta condition.
                     * @member {google.type.IExpr|null|undefined} condition
                     * @memberof google.iam.v1.BindingDelta
                     * @instance
                     */
                    BindingDelta.prototype.condition = null;
    
                    /**
                     * Creates a new BindingDelta instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {google.iam.v1.IBindingDelta=} [properties] Properties to set
                     * @returns {google.iam.v1.BindingDelta} BindingDelta instance
                     */
                    BindingDelta.create = function create(properties) {
                        return new BindingDelta(properties);
                    };
    
                    /**
                     * Encodes the specified BindingDelta message. Does not implicitly {@link google.iam.v1.BindingDelta.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {google.iam.v1.IBindingDelta} message BindingDelta message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    BindingDelta.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.action != null && Object.hasOwnProperty.call(message, "action"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.action);
                        if (message.role != null && Object.hasOwnProperty.call(message, "role"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.role);
                        if (message.member != null && Object.hasOwnProperty.call(message, "member"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.member);
                        if (message.condition != null && Object.hasOwnProperty.call(message, "condition"))
                            $root.google.type.Expr.encode(message.condition, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified BindingDelta message, length delimited. Does not implicitly {@link google.iam.v1.BindingDelta.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {google.iam.v1.IBindingDelta} message BindingDelta message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    BindingDelta.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a BindingDelta message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.BindingDelta} BindingDelta
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    BindingDelta.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.BindingDelta();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.action = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.role = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.member = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.condition = $root.google.type.Expr.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a BindingDelta message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.BindingDelta} BindingDelta
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    BindingDelta.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a BindingDelta message.
                     * @function verify
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    BindingDelta.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.action != null && message.hasOwnProperty("action"))
                            switch (message.action) {
                            default:
                                return "action: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        if (message.role != null && message.hasOwnProperty("role"))
                            if (!$util.isString(message.role))
                                return "role: string expected";
                        if (message.member != null && message.hasOwnProperty("member"))
                            if (!$util.isString(message.member))
                                return "member: string expected";
                        if (message.condition != null && message.hasOwnProperty("condition")) {
                            var error = $root.google.type.Expr.verify(message.condition);
                            if (error)
                                return "condition." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a BindingDelta message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.BindingDelta} BindingDelta
                     */
                    BindingDelta.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.BindingDelta)
                            return object;
                        var message = new $root.google.iam.v1.BindingDelta();
                        switch (object.action) {
                        default:
                            if (typeof object.action === "number") {
                                message.action = object.action;
                                break;
                            }
                            break;
                        case "ACTION_UNSPECIFIED":
                        case 0:
                            message.action = 0;
                            break;
                        case "ADD":
                        case 1:
                            message.action = 1;
                            break;
                        case "REMOVE":
                        case 2:
                            message.action = 2;
                            break;
                        }
                        if (object.role != null)
                            message.role = String(object.role);
                        if (object.member != null)
                            message.member = String(object.member);
                        if (object.condition != null) {
                            if (typeof object.condition !== "object")
                                throw TypeError(".google.iam.v1.BindingDelta.condition: object expected");
                            message.condition = $root.google.type.Expr.fromObject(object.condition);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a BindingDelta message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {google.iam.v1.BindingDelta} message BindingDelta
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    BindingDelta.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.action = options.enums === String ? "ACTION_UNSPECIFIED" : 0;
                            object.role = "";
                            object.member = "";
                            object.condition = null;
                        }
                        if (message.action != null && message.hasOwnProperty("action"))
                            object.action = options.enums === String ? $root.google.iam.v1.BindingDelta.Action[message.action] === undefined ? message.action : $root.google.iam.v1.BindingDelta.Action[message.action] : message.action;
                        if (message.role != null && message.hasOwnProperty("role"))
                            object.role = message.role;
                        if (message.member != null && message.hasOwnProperty("member"))
                            object.member = message.member;
                        if (message.condition != null && message.hasOwnProperty("condition"))
                            object.condition = $root.google.type.Expr.toObject(message.condition, options);
                        return object;
                    };
    
                    /**
                     * Converts this BindingDelta to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.BindingDelta
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    BindingDelta.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for BindingDelta
                     * @function getTypeUrl
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    BindingDelta.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.BindingDelta";
                    };
    
                    /**
                     * Action enum.
                     * @name google.iam.v1.BindingDelta.Action
                     * @enum {number}
                     * @property {number} ACTION_UNSPECIFIED=0 ACTION_UNSPECIFIED value
                     * @property {number} ADD=1 ADD value
                     * @property {number} REMOVE=2 REMOVE value
                     */
                    BindingDelta.Action = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "ACTION_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "ADD"] = 1;
                        values[valuesById[2] = "REMOVE"] = 2;
                        return values;
                    })();
    
                    return BindingDelta;
                })();
    
                v1.AuditConfigDelta = (function() {
    
                    /**
                     * Properties of an AuditConfigDelta.
                     * @memberof google.iam.v1
                     * @interface IAuditConfigDelta
                     * @property {google.iam.v1.AuditConfigDelta.Action|null} [action] AuditConfigDelta action
                     * @property {string|null} [service] AuditConfigDelta service
                     * @property {string|null} [exemptedMember] AuditConfigDelta exemptedMember
                     * @property {string|null} [logType] AuditConfigDelta logType
                     */
    
                    /**
                     * Constructs a new AuditConfigDelta.
                     * @memberof google.iam.v1
                     * @classdesc Represents an AuditConfigDelta.
                     * @implements IAuditConfigDelta
                     * @constructor
                     * @param {google.iam.v1.IAuditConfigDelta=} [properties] Properties to set
                     */
                    function AuditConfigDelta(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * AuditConfigDelta action.
                     * @member {google.iam.v1.AuditConfigDelta.Action} action
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @instance
                     */
                    AuditConfigDelta.prototype.action = 0;
    
                    /**
                     * AuditConfigDelta service.
                     * @member {string} service
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @instance
                     */
                    AuditConfigDelta.prototype.service = "";
    
                    /**
                     * AuditConfigDelta exemptedMember.
                     * @member {string} exemptedMember
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @instance
                     */
                    AuditConfigDelta.prototype.exemptedMember = "";
    
                    /**
                     * AuditConfigDelta logType.
                     * @member {string} logType
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @instance
                     */
                    AuditConfigDelta.prototype.logType = "";
    
                    /**
                     * Creates a new AuditConfigDelta instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {google.iam.v1.IAuditConfigDelta=} [properties] Properties to set
                     * @returns {google.iam.v1.AuditConfigDelta} AuditConfigDelta instance
                     */
                    AuditConfigDelta.create = function create(properties) {
                        return new AuditConfigDelta(properties);
                    };
    
                    /**
                     * Encodes the specified AuditConfigDelta message. Does not implicitly {@link google.iam.v1.AuditConfigDelta.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {google.iam.v1.IAuditConfigDelta} message AuditConfigDelta message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AuditConfigDelta.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.action != null && Object.hasOwnProperty.call(message, "action"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.action);
                        if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.service);
                        if (message.exemptedMember != null && Object.hasOwnProperty.call(message, "exemptedMember"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.exemptedMember);
                        if (message.logType != null && Object.hasOwnProperty.call(message, "logType"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.logType);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified AuditConfigDelta message, length delimited. Does not implicitly {@link google.iam.v1.AuditConfigDelta.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {google.iam.v1.IAuditConfigDelta} message AuditConfigDelta message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AuditConfigDelta.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an AuditConfigDelta message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.AuditConfigDelta} AuditConfigDelta
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AuditConfigDelta.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.AuditConfigDelta();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.action = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.service = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.exemptedMember = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.logType = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an AuditConfigDelta message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.AuditConfigDelta} AuditConfigDelta
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AuditConfigDelta.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an AuditConfigDelta message.
                     * @function verify
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    AuditConfigDelta.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.action != null && message.hasOwnProperty("action"))
                            switch (message.action) {
                            default:
                                return "action: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        if (message.service != null && message.hasOwnProperty("service"))
                            if (!$util.isString(message.service))
                                return "service: string expected";
                        if (message.exemptedMember != null && message.hasOwnProperty("exemptedMember"))
                            if (!$util.isString(message.exemptedMember))
                                return "exemptedMember: string expected";
                        if (message.logType != null && message.hasOwnProperty("logType"))
                            if (!$util.isString(message.logType))
                                return "logType: string expected";
                        return null;
                    };
    
                    /**
                     * Creates an AuditConfigDelta message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.AuditConfigDelta} AuditConfigDelta
                     */
                    AuditConfigDelta.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.AuditConfigDelta)
                            return object;
                        var message = new $root.google.iam.v1.AuditConfigDelta();
                        switch (object.action) {
                        default:
                            if (typeof object.action === "number") {
                                message.action = object.action;
                                break;
                            }
                            break;
                        case "ACTION_UNSPECIFIED":
                        case 0:
                            message.action = 0;
                            break;
                        case "ADD":
                        case 1:
                            message.action = 1;
                            break;
                        case "REMOVE":
                        case 2:
                            message.action = 2;
                            break;
                        }
                        if (object.service != null)
                            message.service = String(object.service);
                        if (object.exemptedMember != null)
                            message.exemptedMember = String(object.exemptedMember);
                        if (object.logType != null)
                            message.logType = String(object.logType);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an AuditConfigDelta message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {google.iam.v1.AuditConfigDelta} message AuditConfigDelta
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    AuditConfigDelta.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.action = options.enums === String ? "ACTION_UNSPECIFIED" : 0;
                            object.service = "";
                            object.exemptedMember = "";
                            object.logType = "";
                        }
                        if (message.action != null && message.hasOwnProperty("action"))
                            object.action = options.enums === String ? $root.google.iam.v1.AuditConfigDelta.Action[message.action] === undefined ? message.action : $root.google.iam.v1.AuditConfigDelta.Action[message.action] : message.action;
                        if (message.service != null && message.hasOwnProperty("service"))
                            object.service = message.service;
                        if (message.exemptedMember != null && message.hasOwnProperty("exemptedMember"))
                            object.exemptedMember = message.exemptedMember;
                        if (message.logType != null && message.hasOwnProperty("logType"))
                            object.logType = message.logType;
                        return object;
                    };
    
                    /**
                     * Converts this AuditConfigDelta to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    AuditConfigDelta.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for AuditConfigDelta
                     * @function getTypeUrl
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    AuditConfigDelta.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.AuditConfigDelta";
                    };
    
                    /**
                     * Action enum.
                     * @name google.iam.v1.AuditConfigDelta.Action
                     * @enum {number}
                     * @property {number} ACTION_UNSPECIFIED=0 ACTION_UNSPECIFIED value
                     * @property {number} ADD=1 ADD value
                     * @property {number} REMOVE=2 REMOVE value
                     */
                    AuditConfigDelta.Action = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "ACTION_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "ADD"] = 1;
                        values[valuesById[2] = "REMOVE"] = 2;
                        return values;
                    })();
    
                    return AuditConfigDelta;
                })();
    
                return v1;
            })();
    
            return iam;
        })();
    
        google.type = (function() {
    
            /**
             * Namespace type.
             * @memberof google
             * @namespace
             */
            var type = {};
    
            type.Expr = (function() {
    
                /**
                 * Properties of an Expr.
                 * @memberof google.type
                 * @interface IExpr
                 * @property {string|null} [expression] Expr expression
                 * @property {string|null} [title] Expr title
                 * @property {string|null} [description] Expr description
                 * @property {string|null} [location] Expr location
                 */
    
                /**
                 * Constructs a new Expr.
                 * @memberof google.type
                 * @classdesc Represents an Expr.
                 * @implements IExpr
                 * @constructor
                 * @param {google.type.IExpr=} [properties] Properties to set
                 */
                function Expr(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Expr expression.
                 * @member {string} expression
                 * @memberof google.type.Expr
                 * @instance
                 */
                Expr.prototype.expression = "";
    
                /**
                 * Expr title.
                 * @member {string} title
                 * @memberof google.type.Expr
                 * @instance
                 */
                Expr.prototype.title = "";
    
                /**
                 * Expr description.
                 * @member {string} description
                 * @memberof google.type.Expr
                 * @instance
                 */
                Expr.prototype.description = "";
    
                /**
                 * Expr location.
                 * @member {string} location
                 * @memberof google.type.Expr
                 * @instance
                 */
                Expr.prototype.location = "";
    
                /**
                 * Creates a new Expr instance using the specified properties.
                 * @function create
                 * @memberof google.type.Expr
                 * @static
                 * @param {google.type.IExpr=} [properties] Properties to set
                 * @returns {google.type.Expr} Expr instance
                 */
                Expr.create = function create(properties) {
                    return new Expr(properties);
                };
    
                /**
                 * Encodes the specified Expr message. Does not implicitly {@link google.type.Expr.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.Expr
                 * @static
                 * @param {google.type.IExpr} message Expr message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Expr.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.expression != null && Object.hasOwnProperty.call(message, "expression"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.expression);
                    if (message.title != null && Object.hasOwnProperty.call(message, "title"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.title);
                    if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);
                    if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.location);
                    return writer;
                };
    
                /**
                 * Encodes the specified Expr message, length delimited. Does not implicitly {@link google.type.Expr.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.Expr
                 * @static
                 * @param {google.type.IExpr} message Expr message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Expr.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Expr message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.Expr
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.Expr} Expr
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Expr.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.Expr();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.expression = reader.string();
                                break;
                            }
                        case 2: {
                                message.title = reader.string();
                                break;
                            }
                        case 3: {
                                message.description = reader.string();
                                break;
                            }
                        case 4: {
                                message.location = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Expr message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.Expr
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.Expr} Expr
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Expr.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Expr message.
                 * @function verify
                 * @memberof google.type.Expr
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Expr.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.expression != null && message.hasOwnProperty("expression"))
                        if (!$util.isString(message.expression))
                            return "expression: string expected";
                    if (message.title != null && message.hasOwnProperty("title"))
                        if (!$util.isString(message.title))
                            return "title: string expected";
                    if (message.description != null && message.hasOwnProperty("description"))
                        if (!$util.isString(message.description))
                            return "description: string expected";
                    if (message.location != null && message.hasOwnProperty("location"))
                        if (!$util.isString(message.location))
                            return "location: string expected";
                    return null;
                };
    
                /**
                 * Creates an Expr message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.Expr
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.Expr} Expr
                 */
                Expr.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.Expr)
                        return object;
                    var message = new $root.google.type.Expr();
                    if (object.expression != null)
                        message.expression = String(object.expression);
                    if (object.title != null)
                        message.title = String(object.title);
                    if (object.description != null)
                        message.description = String(object.description);
                    if (object.location != null)
                        message.location = String(object.location);
                    return message;
                };
    
                /**
                 * Creates a plain object from an Expr message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.Expr
                 * @static
                 * @param {google.type.Expr} message Expr
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Expr.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.expression = "";
                        object.title = "";
                        object.description = "";
                        object.location = "";
                    }
                    if (message.expression != null && message.hasOwnProperty("expression"))
                        object.expression = message.expression;
                    if (message.title != null && message.hasOwnProperty("title"))
                        object.title = message.title;
                    if (message.description != null && message.hasOwnProperty("description"))
                        object.description = message.description;
                    if (message.location != null && message.hasOwnProperty("location"))
                        object.location = message.location;
                    return object;
                };
    
                /**
                 * Converts this Expr to JSON.
                 * @function toJSON
                 * @memberof google.type.Expr
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Expr.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Expr
                 * @function getTypeUrl
                 * @memberof google.type.Expr
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Expr.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.Expr";
                };
    
                return Expr;
            })();
    
            return type;
        })();
    
        return google;
    })();

    return $root;
});
