{
  "nested": {
    "google": {
      "nested": {
        "cloud": {
          "nested": {
            "tasks": {
              "nested": {
                "v2": {
                  "options": {
                    "go_package": "cloud.google.com/go/cloudtasks/apiv2/cloudtaskspb;cloudtaskspb",
                    "java_multiple_files": true,
                    "java_outer_classname": "TaskProto",
                    "java_package": "com.google.cloud.tasks.v2",
                    "objc_class_prefix": "TASKS"
                  },
                  "nested": {
                    "CloudTasks": {
                      "options": {
                        "(google.api.default_host)": "cloudtasks.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "ListQueues": {
                          "requestType": "ListQueuesRequest",
                          "responseType": "ListQueuesResponse",
                          "options": {
                            "(google.api.http).get": "/v2/{parent=projects/*/locations/*}/queues",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{parent=projects/*/locations/*}/queues"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetQueue": {
                          "requestType": "GetQueueRequest",
                          "responseType": "Queue",
                          "options": {
                            "(google.api.http).get": "/v2/{name=projects/*/locations/*/queues/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{name=projects/*/locations/*/queues/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateQueue": {
                          "requestType": "CreateQueueRequest",
                          "responseType": "Queue",
                          "options": {
                            "(google.api.http).post": "/v2/{parent=projects/*/locations/*}/queues",
                            "(google.api.http).body": "queue",
                            "(google.api.method_signature)": "parent,queue"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{parent=projects/*/locations/*}/queues",
                                "body": "queue"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,queue"
                            }
                          ]
                        },
                        "UpdateQueue": {
                          "requestType": "UpdateQueueRequest",
                          "responseType": "Queue",
                          "options": {
                            "(google.api.http).patch": "/v2/{queue.name=projects/*/locations/*/queues/*}",
                            "(google.api.http).body": "queue",
                            "(google.api.method_signature)": "queue,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v2/{queue.name=projects/*/locations/*/queues/*}",
                                "body": "queue"
                              }
                            },
                            {
                              "(google.api.method_signature)": "queue,update_mask"
                            }
                          ]
                        },
                        "DeleteQueue": {
                          "requestType": "DeleteQueueRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v2/{name=projects/*/locations/*/queues/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v2/{name=projects/*/locations/*/queues/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "PurgeQueue": {
                          "requestType": "PurgeQueueRequest",
                          "responseType": "Queue",
                          "options": {
                            "(google.api.http).post": "/v2/{name=projects/*/locations/*/queues/*}:purge",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{name=projects/*/locations/*/queues/*}:purge",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "PauseQueue": {
                          "requestType": "PauseQueueRequest",
                          "responseType": "Queue",
                          "options": {
                            "(google.api.http).post": "/v2/{name=projects/*/locations/*/queues/*}:pause",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{name=projects/*/locations/*/queues/*}:pause",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ResumeQueue": {
                          "requestType": "ResumeQueueRequest",
                          "responseType": "Queue",
                          "options": {
                            "(google.api.http).post": "/v2/{name=projects/*/locations/*/queues/*}:resume",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{name=projects/*/locations/*/queues/*}:resume",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "GetIamPolicy": {
                          "requestType": "google.iam.v1.GetIamPolicyRequest",
                          "responseType": "google.iam.v1.Policy",
                          "options": {
                            "(google.api.http).post": "/v2/{resource=projects/*/locations/*/queues/*}:getIamPolicy",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "resource"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{resource=projects/*/locations/*/queues/*}:getIamPolicy",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "resource"
                            }
                          ]
                        },
                        "SetIamPolicy": {
                          "requestType": "google.iam.v1.SetIamPolicyRequest",
                          "responseType": "google.iam.v1.Policy",
                          "options": {
                            "(google.api.http).post": "/v2/{resource=projects/*/locations/*/queues/*}:setIamPolicy",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "resource,policy"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{resource=projects/*/locations/*/queues/*}:setIamPolicy",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "resource,policy"
                            }
                          ]
                        },
                        "TestIamPermissions": {
                          "requestType": "google.iam.v1.TestIamPermissionsRequest",
                          "responseType": "google.iam.v1.TestIamPermissionsResponse",
                          "options": {
                            "(google.api.http).post": "/v2/{resource=projects/*/locations/*/queues/*}:testIamPermissions",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "resource,permissions"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{resource=projects/*/locations/*/queues/*}:testIamPermissions",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "resource,permissions"
                            }
                          ]
                        },
                        "ListTasks": {
                          "requestType": "ListTasksRequest",
                          "responseType": "ListTasksResponse",
                          "options": {
                            "(google.api.http).get": "/v2/{parent=projects/*/locations/*/queues/*}/tasks",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{parent=projects/*/locations/*/queues/*}/tasks"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetTask": {
                          "requestType": "GetTaskRequest",
                          "responseType": "Task",
                          "options": {
                            "(google.api.http).get": "/v2/{name=projects/*/locations/*/queues/*/tasks/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{name=projects/*/locations/*/queues/*/tasks/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateTask": {
                          "requestType": "CreateTaskRequest",
                          "responseType": "Task",
                          "options": {
                            "(google.api.http).post": "/v2/{parent=projects/*/locations/*/queues/*}/tasks",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,task"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{parent=projects/*/locations/*/queues/*}/tasks",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,task"
                            }
                          ]
                        },
                        "DeleteTask": {
                          "requestType": "DeleteTaskRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v2/{name=projects/*/locations/*/queues/*/tasks/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v2/{name=projects/*/locations/*/queues/*/tasks/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "RunTask": {
                          "requestType": "RunTaskRequest",
                          "responseType": "Task",
                          "options": {
                            "(google.api.http).post": "/v2/{name=projects/*/locations/*/queues/*/tasks/*}:run",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{name=projects/*/locations/*/queues/*/tasks/*}:run",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        }
                      }
                    },
                    "ListQueuesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "cloudtasks.googleapis.com/Queue"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "ListQueuesResponse": {
                      "fields": {
                        "queues": {
                          "rule": "repeated",
                          "type": "Queue",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetQueueRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudtasks.googleapis.com/Queue"
                          }
                        }
                      }
                    },
                    "CreateQueueRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "cloudtasks.googleapis.com/Queue"
                          }
                        },
                        "queue": {
                          "type": "Queue",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UpdateQueueRequest": {
                      "fields": {
                        "queue": {
                          "type": "Queue",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "DeleteQueueRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudtasks.googleapis.com/Queue"
                          }
                        }
                      }
                    },
                    "PurgeQueueRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudtasks.googleapis.com/Queue"
                          }
                        }
                      }
                    },
                    "PauseQueueRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudtasks.googleapis.com/Queue"
                          }
                        }
                      }
                    },
                    "ResumeQueueRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudtasks.googleapis.com/Queue"
                          }
                        }
                      }
                    },
                    "ListTasksRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "cloudtasks.googleapis.com/Task"
                          }
                        },
                        "responseView": {
                          "type": "Task.View",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "ListTasksResponse": {
                      "fields": {
                        "tasks": {
                          "rule": "repeated",
                          "type": "Task",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetTaskRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudtasks.googleapis.com/Task"
                          }
                        },
                        "responseView": {
                          "type": "Task.View",
                          "id": 2
                        }
                      }
                    },
                    "CreateTaskRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "cloudtasks.googleapis.com/Task"
                          }
                        },
                        "task": {
                          "type": "Task",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "responseView": {
                          "type": "Task.View",
                          "id": 3
                        }
                      }
                    },
                    "DeleteTaskRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudtasks.googleapis.com/Task"
                          }
                        }
                      }
                    },
                    "RunTaskRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudtasks.googleapis.com/Task"
                          }
                        },
                        "responseView": {
                          "type": "Task.View",
                          "id": 2
                        }
                      }
                    },
                    "Queue": {
                      "options": {
                        "(google.api.resource).type": "cloudtasks.googleapis.com/Queue",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/queues/{queue}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "appEngineRoutingOverride": {
                          "type": "AppEngineRouting",
                          "id": 2
                        },
                        "rateLimits": {
                          "type": "RateLimits",
                          "id": 3
                        },
                        "retryConfig": {
                          "type": "RetryConfig",
                          "id": 4
                        },
                        "state": {
                          "type": "State",
                          "id": 5
                        },
                        "purgeTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6
                        },
                        "stackdriverLoggingConfig": {
                          "type": "StackdriverLoggingConfig",
                          "id": 9
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "RUNNING": 1,
                            "PAUSED": 2,
                            "DISABLED": 3
                          }
                        }
                      }
                    },
                    "RateLimits": {
                      "fields": {
                        "maxDispatchesPerSecond": {
                          "type": "double",
                          "id": 1
                        },
                        "maxBurstSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "maxConcurrentDispatches": {
                          "type": "int32",
                          "id": 3
                        }
                      }
                    },
                    "RetryConfig": {
                      "fields": {
                        "maxAttempts": {
                          "type": "int32",
                          "id": 1
                        },
                        "maxRetryDuration": {
                          "type": "google.protobuf.Duration",
                          "id": 2
                        },
                        "minBackoff": {
                          "type": "google.protobuf.Duration",
                          "id": 3
                        },
                        "maxBackoff": {
                          "type": "google.protobuf.Duration",
                          "id": 4
                        },
                        "maxDoublings": {
                          "type": "int32",
                          "id": 5
                        }
                      }
                    },
                    "StackdriverLoggingConfig": {
                      "fields": {
                        "samplingRatio": {
                          "type": "double",
                          "id": 1
                        }
                      }
                    },
                    "HttpRequest": {
                      "oneofs": {
                        "authorizationHeader": {
                          "oneof": [
                            "oauthToken",
                            "oidcToken"
                          ]
                        }
                      },
                      "fields": {
                        "url": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "httpMethod": {
                          "type": "HttpMethod",
                          "id": 2
                        },
                        "headers": {
                          "keyType": "string",
                          "type": "string",
                          "id": 3
                        },
                        "body": {
                          "type": "bytes",
                          "id": 4
                        },
                        "oauthToken": {
                          "type": "OAuthToken",
                          "id": 5
                        },
                        "oidcToken": {
                          "type": "OidcToken",
                          "id": 6
                        }
                      }
                    },
                    "AppEngineHttpRequest": {
                      "fields": {
                        "httpMethod": {
                          "type": "HttpMethod",
                          "id": 1
                        },
                        "appEngineRouting": {
                          "type": "AppEngineRouting",
                          "id": 2
                        },
                        "relativeUri": {
                          "type": "string",
                          "id": 3
                        },
                        "headers": {
                          "keyType": "string",
                          "type": "string",
                          "id": 4
                        },
                        "body": {
                          "type": "bytes",
                          "id": 5
                        }
                      }
                    },
                    "AppEngineRouting": {
                      "fields": {
                        "service": {
                          "type": "string",
                          "id": 1
                        },
                        "version": {
                          "type": "string",
                          "id": 2
                        },
                        "instance": {
                          "type": "string",
                          "id": 3
                        },
                        "host": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "HttpMethod": {
                      "values": {
                        "HTTP_METHOD_UNSPECIFIED": 0,
                        "POST": 1,
                        "GET": 2,
                        "HEAD": 3,
                        "PUT": 4,
                        "DELETE": 5,
                        "PATCH": 6,
                        "OPTIONS": 7
                      }
                    },
                    "OAuthToken": {
                      "fields": {
                        "serviceAccountEmail": {
                          "type": "string",
                          "id": 1
                        },
                        "scope": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "OidcToken": {
                      "fields": {
                        "serviceAccountEmail": {
                          "type": "string",
                          "id": 1
                        },
                        "audience": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "Task": {
                      "options": {
                        "(google.api.resource).type": "cloudtasks.googleapis.com/Task",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/queues/{queue}/tasks/{task}"
                      },
                      "oneofs": {
                        "messageType": {
                          "oneof": [
                            "appEngineHttpRequest",
                            "httpRequest"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "appEngineHttpRequest": {
                          "type": "AppEngineHttpRequest",
                          "id": 2
                        },
                        "httpRequest": {
                          "type": "HttpRequest",
                          "id": 3
                        },
                        "scheduleTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5
                        },
                        "dispatchDeadline": {
                          "type": "google.protobuf.Duration",
                          "id": 6
                        },
                        "dispatchCount": {
                          "type": "int32",
                          "id": 7
                        },
                        "responseCount": {
                          "type": "int32",
                          "id": 8
                        },
                        "firstAttempt": {
                          "type": "Attempt",
                          "id": 9
                        },
                        "lastAttempt": {
                          "type": "Attempt",
                          "id": 10
                        },
                        "view": {
                          "type": "View",
                          "id": 11
                        }
                      },
                      "nested": {
                        "View": {
                          "values": {
                            "VIEW_UNSPECIFIED": 0,
                            "BASIC": 1,
                            "FULL": 2
                          }
                        }
                      }
                    },
                    "Attempt": {
                      "fields": {
                        "scheduleTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1
                        },
                        "dispatchTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        },
                        "responseTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3
                        },
                        "responseStatus": {
                          "type": "google.rpc.Status",
                          "id": 4
                        }
                      }
                    }
                  }
                },
                "v2beta2": {
                  "options": {
                    "go_package": "cloud.google.com/go/cloudtasks/apiv2beta2/cloudtaskspb;cloudtaskspb",
                    "java_multiple_files": true,
                    "java_outer_classname": "OldTargetProto",
                    "java_package": "com.google.cloud.tasks.v2beta2",
                    "objc_class_prefix": "TASKS",
                    "(google.api.resource_definition).type": "cloudtasks.googleapis.com/Location",
                    "(google.api.resource_definition).pattern": "projects/{project}/locations/{location}"
                  },
                  "nested": {
                    "CloudTasks": {
                      "options": {
                        "(google.api.default_host)": "cloudtasks.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "ListQueues": {
                          "requestType": "ListQueuesRequest",
                          "responseType": "ListQueuesResponse",
                          "options": {
                            "(google.api.http).get": "/v2beta2/{parent=projects/*/locations/*}/queues",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2beta2/{parent=projects/*/locations/*}/queues"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetQueue": {
                          "requestType": "GetQueueRequest",
                          "responseType": "Queue",
                          "options": {
                            "(google.api.http).get": "/v2beta2/{name=projects/*/locations/*/queues/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2beta2/{name=projects/*/locations/*/queues/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateQueue": {
                          "requestType": "CreateQueueRequest",
                          "responseType": "Queue",
                          "options": {
                            "(google.api.http).post": "/v2beta2/{parent=projects/*/locations/*}/queues",
                            "(google.api.http).body": "queue",
                            "(google.api.method_signature)": "parent,queue"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2beta2/{parent=projects/*/locations/*}/queues",
                                "body": "queue"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,queue"
                            }
                          ]
                        },
                        "UpdateQueue": {
                          "requestType": "UpdateQueueRequest",
                          "responseType": "Queue",
                          "options": {
                            "(google.api.http).patch": "/v2beta2/{queue.name=projects/*/locations/*/queues/*}",
                            "(google.api.http).body": "queue",
                            "(google.api.method_signature)": "queue,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v2beta2/{queue.name=projects/*/locations/*/queues/*}",
                                "body": "queue"
                              }
                            },
                            {
                              "(google.api.method_signature)": "queue,update_mask"
                            }
                          ]
                        },
                        "DeleteQueue": {
                          "requestType": "DeleteQueueRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v2beta2/{name=projects/*/locations/*/queues/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v2beta2/{name=projects/*/locations/*/queues/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "PurgeQueue": {
                          "requestType": "PurgeQueueRequest",
                          "responseType": "Queue",
                          "options": {
                            "(google.api.http).post": "/v2beta2/{name=projects/*/locations/*/queues/*}:purge",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2beta2/{name=projects/*/locations/*/queues/*}:purge",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "PauseQueue": {
                          "requestType": "PauseQueueRequest",
                          "responseType": "Queue",
                          "options": {
                            "(google.api.http).post": "/v2beta2/{name=projects/*/locations/*/queues/*}:pause",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2beta2/{name=projects/*/locations/*/queues/*}:pause",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ResumeQueue": {
                          "requestType": "ResumeQueueRequest",
                          "responseType": "Queue",
                          "options": {
                            "(google.api.http).post": "/v2beta2/{name=projects/*/locations/*/queues/*}:resume",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2beta2/{name=projects/*/locations/*/queues/*}:resume",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "UploadQueueYaml": {
                          "requestType": "UploadQueueYamlRequest",
                          "responseType": "google.protobuf.Empty"
                        },
                        "GetIamPolicy": {
                          "requestType": "google.iam.v1.GetIamPolicyRequest",
                          "responseType": "google.iam.v1.Policy",
                          "options": {
                            "(google.api.http).post": "/v2beta2/{resource=projects/*/locations/*/queues/*}:getIamPolicy",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "resource"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2beta2/{resource=projects/*/locations/*/queues/*}:getIamPolicy",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "resource"
                            }
                          ]
                        },
                        "SetIamPolicy": {
                          "requestType": "google.iam.v1.SetIamPolicyRequest",
                          "responseType": "google.iam.v1.Policy",
                          "options": {
                            "(google.api.http).post": "/v2beta2/{resource=projects/*/locations/*/queues/*}:setIamPolicy",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "resource,policy"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2beta2/{resource=projects/*/locations/*/queues/*}:setIamPolicy",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "resource,policy"
                            }
                          ]
                        },
                        "TestIamPermissions": {
                          "requestType": "google.iam.v1.TestIamPermissionsRequest",
                          "responseType": "google.iam.v1.TestIamPermissionsResponse",
                          "options": {
                            "(google.api.http).post": "/v2beta2/{resource=projects/*/locations/*/queues/*}:testIamPermissions",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "resource,permissions"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2beta2/{resource=projects/*/locations/*/queues/*}:testIamPermissions",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "resource,permissions"
                            }
                          ]
                        },
                        "ListTasks": {
                          "requestType": "ListTasksRequest",
                          "responseType": "ListTasksResponse",
                          "options": {
                            "(google.api.http).get": "/v2beta2/{parent=projects/*/locations/*/queues/*}/tasks",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2beta2/{parent=projects/*/locations/*/queues/*}/tasks"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetTask": {
                          "requestType": "GetTaskRequest",
                          "responseType": "Task",
                          "options": {
                            "(google.api.http).get": "/v2beta2/{name=projects/*/locations/*/queues/*/tasks/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2beta2/{name=projects/*/locations/*/queues/*/tasks/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateTask": {
                          "requestType": "CreateTaskRequest",
                          "responseType": "Task",
                          "options": {
                            "(google.api.http).post": "/v2beta2/{parent=projects/*/locations/*/queues/*}/tasks",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,task"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2beta2/{parent=projects/*/locations/*/queues/*}/tasks",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,task"
                            }
                          ]
                        },
                        "DeleteTask": {
                          "requestType": "DeleteTaskRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v2beta2/{name=projects/*/locations/*/queues/*/tasks/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v2beta2/{name=projects/*/locations/*/queues/*/tasks/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "LeaseTasks": {
                          "requestType": "LeaseTasksRequest",
                          "responseType": "LeaseTasksResponse",
                          "options": {
                            "(google.api.http).post": "/v2beta2/{parent=projects/*/locations/*/queues/*}/tasks:lease",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,lease_duration"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2beta2/{parent=projects/*/locations/*/queues/*}/tasks:lease",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,lease_duration"
                            }
                          ]
                        },
                        "AcknowledgeTask": {
                          "requestType": "AcknowledgeTaskRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v2beta2/{name=projects/*/locations/*/queues/*/tasks/*}:acknowledge",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name,schedule_time"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2beta2/{name=projects/*/locations/*/queues/*/tasks/*}:acknowledge",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,schedule_time"
                            }
                          ]
                        },
                        "RenewLease": {
                          "requestType": "RenewLeaseRequest",
                          "responseType": "Task",
                          "options": {
                            "(google.api.http).post": "/v2beta2/{name=projects/*/locations/*/queues/*/tasks/*}:renewLease",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name,schedule_time,lease_duration"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2beta2/{name=projects/*/locations/*/queues/*/tasks/*}:renewLease",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,schedule_time,lease_duration"
                            }
                          ]
                        },
                        "CancelLease": {
                          "requestType": "CancelLeaseRequest",
                          "responseType": "Task",
                          "options": {
                            "(google.api.http).post": "/v2beta2/{name=projects/*/locations/*/queues/*/tasks/*}:cancelLease",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name,schedule_time"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2beta2/{name=projects/*/locations/*/queues/*/tasks/*}:cancelLease",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,schedule_time"
                            }
                          ]
                        },
                        "RunTask": {
                          "requestType": "RunTaskRequest",
                          "responseType": "Task",
                          "options": {
                            "(google.api.http).post": "/v2beta2/{name=projects/*/locations/*/queues/*/tasks/*}:run",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2beta2/{name=projects/*/locations/*/queues/*/tasks/*}:run",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "BufferTask": {
                          "requestType": "BufferTaskRequest",
                          "responseType": "BufferTaskResponse",
                          "options": {
                            "(google.api.http).post": "/v2beta2/{queue=projects/*/locations/*/queues/*}/tasks/{task_id}:buffer",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "queue,task_id,body"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2beta2/{queue=projects/*/locations/*/queues/*}/tasks/{task_id}:buffer",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "queue,task_id,body"
                            }
                          ]
                        }
                      }
                    },
                    "ListQueuesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "cloudtasks.googleapis.com/Queue"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListQueuesResponse": {
                      "fields": {
                        "queues": {
                          "rule": "repeated",
                          "type": "Queue",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetQueueRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudtasks.googleapis.com/Queue"
                          }
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "CreateQueueRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "cloudtasks.googleapis.com/Queue"
                          }
                        },
                        "queue": {
                          "type": "Queue",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UpdateQueueRequest": {
                      "fields": {
                        "queue": {
                          "type": "Queue",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "DeleteQueueRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudtasks.googleapis.com/Queue"
                          }
                        }
                      }
                    },
                    "PurgeQueueRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudtasks.googleapis.com/Queue"
                          }
                        }
                      }
                    },
                    "PauseQueueRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudtasks.googleapis.com/Queue"
                          }
                        }
                      }
                    },
                    "ResumeQueueRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudtasks.googleapis.com/Queue"
                          }
                        }
                      }
                    },
                    "UploadQueueYamlRequest": {
                      "oneofs": {
                        "_httpBody": {
                          "oneof": [
                            "httpBody"
                          ]
                        }
                      },
                      "fields": {
                        "appId": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "httpBody": {
                          "type": "google.api.HttpBody",
                          "id": 2,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "ListTasksRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "cloudtasks.googleapis.com/Task"
                          }
                        },
                        "responseView": {
                          "type": "Task.View",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 4
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ListTasksResponse": {
                      "fields": {
                        "tasks": {
                          "rule": "repeated",
                          "type": "Task",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetTaskRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudtasks.googleapis.com/Task"
                          }
                        },
                        "responseView": {
                          "type": "Task.View",
                          "id": 2
                        }
                      }
                    },
                    "CreateTaskRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "cloudtasks.googleapis.com/Task"
                          }
                        },
                        "task": {
                          "type": "Task",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "responseView": {
                          "type": "Task.View",
                          "id": 3
                        }
                      }
                    },
                    "DeleteTaskRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudtasks.googleapis.com/Task"
                          }
                        }
                      }
                    },
                    "LeaseTasksRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "cloudtasks.googleapis.com/Task"
                          }
                        },
                        "maxTasks": {
                          "type": "int32",
                          "id": 2
                        },
                        "leaseDuration": {
                          "type": "google.protobuf.Duration",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "responseView": {
                          "type": "Task.View",
                          "id": 4
                        },
                        "filter": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "LeaseTasksResponse": {
                      "fields": {
                        "tasks": {
                          "rule": "repeated",
                          "type": "Task",
                          "id": 1
                        }
                      }
                    },
                    "AcknowledgeTaskRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudtasks.googleapis.com/Task"
                          }
                        },
                        "scheduleTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "RenewLeaseRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudtasks.googleapis.com/Task"
                          }
                        },
                        "scheduleTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "leaseDuration": {
                          "type": "google.protobuf.Duration",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "responseView": {
                          "type": "Task.View",
                          "id": 4
                        }
                      }
                    },
                    "CancelLeaseRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudtasks.googleapis.com/Task"
                          }
                        },
                        "scheduleTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "responseView": {
                          "type": "Task.View",
                          "id": 3
                        }
                      }
                    },
                    "RunTaskRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudtasks.googleapis.com/Task"
                          }
                        },
                        "responseView": {
                          "type": "Task.View",
                          "id": 2
                        }
                      }
                    },
                    "BufferTaskRequest": {
                      "fields": {
                        "queue": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "cloudtasks.googleapis.com/Task"
                          }
                        },
                        "taskId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "body": {
                          "type": "google.api.HttpBody",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "BufferTaskResponse": {
                      "fields": {
                        "task": {
                          "type": "Task",
                          "id": 1
                        }
                      }
                    },
                    "Queue": {
                      "options": {
                        "(google.api.resource).type": "cloudtasks.googleapis.com/Queue",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/queues/{queue}"
                      },
                      "oneofs": {
                        "targetType": {
                          "oneof": [
                            "appEngineHttpTarget",
                            "pullTarget",
                            "httpTarget"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "appEngineHttpTarget": {
                          "type": "AppEngineHttpTarget",
                          "id": 3
                        },
                        "pullTarget": {
                          "type": "PullTarget",
                          "id": 4
                        },
                        "httpTarget": {
                          "type": "HttpTarget",
                          "id": 17
                        },
                        "rateLimits": {
                          "type": "RateLimits",
                          "id": 5
                        },
                        "retryConfig": {
                          "type": "RetryConfig",
                          "id": 6
                        },
                        "state": {
                          "type": "State",
                          "id": 7
                        },
                        "purgeTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8
                        },
                        "taskTtl": {
                          "type": "google.protobuf.Duration",
                          "id": 9
                        },
                        "tombstoneTtl": {
                          "type": "google.protobuf.Duration",
                          "id": 10
                        },
                        "stats": {
                          "type": "QueueStats",
                          "id": 16,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "RUNNING": 1,
                            "PAUSED": 2,
                            "DISABLED": 3
                          }
                        }
                      }
                    },
                    "RateLimits": {
                      "fields": {
                        "maxTasksDispatchedPerSecond": {
                          "type": "double",
                          "id": 1
                        },
                        "maxBurstSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "maxConcurrentTasks": {
                          "type": "int32",
                          "id": 3
                        }
                      }
                    },
                    "RetryConfig": {
                      "oneofs": {
                        "numAttempts": {
                          "oneof": [
                            "maxAttempts",
                            "unlimitedAttempts"
                          ]
                        }
                      },
                      "fields": {
                        "maxAttempts": {
                          "type": "int32",
                          "id": 1
                        },
                        "unlimitedAttempts": {
                          "type": "bool",
                          "id": 2
                        },
                        "maxRetryDuration": {
                          "type": "google.protobuf.Duration",
                          "id": 3
                        },
                        "minBackoff": {
                          "type": "google.protobuf.Duration",
                          "id": 4
                        },
                        "maxBackoff": {
                          "type": "google.protobuf.Duration",
                          "id": 5
                        },
                        "maxDoublings": {
                          "type": "int32",
                          "id": 6
                        }
                      }
                    },
                    "QueueStats": {
                      "fields": {
                        "tasksCount": {
                          "type": "int64",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "oldestEstimatedArrivalTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "executedLastMinuteCount": {
                          "type": "int64",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "concurrentDispatchesCount": {
                          "type": "int64",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "effectiveExecutionRate": {
                          "type": "double",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "PullTarget": {
                      "fields": {}
                    },
                    "PullMessage": {
                      "fields": {
                        "payload": {
                          "type": "bytes",
                          "id": 1
                        },
                        "tag": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "AppEngineHttpTarget": {
                      "fields": {
                        "appEngineRoutingOverride": {
                          "type": "AppEngineRouting",
                          "id": 1
                        }
                      }
                    },
                    "AppEngineHttpRequest": {
                      "fields": {
                        "httpMethod": {
                          "type": "HttpMethod",
                          "id": 1
                        },
                        "appEngineRouting": {
                          "type": "AppEngineRouting",
                          "id": 2
                        },
                        "relativeUrl": {
                          "type": "string",
                          "id": 3
                        },
                        "headers": {
                          "keyType": "string",
                          "type": "string",
                          "id": 4
                        },
                        "payload": {
                          "type": "bytes",
                          "id": 5
                        }
                      }
                    },
                    "AppEngineRouting": {
                      "fields": {
                        "service": {
                          "type": "string",
                          "id": 1
                        },
                        "version": {
                          "type": "string",
                          "id": 2
                        },
                        "instance": {
                          "type": "string",
                          "id": 3
                        },
                        "host": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "HttpRequest": {
                      "oneofs": {
                        "authorizationHeader": {
                          "oneof": [
                            "oauthToken",
                            "oidcToken"
                          ]
                        }
                      },
                      "fields": {
                        "url": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "httpMethod": {
                          "type": "HttpMethod",
                          "id": 2
                        },
                        "headers": {
                          "keyType": "string",
                          "type": "string",
                          "id": 3
                        },
                        "body": {
                          "type": "bytes",
                          "id": 4
                        },
                        "oauthToken": {
                          "type": "OAuthToken",
                          "id": 5
                        },
                        "oidcToken": {
                          "type": "OidcToken",
                          "id": 6
                        }
                      }
                    },
                    "PathOverride": {
                      "fields": {
                        "path": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "QueryOverride": {
                      "fields": {
                        "queryParams": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "UriOverride": {
                      "oneofs": {
                        "_scheme": {
                          "oneof": [
                            "scheme"
                          ]
                        },
                        "_host": {
                          "oneof": [
                            "host"
                          ]
                        },
                        "_port": {
                          "oneof": [
                            "port"
                          ]
                        }
                      },
                      "fields": {
                        "scheme": {
                          "type": "Scheme",
                          "id": 1,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "host": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "port": {
                          "type": "int64",
                          "id": 3,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "pathOverride": {
                          "type": "PathOverride",
                          "id": 4
                        },
                        "queryOverride": {
                          "type": "QueryOverride",
                          "id": 5
                        },
                        "uriOverrideEnforceMode": {
                          "type": "UriOverrideEnforceMode",
                          "id": 6
                        }
                      },
                      "nested": {
                        "Scheme": {
                          "values": {
                            "SCHEME_UNSPECIFIED": 0,
                            "HTTP": 1,
                            "HTTPS": 2
                          }
                        },
                        "UriOverrideEnforceMode": {
                          "values": {
                            "URI_OVERRIDE_ENFORCE_MODE_UNSPECIFIED": 0,
                            "IF_NOT_EXISTS": 1,
                            "ALWAYS": 2
                          }
                        }
                      }
                    },
                    "HttpTarget": {
                      "oneofs": {
                        "authorizationHeader": {
                          "oneof": [
                            "oauthToken",
                            "oidcToken"
                          ]
                        }
                      },
                      "fields": {
                        "uriOverride": {
                          "type": "UriOverride",
                          "id": 1
                        },
                        "httpMethod": {
                          "type": "HttpMethod",
                          "id": 2
                        },
                        "headerOverrides": {
                          "rule": "repeated",
                          "type": "HeaderOverride",
                          "id": 3
                        },
                        "oauthToken": {
                          "type": "OAuthToken",
                          "id": 5
                        },
                        "oidcToken": {
                          "type": "OidcToken",
                          "id": 6
                        }
                      },
                      "nested": {
                        "Header": {
                          "fields": {
                            "key": {
                              "type": "string",
                              "id": 1
                            },
                            "value": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "HeaderOverride": {
                          "fields": {
                            "header": {
                              "type": "Header",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "OAuthToken": {
                      "fields": {
                        "serviceAccountEmail": {
                          "type": "string",
                          "id": 1
                        },
                        "scope": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "OidcToken": {
                      "fields": {
                        "serviceAccountEmail": {
                          "type": "string",
                          "id": 1
                        },
                        "audience": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "HttpMethod": {
                      "values": {
                        "HTTP_METHOD_UNSPECIFIED": 0,
                        "POST": 1,
                        "GET": 2,
                        "HEAD": 3,
                        "PUT": 4,
                        "DELETE": 5,
                        "PATCH": 6,
                        "OPTIONS": 7
                      }
                    },
                    "Task": {
                      "options": {
                        "(google.api.resource).type": "cloudtasks.googleapis.com/Task",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/queues/{queue}/tasks/{task}"
                      },
                      "oneofs": {
                        "payloadType": {
                          "oneof": [
                            "appEngineHttpRequest",
                            "pullMessage",
                            "httpRequest"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "appEngineHttpRequest": {
                          "type": "AppEngineHttpRequest",
                          "id": 3
                        },
                        "pullMessage": {
                          "type": "PullMessage",
                          "id": 4
                        },
                        "httpRequest": {
                          "type": "HttpRequest",
                          "id": 13
                        },
                        "scheduleTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6
                        },
                        "status": {
                          "type": "TaskStatus",
                          "id": 7
                        },
                        "view": {
                          "type": "View",
                          "id": 8
                        }
                      },
                      "nested": {
                        "View": {
                          "values": {
                            "VIEW_UNSPECIFIED": 0,
                            "BASIC": 1,
                            "FULL": 2
                          }
                        }
                      }
                    },
                    "TaskStatus": {
                      "fields": {
                        "attemptDispatchCount": {
                          "type": "int32",
                          "id": 1
                        },
                        "attemptResponseCount": {
                          "type": "int32",
                          "id": 2
                        },
                        "firstAttemptStatus": {
                          "type": "AttemptStatus",
                          "id": 3
                        },
                        "lastAttemptStatus": {
                          "type": "AttemptStatus",
                          "id": 4
                        }
                      }
                    },
                    "AttemptStatus": {
                      "fields": {
                        "scheduleTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1
                        },
                        "dispatchTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        },
                        "responseTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3
                        },
                        "responseStatus": {
                          "type": "google.rpc.Status",
                          "id": 4
                        }
                      }
                    }
                  }
                },
                "v2beta3": {
                  "options": {
                    "go_package": "cloud.google.com/go/cloudtasks/apiv2beta3/cloudtaskspb;cloudtaskspb",
                    "java_multiple_files": true,
                    "java_outer_classname": "TaskProto",
                    "java_package": "com.google.cloud.tasks.v2beta3",
                    "objc_class_prefix": "TASKS"
                  },
                  "nested": {
                    "CloudTasks": {
                      "options": {
                        "(google.api.default_host)": "cloudtasks.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "ListQueues": {
                          "requestType": "ListQueuesRequest",
                          "responseType": "ListQueuesResponse",
                          "options": {
                            "(google.api.http).get": "/v2beta3/{parent=projects/*/locations/*}/queues",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2beta3/{parent=projects/*/locations/*}/queues"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetQueue": {
                          "requestType": "GetQueueRequest",
                          "responseType": "Queue",
                          "options": {
                            "(google.api.http).get": "/v2beta3/{name=projects/*/locations/*/queues/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2beta3/{name=projects/*/locations/*/queues/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateQueue": {
                          "requestType": "CreateQueueRequest",
                          "responseType": "Queue",
                          "options": {
                            "(google.api.http).post": "/v2beta3/{parent=projects/*/locations/*}/queues",
                            "(google.api.http).body": "queue",
                            "(google.api.method_signature)": "parent,queue"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2beta3/{parent=projects/*/locations/*}/queues",
                                "body": "queue"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,queue"
                            }
                          ]
                        },
                        "UpdateQueue": {
                          "requestType": "UpdateQueueRequest",
                          "responseType": "Queue",
                          "options": {
                            "(google.api.http).patch": "/v2beta3/{queue.name=projects/*/locations/*/queues/*}",
                            "(google.api.http).body": "queue",
                            "(google.api.method_signature)": "queue,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v2beta3/{queue.name=projects/*/locations/*/queues/*}",
                                "body": "queue"
                              }
                            },
                            {
                              "(google.api.method_signature)": "queue,update_mask"
                            }
                          ]
                        },
                        "DeleteQueue": {
                          "requestType": "DeleteQueueRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v2beta3/{name=projects/*/locations/*/queues/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v2beta3/{name=projects/*/locations/*/queues/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "PurgeQueue": {
                          "requestType": "PurgeQueueRequest",
                          "responseType": "Queue",
                          "options": {
                            "(google.api.http).post": "/v2beta3/{name=projects/*/locations/*/queues/*}:purge",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2beta3/{name=projects/*/locations/*/queues/*}:purge",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "PauseQueue": {
                          "requestType": "PauseQueueRequest",
                          "responseType": "Queue",
                          "options": {
                            "(google.api.http).post": "/v2beta3/{name=projects/*/locations/*/queues/*}:pause",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2beta3/{name=projects/*/locations/*/queues/*}:pause",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ResumeQueue": {
                          "requestType": "ResumeQueueRequest",
                          "responseType": "Queue",
                          "options": {
                            "(google.api.http).post": "/v2beta3/{name=projects/*/locations/*/queues/*}:resume",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2beta3/{name=projects/*/locations/*/queues/*}:resume",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "GetIamPolicy": {
                          "requestType": "google.iam.v1.GetIamPolicyRequest",
                          "responseType": "google.iam.v1.Policy",
                          "options": {
                            "(google.api.http).post": "/v2beta3/{resource=projects/*/locations/*/queues/*}:getIamPolicy",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "resource"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2beta3/{resource=projects/*/locations/*/queues/*}:getIamPolicy",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "resource"
                            }
                          ]
                        },
                        "SetIamPolicy": {
                          "requestType": "google.iam.v1.SetIamPolicyRequest",
                          "responseType": "google.iam.v1.Policy",
                          "options": {
                            "(google.api.http).post": "/v2beta3/{resource=projects/*/locations/*/queues/*}:setIamPolicy",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "resource,policy"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2beta3/{resource=projects/*/locations/*/queues/*}:setIamPolicy",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "resource,policy"
                            }
                          ]
                        },
                        "TestIamPermissions": {
                          "requestType": "google.iam.v1.TestIamPermissionsRequest",
                          "responseType": "google.iam.v1.TestIamPermissionsResponse",
                          "options": {
                            "(google.api.http).post": "/v2beta3/{resource=projects/*/locations/*/queues/*}:testIamPermissions",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "resource,permissions"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2beta3/{resource=projects/*/locations/*/queues/*}:testIamPermissions",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "resource,permissions"
                            }
                          ]
                        },
                        "ListTasks": {
                          "requestType": "ListTasksRequest",
                          "responseType": "ListTasksResponse",
                          "options": {
                            "(google.api.http).get": "/v2beta3/{parent=projects/*/locations/*/queues/*}/tasks",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2beta3/{parent=projects/*/locations/*/queues/*}/tasks"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetTask": {
                          "requestType": "GetTaskRequest",
                          "responseType": "Task",
                          "options": {
                            "(google.api.http).get": "/v2beta3/{name=projects/*/locations/*/queues/*/tasks/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2beta3/{name=projects/*/locations/*/queues/*/tasks/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateTask": {
                          "requestType": "CreateTaskRequest",
                          "responseType": "Task",
                          "options": {
                            "(google.api.http).post": "/v2beta3/{parent=projects/*/locations/*/queues/*}/tasks",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,task"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2beta3/{parent=projects/*/locations/*/queues/*}/tasks",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,task"
                            }
                          ]
                        },
                        "DeleteTask": {
                          "requestType": "DeleteTaskRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v2beta3/{name=projects/*/locations/*/queues/*/tasks/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v2beta3/{name=projects/*/locations/*/queues/*/tasks/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "RunTask": {
                          "requestType": "RunTaskRequest",
                          "responseType": "Task",
                          "options": {
                            "(google.api.http).post": "/v2beta3/{name=projects/*/locations/*/queues/*/tasks/*}:run",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2beta3/{name=projects/*/locations/*/queues/*/tasks/*}:run",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "BufferTask": {
                          "requestType": "BufferTaskRequest",
                          "responseType": "BufferTaskResponse",
                          "options": {
                            "(google.api.http).post": "/v2beta3/{queue=projects/*/locations/*/queues/*}/tasks/{task_id}:buffer",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "queue,task_id,body"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2beta3/{queue=projects/*/locations/*/queues/*}/tasks/{task_id}:buffer",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "queue,task_id,body"
                            }
                          ]
                        }
                      }
                    },
                    "ListQueuesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "cloudtasks.googleapis.com/Queue"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListQueuesResponse": {
                      "fields": {
                        "queues": {
                          "rule": "repeated",
                          "type": "Queue",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetQueueRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudtasks.googleapis.com/Queue"
                          }
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "CreateQueueRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "cloudtasks.googleapis.com/Queue"
                          }
                        },
                        "queue": {
                          "type": "Queue",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UpdateQueueRequest": {
                      "fields": {
                        "queue": {
                          "type": "Queue",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "DeleteQueueRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudtasks.googleapis.com/Queue"
                          }
                        }
                      }
                    },
                    "PurgeQueueRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudtasks.googleapis.com/Queue"
                          }
                        }
                      }
                    },
                    "PauseQueueRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudtasks.googleapis.com/Queue"
                          }
                        }
                      }
                    },
                    "ResumeQueueRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudtasks.googleapis.com/Queue"
                          }
                        }
                      }
                    },
                    "ListTasksRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "cloudtasks.googleapis.com/Task"
                          }
                        },
                        "responseView": {
                          "type": "Task.View",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "ListTasksResponse": {
                      "fields": {
                        "tasks": {
                          "rule": "repeated",
                          "type": "Task",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetTaskRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudtasks.googleapis.com/Task"
                          }
                        },
                        "responseView": {
                          "type": "Task.View",
                          "id": 2
                        }
                      }
                    },
                    "CreateTaskRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "cloudtasks.googleapis.com/Task"
                          }
                        },
                        "task": {
                          "type": "Task",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "responseView": {
                          "type": "Task.View",
                          "id": 3
                        }
                      }
                    },
                    "DeleteTaskRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudtasks.googleapis.com/Task"
                          }
                        }
                      }
                    },
                    "RunTaskRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudtasks.googleapis.com/Task"
                          }
                        },
                        "responseView": {
                          "type": "Task.View",
                          "id": 2
                        }
                      }
                    },
                    "BufferTaskRequest": {
                      "fields": {
                        "queue": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "cloudtasks.googleapis.com/Task"
                          }
                        },
                        "taskId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "body": {
                          "type": "google.api.HttpBody",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "BufferTaskResponse": {
                      "fields": {
                        "task": {
                          "type": "Task",
                          "id": 1
                        }
                      }
                    },
                    "Queue": {
                      "options": {
                        "(google.api.resource).type": "cloudtasks.googleapis.com/Queue",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/queues/{queue}"
                      },
                      "oneofs": {
                        "queueType": {
                          "oneof": [
                            "appEngineHttpQueue"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "appEngineHttpQueue": {
                          "type": "AppEngineHttpQueue",
                          "id": 3
                        },
                        "httpTarget": {
                          "type": "HttpTarget",
                          "id": 13
                        },
                        "rateLimits": {
                          "type": "RateLimits",
                          "id": 4
                        },
                        "retryConfig": {
                          "type": "RetryConfig",
                          "id": 5
                        },
                        "state": {
                          "type": "State",
                          "id": 6
                        },
                        "purgeTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7
                        },
                        "taskTtl": {
                          "type": "google.protobuf.Duration",
                          "id": 8
                        },
                        "tombstoneTtl": {
                          "type": "google.protobuf.Duration",
                          "id": 9
                        },
                        "stackdriverLoggingConfig": {
                          "type": "StackdriverLoggingConfig",
                          "id": 10
                        },
                        "type": {
                          "type": "Type",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "stats": {
                          "type": "QueueStats",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "RUNNING": 1,
                            "PAUSED": 2,
                            "DISABLED": 3
                          }
                        },
                        "Type": {
                          "values": {
                            "TYPE_UNSPECIFIED": 0,
                            "PULL": 1,
                            "PUSH": 2
                          }
                        }
                      }
                    },
                    "RateLimits": {
                      "fields": {
                        "maxDispatchesPerSecond": {
                          "type": "double",
                          "id": 1
                        },
                        "maxBurstSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "maxConcurrentDispatches": {
                          "type": "int32",
                          "id": 3
                        }
                      }
                    },
                    "RetryConfig": {
                      "fields": {
                        "maxAttempts": {
                          "type": "int32",
                          "id": 1
                        },
                        "maxRetryDuration": {
                          "type": "google.protobuf.Duration",
                          "id": 2
                        },
                        "minBackoff": {
                          "type": "google.protobuf.Duration",
                          "id": 3
                        },
                        "maxBackoff": {
                          "type": "google.protobuf.Duration",
                          "id": 4
                        },
                        "maxDoublings": {
                          "type": "int32",
                          "id": 5
                        }
                      }
                    },
                    "StackdriverLoggingConfig": {
                      "fields": {
                        "samplingRatio": {
                          "type": "double",
                          "id": 1
                        }
                      }
                    },
                    "QueueStats": {
                      "fields": {
                        "tasksCount": {
                          "type": "int64",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "oldestEstimatedArrivalTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "executedLastMinuteCount": {
                          "type": "int64",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "concurrentDispatchesCount": {
                          "type": "int64",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "effectiveExecutionRate": {
                          "type": "double",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "PullMessage": {
                      "fields": {
                        "payload": {
                          "type": "bytes",
                          "id": 1
                        },
                        "tag": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "PathOverride": {
                      "fields": {
                        "path": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "QueryOverride": {
                      "fields": {
                        "queryParams": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "UriOverride": {
                      "oneofs": {
                        "_scheme": {
                          "oneof": [
                            "scheme"
                          ]
                        },
                        "_host": {
                          "oneof": [
                            "host"
                          ]
                        },
                        "_port": {
                          "oneof": [
                            "port"
                          ]
                        }
                      },
                      "fields": {
                        "scheme": {
                          "type": "Scheme",
                          "id": 1,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "host": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "port": {
                          "type": "int64",
                          "id": 3,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "pathOverride": {
                          "type": "PathOverride",
                          "id": 4
                        },
                        "queryOverride": {
                          "type": "QueryOverride",
                          "id": 5
                        },
                        "uriOverrideEnforceMode": {
                          "type": "UriOverrideEnforceMode",
                          "id": 6
                        }
                      },
                      "nested": {
                        "Scheme": {
                          "values": {
                            "SCHEME_UNSPECIFIED": 0,
                            "HTTP": 1,
                            "HTTPS": 2
                          }
                        },
                        "UriOverrideEnforceMode": {
                          "values": {
                            "URI_OVERRIDE_ENFORCE_MODE_UNSPECIFIED": 0,
                            "IF_NOT_EXISTS": 1,
                            "ALWAYS": 2
                          }
                        }
                      }
                    },
                    "HttpTarget": {
                      "oneofs": {
                        "authorizationHeader": {
                          "oneof": [
                            "oauthToken",
                            "oidcToken"
                          ]
                        }
                      },
                      "fields": {
                        "uriOverride": {
                          "type": "UriOverride",
                          "id": 1
                        },
                        "httpMethod": {
                          "type": "HttpMethod",
                          "id": 2
                        },
                        "headerOverrides": {
                          "rule": "repeated",
                          "type": "HeaderOverride",
                          "id": 3
                        },
                        "oauthToken": {
                          "type": "OAuthToken",
                          "id": 5
                        },
                        "oidcToken": {
                          "type": "OidcToken",
                          "id": 6
                        }
                      },
                      "nested": {
                        "Header": {
                          "fields": {
                            "key": {
                              "type": "string",
                              "id": 1
                            },
                            "value": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "HeaderOverride": {
                          "fields": {
                            "header": {
                              "type": "Header",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "HttpRequest": {
                      "oneofs": {
                        "authorizationHeader": {
                          "oneof": [
                            "oauthToken",
                            "oidcToken"
                          ]
                        }
                      },
                      "fields": {
                        "url": {
                          "type": "string",
                          "id": 1
                        },
                        "httpMethod": {
                          "type": "HttpMethod",
                          "id": 2
                        },
                        "headers": {
                          "keyType": "string",
                          "type": "string",
                          "id": 3
                        },
                        "body": {
                          "type": "bytes",
                          "id": 4
                        },
                        "oauthToken": {
                          "type": "OAuthToken",
                          "id": 5
                        },
                        "oidcToken": {
                          "type": "OidcToken",
                          "id": 6
                        }
                      }
                    },
                    "AppEngineHttpQueue": {
                      "fields": {
                        "appEngineRoutingOverride": {
                          "type": "AppEngineRouting",
                          "id": 1
                        }
                      }
                    },
                    "AppEngineHttpRequest": {
                      "fields": {
                        "httpMethod": {
                          "type": "HttpMethod",
                          "id": 1
                        },
                        "appEngineRouting": {
                          "type": "AppEngineRouting",
                          "id": 2
                        },
                        "relativeUri": {
                          "type": "string",
                          "id": 3
                        },
                        "headers": {
                          "keyType": "string",
                          "type": "string",
                          "id": 4
                        },
                        "body": {
                          "type": "bytes",
                          "id": 5
                        }
                      }
                    },
                    "AppEngineRouting": {
                      "fields": {
                        "service": {
                          "type": "string",
                          "id": 1
                        },
                        "version": {
                          "type": "string",
                          "id": 2
                        },
                        "instance": {
                          "type": "string",
                          "id": 3
                        },
                        "host": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "HttpMethod": {
                      "values": {
                        "HTTP_METHOD_UNSPECIFIED": 0,
                        "POST": 1,
                        "GET": 2,
                        "HEAD": 3,
                        "PUT": 4,
                        "DELETE": 5,
                        "PATCH": 6,
                        "OPTIONS": 7
                      }
                    },
                    "OAuthToken": {
                      "fields": {
                        "serviceAccountEmail": {
                          "type": "string",
                          "id": 1
                        },
                        "scope": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "OidcToken": {
                      "fields": {
                        "serviceAccountEmail": {
                          "type": "string",
                          "id": 1
                        },
                        "audience": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "Task": {
                      "options": {
                        "(google.api.resource).type": "cloudtasks.googleapis.com/Task",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/queues/{queue}/tasks/{task}"
                      },
                      "oneofs": {
                        "payloadType": {
                          "oneof": [
                            "appEngineHttpRequest",
                            "httpRequest",
                            "pullMessage"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "appEngineHttpRequest": {
                          "type": "AppEngineHttpRequest",
                          "id": 3
                        },
                        "httpRequest": {
                          "type": "HttpRequest",
                          "id": 11
                        },
                        "pullMessage": {
                          "type": "PullMessage",
                          "id": 13
                        },
                        "scheduleTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5
                        },
                        "dispatchDeadline": {
                          "type": "google.protobuf.Duration",
                          "id": 12
                        },
                        "dispatchCount": {
                          "type": "int32",
                          "id": 6
                        },
                        "responseCount": {
                          "type": "int32",
                          "id": 7
                        },
                        "firstAttempt": {
                          "type": "Attempt",
                          "id": 8
                        },
                        "lastAttempt": {
                          "type": "Attempt",
                          "id": 9
                        },
                        "view": {
                          "type": "View",
                          "id": 10
                        }
                      },
                      "nested": {
                        "View": {
                          "values": {
                            "VIEW_UNSPECIFIED": 0,
                            "BASIC": 1,
                            "FULL": 2
                          }
                        }
                      }
                    },
                    "Attempt": {
                      "fields": {
                        "scheduleTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1
                        },
                        "dispatchTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        },
                        "responseTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3
                        },
                        "responseStatus": {
                          "type": "google.rpc.Status",
                          "id": 4
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "api": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/api/httpbody;httpbody",
            "java_multiple_files": true,
            "java_outer_classname": "HttpBodyProto",
            "java_package": "com.google.api",
            "objc_class_prefix": "GAPI",
            "cc_enable_arenas": true
          },
          "nested": {
            "http": {
              "type": "HttpRule",
              "id": 72295728,
              "extend": "google.protobuf.MethodOptions"
            },
            "Http": {
              "fields": {
                "rules": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 1
                },
                "fullyDecodeReservedExpansion": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "HttpRule": {
              "oneofs": {
                "pattern": {
                  "oneof": [
                    "get",
                    "put",
                    "post",
                    "delete",
                    "patch",
                    "custom"
                  ]
                }
              },
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "get": {
                  "type": "string",
                  "id": 2
                },
                "put": {
                  "type": "string",
                  "id": 3
                },
                "post": {
                  "type": "string",
                  "id": 4
                },
                "delete": {
                  "type": "string",
                  "id": 5
                },
                "patch": {
                  "type": "string",
                  "id": 6
                },
                "custom": {
                  "type": "CustomHttpPattern",
                  "id": 8
                },
                "body": {
                  "type": "string",
                  "id": 7
                },
                "responseBody": {
                  "type": "string",
                  "id": 12
                },
                "additionalBindings": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 11
                }
              }
            },
            "CustomHttpPattern": {
              "fields": {
                "kind": {
                  "type": "string",
                  "id": 1
                },
                "path": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "methodSignature": {
              "rule": "repeated",
              "type": "string",
              "id": 1051,
              "extend": "google.protobuf.MethodOptions"
            },
            "defaultHost": {
              "type": "string",
              "id": 1049,
              "extend": "google.protobuf.ServiceOptions"
            },
            "oauthScopes": {
              "type": "string",
              "id": 1050,
              "extend": "google.protobuf.ServiceOptions"
            },
            "CommonLanguageSettings": {
              "fields": {
                "referenceDocsUri": {
                  "type": "string",
                  "id": 1,
                  "options": {
                    "deprecated": true
                  }
                },
                "destinations": {
                  "rule": "repeated",
                  "type": "ClientLibraryDestination",
                  "id": 2
                }
              }
            },
            "ClientLibrarySettings": {
              "fields": {
                "version": {
                  "type": "string",
                  "id": 1
                },
                "launchStage": {
                  "type": "LaunchStage",
                  "id": 2
                },
                "restNumericEnums": {
                  "type": "bool",
                  "id": 3
                },
                "javaSettings": {
                  "type": "JavaSettings",
                  "id": 21
                },
                "cppSettings": {
                  "type": "CppSettings",
                  "id": 22
                },
                "phpSettings": {
                  "type": "PhpSettings",
                  "id": 23
                },
                "pythonSettings": {
                  "type": "PythonSettings",
                  "id": 24
                },
                "nodeSettings": {
                  "type": "NodeSettings",
                  "id": 25
                },
                "dotnetSettings": {
                  "type": "DotnetSettings",
                  "id": 26
                },
                "rubySettings": {
                  "type": "RubySettings",
                  "id": 27
                },
                "goSettings": {
                  "type": "GoSettings",
                  "id": 28
                }
              }
            },
            "Publishing": {
              "fields": {
                "methodSettings": {
                  "rule": "repeated",
                  "type": "MethodSettings",
                  "id": 2
                },
                "newIssueUri": {
                  "type": "string",
                  "id": 101
                },
                "documentationUri": {
                  "type": "string",
                  "id": 102
                },
                "apiShortName": {
                  "type": "string",
                  "id": 103
                },
                "githubLabel": {
                  "type": "string",
                  "id": 104
                },
                "codeownerGithubTeams": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 105
                },
                "docTagPrefix": {
                  "type": "string",
                  "id": 106
                },
                "organization": {
                  "type": "ClientLibraryOrganization",
                  "id": 107
                },
                "librarySettings": {
                  "rule": "repeated",
                  "type": "ClientLibrarySettings",
                  "id": 109
                }
              }
            },
            "JavaSettings": {
              "fields": {
                "libraryPackage": {
                  "type": "string",
                  "id": 1
                },
                "serviceClassNames": {
                  "keyType": "string",
                  "type": "string",
                  "id": 2
                },
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 3
                }
              }
            },
            "CppSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "PhpSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "PythonSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "NodeSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "DotnetSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "RubySettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "GoSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "MethodSettings": {
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "longRunning": {
                  "type": "LongRunning",
                  "id": 2
                }
              },
              "nested": {
                "LongRunning": {
                  "fields": {
                    "initialPollDelay": {
                      "type": "google.protobuf.Duration",
                      "id": 1
                    },
                    "pollDelayMultiplier": {
                      "type": "float",
                      "id": 2
                    },
                    "maxPollDelay": {
                      "type": "google.protobuf.Duration",
                      "id": 3
                    },
                    "totalPollTimeout": {
                      "type": "google.protobuf.Duration",
                      "id": 4
                    }
                  }
                }
              }
            },
            "ClientLibraryOrganization": {
              "values": {
                "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED": 0,
                "CLOUD": 1,
                "ADS": 2,
                "PHOTOS": 3,
                "STREET_VIEW": 4
              }
            },
            "ClientLibraryDestination": {
              "values": {
                "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED": 0,
                "GITHUB": 10,
                "PACKAGE_MANAGER": 20
              }
            },
            "LaunchStage": {
              "values": {
                "LAUNCH_STAGE_UNSPECIFIED": 0,
                "UNIMPLEMENTED": 6,
                "PRELAUNCH": 7,
                "EARLY_ACCESS": 1,
                "ALPHA": 2,
                "BETA": 3,
                "GA": 4,
                "DEPRECATED": 5
              }
            },
            "fieldBehavior": {
              "rule": "repeated",
              "type": "google.api.FieldBehavior",
              "id": 1052,
              "extend": "google.protobuf.FieldOptions"
            },
            "FieldBehavior": {
              "values": {
                "FIELD_BEHAVIOR_UNSPECIFIED": 0,
                "OPTIONAL": 1,
                "REQUIRED": 2,
                "OUTPUT_ONLY": 3,
                "INPUT_ONLY": 4,
                "IMMUTABLE": 5,
                "UNORDERED_LIST": 6,
                "NON_EMPTY_DEFAULT": 7
              }
            },
            "resourceReference": {
              "type": "google.api.ResourceReference",
              "id": 1055,
              "extend": "google.protobuf.FieldOptions"
            },
            "resourceDefinition": {
              "rule": "repeated",
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.FileOptions"
            },
            "resource": {
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.MessageOptions"
            },
            "ResourceDescriptor": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "pattern": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 2
                },
                "nameField": {
                  "type": "string",
                  "id": 3
                },
                "history": {
                  "type": "History",
                  "id": 4
                },
                "plural": {
                  "type": "string",
                  "id": 5
                },
                "singular": {
                  "type": "string",
                  "id": 6
                },
                "style": {
                  "rule": "repeated",
                  "type": "Style",
                  "id": 10
                }
              },
              "nested": {
                "History": {
                  "values": {
                    "HISTORY_UNSPECIFIED": 0,
                    "ORIGINALLY_SINGLE_PATTERN": 1,
                    "FUTURE_MULTI_PATTERN": 2
                  }
                },
                "Style": {
                  "values": {
                    "STYLE_UNSPECIFIED": 0,
                    "DECLARATIVE_FRIENDLY": 1
                  }
                }
              }
            },
            "ResourceReference": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "childType": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "HttpBody": {
              "fields": {
                "contentType": {
                  "type": "string",
                  "id": 1
                },
                "data": {
                  "type": "bytes",
                  "id": 2
                },
                "extensions": {
                  "rule": "repeated",
                  "type": "google.protobuf.Any",
                  "id": 3
                }
              }
            }
          }
        },
        "protobuf": {
          "options": {
            "go_package": "google.golang.org/protobuf/types/descriptorpb",
            "java_package": "com.google.protobuf",
            "java_outer_classname": "DescriptorProtos",
            "csharp_namespace": "Google.Protobuf.Reflection",
            "objc_class_prefix": "GPB",
            "cc_enable_arenas": true,
            "optimize_for": "SPEED"
          },
          "nested": {
            "FileDescriptorSet": {
              "fields": {
                "file": {
                  "rule": "repeated",
                  "type": "FileDescriptorProto",
                  "id": 1
                }
              }
            },
            "FileDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "package": {
                  "type": "string",
                  "id": 2
                },
                "dependency": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                },
                "publicDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 10,
                  "options": {
                    "packed": false
                  }
                },
                "weakDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 11,
                  "options": {
                    "packed": false
                  }
                },
                "messageType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 4
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 5
                },
                "service": {
                  "rule": "repeated",
                  "type": "ServiceDescriptorProto",
                  "id": 6
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 7
                },
                "options": {
                  "type": "FileOptions",
                  "id": 8
                },
                "sourceCodeInfo": {
                  "type": "SourceCodeInfo",
                  "id": 9
                },
                "syntax": {
                  "type": "string",
                  "id": 12
                },
                "edition": {
                  "type": "string",
                  "id": 13
                }
              }
            },
            "DescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "field": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 2
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 6
                },
                "nestedType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 3
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 4
                },
                "extensionRange": {
                  "rule": "repeated",
                  "type": "ExtensionRange",
                  "id": 5
                },
                "oneofDecl": {
                  "rule": "repeated",
                  "type": "OneofDescriptorProto",
                  "id": 8
                },
                "options": {
                  "type": "MessageOptions",
                  "id": 7
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "ReservedRange",
                  "id": 9
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 10
                }
              },
              "nested": {
                "ExtensionRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    },
                    "options": {
                      "type": "ExtensionRangeOptions",
                      "id": 3
                    }
                  }
                },
                "ReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "ExtensionRangeOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "FieldDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 3
                },
                "label": {
                  "type": "Label",
                  "id": 4
                },
                "type": {
                  "type": "Type",
                  "id": 5
                },
                "typeName": {
                  "type": "string",
                  "id": 6
                },
                "extendee": {
                  "type": "string",
                  "id": 2
                },
                "defaultValue": {
                  "type": "string",
                  "id": 7
                },
                "oneofIndex": {
                  "type": "int32",
                  "id": 9
                },
                "jsonName": {
                  "type": "string",
                  "id": 10
                },
                "options": {
                  "type": "FieldOptions",
                  "id": 8
                },
                "proto3Optional": {
                  "type": "bool",
                  "id": 17
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_DOUBLE": 1,
                    "TYPE_FLOAT": 2,
                    "TYPE_INT64": 3,
                    "TYPE_UINT64": 4,
                    "TYPE_INT32": 5,
                    "TYPE_FIXED64": 6,
                    "TYPE_FIXED32": 7,
                    "TYPE_BOOL": 8,
                    "TYPE_STRING": 9,
                    "TYPE_GROUP": 10,
                    "TYPE_MESSAGE": 11,
                    "TYPE_BYTES": 12,
                    "TYPE_UINT32": 13,
                    "TYPE_ENUM": 14,
                    "TYPE_SFIXED32": 15,
                    "TYPE_SFIXED64": 16,
                    "TYPE_SINT32": 17,
                    "TYPE_SINT64": 18
                  }
                },
                "Label": {
                  "values": {
                    "LABEL_OPTIONAL": 1,
                    "LABEL_REQUIRED": 2,
                    "LABEL_REPEATED": 3
                  }
                }
              }
            },
            "OneofDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "options": {
                  "type": "OneofOptions",
                  "id": 2
                }
              }
            },
            "EnumDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "rule": "repeated",
                  "type": "EnumValueDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "EnumOptions",
                  "id": 3
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "EnumReservedRange",
                  "id": 4
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 5
                }
              },
              "nested": {
                "EnumReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "EnumValueDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 2
                },
                "options": {
                  "type": "EnumValueOptions",
                  "id": 3
                }
              }
            },
            "ServiceDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "method": {
                  "rule": "repeated",
                  "type": "MethodDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "ServiceOptions",
                  "id": 3
                }
              }
            },
            "MethodDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "inputType": {
                  "type": "string",
                  "id": 2
                },
                "outputType": {
                  "type": "string",
                  "id": 3
                },
                "options": {
                  "type": "MethodOptions",
                  "id": 4
                },
                "clientStreaming": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "serverStreaming": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "default": false
                  }
                }
              }
            },
            "FileOptions": {
              "fields": {
                "javaPackage": {
                  "type": "string",
                  "id": 1
                },
                "javaOuterClassname": {
                  "type": "string",
                  "id": 8
                },
                "javaMultipleFiles": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "javaGenerateEqualsAndHash": {
                  "type": "bool",
                  "id": 20,
                  "options": {
                    "deprecated": true
                  }
                },
                "javaStringCheckUtf8": {
                  "type": "bool",
                  "id": 27,
                  "options": {
                    "default": false
                  }
                },
                "optimizeFor": {
                  "type": "OptimizeMode",
                  "id": 9,
                  "options": {
                    "default": "SPEED"
                  }
                },
                "goPackage": {
                  "type": "string",
                  "id": 11
                },
                "ccGenericServices": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "javaGenericServices": {
                  "type": "bool",
                  "id": 17,
                  "options": {
                    "default": false
                  }
                },
                "pyGenericServices": {
                  "type": "bool",
                  "id": 18,
                  "options": {
                    "default": false
                  }
                },
                "phpGenericServices": {
                  "type": "bool",
                  "id": 42,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 23,
                  "options": {
                    "default": false
                  }
                },
                "ccEnableArenas": {
                  "type": "bool",
                  "id": 31,
                  "options": {
                    "default": true
                  }
                },
                "objcClassPrefix": {
                  "type": "string",
                  "id": 36
                },
                "csharpNamespace": {
                  "type": "string",
                  "id": 37
                },
                "swiftPrefix": {
                  "type": "string",
                  "id": 39
                },
                "phpClassPrefix": {
                  "type": "string",
                  "id": 40
                },
                "phpNamespace": {
                  "type": "string",
                  "id": 41
                },
                "phpMetadataNamespace": {
                  "type": "string",
                  "id": 44
                },
                "rubyPackage": {
                  "type": "string",
                  "id": 45
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  38,
                  38
                ]
              ],
              "nested": {
                "OptimizeMode": {
                  "values": {
                    "SPEED": 1,
                    "CODE_SIZE": 2,
                    "LITE_RUNTIME": 3
                  }
                }
              }
            },
            "MessageOptions": {
              "fields": {
                "messageSetWireFormat": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "noStandardDescriptorAccessor": {
                  "type": "bool",
                  "id": 2,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "mapEntry": {
                  "type": "bool",
                  "id": 7
                },
                "deprecatedLegacyJsonFieldConflicts": {
                  "type": "bool",
                  "id": 11,
                  "options": {
                    "deprecated": true
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ],
                [
                  5,
                  5
                ],
                [
                  6,
                  6
                ],
                [
                  8,
                  8
                ],
                [
                  9,
                  9
                ]
              ]
            },
            "FieldOptions": {
              "fields": {
                "ctype": {
                  "type": "CType",
                  "id": 1,
                  "options": {
                    "default": "STRING"
                  }
                },
                "packed": {
                  "type": "bool",
                  "id": 2
                },
                "jstype": {
                  "type": "JSType",
                  "id": 6,
                  "options": {
                    "default": "JS_NORMAL"
                  }
                },
                "lazy": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "unverifiedLazy": {
                  "type": "bool",
                  "id": 15,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "weak": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "debugRedact": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "retention": {
                  "type": "OptionRetention",
                  "id": 17
                },
                "target": {
                  "type": "OptionTargetType",
                  "id": 18
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ]
              ],
              "nested": {
                "CType": {
                  "values": {
                    "STRING": 0,
                    "CORD": 1,
                    "STRING_PIECE": 2
                  }
                },
                "JSType": {
                  "values": {
                    "JS_NORMAL": 0,
                    "JS_STRING": 1,
                    "JS_NUMBER": 2
                  }
                },
                "OptionRetention": {
                  "values": {
                    "RETENTION_UNKNOWN": 0,
                    "RETENTION_RUNTIME": 1,
                    "RETENTION_SOURCE": 2
                  }
                },
                "OptionTargetType": {
                  "values": {
                    "TARGET_TYPE_UNKNOWN": 0,
                    "TARGET_TYPE_FILE": 1,
                    "TARGET_TYPE_EXTENSION_RANGE": 2,
                    "TARGET_TYPE_MESSAGE": 3,
                    "TARGET_TYPE_FIELD": 4,
                    "TARGET_TYPE_ONEOF": 5,
                    "TARGET_TYPE_ENUM": 6,
                    "TARGET_TYPE_ENUM_ENTRY": 7,
                    "TARGET_TYPE_SERVICE": 8,
                    "TARGET_TYPE_METHOD": 9
                  }
                }
              }
            },
            "OneofOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumOptions": {
              "fields": {
                "allowAlias": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "deprecatedLegacyJsonFieldConflicts": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "deprecated": true
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  5,
                  5
                ]
              ]
            },
            "EnumValueOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "ServiceOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "MethodOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "idempotencyLevel": {
                  "type": "IdempotencyLevel",
                  "id": 34,
                  "options": {
                    "default": "IDEMPOTENCY_UNKNOWN"
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "nested": {
                "IdempotencyLevel": {
                  "values": {
                    "IDEMPOTENCY_UNKNOWN": 0,
                    "NO_SIDE_EFFECTS": 1,
                    "IDEMPOTENT": 2
                  }
                }
              }
            },
            "UninterpretedOption": {
              "fields": {
                "name": {
                  "rule": "repeated",
                  "type": "NamePart",
                  "id": 2
                },
                "identifierValue": {
                  "type": "string",
                  "id": 3
                },
                "positiveIntValue": {
                  "type": "uint64",
                  "id": 4
                },
                "negativeIntValue": {
                  "type": "int64",
                  "id": 5
                },
                "doubleValue": {
                  "type": "double",
                  "id": 6
                },
                "stringValue": {
                  "type": "bytes",
                  "id": 7
                },
                "aggregateValue": {
                  "type": "string",
                  "id": 8
                }
              },
              "nested": {
                "NamePart": {
                  "fields": {
                    "namePart": {
                      "rule": "required",
                      "type": "string",
                      "id": 1
                    },
                    "isExtension": {
                      "rule": "required",
                      "type": "bool",
                      "id": 2
                    }
                  }
                }
              }
            },
            "SourceCodeInfo": {
              "fields": {
                "location": {
                  "rule": "repeated",
                  "type": "Location",
                  "id": 1
                }
              },
              "nested": {
                "Location": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "span": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 2
                    },
                    "leadingComments": {
                      "type": "string",
                      "id": 3
                    },
                    "trailingComments": {
                      "type": "string",
                      "id": 4
                    },
                    "leadingDetachedComments": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 6
                    }
                  }
                }
              }
            },
            "GeneratedCodeInfo": {
              "fields": {
                "annotation": {
                  "rule": "repeated",
                  "type": "Annotation",
                  "id": 1
                }
              },
              "nested": {
                "Annotation": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "sourceFile": {
                      "type": "string",
                      "id": 2
                    },
                    "begin": {
                      "type": "int32",
                      "id": 3
                    },
                    "end": {
                      "type": "int32",
                      "id": 4
                    },
                    "semantic": {
                      "type": "Semantic",
                      "id": 5
                    }
                  },
                  "nested": {
                    "Semantic": {
                      "values": {
                        "NONE": 0,
                        "SET": 1,
                        "ALIAS": 2
                      }
                    }
                  }
                }
              }
            },
            "Duration": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Timestamp": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Any": {
              "fields": {
                "type_url": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "FieldMask": {
              "fields": {
                "paths": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 1
                }
              }
            },
            "Empty": {
              "fields": {}
            }
          }
        },
        "rpc": {
          "options": {
            "cc_enable_arenas": true,
            "go_package": "google.golang.org/genproto/googleapis/rpc/status;status",
            "java_multiple_files": true,
            "java_outer_classname": "StatusProto",
            "java_package": "com.google.rpc",
            "objc_class_prefix": "RPC"
          },
          "nested": {
            "Status": {
              "fields": {
                "code": {
                  "type": "int32",
                  "id": 1
                },
                "message": {
                  "type": "string",
                  "id": 2
                },
                "details": {
                  "rule": "repeated",
                  "type": "google.protobuf.Any",
                  "id": 3
                }
              }
            }
          }
        },
        "iam": {
          "nested": {
            "v1": {
              "options": {
                "cc_enable_arenas": true,
                "csharp_namespace": "Google.Cloud.Iam.V1",
                "go_package": "google.golang.org/genproto/googleapis/iam/v1;iam",
                "java_multiple_files": true,
                "java_outer_classname": "PolicyProto",
                "java_package": "com.google.iam.v1",
                "php_namespace": "Google\\Cloud\\Iam\\V1"
              },
              "nested": {
                "IAMPolicy": {
                  "options": {
                    "(google.api.default_host)": "iam-meta-api.googleapis.com"
                  },
                  "methods": {
                    "SetIamPolicy": {
                      "requestType": "SetIamPolicyRequest",
                      "responseType": "Policy",
                      "options": {
                        "(google.api.http).post": "/v1/{resource=**}:setIamPolicy",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{resource=**}:setIamPolicy",
                            "body": "*"
                          }
                        }
                      ]
                    },
                    "GetIamPolicy": {
                      "requestType": "GetIamPolicyRequest",
                      "responseType": "Policy",
                      "options": {
                        "(google.api.http).post": "/v1/{resource=**}:getIamPolicy",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{resource=**}:getIamPolicy",
                            "body": "*"
                          }
                        }
                      ]
                    },
                    "TestIamPermissions": {
                      "requestType": "TestIamPermissionsRequest",
                      "responseType": "TestIamPermissionsResponse",
                      "options": {
                        "(google.api.http).post": "/v1/{resource=**}:testIamPermissions",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{resource=**}:testIamPermissions",
                            "body": "*"
                          }
                        }
                      ]
                    }
                  }
                },
                "SetIamPolicyRequest": {
                  "fields": {
                    "resource": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "*"
                      }
                    },
                    "policy": {
                      "type": "Policy",
                      "id": 2,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "updateMask": {
                      "type": "google.protobuf.FieldMask",
                      "id": 3
                    }
                  }
                },
                "GetIamPolicyRequest": {
                  "fields": {
                    "resource": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "*"
                      }
                    },
                    "options": {
                      "type": "GetPolicyOptions",
                      "id": 2
                    }
                  }
                },
                "TestIamPermissionsRequest": {
                  "fields": {
                    "resource": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "*"
                      }
                    },
                    "permissions": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 2,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    }
                  }
                },
                "TestIamPermissionsResponse": {
                  "fields": {
                    "permissions": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 1
                    }
                  }
                },
                "GetPolicyOptions": {
                  "fields": {
                    "requestedPolicyVersion": {
                      "type": "int32",
                      "id": 1
                    }
                  }
                },
                "Policy": {
                  "fields": {
                    "version": {
                      "type": "int32",
                      "id": 1
                    },
                    "bindings": {
                      "rule": "repeated",
                      "type": "Binding",
                      "id": 4
                    },
                    "auditConfigs": {
                      "rule": "repeated",
                      "type": "AuditConfig",
                      "id": 6
                    },
                    "etag": {
                      "type": "bytes",
                      "id": 3
                    }
                  }
                },
                "Binding": {
                  "fields": {
                    "role": {
                      "type": "string",
                      "id": 1
                    },
                    "members": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 2
                    },
                    "condition": {
                      "type": "google.type.Expr",
                      "id": 3
                    }
                  }
                },
                "AuditConfig": {
                  "fields": {
                    "service": {
                      "type": "string",
                      "id": 1
                    },
                    "auditLogConfigs": {
                      "rule": "repeated",
                      "type": "AuditLogConfig",
                      "id": 3
                    }
                  }
                },
                "AuditLogConfig": {
                  "fields": {
                    "logType": {
                      "type": "LogType",
                      "id": 1
                    },
                    "exemptedMembers": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 2
                    }
                  },
                  "nested": {
                    "LogType": {
                      "values": {
                        "LOG_TYPE_UNSPECIFIED": 0,
                        "ADMIN_READ": 1,
                        "DATA_WRITE": 2,
                        "DATA_READ": 3
                      }
                    }
                  }
                },
                "PolicyDelta": {
                  "fields": {
                    "bindingDeltas": {
                      "rule": "repeated",
                      "type": "BindingDelta",
                      "id": 1
                    },
                    "auditConfigDeltas": {
                      "rule": "repeated",
                      "type": "AuditConfigDelta",
                      "id": 2
                    }
                  }
                },
                "BindingDelta": {
                  "fields": {
                    "action": {
                      "type": "Action",
                      "id": 1
                    },
                    "role": {
                      "type": "string",
                      "id": 2
                    },
                    "member": {
                      "type": "string",
                      "id": 3
                    },
                    "condition": {
                      "type": "google.type.Expr",
                      "id": 4
                    }
                  },
                  "nested": {
                    "Action": {
                      "values": {
                        "ACTION_UNSPECIFIED": 0,
                        "ADD": 1,
                        "REMOVE": 2
                      }
                    }
                  }
                },
                "AuditConfigDelta": {
                  "fields": {
                    "action": {
                      "type": "Action",
                      "id": 1
                    },
                    "service": {
                      "type": "string",
                      "id": 2
                    },
                    "exemptedMember": {
                      "type": "string",
                      "id": 3
                    },
                    "logType": {
                      "type": "string",
                      "id": 4
                    }
                  },
                  "nested": {
                    "Action": {
                      "values": {
                        "ACTION_UNSPECIFIED": 0,
                        "ADD": 1,
                        "REMOVE": 2
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "type": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/type/expr;expr",
            "java_multiple_files": true,
            "java_outer_classname": "ExprProto",
            "java_package": "com.google.type",
            "objc_class_prefix": "GTP"
          },
          "nested": {
            "Expr": {
              "fields": {
                "expression": {
                  "type": "string",
                  "id": 1
                },
                "title": {
                  "type": "string",
                  "id": 2
                },
                "description": {
                  "type": "string",
                  "id": 3
                },
                "location": {
                  "type": "string",
                  "id": 4
                }
              }
            }
          }
        }
      }
    }
  }
}