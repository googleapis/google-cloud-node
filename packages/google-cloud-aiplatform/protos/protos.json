{
  "nested": {
    "google": {
      "nested": {
        "cloud": {
          "nested": {
            "aiplatform": {
              "nested": {
                "v1": {
                  "options": {
                    "csharp_namespace": "Google.Cloud.AIPlatform.V1",
                    "go_package": "cloud.google.com/go/aiplatform/apiv1/aiplatformpb;aiplatformpb",
                    "java_multiple_files": true,
                    "java_outer_classname": "VizierServiceProto",
                    "java_package": "com.google.cloud.aiplatform.v1",
                    "php_namespace": "Google\\Cloud\\AIPlatform\\V1",
                    "ruby_package": "Google::Cloud::AIPlatform::V1",
                    "(google.api.resource_definition).type": "compute.googleapis.com/Network",
                    "(google.api.resource_definition).pattern": "projects/{project}/global/networks/{network}"
                  },
                  "nested": {
                    "AcceleratorType": {
                      "values": {
                        "ACCELERATOR_TYPE_UNSPECIFIED": 0,
                        "NVIDIA_TESLA_K80": 1,
                        "NVIDIA_TESLA_P100": 2,
                        "NVIDIA_TESLA_V100": 3,
                        "NVIDIA_TESLA_P4": 4,
                        "NVIDIA_TESLA_T4": 5,
                        "NVIDIA_TESLA_A100": 8,
                        "NVIDIA_A100_80GB": 9,
                        "NVIDIA_L4": 11,
                        "TPU_V2": 6,
                        "TPU_V3": 7,
                        "TPU_V4_POD": 10
                      }
                    },
                    "Annotation": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Annotation",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/datasets/{dataset}/dataItems/{data_item}/annotations/{annotation}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "payloadSchemaUri": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "payload": {
                          "type": "google.protobuf.Value",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "annotationSource": {
                          "type": "UserActionReference",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "UserActionReference": {
                      "oneofs": {
                        "reference": {
                          "oneof": [
                            "operation",
                            "dataLabelingJob"
                          ]
                        }
                      },
                      "fields": {
                        "operation": {
                          "type": "string",
                          "id": 1
                        },
                        "dataLabelingJob": {
                          "type": "string",
                          "id": 2
                        },
                        "method": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "AnnotationSpec": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/AnnotationSpec",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/datasets/{dataset}/annotationSpecs/{annotation_spec}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "Artifact": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Artifact",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2
                        },
                        "uri": {
                          "type": "string",
                          "id": 6
                        },
                        "etag": {
                          "type": "string",
                          "id": 9
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 10
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 13
                        },
                        "schemaTitle": {
                          "type": "string",
                          "id": 14
                        },
                        "schemaVersion": {
                          "type": "string",
                          "id": 15
                        },
                        "metadata": {
                          "type": "google.protobuf.Struct",
                          "id": 16
                        },
                        "description": {
                          "type": "string",
                          "id": 17
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "PENDING": 1,
                            "LIVE": 2
                          }
                        }
                      }
                    },
                    "BatchPredictionJob": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/BatchPredictionJob",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "model": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "modelVersionId": {
                          "type": "string",
                          "id": 30,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "unmanagedContainerModel": {
                          "type": "UnmanagedContainerModel",
                          "id": 28
                        },
                        "inputConfig": {
                          "type": "InputConfig",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "instanceConfig": {
                          "type": "InstanceConfig",
                          "id": 27
                        },
                        "modelParameters": {
                          "type": "google.protobuf.Value",
                          "id": 5
                        },
                        "outputConfig": {
                          "type": "OutputConfig",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "dedicatedResources": {
                          "type": "BatchDedicatedResources",
                          "id": 7
                        },
                        "serviceAccount": {
                          "type": "string",
                          "id": 29
                        },
                        "manualBatchTuningParameters": {
                          "type": "ManualBatchTuningParameters",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "generateExplanation": {
                          "type": "bool",
                          "id": 23
                        },
                        "explanationSpec": {
                          "type": "ExplanationSpec",
                          "id": 25
                        },
                        "outputInfo": {
                          "type": "OutputInfo",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "JobState",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "partialFailures": {
                          "rule": "repeated",
                          "type": "google.rpc.Status",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "resourcesConsumed": {
                          "type": "ResourcesConsumed",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "completionStats": {
                          "type": "CompletionStats",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 15,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 16,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 17,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 18,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 19
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 24
                        },
                        "disableContainerLogging": {
                          "type": "bool",
                          "id": 34
                        }
                      },
                      "nested": {
                        "InputConfig": {
                          "oneofs": {
                            "source": {
                              "oneof": [
                                "gcsSource",
                                "bigquerySource"
                              ]
                            }
                          },
                          "fields": {
                            "gcsSource": {
                              "type": "GcsSource",
                              "id": 2
                            },
                            "bigquerySource": {
                              "type": "BigQuerySource",
                              "id": 3
                            },
                            "instancesFormat": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "InstanceConfig": {
                          "fields": {
                            "instanceType": {
                              "type": "string",
                              "id": 1
                            },
                            "keyField": {
                              "type": "string",
                              "id": 2
                            },
                            "includedFields": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3
                            },
                            "excludedFields": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "OutputConfig": {
                          "oneofs": {
                            "destination": {
                              "oneof": [
                                "gcsDestination",
                                "bigqueryDestination"
                              ]
                            }
                          },
                          "fields": {
                            "gcsDestination": {
                              "type": "GcsDestination",
                              "id": 2
                            },
                            "bigqueryDestination": {
                              "type": "BigQueryDestination",
                              "id": 3
                            },
                            "predictionsFormat": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "OutputInfo": {
                          "oneofs": {
                            "outputLocation": {
                              "oneof": [
                                "gcsOutputDirectory",
                                "bigqueryOutputDataset"
                              ]
                            }
                          },
                          "fields": {
                            "gcsOutputDirectory": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "bigqueryOutputDataset": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "bigqueryOutputTable": {
                              "type": "string",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        }
                      }
                    },
                    "CompletionStats": {
                      "fields": {
                        "successfulCount": {
                          "type": "int64",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "failedCount": {
                          "type": "int64",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "incompleteCount": {
                          "type": "int64",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "successfulForecastPointCount": {
                          "type": "int64",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "EncryptionSpec": {
                      "fields": {
                        "kmsKeyName": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "Explanation": {
                      "fields": {
                        "attributions": {
                          "rule": "repeated",
                          "type": "Attribution",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "neighbors": {
                          "rule": "repeated",
                          "type": "Neighbor",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "ModelExplanation": {
                      "fields": {
                        "meanAttributions": {
                          "rule": "repeated",
                          "type": "Attribution",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "Attribution": {
                      "fields": {
                        "baselineOutputValue": {
                          "type": "double",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "instanceOutputValue": {
                          "type": "double",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "featureAttributions": {
                          "type": "google.protobuf.Value",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "outputIndex": {
                          "rule": "repeated",
                          "type": "int32",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "outputDisplayName": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "approximationError": {
                          "type": "double",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "outputName": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "Neighbor": {
                      "fields": {
                        "neighborId": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "neighborDistance": {
                          "type": "double",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "ExplanationSpec": {
                      "fields": {
                        "parameters": {
                          "type": "ExplanationParameters",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "metadata": {
                          "type": "ExplanationMetadata",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ExplanationParameters": {
                      "oneofs": {
                        "method": {
                          "oneof": [
                            "sampledShapleyAttribution",
                            "integratedGradientsAttribution",
                            "xraiAttribution",
                            "examples"
                          ]
                        }
                      },
                      "fields": {
                        "sampledShapleyAttribution": {
                          "type": "SampledShapleyAttribution",
                          "id": 1
                        },
                        "integratedGradientsAttribution": {
                          "type": "IntegratedGradientsAttribution",
                          "id": 2
                        },
                        "xraiAttribution": {
                          "type": "XraiAttribution",
                          "id": 3
                        },
                        "examples": {
                          "type": "Examples",
                          "id": 7
                        },
                        "topK": {
                          "type": "int32",
                          "id": 4
                        },
                        "outputIndices": {
                          "type": "google.protobuf.ListValue",
                          "id": 5
                        }
                      }
                    },
                    "SampledShapleyAttribution": {
                      "fields": {
                        "pathCount": {
                          "type": "int32",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "IntegratedGradientsAttribution": {
                      "fields": {
                        "stepCount": {
                          "type": "int32",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "smoothGradConfig": {
                          "type": "SmoothGradConfig",
                          "id": 2
                        },
                        "blurBaselineConfig": {
                          "type": "BlurBaselineConfig",
                          "id": 3
                        }
                      }
                    },
                    "XraiAttribution": {
                      "fields": {
                        "stepCount": {
                          "type": "int32",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "smoothGradConfig": {
                          "type": "SmoothGradConfig",
                          "id": 2
                        },
                        "blurBaselineConfig": {
                          "type": "BlurBaselineConfig",
                          "id": 3
                        }
                      }
                    },
                    "SmoothGradConfig": {
                      "oneofs": {
                        "GradientNoiseSigma": {
                          "oneof": [
                            "noiseSigma",
                            "featureNoiseSigma"
                          ]
                        }
                      },
                      "fields": {
                        "noiseSigma": {
                          "type": "float",
                          "id": 1
                        },
                        "featureNoiseSigma": {
                          "type": "FeatureNoiseSigma",
                          "id": 2
                        },
                        "noisySampleCount": {
                          "type": "int32",
                          "id": 3
                        }
                      }
                    },
                    "FeatureNoiseSigma": {
                      "fields": {
                        "noiseSigma": {
                          "rule": "repeated",
                          "type": "NoiseSigmaForFeature",
                          "id": 1
                        }
                      },
                      "nested": {
                        "NoiseSigmaForFeature": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "sigma": {
                              "type": "float",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "BlurBaselineConfig": {
                      "fields": {
                        "maxBlurSigma": {
                          "type": "float",
                          "id": 1
                        }
                      }
                    },
                    "Examples": {
                      "oneofs": {
                        "source": {
                          "oneof": [
                            "exampleGcsSource"
                          ]
                        },
                        "config": {
                          "oneof": [
                            "nearestNeighborSearchConfig",
                            "presets"
                          ]
                        }
                      },
                      "fields": {
                        "exampleGcsSource": {
                          "type": "ExampleGcsSource",
                          "id": 5
                        },
                        "nearestNeighborSearchConfig": {
                          "type": "google.protobuf.Value",
                          "id": 2
                        },
                        "presets": {
                          "type": "Presets",
                          "id": 4
                        },
                        "neighborCount": {
                          "type": "int32",
                          "id": 3
                        }
                      },
                      "nested": {
                        "ExampleGcsSource": {
                          "fields": {
                            "dataFormat": {
                              "type": "DataFormat",
                              "id": 1
                            },
                            "gcsSource": {
                              "type": "GcsSource",
                              "id": 2
                            }
                          },
                          "nested": {
                            "DataFormat": {
                              "values": {
                                "DATA_FORMAT_UNSPECIFIED": 0,
                                "JSONL": 1
                              }
                            }
                          }
                        }
                      }
                    },
                    "Presets": {
                      "oneofs": {
                        "_query": {
                          "oneof": [
                            "query"
                          ]
                        }
                      },
                      "fields": {
                        "query": {
                          "type": "Query",
                          "id": 1,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "modality": {
                          "type": "Modality",
                          "id": 2
                        }
                      },
                      "nested": {
                        "Query": {
                          "values": {
                            "PRECISE": 0,
                            "FAST": 1
                          }
                        },
                        "Modality": {
                          "values": {
                            "MODALITY_UNSPECIFIED": 0,
                            "IMAGE": 1,
                            "TEXT": 2,
                            "TABULAR": 3
                          }
                        }
                      }
                    },
                    "ExplanationSpecOverride": {
                      "fields": {
                        "parameters": {
                          "type": "ExplanationParameters",
                          "id": 1
                        },
                        "metadata": {
                          "type": "ExplanationMetadataOverride",
                          "id": 2
                        },
                        "examplesOverride": {
                          "type": "ExamplesOverride",
                          "id": 3
                        }
                      }
                    },
                    "ExplanationMetadataOverride": {
                      "fields": {
                        "inputs": {
                          "keyType": "string",
                          "type": "InputMetadataOverride",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      },
                      "nested": {
                        "InputMetadataOverride": {
                          "fields": {
                            "inputBaselines": {
                              "rule": "repeated",
                              "type": "google.protobuf.Value",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "ExamplesOverride": {
                      "fields": {
                        "neighborCount": {
                          "type": "int32",
                          "id": 1
                        },
                        "crowdingCount": {
                          "type": "int32",
                          "id": 2
                        },
                        "restrictions": {
                          "rule": "repeated",
                          "type": "ExamplesRestrictionsNamespace",
                          "id": 3
                        },
                        "returnEmbeddings": {
                          "type": "bool",
                          "id": 4
                        },
                        "dataFormat": {
                          "type": "DataFormat",
                          "id": 5
                        }
                      },
                      "nested": {
                        "DataFormat": {
                          "values": {
                            "DATA_FORMAT_UNSPECIFIED": 0,
                            "INSTANCES": 1,
                            "EMBEDDINGS": 2
                          }
                        }
                      }
                    },
                    "ExamplesRestrictionsNamespace": {
                      "fields": {
                        "namespaceName": {
                          "type": "string",
                          "id": 1
                        },
                        "allow": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2
                        },
                        "deny": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ExplanationMetadata": {
                      "fields": {
                        "inputs": {
                          "keyType": "string",
                          "type": "InputMetadata",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "outputs": {
                          "keyType": "string",
                          "type": "OutputMetadata",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "featureAttributionsSchemaUri": {
                          "type": "string",
                          "id": 3
                        },
                        "latentSpaceSource": {
                          "type": "string",
                          "id": 5
                        }
                      },
                      "nested": {
                        "InputMetadata": {
                          "fields": {
                            "inputBaselines": {
                              "rule": "repeated",
                              "type": "google.protobuf.Value",
                              "id": 1
                            },
                            "inputTensorName": {
                              "type": "string",
                              "id": 2
                            },
                            "encoding": {
                              "type": "Encoding",
                              "id": 3
                            },
                            "modality": {
                              "type": "string",
                              "id": 4
                            },
                            "featureValueDomain": {
                              "type": "FeatureValueDomain",
                              "id": 5
                            },
                            "indicesTensorName": {
                              "type": "string",
                              "id": 6
                            },
                            "denseShapeTensorName": {
                              "type": "string",
                              "id": 7
                            },
                            "indexFeatureMapping": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 8
                            },
                            "encodedTensorName": {
                              "type": "string",
                              "id": 9
                            },
                            "encodedBaselines": {
                              "rule": "repeated",
                              "type": "google.protobuf.Value",
                              "id": 10
                            },
                            "visualization": {
                              "type": "Visualization",
                              "id": 11
                            },
                            "groupName": {
                              "type": "string",
                              "id": 12
                            }
                          },
                          "nested": {
                            "FeatureValueDomain": {
                              "fields": {
                                "minValue": {
                                  "type": "float",
                                  "id": 1
                                },
                                "maxValue": {
                                  "type": "float",
                                  "id": 2
                                },
                                "originalMean": {
                                  "type": "float",
                                  "id": 3
                                },
                                "originalStddev": {
                                  "type": "float",
                                  "id": 4
                                }
                              }
                            },
                            "Visualization": {
                              "fields": {
                                "type": {
                                  "type": "Type",
                                  "id": 1
                                },
                                "polarity": {
                                  "type": "Polarity",
                                  "id": 2
                                },
                                "colorMap": {
                                  "type": "ColorMap",
                                  "id": 3
                                },
                                "clipPercentUpperbound": {
                                  "type": "float",
                                  "id": 4
                                },
                                "clipPercentLowerbound": {
                                  "type": "float",
                                  "id": 5
                                },
                                "overlayType": {
                                  "type": "OverlayType",
                                  "id": 6
                                }
                              },
                              "nested": {
                                "Type": {
                                  "values": {
                                    "TYPE_UNSPECIFIED": 0,
                                    "PIXELS": 1,
                                    "OUTLINES": 2
                                  }
                                },
                                "Polarity": {
                                  "values": {
                                    "POLARITY_UNSPECIFIED": 0,
                                    "POSITIVE": 1,
                                    "NEGATIVE": 2,
                                    "BOTH": 3
                                  }
                                },
                                "ColorMap": {
                                  "values": {
                                    "COLOR_MAP_UNSPECIFIED": 0,
                                    "PINK_GREEN": 1,
                                    "VIRIDIS": 2,
                                    "RED": 3,
                                    "GREEN": 4,
                                    "RED_GREEN": 6,
                                    "PINK_WHITE_GREEN": 5
                                  }
                                },
                                "OverlayType": {
                                  "values": {
                                    "OVERLAY_TYPE_UNSPECIFIED": 0,
                                    "NONE": 1,
                                    "ORIGINAL": 2,
                                    "GRAYSCALE": 3,
                                    "MASK_BLACK": 4
                                  }
                                }
                              }
                            },
                            "Encoding": {
                              "values": {
                                "ENCODING_UNSPECIFIED": 0,
                                "IDENTITY": 1,
                                "BAG_OF_FEATURES": 2,
                                "BAG_OF_FEATURES_SPARSE": 3,
                                "INDICATOR": 4,
                                "COMBINED_EMBEDDING": 5,
                                "CONCAT_EMBEDDING": 6
                              }
                            }
                          }
                        },
                        "OutputMetadata": {
                          "oneofs": {
                            "displayNameMapping": {
                              "oneof": [
                                "indexDisplayNameMapping",
                                "displayNameMappingKey"
                              ]
                            }
                          },
                          "fields": {
                            "indexDisplayNameMapping": {
                              "type": "google.protobuf.Value",
                              "id": 1
                            },
                            "displayNameMappingKey": {
                              "type": "string",
                              "id": 2
                            },
                            "outputTensorName": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        }
                      }
                    },
                    "AvroSource": {
                      "fields": {
                        "gcsSource": {
                          "type": "GcsSource",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CsvSource": {
                      "fields": {
                        "gcsSource": {
                          "type": "GcsSource",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GcsSource": {
                      "fields": {
                        "uris": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GcsDestination": {
                      "fields": {
                        "outputUriPrefix": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "BigQuerySource": {
                      "fields": {
                        "inputUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "BigQueryDestination": {
                      "fields": {
                        "outputUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CsvDestination": {
                      "fields": {
                        "gcsDestination": {
                          "type": "GcsDestination",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "TFRecordDestination": {
                      "fields": {
                        "gcsDestination": {
                          "type": "GcsDestination",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ContainerRegistryDestination": {
                      "fields": {
                        "outputUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "JobState": {
                      "values": {
                        "JOB_STATE_UNSPECIFIED": 0,
                        "JOB_STATE_QUEUED": 1,
                        "JOB_STATE_PENDING": 2,
                        "JOB_STATE_RUNNING": 3,
                        "JOB_STATE_SUCCEEDED": 4,
                        "JOB_STATE_FAILED": 5,
                        "JOB_STATE_CANCELLING": 6,
                        "JOB_STATE_CANCELLED": 7,
                        "JOB_STATE_PAUSED": 8,
                        "JOB_STATE_EXPIRED": 9,
                        "JOB_STATE_UPDATING": 10,
                        "JOB_STATE_PARTIALLY_SUCCEEDED": 11
                      }
                    },
                    "MachineSpec": {
                      "fields": {
                        "machineType": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "acceleratorType": {
                          "type": "AcceleratorType",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "acceleratorCount": {
                          "type": "int32",
                          "id": 3
                        },
                        "tpuTopology": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "DedicatedResources": {
                      "fields": {
                        "machineSpec": {
                          "type": "MachineSpec",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "minReplicaCount": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "maxReplicaCount": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "autoscalingMetricSpecs": {
                          "rule": "repeated",
                          "type": "AutoscalingMetricSpec",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "AutomaticResources": {
                      "fields": {
                        "minReplicaCount": {
                          "type": "int32",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "maxReplicaCount": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "BatchDedicatedResources": {
                      "fields": {
                        "machineSpec": {
                          "type": "MachineSpec",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "startingReplicaCount": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "maxReplicaCount": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "ResourcesConsumed": {
                      "fields": {
                        "replicaHours": {
                          "type": "double",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "DiskSpec": {
                      "fields": {
                        "bootDiskType": {
                          "type": "string",
                          "id": 1
                        },
                        "bootDiskSizeGb": {
                          "type": "int32",
                          "id": 2
                        }
                      }
                    },
                    "PersistentDiskSpec": {
                      "fields": {
                        "diskType": {
                          "type": "string",
                          "id": 1
                        },
                        "diskSizeGb": {
                          "type": "int64",
                          "id": 2
                        }
                      }
                    },
                    "NfsMount": {
                      "fields": {
                        "server": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "path": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "mountPoint": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "AutoscalingMetricSpec": {
                      "fields": {
                        "metricName": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "target": {
                          "type": "int32",
                          "id": 2
                        }
                      }
                    },
                    "ManualBatchTuningParameters": {
                      "fields": {
                        "batchSize": {
                          "type": "int32",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "UnmanagedContainerModel": {
                      "fields": {
                        "artifactUri": {
                          "type": "string",
                          "id": 1
                        },
                        "predictSchemata": {
                          "type": "PredictSchemata",
                          "id": 2
                        },
                        "containerSpec": {
                          "type": "ModelContainerSpec",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "INPUT_ONLY"
                          }
                        }
                      }
                    },
                    "Model": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Model",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/models/{model}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "versionId": {
                          "type": "string",
                          "id": 28,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "versionAliases": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 29
                        },
                        "versionCreateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 31,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "versionUpdateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 32,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "versionDescription": {
                          "type": "string",
                          "id": 30
                        },
                        "predictSchemata": {
                          "type": "PredictSchemata",
                          "id": 4
                        },
                        "metadataSchemaUri": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "metadata": {
                          "type": "google.protobuf.Value",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "supportedExportFormats": {
                          "rule": "repeated",
                          "type": "ExportFormat",
                          "id": 20,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "trainingPipeline": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TrainingPipeline"
                          }
                        },
                        "pipelineJob": {
                          "type": "string",
                          "id": 47,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/PipelineJob"
                          }
                        },
                        "containerSpec": {
                          "type": "ModelContainerSpec",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "INPUT_ONLY"
                          }
                        },
                        "artifactUri": {
                          "type": "string",
                          "id": 26,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "supportedDeploymentResourcesTypes": {
                          "rule": "repeated",
                          "type": "DeploymentResourcesType",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "supportedInputStorageFormats": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "supportedOutputStorageFormats": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "deployedModels": {
                          "rule": "repeated",
                          "type": "DeployedModelRef",
                          "id": 15,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "explanationSpec": {
                          "type": "ExplanationSpec",
                          "id": 23
                        },
                        "etag": {
                          "type": "string",
                          "id": 16
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 17
                        },
                        "dataStats": {
                          "type": "DataStats",
                          "id": 21
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 24
                        },
                        "modelSourceInfo": {
                          "type": "ModelSourceInfo",
                          "id": 38,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "originalModelInfo": {
                          "type": "OriginalModelInfo",
                          "id": 34,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "metadataArtifact": {
                          "type": "string",
                          "id": 44,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "ExportFormat": {
                          "fields": {
                            "id": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "exportableContents": {
                              "rule": "repeated",
                              "type": "ExportableContent",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          },
                          "nested": {
                            "ExportableContent": {
                              "values": {
                                "EXPORTABLE_CONTENT_UNSPECIFIED": 0,
                                "ARTIFACT": 1,
                                "IMAGE": 2
                              }
                            }
                          }
                        },
                        "DataStats": {
                          "fields": {
                            "trainingDataItemsCount": {
                              "type": "int64",
                              "id": 1
                            },
                            "validationDataItemsCount": {
                              "type": "int64",
                              "id": 2
                            },
                            "testDataItemsCount": {
                              "type": "int64",
                              "id": 3
                            },
                            "trainingAnnotationsCount": {
                              "type": "int64",
                              "id": 4
                            },
                            "validationAnnotationsCount": {
                              "type": "int64",
                              "id": 5
                            },
                            "testAnnotationsCount": {
                              "type": "int64",
                              "id": 6
                            }
                          }
                        },
                        "OriginalModelInfo": {
                          "fields": {
                            "model": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY",
                                "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                              }
                            }
                          }
                        },
                        "DeploymentResourcesType": {
                          "values": {
                            "DEPLOYMENT_RESOURCES_TYPE_UNSPECIFIED": 0,
                            "DEDICATED_RESOURCES": 1,
                            "AUTOMATIC_RESOURCES": 2,
                            "SHARED_RESOURCES": 3
                          }
                        }
                      }
                    },
                    "LargeModelReference": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "PredictSchemata": {
                      "fields": {
                        "instanceSchemaUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "parametersSchemaUri": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "predictionSchemaUri": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "ModelContainerSpec": {
                      "fields": {
                        "imageUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "command": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "args": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "env": {
                          "rule": "repeated",
                          "type": "EnvVar",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "ports": {
                          "rule": "repeated",
                          "type": "Port",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "predictRoute": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "healthRoute": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "grpcPorts": {
                          "rule": "repeated",
                          "type": "Port",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "deploymentTimeout": {
                          "type": "google.protobuf.Duration",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "sharedMemorySizeMb": {
                          "type": "int64",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "startupProbe": {
                          "type": "Probe",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "healthProbe": {
                          "type": "Probe",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "Port": {
                      "fields": {
                        "containerPort": {
                          "type": "int32",
                          "id": 3
                        }
                      }
                    },
                    "ModelSourceInfo": {
                      "fields": {
                        "sourceType": {
                          "type": "ModelSourceType",
                          "id": 1
                        },
                        "copy": {
                          "type": "bool",
                          "id": 2
                        }
                      },
                      "nested": {
                        "ModelSourceType": {
                          "values": {
                            "MODEL_SOURCE_TYPE_UNSPECIFIED": 0,
                            "AUTOML": 1,
                            "CUSTOM": 2,
                            "BQML": 3,
                            "MODEL_GARDEN": 4,
                            "GENIE": 5,
                            "CUSTOM_TEXT_EMBEDDING": 6,
                            "MARKETPLACE": 7
                          }
                        }
                      }
                    },
                    "Probe": {
                      "oneofs": {
                        "probeType": {
                          "oneof": [
                            "exec"
                          ]
                        }
                      },
                      "fields": {
                        "exec": {
                          "type": "ExecAction",
                          "id": 1
                        },
                        "periodSeconds": {
                          "type": "int32",
                          "id": 2
                        },
                        "timeoutSeconds": {
                          "type": "int32",
                          "id": 3
                        }
                      },
                      "nested": {
                        "ExecAction": {
                          "fields": {
                            "command": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "DeployedModelRef": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "deployedModelId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "EnvVar": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "value": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "HarmCategory": {
                      "values": {
                        "HARM_CATEGORY_UNSPECIFIED": 0,
                        "HARM_CATEGORY_HATE_SPEECH": 1,
                        "HARM_CATEGORY_DANGEROUS_CONTENT": 2,
                        "HARM_CATEGORY_HARASSMENT": 3,
                        "HARM_CATEGORY_SEXUALLY_EXPLICIT": 4
                      }
                    },
                    "Content": {
                      "fields": {
                        "role": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "parts": {
                          "rule": "repeated",
                          "type": "Part",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "Part": {
                      "oneofs": {
                        "data": {
                          "oneof": [
                            "text",
                            "inlineData",
                            "fileData",
                            "functionCall",
                            "functionResponse"
                          ]
                        },
                        "metadata": {
                          "oneof": [
                            "videoMetadata"
                          ]
                        }
                      },
                      "fields": {
                        "text": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "inlineData": {
                          "type": "Blob",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "fileData": {
                          "type": "FileData",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "functionCall": {
                          "type": "FunctionCall",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "functionResponse": {
                          "type": "FunctionResponse",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "videoMetadata": {
                          "type": "VideoMetadata",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "Blob": {
                      "fields": {
                        "mimeType": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "data": {
                          "type": "bytes",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "FileData": {
                      "fields": {
                        "mimeType": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "fileUri": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "VideoMetadata": {
                      "fields": {
                        "startOffset": {
                          "type": "google.protobuf.Duration",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "endOffset": {
                          "type": "google.protobuf.Duration",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "GenerationConfig": {
                      "oneofs": {
                        "_temperature": {
                          "oneof": [
                            "temperature"
                          ]
                        },
                        "_topP": {
                          "oneof": [
                            "topP"
                          ]
                        },
                        "_topK": {
                          "oneof": [
                            "topK"
                          ]
                        },
                        "_candidateCount": {
                          "oneof": [
                            "candidateCount"
                          ]
                        },
                        "_maxOutputTokens": {
                          "oneof": [
                            "maxOutputTokens"
                          ]
                        }
                      },
                      "fields": {
                        "temperature": {
                          "type": "float",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "proto3_optional": true
                          }
                        },
                        "topP": {
                          "type": "float",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "proto3_optional": true
                          }
                        },
                        "topK": {
                          "type": "float",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "proto3_optional": true
                          }
                        },
                        "candidateCount": {
                          "type": "int32",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "proto3_optional": true
                          }
                        },
                        "maxOutputTokens": {
                          "type": "int32",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "proto3_optional": true
                          }
                        },
                        "stopSequences": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "SafetySetting": {
                      "fields": {
                        "category": {
                          "type": "HarmCategory",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "threshold": {
                          "type": "HarmBlockThreshold",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      },
                      "nested": {
                        "HarmBlockThreshold": {
                          "values": {
                            "HARM_BLOCK_THRESHOLD_UNSPECIFIED": 0,
                            "BLOCK_LOW_AND_ABOVE": 1,
                            "BLOCK_MEDIUM_AND_ABOVE": 2,
                            "BLOCK_ONLY_HIGH": 3,
                            "BLOCK_NONE": 4
                          }
                        }
                      }
                    },
                    "SafetyRating": {
                      "fields": {
                        "category": {
                          "type": "HarmCategory",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "probability": {
                          "type": "HarmProbability",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "blocked": {
                          "type": "bool",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "HarmProbability": {
                          "values": {
                            "HARM_PROBABILITY_UNSPECIFIED": 0,
                            "NEGLIGIBLE": 1,
                            "LOW": 2,
                            "MEDIUM": 3,
                            "HIGH": 4
                          }
                        }
                      }
                    },
                    "CitationMetadata": {
                      "fields": {
                        "citations": {
                          "rule": "repeated",
                          "type": "Citation",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "Citation": {
                      "fields": {
                        "startIndex": {
                          "type": "int32",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endIndex": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "uri": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "title": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "license": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "publicationDate": {
                          "type": "google.type.Date",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "Candidate": {
                      "oneofs": {
                        "_finishMessage": {
                          "oneof": [
                            "finishMessage"
                          ]
                        }
                      },
                      "fields": {
                        "index": {
                          "type": "int32",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "content": {
                          "type": "Content",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "finishReason": {
                          "type": "FinishReason",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "safetyRatings": {
                          "rule": "repeated",
                          "type": "SafetyRating",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "finishMessage": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "proto3_optional": true
                          }
                        },
                        "citationMetadata": {
                          "type": "CitationMetadata",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "FinishReason": {
                          "values": {
                            "FINISH_REASON_UNSPECIFIED": 0,
                            "STOP": 1,
                            "MAX_TOKENS": 2,
                            "SAFETY": 3,
                            "RECITATION": 4,
                            "OTHER": 5
                          }
                        }
                      }
                    },
                    "Tool": {
                      "fields": {
                        "functionDeclarations": {
                          "rule": "repeated",
                          "type": "FunctionDeclaration",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "FunctionDeclaration": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "parameters": {
                          "type": "Schema",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "FunctionCall": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "args": {
                          "type": "google.protobuf.Struct",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "FunctionResponse": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "response": {
                          "type": "google.protobuf.Struct",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "Type": {
                      "values": {
                        "TYPE_UNSPECIFIED": 0,
                        "STRING": 1,
                        "NUMBER": 2,
                        "INTEGER": 3,
                        "BOOLEAN": 4,
                        "ARRAY": 5,
                        "OBJECT": 6
                      }
                    },
                    "Schema": {
                      "fields": {
                        "type": {
                          "type": "Type",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "format": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "nullable": {
                          "type": "bool",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "items": {
                          "type": "Schema",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "enum": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "properties": {
                          "keyType": "string",
                          "type": "Schema",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "required": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "example": {
                          "type": "google.protobuf.Value",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "Context": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Context",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/metadataStores/{metadata_store}/contexts/{context}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2
                        },
                        "etag": {
                          "type": "string",
                          "id": 8
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 9
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "parentContexts": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Context"
                          }
                        },
                        "schemaTitle": {
                          "type": "string",
                          "id": 13
                        },
                        "schemaVersion": {
                          "type": "string",
                          "id": 14
                        },
                        "metadata": {
                          "type": "google.protobuf.Struct",
                          "id": 15
                        },
                        "description": {
                          "type": "string",
                          "id": 16
                        }
                      }
                    },
                    "CustomJob": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/CustomJob",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/customJobs/{custom_job}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "jobSpec": {
                          "type": "CustomJobSpec",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "state": {
                          "type": "JobState",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 11
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 12
                        },
                        "webAccessUris": {
                          "keyType": "string",
                          "type": "string",
                          "id": 16,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "CustomJobSpec": {
                      "fields": {
                        "workerPoolSpecs": {
                          "rule": "repeated",
                          "type": "WorkerPoolSpec",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "scheduling": {
                          "type": "Scheduling",
                          "id": 3
                        },
                        "serviceAccount": {
                          "type": "string",
                          "id": 4
                        },
                        "network": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "compute.googleapis.com/Network"
                          }
                        },
                        "reservedIpRanges": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "baseOutputDirectory": {
                          "type": "GcsDestination",
                          "id": 6
                        },
                        "protectedArtifactLocationId": {
                          "type": "string",
                          "id": 19
                        },
                        "tensorboard": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Tensorboard"
                          }
                        },
                        "enableWebAccess": {
                          "type": "bool",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "enableDashboardAccess": {
                          "type": "bool",
                          "id": 16,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "experiment": {
                          "type": "string",
                          "id": 17,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Context"
                          }
                        },
                        "experimentRun": {
                          "type": "string",
                          "id": 18,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Context"
                          }
                        },
                        "models": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 20,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        }
                      }
                    },
                    "WorkerPoolSpec": {
                      "oneofs": {
                        "task": {
                          "oneof": [
                            "containerSpec",
                            "pythonPackageSpec"
                          ]
                        }
                      },
                      "fields": {
                        "containerSpec": {
                          "type": "ContainerSpec",
                          "id": 6
                        },
                        "pythonPackageSpec": {
                          "type": "PythonPackageSpec",
                          "id": 7
                        },
                        "machineSpec": {
                          "type": "MachineSpec",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "replicaCount": {
                          "type": "int64",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "nfsMounts": {
                          "rule": "repeated",
                          "type": "NfsMount",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "diskSpec": {
                          "type": "DiskSpec",
                          "id": 5
                        }
                      }
                    },
                    "ContainerSpec": {
                      "fields": {
                        "imageUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "command": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2
                        },
                        "args": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        },
                        "env": {
                          "rule": "repeated",
                          "type": "EnvVar",
                          "id": 4
                        }
                      }
                    },
                    "PythonPackageSpec": {
                      "fields": {
                        "executorImageUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "packageUris": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "pythonModule": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "args": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 4
                        },
                        "env": {
                          "rule": "repeated",
                          "type": "EnvVar",
                          "id": 5
                        }
                      }
                    },
                    "Scheduling": {
                      "fields": {
                        "timeout": {
                          "type": "google.protobuf.Duration",
                          "id": 1
                        },
                        "restartJobOnWorkerRestart": {
                          "type": "bool",
                          "id": 3
                        },
                        "disableRetries": {
                          "type": "bool",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DataItem": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/DataItem",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/datasets/{dataset}/dataItems/{data_item}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "payload": {
                          "type": "google.protobuf.Value",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DataLabelingJob": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/DataLabelingJob",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "datasets": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "annotationLabels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 12
                        },
                        "labelerCount": {
                          "type": "int32",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "instructionUri": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "inputsSchemaUri": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "inputs": {
                          "type": "google.protobuf.Value",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "state": {
                          "type": "JobState",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labelingProgress": {
                          "type": "int32",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "currentSpend": {
                          "type": "google.type.Money",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 22,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 11
                        },
                        "specialistPools": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 16
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 20
                        },
                        "activeLearningConfig": {
                          "type": "ActiveLearningConfig",
                          "id": 21
                        }
                      }
                    },
                    "ActiveLearningConfig": {
                      "oneofs": {
                        "humanLabelingBudget": {
                          "oneof": [
                            "maxDataItemCount",
                            "maxDataItemPercentage"
                          ]
                        }
                      },
                      "fields": {
                        "maxDataItemCount": {
                          "type": "int64",
                          "id": 1
                        },
                        "maxDataItemPercentage": {
                          "type": "int32",
                          "id": 2
                        },
                        "sampleConfig": {
                          "type": "SampleConfig",
                          "id": 3
                        },
                        "trainingConfig": {
                          "type": "TrainingConfig",
                          "id": 4
                        }
                      }
                    },
                    "SampleConfig": {
                      "oneofs": {
                        "initialBatchSampleSize": {
                          "oneof": [
                            "initialBatchSamplePercentage"
                          ]
                        },
                        "followingBatchSampleSize": {
                          "oneof": [
                            "followingBatchSamplePercentage"
                          ]
                        }
                      },
                      "fields": {
                        "initialBatchSamplePercentage": {
                          "type": "int32",
                          "id": 1
                        },
                        "followingBatchSamplePercentage": {
                          "type": "int32",
                          "id": 3
                        },
                        "sampleStrategy": {
                          "type": "SampleStrategy",
                          "id": 5
                        }
                      },
                      "nested": {
                        "SampleStrategy": {
                          "values": {
                            "SAMPLE_STRATEGY_UNSPECIFIED": 0,
                            "UNCERTAINTY": 1
                          }
                        }
                      }
                    },
                    "TrainingConfig": {
                      "fields": {
                        "timeoutTrainingMilliHours": {
                          "type": "int64",
                          "id": 1
                        }
                      }
                    },
                    "Dataset": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Dataset",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/datasets/{dataset}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 16
                        },
                        "metadataSchemaUri": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "metadata": {
                          "type": "google.protobuf.Value",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "dataItemCount": {
                          "type": "int64",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 6
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 7
                        },
                        "savedQueries": {
                          "rule": "repeated",
                          "type": "SavedQuery",
                          "id": 9
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 11
                        },
                        "metadataArtifact": {
                          "type": "string",
                          "id": 17,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "ImportDataConfig": {
                      "oneofs": {
                        "source": {
                          "oneof": [
                            "gcsSource"
                          ]
                        }
                      },
                      "fields": {
                        "gcsSource": {
                          "type": "GcsSource",
                          "id": 1
                        },
                        "dataItemLabels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 2
                        },
                        "annotationLabels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 3
                        },
                        "importSchemaUri": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ExportDataConfig": {
                      "oneofs": {
                        "destination": {
                          "oneof": [
                            "gcsDestination"
                          ]
                        },
                        "split": {
                          "oneof": [
                            "fractionSplit",
                            "filterSplit"
                          ]
                        }
                      },
                      "fields": {
                        "gcsDestination": {
                          "type": "GcsDestination",
                          "id": 1
                        },
                        "fractionSplit": {
                          "type": "ExportFractionSplit",
                          "id": 5
                        },
                        "filterSplit": {
                          "type": "ExportFilterSplit",
                          "id": 7
                        },
                        "annotationsFilter": {
                          "type": "string",
                          "id": 2
                        },
                        "savedQueryId": {
                          "type": "string",
                          "id": 11
                        },
                        "annotationSchemaUri": {
                          "type": "string",
                          "id": 12
                        },
                        "exportUse": {
                          "type": "ExportUse",
                          "id": 4
                        }
                      },
                      "nested": {
                        "ExportUse": {
                          "values": {
                            "EXPORT_USE_UNSPECIFIED": 0,
                            "CUSTOM_CODE_TRAINING": 6
                          }
                        }
                      }
                    },
                    "ExportFractionSplit": {
                      "fields": {
                        "trainingFraction": {
                          "type": "double",
                          "id": 1
                        },
                        "validationFraction": {
                          "type": "double",
                          "id": 2
                        },
                        "testFraction": {
                          "type": "double",
                          "id": 3
                        }
                      }
                    },
                    "ExportFilterSplit": {
                      "fields": {
                        "trainingFilter": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "validationFilter": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "testFilter": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "SavedQuery": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/SavedQuery",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/datasets/{dataset}/savedQueries/{saved_query}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "metadata": {
                          "type": "google.protobuf.Value",
                          "id": 12
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "annotationFilter": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "problemType": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "annotationSpecCount": {
                          "type": "int32",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 8
                        },
                        "supportAutomlTraining": {
                          "type": "bool",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "DatasetService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateDataset": {
                          "requestType": "CreateDatasetRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/datasets",
                            "(google.api.http).body": "dataset",
                            "(google.api.method_signature)": "parent,dataset",
                            "(google.longrunning.operation_info).response_type": "Dataset",
                            "(google.longrunning.operation_info).metadata_type": "CreateDatasetOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/datasets",
                                "body": "dataset"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,dataset"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Dataset",
                                "metadata_type": "CreateDatasetOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetDataset": {
                          "requestType": "GetDatasetRequest",
                          "responseType": "Dataset",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/datasets/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/datasets/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "UpdateDataset": {
                          "requestType": "UpdateDatasetRequest",
                          "responseType": "Dataset",
                          "options": {
                            "(google.api.http).patch": "/v1/{dataset.name=projects/*/locations/*/datasets/*}",
                            "(google.api.http).body": "dataset",
                            "(google.api.method_signature)": "dataset,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{dataset.name=projects/*/locations/*/datasets/*}",
                                "body": "dataset"
                              }
                            },
                            {
                              "(google.api.method_signature)": "dataset,update_mask"
                            }
                          ]
                        },
                        "ListDatasets": {
                          "requestType": "ListDatasetsRequest",
                          "responseType": "ListDatasetsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/datasets",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/datasets"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteDataset": {
                          "requestType": "DeleteDatasetRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/datasets/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/datasets/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "ImportData": {
                          "requestType": "ImportDataRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/datasets/*}:import",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name,import_configs",
                            "(google.longrunning.operation_info).response_type": "ImportDataResponse",
                            "(google.longrunning.operation_info).metadata_type": "ImportDataOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/datasets/*}:import",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,import_configs"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ImportDataResponse",
                                "metadata_type": "ImportDataOperationMetadata"
                              }
                            }
                          ]
                        },
                        "ExportData": {
                          "requestType": "ExportDataRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/datasets/*}:export",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name,export_config",
                            "(google.longrunning.operation_info).response_type": "ExportDataResponse",
                            "(google.longrunning.operation_info).metadata_type": "ExportDataOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/datasets/*}:export",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,export_config"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ExportDataResponse",
                                "metadata_type": "ExportDataOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CreateDatasetVersion": {
                          "requestType": "CreateDatasetVersionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/datasets/*}/datasetVersions",
                            "(google.api.http).body": "dataset_version",
                            "(google.api.method_signature)": "parent,dataset_version",
                            "(google.longrunning.operation_info).response_type": "DatasetVersion",
                            "(google.longrunning.operation_info).metadata_type": "CreateDatasetVersionOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/datasets/*}/datasetVersions",
                                "body": "dataset_version"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,dataset_version"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "DatasetVersion",
                                "metadata_type": "CreateDatasetVersionOperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteDatasetVersion": {
                          "requestType": "DeleteDatasetVersionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/datasets/*/datasetVersions/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/datasets/*/datasetVersions/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetDatasetVersion": {
                          "requestType": "GetDatasetVersionRequest",
                          "responseType": "DatasetVersion",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/datasets/*/datasetVersions/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/datasets/*/datasetVersions/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListDatasetVersions": {
                          "requestType": "ListDatasetVersionsRequest",
                          "responseType": "ListDatasetVersionsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/datasets/*}/datasetVersions",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/datasets/*}/datasetVersions"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "RestoreDatasetVersion": {
                          "requestType": "RestoreDatasetVersionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/datasets/*/datasetVersions/*}:restore",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "DatasetVersion",
                            "(google.longrunning.operation_info).metadata_type": "RestoreDatasetVersionOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/datasets/*/datasetVersions/*}:restore"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "DatasetVersion",
                                "metadata_type": "RestoreDatasetVersionOperationMetadata"
                              }
                            }
                          ]
                        },
                        "ListDataItems": {
                          "requestType": "ListDataItemsRequest",
                          "responseType": "ListDataItemsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/datasets/*}/dataItems",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/datasets/*}/dataItems"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "SearchDataItems": {
                          "requestType": "SearchDataItemsRequest",
                          "responseType": "SearchDataItemsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{dataset=projects/*/locations/*/datasets/*}:searchDataItems"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{dataset=projects/*/locations/*/datasets/*}:searchDataItems"
                              }
                            }
                          ]
                        },
                        "ListSavedQueries": {
                          "requestType": "ListSavedQueriesRequest",
                          "responseType": "ListSavedQueriesResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/datasets/*}/savedQueries",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/datasets/*}/savedQueries"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteSavedQuery": {
                          "requestType": "DeleteSavedQueryRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/datasets/*/savedQueries/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/datasets/*/savedQueries/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetAnnotationSpec": {
                          "requestType": "GetAnnotationSpecRequest",
                          "responseType": "AnnotationSpec",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/datasets/*/annotationSpecs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/datasets/*/annotationSpecs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListAnnotations": {
                          "requestType": "ListAnnotationsRequest",
                          "responseType": "ListAnnotationsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/datasets/*/dataItems/*}/annotations",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/datasets/*/dataItems/*}/annotations"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        }
                      }
                    },
                    "CreateDatasetRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "dataset": {
                          "type": "Dataset",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CreateDatasetOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "GetDatasetRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "UpdateDatasetRequest": {
                      "fields": {
                        "dataset": {
                          "type": "Dataset",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ListDatasetsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 6
                        }
                      }
                    },
                    "ListDatasetsResponse": {
                      "fields": {
                        "datasets": {
                          "rule": "repeated",
                          "type": "Dataset",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteDatasetRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        }
                      }
                    },
                    "ImportDataRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "importConfigs": {
                          "rule": "repeated",
                          "type": "ImportDataConfig",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ImportDataResponse": {
                      "fields": {}
                    },
                    "ImportDataOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "ExportDataRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "exportConfig": {
                          "type": "ExportDataConfig",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ExportDataResponse": {
                      "fields": {
                        "exportedFiles": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1
                        },
                        "dataStats": {
                          "type": "Model.DataStats",
                          "id": 2
                        }
                      }
                    },
                    "ExportDataOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        },
                        "gcsOutputDirectory": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "CreateDatasetVersionRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "datasetVersion": {
                          "type": "DatasetVersion",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CreateDatasetVersionOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "DeleteDatasetVersionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/DatasetVersion"
                          }
                        }
                      }
                    },
                    "GetDatasetVersionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/DatasetVersion"
                          }
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "ListDatasetVersionsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListDatasetVersionsResponse": {
                      "fields": {
                        "datasetVersions": {
                          "rule": "repeated",
                          "type": "DatasetVersion",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "RestoreDatasetVersionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/DatasetVersion"
                          }
                        }
                      }
                    },
                    "RestoreDatasetVersionOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "ListDataItemsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 6
                        }
                      }
                    },
                    "ListDataItemsResponse": {
                      "fields": {
                        "dataItems": {
                          "rule": "repeated",
                          "type": "DataItem",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "SearchDataItemsRequest": {
                      "oneofs": {
                        "order": {
                          "oneof": [
                            "orderByDataItem",
                            "orderByAnnotation"
                          ]
                        }
                      },
                      "fields": {
                        "orderByDataItem": {
                          "type": "string",
                          "id": 12
                        },
                        "orderByAnnotation": {
                          "type": "OrderByAnnotation",
                          "id": 13
                        },
                        "dataset": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "savedQuery": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "deprecated": true,
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/SavedQuery"
                          }
                        },
                        "dataLabelingJob": {
                          "type": "string",
                          "id": 3
                        },
                        "dataItemFilter": {
                          "type": "string",
                          "id": 4
                        },
                        "annotationsFilter": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "deprecated": true
                          }
                        },
                        "annotationFilters": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 11
                        },
                        "fieldMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 6
                        },
                        "annotationsLimit": {
                          "type": "int32",
                          "id": 7
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 8
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 9,
                          "options": {
                            "deprecated": true
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 10
                        }
                      },
                      "nested": {
                        "OrderByAnnotation": {
                          "fields": {
                            "savedQuery": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "orderBy": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "SearchDataItemsResponse": {
                      "fields": {
                        "dataItemViews": {
                          "rule": "repeated",
                          "type": "DataItemView",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DataItemView": {
                      "fields": {
                        "dataItem": {
                          "type": "DataItem",
                          "id": 1
                        },
                        "annotations": {
                          "rule": "repeated",
                          "type": "Annotation",
                          "id": 2
                        },
                        "hasTruncatedAnnotations": {
                          "type": "bool",
                          "id": 3
                        }
                      }
                    },
                    "ListSavedQueriesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 6
                        }
                      }
                    },
                    "ListSavedQueriesResponse": {
                      "fields": {
                        "savedQueries": {
                          "rule": "repeated",
                          "type": "SavedQuery",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteSavedQueryRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/SavedQuery"
                          }
                        }
                      }
                    },
                    "GetAnnotationSpecRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/AnnotationSpec"
                          }
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "ListAnnotationsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/DataItem"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 6
                        }
                      }
                    },
                    "ListAnnotationsResponse": {
                      "fields": {
                        "annotations": {
                          "rule": "repeated",
                          "type": "Annotation",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DatasetVersion": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/DatasetVersion",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 3
                        },
                        "bigQueryDatasetName": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "GenericOperationMetadata": {
                      "fields": {
                        "partialFailures": {
                          "rule": "repeated",
                          "type": "google.rpc.Status",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "DeleteOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "DeployedIndexRef": {
                      "fields": {
                        "indexEndpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/IndexEndpoint"
                          }
                        },
                        "deployedIndexId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "DeploymentResourcePool": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/DeploymentResourcePool",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "dedicatedResources": {
                          "type": "DedicatedResources",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "DeploymentResourcePoolService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateDeploymentResourcePool": {
                          "requestType": "CreateDeploymentResourcePoolRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/deploymentResourcePools",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,deployment_resource_pool,deployment_resource_pool_id",
                            "(google.longrunning.operation_info).response_type": "DeploymentResourcePool",
                            "(google.longrunning.operation_info).metadata_type": "CreateDeploymentResourcePoolOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/deploymentResourcePools",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,deployment_resource_pool,deployment_resource_pool_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "DeploymentResourcePool",
                                "metadata_type": "CreateDeploymentResourcePoolOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetDeploymentResourcePool": {
                          "requestType": "GetDeploymentResourcePoolRequest",
                          "responseType": "DeploymentResourcePool",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/deploymentResourcePools/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/deploymentResourcePools/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListDeploymentResourcePools": {
                          "requestType": "ListDeploymentResourcePoolsRequest",
                          "responseType": "ListDeploymentResourcePoolsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/deploymentResourcePools",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/deploymentResourcePools"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteDeploymentResourcePool": {
                          "requestType": "DeleteDeploymentResourcePoolRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/deploymentResourcePools/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/deploymentResourcePools/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "QueryDeployedModels": {
                          "requestType": "QueryDeployedModelsRequest",
                          "responseType": "QueryDeployedModelsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{deployment_resource_pool=projects/*/locations/*/deploymentResourcePools/*}:queryDeployedModels",
                            "(google.api.method_signature)": "deployment_resource_pool"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{deployment_resource_pool=projects/*/locations/*/deploymentResourcePools/*}:queryDeployedModels"
                              }
                            },
                            {
                              "(google.api.method_signature)": "deployment_resource_pool"
                            }
                          ]
                        }
                      }
                    },
                    "CreateDeploymentResourcePoolRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "deploymentResourcePool": {
                          "type": "DeploymentResourcePool",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "deploymentResourcePoolId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CreateDeploymentResourcePoolOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "GetDeploymentResourcePoolRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/DeploymentResourcePool"
                          }
                        }
                      }
                    },
                    "ListDeploymentResourcePoolsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "locations.googleapis.com/Location"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListDeploymentResourcePoolsResponse": {
                      "fields": {
                        "deploymentResourcePools": {
                          "rule": "repeated",
                          "type": "DeploymentResourcePool",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateDeploymentResourcePoolOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "DeleteDeploymentResourcePoolRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/DeploymentResourcePool"
                          }
                        }
                      }
                    },
                    "QueryDeployedModelsRequest": {
                      "fields": {
                        "deploymentResourcePool": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "QueryDeployedModelsResponse": {
                      "fields": {
                        "deployedModels": {
                          "rule": "repeated",
                          "type": "DeployedModel",
                          "id": 1,
                          "options": {
                            "deprecated": true
                          }
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "deployedModelRefs": {
                          "rule": "repeated",
                          "type": "DeployedModelRef",
                          "id": 3
                        },
                        "totalDeployedModelCount": {
                          "type": "int32",
                          "id": 4
                        },
                        "totalEndpointCount": {
                          "type": "int32",
                          "id": 5
                        }
                      }
                    },
                    "Endpoint": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Endpoint",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/publishers/{publisher}/models/{model}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "deployedModels": {
                          "rule": "repeated",
                          "type": "DeployedModel",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "trafficSplit": {
                          "keyType": "string",
                          "type": "int32",
                          "id": 5
                        },
                        "etag": {
                          "type": "string",
                          "id": 6
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 7
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 10
                        },
                        "network": {
                          "type": "string",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "compute.googleapis.com/Network"
                          }
                        },
                        "enablePrivateServiceConnect": {
                          "type": "bool",
                          "id": 17,
                          "options": {
                            "deprecated": true
                          }
                        },
                        "modelDeploymentMonitoringJob": {
                          "type": "string",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/ModelDeploymentMonitoringJob"
                          }
                        },
                        "predictRequestResponseLoggingConfig": {
                          "type": "PredictRequestResponseLoggingConfig",
                          "id": 18
                        }
                      }
                    },
                    "DeployedModel": {
                      "oneofs": {
                        "predictionResources": {
                          "oneof": [
                            "dedicatedResources",
                            "automaticResources",
                            "sharedResources"
                          ]
                        }
                      },
                      "fields": {
                        "dedicatedResources": {
                          "type": "DedicatedResources",
                          "id": 7
                        },
                        "automaticResources": {
                          "type": "AutomaticResources",
                          "id": 8
                        },
                        "sharedResources": {
                          "type": "string",
                          "id": 17,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/DeploymentResourcePool"
                          }
                        },
                        "id": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "model": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "modelVersionId": {
                          "type": "string",
                          "id": 18,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 3
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "explanationSpec": {
                          "type": "ExplanationSpec",
                          "id": 9
                        },
                        "serviceAccount": {
                          "type": "string",
                          "id": 11
                        },
                        "disableContainerLogging": {
                          "type": "bool",
                          "id": 15
                        },
                        "enableAccessLogging": {
                          "type": "bool",
                          "id": 13
                        },
                        "privateEndpoints": {
                          "type": "PrivateEndpoints",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "PrivateEndpoints": {
                      "fields": {
                        "predictHttpUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "explainHttpUri": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "healthHttpUri": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "serviceAttachment": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "PredictRequestResponseLoggingConfig": {
                      "fields": {
                        "enabled": {
                          "type": "bool",
                          "id": 1
                        },
                        "samplingRate": {
                          "type": "double",
                          "id": 2
                        },
                        "bigqueryDestination": {
                          "type": "BigQueryDestination",
                          "id": 3
                        }
                      }
                    },
                    "EndpointService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateEndpoint": {
                          "requestType": "CreateEndpointRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/endpoints",
                            "(google.api.http).body": "endpoint",
                            "(google.api.method_signature)": "parent,endpoint,endpoint_id",
                            "(google.longrunning.operation_info).response_type": "Endpoint",
                            "(google.longrunning.operation_info).metadata_type": "CreateEndpointOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/endpoints",
                                "body": "endpoint"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,endpoint"
                            },
                            {
                              "(google.api.method_signature)": "parent,endpoint,endpoint_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Endpoint",
                                "metadata_type": "CreateEndpointOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetEndpoint": {
                          "requestType": "GetEndpointRequest",
                          "responseType": "Endpoint",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/endpoints/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/endpoints/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListEndpoints": {
                          "requestType": "ListEndpointsRequest",
                          "responseType": "ListEndpointsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/endpoints",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/endpoints"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateEndpoint": {
                          "requestType": "UpdateEndpointRequest",
                          "responseType": "Endpoint",
                          "options": {
                            "(google.api.http).patch": "/v1/{endpoint.name=projects/*/locations/*/endpoints/*}",
                            "(google.api.http).body": "endpoint",
                            "(google.api.method_signature)": "endpoint,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{endpoint.name=projects/*/locations/*/endpoints/*}",
                                "body": "endpoint"
                              }
                            },
                            {
                              "(google.api.method_signature)": "endpoint,update_mask"
                            }
                          ]
                        },
                        "DeleteEndpoint": {
                          "requestType": "DeleteEndpointRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/endpoints/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/endpoints/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeployModel": {
                          "requestType": "DeployModelRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{endpoint=projects/*/locations/*/endpoints/*}:deployModel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "endpoint,deployed_model,traffic_split",
                            "(google.longrunning.operation_info).response_type": "DeployModelResponse",
                            "(google.longrunning.operation_info).metadata_type": "DeployModelOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{endpoint=projects/*/locations/*/endpoints/*}:deployModel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "endpoint,deployed_model,traffic_split"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "DeployModelResponse",
                                "metadata_type": "DeployModelOperationMetadata"
                              }
                            }
                          ]
                        },
                        "UndeployModel": {
                          "requestType": "UndeployModelRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{endpoint=projects/*/locations/*/endpoints/*}:undeployModel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "endpoint,deployed_model_id,traffic_split",
                            "(google.longrunning.operation_info).response_type": "UndeployModelResponse",
                            "(google.longrunning.operation_info).metadata_type": "UndeployModelOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{endpoint=projects/*/locations/*/endpoints/*}:undeployModel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "endpoint,deployed_model_id,traffic_split"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "UndeployModelResponse",
                                "metadata_type": "UndeployModelOperationMetadata"
                              }
                            }
                          ]
                        },
                        "MutateDeployedModel": {
                          "requestType": "MutateDeployedModelRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{endpoint=projects/*/locations/*/endpoints/*}:mutateDeployedModel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "endpoint,deployed_model,update_mask",
                            "(google.longrunning.operation_info).response_type": "MutateDeployedModelResponse",
                            "(google.longrunning.operation_info).metadata_type": "MutateDeployedModelOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{endpoint=projects/*/locations/*/endpoints/*}:mutateDeployedModel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "endpoint,deployed_model,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "MutateDeployedModelResponse",
                                "metadata_type": "MutateDeployedModelOperationMetadata"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "CreateEndpointRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "endpoint": {
                          "type": "Endpoint",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "endpointId": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "CreateEndpointOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "GetEndpointRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        }
                      }
                    },
                    "ListEndpointsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 6
                        }
                      }
                    },
                    "ListEndpointsResponse": {
                      "fields": {
                        "endpoints": {
                          "rule": "repeated",
                          "type": "Endpoint",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateEndpointRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "Endpoint",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteEndpointRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        }
                      }
                    },
                    "DeployModelRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "deployedModel": {
                          "type": "DeployedModel",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "trafficSplit": {
                          "keyType": "string",
                          "type": "int32",
                          "id": 3
                        }
                      }
                    },
                    "DeployModelResponse": {
                      "fields": {
                        "deployedModel": {
                          "type": "DeployedModel",
                          "id": 1
                        }
                      }
                    },
                    "DeployModelOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "UndeployModelRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "deployedModelId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "trafficSplit": {
                          "keyType": "string",
                          "type": "int32",
                          "id": 3
                        }
                      }
                    },
                    "UndeployModelResponse": {
                      "fields": {}
                    },
                    "UndeployModelOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "MutateDeployedModelRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "deployedModel": {
                          "type": "DeployedModel",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "MutateDeployedModelResponse": {
                      "fields": {
                        "deployedModel": {
                          "type": "DeployedModel",
                          "id": 1
                        }
                      }
                    },
                    "MutateDeployedModelOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "EntityType": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/EntityType",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "monitoringConfig": {
                          "type": "FeaturestoreMonitoringConfig",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "offlineStorageTtlDays": {
                          "type": "int32",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "FeaturestoreMonitoringConfig": {
                      "fields": {
                        "snapshotAnalysis": {
                          "type": "SnapshotAnalysis",
                          "id": 1
                        },
                        "importFeaturesAnalysis": {
                          "type": "ImportFeaturesAnalysis",
                          "id": 2
                        },
                        "numericalThresholdConfig": {
                          "type": "ThresholdConfig",
                          "id": 3
                        },
                        "categoricalThresholdConfig": {
                          "type": "ThresholdConfig",
                          "id": 4
                        }
                      },
                      "nested": {
                        "SnapshotAnalysis": {
                          "fields": {
                            "disabled": {
                              "type": "bool",
                              "id": 1
                            },
                            "monitoringIntervalDays": {
                              "type": "int32",
                              "id": 3
                            },
                            "stalenessDays": {
                              "type": "int32",
                              "id": 4
                            }
                          }
                        },
                        "ImportFeaturesAnalysis": {
                          "fields": {
                            "state": {
                              "type": "State",
                              "id": 1
                            },
                            "anomalyDetectionBaseline": {
                              "type": "Baseline",
                              "id": 2
                            }
                          },
                          "nested": {
                            "State": {
                              "values": {
                                "STATE_UNSPECIFIED": 0,
                                "DEFAULT": 1,
                                "ENABLED": 2,
                                "DISABLED": 3
                              }
                            },
                            "Baseline": {
                              "values": {
                                "BASELINE_UNSPECIFIED": 0,
                                "LATEST_STATS": 1,
                                "MOST_RECENT_SNAPSHOT_STATS": 2,
                                "PREVIOUS_IMPORT_FEATURES_STATS": 3
                              }
                            }
                          }
                        },
                        "ThresholdConfig": {
                          "oneofs": {
                            "threshold": {
                              "oneof": [
                                "value"
                              ]
                            }
                          },
                          "fields": {
                            "value": {
                              "type": "double",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "EvaluatedAnnotation": {
                      "fields": {
                        "type": {
                          "type": "EvaluatedAnnotationType",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "predictions": {
                          "rule": "repeated",
                          "type": "google.protobuf.Value",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "groundTruths": {
                          "rule": "repeated",
                          "type": "google.protobuf.Value",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "dataItemPayload": {
                          "type": "google.protobuf.Value",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "evaluatedDataItemViewId": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "explanations": {
                          "rule": "repeated",
                          "type": "EvaluatedAnnotationExplanation",
                          "id": 8
                        },
                        "errorAnalysisAnnotations": {
                          "rule": "repeated",
                          "type": "ErrorAnalysisAnnotation",
                          "id": 9
                        }
                      },
                      "nested": {
                        "EvaluatedAnnotationType": {
                          "values": {
                            "EVALUATED_ANNOTATION_TYPE_UNSPECIFIED": 0,
                            "TRUE_POSITIVE": 1,
                            "FALSE_POSITIVE": 2,
                            "FALSE_NEGATIVE": 3
                          }
                        }
                      }
                    },
                    "EvaluatedAnnotationExplanation": {
                      "fields": {
                        "explanationType": {
                          "type": "string",
                          "id": 1
                        },
                        "explanation": {
                          "type": "Explanation",
                          "id": 2
                        }
                      }
                    },
                    "ErrorAnalysisAnnotation": {
                      "fields": {
                        "attributedItems": {
                          "rule": "repeated",
                          "type": "AttributedItem",
                          "id": 1
                        },
                        "queryType": {
                          "type": "QueryType",
                          "id": 2
                        },
                        "outlierScore": {
                          "type": "double",
                          "id": 3
                        },
                        "outlierThreshold": {
                          "type": "double",
                          "id": 4
                        }
                      },
                      "nested": {
                        "AttributedItem": {
                          "fields": {
                            "annotationResourceName": {
                              "type": "string",
                              "id": 1
                            },
                            "distance": {
                              "type": "double",
                              "id": 2
                            }
                          }
                        },
                        "QueryType": {
                          "values": {
                            "QUERY_TYPE_UNSPECIFIED": 0,
                            "ALL_SIMILAR": 1,
                            "SAME_CLASS_SIMILAR": 2,
                            "SAME_CLASS_DISSIMILAR": 3
                          }
                        }
                      }
                    },
                    "Event": {
                      "fields": {
                        "artifact": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Artifact"
                          }
                        },
                        "execution": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Execution"
                          }
                        },
                        "eventTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "type": {
                          "type": "Type",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 5
                        }
                      },
                      "nested": {
                        "Type": {
                          "values": {
                            "TYPE_UNSPECIFIED": 0,
                            "INPUT": 1,
                            "OUTPUT": 2
                          }
                        }
                      }
                    },
                    "Execution": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Execution",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/metadataStores/{metadata_store}/executions/{execution}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2
                        },
                        "state": {
                          "type": "State",
                          "id": 6
                        },
                        "etag": {
                          "type": "string",
                          "id": 9
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 10
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "schemaTitle": {
                          "type": "string",
                          "id": 13
                        },
                        "schemaVersion": {
                          "type": "string",
                          "id": 14
                        },
                        "metadata": {
                          "type": "google.protobuf.Struct",
                          "id": 15
                        },
                        "description": {
                          "type": "string",
                          "id": 16
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "NEW": 1,
                            "RUNNING": 2,
                            "COMPLETE": 3,
                            "FAILED": 4,
                            "CACHED": 5,
                            "CANCELLED": 6
                          }
                        }
                      }
                    },
                    "Feature": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Feature",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}",
                        "(google.api.resource).plural": "features",
                        "(google.api.resource).singular": "feature"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 2
                        },
                        "valueType": {
                          "type": "ValueType",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 7
                        },
                        "disableMonitoring": {
                          "type": "bool",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "monitoringStatsAnomalies": {
                          "rule": "repeated",
                          "type": "MonitoringStatsAnomaly",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "versionColumnName": {
                          "type": "string",
                          "id": 106
                        },
                        "pointOfContact": {
                          "type": "string",
                          "id": 107
                        }
                      },
                      "nested": {
                        "MonitoringStatsAnomaly": {
                          "fields": {
                            "objective": {
                              "type": "Objective",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "featureStatsAnomaly": {
                              "type": "FeatureStatsAnomaly",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          },
                          "nested": {
                            "Objective": {
                              "values": {
                                "OBJECTIVE_UNSPECIFIED": 0,
                                "IMPORT_FEATURE_ANALYSIS": 1,
                                "SNAPSHOT_ANALYSIS": 2
                              }
                            }
                          }
                        },
                        "ValueType": {
                          "values": {
                            "VALUE_TYPE_UNSPECIFIED": 0,
                            "BOOL": 1,
                            "BOOL_ARRAY": 2,
                            "DOUBLE": 3,
                            "DOUBLE_ARRAY": 4,
                            "INT64": 9,
                            "INT64_ARRAY": 10,
                            "STRING": 11,
                            "STRING_ARRAY": 12,
                            "BYTES": 13
                          }
                        }
                      }
                    },
                    "FeatureStatsAnomaly": {
                      "fields": {
                        "score": {
                          "type": "double",
                          "id": 1
                        },
                        "statsUri": {
                          "type": "string",
                          "id": 3
                        },
                        "anomalyUri": {
                          "type": "string",
                          "id": 4
                        },
                        "distributionDeviation": {
                          "type": "double",
                          "id": 5
                        },
                        "anomalyDetectionThreshold": {
                          "type": "double",
                          "id": 9
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8
                        }
                      }
                    },
                    "FeatureGroup": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/FeatureGroup",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/featureGroups/{feature_group}",
                        "(google.api.resource).plural": "featureGroups",
                        "(google.api.resource).singular": "featureGroup"
                      },
                      "oneofs": {
                        "source": {
                          "oneof": [
                            "bigQuery"
                          ]
                        }
                      },
                      "fields": {
                        "bigQuery": {
                          "type": "BigQuery",
                          "id": 7
                        },
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IDENTIFIER"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "BigQuery": {
                          "fields": {
                            "bigQuerySource": {
                              "type": "BigQuerySource",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "entityIdColumns": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        }
                      }
                    },
                    "FeatureOnlineStore": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/FeatureOnlineStore",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}"
                      },
                      "oneofs": {
                        "storageType": {
                          "oneof": [
                            "bigtable"
                          ]
                        }
                      },
                      "fields": {
                        "bigtable": {
                          "type": "Bigtable",
                          "id": 8
                        },
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IDENTIFIER"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "Bigtable": {
                          "fields": {
                            "autoScaling": {
                              "type": "AutoScaling",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          },
                          "nested": {
                            "AutoScaling": {
                              "fields": {
                                "minNodeCount": {
                                  "type": "int32",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "maxNodeCount": {
                                  "type": "int32",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "cpuUtilizationTarget": {
                                  "type": "int32",
                                  "id": 3,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "STABLE": 1,
                            "UPDATING": 2
                          }
                        }
                      }
                    },
                    "FeatureOnlineStoreAdminService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateFeatureOnlineStore": {
                          "requestType": "CreateFeatureOnlineStoreRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/featureOnlineStores",
                            "(google.api.http).body": "feature_online_store",
                            "(google.api.method_signature)": "parent,feature_online_store,feature_online_store_id",
                            "(google.longrunning.operation_info).response_type": "FeatureOnlineStore",
                            "(google.longrunning.operation_info).metadata_type": "CreateFeatureOnlineStoreOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/featureOnlineStores",
                                "body": "feature_online_store"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,feature_online_store,feature_online_store_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "FeatureOnlineStore",
                                "metadata_type": "CreateFeatureOnlineStoreOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetFeatureOnlineStore": {
                          "requestType": "GetFeatureOnlineStoreRequest",
                          "responseType": "FeatureOnlineStore",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/featureOnlineStores/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/featureOnlineStores/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListFeatureOnlineStores": {
                          "requestType": "ListFeatureOnlineStoresRequest",
                          "responseType": "ListFeatureOnlineStoresResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/featureOnlineStores",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/featureOnlineStores"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateFeatureOnlineStore": {
                          "requestType": "UpdateFeatureOnlineStoreRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1/{feature_online_store.name=projects/*/locations/*/featureOnlineStores/*}",
                            "(google.api.http).body": "feature_online_store",
                            "(google.api.method_signature)": "feature_online_store,update_mask",
                            "(google.longrunning.operation_info).response_type": "FeatureOnlineStore",
                            "(google.longrunning.operation_info).metadata_type": "UpdateFeatureOnlineStoreOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{feature_online_store.name=projects/*/locations/*/featureOnlineStores/*}",
                                "body": "feature_online_store"
                              }
                            },
                            {
                              "(google.api.method_signature)": "feature_online_store,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "FeatureOnlineStore",
                                "metadata_type": "UpdateFeatureOnlineStoreOperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteFeatureOnlineStore": {
                          "requestType": "DeleteFeatureOnlineStoreRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/featureOnlineStores/*}",
                            "(google.api.method_signature)": "name,force",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/featureOnlineStores/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,force"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CreateFeatureView": {
                          "requestType": "CreateFeatureViewRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/featureOnlineStores/*}/featureViews",
                            "(google.api.http).body": "feature_view",
                            "(google.api.method_signature)": "parent,feature_view,feature_view_id",
                            "(google.longrunning.operation_info).response_type": "FeatureView",
                            "(google.longrunning.operation_info).metadata_type": "CreateFeatureViewOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/featureOnlineStores/*}/featureViews",
                                "body": "feature_view"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,feature_view,feature_view_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "FeatureView",
                                "metadata_type": "CreateFeatureViewOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetFeatureView": {
                          "requestType": "GetFeatureViewRequest",
                          "responseType": "FeatureView",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/featureOnlineStores/*/featureViews/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/featureOnlineStores/*/featureViews/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListFeatureViews": {
                          "requestType": "ListFeatureViewsRequest",
                          "responseType": "ListFeatureViewsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/featureOnlineStores/*}/featureViews",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/featureOnlineStores/*}/featureViews"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateFeatureView": {
                          "requestType": "UpdateFeatureViewRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1/{feature_view.name=projects/*/locations/*/featureOnlineStores/*/featureViews/*}",
                            "(google.api.http).body": "feature_view",
                            "(google.api.method_signature)": "feature_view,update_mask",
                            "(google.longrunning.operation_info).response_type": "FeatureView",
                            "(google.longrunning.operation_info).metadata_type": "UpdateFeatureViewOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{feature_view.name=projects/*/locations/*/featureOnlineStores/*/featureViews/*}",
                                "body": "feature_view"
                              }
                            },
                            {
                              "(google.api.method_signature)": "feature_view,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "FeatureView",
                                "metadata_type": "UpdateFeatureViewOperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteFeatureView": {
                          "requestType": "DeleteFeatureViewRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/featureOnlineStores/*/featureViews/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/featureOnlineStores/*/featureViews/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "SyncFeatureView": {
                          "requestType": "SyncFeatureViewRequest",
                          "responseType": "SyncFeatureViewResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{feature_view=projects/*/locations/*/featureOnlineStores/*/featureViews/*}:sync",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "feature_view"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{feature_view=projects/*/locations/*/featureOnlineStores/*/featureViews/*}:sync",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "feature_view"
                            }
                          ]
                        },
                        "GetFeatureViewSync": {
                          "requestType": "GetFeatureViewSyncRequest",
                          "responseType": "FeatureViewSync",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/featureOnlineStores/*/featureViews/*/featureViewSyncs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/featureOnlineStores/*/featureViews/*/featureViewSyncs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListFeatureViewSyncs": {
                          "requestType": "ListFeatureViewSyncsRequest",
                          "responseType": "ListFeatureViewSyncsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/featureOnlineStores/*/featureViews/*}/featureViewSyncs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/featureOnlineStores/*/featureViews/*}/featureViewSyncs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        }
                      }
                    },
                    "CreateFeatureOnlineStoreRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/FeatureOnlineStore"
                          }
                        },
                        "featureOnlineStore": {
                          "type": "FeatureOnlineStore",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "featureOnlineStoreId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetFeatureOnlineStoreRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/FeatureOnlineStore"
                          }
                        }
                      }
                    },
                    "ListFeatureOnlineStoresRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/FeatureOnlineStore"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ListFeatureOnlineStoresResponse": {
                      "fields": {
                        "featureOnlineStores": {
                          "rule": "repeated",
                          "type": "FeatureOnlineStore",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateFeatureOnlineStoreRequest": {
                      "fields": {
                        "featureOnlineStore": {
                          "type": "FeatureOnlineStore",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "DeleteFeatureOnlineStoreRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/FeatureOnlineStore"
                          }
                        },
                        "force": {
                          "type": "bool",
                          "id": 2
                        }
                      }
                    },
                    "CreateFeatureViewRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/FeatureOnlineStore"
                          }
                        },
                        "featureView": {
                          "type": "FeatureView",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "featureViewId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "runSyncImmediately": {
                          "type": "bool",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "GetFeatureViewRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/FeatureView"
                          }
                        }
                      }
                    },
                    "ListFeatureViewsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/FeatureView"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ListFeatureViewsResponse": {
                      "fields": {
                        "featureViews": {
                          "rule": "repeated",
                          "type": "FeatureView",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateFeatureViewRequest": {
                      "fields": {
                        "featureView": {
                          "type": "FeatureView",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "DeleteFeatureViewRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/FeatureView"
                          }
                        }
                      }
                    },
                    "CreateFeatureOnlineStoreOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "UpdateFeatureOnlineStoreOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "CreateFeatureViewOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "UpdateFeatureViewOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "SyncFeatureViewRequest": {
                      "fields": {
                        "featureView": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/FeatureView"
                          }
                        }
                      }
                    },
                    "SyncFeatureViewResponse": {
                      "fields": {
                        "featureViewSync": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "GetFeatureViewSyncRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/FeatureViewSync"
                          }
                        }
                      }
                    },
                    "ListFeatureViewSyncsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/FeatureView"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ListFeatureViewSyncsResponse": {
                      "fields": {
                        "featureViewSyncs": {
                          "rule": "repeated",
                          "type": "FeatureViewSync",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "FeatureView": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/FeatureView",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}"
                      },
                      "oneofs": {
                        "source": {
                          "oneof": [
                            "bigQuerySource",
                            "featureRegistrySource"
                          ]
                        }
                      },
                      "fields": {
                        "bigQuerySource": {
                          "type": "BigQuerySource",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "featureRegistrySource": {
                          "type": "FeatureRegistrySource",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IDENTIFIER"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "syncConfig": {
                          "type": "SyncConfig",
                          "id": 7
                        }
                      },
                      "nested": {
                        "BigQuerySource": {
                          "fields": {
                            "uri": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "entityIdColumns": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "SyncConfig": {
                          "fields": {
                            "cron": {
                              "type": "string",
                              "id": 1
                            }
                          }
                        },
                        "FeatureRegistrySource": {
                          "fields": {
                            "featureGroups": {
                              "rule": "repeated",
                              "type": "FeatureGroup",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          },
                          "nested": {
                            "FeatureGroup": {
                              "fields": {
                                "featureGroupId": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "featureIds": {
                                  "rule": "repeated",
                                  "type": "string",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "FeatureViewSync": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/FeatureViewSync",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}/featureViewSyncs/feature_view_sync"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IDENTIFIER"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "runTime": {
                          "type": "google.type.Interval",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "finalStatus": {
                          "type": "google.rpc.Status",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "FeatureOnlineStoreService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "FetchFeatureValues": {
                          "requestType": "FetchFeatureValuesRequest",
                          "responseType": "FetchFeatureValuesResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{feature_view=projects/*/locations/*/featureOnlineStores/*/featureViews/*}:fetchFeatureValues",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "feature_view, data_key"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{feature_view=projects/*/locations/*/featureOnlineStores/*/featureViews/*}:fetchFeatureValues",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "feature_view, data_key"
                            }
                          ]
                        },
                        "SearchNearestEntities": {
                          "requestType": "SearchNearestEntitiesRequest",
                          "responseType": "SearchNearestEntitiesResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{feature_view=projects/*/locations/*/featureOnlineStores/*/featureViews/*}:searchNearestEntities",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{feature_view=projects/*/locations/*/featureOnlineStores/*/featureViews/*}:searchNearestEntities",
                                "body": "*"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "FeatureViewDataFormat": {
                      "values": {
                        "FEATURE_VIEW_DATA_FORMAT_UNSPECIFIED": 0,
                        "KEY_VALUE": 1,
                        "PROTO_STRUCT": 2
                      }
                    },
                    "FeatureViewDataKey": {
                      "oneofs": {
                        "keyOneof": {
                          "oneof": [
                            "key"
                          ]
                        }
                      },
                      "fields": {
                        "key": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "FetchFeatureValuesRequest": {
                      "fields": {
                        "featureView": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/FeatureView"
                          }
                        },
                        "dataKey": {
                          "type": "FeatureViewDataKey",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "dataFormat": {
                          "type": "FeatureViewDataFormat",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "FetchFeatureValuesResponse": {
                      "oneofs": {
                        "format": {
                          "oneof": [
                            "keyValues",
                            "protoStruct"
                          ]
                        }
                      },
                      "fields": {
                        "keyValues": {
                          "type": "FeatureNameValuePairList",
                          "id": 3
                        },
                        "protoStruct": {
                          "type": "google.protobuf.Struct",
                          "id": 2
                        }
                      },
                      "nested": {
                        "FeatureNameValuePairList": {
                          "fields": {
                            "features": {
                              "rule": "repeated",
                              "type": "FeatureNameValuePair",
                              "id": 1
                            }
                          },
                          "nested": {
                            "FeatureNameValuePair": {
                              "oneofs": {
                                "data": {
                                  "oneof": [
                                    "value"
                                  ]
                                }
                              },
                              "fields": {
                                "value": {
                                  "type": "FeatureValue",
                                  "id": 2
                                },
                                "name": {
                                  "type": "string",
                                  "id": 1
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "NearestNeighborQuery": {
                      "oneofs": {
                        "instance": {
                          "oneof": [
                            "entityId",
                            "embedding"
                          ]
                        }
                      },
                      "fields": {
                        "entityId": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "embedding": {
                          "type": "Embedding",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "neighborCount": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "stringFilters": {
                          "rule": "repeated",
                          "type": "StringFilter",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "perCrowdingAttributeNeighborCount": {
                          "type": "int32",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "parameters": {
                          "type": "Parameters",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "Embedding": {
                          "fields": {
                            "value": {
                              "rule": "repeated",
                              "type": "float",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "StringFilter": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "allowTokens": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "denyTokens": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "Parameters": {
                          "fields": {
                            "approximateNeighborCandidates": {
                              "type": "int32",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "leafNodesSearchFraction": {
                              "type": "double",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        }
                      }
                    },
                    "SearchNearestEntitiesRequest": {
                      "fields": {
                        "featureView": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/FeatureView"
                          }
                        },
                        "query": {
                          "type": "NearestNeighborQuery",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "returnFullEntity": {
                          "type": "bool",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "NearestNeighbors": {
                      "fields": {
                        "neighbors": {
                          "rule": "repeated",
                          "type": "Neighbor",
                          "id": 1
                        }
                      },
                      "nested": {
                        "Neighbor": {
                          "fields": {
                            "entityId": {
                              "type": "string",
                              "id": 1
                            },
                            "distance": {
                              "type": "double",
                              "id": 2
                            },
                            "entityKeyValues": {
                              "type": "FetchFeatureValuesResponse",
                              "id": 3
                            }
                          }
                        }
                      }
                    },
                    "SearchNearestEntitiesResponse": {
                      "fields": {
                        "nearestNeighbors": {
                          "type": "NearestNeighbors",
                          "id": 1
                        }
                      }
                    },
                    "FeaturestoreOnlineServingService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "ReadFeatureValues": {
                          "requestType": "ReadFeatureValuesRequest",
                          "responseType": "ReadFeatureValuesResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{entity_type=projects/*/locations/*/featurestores/*/entityTypes/*}:readFeatureValues",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "entity_type"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{entity_type=projects/*/locations/*/featurestores/*/entityTypes/*}:readFeatureValues",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "entity_type"
                            }
                          ]
                        },
                        "StreamingReadFeatureValues": {
                          "requestType": "StreamingReadFeatureValuesRequest",
                          "responseType": "ReadFeatureValuesResponse",
                          "responseStream": true,
                          "options": {
                            "(google.api.http).post": "/v1/{entity_type=projects/*/locations/*/featurestores/*/entityTypes/*}:streamingReadFeatureValues",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "entity_type"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{entity_type=projects/*/locations/*/featurestores/*/entityTypes/*}:streamingReadFeatureValues",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "entity_type"
                            }
                          ]
                        },
                        "WriteFeatureValues": {
                          "requestType": "WriteFeatureValuesRequest",
                          "responseType": "WriteFeatureValuesResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{entity_type=projects/*/locations/*/featurestores/*/entityTypes/*}:writeFeatureValues",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "entity_type,payloads"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{entity_type=projects/*/locations/*/featurestores/*/entityTypes/*}:writeFeatureValues",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "entity_type,payloads"
                            }
                          ]
                        }
                      }
                    },
                    "WriteFeatureValuesRequest": {
                      "fields": {
                        "entityType": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/EntityType"
                          }
                        },
                        "payloads": {
                          "rule": "repeated",
                          "type": "WriteFeatureValuesPayload",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "WriteFeatureValuesPayload": {
                      "fields": {
                        "entityId": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "featureValues": {
                          "keyType": "string",
                          "type": "FeatureValue",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "WriteFeatureValuesResponse": {
                      "fields": {}
                    },
                    "ReadFeatureValuesRequest": {
                      "fields": {
                        "entityType": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/EntityType"
                          }
                        },
                        "entityId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "featureSelector": {
                          "type": "FeatureSelector",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ReadFeatureValuesResponse": {
                      "fields": {
                        "header": {
                          "type": "Header",
                          "id": 1
                        },
                        "entityView": {
                          "type": "EntityView",
                          "id": 2
                        }
                      },
                      "nested": {
                        "FeatureDescriptor": {
                          "fields": {
                            "id": {
                              "type": "string",
                              "id": 1
                            }
                          }
                        },
                        "Header": {
                          "fields": {
                            "entityType": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "aiplatform.googleapis.com/EntityType"
                              }
                            },
                            "featureDescriptors": {
                              "rule": "repeated",
                              "type": "FeatureDescriptor",
                              "id": 2
                            }
                          }
                        },
                        "EntityView": {
                          "fields": {
                            "entityId": {
                              "type": "string",
                              "id": 1
                            },
                            "data": {
                              "rule": "repeated",
                              "type": "Data",
                              "id": 2
                            }
                          },
                          "nested": {
                            "Data": {
                              "oneofs": {
                                "data": {
                                  "oneof": [
                                    "value",
                                    "values"
                                  ]
                                }
                              },
                              "fields": {
                                "value": {
                                  "type": "FeatureValue",
                                  "id": 1
                                },
                                "values": {
                                  "type": "FeatureValueList",
                                  "id": 2
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "StreamingReadFeatureValuesRequest": {
                      "fields": {
                        "entityType": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/EntityType"
                          }
                        },
                        "entityIds": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "featureSelector": {
                          "type": "FeatureSelector",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "FeatureValue": {
                      "oneofs": {
                        "value": {
                          "oneof": [
                            "boolValue",
                            "doubleValue",
                            "int64Value",
                            "stringValue",
                            "boolArrayValue",
                            "doubleArrayValue",
                            "int64ArrayValue",
                            "stringArrayValue",
                            "bytesValue"
                          ]
                        }
                      },
                      "fields": {
                        "boolValue": {
                          "type": "bool",
                          "id": 1
                        },
                        "doubleValue": {
                          "type": "double",
                          "id": 2
                        },
                        "int64Value": {
                          "type": "int64",
                          "id": 5
                        },
                        "stringValue": {
                          "type": "string",
                          "id": 6
                        },
                        "boolArrayValue": {
                          "type": "BoolArray",
                          "id": 7
                        },
                        "doubleArrayValue": {
                          "type": "DoubleArray",
                          "id": 8
                        },
                        "int64ArrayValue": {
                          "type": "Int64Array",
                          "id": 11
                        },
                        "stringArrayValue": {
                          "type": "StringArray",
                          "id": 12
                        },
                        "bytesValue": {
                          "type": "bytes",
                          "id": 13
                        },
                        "metadata": {
                          "type": "Metadata",
                          "id": 14
                        }
                      },
                      "nested": {
                        "Metadata": {
                          "fields": {
                            "generateTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "FeatureValueList": {
                      "fields": {
                        "values": {
                          "rule": "repeated",
                          "type": "FeatureValue",
                          "id": 1
                        }
                      }
                    },
                    "IdMatcher": {
                      "fields": {
                        "ids": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "FeatureSelector": {
                      "fields": {
                        "idMatcher": {
                          "type": "IdMatcher",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "BoolArray": {
                      "fields": {
                        "values": {
                          "rule": "repeated",
                          "type": "bool",
                          "id": 1
                        }
                      }
                    },
                    "DoubleArray": {
                      "fields": {
                        "values": {
                          "rule": "repeated",
                          "type": "double",
                          "id": 1
                        }
                      }
                    },
                    "Int64Array": {
                      "fields": {
                        "values": {
                          "rule": "repeated",
                          "type": "int64",
                          "id": 1
                        }
                      }
                    },
                    "StringArray": {
                      "fields": {
                        "values": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "Tensor": {
                      "fields": {
                        "dtype": {
                          "type": "DataType",
                          "id": 1
                        },
                        "shape": {
                          "rule": "repeated",
                          "type": "int64",
                          "id": 2
                        },
                        "boolVal": {
                          "rule": "repeated",
                          "type": "bool",
                          "id": 3
                        },
                        "stringVal": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 14
                        },
                        "bytesVal": {
                          "rule": "repeated",
                          "type": "bytes",
                          "id": 15
                        },
                        "floatVal": {
                          "rule": "repeated",
                          "type": "float",
                          "id": 5
                        },
                        "doubleVal": {
                          "rule": "repeated",
                          "type": "double",
                          "id": 6
                        },
                        "intVal": {
                          "rule": "repeated",
                          "type": "int32",
                          "id": 7
                        },
                        "int64Val": {
                          "rule": "repeated",
                          "type": "int64",
                          "id": 8
                        },
                        "uintVal": {
                          "rule": "repeated",
                          "type": "uint32",
                          "id": 9
                        },
                        "uint64Val": {
                          "rule": "repeated",
                          "type": "uint64",
                          "id": 10
                        },
                        "listVal": {
                          "rule": "repeated",
                          "type": "Tensor",
                          "id": 11
                        },
                        "structVal": {
                          "keyType": "string",
                          "type": "Tensor",
                          "id": 12
                        },
                        "tensorVal": {
                          "type": "bytes",
                          "id": 13
                        }
                      },
                      "nested": {
                        "DataType": {
                          "values": {
                            "DATA_TYPE_UNSPECIFIED": 0,
                            "BOOL": 1,
                            "STRING": 2,
                            "FLOAT": 3,
                            "DOUBLE": 4,
                            "INT8": 5,
                            "INT16": 6,
                            "INT32": 7,
                            "INT64": 8,
                            "UINT8": 9,
                            "UINT16": 10,
                            "UINT32": 11,
                            "UINT64": 12
                          }
                        }
                      }
                    },
                    "FeatureRegistryService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateFeatureGroup": {
                          "requestType": "CreateFeatureGroupRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/featureGroups",
                            "(google.api.http).body": "feature_group",
                            "(google.api.method_signature)": "parent,feature_group,feature_group_id",
                            "(google.longrunning.operation_info).response_type": "FeatureGroup",
                            "(google.longrunning.operation_info).metadata_type": "CreateFeatureGroupOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/featureGroups",
                                "body": "feature_group"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,feature_group,feature_group_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "FeatureGroup",
                                "metadata_type": "CreateFeatureGroupOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetFeatureGroup": {
                          "requestType": "GetFeatureGroupRequest",
                          "responseType": "FeatureGroup",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/featureGroups/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/featureGroups/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListFeatureGroups": {
                          "requestType": "ListFeatureGroupsRequest",
                          "responseType": "ListFeatureGroupsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/featureGroups",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/featureGroups"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateFeatureGroup": {
                          "requestType": "UpdateFeatureGroupRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1/{feature_group.name=projects/*/locations/*/featureGroups/*}",
                            "(google.api.http).body": "feature_group",
                            "(google.api.method_signature)": "feature_group,update_mask",
                            "(google.longrunning.operation_info).response_type": "FeatureGroup",
                            "(google.longrunning.operation_info).metadata_type": "UpdateFeatureGroupOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{feature_group.name=projects/*/locations/*/featureGroups/*}",
                                "body": "feature_group"
                              }
                            },
                            {
                              "(google.api.method_signature)": "feature_group,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "FeatureGroup",
                                "metadata_type": "UpdateFeatureGroupOperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteFeatureGroup": {
                          "requestType": "DeleteFeatureGroupRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/featureGroups/*}",
                            "(google.api.method_signature)": "name,force",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/featureGroups/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,force"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CreateFeature": {
                          "requestType": "CreateFeatureRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/featureGroups/*}/features",
                            "(google.api.http).body": "feature",
                            "(google.api.method_signature)": "parent,feature,feature_id",
                            "(google.longrunning.operation_info).response_type": "Feature",
                            "(google.longrunning.operation_info).metadata_type": "CreateFeatureOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/featureGroups/*}/features",
                                "body": "feature"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,feature,feature_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Feature",
                                "metadata_type": "CreateFeatureOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetFeature": {
                          "requestType": "GetFeatureRequest",
                          "responseType": "Feature",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/featureGroups/*/features/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/featureGroups/*/features/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListFeatures": {
                          "requestType": "ListFeaturesRequest",
                          "responseType": "ListFeaturesResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/featureGroups/*}/features",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/featureGroups/*}/features"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateFeature": {
                          "requestType": "UpdateFeatureRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1/{feature.name=projects/*/locations/*/featureGroups/*/features/*}",
                            "(google.api.http).body": "feature",
                            "(google.api.method_signature)": "feature,update_mask",
                            "(google.longrunning.operation_info).response_type": "Feature",
                            "(google.longrunning.operation_info).metadata_type": "UpdateFeatureOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{feature.name=projects/*/locations/*/featureGroups/*/features/*}",
                                "body": "feature"
                              }
                            },
                            {
                              "(google.api.method_signature)": "feature,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Feature",
                                "metadata_type": "UpdateFeatureOperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteFeature": {
                          "requestType": "DeleteFeatureRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/featureGroups/*/features/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/featureGroups/*/features/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "CreateFeatureGroupRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/FeatureGroup"
                          }
                        },
                        "featureGroup": {
                          "type": "FeatureGroup",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "featureGroupId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetFeatureGroupRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/FeatureGroup"
                          }
                        }
                      }
                    },
                    "ListFeatureGroupsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/FeatureGroup"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ListFeatureGroupsResponse": {
                      "fields": {
                        "featureGroups": {
                          "rule": "repeated",
                          "type": "FeatureGroup",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateFeatureGroupRequest": {
                      "fields": {
                        "featureGroup": {
                          "type": "FeatureGroup",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "DeleteFeatureGroupRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/FeatureGroup"
                          }
                        },
                        "force": {
                          "type": "bool",
                          "id": 2
                        }
                      }
                    },
                    "CreateFeatureGroupOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "UpdateFeatureGroupOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "CreateRegistryFeatureOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "UpdateFeatureOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "FeaturestoreService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateFeaturestore": {
                          "requestType": "CreateFeaturestoreRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/featurestores",
                            "(google.api.http).body": "featurestore",
                            "(google.api.method_signature)": "parent,featurestore,featurestore_id",
                            "(google.longrunning.operation_info).response_type": "Featurestore",
                            "(google.longrunning.operation_info).metadata_type": "CreateFeaturestoreOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/featurestores",
                                "body": "featurestore"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,featurestore"
                            },
                            {
                              "(google.api.method_signature)": "parent,featurestore,featurestore_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Featurestore",
                                "metadata_type": "CreateFeaturestoreOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetFeaturestore": {
                          "requestType": "GetFeaturestoreRequest",
                          "responseType": "Featurestore",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/featurestores/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/featurestores/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListFeaturestores": {
                          "requestType": "ListFeaturestoresRequest",
                          "responseType": "ListFeaturestoresResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/featurestores",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/featurestores"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateFeaturestore": {
                          "requestType": "UpdateFeaturestoreRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1/{featurestore.name=projects/*/locations/*/featurestores/*}",
                            "(google.api.http).body": "featurestore",
                            "(google.api.method_signature)": "featurestore,update_mask",
                            "(google.longrunning.operation_info).response_type": "Featurestore",
                            "(google.longrunning.operation_info).metadata_type": "UpdateFeaturestoreOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{featurestore.name=projects/*/locations/*/featurestores/*}",
                                "body": "featurestore"
                              }
                            },
                            {
                              "(google.api.method_signature)": "featurestore,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Featurestore",
                                "metadata_type": "UpdateFeaturestoreOperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteFeaturestore": {
                          "requestType": "DeleteFeaturestoreRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/featurestores/*}",
                            "(google.api.method_signature)": "name,force",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/featurestores/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.api.method_signature)": "name,force"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CreateEntityType": {
                          "requestType": "CreateEntityTypeRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/featurestores/*}/entityTypes",
                            "(google.api.http).body": "entity_type",
                            "(google.api.method_signature)": "parent,entity_type,entity_type_id",
                            "(google.longrunning.operation_info).response_type": "EntityType",
                            "(google.longrunning.operation_info).metadata_type": "CreateEntityTypeOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/featurestores/*}/entityTypes",
                                "body": "entity_type"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,entity_type"
                            },
                            {
                              "(google.api.method_signature)": "parent,entity_type,entity_type_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "EntityType",
                                "metadata_type": "CreateEntityTypeOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetEntityType": {
                          "requestType": "GetEntityTypeRequest",
                          "responseType": "EntityType",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/featurestores/*/entityTypes/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/featurestores/*/entityTypes/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListEntityTypes": {
                          "requestType": "ListEntityTypesRequest",
                          "responseType": "ListEntityTypesResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/featurestores/*}/entityTypes",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/featurestores/*}/entityTypes"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateEntityType": {
                          "requestType": "UpdateEntityTypeRequest",
                          "responseType": "EntityType",
                          "options": {
                            "(google.api.http).patch": "/v1/{entity_type.name=projects/*/locations/*/featurestores/*/entityTypes/*}",
                            "(google.api.http).body": "entity_type",
                            "(google.api.method_signature)": "entity_type,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{entity_type.name=projects/*/locations/*/featurestores/*/entityTypes/*}",
                                "body": "entity_type"
                              }
                            },
                            {
                              "(google.api.method_signature)": "entity_type,update_mask"
                            }
                          ]
                        },
                        "DeleteEntityType": {
                          "requestType": "DeleteEntityTypeRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/featurestores/*/entityTypes/*}",
                            "(google.api.method_signature)": "name,force",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/featurestores/*/entityTypes/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.api.method_signature)": "name,force"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CreateFeature": {
                          "requestType": "CreateFeatureRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/featurestores/*/entityTypes/*}/features",
                            "(google.api.http).body": "feature",
                            "(google.api.method_signature)": "parent,feature,feature_id",
                            "(google.longrunning.operation_info).response_type": "Feature",
                            "(google.longrunning.operation_info).metadata_type": "CreateFeatureOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/featurestores/*/entityTypes/*}/features",
                                "body": "feature"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,feature"
                            },
                            {
                              "(google.api.method_signature)": "parent,feature,feature_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Feature",
                                "metadata_type": "CreateFeatureOperationMetadata"
                              }
                            }
                          ]
                        },
                        "BatchCreateFeatures": {
                          "requestType": "BatchCreateFeaturesRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/featurestores/*/entityTypes/*}/features:batchCreate",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,requests",
                            "(google.longrunning.operation_info).response_type": "BatchCreateFeaturesResponse",
                            "(google.longrunning.operation_info).metadata_type": "BatchCreateFeaturesOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/featurestores/*/entityTypes/*}/features:batchCreate",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,requests"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "BatchCreateFeaturesResponse",
                                "metadata_type": "BatchCreateFeaturesOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetFeature": {
                          "requestType": "GetFeatureRequest",
                          "responseType": "Feature",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListFeatures": {
                          "requestType": "ListFeaturesRequest",
                          "responseType": "ListFeaturesResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/featurestores/*/entityTypes/*}/features",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/featurestores/*/entityTypes/*}/features"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateFeature": {
                          "requestType": "UpdateFeatureRequest",
                          "responseType": "Feature",
                          "options": {
                            "(google.api.http).patch": "/v1/{feature.name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*}",
                            "(google.api.http).body": "feature",
                            "(google.api.method_signature)": "feature,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{feature.name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*}",
                                "body": "feature"
                              }
                            },
                            {
                              "(google.api.method_signature)": "feature,update_mask"
                            }
                          ]
                        },
                        "DeleteFeature": {
                          "requestType": "DeleteFeatureRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "ImportFeatureValues": {
                          "requestType": "ImportFeatureValuesRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{entity_type=projects/*/locations/*/featurestores/*/entityTypes/*}:importFeatureValues",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "entity_type",
                            "(google.longrunning.operation_info).response_type": "ImportFeatureValuesResponse",
                            "(google.longrunning.operation_info).metadata_type": "ImportFeatureValuesOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{entity_type=projects/*/locations/*/featurestores/*/entityTypes/*}:importFeatureValues",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "entity_type"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ImportFeatureValuesResponse",
                                "metadata_type": "ImportFeatureValuesOperationMetadata"
                              }
                            }
                          ]
                        },
                        "BatchReadFeatureValues": {
                          "requestType": "BatchReadFeatureValuesRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{featurestore=projects/*/locations/*/featurestores/*}:batchReadFeatureValues",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "featurestore",
                            "(google.longrunning.operation_info).response_type": "BatchReadFeatureValuesResponse",
                            "(google.longrunning.operation_info).metadata_type": "BatchReadFeatureValuesOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{featurestore=projects/*/locations/*/featurestores/*}:batchReadFeatureValues",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "featurestore"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "BatchReadFeatureValuesResponse",
                                "metadata_type": "BatchReadFeatureValuesOperationMetadata"
                              }
                            }
                          ]
                        },
                        "ExportFeatureValues": {
                          "requestType": "ExportFeatureValuesRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{entity_type=projects/*/locations/*/featurestores/*/entityTypes/*}:exportFeatureValues",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "entity_type",
                            "(google.longrunning.operation_info).response_type": "ExportFeatureValuesResponse",
                            "(google.longrunning.operation_info).metadata_type": "ExportFeatureValuesOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{entity_type=projects/*/locations/*/featurestores/*/entityTypes/*}:exportFeatureValues",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "entity_type"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ExportFeatureValuesResponse",
                                "metadata_type": "ExportFeatureValuesOperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteFeatureValues": {
                          "requestType": "DeleteFeatureValuesRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{entity_type=projects/*/locations/*/featurestores/*/entityTypes/*}:deleteFeatureValues",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "entity_type",
                            "(google.longrunning.operation_info).response_type": "DeleteFeatureValuesResponse",
                            "(google.longrunning.operation_info).metadata_type": "DeleteFeatureValuesOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{entity_type=projects/*/locations/*/featurestores/*/entityTypes/*}:deleteFeatureValues",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "entity_type"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "DeleteFeatureValuesResponse",
                                "metadata_type": "DeleteFeatureValuesOperationMetadata"
                              }
                            }
                          ]
                        },
                        "SearchFeatures": {
                          "requestType": "SearchFeaturesRequest",
                          "responseType": "SearchFeaturesResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{location=projects/*/locations/*}/featurestores:searchFeatures",
                            "(google.api.method_signature)": "location,query"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{location=projects/*/locations/*}/featurestores:searchFeatures"
                              }
                            },
                            {
                              "(google.api.method_signature)": "location"
                            },
                            {
                              "(google.api.method_signature)": "location,query"
                            }
                          ]
                        }
                      }
                    },
                    "CreateFeaturestoreRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/Featurestore"
                          }
                        },
                        "featurestore": {
                          "type": "Featurestore",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "featurestoreId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetFeaturestoreRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Featurestore"
                          }
                        }
                      }
                    },
                    "ListFeaturestoresRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/Featurestore"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 6
                        }
                      }
                    },
                    "ListFeaturestoresResponse": {
                      "fields": {
                        "featurestores": {
                          "rule": "repeated",
                          "type": "Featurestore",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateFeaturestoreRequest": {
                      "fields": {
                        "featurestore": {
                          "type": "Featurestore",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "DeleteFeaturestoreRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Featurestore"
                          }
                        },
                        "force": {
                          "type": "bool",
                          "id": 2
                        }
                      }
                    },
                    "ImportFeatureValuesRequest": {
                      "oneofs": {
                        "source": {
                          "oneof": [
                            "avroSource",
                            "bigquerySource",
                            "csvSource"
                          ]
                        },
                        "featureTimeSource": {
                          "oneof": [
                            "featureTimeField",
                            "featureTime"
                          ]
                        }
                      },
                      "fields": {
                        "avroSource": {
                          "type": "AvroSource",
                          "id": 2
                        },
                        "bigquerySource": {
                          "type": "BigQuerySource",
                          "id": 3
                        },
                        "csvSource": {
                          "type": "CsvSource",
                          "id": 4
                        },
                        "featureTimeField": {
                          "type": "string",
                          "id": 6
                        },
                        "featureTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7
                        },
                        "entityType": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/EntityType"
                          }
                        },
                        "entityIdField": {
                          "type": "string",
                          "id": 5
                        },
                        "featureSpecs": {
                          "rule": "repeated",
                          "type": "FeatureSpec",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "disableOnlineServing": {
                          "type": "bool",
                          "id": 9
                        },
                        "workerCount": {
                          "type": "int32",
                          "id": 11
                        },
                        "disableIngestionAnalysis": {
                          "type": "bool",
                          "id": 12
                        }
                      },
                      "nested": {
                        "FeatureSpec": {
                          "fields": {
                            "id": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "sourceField": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "ImportFeatureValuesResponse": {
                      "fields": {
                        "importedEntityCount": {
                          "type": "int64",
                          "id": 1
                        },
                        "importedFeatureValueCount": {
                          "type": "int64",
                          "id": 2
                        },
                        "invalidRowCount": {
                          "type": "int64",
                          "id": 6
                        },
                        "timestampOutsideRetentionRowsCount": {
                          "type": "int64",
                          "id": 4
                        }
                      }
                    },
                    "BatchReadFeatureValuesRequest": {
                      "oneofs": {
                        "readOption": {
                          "oneof": [
                            "csvReadInstances",
                            "bigqueryReadInstances"
                          ]
                        }
                      },
                      "fields": {
                        "csvReadInstances": {
                          "type": "CsvSource",
                          "id": 3
                        },
                        "bigqueryReadInstances": {
                          "type": "BigQuerySource",
                          "id": 5
                        },
                        "featurestore": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Featurestore"
                          }
                        },
                        "destination": {
                          "type": "FeatureValueDestination",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "passThroughFields": {
                          "rule": "repeated",
                          "type": "PassThroughField",
                          "id": 8
                        },
                        "entityTypeSpecs": {
                          "rule": "repeated",
                          "type": "EntityTypeSpec",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "PassThroughField": {
                          "fields": {
                            "fieldName": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "EntityTypeSpec": {
                          "fields": {
                            "entityTypeId": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "featureSelector": {
                              "type": "FeatureSelector",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "settings": {
                              "rule": "repeated",
                              "type": "DestinationFeatureSetting",
                              "id": 3
                            }
                          }
                        }
                      }
                    },
                    "ExportFeatureValuesRequest": {
                      "oneofs": {
                        "mode": {
                          "oneof": [
                            "snapshotExport",
                            "fullExport"
                          ]
                        }
                      },
                      "fields": {
                        "snapshotExport": {
                          "type": "SnapshotExport",
                          "id": 3
                        },
                        "fullExport": {
                          "type": "FullExport",
                          "id": 7
                        },
                        "entityType": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/EntityType"
                          }
                        },
                        "destination": {
                          "type": "FeatureValueDestination",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "featureSelector": {
                          "type": "FeatureSelector",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "settings": {
                          "rule": "repeated",
                          "type": "DestinationFeatureSetting",
                          "id": 6
                        }
                      },
                      "nested": {
                        "SnapshotExport": {
                          "fields": {
                            "snapshotTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 1
                            },
                            "startTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 2
                            }
                          }
                        },
                        "FullExport": {
                          "fields": {
                            "startTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 2
                            },
                            "endTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "DestinationFeatureSetting": {
                      "fields": {
                        "featureId": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "destinationField": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "FeatureValueDestination": {
                      "oneofs": {
                        "destination": {
                          "oneof": [
                            "bigqueryDestination",
                            "tfrecordDestination",
                            "csvDestination"
                          ]
                        }
                      },
                      "fields": {
                        "bigqueryDestination": {
                          "type": "BigQueryDestination",
                          "id": 1
                        },
                        "tfrecordDestination": {
                          "type": "TFRecordDestination",
                          "id": 2
                        },
                        "csvDestination": {
                          "type": "CsvDestination",
                          "id": 3
                        }
                      }
                    },
                    "ExportFeatureValuesResponse": {
                      "fields": {}
                    },
                    "BatchReadFeatureValuesResponse": {
                      "fields": {}
                    },
                    "CreateEntityTypeRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Featurestore"
                          }
                        },
                        "entityType": {
                          "type": "EntityType",
                          "id": 2
                        },
                        "entityTypeId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetEntityTypeRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/EntityType"
                          }
                        }
                      }
                    },
                    "ListEntityTypesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/EntityType"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 6
                        }
                      }
                    },
                    "ListEntityTypesResponse": {
                      "fields": {
                        "entityTypes": {
                          "rule": "repeated",
                          "type": "EntityType",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateEntityTypeRequest": {
                      "fields": {
                        "entityType": {
                          "type": "EntityType",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "DeleteEntityTypeRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/EntityType"
                          }
                        },
                        "force": {
                          "type": "bool",
                          "id": 2
                        }
                      }
                    },
                    "CreateFeatureRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/Feature"
                          }
                        },
                        "feature": {
                          "type": "Feature",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "featureId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "BatchCreateFeaturesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/EntityType"
                          }
                        },
                        "requests": {
                          "rule": "repeated",
                          "type": "CreateFeatureRequest",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "BatchCreateFeaturesResponse": {
                      "fields": {
                        "features": {
                          "rule": "repeated",
                          "type": "Feature",
                          "id": 1
                        }
                      }
                    },
                    "GetFeatureRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Feature"
                          }
                        }
                      }
                    },
                    "ListFeaturesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/Feature"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 6
                        },
                        "latestStatsCount": {
                          "type": "int32",
                          "id": 7
                        }
                      }
                    },
                    "ListFeaturesResponse": {
                      "fields": {
                        "features": {
                          "rule": "repeated",
                          "type": "Feature",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "SearchFeaturesRequest": {
                      "fields": {
                        "location": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "query": {
                          "type": "string",
                          "id": 3
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 4
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "SearchFeaturesResponse": {
                      "fields": {
                        "features": {
                          "rule": "repeated",
                          "type": "Feature",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateFeatureRequest": {
                      "fields": {
                        "feature": {
                          "type": "Feature",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "DeleteFeatureRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Feature"
                          }
                        }
                      }
                    },
                    "CreateFeaturestoreOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "UpdateFeaturestoreOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "ImportFeatureValuesOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        },
                        "importedEntityCount": {
                          "type": "int64",
                          "id": 2
                        },
                        "importedFeatureValueCount": {
                          "type": "int64",
                          "id": 3
                        },
                        "sourceUris": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 4
                        },
                        "invalidRowCount": {
                          "type": "int64",
                          "id": 6
                        },
                        "timestampOutsideRetentionRowsCount": {
                          "type": "int64",
                          "id": 7
                        },
                        "blockingOperationIds": {
                          "rule": "repeated",
                          "type": "int64",
                          "id": 8
                        }
                      }
                    },
                    "ExportFeatureValuesOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "BatchReadFeatureValuesOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "DeleteFeatureValuesOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "CreateEntityTypeOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "CreateFeatureOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "BatchCreateFeaturesOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "DeleteFeatureValuesRequest": {
                      "oneofs": {
                        "DeleteOption": {
                          "oneof": [
                            "selectEntity",
                            "selectTimeRangeAndFeature"
                          ]
                        }
                      },
                      "fields": {
                        "selectEntity": {
                          "type": "SelectEntity",
                          "id": 2
                        },
                        "selectTimeRangeAndFeature": {
                          "type": "SelectTimeRangeAndFeature",
                          "id": 3
                        },
                        "entityType": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/EntityType"
                          }
                        }
                      },
                      "nested": {
                        "SelectEntity": {
                          "fields": {
                            "entityIdSelector": {
                              "type": "EntityIdSelector",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "SelectTimeRangeAndFeature": {
                          "fields": {
                            "timeRange": {
                              "type": "google.type.Interval",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "featureSelector": {
                              "type": "FeatureSelector",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "skipOnlineStorageDelete": {
                              "type": "bool",
                              "id": 3
                            }
                          }
                        }
                      }
                    },
                    "DeleteFeatureValuesResponse": {
                      "oneofs": {
                        "response": {
                          "oneof": [
                            "selectEntity",
                            "selectTimeRangeAndFeature"
                          ]
                        }
                      },
                      "fields": {
                        "selectEntity": {
                          "type": "SelectEntity",
                          "id": 1
                        },
                        "selectTimeRangeAndFeature": {
                          "type": "SelectTimeRangeAndFeature",
                          "id": 2
                        }
                      },
                      "nested": {
                        "SelectEntity": {
                          "fields": {
                            "offlineStorageDeletedEntityRowCount": {
                              "type": "int64",
                              "id": 1
                            },
                            "onlineStorageDeletedEntityCount": {
                              "type": "int64",
                              "id": 2
                            }
                          }
                        },
                        "SelectTimeRangeAndFeature": {
                          "fields": {
                            "impactedFeatureCount": {
                              "type": "int64",
                              "id": 1
                            },
                            "offlineStorageModifiedEntityRowCount": {
                              "type": "int64",
                              "id": 2
                            },
                            "onlineStorageModifiedEntityCount": {
                              "type": "int64",
                              "id": 3
                            }
                          }
                        }
                      }
                    },
                    "EntityIdSelector": {
                      "oneofs": {
                        "EntityIdsSource": {
                          "oneof": [
                            "csvSource"
                          ]
                        }
                      },
                      "fields": {
                        "csvSource": {
                          "type": "CsvSource",
                          "id": 3
                        },
                        "entityIdField": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "Featurestore": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Featurestore",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/featurestores/{featurestore}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "onlineServingConfig": {
                          "type": "OnlineServingConfig",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "onlineStorageTtlDays": {
                          "type": "int32",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "OnlineServingConfig": {
                          "fields": {
                            "fixedNodeCount": {
                              "type": "int32",
                              "id": 2
                            },
                            "scaling": {
                              "type": "Scaling",
                              "id": 4
                            }
                          },
                          "nested": {
                            "Scaling": {
                              "fields": {
                                "minNodeCount": {
                                  "type": "int32",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "maxNodeCount": {
                                  "type": "int32",
                                  "id": 2
                                },
                                "cpuUtilizationTarget": {
                                  "type": "int32",
                                  "id": 3,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "STABLE": 1,
                            "UPDATING": 2
                          }
                        }
                      }
                    },
                    "HyperparameterTuningJob": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/HyperparameterTuningJob",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_job}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "studySpec": {
                          "type": "StudySpec",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "maxTrialCount": {
                          "type": "int32",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "parallelTrialCount": {
                          "type": "int32",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "maxFailedTrialCount": {
                          "type": "int32",
                          "id": 7
                        },
                        "trialJobSpec": {
                          "type": "CustomJobSpec",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "trials": {
                          "rule": "repeated",
                          "type": "Trial",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "JobState",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 15,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 16
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 17
                        }
                      }
                    },
                    "Study": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Study",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/studies/{study}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "studySpec": {
                          "type": "StudySpec",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "inactiveReason": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "ACTIVE": 1,
                            "INACTIVE": 2,
                            "COMPLETED": 3
                          }
                        }
                      }
                    },
                    "Trial": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Trial",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/studies/{study}/trials/{trial}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "id": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "parameters": {
                          "rule": "repeated",
                          "type": "Parameter",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "finalMeasurement": {
                          "type": "Measurement",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "measurements": {
                          "rule": "repeated",
                          "type": "Measurement",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "clientId": {
                          "type": "string",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "infeasibleReason": {
                          "type": "string",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "customJob": {
                          "type": "string",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/CustomJob"
                          }
                        },
                        "webAccessUris": {
                          "keyType": "string",
                          "type": "string",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "Parameter": {
                          "fields": {
                            "parameterId": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "value": {
                              "type": "google.protobuf.Value",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        },
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "REQUESTED": 1,
                            "ACTIVE": 2,
                            "STOPPING": 3,
                            "SUCCEEDED": 4,
                            "INFEASIBLE": 5
                          }
                        }
                      }
                    },
                    "TrialContext": {
                      "fields": {
                        "description": {
                          "type": "string",
                          "id": 1
                        },
                        "parameters": {
                          "rule": "repeated",
                          "type": "Trial.Parameter",
                          "id": 2
                        }
                      }
                    },
                    "StudyTimeConstraint": {
                      "oneofs": {
                        "constraint": {
                          "oneof": [
                            "maxDuration",
                            "endTime"
                          ]
                        }
                      },
                      "fields": {
                        "maxDuration": {
                          "type": "google.protobuf.Duration",
                          "id": 1
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        }
                      }
                    },
                    "StudySpec": {
                      "oneofs": {
                        "automatedStoppingSpec": {
                          "oneof": [
                            "decayCurveStoppingSpec",
                            "medianAutomatedStoppingSpec",
                            "convexAutomatedStoppingSpec"
                          ]
                        },
                        "_studyStoppingConfig": {
                          "oneof": [
                            "studyStoppingConfig"
                          ]
                        }
                      },
                      "fields": {
                        "decayCurveStoppingSpec": {
                          "type": "DecayCurveAutomatedStoppingSpec",
                          "id": 4
                        },
                        "medianAutomatedStoppingSpec": {
                          "type": "MedianAutomatedStoppingSpec",
                          "id": 5
                        },
                        "convexAutomatedStoppingSpec": {
                          "type": "ConvexAutomatedStoppingSpec",
                          "id": 9
                        },
                        "metrics": {
                          "rule": "repeated",
                          "type": "MetricSpec",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "parameters": {
                          "rule": "repeated",
                          "type": "ParameterSpec",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "algorithm": {
                          "type": "Algorithm",
                          "id": 3
                        },
                        "observationNoise": {
                          "type": "ObservationNoise",
                          "id": 6
                        },
                        "measurementSelectionType": {
                          "type": "MeasurementSelectionType",
                          "id": 7
                        },
                        "studyStoppingConfig": {
                          "type": "StudyStoppingConfig",
                          "id": 11,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      },
                      "nested": {
                        "MetricSpec": {
                          "oneofs": {
                            "_safetyConfig": {
                              "oneof": [
                                "safetyConfig"
                              ]
                            }
                          },
                          "fields": {
                            "metricId": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "goal": {
                              "type": "GoalType",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "safetyConfig": {
                              "type": "SafetyMetricConfig",
                              "id": 3,
                              "options": {
                                "proto3_optional": true
                              }
                            }
                          },
                          "nested": {
                            "SafetyMetricConfig": {
                              "oneofs": {
                                "_desiredMinSafeTrialsFraction": {
                                  "oneof": [
                                    "desiredMinSafeTrialsFraction"
                                  ]
                                }
                              },
                              "fields": {
                                "safetyThreshold": {
                                  "type": "double",
                                  "id": 1
                                },
                                "desiredMinSafeTrialsFraction": {
                                  "type": "double",
                                  "id": 2,
                                  "options": {
                                    "proto3_optional": true
                                  }
                                }
                              }
                            },
                            "GoalType": {
                              "values": {
                                "GOAL_TYPE_UNSPECIFIED": 0,
                                "MAXIMIZE": 1,
                                "MINIMIZE": 2
                              }
                            }
                          }
                        },
                        "ParameterSpec": {
                          "oneofs": {
                            "parameterValueSpec": {
                              "oneof": [
                                "doubleValueSpec",
                                "integerValueSpec",
                                "categoricalValueSpec",
                                "discreteValueSpec"
                              ]
                            }
                          },
                          "fields": {
                            "doubleValueSpec": {
                              "type": "DoubleValueSpec",
                              "id": 2
                            },
                            "integerValueSpec": {
                              "type": "IntegerValueSpec",
                              "id": 3
                            },
                            "categoricalValueSpec": {
                              "type": "CategoricalValueSpec",
                              "id": 4
                            },
                            "discreteValueSpec": {
                              "type": "DiscreteValueSpec",
                              "id": 5
                            },
                            "parameterId": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "scaleType": {
                              "type": "ScaleType",
                              "id": 6
                            },
                            "conditionalParameterSpecs": {
                              "rule": "repeated",
                              "type": "ConditionalParameterSpec",
                              "id": 10
                            }
                          },
                          "nested": {
                            "DoubleValueSpec": {
                              "oneofs": {
                                "_defaultValue": {
                                  "oneof": [
                                    "defaultValue"
                                  ]
                                }
                              },
                              "fields": {
                                "minValue": {
                                  "type": "double",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "maxValue": {
                                  "type": "double",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "defaultValue": {
                                  "type": "double",
                                  "id": 4,
                                  "options": {
                                    "proto3_optional": true
                                  }
                                }
                              }
                            },
                            "IntegerValueSpec": {
                              "oneofs": {
                                "_defaultValue": {
                                  "oneof": [
                                    "defaultValue"
                                  ]
                                }
                              },
                              "fields": {
                                "minValue": {
                                  "type": "int64",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "maxValue": {
                                  "type": "int64",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "defaultValue": {
                                  "type": "int64",
                                  "id": 4,
                                  "options": {
                                    "proto3_optional": true
                                  }
                                }
                              }
                            },
                            "CategoricalValueSpec": {
                              "oneofs": {
                                "_defaultValue": {
                                  "oneof": [
                                    "defaultValue"
                                  ]
                                }
                              },
                              "fields": {
                                "values": {
                                  "rule": "repeated",
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "defaultValue": {
                                  "type": "string",
                                  "id": 3,
                                  "options": {
                                    "proto3_optional": true
                                  }
                                }
                              }
                            },
                            "DiscreteValueSpec": {
                              "oneofs": {
                                "_defaultValue": {
                                  "oneof": [
                                    "defaultValue"
                                  ]
                                }
                              },
                              "fields": {
                                "values": {
                                  "rule": "repeated",
                                  "type": "double",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "defaultValue": {
                                  "type": "double",
                                  "id": 3,
                                  "options": {
                                    "proto3_optional": true
                                  }
                                }
                              }
                            },
                            "ConditionalParameterSpec": {
                              "oneofs": {
                                "parentValueCondition": {
                                  "oneof": [
                                    "parentDiscreteValues",
                                    "parentIntValues",
                                    "parentCategoricalValues"
                                  ]
                                }
                              },
                              "fields": {
                                "parentDiscreteValues": {
                                  "type": "DiscreteValueCondition",
                                  "id": 2
                                },
                                "parentIntValues": {
                                  "type": "IntValueCondition",
                                  "id": 3
                                },
                                "parentCategoricalValues": {
                                  "type": "CategoricalValueCondition",
                                  "id": 4
                                },
                                "parameterSpec": {
                                  "type": "ParameterSpec",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              },
                              "nested": {
                                "DiscreteValueCondition": {
                                  "fields": {
                                    "values": {
                                      "rule": "repeated",
                                      "type": "double",
                                      "id": 1,
                                      "options": {
                                        "(google.api.field_behavior)": "REQUIRED"
                                      }
                                    }
                                  }
                                },
                                "IntValueCondition": {
                                  "fields": {
                                    "values": {
                                      "rule": "repeated",
                                      "type": "int64",
                                      "id": 1,
                                      "options": {
                                        "(google.api.field_behavior)": "REQUIRED"
                                      }
                                    }
                                  }
                                },
                                "CategoricalValueCondition": {
                                  "fields": {
                                    "values": {
                                      "rule": "repeated",
                                      "type": "string",
                                      "id": 1,
                                      "options": {
                                        "(google.api.field_behavior)": "REQUIRED"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "ScaleType": {
                              "values": {
                                "SCALE_TYPE_UNSPECIFIED": 0,
                                "UNIT_LINEAR_SCALE": 1,
                                "UNIT_LOG_SCALE": 2,
                                "UNIT_REVERSE_LOG_SCALE": 3
                              }
                            }
                          }
                        },
                        "DecayCurveAutomatedStoppingSpec": {
                          "fields": {
                            "useElapsedDuration": {
                              "type": "bool",
                              "id": 1
                            }
                          }
                        },
                        "MedianAutomatedStoppingSpec": {
                          "fields": {
                            "useElapsedDuration": {
                              "type": "bool",
                              "id": 1
                            }
                          }
                        },
                        "ConvexAutomatedStoppingSpec": {
                          "oneofs": {
                            "_updateAllStoppedTrials": {
                              "oneof": [
                                "updateAllStoppedTrials"
                              ]
                            }
                          },
                          "fields": {
                            "maxStepCount": {
                              "type": "int64",
                              "id": 1
                            },
                            "minStepCount": {
                              "type": "int64",
                              "id": 2
                            },
                            "minMeasurementCount": {
                              "type": "int64",
                              "id": 3
                            },
                            "learningRateParameterName": {
                              "type": "string",
                              "id": 4
                            },
                            "useElapsedDuration": {
                              "type": "bool",
                              "id": 5
                            },
                            "updateAllStoppedTrials": {
                              "type": "bool",
                              "id": 6,
                              "options": {
                                "proto3_optional": true
                              }
                            }
                          }
                        },
                        "StudyStoppingConfig": {
                          "fields": {
                            "shouldStopAsap": {
                              "type": "google.protobuf.BoolValue",
                              "id": 1
                            },
                            "minimumRuntimeConstraint": {
                              "type": "StudyTimeConstraint",
                              "id": 2
                            },
                            "maximumRuntimeConstraint": {
                              "type": "StudyTimeConstraint",
                              "id": 3
                            },
                            "minNumTrials": {
                              "type": "google.protobuf.Int32Value",
                              "id": 4
                            },
                            "maxNumTrials": {
                              "type": "google.protobuf.Int32Value",
                              "id": 5
                            },
                            "maxNumTrialsNoProgress": {
                              "type": "google.protobuf.Int32Value",
                              "id": 6
                            },
                            "maxDurationNoProgress": {
                              "type": "google.protobuf.Duration",
                              "id": 7
                            }
                          }
                        },
                        "Algorithm": {
                          "values": {
                            "ALGORITHM_UNSPECIFIED": 0,
                            "GRID_SEARCH": 2,
                            "RANDOM_SEARCH": 3
                          }
                        },
                        "ObservationNoise": {
                          "values": {
                            "OBSERVATION_NOISE_UNSPECIFIED": 0,
                            "LOW": 1,
                            "HIGH": 2
                          }
                        },
                        "MeasurementSelectionType": {
                          "values": {
                            "MEASUREMENT_SELECTION_TYPE_UNSPECIFIED": 0,
                            "LAST_MEASUREMENT": 1,
                            "BEST_MEASUREMENT": 2
                          }
                        }
                      }
                    },
                    "Measurement": {
                      "fields": {
                        "elapsedDuration": {
                          "type": "google.protobuf.Duration",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "stepCount": {
                          "type": "int64",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "metrics": {
                          "rule": "repeated",
                          "type": "Metric",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "Metric": {
                          "fields": {
                            "metricId": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "value": {
                              "type": "double",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        }
                      }
                    },
                    "Index": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Index",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/indexes/{index}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "metadataSchemaUri": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "metadata": {
                          "type": "google.protobuf.Value",
                          "id": 6
                        },
                        "deployedIndexes": {
                          "rule": "repeated",
                          "type": "DeployedIndexRef",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 8
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 9
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "indexStats": {
                          "type": "IndexStats",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "indexUpdateMethod": {
                          "type": "IndexUpdateMethod",
                          "id": 16,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 17,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      },
                      "nested": {
                        "IndexUpdateMethod": {
                          "values": {
                            "INDEX_UPDATE_METHOD_UNSPECIFIED": 0,
                            "BATCH_UPDATE": 1,
                            "STREAM_UPDATE": 2
                          }
                        }
                      }
                    },
                    "IndexDatapoint": {
                      "fields": {
                        "datapointId": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "featureVector": {
                          "rule": "repeated",
                          "type": "float",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "restricts": {
                          "rule": "repeated",
                          "type": "Restriction",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "numericRestricts": {
                          "rule": "repeated",
                          "type": "NumericRestriction",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "crowdingTag": {
                          "type": "CrowdingTag",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "Restriction": {
                          "fields": {
                            "namespace": {
                              "type": "string",
                              "id": 1
                            },
                            "allowList": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2
                            },
                            "denyList": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "NumericRestriction": {
                          "oneofs": {
                            "Value": {
                              "oneof": [
                                "valueInt",
                                "valueFloat",
                                "valueDouble"
                              ]
                            }
                          },
                          "fields": {
                            "valueInt": {
                              "type": "int64",
                              "id": 2
                            },
                            "valueFloat": {
                              "type": "float",
                              "id": 3
                            },
                            "valueDouble": {
                              "type": "double",
                              "id": 4
                            },
                            "namespace": {
                              "type": "string",
                              "id": 1
                            },
                            "op": {
                              "type": "Operator",
                              "id": 5
                            }
                          },
                          "nested": {
                            "Operator": {
                              "values": {
                                "OPERATOR_UNSPECIFIED": 0,
                                "LESS": 1,
                                "LESS_EQUAL": 2,
                                "EQUAL": 3,
                                "GREATER_EQUAL": 4,
                                "GREATER": 5
                              }
                            }
                          }
                        },
                        "CrowdingTag": {
                          "fields": {
                            "crowdingAttribute": {
                              "type": "string",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "IndexStats": {
                      "fields": {
                        "vectorsCount": {
                          "type": "int64",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "shardsCount": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "IndexEndpoint": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/IndexEndpoint",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "deployedIndexes": {
                          "rule": "repeated",
                          "type": "DeployedIndex",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 5
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "network": {
                          "type": "string",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "enablePrivateServiceConnect": {
                          "type": "bool",
                          "id": 10,
                          "options": {
                            "deprecated": true,
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "privateServiceConnectConfig": {
                          "type": "PrivateServiceConnectConfig",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "publicEndpointEnabled": {
                          "type": "bool",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "publicEndpointDomainName": {
                          "type": "string",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 15,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "DeployedIndex": {
                      "fields": {
                        "id": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "index": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Index"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 3
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "privateEndpoints": {
                          "type": "IndexPrivateEndpoints",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "indexSyncTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "automaticResources": {
                          "type": "AutomaticResources",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "dedicatedResources": {
                          "type": "DedicatedResources",
                          "id": 16,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "enableAccessLogging": {
                          "type": "bool",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "deployedIndexAuthConfig": {
                          "type": "DeployedIndexAuthConfig",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "reservedIpRanges": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "deploymentGroup": {
                          "type": "string",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DeployedIndexAuthConfig": {
                      "fields": {
                        "authProvider": {
                          "type": "AuthProvider",
                          "id": 1
                        }
                      },
                      "nested": {
                        "AuthProvider": {
                          "fields": {
                            "audiences": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 1
                            },
                            "allowedIssuers": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "IndexPrivateEndpoints": {
                      "fields": {
                        "matchGrpcAddress": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "serviceAttachment": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "pscAutomatedEndpoints": {
                          "rule": "repeated",
                          "type": "PscAutomatedEndpoints",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "PrivateServiceConnectConfig": {
                      "fields": {
                        "enablePrivateServiceConnect": {
                          "type": "bool",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "projectAllowlist": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "PscAutomatedEndpoints": {
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 1
                        },
                        "network": {
                          "type": "string",
                          "id": 2
                        },
                        "matchAddress": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "IndexEndpointService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateIndexEndpoint": {
                          "requestType": "CreateIndexEndpointRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/indexEndpoints",
                            "(google.api.http).body": "index_endpoint",
                            "(google.api.method_signature)": "parent,index_endpoint",
                            "(google.longrunning.operation_info).response_type": "IndexEndpoint",
                            "(google.longrunning.operation_info).metadata_type": "CreateIndexEndpointOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/indexEndpoints",
                                "body": "index_endpoint"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,index_endpoint"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "IndexEndpoint",
                                "metadata_type": "CreateIndexEndpointOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetIndexEndpoint": {
                          "requestType": "GetIndexEndpointRequest",
                          "responseType": "IndexEndpoint",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/indexEndpoints/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/indexEndpoints/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListIndexEndpoints": {
                          "requestType": "ListIndexEndpointsRequest",
                          "responseType": "ListIndexEndpointsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/indexEndpoints",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/indexEndpoints"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateIndexEndpoint": {
                          "requestType": "UpdateIndexEndpointRequest",
                          "responseType": "IndexEndpoint",
                          "options": {
                            "(google.api.http).patch": "/v1/{index_endpoint.name=projects/*/locations/*/indexEndpoints/*}",
                            "(google.api.http).body": "index_endpoint",
                            "(google.api.method_signature)": "index_endpoint,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{index_endpoint.name=projects/*/locations/*/indexEndpoints/*}",
                                "body": "index_endpoint"
                              }
                            },
                            {
                              "(google.api.method_signature)": "index_endpoint,update_mask"
                            }
                          ]
                        },
                        "DeleteIndexEndpoint": {
                          "requestType": "DeleteIndexEndpointRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/indexEndpoints/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/indexEndpoints/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeployIndex": {
                          "requestType": "DeployIndexRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{index_endpoint=projects/*/locations/*/indexEndpoints/*}:deployIndex",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "index_endpoint,deployed_index",
                            "(google.longrunning.operation_info).response_type": "DeployIndexResponse",
                            "(google.longrunning.operation_info).metadata_type": "DeployIndexOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{index_endpoint=projects/*/locations/*/indexEndpoints/*}:deployIndex",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "index_endpoint,deployed_index"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "DeployIndexResponse",
                                "metadata_type": "DeployIndexOperationMetadata"
                              }
                            }
                          ]
                        },
                        "UndeployIndex": {
                          "requestType": "UndeployIndexRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{index_endpoint=projects/*/locations/*/indexEndpoints/*}:undeployIndex",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "index_endpoint,deployed_index_id",
                            "(google.longrunning.operation_info).response_type": "UndeployIndexResponse",
                            "(google.longrunning.operation_info).metadata_type": "UndeployIndexOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{index_endpoint=projects/*/locations/*/indexEndpoints/*}:undeployIndex",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "index_endpoint,deployed_index_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "UndeployIndexResponse",
                                "metadata_type": "UndeployIndexOperationMetadata"
                              }
                            }
                          ]
                        },
                        "MutateDeployedIndex": {
                          "requestType": "MutateDeployedIndexRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{index_endpoint=projects/*/locations/*/indexEndpoints/*}:mutateDeployedIndex",
                            "(google.api.http).body": "deployed_index",
                            "(google.api.method_signature)": "index_endpoint,deployed_index",
                            "(google.longrunning.operation_info).response_type": "MutateDeployedIndexResponse",
                            "(google.longrunning.operation_info).metadata_type": "MutateDeployedIndexOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{index_endpoint=projects/*/locations/*/indexEndpoints/*}:mutateDeployedIndex",
                                "body": "deployed_index"
                              }
                            },
                            {
                              "(google.api.method_signature)": "index_endpoint,deployed_index"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "MutateDeployedIndexResponse",
                                "metadata_type": "MutateDeployedIndexOperationMetadata"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "CreateIndexEndpointRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "indexEndpoint": {
                          "type": "IndexEndpoint",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CreateIndexEndpointOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "GetIndexEndpointRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/IndexEndpoint"
                          }
                        }
                      }
                    },
                    "ListIndexEndpointsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListIndexEndpointsResponse": {
                      "fields": {
                        "indexEndpoints": {
                          "rule": "repeated",
                          "type": "IndexEndpoint",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateIndexEndpointRequest": {
                      "fields": {
                        "indexEndpoint": {
                          "type": "IndexEndpoint",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteIndexEndpointRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/IndexEndpoint"
                          }
                        }
                      }
                    },
                    "DeployIndexRequest": {
                      "fields": {
                        "indexEndpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/IndexEndpoint"
                          }
                        },
                        "deployedIndex": {
                          "type": "DeployedIndex",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeployIndexResponse": {
                      "fields": {
                        "deployedIndex": {
                          "type": "DeployedIndex",
                          "id": 1
                        }
                      }
                    },
                    "DeployIndexOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        },
                        "deployedIndexId": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UndeployIndexRequest": {
                      "fields": {
                        "indexEndpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/IndexEndpoint"
                          }
                        },
                        "deployedIndexId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UndeployIndexResponse": {
                      "fields": {}
                    },
                    "UndeployIndexOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "MutateDeployedIndexRequest": {
                      "fields": {
                        "indexEndpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/IndexEndpoint"
                          }
                        },
                        "deployedIndex": {
                          "type": "DeployedIndex",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "MutateDeployedIndexResponse": {
                      "fields": {
                        "deployedIndex": {
                          "type": "DeployedIndex",
                          "id": 1
                        }
                      }
                    },
                    "MutateDeployedIndexOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        },
                        "deployedIndexId": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "IndexService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateIndex": {
                          "requestType": "CreateIndexRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/indexes",
                            "(google.api.http).body": "index",
                            "(google.api.method_signature)": "parent,index",
                            "(google.longrunning.operation_info).response_type": "Index",
                            "(google.longrunning.operation_info).metadata_type": "CreateIndexOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/indexes",
                                "body": "index"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,index"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Index",
                                "metadata_type": "CreateIndexOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetIndex": {
                          "requestType": "GetIndexRequest",
                          "responseType": "Index",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/indexes/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/indexes/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListIndexes": {
                          "requestType": "ListIndexesRequest",
                          "responseType": "ListIndexesResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/indexes",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/indexes"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateIndex": {
                          "requestType": "UpdateIndexRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1/{index.name=projects/*/locations/*/indexes/*}",
                            "(google.api.http).body": "index",
                            "(google.api.method_signature)": "index,update_mask",
                            "(google.longrunning.operation_info).response_type": "Index",
                            "(google.longrunning.operation_info).metadata_type": "UpdateIndexOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{index.name=projects/*/locations/*/indexes/*}",
                                "body": "index"
                              }
                            },
                            {
                              "(google.api.method_signature)": "index,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Index",
                                "metadata_type": "UpdateIndexOperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteIndex": {
                          "requestType": "DeleteIndexRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/indexes/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/indexes/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpsertDatapoints": {
                          "requestType": "UpsertDatapointsRequest",
                          "responseType": "UpsertDatapointsResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{index=projects/*/locations/*/indexes/*}:upsertDatapoints",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{index=projects/*/locations/*/indexes/*}:upsertDatapoints",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "RemoveDatapoints": {
                          "requestType": "RemoveDatapointsRequest",
                          "responseType": "RemoveDatapointsResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{index=projects/*/locations/*/indexes/*}:removeDatapoints",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{index=projects/*/locations/*/indexes/*}:removeDatapoints",
                                "body": "*"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "CreateIndexRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "index": {
                          "type": "Index",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CreateIndexOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        },
                        "nearestNeighborSearchOperationMetadata": {
                          "type": "NearestNeighborSearchOperationMetadata",
                          "id": 2
                        }
                      }
                    },
                    "GetIndexRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Index"
                          }
                        }
                      }
                    },
                    "ListIndexesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListIndexesResponse": {
                      "fields": {
                        "indexes": {
                          "rule": "repeated",
                          "type": "Index",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateIndexRequest": {
                      "fields": {
                        "index": {
                          "type": "Index",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "UpdateIndexOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        },
                        "nearestNeighborSearchOperationMetadata": {
                          "type": "NearestNeighborSearchOperationMetadata",
                          "id": 2
                        }
                      }
                    },
                    "DeleteIndexRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Index"
                          }
                        }
                      }
                    },
                    "UpsertDatapointsRequest": {
                      "fields": {
                        "index": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Index"
                          }
                        },
                        "datapoints": {
                          "rule": "repeated",
                          "type": "IndexDatapoint",
                          "id": 2
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "UpsertDatapointsResponse": {
                      "fields": {}
                    },
                    "RemoveDatapointsRequest": {
                      "fields": {
                        "index": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Index"
                          }
                        },
                        "datapointIds": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "RemoveDatapointsResponse": {
                      "fields": {}
                    },
                    "NearestNeighborSearchOperationMetadata": {
                      "fields": {
                        "contentValidationStats": {
                          "rule": "repeated",
                          "type": "ContentValidationStats",
                          "id": 1
                        },
                        "dataBytesCount": {
                          "type": "int64",
                          "id": 2
                        }
                      },
                      "nested": {
                        "RecordError": {
                          "fields": {
                            "errorType": {
                              "type": "RecordErrorType",
                              "id": 1
                            },
                            "errorMessage": {
                              "type": "string",
                              "id": 2
                            },
                            "sourceGcsUri": {
                              "type": "string",
                              "id": 3
                            },
                            "embeddingId": {
                              "type": "string",
                              "id": 4
                            },
                            "rawRecord": {
                              "type": "string",
                              "id": 5
                            }
                          },
                          "nested": {
                            "RecordErrorType": {
                              "values": {
                                "ERROR_TYPE_UNSPECIFIED": 0,
                                "EMPTY_LINE": 1,
                                "INVALID_JSON_SYNTAX": 2,
                                "INVALID_CSV_SYNTAX": 3,
                                "INVALID_AVRO_SYNTAX": 4,
                                "INVALID_EMBEDDING_ID": 5,
                                "EMBEDDING_SIZE_MISMATCH": 6,
                                "NAMESPACE_MISSING": 7,
                                "PARSING_ERROR": 8,
                                "DUPLICATE_NAMESPACE": 9,
                                "OP_IN_DATAPOINT": 10,
                                "MULTIPLE_VALUES": 11,
                                "INVALID_NUMERIC_VALUE": 12,
                                "INVALID_ENCODING": 13
                              }
                            }
                          }
                        },
                        "ContentValidationStats": {
                          "fields": {
                            "sourceGcsUri": {
                              "type": "string",
                              "id": 1
                            },
                            "validRecordCount": {
                              "type": "int64",
                              "id": 2
                            },
                            "invalidRecordCount": {
                              "type": "int64",
                              "id": 3
                            },
                            "partialErrors": {
                              "rule": "repeated",
                              "type": "RecordError",
                              "id": 4
                            }
                          }
                        }
                      }
                    },
                    "JobService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/cloud-platform.read-only"
                      },
                      "methods": {
                        "CreateCustomJob": {
                          "requestType": "CreateCustomJobRequest",
                          "responseType": "CustomJob",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/customJobs",
                            "(google.api.http).body": "custom_job",
                            "(google.api.method_signature)": "parent,custom_job"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/customJobs",
                                "body": "custom_job"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,custom_job"
                            }
                          ]
                        },
                        "GetCustomJob": {
                          "requestType": "GetCustomJobRequest",
                          "responseType": "CustomJob",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/customJobs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/customJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListCustomJobs": {
                          "requestType": "ListCustomJobsRequest",
                          "responseType": "ListCustomJobsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/customJobs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/customJobs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteCustomJob": {
                          "requestType": "DeleteCustomJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/customJobs/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/customJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CancelCustomJob": {
                          "requestType": "CancelCustomJobRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/customJobs/*}:cancel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/customJobs/*}:cancel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateDataLabelingJob": {
                          "requestType": "CreateDataLabelingJobRequest",
                          "responseType": "DataLabelingJob",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/dataLabelingJobs",
                            "(google.api.http).body": "data_labeling_job",
                            "(google.api.method_signature)": "parent,data_labeling_job"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/dataLabelingJobs",
                                "body": "data_labeling_job"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,data_labeling_job"
                            }
                          ]
                        },
                        "GetDataLabelingJob": {
                          "requestType": "GetDataLabelingJobRequest",
                          "responseType": "DataLabelingJob",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/dataLabelingJobs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/dataLabelingJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListDataLabelingJobs": {
                          "requestType": "ListDataLabelingJobsRequest",
                          "responseType": "ListDataLabelingJobsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/dataLabelingJobs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/dataLabelingJobs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteDataLabelingJob": {
                          "requestType": "DeleteDataLabelingJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/dataLabelingJobs/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/dataLabelingJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CancelDataLabelingJob": {
                          "requestType": "CancelDataLabelingJobRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/dataLabelingJobs/*}:cancel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/dataLabelingJobs/*}:cancel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateHyperparameterTuningJob": {
                          "requestType": "CreateHyperparameterTuningJobRequest",
                          "responseType": "HyperparameterTuningJob",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/hyperparameterTuningJobs",
                            "(google.api.http).body": "hyperparameter_tuning_job",
                            "(google.api.method_signature)": "parent,hyperparameter_tuning_job"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/hyperparameterTuningJobs",
                                "body": "hyperparameter_tuning_job"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,hyperparameter_tuning_job"
                            }
                          ]
                        },
                        "GetHyperparameterTuningJob": {
                          "requestType": "GetHyperparameterTuningJobRequest",
                          "responseType": "HyperparameterTuningJob",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/hyperparameterTuningJobs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/hyperparameterTuningJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListHyperparameterTuningJobs": {
                          "requestType": "ListHyperparameterTuningJobsRequest",
                          "responseType": "ListHyperparameterTuningJobsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/hyperparameterTuningJobs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/hyperparameterTuningJobs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteHyperparameterTuningJob": {
                          "requestType": "DeleteHyperparameterTuningJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/hyperparameterTuningJobs/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/hyperparameterTuningJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CancelHyperparameterTuningJob": {
                          "requestType": "CancelHyperparameterTuningJobRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/hyperparameterTuningJobs/*}:cancel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/hyperparameterTuningJobs/*}:cancel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateNasJob": {
                          "requestType": "CreateNasJobRequest",
                          "responseType": "NasJob",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/nasJobs",
                            "(google.api.http).body": "nas_job",
                            "(google.api.method_signature)": "parent,nas_job"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/nasJobs",
                                "body": "nas_job"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,nas_job"
                            }
                          ]
                        },
                        "GetNasJob": {
                          "requestType": "GetNasJobRequest",
                          "responseType": "NasJob",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/nasJobs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/nasJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListNasJobs": {
                          "requestType": "ListNasJobsRequest",
                          "responseType": "ListNasJobsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/nasJobs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/nasJobs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteNasJob": {
                          "requestType": "DeleteNasJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/nasJobs/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/nasJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CancelNasJob": {
                          "requestType": "CancelNasJobRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/nasJobs/*}:cancel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/nasJobs/*}:cancel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "GetNasTrialDetail": {
                          "requestType": "GetNasTrialDetailRequest",
                          "responseType": "NasTrialDetail",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/nasJobs/*/nasTrialDetails/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/nasJobs/*/nasTrialDetails/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListNasTrialDetails": {
                          "requestType": "ListNasTrialDetailsRequest",
                          "responseType": "ListNasTrialDetailsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/nasJobs/*}/nasTrialDetails",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/nasJobs/*}/nasTrialDetails"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "CreateBatchPredictionJob": {
                          "requestType": "CreateBatchPredictionJobRequest",
                          "responseType": "BatchPredictionJob",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/batchPredictionJobs",
                            "(google.api.http).body": "batch_prediction_job",
                            "(google.api.method_signature)": "parent,batch_prediction_job"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/batchPredictionJobs",
                                "body": "batch_prediction_job"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,batch_prediction_job"
                            }
                          ]
                        },
                        "GetBatchPredictionJob": {
                          "requestType": "GetBatchPredictionJobRequest",
                          "responseType": "BatchPredictionJob",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/batchPredictionJobs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/batchPredictionJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListBatchPredictionJobs": {
                          "requestType": "ListBatchPredictionJobsRequest",
                          "responseType": "ListBatchPredictionJobsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/batchPredictionJobs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/batchPredictionJobs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteBatchPredictionJob": {
                          "requestType": "DeleteBatchPredictionJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/batchPredictionJobs/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/batchPredictionJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CancelBatchPredictionJob": {
                          "requestType": "CancelBatchPredictionJobRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/batchPredictionJobs/*}:cancel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/batchPredictionJobs/*}:cancel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateModelDeploymentMonitoringJob": {
                          "requestType": "CreateModelDeploymentMonitoringJobRequest",
                          "responseType": "ModelDeploymentMonitoringJob",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/modelDeploymentMonitoringJobs",
                            "(google.api.http).body": "model_deployment_monitoring_job",
                            "(google.api.method_signature)": "parent,model_deployment_monitoring_job"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/modelDeploymentMonitoringJobs",
                                "body": "model_deployment_monitoring_job"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,model_deployment_monitoring_job"
                            }
                          ]
                        },
                        "SearchModelDeploymentMonitoringStatsAnomalies": {
                          "requestType": "SearchModelDeploymentMonitoringStatsAnomaliesRequest",
                          "responseType": "SearchModelDeploymentMonitoringStatsAnomaliesResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{model_deployment_monitoring_job=projects/*/locations/*/modelDeploymentMonitoringJobs/*}:searchModelDeploymentMonitoringStatsAnomalies",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "model_deployment_monitoring_job,deployed_model_id"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{model_deployment_monitoring_job=projects/*/locations/*/modelDeploymentMonitoringJobs/*}:searchModelDeploymentMonitoringStatsAnomalies",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "model_deployment_monitoring_job,deployed_model_id"
                            }
                          ]
                        },
                        "GetModelDeploymentMonitoringJob": {
                          "requestType": "GetModelDeploymentMonitoringJobRequest",
                          "responseType": "ModelDeploymentMonitoringJob",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListModelDeploymentMonitoringJobs": {
                          "requestType": "ListModelDeploymentMonitoringJobsRequest",
                          "responseType": "ListModelDeploymentMonitoringJobsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/modelDeploymentMonitoringJobs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/modelDeploymentMonitoringJobs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateModelDeploymentMonitoringJob": {
                          "requestType": "UpdateModelDeploymentMonitoringJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1/{model_deployment_monitoring_job.name=projects/*/locations/*/modelDeploymentMonitoringJobs/*}",
                            "(google.api.http).body": "model_deployment_monitoring_job",
                            "(google.api.method_signature)": "model_deployment_monitoring_job,update_mask",
                            "(google.longrunning.operation_info).response_type": "ModelDeploymentMonitoringJob",
                            "(google.longrunning.operation_info).metadata_type": "UpdateModelDeploymentMonitoringJobOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{model_deployment_monitoring_job.name=projects/*/locations/*/modelDeploymentMonitoringJobs/*}",
                                "body": "model_deployment_monitoring_job"
                              }
                            },
                            {
                              "(google.api.method_signature)": "model_deployment_monitoring_job,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ModelDeploymentMonitoringJob",
                                "metadata_type": "UpdateModelDeploymentMonitoringJobOperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteModelDeploymentMonitoringJob": {
                          "requestType": "DeleteModelDeploymentMonitoringJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "PauseModelDeploymentMonitoringJob": {
                          "requestType": "PauseModelDeploymentMonitoringJobRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*}:pause",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*}:pause",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ResumeModelDeploymentMonitoringJob": {
                          "requestType": "ResumeModelDeploymentMonitoringJobRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*}:resume",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*}:resume",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        }
                      }
                    },
                    "CreateCustomJobRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "customJob": {
                          "type": "CustomJob",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetCustomJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/CustomJob"
                          }
                        }
                      }
                    },
                    "ListCustomJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListCustomJobsResponse": {
                      "fields": {
                        "customJobs": {
                          "rule": "repeated",
                          "type": "CustomJob",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteCustomJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/CustomJob"
                          }
                        }
                      }
                    },
                    "CancelCustomJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/CustomJob"
                          }
                        }
                      }
                    },
                    "CreateDataLabelingJobRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "dataLabelingJob": {
                          "type": "DataLabelingJob",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetDataLabelingJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/DataLabelingJob"
                          }
                        }
                      }
                    },
                    "ListDataLabelingJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 6
                        }
                      }
                    },
                    "ListDataLabelingJobsResponse": {
                      "fields": {
                        "dataLabelingJobs": {
                          "rule": "repeated",
                          "type": "DataLabelingJob",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteDataLabelingJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/DataLabelingJob"
                          }
                        }
                      }
                    },
                    "CancelDataLabelingJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/DataLabelingJob"
                          }
                        }
                      }
                    },
                    "CreateHyperparameterTuningJobRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "hyperparameterTuningJob": {
                          "type": "HyperparameterTuningJob",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetHyperparameterTuningJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/HyperparameterTuningJob"
                          }
                        }
                      }
                    },
                    "ListHyperparameterTuningJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListHyperparameterTuningJobsResponse": {
                      "fields": {
                        "hyperparameterTuningJobs": {
                          "rule": "repeated",
                          "type": "HyperparameterTuningJob",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteHyperparameterTuningJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/HyperparameterTuningJob"
                          }
                        }
                      }
                    },
                    "CancelHyperparameterTuningJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/HyperparameterTuningJob"
                          }
                        }
                      }
                    },
                    "CreateNasJobRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "nasJob": {
                          "type": "NasJob",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetNasJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/NasJob"
                          }
                        }
                      }
                    },
                    "ListNasJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListNasJobsResponse": {
                      "fields": {
                        "nasJobs": {
                          "rule": "repeated",
                          "type": "NasJob",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteNasJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/NasJob"
                          }
                        }
                      }
                    },
                    "CancelNasJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/NasJob"
                          }
                        }
                      }
                    },
                    "GetNasTrialDetailRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/NasTrialDetail"
                          }
                        }
                      }
                    },
                    "ListNasTrialDetailsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/NasJob"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListNasTrialDetailsResponse": {
                      "fields": {
                        "nasTrialDetails": {
                          "rule": "repeated",
                          "type": "NasTrialDetail",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "CreateBatchPredictionJobRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "batchPredictionJob": {
                          "type": "BatchPredictionJob",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetBatchPredictionJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/BatchPredictionJob"
                          }
                        }
                      }
                    },
                    "ListBatchPredictionJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListBatchPredictionJobsResponse": {
                      "fields": {
                        "batchPredictionJobs": {
                          "rule": "repeated",
                          "type": "BatchPredictionJob",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteBatchPredictionJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/BatchPredictionJob"
                          }
                        }
                      }
                    },
                    "CancelBatchPredictionJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/BatchPredictionJob"
                          }
                        }
                      }
                    },
                    "CreateModelDeploymentMonitoringJobRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "modelDeploymentMonitoringJob": {
                          "type": "ModelDeploymentMonitoringJob",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "SearchModelDeploymentMonitoringStatsAnomaliesRequest": {
                      "fields": {
                        "modelDeploymentMonitoringJob": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/ModelDeploymentMonitoringJob"
                          }
                        },
                        "deployedModelId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "featureDisplayName": {
                          "type": "string",
                          "id": 3
                        },
                        "objectives": {
                          "rule": "repeated",
                          "type": "StatsAnomaliesObjective",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 5
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 6
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8
                        }
                      },
                      "nested": {
                        "StatsAnomaliesObjective": {
                          "fields": {
                            "type": {
                              "type": "ModelDeploymentMonitoringObjectiveType",
                              "id": 1
                            },
                            "topFeatureCount": {
                              "type": "int32",
                              "id": 4
                            }
                          }
                        }
                      }
                    },
                    "SearchModelDeploymentMonitoringStatsAnomaliesResponse": {
                      "fields": {
                        "monitoringStats": {
                          "rule": "repeated",
                          "type": "ModelMonitoringStatsAnomalies",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetModelDeploymentMonitoringJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/ModelDeploymentMonitoringJob"
                          }
                        }
                      }
                    },
                    "ListModelDeploymentMonitoringJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListModelDeploymentMonitoringJobsResponse": {
                      "fields": {
                        "modelDeploymentMonitoringJobs": {
                          "rule": "repeated",
                          "type": "ModelDeploymentMonitoringJob",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateModelDeploymentMonitoringJobRequest": {
                      "fields": {
                        "modelDeploymentMonitoringJob": {
                          "type": "ModelDeploymentMonitoringJob",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteModelDeploymentMonitoringJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/ModelDeploymentMonitoringJob"
                          }
                        }
                      }
                    },
                    "PauseModelDeploymentMonitoringJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/ModelDeploymentMonitoringJob"
                          }
                        }
                      }
                    },
                    "ResumeModelDeploymentMonitoringJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/ModelDeploymentMonitoringJob"
                          }
                        }
                      }
                    },
                    "UpdateModelDeploymentMonitoringJobOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "ModelDeploymentMonitoringObjectiveType": {
                      "values": {
                        "MODEL_DEPLOYMENT_MONITORING_OBJECTIVE_TYPE_UNSPECIFIED": 0,
                        "RAW_FEATURE_SKEW": 1,
                        "RAW_FEATURE_DRIFT": 2,
                        "FEATURE_ATTRIBUTION_SKEW": 3,
                        "FEATURE_ATTRIBUTION_DRIFT": 4
                      }
                    },
                    "ModelDeploymentMonitoringJob": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/ModelDeploymentMonitoringJob",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "endpoint": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "state": {
                          "type": "JobState",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "scheduleState": {
                          "type": "MonitoringScheduleState",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "latestMonitoringPipelineMetadata": {
                          "type": "LatestMonitoringPipelineMetadata",
                          "id": 25,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "modelDeploymentMonitoringObjectiveConfigs": {
                          "rule": "repeated",
                          "type": "ModelDeploymentMonitoringObjectiveConfig",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "modelDeploymentMonitoringScheduleConfig": {
                          "type": "ModelDeploymentMonitoringScheduleConfig",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "loggingSamplingStrategy": {
                          "type": "SamplingStrategy",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "modelMonitoringAlertConfig": {
                          "type": "ModelMonitoringAlertConfig",
                          "id": 15
                        },
                        "predictInstanceSchemaUri": {
                          "type": "string",
                          "id": 9
                        },
                        "samplePredictInstance": {
                          "type": "google.protobuf.Value",
                          "id": 19
                        },
                        "analysisInstanceSchemaUri": {
                          "type": "string",
                          "id": 16
                        },
                        "bigqueryTables": {
                          "rule": "repeated",
                          "type": "ModelDeploymentMonitoringBigQueryTable",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "logTtl": {
                          "type": "google.protobuf.Duration",
                          "id": 17
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 11
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "nextScheduleTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "statsAnomaliesBaseDirectory": {
                          "type": "GcsDestination",
                          "id": 20
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 21
                        },
                        "enableMonitoringPipelineLogs": {
                          "type": "bool",
                          "id": 22
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 23,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "LatestMonitoringPipelineMetadata": {
                          "fields": {
                            "runTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 1
                            },
                            "status": {
                              "type": "google.rpc.Status",
                              "id": 2
                            }
                          }
                        },
                        "MonitoringScheduleState": {
                          "values": {
                            "MONITORING_SCHEDULE_STATE_UNSPECIFIED": 0,
                            "PENDING": 1,
                            "OFFLINE": 2,
                            "RUNNING": 3
                          }
                        }
                      }
                    },
                    "ModelDeploymentMonitoringBigQueryTable": {
                      "fields": {
                        "logSource": {
                          "type": "LogSource",
                          "id": 1
                        },
                        "logType": {
                          "type": "LogType",
                          "id": 2
                        },
                        "bigqueryTablePath": {
                          "type": "string",
                          "id": 3
                        },
                        "requestResponseLoggingSchemaVersion": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "LogSource": {
                          "values": {
                            "LOG_SOURCE_UNSPECIFIED": 0,
                            "TRAINING": 1,
                            "SERVING": 2
                          }
                        },
                        "LogType": {
                          "values": {
                            "LOG_TYPE_UNSPECIFIED": 0,
                            "PREDICT": 1,
                            "EXPLAIN": 2
                          }
                        }
                      }
                    },
                    "ModelDeploymentMonitoringObjectiveConfig": {
                      "fields": {
                        "deployedModelId": {
                          "type": "string",
                          "id": 1
                        },
                        "objectiveConfig": {
                          "type": "ModelMonitoringObjectiveConfig",
                          "id": 2
                        }
                      }
                    },
                    "ModelDeploymentMonitoringScheduleConfig": {
                      "fields": {
                        "monitorInterval": {
                          "type": "google.protobuf.Duration",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "monitorWindow": {
                          "type": "google.protobuf.Duration",
                          "id": 2
                        }
                      }
                    },
                    "ModelMonitoringStatsAnomalies": {
                      "fields": {
                        "objective": {
                          "type": "ModelDeploymentMonitoringObjectiveType",
                          "id": 1
                        },
                        "deployedModelId": {
                          "type": "string",
                          "id": 2
                        },
                        "anomalyCount": {
                          "type": "int32",
                          "id": 3
                        },
                        "featureStats": {
                          "rule": "repeated",
                          "type": "FeatureHistoricStatsAnomalies",
                          "id": 4
                        }
                      },
                      "nested": {
                        "FeatureHistoricStatsAnomalies": {
                          "fields": {
                            "featureDisplayName": {
                              "type": "string",
                              "id": 1
                            },
                            "threshold": {
                              "type": "ThresholdConfig",
                              "id": 3
                            },
                            "trainingStats": {
                              "type": "FeatureStatsAnomaly",
                              "id": 4
                            },
                            "predictionStats": {
                              "rule": "repeated",
                              "type": "FeatureStatsAnomaly",
                              "id": 5
                            }
                          }
                        }
                      }
                    },
                    "ModelMonitoringObjectiveConfig": {
                      "fields": {
                        "trainingDataset": {
                          "type": "TrainingDataset",
                          "id": 1
                        },
                        "trainingPredictionSkewDetectionConfig": {
                          "type": "TrainingPredictionSkewDetectionConfig",
                          "id": 2
                        },
                        "predictionDriftDetectionConfig": {
                          "type": "PredictionDriftDetectionConfig",
                          "id": 3
                        },
                        "explanationConfig": {
                          "type": "ExplanationConfig",
                          "id": 5
                        }
                      },
                      "nested": {
                        "TrainingDataset": {
                          "oneofs": {
                            "dataSource": {
                              "oneof": [
                                "dataset",
                                "gcsSource",
                                "bigquerySource"
                              ]
                            }
                          },
                          "fields": {
                            "dataset": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                              }
                            },
                            "gcsSource": {
                              "type": "GcsSource",
                              "id": 4
                            },
                            "bigquerySource": {
                              "type": "BigQuerySource",
                              "id": 5
                            },
                            "dataFormat": {
                              "type": "string",
                              "id": 2
                            },
                            "targetField": {
                              "type": "string",
                              "id": 6
                            },
                            "loggingSamplingStrategy": {
                              "type": "SamplingStrategy",
                              "id": 7
                            }
                          }
                        },
                        "TrainingPredictionSkewDetectionConfig": {
                          "fields": {
                            "skewThresholds": {
                              "keyType": "string",
                              "type": "ThresholdConfig",
                              "id": 1
                            },
                            "attributionScoreSkewThresholds": {
                              "keyType": "string",
                              "type": "ThresholdConfig",
                              "id": 2
                            },
                            "defaultSkewThreshold": {
                              "type": "ThresholdConfig",
                              "id": 6
                            }
                          }
                        },
                        "PredictionDriftDetectionConfig": {
                          "fields": {
                            "driftThresholds": {
                              "keyType": "string",
                              "type": "ThresholdConfig",
                              "id": 1
                            },
                            "attributionScoreDriftThresholds": {
                              "keyType": "string",
                              "type": "ThresholdConfig",
                              "id": 2
                            },
                            "defaultDriftThreshold": {
                              "type": "ThresholdConfig",
                              "id": 5
                            }
                          }
                        },
                        "ExplanationConfig": {
                          "fields": {
                            "enableFeatureAttributes": {
                              "type": "bool",
                              "id": 1
                            },
                            "explanationBaseline": {
                              "type": "ExplanationBaseline",
                              "id": 2
                            }
                          },
                          "nested": {
                            "ExplanationBaseline": {
                              "oneofs": {
                                "destination": {
                                  "oneof": [
                                    "gcs",
                                    "bigquery"
                                  ]
                                }
                              },
                              "fields": {
                                "gcs": {
                                  "type": "GcsDestination",
                                  "id": 2
                                },
                                "bigquery": {
                                  "type": "BigQueryDestination",
                                  "id": 3
                                },
                                "predictionFormat": {
                                  "type": "PredictionFormat",
                                  "id": 1
                                }
                              },
                              "nested": {
                                "PredictionFormat": {
                                  "values": {
                                    "PREDICTION_FORMAT_UNSPECIFIED": 0,
                                    "JSONL": 2,
                                    "BIGQUERY": 3
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "ModelMonitoringAlertConfig": {
                      "oneofs": {
                        "alert": {
                          "oneof": [
                            "emailAlertConfig"
                          ]
                        }
                      },
                      "fields": {
                        "emailAlertConfig": {
                          "type": "EmailAlertConfig",
                          "id": 1
                        },
                        "enableLogging": {
                          "type": "bool",
                          "id": 2
                        },
                        "notificationChannels": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.resource_reference).type": "monitoring.googleapis.com/NotificationChannel"
                          }
                        }
                      },
                      "nested": {
                        "EmailAlertConfig": {
                          "fields": {
                            "userEmails": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "ThresholdConfig": {
                      "oneofs": {
                        "threshold": {
                          "oneof": [
                            "value"
                          ]
                        }
                      },
                      "fields": {
                        "value": {
                          "type": "double",
                          "id": 1
                        }
                      }
                    },
                    "SamplingStrategy": {
                      "fields": {
                        "randomSampleConfig": {
                          "type": "RandomSampleConfig",
                          "id": 1
                        }
                      },
                      "nested": {
                        "RandomSampleConfig": {
                          "fields": {
                            "sampleRate": {
                              "type": "double",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "NasJob": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/NasJob",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/nasJobs/{nas_job}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "nasJobSpec": {
                          "type": "NasJobSpec",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "nasJobOutput": {
                          "type": "NasJobOutput",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "JobState",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 12
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 13
                        },
                        "enableRestrictedImageTraining": {
                          "type": "bool",
                          "id": 14,
                          "options": {
                            "deprecated": true,
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "NasTrialDetail": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/NasTrialDetail",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/nasJobs/{nas_job}/nasTrialDetails/{nas_trial_detail}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "parameters": {
                          "type": "string",
                          "id": 2
                        },
                        "searchTrial": {
                          "type": "NasTrial",
                          "id": 3
                        },
                        "trainTrial": {
                          "type": "NasTrial",
                          "id": 4
                        }
                      }
                    },
                    "NasJobSpec": {
                      "oneofs": {
                        "nasAlgorithmSpec": {
                          "oneof": [
                            "multiTrialAlgorithmSpec"
                          ]
                        }
                      },
                      "fields": {
                        "multiTrialAlgorithmSpec": {
                          "type": "MultiTrialAlgorithmSpec",
                          "id": 2
                        },
                        "resumeNasJobId": {
                          "type": "string",
                          "id": 3
                        },
                        "searchSpaceSpec": {
                          "type": "string",
                          "id": 1
                        }
                      },
                      "nested": {
                        "MultiTrialAlgorithmSpec": {
                          "fields": {
                            "multiTrialAlgorithm": {
                              "type": "MultiTrialAlgorithm",
                              "id": 1
                            },
                            "metric": {
                              "type": "MetricSpec",
                              "id": 2
                            },
                            "searchTrialSpec": {
                              "type": "SearchTrialSpec",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "trainTrialSpec": {
                              "type": "TrainTrialSpec",
                              "id": 4
                            }
                          },
                          "nested": {
                            "MetricSpec": {
                              "fields": {
                                "metricId": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "goal": {
                                  "type": "GoalType",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              },
                              "nested": {
                                "GoalType": {
                                  "values": {
                                    "GOAL_TYPE_UNSPECIFIED": 0,
                                    "MAXIMIZE": 1,
                                    "MINIMIZE": 2
                                  }
                                }
                              }
                            },
                            "SearchTrialSpec": {
                              "fields": {
                                "searchTrialJobSpec": {
                                  "type": "CustomJobSpec",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "maxTrialCount": {
                                  "type": "int32",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "maxParallelTrialCount": {
                                  "type": "int32",
                                  "id": 3,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "maxFailedTrialCount": {
                                  "type": "int32",
                                  "id": 4
                                }
                              }
                            },
                            "TrainTrialSpec": {
                              "fields": {
                                "trainTrialJobSpec": {
                                  "type": "CustomJobSpec",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "maxParallelTrialCount": {
                                  "type": "int32",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "frequency": {
                                  "type": "int32",
                                  "id": 3,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              }
                            },
                            "MultiTrialAlgorithm": {
                              "values": {
                                "MULTI_TRIAL_ALGORITHM_UNSPECIFIED": 0,
                                "REINFORCEMENT_LEARNING": 1,
                                "GRID_SEARCH": 2
                              }
                            }
                          }
                        }
                      }
                    },
                    "NasJobOutput": {
                      "oneofs": {
                        "output": {
                          "oneof": [
                            "multiTrialJobOutput"
                          ]
                        }
                      },
                      "fields": {
                        "multiTrialJobOutput": {
                          "type": "MultiTrialJobOutput",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "MultiTrialJobOutput": {
                          "fields": {
                            "searchTrials": {
                              "rule": "repeated",
                              "type": "NasTrial",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "trainTrials": {
                              "rule": "repeated",
                              "type": "NasTrial",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        }
                      }
                    },
                    "NasTrial": {
                      "fields": {
                        "id": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "finalMeasurement": {
                          "type": "Measurement",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "REQUESTED": 1,
                            "ACTIVE": 2,
                            "STOPPING": 3,
                            "SUCCEEDED": 4,
                            "INFEASIBLE": 5
                          }
                        }
                      }
                    },
                    "LineageSubgraph": {
                      "fields": {
                        "artifacts": {
                          "rule": "repeated",
                          "type": "Artifact",
                          "id": 1
                        },
                        "executions": {
                          "rule": "repeated",
                          "type": "Execution",
                          "id": 2
                        },
                        "events": {
                          "rule": "repeated",
                          "type": "Event",
                          "id": 3
                        }
                      }
                    },
                    "LlmUtilityService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CountTokens": {
                          "requestType": "CountTokensRequest",
                          "responseType": "CountTokensResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{endpoint=projects/*/locations/*/endpoints/*}:countTokens",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1/{endpoint=projects/*/locations/*/publishers/*/models/*}:countTokens",
                            "(google.api.http).additional_bindings.body": "*",
                            "(google.api.method_signature)": "endpoint,instances"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{endpoint=projects/*/locations/*/endpoints/*}:countTokens",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v1/{endpoint=projects/*/locations/*/publishers/*/models/*}:countTokens",
                                  "body": "*"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "endpoint,instances"
                            }
                          ]
                        },
                        "ComputeTokens": {
                          "requestType": "ComputeTokensRequest",
                          "responseType": "ComputeTokensResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{endpoint=projects/*/locations/*/endpoints/*}:computeTokens",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1/{endpoint=projects/*/locations/*/publishers/*/models/*}:computeTokens",
                            "(google.api.http).additional_bindings.body": "*",
                            "(google.api.method_signature)": "endpoint,instances"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{endpoint=projects/*/locations/*/endpoints/*}:computeTokens",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v1/{endpoint=projects/*/locations/*/publishers/*/models/*}:computeTokens",
                                  "body": "*"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "endpoint,instances"
                            }
                          ]
                        }
                      }
                    },
                    "ComputeTokensRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "instances": {
                          "rule": "repeated",
                          "type": "google.protobuf.Value",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "TokensInfo": {
                      "fields": {
                        "tokens": {
                          "rule": "repeated",
                          "type": "bytes",
                          "id": 1
                        },
                        "tokenIds": {
                          "rule": "repeated",
                          "type": "int64",
                          "id": 2
                        }
                      }
                    },
                    "ComputeTokensResponse": {
                      "fields": {
                        "tokensInfo": {
                          "rule": "repeated",
                          "type": "TokensInfo",
                          "id": 1
                        }
                      }
                    },
                    "PredictionService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "Predict": {
                          "requestType": "PredictRequest",
                          "responseType": "PredictResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{endpoint=projects/*/locations/*/endpoints/*}:predict",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1/{endpoint=projects/*/locations/*/publishers/*/models/*}:predict",
                            "(google.api.http).additional_bindings.body": "*",
                            "(google.api.method_signature)": "endpoint,instances,parameters"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{endpoint=projects/*/locations/*/endpoints/*}:predict",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v1/{endpoint=projects/*/locations/*/publishers/*/models/*}:predict",
                                  "body": "*"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "endpoint,instances,parameters"
                            }
                          ]
                        },
                        "RawPredict": {
                          "requestType": "RawPredictRequest",
                          "responseType": "google.api.HttpBody",
                          "options": {
                            "(google.api.http).post": "/v1/{endpoint=projects/*/locations/*/endpoints/*}:rawPredict",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1/{endpoint=projects/*/locations/*/publishers/*/models/*}:rawPredict",
                            "(google.api.http).additional_bindings.body": "*",
                            "(google.api.method_signature)": "endpoint,http_body"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{endpoint=projects/*/locations/*/endpoints/*}:rawPredict",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v1/{endpoint=projects/*/locations/*/publishers/*/models/*}:rawPredict",
                                  "body": "*"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "endpoint,http_body"
                            }
                          ]
                        },
                        "StreamRawPredict": {
                          "requestType": "StreamRawPredictRequest",
                          "responseType": "google.api.HttpBody",
                          "responseStream": true,
                          "options": {
                            "(google.api.http).post": "/v1/{endpoint=projects/*/locations/*/endpoints/*}:streamRawPredict",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1/{endpoint=projects/*/locations/*/publishers/*/models/*}:streamRawPredict",
                            "(google.api.http).additional_bindings.body": "*",
                            "(google.api.method_signature)": "endpoint,http_body"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{endpoint=projects/*/locations/*/endpoints/*}:streamRawPredict",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v1/{endpoint=projects/*/locations/*/publishers/*/models/*}:streamRawPredict",
                                  "body": "*"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "endpoint,http_body"
                            }
                          ]
                        },
                        "DirectPredict": {
                          "requestType": "DirectPredictRequest",
                          "responseType": "DirectPredictResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{endpoint=projects/*/locations/*/endpoints/*}:directPredict",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{endpoint=projects/*/locations/*/endpoints/*}:directPredict",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "DirectRawPredict": {
                          "requestType": "DirectRawPredictRequest",
                          "responseType": "DirectRawPredictResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{endpoint=projects/*/locations/*/endpoints/*}:directRawPredict",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{endpoint=projects/*/locations/*/endpoints/*}:directRawPredict",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "StreamDirectPredict": {
                          "requestType": "StreamDirectPredictRequest",
                          "requestStream": true,
                          "responseType": "StreamDirectPredictResponse",
                          "responseStream": true
                        },
                        "StreamDirectRawPredict": {
                          "requestType": "StreamDirectRawPredictRequest",
                          "requestStream": true,
                          "responseType": "StreamDirectRawPredictResponse",
                          "responseStream": true
                        },
                        "StreamingPredict": {
                          "requestType": "StreamingPredictRequest",
                          "requestStream": true,
                          "responseType": "StreamingPredictResponse",
                          "responseStream": true
                        },
                        "ServerStreamingPredict": {
                          "requestType": "StreamingPredictRequest",
                          "responseType": "StreamingPredictResponse",
                          "responseStream": true,
                          "options": {
                            "(google.api.http).post": "/v1/{endpoint=projects/*/locations/*/endpoints/*}:serverStreamingPredict",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1/{endpoint=projects/*/locations/*/publishers/*/models/*}:serverStreamingPredict",
                            "(google.api.http).additional_bindings.body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{endpoint=projects/*/locations/*/endpoints/*}:serverStreamingPredict",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v1/{endpoint=projects/*/locations/*/publishers/*/models/*}:serverStreamingPredict",
                                  "body": "*"
                                }
                              }
                            }
                          ]
                        },
                        "StreamingRawPredict": {
                          "requestType": "StreamingRawPredictRequest",
                          "requestStream": true,
                          "responseType": "StreamingRawPredictResponse",
                          "responseStream": true
                        },
                        "Explain": {
                          "requestType": "ExplainRequest",
                          "responseType": "ExplainResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{endpoint=projects/*/locations/*/endpoints/*}:explain",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "endpoint,instances,parameters,deployed_model_id"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{endpoint=projects/*/locations/*/endpoints/*}:explain",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "endpoint,instances,parameters,deployed_model_id"
                            }
                          ]
                        },
                        "GenerateContent": {
                          "requestType": "GenerateContentRequest",
                          "responseType": "GenerateContentResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{model=projects/*/locations/*/endpoints/*}:generateContent",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1/{model=projects/*/locations/*/publishers/*/models/*}:generateContent",
                            "(google.api.http).additional_bindings.body": "*",
                            "(google.api.method_signature)": "model,contents"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{model=projects/*/locations/*/endpoints/*}:generateContent",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v1/{model=projects/*/locations/*/publishers/*/models/*}:generateContent",
                                  "body": "*"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "model,contents"
                            }
                          ]
                        },
                        "StreamGenerateContent": {
                          "requestType": "GenerateContentRequest",
                          "responseType": "GenerateContentResponse",
                          "responseStream": true,
                          "options": {
                            "(google.api.http).post": "/v1/{model=projects/*/locations/*/endpoints/*}:streamGenerateContent",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1/{model=projects/*/locations/*/publishers/*/models/*}:streamGenerateContent",
                            "(google.api.http).additional_bindings.body": "*",
                            "(google.api.method_signature)": "model,contents"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{model=projects/*/locations/*/endpoints/*}:streamGenerateContent",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v1/{model=projects/*/locations/*/publishers/*/models/*}:streamGenerateContent",
                                  "body": "*"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "model,contents"
                            }
                          ]
                        }
                      }
                    },
                    "PredictRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "instances": {
                          "rule": "repeated",
                          "type": "google.protobuf.Value",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "parameters": {
                          "type": "google.protobuf.Value",
                          "id": 3
                        }
                      }
                    },
                    "PredictResponse": {
                      "fields": {
                        "predictions": {
                          "rule": "repeated",
                          "type": "google.protobuf.Value",
                          "id": 1
                        },
                        "deployedModelId": {
                          "type": "string",
                          "id": 2
                        },
                        "model": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "modelVersionId": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "modelDisplayName": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "metadata": {
                          "type": "google.protobuf.Value",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "RawPredictRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "httpBody": {
                          "type": "google.api.HttpBody",
                          "id": 2
                        }
                      }
                    },
                    "StreamRawPredictRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "httpBody": {
                          "type": "google.api.HttpBody",
                          "id": 2
                        }
                      }
                    },
                    "DirectPredictRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "inputs": {
                          "rule": "repeated",
                          "type": "Tensor",
                          "id": 2
                        },
                        "parameters": {
                          "type": "Tensor",
                          "id": 3
                        }
                      }
                    },
                    "DirectPredictResponse": {
                      "fields": {
                        "outputs": {
                          "rule": "repeated",
                          "type": "Tensor",
                          "id": 1
                        },
                        "parameters": {
                          "type": "Tensor",
                          "id": 2
                        }
                      }
                    },
                    "DirectRawPredictRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "methodName": {
                          "type": "string",
                          "id": 2
                        },
                        "input": {
                          "type": "bytes",
                          "id": 3
                        }
                      }
                    },
                    "DirectRawPredictResponse": {
                      "fields": {
                        "output": {
                          "type": "bytes",
                          "id": 1
                        }
                      }
                    },
                    "StreamDirectPredictRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "inputs": {
                          "rule": "repeated",
                          "type": "Tensor",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "parameters": {
                          "type": "Tensor",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "StreamDirectPredictResponse": {
                      "fields": {
                        "outputs": {
                          "rule": "repeated",
                          "type": "Tensor",
                          "id": 1
                        },
                        "parameters": {
                          "type": "Tensor",
                          "id": 2
                        }
                      }
                    },
                    "StreamDirectRawPredictRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "methodName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "input": {
                          "type": "bytes",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "StreamDirectRawPredictResponse": {
                      "fields": {
                        "output": {
                          "type": "bytes",
                          "id": 1
                        }
                      }
                    },
                    "StreamingPredictRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "inputs": {
                          "rule": "repeated",
                          "type": "Tensor",
                          "id": 2
                        },
                        "parameters": {
                          "type": "Tensor",
                          "id": 3
                        }
                      }
                    },
                    "StreamingPredictResponse": {
                      "fields": {
                        "outputs": {
                          "rule": "repeated",
                          "type": "Tensor",
                          "id": 1
                        },
                        "parameters": {
                          "type": "Tensor",
                          "id": 2
                        }
                      }
                    },
                    "StreamingRawPredictRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "methodName": {
                          "type": "string",
                          "id": 2
                        },
                        "input": {
                          "type": "bytes",
                          "id": 3
                        }
                      }
                    },
                    "StreamingRawPredictResponse": {
                      "fields": {
                        "output": {
                          "type": "bytes",
                          "id": 1
                        }
                      }
                    },
                    "ExplainRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "instances": {
                          "rule": "repeated",
                          "type": "google.protobuf.Value",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "parameters": {
                          "type": "google.protobuf.Value",
                          "id": 4
                        },
                        "explanationSpecOverride": {
                          "type": "ExplanationSpecOverride",
                          "id": 5
                        },
                        "deployedModelId": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ExplainResponse": {
                      "fields": {
                        "explanations": {
                          "rule": "repeated",
                          "type": "Explanation",
                          "id": 1
                        },
                        "deployedModelId": {
                          "type": "string",
                          "id": 2
                        },
                        "predictions": {
                          "rule": "repeated",
                          "type": "google.protobuf.Value",
                          "id": 3
                        }
                      }
                    },
                    "CountTokensRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "model": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "instances": {
                          "rule": "repeated",
                          "type": "google.protobuf.Value",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "contents": {
                          "rule": "repeated",
                          "type": "Content",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CountTokensResponse": {
                      "fields": {
                        "totalTokens": {
                          "type": "int32",
                          "id": 1
                        },
                        "totalBillableCharacters": {
                          "type": "int32",
                          "id": 2
                        }
                      }
                    },
                    "GenerateContentRequest": {
                      "fields": {
                        "model": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "contents": {
                          "rule": "repeated",
                          "type": "Content",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "tools": {
                          "rule": "repeated",
                          "type": "Tool",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "safetySettings": {
                          "rule": "repeated",
                          "type": "SafetySetting",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "generationConfig": {
                          "type": "GenerationConfig",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "GenerateContentResponse": {
                      "fields": {
                        "candidates": {
                          "rule": "repeated",
                          "type": "Candidate",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "promptFeedback": {
                          "type": "PromptFeedback",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "usageMetadata": {
                          "type": "UsageMetadata",
                          "id": 4
                        }
                      },
                      "nested": {
                        "PromptFeedback": {
                          "fields": {
                            "blockReason": {
                              "type": "BlockedReason",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "safetyRatings": {
                              "rule": "repeated",
                              "type": "SafetyRating",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "blockReasonMessage": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          },
                          "nested": {
                            "BlockedReason": {
                              "values": {
                                "BLOCKED_REASON_UNSPECIFIED": 0,
                                "SAFETY": 1,
                                "OTHER": 2
                              }
                            }
                          }
                        },
                        "UsageMetadata": {
                          "fields": {
                            "promptTokenCount": {
                              "type": "int32",
                              "id": 1
                            },
                            "candidatesTokenCount": {
                              "type": "int32",
                              "id": 2
                            },
                            "totalTokenCount": {
                              "type": "int32",
                              "id": 3
                            }
                          }
                        }
                      }
                    },
                    "MatchService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "FindNeighbors": {
                          "requestType": "FindNeighborsRequest",
                          "responseType": "FindNeighborsResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{index_endpoint=projects/*/locations/*/indexEndpoints/*}:findNeighbors",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{index_endpoint=projects/*/locations/*/indexEndpoints/*}:findNeighbors",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "ReadIndexDatapoints": {
                          "requestType": "ReadIndexDatapointsRequest",
                          "responseType": "ReadIndexDatapointsResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{index_endpoint=projects/*/locations/*/indexEndpoints/*}:readIndexDatapoints",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{index_endpoint=projects/*/locations/*/indexEndpoints/*}:readIndexDatapoints",
                                "body": "*"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "FindNeighborsRequest": {
                      "fields": {
                        "indexEndpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/IndexEndpoint"
                          }
                        },
                        "deployedIndexId": {
                          "type": "string",
                          "id": 2
                        },
                        "queries": {
                          "rule": "repeated",
                          "type": "Query",
                          "id": 3
                        },
                        "returnFullDatapoint": {
                          "type": "bool",
                          "id": 4
                        }
                      },
                      "nested": {
                        "Query": {
                          "fields": {
                            "datapoint": {
                              "type": "IndexDatapoint",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "neighborCount": {
                              "type": "int32",
                              "id": 2
                            },
                            "perCrowdingAttributeNeighborCount": {
                              "type": "int32",
                              "id": 3
                            },
                            "approximateNeighborCount": {
                              "type": "int32",
                              "id": 4
                            },
                            "fractionLeafNodesToSearchOverride": {
                              "type": "double",
                              "id": 5
                            }
                          }
                        }
                      }
                    },
                    "FindNeighborsResponse": {
                      "fields": {
                        "nearestNeighbors": {
                          "rule": "repeated",
                          "type": "NearestNeighbors",
                          "id": 1
                        }
                      },
                      "nested": {
                        "Neighbor": {
                          "fields": {
                            "datapoint": {
                              "type": "IndexDatapoint",
                              "id": 1
                            },
                            "distance": {
                              "type": "double",
                              "id": 2
                            }
                          }
                        },
                        "NearestNeighbors": {
                          "fields": {
                            "id": {
                              "type": "string",
                              "id": 1
                            },
                            "neighbors": {
                              "rule": "repeated",
                              "type": "Neighbor",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "ReadIndexDatapointsRequest": {
                      "fields": {
                        "indexEndpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/IndexEndpoint"
                          }
                        },
                        "deployedIndexId": {
                          "type": "string",
                          "id": 2
                        },
                        "ids": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ReadIndexDatapointsResponse": {
                      "fields": {
                        "datapoints": {
                          "rule": "repeated",
                          "type": "IndexDatapoint",
                          "id": 1
                        }
                      }
                    },
                    "MetadataSchema": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/MetadataSchema",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/metadataStores/{metadata_store}/metadataSchemas/{metadata_schema}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "schemaVersion": {
                          "type": "string",
                          "id": 2
                        },
                        "schema": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "schemaType": {
                          "type": "MetadataSchemaType",
                          "id": 4
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 6
                        }
                      },
                      "nested": {
                        "MetadataSchemaType": {
                          "values": {
                            "METADATA_SCHEMA_TYPE_UNSPECIFIED": 0,
                            "ARTIFACT_TYPE": 1,
                            "EXECUTION_TYPE": 2,
                            "CONTEXT_TYPE": 3
                          }
                        }
                      }
                    },
                    "MetadataService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateMetadataStore": {
                          "requestType": "CreateMetadataStoreRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/metadataStores",
                            "(google.api.http).body": "metadata_store",
                            "(google.api.method_signature)": "parent,metadata_store,metadata_store_id",
                            "(google.longrunning.operation_info).response_type": "MetadataStore",
                            "(google.longrunning.operation_info).metadata_type": "CreateMetadataStoreOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/metadataStores",
                                "body": "metadata_store"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,metadata_store,metadata_store_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "MetadataStore",
                                "metadata_type": "CreateMetadataStoreOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetMetadataStore": {
                          "requestType": "GetMetadataStoreRequest",
                          "responseType": "MetadataStore",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/metadataStores/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/metadataStores/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListMetadataStores": {
                          "requestType": "ListMetadataStoresRequest",
                          "responseType": "ListMetadataStoresResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/metadataStores",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/metadataStores"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteMetadataStore": {
                          "requestType": "DeleteMetadataStoreRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/metadataStores/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteMetadataStoreOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/metadataStores/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteMetadataStoreOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CreateArtifact": {
                          "requestType": "CreateArtifactRequest",
                          "responseType": "Artifact",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/metadataStores/*}/artifacts",
                            "(google.api.http).body": "artifact",
                            "(google.api.method_signature)": "parent,artifact,artifact_id"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/metadataStores/*}/artifacts",
                                "body": "artifact"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,artifact,artifact_id"
                            }
                          ]
                        },
                        "GetArtifact": {
                          "requestType": "GetArtifactRequest",
                          "responseType": "Artifact",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/metadataStores/*/artifacts/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/metadataStores/*/artifacts/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListArtifacts": {
                          "requestType": "ListArtifactsRequest",
                          "responseType": "ListArtifactsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/metadataStores/*}/artifacts",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/metadataStores/*}/artifacts"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateArtifact": {
                          "requestType": "UpdateArtifactRequest",
                          "responseType": "Artifact",
                          "options": {
                            "(google.api.http).patch": "/v1/{artifact.name=projects/*/locations/*/metadataStores/*/artifacts/*}",
                            "(google.api.http).body": "artifact",
                            "(google.api.method_signature)": "artifact,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{artifact.name=projects/*/locations/*/metadataStores/*/artifacts/*}",
                                "body": "artifact"
                              }
                            },
                            {
                              "(google.api.method_signature)": "artifact,update_mask"
                            }
                          ]
                        },
                        "DeleteArtifact": {
                          "requestType": "DeleteArtifactRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/metadataStores/*/artifacts/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/metadataStores/*/artifacts/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "PurgeArtifacts": {
                          "requestType": "PurgeArtifactsRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/metadataStores/*}/artifacts:purge",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent",
                            "(google.longrunning.operation_info).response_type": "PurgeArtifactsResponse",
                            "(google.longrunning.operation_info).metadata_type": "PurgeArtifactsMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/metadataStores/*}/artifacts:purge",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "PurgeArtifactsResponse",
                                "metadata_type": "PurgeArtifactsMetadata"
                              }
                            }
                          ]
                        },
                        "CreateContext": {
                          "requestType": "CreateContextRequest",
                          "responseType": "Context",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/metadataStores/*}/contexts",
                            "(google.api.http).body": "context",
                            "(google.api.method_signature)": "parent,context,context_id"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/metadataStores/*}/contexts",
                                "body": "context"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,context,context_id"
                            }
                          ]
                        },
                        "GetContext": {
                          "requestType": "GetContextRequest",
                          "responseType": "Context",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/metadataStores/*/contexts/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/metadataStores/*/contexts/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListContexts": {
                          "requestType": "ListContextsRequest",
                          "responseType": "ListContextsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/metadataStores/*}/contexts",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/metadataStores/*}/contexts"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateContext": {
                          "requestType": "UpdateContextRequest",
                          "responseType": "Context",
                          "options": {
                            "(google.api.http).patch": "/v1/{context.name=projects/*/locations/*/metadataStores/*/contexts/*}",
                            "(google.api.http).body": "context",
                            "(google.api.method_signature)": "context,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{context.name=projects/*/locations/*/metadataStores/*/contexts/*}",
                                "body": "context"
                              }
                            },
                            {
                              "(google.api.method_signature)": "context,update_mask"
                            }
                          ]
                        },
                        "DeleteContext": {
                          "requestType": "DeleteContextRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/metadataStores/*/contexts/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/metadataStores/*/contexts/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "PurgeContexts": {
                          "requestType": "PurgeContextsRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/metadataStores/*}/contexts:purge",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent",
                            "(google.longrunning.operation_info).response_type": "PurgeContextsResponse",
                            "(google.longrunning.operation_info).metadata_type": "PurgeContextsMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/metadataStores/*}/contexts:purge",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "PurgeContextsResponse",
                                "metadata_type": "PurgeContextsMetadata"
                              }
                            }
                          ]
                        },
                        "AddContextArtifactsAndExecutions": {
                          "requestType": "AddContextArtifactsAndExecutionsRequest",
                          "responseType": "AddContextArtifactsAndExecutionsResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{context=projects/*/locations/*/metadataStores/*/contexts/*}:addContextArtifactsAndExecutions",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "context,artifacts,executions"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{context=projects/*/locations/*/metadataStores/*/contexts/*}:addContextArtifactsAndExecutions",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "context,artifacts,executions"
                            }
                          ]
                        },
                        "AddContextChildren": {
                          "requestType": "AddContextChildrenRequest",
                          "responseType": "AddContextChildrenResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{context=projects/*/locations/*/metadataStores/*/contexts/*}:addContextChildren",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "context,child_contexts"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{context=projects/*/locations/*/metadataStores/*/contexts/*}:addContextChildren",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "context,child_contexts"
                            }
                          ]
                        },
                        "RemoveContextChildren": {
                          "requestType": "RemoveContextChildrenRequest",
                          "responseType": "RemoveContextChildrenResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{context=projects/*/locations/*/metadataStores/*/contexts/*}:removeContextChildren",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "context,child_contexts"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{context=projects/*/locations/*/metadataStores/*/contexts/*}:removeContextChildren",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "context,child_contexts"
                            }
                          ]
                        },
                        "QueryContextLineageSubgraph": {
                          "requestType": "QueryContextLineageSubgraphRequest",
                          "responseType": "LineageSubgraph",
                          "options": {
                            "(google.api.http).get": "/v1/{context=projects/*/locations/*/metadataStores/*/contexts/*}:queryContextLineageSubgraph",
                            "(google.api.method_signature)": "context"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{context=projects/*/locations/*/metadataStores/*/contexts/*}:queryContextLineageSubgraph"
                              }
                            },
                            {
                              "(google.api.method_signature)": "context"
                            }
                          ]
                        },
                        "CreateExecution": {
                          "requestType": "CreateExecutionRequest",
                          "responseType": "Execution",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/metadataStores/*}/executions",
                            "(google.api.http).body": "execution",
                            "(google.api.method_signature)": "parent,execution,execution_id"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/metadataStores/*}/executions",
                                "body": "execution"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,execution,execution_id"
                            }
                          ]
                        },
                        "GetExecution": {
                          "requestType": "GetExecutionRequest",
                          "responseType": "Execution",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/metadataStores/*/executions/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/metadataStores/*/executions/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListExecutions": {
                          "requestType": "ListExecutionsRequest",
                          "responseType": "ListExecutionsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/metadataStores/*}/executions",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/metadataStores/*}/executions"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateExecution": {
                          "requestType": "UpdateExecutionRequest",
                          "responseType": "Execution",
                          "options": {
                            "(google.api.http).patch": "/v1/{execution.name=projects/*/locations/*/metadataStores/*/executions/*}",
                            "(google.api.http).body": "execution",
                            "(google.api.method_signature)": "execution,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{execution.name=projects/*/locations/*/metadataStores/*/executions/*}",
                                "body": "execution"
                              }
                            },
                            {
                              "(google.api.method_signature)": "execution,update_mask"
                            }
                          ]
                        },
                        "DeleteExecution": {
                          "requestType": "DeleteExecutionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/metadataStores/*/executions/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/metadataStores/*/executions/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "PurgeExecutions": {
                          "requestType": "PurgeExecutionsRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/metadataStores/*}/executions:purge",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent",
                            "(google.longrunning.operation_info).response_type": "PurgeExecutionsResponse",
                            "(google.longrunning.operation_info).metadata_type": "PurgeExecutionsMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/metadataStores/*}/executions:purge",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "PurgeExecutionsResponse",
                                "metadata_type": "PurgeExecutionsMetadata"
                              }
                            }
                          ]
                        },
                        "AddExecutionEvents": {
                          "requestType": "AddExecutionEventsRequest",
                          "responseType": "AddExecutionEventsResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{execution=projects/*/locations/*/metadataStores/*/executions/*}:addExecutionEvents",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "execution,events"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{execution=projects/*/locations/*/metadataStores/*/executions/*}:addExecutionEvents",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "execution,events"
                            }
                          ]
                        },
                        "QueryExecutionInputsAndOutputs": {
                          "requestType": "QueryExecutionInputsAndOutputsRequest",
                          "responseType": "LineageSubgraph",
                          "options": {
                            "(google.api.http).get": "/v1/{execution=projects/*/locations/*/metadataStores/*/executions/*}:queryExecutionInputsAndOutputs",
                            "(google.api.method_signature)": "execution"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{execution=projects/*/locations/*/metadataStores/*/executions/*}:queryExecutionInputsAndOutputs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "execution"
                            }
                          ]
                        },
                        "CreateMetadataSchema": {
                          "requestType": "CreateMetadataSchemaRequest",
                          "responseType": "MetadataSchema",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/metadataStores/*}/metadataSchemas",
                            "(google.api.http).body": "metadata_schema",
                            "(google.api.method_signature)": "parent,metadata_schema,metadata_schema_id"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/metadataStores/*}/metadataSchemas",
                                "body": "metadata_schema"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,metadata_schema,metadata_schema_id"
                            }
                          ]
                        },
                        "GetMetadataSchema": {
                          "requestType": "GetMetadataSchemaRequest",
                          "responseType": "MetadataSchema",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/metadataStores/*/metadataSchemas/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/metadataStores/*/metadataSchemas/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListMetadataSchemas": {
                          "requestType": "ListMetadataSchemasRequest",
                          "responseType": "ListMetadataSchemasResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/metadataStores/*}/metadataSchemas",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/metadataStores/*}/metadataSchemas"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "QueryArtifactLineageSubgraph": {
                          "requestType": "QueryArtifactLineageSubgraphRequest",
                          "responseType": "LineageSubgraph",
                          "options": {
                            "(google.api.http).get": "/v1/{artifact=projects/*/locations/*/metadataStores/*/artifacts/*}:queryArtifactLineageSubgraph",
                            "(google.api.method_signature)": "artifact"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{artifact=projects/*/locations/*/metadataStores/*/artifacts/*}:queryArtifactLineageSubgraph"
                              }
                            },
                            {
                              "(google.api.method_signature)": "artifact"
                            }
                          ]
                        }
                      }
                    },
                    "CreateMetadataStoreRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "metadataStore": {
                          "type": "MetadataStore",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "metadataStoreId": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "CreateMetadataStoreOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "GetMetadataStoreRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/MetadataStore"
                          }
                        }
                      }
                    },
                    "ListMetadataStoresRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListMetadataStoresResponse": {
                      "fields": {
                        "metadataStores": {
                          "rule": "repeated",
                          "type": "MetadataStore",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteMetadataStoreRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/MetadataStore"
                          }
                        },
                        "force": {
                          "type": "bool",
                          "id": 2,
                          "options": {
                            "deprecated": true
                          }
                        }
                      }
                    },
                    "DeleteMetadataStoreOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "CreateArtifactRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/MetadataStore"
                          }
                        },
                        "artifact": {
                          "type": "Artifact",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "artifactId": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "GetArtifactRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Artifact"
                          }
                        }
                      }
                    },
                    "ListArtifactsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/Artifact"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "filter": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ListArtifactsResponse": {
                      "fields": {
                        "artifacts": {
                          "rule": "repeated",
                          "type": "Artifact",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateArtifactRequest": {
                      "fields": {
                        "artifact": {
                          "type": "Artifact",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "allowMissing": {
                          "type": "bool",
                          "id": 3
                        }
                      }
                    },
                    "DeleteArtifactRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Artifact"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "PurgeArtifactsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/Artifact"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "force": {
                          "type": "bool",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "PurgeArtifactsResponse": {
                      "fields": {
                        "purgeCount": {
                          "type": "int64",
                          "id": 1
                        },
                        "purgeSample": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Artifact"
                          }
                        }
                      }
                    },
                    "PurgeArtifactsMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "CreateContextRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/MetadataStore"
                          }
                        },
                        "context": {
                          "type": "Context",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "contextId": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "GetContextRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Context"
                          }
                        }
                      }
                    },
                    "ListContextsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/Context"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "filter": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ListContextsResponse": {
                      "fields": {
                        "contexts": {
                          "rule": "repeated",
                          "type": "Context",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateContextRequest": {
                      "fields": {
                        "context": {
                          "type": "Context",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "allowMissing": {
                          "type": "bool",
                          "id": 3
                        }
                      }
                    },
                    "DeleteContextRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Context"
                          }
                        },
                        "force": {
                          "type": "bool",
                          "id": 2
                        },
                        "etag": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "PurgeContextsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/Context"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "force": {
                          "type": "bool",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "PurgeContextsResponse": {
                      "fields": {
                        "purgeCount": {
                          "type": "int64",
                          "id": 1
                        },
                        "purgeSample": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Context"
                          }
                        }
                      }
                    },
                    "PurgeContextsMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "AddContextArtifactsAndExecutionsRequest": {
                      "fields": {
                        "context": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Context"
                          }
                        },
                        "artifacts": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Artifact"
                          }
                        },
                        "executions": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Execution"
                          }
                        }
                      }
                    },
                    "AddContextArtifactsAndExecutionsResponse": {
                      "fields": {}
                    },
                    "AddContextChildrenRequest": {
                      "fields": {
                        "context": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Context"
                          }
                        },
                        "childContexts": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Context"
                          }
                        }
                      }
                    },
                    "AddContextChildrenResponse": {
                      "fields": {}
                    },
                    "RemoveContextChildrenRequest": {
                      "fields": {
                        "context": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Context"
                          }
                        },
                        "childContexts": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Context"
                          }
                        }
                      }
                    },
                    "RemoveContextChildrenResponse": {
                      "fields": {}
                    },
                    "QueryContextLineageSubgraphRequest": {
                      "fields": {
                        "context": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Context"
                          }
                        }
                      }
                    },
                    "CreateExecutionRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/MetadataStore"
                          }
                        },
                        "execution": {
                          "type": "Execution",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "executionId": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "GetExecutionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Execution"
                          }
                        }
                      }
                    },
                    "ListExecutionsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/Execution"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "filter": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ListExecutionsResponse": {
                      "fields": {
                        "executions": {
                          "rule": "repeated",
                          "type": "Execution",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateExecutionRequest": {
                      "fields": {
                        "execution": {
                          "type": "Execution",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "allowMissing": {
                          "type": "bool",
                          "id": 3
                        }
                      }
                    },
                    "DeleteExecutionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Execution"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "PurgeExecutionsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/Execution"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "force": {
                          "type": "bool",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "PurgeExecutionsResponse": {
                      "fields": {
                        "purgeCount": {
                          "type": "int64",
                          "id": 1
                        },
                        "purgeSample": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Execution"
                          }
                        }
                      }
                    },
                    "PurgeExecutionsMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "AddExecutionEventsRequest": {
                      "fields": {
                        "execution": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Execution"
                          }
                        },
                        "events": {
                          "rule": "repeated",
                          "type": "Event",
                          "id": 2
                        }
                      }
                    },
                    "AddExecutionEventsResponse": {
                      "fields": {}
                    },
                    "QueryExecutionInputsAndOutputsRequest": {
                      "fields": {
                        "execution": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Execution"
                          }
                        }
                      }
                    },
                    "CreateMetadataSchemaRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/MetadataStore"
                          }
                        },
                        "metadataSchema": {
                          "type": "MetadataSchema",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "metadataSchemaId": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "GetMetadataSchemaRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/MetadataSchema"
                          }
                        }
                      }
                    },
                    "ListMetadataSchemasRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/MetadataSchema"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "filter": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "ListMetadataSchemasResponse": {
                      "fields": {
                        "metadataSchemas": {
                          "rule": "repeated",
                          "type": "MetadataSchema",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "QueryArtifactLineageSubgraphRequest": {
                      "fields": {
                        "artifact": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Artifact"
                          }
                        },
                        "maxHops": {
                          "type": "int32",
                          "id": 2
                        },
                        "filter": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "MetadataStore": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/MetadataStore",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/metadataStores/{metadata_store}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 5
                        },
                        "description": {
                          "type": "string",
                          "id": 6
                        },
                        "state": {
                          "type": "MetadataStoreState",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "MetadataStoreState": {
                          "fields": {
                            "diskUtilizationBytes": {
                              "type": "int64",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "MigratableResource": {
                      "oneofs": {
                        "resource": {
                          "oneof": [
                            "mlEngineModelVersion",
                            "automlModel",
                            "automlDataset",
                            "dataLabelingDataset"
                          ]
                        }
                      },
                      "fields": {
                        "mlEngineModelVersion": {
                          "type": "MlEngineModelVersion",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "automlModel": {
                          "type": "AutomlModel",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "automlDataset": {
                          "type": "AutomlDataset",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "dataLabelingDataset": {
                          "type": "DataLabelingDataset",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "lastMigrateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "lastUpdateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "MlEngineModelVersion": {
                          "fields": {
                            "endpoint": {
                              "type": "string",
                              "id": 1
                            },
                            "version": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.resource_reference).type": "ml.googleapis.com/Version"
                              }
                            }
                          }
                        },
                        "AutomlModel": {
                          "fields": {
                            "model": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "automl.googleapis.com/Model"
                              }
                            },
                            "modelDisplayName": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "AutomlDataset": {
                          "fields": {
                            "dataset": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "automl.googleapis.com/Dataset"
                              }
                            },
                            "datasetDisplayName": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "DataLabelingDataset": {
                          "fields": {
                            "dataset": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "datalabeling.googleapis.com/Dataset"
                              }
                            },
                            "datasetDisplayName": {
                              "type": "string",
                              "id": 4
                            },
                            "dataLabelingAnnotatedDatasets": {
                              "rule": "repeated",
                              "type": "DataLabelingAnnotatedDataset",
                              "id": 3
                            }
                          },
                          "nested": {
                            "DataLabelingAnnotatedDataset": {
                              "fields": {
                                "annotatedDataset": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.resource_reference).type": "datalabeling.googleapis.com/AnnotatedDataset"
                                  }
                                },
                                "annotatedDatasetDisplayName": {
                                  "type": "string",
                                  "id": 3
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "MigrationService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "SearchMigratableResources": {
                          "requestType": "SearchMigratableResourcesRequest",
                          "responseType": "SearchMigratableResourcesResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/migratableResources:search",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/migratableResources:search",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "BatchMigrateResources": {
                          "requestType": "BatchMigrateResourcesRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/migratableResources:batchMigrate",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,migrate_resource_requests",
                            "(google.longrunning.operation_info).response_type": "BatchMigrateResourcesResponse",
                            "(google.longrunning.operation_info).metadata_type": "BatchMigrateResourcesOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/migratableResources:batchMigrate",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,migrate_resource_requests"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "BatchMigrateResourcesResponse",
                                "metadata_type": "BatchMigrateResourcesOperationMetadata"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "SearchMigratableResourcesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "filter": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "SearchMigratableResourcesResponse": {
                      "fields": {
                        "migratableResources": {
                          "rule": "repeated",
                          "type": "MigratableResource",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "BatchMigrateResourcesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "migrateResourceRequests": {
                          "rule": "repeated",
                          "type": "MigrateResourceRequest",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "MigrateResourceRequest": {
                      "oneofs": {
                        "request": {
                          "oneof": [
                            "migrateMlEngineModelVersionConfig",
                            "migrateAutomlModelConfig",
                            "migrateAutomlDatasetConfig",
                            "migrateDataLabelingDatasetConfig"
                          ]
                        }
                      },
                      "fields": {
                        "migrateMlEngineModelVersionConfig": {
                          "type": "MigrateMlEngineModelVersionConfig",
                          "id": 1
                        },
                        "migrateAutomlModelConfig": {
                          "type": "MigrateAutomlModelConfig",
                          "id": 2
                        },
                        "migrateAutomlDatasetConfig": {
                          "type": "MigrateAutomlDatasetConfig",
                          "id": 3
                        },
                        "migrateDataLabelingDatasetConfig": {
                          "type": "MigrateDataLabelingDatasetConfig",
                          "id": 4
                        }
                      },
                      "nested": {
                        "MigrateMlEngineModelVersionConfig": {
                          "fields": {
                            "endpoint": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "modelVersion": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "ml.googleapis.com/Version"
                              }
                            },
                            "modelDisplayName": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "MigrateAutomlModelConfig": {
                          "fields": {
                            "model": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "automl.googleapis.com/Model"
                              }
                            },
                            "modelDisplayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "MigrateAutomlDatasetConfig": {
                          "fields": {
                            "dataset": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "automl.googleapis.com/Dataset"
                              }
                            },
                            "datasetDisplayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "MigrateDataLabelingDatasetConfig": {
                          "fields": {
                            "dataset": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "datalabeling.googleapis.com/Dataset"
                              }
                            },
                            "datasetDisplayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "migrateDataLabelingAnnotatedDatasetConfigs": {
                              "rule": "repeated",
                              "type": "MigrateDataLabelingAnnotatedDatasetConfig",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          },
                          "nested": {
                            "MigrateDataLabelingAnnotatedDatasetConfig": {
                              "fields": {
                                "annotatedDataset": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED",
                                    "(google.api.resource_reference).type": "datalabeling.googleapis.com/AnnotatedDataset"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "BatchMigrateResourcesResponse": {
                      "fields": {
                        "migrateResourceResponses": {
                          "rule": "repeated",
                          "type": "MigrateResourceResponse",
                          "id": 1
                        }
                      }
                    },
                    "MigrateResourceResponse": {
                      "oneofs": {
                        "migratedResource": {
                          "oneof": [
                            "dataset",
                            "model"
                          ]
                        }
                      },
                      "fields": {
                        "dataset": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "model": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "migratableResource": {
                          "type": "MigratableResource",
                          "id": 3
                        }
                      }
                    },
                    "BatchMigrateResourcesOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        },
                        "partialResults": {
                          "rule": "repeated",
                          "type": "PartialResult",
                          "id": 2
                        }
                      },
                      "nested": {
                        "PartialResult": {
                          "oneofs": {
                            "result": {
                              "oneof": [
                                "error",
                                "model",
                                "dataset"
                              ]
                            }
                          },
                          "fields": {
                            "error": {
                              "type": "google.rpc.Status",
                              "id": 2
                            },
                            "model": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                              }
                            },
                            "dataset": {
                              "type": "string",
                              "id": 4,
                              "options": {
                                "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                              }
                            },
                            "request": {
                              "type": "MigrateResourceRequest",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "ModelEvaluation": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/ModelEvaluation",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 10
                        },
                        "metricsSchemaUri": {
                          "type": "string",
                          "id": 2
                        },
                        "metrics": {
                          "type": "google.protobuf.Value",
                          "id": 3
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "sliceDimensions": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 5
                        },
                        "dataItemSchemaUri": {
                          "type": "string",
                          "id": 6
                        },
                        "annotationSchemaUri": {
                          "type": "string",
                          "id": 7
                        },
                        "modelExplanation": {
                          "type": "ModelExplanation",
                          "id": 8
                        },
                        "explanationSpecs": {
                          "rule": "repeated",
                          "type": "ModelEvaluationExplanationSpec",
                          "id": 9
                        },
                        "metadata": {
                          "type": "google.protobuf.Value",
                          "id": 11
                        }
                      },
                      "nested": {
                        "ModelEvaluationExplanationSpec": {
                          "fields": {
                            "explanationType": {
                              "type": "string",
                              "id": 1
                            },
                            "explanationSpec": {
                              "type": "ExplanationSpec",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "ModelEvaluationSlice": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/ModelEvaluationSlice",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}/slices/{slice}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "slice": {
                          "type": "Slice",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "metricsSchemaUri": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "metrics": {
                          "type": "google.protobuf.Value",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "modelExplanation": {
                          "type": "ModelExplanation",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "Slice": {
                          "fields": {
                            "dimension": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "value": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "sliceSpec": {
                              "type": "SliceSpec",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          },
                          "nested": {
                            "SliceSpec": {
                              "fields": {
                                "configs": {
                                  "keyType": "string",
                                  "type": "SliceConfig",
                                  "id": 1
                                }
                              },
                              "nested": {
                                "SliceConfig": {
                                  "oneofs": {
                                    "kind": {
                                      "oneof": [
                                        "value",
                                        "range",
                                        "allValues"
                                      ]
                                    }
                                  },
                                  "fields": {
                                    "value": {
                                      "type": "Value",
                                      "id": 1
                                    },
                                    "range": {
                                      "type": "Range",
                                      "id": 2
                                    },
                                    "allValues": {
                                      "type": "google.protobuf.BoolValue",
                                      "id": 3
                                    }
                                  }
                                },
                                "Range": {
                                  "fields": {
                                    "low": {
                                      "type": "float",
                                      "id": 1
                                    },
                                    "high": {
                                      "type": "float",
                                      "id": 2
                                    }
                                  }
                                },
                                "Value": {
                                  "oneofs": {
                                    "kind": {
                                      "oneof": [
                                        "stringValue",
                                        "floatValue"
                                      ]
                                    }
                                  },
                                  "fields": {
                                    "stringValue": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "floatValue": {
                                      "type": "float",
                                      "id": 2
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "ModelGardenService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "GetPublisherModel": {
                          "requestType": "GetPublisherModelRequest",
                          "responseType": "PublisherModel",
                          "options": {
                            "(google.api.http).get": "/v1/{name=publishers/*/models/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=publishers/*/models/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        }
                      }
                    },
                    "PublisherModelView": {
                      "values": {
                        "PUBLISHER_MODEL_VIEW_UNSPECIFIED": 0,
                        "PUBLISHER_MODEL_VIEW_BASIC": 1,
                        "PUBLISHER_MODEL_VIEW_FULL": 2,
                        "PUBLISHER_MODEL_VERSION_VIEW_BASIC": 3
                      }
                    },
                    "GetPublisherModelRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/PublisherModel"
                          }
                        },
                        "languageCode": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "view": {
                          "type": "PublisherModelView",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "PublisherModel": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/PublisherModel",
                        "(google.api.resource).pattern": "publishers/{publisher}/models/{model}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "versionId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "openSourceCategory": {
                          "type": "OpenSourceCategory",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "supportedActions": {
                          "type": "CallToAction",
                          "id": 19,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "frameworks": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 23,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "launchStage": {
                          "type": "LaunchStage",
                          "id": 29,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "versionState": {
                          "type": "VersionState",
                          "id": 37,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "publisherModelTemplate": {
                          "type": "string",
                          "id": 30,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "predictSchemata": {
                          "type": "PredictSchemata",
                          "id": 31,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "ResourceReference": {
                          "oneofs": {
                            "reference": {
                              "oneof": [
                                "uri",
                                "resourceName",
                                "useCase",
                                "description"
                              ]
                            }
                          },
                          "fields": {
                            "uri": {
                              "type": "string",
                              "id": 1
                            },
                            "resourceName": {
                              "type": "string",
                              "id": 2
                            },
                            "useCase": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "deprecated": true
                              }
                            },
                            "description": {
                              "type": "string",
                              "id": 4,
                              "options": {
                                "deprecated": true
                              }
                            }
                          }
                        },
                        "Documentation": {
                          "fields": {
                            "title": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "content": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "CallToAction": {
                          "oneofs": {
                            "_openNotebooks": {
                              "oneof": [
                                "openNotebooks"
                              ]
                            },
                            "_openFineTuningPipelines": {
                              "oneof": [
                                "openFineTuningPipelines"
                              ]
                            }
                          },
                          "fields": {
                            "viewRestApi": {
                              "type": "ViewRestApi",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "openNotebook": {
                              "type": "RegionalResourceReferences",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "openNotebooks": {
                              "type": "OpenNotebooks",
                              "id": 12,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            },
                            "createApplication": {
                              "type": "RegionalResourceReferences",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "openFineTuningPipeline": {
                              "type": "RegionalResourceReferences",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "openFineTuningPipelines": {
                              "type": "OpenFineTuningPipelines",
                              "id": 13,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            },
                            "openPromptTuningPipeline": {
                              "type": "RegionalResourceReferences",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "openGenie": {
                              "type": "RegionalResourceReferences",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "deploy": {
                              "type": "Deploy",
                              "id": 7,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "deployGke": {
                              "type": "DeployGke",
                              "id": 14,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "openGenerationAiStudio": {
                              "type": "RegionalResourceReferences",
                              "id": 8,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "requestAccess": {
                              "type": "RegionalResourceReferences",
                              "id": 9,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "openEvaluationPipeline": {
                              "type": "RegionalResourceReferences",
                              "id": 11,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          },
                          "nested": {
                            "RegionalResourceReferences": {
                              "oneofs": {
                                "_resourceTitle": {
                                  "oneof": [
                                    "resourceTitle"
                                  ]
                                },
                                "_resourceUseCase": {
                                  "oneof": [
                                    "resourceUseCase"
                                  ]
                                },
                                "_resourceDescription": {
                                  "oneof": [
                                    "resourceDescription"
                                  ]
                                }
                              },
                              "fields": {
                                "references": {
                                  "keyType": "string",
                                  "type": "ResourceReference",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "title": {
                                  "type": "string",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "resourceTitle": {
                                  "type": "string",
                                  "id": 3,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL",
                                    "proto3_optional": true
                                  }
                                },
                                "resourceUseCase": {
                                  "type": "string",
                                  "id": 4,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL",
                                    "proto3_optional": true
                                  }
                                },
                                "resourceDescription": {
                                  "type": "string",
                                  "id": 5,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL",
                                    "proto3_optional": true
                                  }
                                }
                              }
                            },
                            "ViewRestApi": {
                              "fields": {
                                "documentations": {
                                  "rule": "repeated",
                                  "type": "Documentation",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "title": {
                                  "type": "string",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              }
                            },
                            "OpenNotebooks": {
                              "fields": {
                                "notebooks": {
                                  "rule": "repeated",
                                  "type": "RegionalResourceReferences",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              }
                            },
                            "OpenFineTuningPipelines": {
                              "fields": {
                                "fineTuningPipelines": {
                                  "rule": "repeated",
                                  "type": "RegionalResourceReferences",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              }
                            },
                            "Deploy": {
                              "oneofs": {
                                "predictionResources": {
                                  "oneof": [
                                    "dedicatedResources",
                                    "automaticResources",
                                    "sharedResources"
                                  ]
                                }
                              },
                              "fields": {
                                "dedicatedResources": {
                                  "type": "DedicatedResources",
                                  "id": 5
                                },
                                "automaticResources": {
                                  "type": "AutomaticResources",
                                  "id": 6
                                },
                                "sharedResources": {
                                  "type": "string",
                                  "id": 7
                                },
                                "modelDisplayName": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "largeModelReference": {
                                  "type": "LargeModelReference",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "containerSpec": {
                                  "type": "ModelContainerSpec",
                                  "id": 3,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "artifactUri": {
                                  "type": "string",
                                  "id": 4,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "title": {
                                  "type": "string",
                                  "id": 8,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "publicArtifactUri": {
                                  "type": "string",
                                  "id": 9,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                }
                              }
                            },
                            "DeployGke": {
                              "fields": {
                                "gkeYamlConfigs": {
                                  "rule": "repeated",
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "OpenSourceCategory": {
                          "values": {
                            "OPEN_SOURCE_CATEGORY_UNSPECIFIED": 0,
                            "PROPRIETARY": 1,
                            "GOOGLE_OWNED_OSS_WITH_GOOGLE_CHECKPOINT": 2,
                            "THIRD_PARTY_OWNED_OSS_WITH_GOOGLE_CHECKPOINT": 3,
                            "GOOGLE_OWNED_OSS": 4,
                            "THIRD_PARTY_OWNED_OSS": 5
                          }
                        },
                        "LaunchStage": {
                          "values": {
                            "LAUNCH_STAGE_UNSPECIFIED": 0,
                            "EXPERIMENTAL": 1,
                            "PRIVATE_PREVIEW": 2,
                            "PUBLIC_PREVIEW": 3,
                            "GA": 4
                          }
                        },
                        "VersionState": {
                          "values": {
                            "VERSION_STATE_UNSPECIFIED": 0,
                            "VERSION_STATE_STABLE": 1,
                            "VERSION_STATE_UNSTABLE": 2
                          }
                        }
                      }
                    },
                    "ModelService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "UploadModel": {
                          "requestType": "UploadModelRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/models:upload",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,model",
                            "(google.longrunning.operation_info).response_type": "UploadModelResponse",
                            "(google.longrunning.operation_info).metadata_type": "UploadModelOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/models:upload",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,model"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "UploadModelResponse",
                                "metadata_type": "UploadModelOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetModel": {
                          "requestType": "GetModelRequest",
                          "responseType": "Model",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/models/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/models/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListModels": {
                          "requestType": "ListModelsRequest",
                          "responseType": "ListModelsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/models",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/models"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "ListModelVersions": {
                          "requestType": "ListModelVersionsRequest",
                          "responseType": "ListModelVersionsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/models/*}:listVersions",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/models/*}:listVersions"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "UpdateModel": {
                          "requestType": "UpdateModelRequest",
                          "responseType": "Model",
                          "options": {
                            "(google.api.http).patch": "/v1/{model.name=projects/*/locations/*/models/*}",
                            "(google.api.http).body": "model",
                            "(google.api.method_signature)": "model,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{model.name=projects/*/locations/*/models/*}",
                                "body": "model"
                              }
                            },
                            {
                              "(google.api.method_signature)": "model,update_mask"
                            }
                          ]
                        },
                        "UpdateExplanationDataset": {
                          "requestType": "UpdateExplanationDatasetRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{model=projects/*/locations/*/models/*}:updateExplanationDataset",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "model",
                            "(google.longrunning.operation_info).response_type": "UpdateExplanationDatasetResponse",
                            "(google.longrunning.operation_info).metadata_type": "UpdateExplanationDatasetOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{model=projects/*/locations/*/models/*}:updateExplanationDataset",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "model"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "UpdateExplanationDatasetResponse",
                                "metadata_type": "UpdateExplanationDatasetOperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteModel": {
                          "requestType": "DeleteModelRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/models/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/models/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteModelVersion": {
                          "requestType": "DeleteModelVersionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/models/*}:deleteVersion",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/models/*}:deleteVersion"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "MergeVersionAliases": {
                          "requestType": "MergeVersionAliasesRequest",
                          "responseType": "Model",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/models/*}:mergeVersionAliases",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name,version_aliases"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/models/*}:mergeVersionAliases",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,version_aliases"
                            }
                          ]
                        },
                        "ExportModel": {
                          "requestType": "ExportModelRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/models/*}:export",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name,output_config",
                            "(google.longrunning.operation_info).response_type": "ExportModelResponse",
                            "(google.longrunning.operation_info).metadata_type": "ExportModelOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/models/*}:export",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,output_config"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ExportModelResponse",
                                "metadata_type": "ExportModelOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CopyModel": {
                          "requestType": "CopyModelRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/models:copy",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,source_model",
                            "(google.longrunning.operation_info).response_type": "CopyModelResponse",
                            "(google.longrunning.operation_info).metadata_type": "CopyModelOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/models:copy",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,source_model"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "CopyModelResponse",
                                "metadata_type": "CopyModelOperationMetadata"
                              }
                            }
                          ]
                        },
                        "ImportModelEvaluation": {
                          "requestType": "ImportModelEvaluationRequest",
                          "responseType": "ModelEvaluation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/models/*}/evaluations:import",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,model_evaluation"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/models/*}/evaluations:import",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,model_evaluation"
                            }
                          ]
                        },
                        "BatchImportModelEvaluationSlices": {
                          "requestType": "BatchImportModelEvaluationSlicesRequest",
                          "responseType": "BatchImportModelEvaluationSlicesResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/models/*/evaluations/*}/slices:batchImport",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,model_evaluation_slices"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/models/*/evaluations/*}/slices:batchImport",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,model_evaluation_slices"
                            }
                          ]
                        },
                        "BatchImportEvaluatedAnnotations": {
                          "requestType": "BatchImportEvaluatedAnnotationsRequest",
                          "responseType": "BatchImportEvaluatedAnnotationsResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/models/*/evaluations/*/slices/*}:batchImport",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,evaluated_annotations"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/models/*/evaluations/*/slices/*}:batchImport",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,evaluated_annotations"
                            }
                          ]
                        },
                        "GetModelEvaluation": {
                          "requestType": "GetModelEvaluationRequest",
                          "responseType": "ModelEvaluation",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/models/*/evaluations/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/models/*/evaluations/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListModelEvaluations": {
                          "requestType": "ListModelEvaluationsRequest",
                          "responseType": "ListModelEvaluationsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/models/*}/evaluations",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/models/*}/evaluations"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetModelEvaluationSlice": {
                          "requestType": "GetModelEvaluationSliceRequest",
                          "responseType": "ModelEvaluationSlice",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/models/*/evaluations/*/slices/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/models/*/evaluations/*/slices/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListModelEvaluationSlices": {
                          "requestType": "ListModelEvaluationSlicesRequest",
                          "responseType": "ListModelEvaluationSlicesResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/models/*/evaluations/*}/slices",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/models/*/evaluations/*}/slices"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        }
                      }
                    },
                    "UploadModelRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "parentModel": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "modelId": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "model": {
                          "type": "Model",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "serviceAccount": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "UploadModelOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "UploadModelResponse": {
                      "fields": {
                        "model": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "modelVersionId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "GetModelRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        }
                      }
                    },
                    "ListModelsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 6
                        }
                      }
                    },
                    "ListModelsResponse": {
                      "fields": {
                        "models": {
                          "rule": "repeated",
                          "type": "Model",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "ListModelVersionsRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "filter": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 6
                        }
                      }
                    },
                    "ListModelVersionsResponse": {
                      "fields": {
                        "models": {
                          "rule": "repeated",
                          "type": "Model",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateModelRequest": {
                      "fields": {
                        "model": {
                          "type": "Model",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UpdateExplanationDatasetRequest": {
                      "fields": {
                        "model": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "examples": {
                          "type": "Examples",
                          "id": 2
                        }
                      }
                    },
                    "UpdateExplanationDatasetOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "DeleteModelRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        }
                      }
                    },
                    "DeleteModelVersionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        }
                      }
                    },
                    "MergeVersionAliasesRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "versionAliases": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ExportModelRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "outputConfig": {
                          "type": "OutputConfig",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      },
                      "nested": {
                        "OutputConfig": {
                          "fields": {
                            "exportFormatId": {
                              "type": "string",
                              "id": 1
                            },
                            "artifactDestination": {
                              "type": "GcsDestination",
                              "id": 3
                            },
                            "imageDestination": {
                              "type": "ContainerRegistryDestination",
                              "id": 4
                            }
                          }
                        }
                      }
                    },
                    "ExportModelOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        },
                        "outputInfo": {
                          "type": "OutputInfo",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "OutputInfo": {
                          "fields": {
                            "artifactOutputUri": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "imageOutputUri": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        }
                      }
                    },
                    "UpdateExplanationDatasetResponse": {
                      "fields": {}
                    },
                    "ExportModelResponse": {
                      "fields": {}
                    },
                    "CopyModelRequest": {
                      "oneofs": {
                        "destinationModel": {
                          "oneof": [
                            "modelId",
                            "parentModel"
                          ]
                        }
                      },
                      "fields": {
                        "modelId": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "parentModel": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "sourceModel": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 3
                        }
                      }
                    },
                    "CopyModelOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "CopyModelResponse": {
                      "fields": {
                        "model": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "modelVersionId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "ImportModelEvaluationRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "modelEvaluation": {
                          "type": "ModelEvaluation",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "BatchImportModelEvaluationSlicesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/ModelEvaluation"
                          }
                        },
                        "modelEvaluationSlices": {
                          "rule": "repeated",
                          "type": "ModelEvaluationSlice",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "BatchImportModelEvaluationSlicesResponse": {
                      "fields": {
                        "importedModelEvaluationSlices": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "BatchImportEvaluatedAnnotationsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/ModelEvaluationSlice"
                          }
                        },
                        "evaluatedAnnotations": {
                          "rule": "repeated",
                          "type": "EvaluatedAnnotation",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "BatchImportEvaluatedAnnotationsResponse": {
                      "fields": {
                        "importedEvaluatedAnnotationsCount": {
                          "type": "int32",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "GetModelEvaluationRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/ModelEvaluation"
                          }
                        }
                      }
                    },
                    "ListModelEvaluationsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListModelEvaluationsResponse": {
                      "fields": {
                        "modelEvaluations": {
                          "rule": "repeated",
                          "type": "ModelEvaluation",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetModelEvaluationSliceRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/ModelEvaluationSlice"
                          }
                        }
                      }
                    },
                    "ListModelEvaluationSlicesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/ModelEvaluation"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListModelEvaluationSlicesResponse": {
                      "fields": {
                        "modelEvaluationSlices": {
                          "rule": "repeated",
                          "type": "ModelEvaluationSlice",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "PipelineFailurePolicy": {
                      "values": {
                        "PIPELINE_FAILURE_POLICY_UNSPECIFIED": 0,
                        "PIPELINE_FAILURE_POLICY_FAIL_SLOW": 1,
                        "PIPELINE_FAILURE_POLICY_FAIL_FAST": 2
                      }
                    },
                    "PipelineJob": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/PipelineJob",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/pipelineJobs/{pipeline_job}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "pipelineSpec": {
                          "type": "google.protobuf.Struct",
                          "id": 7
                        },
                        "state": {
                          "type": "PipelineState",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "jobDetail": {
                          "type": "PipelineJobDetail",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 11
                        },
                        "runtimeConfig": {
                          "type": "RuntimeConfig",
                          "id": 12
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 16
                        },
                        "serviceAccount": {
                          "type": "string",
                          "id": 17
                        },
                        "network": {
                          "type": "string",
                          "id": 18,
                          "options": {
                            "(google.api.resource_reference).type": "compute.googleapis.com/Network"
                          }
                        },
                        "reservedIpRanges": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 25
                        },
                        "templateUri": {
                          "type": "string",
                          "id": 19
                        },
                        "templateMetadata": {
                          "type": "PipelineTemplateMetadata",
                          "id": 20,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "scheduleName": {
                          "type": "string",
                          "id": 22,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "RuntimeConfig": {
                          "fields": {
                            "parameters": {
                              "keyType": "string",
                              "type": "Value",
                              "id": 1,
                              "options": {
                                "deprecated": true
                              }
                            },
                            "gcsOutputDirectory": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "parameterValues": {
                              "keyType": "string",
                              "type": "google.protobuf.Value",
                              "id": 3
                            },
                            "failurePolicy": {
                              "type": "PipelineFailurePolicy",
                              "id": 4
                            },
                            "inputArtifacts": {
                              "keyType": "string",
                              "type": "InputArtifact",
                              "id": 5
                            }
                          },
                          "nested": {
                            "InputArtifact": {
                              "oneofs": {
                                "kind": {
                                  "oneof": [
                                    "artifactId"
                                  ]
                                }
                              },
                              "fields": {
                                "artifactId": {
                                  "type": "string",
                                  "id": 1
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "PipelineTemplateMetadata": {
                      "fields": {
                        "version": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "PipelineJobDetail": {
                      "fields": {
                        "pipelineContext": {
                          "type": "Context",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "pipelineRunContext": {
                          "type": "Context",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "taskDetails": {
                          "rule": "repeated",
                          "type": "PipelineTaskDetail",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "PipelineTaskDetail": {
                      "fields": {
                        "taskId": {
                          "type": "int64",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "parentTaskId": {
                          "type": "int64",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "taskName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "executorDetail": {
                          "type": "PipelineTaskExecutorDetail",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "execution": {
                          "type": "Execution",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "pipelineTaskStatus": {
                          "rule": "repeated",
                          "type": "PipelineTaskStatus",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "inputs": {
                          "keyType": "string",
                          "type": "ArtifactList",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "outputs": {
                          "keyType": "string",
                          "type": "ArtifactList",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "PipelineTaskStatus": {
                          "fields": {
                            "updateTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "state": {
                              "type": "State",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "error": {
                              "type": "google.rpc.Status",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        },
                        "ArtifactList": {
                          "fields": {
                            "artifacts": {
                              "rule": "repeated",
                              "type": "Artifact",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        },
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "PENDING": 1,
                            "RUNNING": 2,
                            "SUCCEEDED": 3,
                            "CANCEL_PENDING": 4,
                            "CANCELLING": 5,
                            "CANCELLED": 6,
                            "FAILED": 7,
                            "SKIPPED": 8,
                            "NOT_TRIGGERED": 9
                          }
                        }
                      }
                    },
                    "PipelineTaskExecutorDetail": {
                      "oneofs": {
                        "details": {
                          "oneof": [
                            "containerDetail",
                            "customJobDetail"
                          ]
                        }
                      },
                      "fields": {
                        "containerDetail": {
                          "type": "ContainerDetail",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "customJobDetail": {
                          "type": "CustomJobDetail",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "ContainerDetail": {
                          "fields": {
                            "mainJob": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY",
                                "(google.api.resource_reference).type": "aiplatform.googleapis.com/CustomJob"
                              }
                            },
                            "preCachingCheckJob": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY",
                                "(google.api.resource_reference).type": "aiplatform.googleapis.com/CustomJob"
                              }
                            },
                            "failedMainJobs": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "failedPreCachingCheckJobs": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        },
                        "CustomJobDetail": {
                          "fields": {
                            "job": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY",
                                "(google.api.resource_reference).type": "aiplatform.googleapis.com/CustomJob"
                              }
                            },
                            "failedJobs": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        }
                      }
                    },
                    "PipelineState": {
                      "values": {
                        "PIPELINE_STATE_UNSPECIFIED": 0,
                        "PIPELINE_STATE_QUEUED": 1,
                        "PIPELINE_STATE_PENDING": 2,
                        "PIPELINE_STATE_RUNNING": 3,
                        "PIPELINE_STATE_SUCCEEDED": 4,
                        "PIPELINE_STATE_FAILED": 5,
                        "PIPELINE_STATE_CANCELLING": 6,
                        "PIPELINE_STATE_CANCELLED": 7,
                        "PIPELINE_STATE_PAUSED": 8
                      }
                    },
                    "Value": {
                      "oneofs": {
                        "value": {
                          "oneof": [
                            "intValue",
                            "doubleValue",
                            "stringValue"
                          ]
                        }
                      },
                      "fields": {
                        "intValue": {
                          "type": "int64",
                          "id": 1
                        },
                        "doubleValue": {
                          "type": "double",
                          "id": 2
                        },
                        "stringValue": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "PipelineService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateTrainingPipeline": {
                          "requestType": "CreateTrainingPipelineRequest",
                          "responseType": "TrainingPipeline",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/trainingPipelines",
                            "(google.api.http).body": "training_pipeline",
                            "(google.api.method_signature)": "parent,training_pipeline"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/trainingPipelines",
                                "body": "training_pipeline"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,training_pipeline"
                            }
                          ]
                        },
                        "GetTrainingPipeline": {
                          "requestType": "GetTrainingPipelineRequest",
                          "responseType": "TrainingPipeline",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/trainingPipelines/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/trainingPipelines/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListTrainingPipelines": {
                          "requestType": "ListTrainingPipelinesRequest",
                          "responseType": "ListTrainingPipelinesResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/trainingPipelines",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/trainingPipelines"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteTrainingPipeline": {
                          "requestType": "DeleteTrainingPipelineRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/trainingPipelines/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/trainingPipelines/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CancelTrainingPipeline": {
                          "requestType": "CancelTrainingPipelineRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/trainingPipelines/*}:cancel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/trainingPipelines/*}:cancel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreatePipelineJob": {
                          "requestType": "CreatePipelineJobRequest",
                          "responseType": "PipelineJob",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/pipelineJobs",
                            "(google.api.http).body": "pipeline_job",
                            "(google.api.method_signature)": "parent,pipeline_job,pipeline_job_id"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/pipelineJobs",
                                "body": "pipeline_job"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,pipeline_job,pipeline_job_id"
                            }
                          ]
                        },
                        "GetPipelineJob": {
                          "requestType": "GetPipelineJobRequest",
                          "responseType": "PipelineJob",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/pipelineJobs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/pipelineJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListPipelineJobs": {
                          "requestType": "ListPipelineJobsRequest",
                          "responseType": "ListPipelineJobsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/pipelineJobs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/pipelineJobs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeletePipelineJob": {
                          "requestType": "DeletePipelineJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/pipelineJobs/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/pipelineJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CancelPipelineJob": {
                          "requestType": "CancelPipelineJobRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/pipelineJobs/*}:cancel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/pipelineJobs/*}:cancel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        }
                      }
                    },
                    "CreateTrainingPipelineRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "trainingPipeline": {
                          "type": "TrainingPipeline",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetTrainingPipelineRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TrainingPipeline"
                          }
                        }
                      }
                    },
                    "ListTrainingPipelinesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListTrainingPipelinesResponse": {
                      "fields": {
                        "trainingPipelines": {
                          "rule": "repeated",
                          "type": "TrainingPipeline",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteTrainingPipelineRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TrainingPipeline"
                          }
                        }
                      }
                    },
                    "CancelTrainingPipelineRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TrainingPipeline"
                          }
                        }
                      }
                    },
                    "CreatePipelineJobRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "pipelineJob": {
                          "type": "PipelineJob",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "pipelineJobId": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "GetPipelineJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/PipelineJob"
                          }
                        }
                      }
                    },
                    "ListPipelineJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 6
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 7
                        }
                      }
                    },
                    "ListPipelineJobsResponse": {
                      "fields": {
                        "pipelineJobs": {
                          "rule": "repeated",
                          "type": "PipelineJob",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeletePipelineJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/PipelineJob"
                          }
                        }
                      }
                    },
                    "CancelPipelineJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/PipelineJob"
                          }
                        }
                      }
                    },
                    "TrainingPipeline": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/TrainingPipeline",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/trainingPipelines/{training_pipeline}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "inputDataConfig": {
                          "type": "InputDataConfig",
                          "id": 3
                        },
                        "trainingTaskDefinition": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "trainingTaskInputs": {
                          "type": "google.protobuf.Value",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "trainingTaskMetadata": {
                          "type": "google.protobuf.Value",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "modelToUpload": {
                          "type": "Model",
                          "id": 7
                        },
                        "modelId": {
                          "type": "string",
                          "id": 22,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "parentModel": {
                          "type": "string",
                          "id": 21,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "state": {
                          "type": "PipelineState",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 15
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 18
                        }
                      }
                    },
                    "InputDataConfig": {
                      "oneofs": {
                        "split": {
                          "oneof": [
                            "fractionSplit",
                            "filterSplit",
                            "predefinedSplit",
                            "timestampSplit",
                            "stratifiedSplit"
                          ]
                        },
                        "destination": {
                          "oneof": [
                            "gcsDestination",
                            "bigqueryDestination"
                          ]
                        }
                      },
                      "fields": {
                        "fractionSplit": {
                          "type": "FractionSplit",
                          "id": 2
                        },
                        "filterSplit": {
                          "type": "FilterSplit",
                          "id": 3
                        },
                        "predefinedSplit": {
                          "type": "PredefinedSplit",
                          "id": 4
                        },
                        "timestampSplit": {
                          "type": "TimestampSplit",
                          "id": 5
                        },
                        "stratifiedSplit": {
                          "type": "StratifiedSplit",
                          "id": 12
                        },
                        "gcsDestination": {
                          "type": "GcsDestination",
                          "id": 8
                        },
                        "bigqueryDestination": {
                          "type": "BigQueryDestination",
                          "id": 10
                        },
                        "datasetId": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "annotationsFilter": {
                          "type": "string",
                          "id": 6
                        },
                        "annotationSchemaUri": {
                          "type": "string",
                          "id": 9
                        },
                        "savedQueryId": {
                          "type": "string",
                          "id": 7
                        },
                        "persistMlUseAssignment": {
                          "type": "bool",
                          "id": 11
                        }
                      }
                    },
                    "FractionSplit": {
                      "fields": {
                        "trainingFraction": {
                          "type": "double",
                          "id": 1
                        },
                        "validationFraction": {
                          "type": "double",
                          "id": 2
                        },
                        "testFraction": {
                          "type": "double",
                          "id": 3
                        }
                      }
                    },
                    "FilterSplit": {
                      "fields": {
                        "trainingFilter": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "validationFilter": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "testFilter": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "PredefinedSplit": {
                      "fields": {
                        "key": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "TimestampSplit": {
                      "fields": {
                        "trainingFraction": {
                          "type": "double",
                          "id": 1
                        },
                        "validationFraction": {
                          "type": "double",
                          "id": 2
                        },
                        "testFraction": {
                          "type": "double",
                          "id": 3
                        },
                        "key": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "StratifiedSplit": {
                      "fields": {
                        "trainingFraction": {
                          "type": "double",
                          "id": 1
                        },
                        "validationFraction": {
                          "type": "double",
                          "id": 2
                        },
                        "testFraction": {
                          "type": "double",
                          "id": 3
                        },
                        "key": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "Schedule": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Schedule",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/schedules/{schedule}"
                      },
                      "oneofs": {
                        "timeSpecification": {
                          "oneof": [
                            "cron"
                          ]
                        },
                        "request": {
                          "oneof": [
                            "createPipelineJobRequest"
                          ]
                        }
                      },
                      "fields": {
                        "cron": {
                          "type": "string",
                          "id": 10
                        },
                        "createPipelineJobRequest": {
                          "type": "CreatePipelineJobRequest",
                          "id": 14
                        },
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "maxRunCount": {
                          "type": "int64",
                          "id": 16,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "startedRunCount": {
                          "type": "int64",
                          "id": 17,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 19,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "nextRunTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "lastPauseTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "lastResumeTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "maxConcurrentRunCount": {
                          "type": "int64",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "allowQueueing": {
                          "type": "bool",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "catchUp": {
                          "type": "bool",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "lastScheduledRunResponse": {
                          "type": "RunResponse",
                          "id": 18,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "RunResponse": {
                          "fields": {
                            "scheduledRunTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 1
                            },
                            "runResponse": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "ACTIVE": 1,
                            "PAUSED": 2,
                            "COMPLETED": 3
                          }
                        }
                      }
                    },
                    "ScheduleService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateSchedule": {
                          "requestType": "CreateScheduleRequest",
                          "responseType": "Schedule",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/schedules",
                            "(google.api.http).body": "schedule",
                            "(google.api.method_signature)": "parent,schedule"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/schedules",
                                "body": "schedule"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,schedule"
                            }
                          ]
                        },
                        "DeleteSchedule": {
                          "requestType": "DeleteScheduleRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/schedules/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/schedules/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetSchedule": {
                          "requestType": "GetScheduleRequest",
                          "responseType": "Schedule",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/schedules/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/schedules/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListSchedules": {
                          "requestType": "ListSchedulesRequest",
                          "responseType": "ListSchedulesResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/schedules",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/schedules"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "PauseSchedule": {
                          "requestType": "PauseScheduleRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/schedules/*}:pause",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/schedules/*}:pause",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ResumeSchedule": {
                          "requestType": "ResumeScheduleRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/schedules/*}:resume",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name,catch_up"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/schedules/*}:resume",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.api.method_signature)": "name,catch_up"
                            }
                          ]
                        },
                        "UpdateSchedule": {
                          "requestType": "UpdateScheduleRequest",
                          "responseType": "Schedule",
                          "options": {
                            "(google.api.http).patch": "/v1/{schedule.name=projects/*/locations/*/schedules/*}",
                            "(google.api.http).body": "schedule",
                            "(google.api.method_signature)": "schedule,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{schedule.name=projects/*/locations/*/schedules/*}",
                                "body": "schedule"
                              }
                            },
                            {
                              "(google.api.method_signature)": "schedule,update_mask"
                            }
                          ]
                        }
                      }
                    },
                    "CreateScheduleRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "schedule": {
                          "type": "Schedule",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetScheduleRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Schedule"
                          }
                        }
                      }
                    },
                    "ListSchedulesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ListSchedulesResponse": {
                      "fields": {
                        "schedules": {
                          "rule": "repeated",
                          "type": "Schedule",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteScheduleRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Schedule"
                          }
                        }
                      }
                    },
                    "PauseScheduleRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Schedule"
                          }
                        }
                      }
                    },
                    "ResumeScheduleRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Schedule"
                          }
                        },
                        "catchUp": {
                          "type": "bool",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "UpdateScheduleRequest": {
                      "fields": {
                        "schedule": {
                          "type": "Schedule",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "schema": {
                      "nested": {
                        "predict": {
                          "nested": {
                            "instance": {
                              "options": {
                                "csharp_namespace": "Google.Cloud.AIPlatform.V1.Schema.Predict.Instance",
                                "go_package": "cloud.google.com/go/aiplatform/apiv1/schema/predict/instance/instancepb;instancepb",
                                "java_multiple_files": true,
                                "java_outer_classname": "VideoObjectTrackingPredictionInstanceProto",
                                "java_package": "com.google.cloud.aiplatform.v1.schema.predict.instance",
                                "php_namespace": "Google\\Cloud\\AIPlatform\\V1\\Schema\\Predict\\Instance",
                                "ruby_package": "Google::Cloud::AIPlatform::V1::Schema::Predict::Instance"
                              },
                              "nested": {
                                "ImageClassificationPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    }
                                  }
                                },
                                "ImageObjectDetectionPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    }
                                  }
                                },
                                "ImageSegmentationPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    }
                                  }
                                },
                                "TextClassificationPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    }
                                  }
                                },
                                "TextExtractionPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "key": {
                                      "type": "string",
                                      "id": 3
                                    }
                                  }
                                },
                                "TextSentimentPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    }
                                  }
                                },
                                "VideoActionRecognitionPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "timeSegmentStart": {
                                      "type": "string",
                                      "id": 3
                                    },
                                    "timeSegmentEnd": {
                                      "type": "string",
                                      "id": 4
                                    }
                                  }
                                },
                                "VideoClassificationPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "timeSegmentStart": {
                                      "type": "string",
                                      "id": 3
                                    },
                                    "timeSegmentEnd": {
                                      "type": "string",
                                      "id": 4
                                    }
                                  }
                                },
                                "VideoObjectTrackingPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "timeSegmentStart": {
                                      "type": "string",
                                      "id": 3
                                    },
                                    "timeSegmentEnd": {
                                      "type": "string",
                                      "id": 4
                                    }
                                  }
                                }
                              }
                            },
                            "params": {
                              "options": {
                                "csharp_namespace": "Google.Cloud.AIPlatform.V1.Schema.Predict.Params",
                                "go_package": "cloud.google.com/go/aiplatform/apiv1/schema/predict/params/paramspb;paramspb",
                                "java_multiple_files": true,
                                "java_outer_classname": "VideoObjectTrackingPredictionParamsProto",
                                "java_package": "com.google.cloud.aiplatform.v1.schema.predict.params",
                                "php_namespace": "Google\\Cloud\\AIPlatform\\V1\\Schema\\Predict\\Params",
                                "ruby_package": "Google::Cloud::AIPlatform::V1::Schema::Predict::Params"
                              },
                              "nested": {
                                "ImageClassificationPredictionParams": {
                                  "fields": {
                                    "confidenceThreshold": {
                                      "type": "float",
                                      "id": 1
                                    },
                                    "maxPredictions": {
                                      "type": "int32",
                                      "id": 2
                                    }
                                  }
                                },
                                "ImageObjectDetectionPredictionParams": {
                                  "fields": {
                                    "confidenceThreshold": {
                                      "type": "float",
                                      "id": 1
                                    },
                                    "maxPredictions": {
                                      "type": "int32",
                                      "id": 2
                                    }
                                  }
                                },
                                "ImageSegmentationPredictionParams": {
                                  "fields": {
                                    "confidenceThreshold": {
                                      "type": "float",
                                      "id": 1
                                    }
                                  }
                                },
                                "VideoActionRecognitionPredictionParams": {
                                  "fields": {
                                    "confidenceThreshold": {
                                      "type": "float",
                                      "id": 1
                                    },
                                    "maxPredictions": {
                                      "type": "int32",
                                      "id": 2
                                    }
                                  }
                                },
                                "VideoClassificationPredictionParams": {
                                  "fields": {
                                    "confidenceThreshold": {
                                      "type": "float",
                                      "id": 1
                                    },
                                    "maxPredictions": {
                                      "type": "int32",
                                      "id": 2
                                    },
                                    "segmentClassification": {
                                      "type": "bool",
                                      "id": 3
                                    },
                                    "shotClassification": {
                                      "type": "bool",
                                      "id": 4
                                    },
                                    "oneSecIntervalClassification": {
                                      "type": "bool",
                                      "id": 5
                                    }
                                  }
                                },
                                "VideoObjectTrackingPredictionParams": {
                                  "fields": {
                                    "confidenceThreshold": {
                                      "type": "float",
                                      "id": 1
                                    },
                                    "maxPredictions": {
                                      "type": "int32",
                                      "id": 2
                                    },
                                    "minBoundingBoxSize": {
                                      "type": "float",
                                      "id": 3
                                    }
                                  }
                                }
                              }
                            },
                            "prediction": {
                              "options": {
                                "csharp_namespace": "Google.Cloud.AIPlatform.V1.Schema.Predict.Prediction",
                                "go_package": "cloud.google.com/go/aiplatform/apiv1/schema/predict/prediction/predictionpb;predictionpb",
                                "java_multiple_files": true,
                                "java_outer_classname": "VideoObjectTrackingPredictionResultProto",
                                "java_package": "com.google.cloud.aiplatform.v1.schema.predict.prediction",
                                "php_namespace": "Google\\Cloud\\AIPlatform\\V1\\Schema\\Predict\\Prediction",
                                "ruby_package": "Google::Cloud::AIPlatform::V1::Schema::Predict::Prediction"
                              },
                              "nested": {
                                "ClassificationPredictionResult": {
                                  "fields": {
                                    "ids": {
                                      "rule": "repeated",
                                      "type": "int64",
                                      "id": 1
                                    },
                                    "displayNames": {
                                      "rule": "repeated",
                                      "type": "string",
                                      "id": 2
                                    },
                                    "confidences": {
                                      "rule": "repeated",
                                      "type": "float",
                                      "id": 3
                                    }
                                  }
                                },
                                "ImageObjectDetectionPredictionResult": {
                                  "fields": {
                                    "ids": {
                                      "rule": "repeated",
                                      "type": "int64",
                                      "id": 1
                                    },
                                    "displayNames": {
                                      "rule": "repeated",
                                      "type": "string",
                                      "id": 2
                                    },
                                    "confidences": {
                                      "rule": "repeated",
                                      "type": "float",
                                      "id": 3
                                    },
                                    "bboxes": {
                                      "rule": "repeated",
                                      "type": "google.protobuf.ListValue",
                                      "id": 4
                                    }
                                  }
                                },
                                "ImageSegmentationPredictionResult": {
                                  "fields": {
                                    "categoryMask": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "confidenceMask": {
                                      "type": "string",
                                      "id": 2
                                    }
                                  }
                                },
                                "TabularClassificationPredictionResult": {
                                  "fields": {
                                    "classes": {
                                      "rule": "repeated",
                                      "type": "string",
                                      "id": 1
                                    },
                                    "scores": {
                                      "rule": "repeated",
                                      "type": "float",
                                      "id": 2
                                    }
                                  }
                                },
                                "TabularRegressionPredictionResult": {
                                  "fields": {
                                    "value": {
                                      "type": "float",
                                      "id": 1
                                    },
                                    "lowerBound": {
                                      "type": "float",
                                      "id": 2
                                    },
                                    "upperBound": {
                                      "type": "float",
                                      "id": 3
                                    }
                                  }
                                },
                                "TextExtractionPredictionResult": {
                                  "fields": {
                                    "ids": {
                                      "rule": "repeated",
                                      "type": "int64",
                                      "id": 1
                                    },
                                    "displayNames": {
                                      "rule": "repeated",
                                      "type": "string",
                                      "id": 2
                                    },
                                    "textSegmentStartOffsets": {
                                      "rule": "repeated",
                                      "type": "int64",
                                      "id": 3
                                    },
                                    "textSegmentEndOffsets": {
                                      "rule": "repeated",
                                      "type": "int64",
                                      "id": 4
                                    },
                                    "confidences": {
                                      "rule": "repeated",
                                      "type": "float",
                                      "id": 5
                                    }
                                  }
                                },
                                "TextSentimentPredictionResult": {
                                  "fields": {
                                    "sentiment": {
                                      "type": "int32",
                                      "id": 1
                                    }
                                  }
                                },
                                "VideoActionRecognitionPredictionResult": {
                                  "fields": {
                                    "id": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "displayName": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "timeSegmentStart": {
                                      "type": "google.protobuf.Duration",
                                      "id": 4
                                    },
                                    "timeSegmentEnd": {
                                      "type": "google.protobuf.Duration",
                                      "id": 5
                                    },
                                    "confidence": {
                                      "type": "google.protobuf.FloatValue",
                                      "id": 6
                                    }
                                  }
                                },
                                "VideoClassificationPredictionResult": {
                                  "fields": {
                                    "id": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "displayName": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "type": {
                                      "type": "string",
                                      "id": 3
                                    },
                                    "timeSegmentStart": {
                                      "type": "google.protobuf.Duration",
                                      "id": 4
                                    },
                                    "timeSegmentEnd": {
                                      "type": "google.protobuf.Duration",
                                      "id": 5
                                    },
                                    "confidence": {
                                      "type": "google.protobuf.FloatValue",
                                      "id": 6
                                    }
                                  }
                                },
                                "VideoObjectTrackingPredictionResult": {
                                  "fields": {
                                    "id": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "displayName": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "timeSegmentStart": {
                                      "type": "google.protobuf.Duration",
                                      "id": 3
                                    },
                                    "timeSegmentEnd": {
                                      "type": "google.protobuf.Duration",
                                      "id": 4
                                    },
                                    "confidence": {
                                      "type": "google.protobuf.FloatValue",
                                      "id": 5
                                    },
                                    "frames": {
                                      "rule": "repeated",
                                      "type": "Frame",
                                      "id": 6
                                    }
                                  },
                                  "nested": {
                                    "Frame": {
                                      "fields": {
                                        "timeOffset": {
                                          "type": "google.protobuf.Duration",
                                          "id": 1
                                        },
                                        "xMin": {
                                          "type": "google.protobuf.FloatValue",
                                          "id": 2
                                        },
                                        "xMax": {
                                          "type": "google.protobuf.FloatValue",
                                          "id": 3
                                        },
                                        "yMin": {
                                          "type": "google.protobuf.FloatValue",
                                          "id": 4
                                        },
                                        "yMax": {
                                          "type": "google.protobuf.FloatValue",
                                          "id": 5
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "trainingjob": {
                          "nested": {
                            "definition": {
                              "options": {
                                "csharp_namespace": "Google.Cloud.AIPlatform.V1.Schema.TrainingJob.Definition",
                                "go_package": "cloud.google.com/go/aiplatform/apiv1/schema/trainingjob/definition/definitionpb;definitionpb",
                                "java_multiple_files": true,
                                "java_outer_classname": "AutoMLVideoObjectTrackingProto",
                                "java_package": "com.google.cloud.aiplatform.v1.schema.trainingjob.definition",
                                "php_namespace": "Google\\Cloud\\AIPlatform\\V1\\Schema\\TrainingJob\\Definition",
                                "ruby_package": "Google::Cloud::AIPlatform::V1::Schema::TrainingJob::Definition"
                              },
                              "nested": {
                                "AutoMlImageClassification": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlImageClassificationInputs",
                                      "id": 1
                                    },
                                    "metadata": {
                                      "type": "AutoMlImageClassificationMetadata",
                                      "id": 2
                                    }
                                  }
                                },
                                "AutoMlImageClassificationInputs": {
                                  "fields": {
                                    "modelType": {
                                      "type": "ModelType",
                                      "id": 1
                                    },
                                    "baseModelId": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "budgetMilliNodeHours": {
                                      "type": "int64",
                                      "id": 3
                                    },
                                    "disableEarlyStopping": {
                                      "type": "bool",
                                      "id": 4
                                    },
                                    "multiLabel": {
                                      "type": "bool",
                                      "id": 5
                                    }
                                  },
                                  "nested": {
                                    "ModelType": {
                                      "values": {
                                        "MODEL_TYPE_UNSPECIFIED": 0,
                                        "CLOUD": 1,
                                        "MOBILE_TF_LOW_LATENCY_1": 2,
                                        "MOBILE_TF_VERSATILE_1": 3,
                                        "MOBILE_TF_HIGH_ACCURACY_1": 4
                                      }
                                    }
                                  }
                                },
                                "AutoMlImageClassificationMetadata": {
                                  "fields": {
                                    "costMilliNodeHours": {
                                      "type": "int64",
                                      "id": 1
                                    },
                                    "successfulStopReason": {
                                      "type": "SuccessfulStopReason",
                                      "id": 2
                                    }
                                  },
                                  "nested": {
                                    "SuccessfulStopReason": {
                                      "values": {
                                        "SUCCESSFUL_STOP_REASON_UNSPECIFIED": 0,
                                        "BUDGET_REACHED": 1,
                                        "MODEL_CONVERGED": 2
                                      }
                                    }
                                  }
                                },
                                "AutoMlImageObjectDetection": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlImageObjectDetectionInputs",
                                      "id": 1
                                    },
                                    "metadata": {
                                      "type": "AutoMlImageObjectDetectionMetadata",
                                      "id": 2
                                    }
                                  }
                                },
                                "AutoMlImageObjectDetectionInputs": {
                                  "fields": {
                                    "modelType": {
                                      "type": "ModelType",
                                      "id": 1
                                    },
                                    "budgetMilliNodeHours": {
                                      "type": "int64",
                                      "id": 2
                                    },
                                    "disableEarlyStopping": {
                                      "type": "bool",
                                      "id": 3
                                    }
                                  },
                                  "nested": {
                                    "ModelType": {
                                      "values": {
                                        "MODEL_TYPE_UNSPECIFIED": 0,
                                        "CLOUD_HIGH_ACCURACY_1": 1,
                                        "CLOUD_LOW_LATENCY_1": 2,
                                        "MOBILE_TF_LOW_LATENCY_1": 3,
                                        "MOBILE_TF_VERSATILE_1": 4,
                                        "MOBILE_TF_HIGH_ACCURACY_1": 5
                                      }
                                    }
                                  }
                                },
                                "AutoMlImageObjectDetectionMetadata": {
                                  "fields": {
                                    "costMilliNodeHours": {
                                      "type": "int64",
                                      "id": 1
                                    },
                                    "successfulStopReason": {
                                      "type": "SuccessfulStopReason",
                                      "id": 2
                                    }
                                  },
                                  "nested": {
                                    "SuccessfulStopReason": {
                                      "values": {
                                        "SUCCESSFUL_STOP_REASON_UNSPECIFIED": 0,
                                        "BUDGET_REACHED": 1,
                                        "MODEL_CONVERGED": 2
                                      }
                                    }
                                  }
                                },
                                "AutoMlImageSegmentation": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlImageSegmentationInputs",
                                      "id": 1
                                    },
                                    "metadata": {
                                      "type": "AutoMlImageSegmentationMetadata",
                                      "id": 2
                                    }
                                  }
                                },
                                "AutoMlImageSegmentationInputs": {
                                  "fields": {
                                    "modelType": {
                                      "type": "ModelType",
                                      "id": 1
                                    },
                                    "budgetMilliNodeHours": {
                                      "type": "int64",
                                      "id": 2
                                    },
                                    "baseModelId": {
                                      "type": "string",
                                      "id": 3
                                    }
                                  },
                                  "nested": {
                                    "ModelType": {
                                      "values": {
                                        "MODEL_TYPE_UNSPECIFIED": 0,
                                        "CLOUD_HIGH_ACCURACY_1": 1,
                                        "CLOUD_LOW_ACCURACY_1": 2,
                                        "MOBILE_TF_LOW_LATENCY_1": 3
                                      }
                                    }
                                  }
                                },
                                "AutoMlImageSegmentationMetadata": {
                                  "fields": {
                                    "costMilliNodeHours": {
                                      "type": "int64",
                                      "id": 1
                                    },
                                    "successfulStopReason": {
                                      "type": "SuccessfulStopReason",
                                      "id": 2
                                    }
                                  },
                                  "nested": {
                                    "SuccessfulStopReason": {
                                      "values": {
                                        "SUCCESSFUL_STOP_REASON_UNSPECIFIED": 0,
                                        "BUDGET_REACHED": 1,
                                        "MODEL_CONVERGED": 2
                                      }
                                    }
                                  }
                                },
                                "AutoMlTables": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlTablesInputs",
                                      "id": 1
                                    },
                                    "metadata": {
                                      "type": "AutoMlTablesMetadata",
                                      "id": 2
                                    }
                                  }
                                },
                                "AutoMlTablesInputs": {
                                  "oneofs": {
                                    "additionalOptimizationObjectiveConfig": {
                                      "oneof": [
                                        "optimizationObjectiveRecallValue",
                                        "optimizationObjectivePrecisionValue"
                                      ]
                                    }
                                  },
                                  "fields": {
                                    "optimizationObjectiveRecallValue": {
                                      "type": "float",
                                      "id": 5
                                    },
                                    "optimizationObjectivePrecisionValue": {
                                      "type": "float",
                                      "id": 6
                                    },
                                    "predictionType": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "targetColumn": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "transformations": {
                                      "rule": "repeated",
                                      "type": "Transformation",
                                      "id": 3
                                    },
                                    "optimizationObjective": {
                                      "type": "string",
                                      "id": 4
                                    },
                                    "trainBudgetMilliNodeHours": {
                                      "type": "int64",
                                      "id": 7
                                    },
                                    "disableEarlyStopping": {
                                      "type": "bool",
                                      "id": 8
                                    },
                                    "weightColumnName": {
                                      "type": "string",
                                      "id": 9
                                    },
                                    "exportEvaluatedDataItemsConfig": {
                                      "type": "ExportEvaluatedDataItemsConfig",
                                      "id": 10
                                    },
                                    "additionalExperiments": {
                                      "rule": "repeated",
                                      "type": "string",
                                      "id": 11
                                    }
                                  },
                                  "nested": {
                                    "Transformation": {
                                      "oneofs": {
                                        "transformationDetail": {
                                          "oneof": [
                                            "auto",
                                            "numeric",
                                            "categorical",
                                            "timestamp",
                                            "text",
                                            "repeatedNumeric",
                                            "repeatedCategorical",
                                            "repeatedText"
                                          ]
                                        }
                                      },
                                      "fields": {
                                        "auto": {
                                          "type": "AutoTransformation",
                                          "id": 1
                                        },
                                        "numeric": {
                                          "type": "NumericTransformation",
                                          "id": 2
                                        },
                                        "categorical": {
                                          "type": "CategoricalTransformation",
                                          "id": 3
                                        },
                                        "timestamp": {
                                          "type": "TimestampTransformation",
                                          "id": 4
                                        },
                                        "text": {
                                          "type": "TextTransformation",
                                          "id": 5
                                        },
                                        "repeatedNumeric": {
                                          "type": "NumericArrayTransformation",
                                          "id": 6
                                        },
                                        "repeatedCategorical": {
                                          "type": "CategoricalArrayTransformation",
                                          "id": 7
                                        },
                                        "repeatedText": {
                                          "type": "TextArrayTransformation",
                                          "id": 8
                                        }
                                      },
                                      "nested": {
                                        "AutoTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            }
                                          }
                                        },
                                        "NumericTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            },
                                            "invalidValuesAllowed": {
                                              "type": "bool",
                                              "id": 2
                                            }
                                          }
                                        },
                                        "CategoricalTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            }
                                          }
                                        },
                                        "TimestampTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            },
                                            "timeFormat": {
                                              "type": "string",
                                              "id": 2
                                            },
                                            "invalidValuesAllowed": {
                                              "type": "bool",
                                              "id": 3
                                            }
                                          }
                                        },
                                        "TextTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            }
                                          }
                                        },
                                        "NumericArrayTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            },
                                            "invalidValuesAllowed": {
                                              "type": "bool",
                                              "id": 2
                                            }
                                          }
                                        },
                                        "CategoricalArrayTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            }
                                          }
                                        },
                                        "TextArrayTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "AutoMlTablesMetadata": {
                                  "fields": {
                                    "trainCostMilliNodeHours": {
                                      "type": "int64",
                                      "id": 1
                                    }
                                  }
                                },
                                "ExportEvaluatedDataItemsConfig": {
                                  "fields": {
                                    "destinationBigqueryUri": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "overrideExistingTable": {
                                      "type": "bool",
                                      "id": 2
                                    }
                                  }
                                },
                                "AutoMlTextClassification": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlTextClassificationInputs",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlTextClassificationInputs": {
                                  "fields": {
                                    "multiLabel": {
                                      "type": "bool",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlTextExtraction": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlTextExtractionInputs",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlTextExtractionInputs": {
                                  "fields": {}
                                },
                                "AutoMlTextSentiment": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlTextSentimentInputs",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlTextSentimentInputs": {
                                  "fields": {
                                    "sentimentMax": {
                                      "type": "int32",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlVideoActionRecognition": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlVideoActionRecognitionInputs",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlVideoActionRecognitionInputs": {
                                  "fields": {
                                    "modelType": {
                                      "type": "ModelType",
                                      "id": 1
                                    }
                                  },
                                  "nested": {
                                    "ModelType": {
                                      "values": {
                                        "MODEL_TYPE_UNSPECIFIED": 0,
                                        "CLOUD": 1,
                                        "MOBILE_VERSATILE_1": 2,
                                        "MOBILE_JETSON_VERSATILE_1": 3,
                                        "MOBILE_CORAL_VERSATILE_1": 4
                                      }
                                    }
                                  }
                                },
                                "AutoMlVideoClassification": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlVideoClassificationInputs",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlVideoClassificationInputs": {
                                  "fields": {
                                    "modelType": {
                                      "type": "ModelType",
                                      "id": 1
                                    }
                                  },
                                  "nested": {
                                    "ModelType": {
                                      "values": {
                                        "MODEL_TYPE_UNSPECIFIED": 0,
                                        "CLOUD": 1,
                                        "MOBILE_VERSATILE_1": 2,
                                        "MOBILE_JETSON_VERSATILE_1": 3
                                      }
                                    }
                                  }
                                },
                                "AutoMlVideoObjectTracking": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlVideoObjectTrackingInputs",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlVideoObjectTrackingInputs": {
                                  "fields": {
                                    "modelType": {
                                      "type": "ModelType",
                                      "id": 1
                                    }
                                  },
                                  "nested": {
                                    "ModelType": {
                                      "values": {
                                        "MODEL_TYPE_UNSPECIFIED": 0,
                                        "CLOUD": 1,
                                        "MOBILE_VERSATILE_1": 2,
                                        "MOBILE_CORAL_VERSATILE_1": 3,
                                        "MOBILE_CORAL_LOW_LATENCY_1": 4,
                                        "MOBILE_JETSON_VERSATILE_1": 5,
                                        "MOBILE_JETSON_LOW_LATENCY_1": 6
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "SpecialistPool": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/SpecialistPool",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/specialistPools/{specialist_pool}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "specialistManagersCount": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "specialistManagerEmails": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 4
                        },
                        "pendingDataLabelingJobs": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "specialistWorkerEmails": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 7
                        }
                      }
                    },
                    "SpecialistPoolService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateSpecialistPool": {
                          "requestType": "CreateSpecialistPoolRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/specialistPools",
                            "(google.api.http).body": "specialist_pool",
                            "(google.api.method_signature)": "parent,specialist_pool",
                            "(google.longrunning.operation_info).response_type": "SpecialistPool",
                            "(google.longrunning.operation_info).metadata_type": "CreateSpecialistPoolOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/specialistPools",
                                "body": "specialist_pool"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,specialist_pool"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "SpecialistPool",
                                "metadata_type": "CreateSpecialistPoolOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetSpecialistPool": {
                          "requestType": "GetSpecialistPoolRequest",
                          "responseType": "SpecialistPool",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/specialistPools/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/specialistPools/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListSpecialistPools": {
                          "requestType": "ListSpecialistPoolsRequest",
                          "responseType": "ListSpecialistPoolsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/specialistPools",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/specialistPools"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteSpecialistPool": {
                          "requestType": "DeleteSpecialistPoolRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/specialistPools/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/specialistPools/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateSpecialistPool": {
                          "requestType": "UpdateSpecialistPoolRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1/{specialist_pool.name=projects/*/locations/*/specialistPools/*}",
                            "(google.api.http).body": "specialist_pool",
                            "(google.api.method_signature)": "specialist_pool,update_mask",
                            "(google.longrunning.operation_info).response_type": "SpecialistPool",
                            "(google.longrunning.operation_info).metadata_type": "UpdateSpecialistPoolOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{specialist_pool.name=projects/*/locations/*/specialistPools/*}",
                                "body": "specialist_pool"
                              }
                            },
                            {
                              "(google.api.method_signature)": "specialist_pool,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "SpecialistPool",
                                "metadata_type": "UpdateSpecialistPoolOperationMetadata"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "CreateSpecialistPoolRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "specialistPool": {
                          "type": "SpecialistPool",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CreateSpecialistPoolOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "GetSpecialistPoolRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/SpecialistPool"
                          }
                        }
                      }
                    },
                    "ListSpecialistPoolsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 4
                        }
                      }
                    },
                    "ListSpecialistPoolsResponse": {
                      "fields": {
                        "specialistPools": {
                          "rule": "repeated",
                          "type": "SpecialistPool",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteSpecialistPoolRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/SpecialistPool"
                          }
                        },
                        "force": {
                          "type": "bool",
                          "id": 2
                        }
                      }
                    },
                    "UpdateSpecialistPoolRequest": {
                      "fields": {
                        "specialistPool": {
                          "type": "SpecialistPool",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UpdateSpecialistPoolOperationMetadata": {
                      "fields": {
                        "specialistPool": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/SpecialistPool"
                          }
                        },
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 2
                        }
                      }
                    },
                    "Tensorboard": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Tensorboard",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/tensorboards/{tensorboard}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 11
                        },
                        "blobStoragePathPrefix": {
                          "type": "string",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "runCount": {
                          "type": "int32",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 8
                        },
                        "etag": {
                          "type": "string",
                          "id": 9
                        },
                        "isDefault": {
                          "type": "bool",
                          "id": 12
                        }
                      }
                    },
                    "TimeSeriesData": {
                      "fields": {
                        "tensorboardTimeSeriesId": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "valueType": {
                          "type": "TensorboardTimeSeries.ValueType",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "values": {
                          "rule": "repeated",
                          "type": "TimeSeriesDataPoint",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "TimeSeriesDataPoint": {
                      "oneofs": {
                        "value": {
                          "oneof": [
                            "scalar",
                            "tensor",
                            "blobs"
                          ]
                        }
                      },
                      "fields": {
                        "scalar": {
                          "type": "Scalar",
                          "id": 3
                        },
                        "tensor": {
                          "type": "TensorboardTensor",
                          "id": 4
                        },
                        "blobs": {
                          "type": "TensorboardBlobSequence",
                          "id": 5
                        },
                        "wallTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1
                        },
                        "step": {
                          "type": "int64",
                          "id": 2
                        }
                      }
                    },
                    "Scalar": {
                      "fields": {
                        "value": {
                          "type": "double",
                          "id": 1
                        }
                      }
                    },
                    "TensorboardTensor": {
                      "fields": {
                        "value": {
                          "type": "bytes",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "versionNumber": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "TensorboardBlobSequence": {
                      "fields": {
                        "values": {
                          "rule": "repeated",
                          "type": "TensorboardBlob",
                          "id": 1
                        }
                      }
                    },
                    "TensorboardBlob": {
                      "fields": {
                        "id": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "data": {
                          "type": "bytes",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "TensorboardTimeSeries": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/TensorboardTimeSeries",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "valueType": {
                          "type": "ValueType",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 7
                        },
                        "pluginName": {
                          "type": "string",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "pluginData": {
                          "type": "bytes",
                          "id": 9
                        },
                        "metadata": {
                          "type": "Metadata",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "Metadata": {
                          "fields": {
                            "maxStep": {
                              "type": "int64",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "maxWallTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "maxBlobSequenceLength": {
                              "type": "int64",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        },
                        "ValueType": {
                          "values": {
                            "VALUE_TYPE_UNSPECIFIED": 0,
                            "SCALAR": 1,
                            "TENSOR": 2,
                            "BLOB_SEQUENCE": 3
                          }
                        }
                      }
                    },
                    "TensorboardExperiment": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/TensorboardExperiment",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6
                        },
                        "etag": {
                          "type": "string",
                          "id": 7
                        },
                        "source": {
                          "type": "string",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "TensorboardRun": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/TensorboardRun",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 8
                        },
                        "etag": {
                          "type": "string",
                          "id": 9
                        }
                      }
                    },
                    "TensorboardService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/cloud-platform.read-only"
                      },
                      "methods": {
                        "CreateTensorboard": {
                          "requestType": "CreateTensorboardRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/tensorboards",
                            "(google.api.http).body": "tensorboard",
                            "(google.api.method_signature)": "parent,tensorboard",
                            "(google.longrunning.operation_info).response_type": "Tensorboard",
                            "(google.longrunning.operation_info).metadata_type": "CreateTensorboardOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/tensorboards",
                                "body": "tensorboard"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,tensorboard"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Tensorboard",
                                "metadata_type": "CreateTensorboardOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetTensorboard": {
                          "requestType": "GetTensorboardRequest",
                          "responseType": "Tensorboard",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/tensorboards/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/tensorboards/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "UpdateTensorboard": {
                          "requestType": "UpdateTensorboardRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1/{tensorboard.name=projects/*/locations/*/tensorboards/*}",
                            "(google.api.http).body": "tensorboard",
                            "(google.api.method_signature)": "tensorboard,update_mask",
                            "(google.longrunning.operation_info).response_type": "Tensorboard",
                            "(google.longrunning.operation_info).metadata_type": "UpdateTensorboardOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{tensorboard.name=projects/*/locations/*/tensorboards/*}",
                                "body": "tensorboard"
                              }
                            },
                            {
                              "(google.api.method_signature)": "tensorboard,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Tensorboard",
                                "metadata_type": "UpdateTensorboardOperationMetadata"
                              }
                            }
                          ]
                        },
                        "ListTensorboards": {
                          "requestType": "ListTensorboardsRequest",
                          "responseType": "ListTensorboardsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/tensorboards",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/tensorboards"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteTensorboard": {
                          "requestType": "DeleteTensorboardRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/tensorboards/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/tensorboards/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "ReadTensorboardUsage": {
                          "requestType": "ReadTensorboardUsageRequest",
                          "responseType": "ReadTensorboardUsageResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{tensorboard=projects/*/locations/*/tensorboards/*}:readUsage",
                            "(google.api.method_signature)": "tensorboard"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{tensorboard=projects/*/locations/*/tensorboards/*}:readUsage"
                              }
                            },
                            {
                              "(google.api.method_signature)": "tensorboard"
                            }
                          ]
                        },
                        "ReadTensorboardSize": {
                          "requestType": "ReadTensorboardSizeRequest",
                          "responseType": "ReadTensorboardSizeResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{tensorboard=projects/*/locations/*/tensorboards/*}:readSize",
                            "(google.api.method_signature)": "tensorboard"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{tensorboard=projects/*/locations/*/tensorboards/*}:readSize"
                              }
                            },
                            {
                              "(google.api.method_signature)": "tensorboard"
                            }
                          ]
                        },
                        "CreateTensorboardExperiment": {
                          "requestType": "CreateTensorboardExperimentRequest",
                          "responseType": "TensorboardExperiment",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/tensorboards/*}/experiments",
                            "(google.api.http).body": "tensorboard_experiment",
                            "(google.api.method_signature)": "parent,tensorboard_experiment,tensorboard_experiment_id"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/tensorboards/*}/experiments",
                                "body": "tensorboard_experiment"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,tensorboard_experiment,tensorboard_experiment_id"
                            }
                          ]
                        },
                        "GetTensorboardExperiment": {
                          "requestType": "GetTensorboardExperimentRequest",
                          "responseType": "TensorboardExperiment",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/tensorboards/*/experiments/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/tensorboards/*/experiments/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "UpdateTensorboardExperiment": {
                          "requestType": "UpdateTensorboardExperimentRequest",
                          "responseType": "TensorboardExperiment",
                          "options": {
                            "(google.api.http).patch": "/v1/{tensorboard_experiment.name=projects/*/locations/*/tensorboards/*/experiments/*}",
                            "(google.api.http).body": "tensorboard_experiment",
                            "(google.api.method_signature)": "tensorboard_experiment,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{tensorboard_experiment.name=projects/*/locations/*/tensorboards/*/experiments/*}",
                                "body": "tensorboard_experiment"
                              }
                            },
                            {
                              "(google.api.method_signature)": "tensorboard_experiment,update_mask"
                            }
                          ]
                        },
                        "ListTensorboardExperiments": {
                          "requestType": "ListTensorboardExperimentsRequest",
                          "responseType": "ListTensorboardExperimentsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/tensorboards/*}/experiments",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/tensorboards/*}/experiments"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteTensorboardExperiment": {
                          "requestType": "DeleteTensorboardExperimentRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/tensorboards/*/experiments/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/tensorboards/*/experiments/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CreateTensorboardRun": {
                          "requestType": "CreateTensorboardRunRequest",
                          "responseType": "TensorboardRun",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/tensorboards/*/experiments/*}/runs",
                            "(google.api.http).body": "tensorboard_run",
                            "(google.api.method_signature)": "parent,tensorboard_run,tensorboard_run_id"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/tensorboards/*/experiments/*}/runs",
                                "body": "tensorboard_run"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,tensorboard_run,tensorboard_run_id"
                            }
                          ]
                        },
                        "BatchCreateTensorboardRuns": {
                          "requestType": "BatchCreateTensorboardRunsRequest",
                          "responseType": "BatchCreateTensorboardRunsResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/tensorboards/*/experiments/*}/runs:batchCreate",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,requests"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/tensorboards/*/experiments/*}/runs:batchCreate",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,requests"
                            }
                          ]
                        },
                        "GetTensorboardRun": {
                          "requestType": "GetTensorboardRunRequest",
                          "responseType": "TensorboardRun",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "UpdateTensorboardRun": {
                          "requestType": "UpdateTensorboardRunRequest",
                          "responseType": "TensorboardRun",
                          "options": {
                            "(google.api.http).patch": "/v1/{tensorboard_run.name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*}",
                            "(google.api.http).body": "tensorboard_run",
                            "(google.api.method_signature)": "tensorboard_run,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{tensorboard_run.name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*}",
                                "body": "tensorboard_run"
                              }
                            },
                            {
                              "(google.api.method_signature)": "tensorboard_run,update_mask"
                            }
                          ]
                        },
                        "ListTensorboardRuns": {
                          "requestType": "ListTensorboardRunsRequest",
                          "responseType": "ListTensorboardRunsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/tensorboards/*/experiments/*}/runs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/tensorboards/*/experiments/*}/runs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteTensorboardRun": {
                          "requestType": "DeleteTensorboardRunRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "BatchCreateTensorboardTimeSeries": {
                          "requestType": "BatchCreateTensorboardTimeSeriesRequest",
                          "responseType": "BatchCreateTensorboardTimeSeriesResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/tensorboards/*/experiments/*}:batchCreate",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,requests"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/tensorboards/*/experiments/*}:batchCreate",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,requests"
                            }
                          ]
                        },
                        "CreateTensorboardTimeSeries": {
                          "requestType": "CreateTensorboardTimeSeriesRequest",
                          "responseType": "TensorboardTimeSeries",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/tensorboards/*/experiments/*/runs/*}/timeSeries",
                            "(google.api.http).body": "tensorboard_time_series",
                            "(google.api.method_signature)": "parent,tensorboard_time_series"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/tensorboards/*/experiments/*/runs/*}/timeSeries",
                                "body": "tensorboard_time_series"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,tensorboard_time_series"
                            }
                          ]
                        },
                        "GetTensorboardTimeSeries": {
                          "requestType": "GetTensorboardTimeSeriesRequest",
                          "responseType": "TensorboardTimeSeries",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "UpdateTensorboardTimeSeries": {
                          "requestType": "UpdateTensorboardTimeSeriesRequest",
                          "responseType": "TensorboardTimeSeries",
                          "options": {
                            "(google.api.http).patch": "/v1/{tensorboard_time_series.name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*}",
                            "(google.api.http).body": "tensorboard_time_series",
                            "(google.api.method_signature)": "tensorboard_time_series,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{tensorboard_time_series.name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*}",
                                "body": "tensorboard_time_series"
                              }
                            },
                            {
                              "(google.api.method_signature)": "tensorboard_time_series,update_mask"
                            }
                          ]
                        },
                        "ListTensorboardTimeSeries": {
                          "requestType": "ListTensorboardTimeSeriesRequest",
                          "responseType": "ListTensorboardTimeSeriesResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/tensorboards/*/experiments/*/runs/*}/timeSeries",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/tensorboards/*/experiments/*/runs/*}/timeSeries"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteTensorboardTimeSeries": {
                          "requestType": "DeleteTensorboardTimeSeriesRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "BatchReadTensorboardTimeSeriesData": {
                          "requestType": "BatchReadTensorboardTimeSeriesDataRequest",
                          "responseType": "BatchReadTensorboardTimeSeriesDataResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{tensorboard=projects/*/locations/*/tensorboards/*}:batchRead",
                            "(google.api.method_signature)": "tensorboard"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{tensorboard=projects/*/locations/*/tensorboards/*}:batchRead"
                              }
                            },
                            {
                              "(google.api.method_signature)": "tensorboard"
                            }
                          ]
                        },
                        "ReadTensorboardTimeSeriesData": {
                          "requestType": "ReadTensorboardTimeSeriesDataRequest",
                          "responseType": "ReadTensorboardTimeSeriesDataResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{tensorboard_time_series=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*}:read",
                            "(google.api.method_signature)": "tensorboard_time_series"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{tensorboard_time_series=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*}:read"
                              }
                            },
                            {
                              "(google.api.method_signature)": "tensorboard_time_series"
                            }
                          ]
                        },
                        "ReadTensorboardBlobData": {
                          "requestType": "ReadTensorboardBlobDataRequest",
                          "responseType": "ReadTensorboardBlobDataResponse",
                          "responseStream": true,
                          "options": {
                            "(google.api.http).get": "/v1/{time_series=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*}:readBlobData",
                            "(google.api.method_signature)": "time_series"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{time_series=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*}:readBlobData"
                              }
                            },
                            {
                              "(google.api.method_signature)": "time_series"
                            }
                          ]
                        },
                        "WriteTensorboardExperimentData": {
                          "requestType": "WriteTensorboardExperimentDataRequest",
                          "responseType": "WriteTensorboardExperimentDataResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{tensorboard_experiment=projects/*/locations/*/tensorboards/*/experiments/*}:write",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "tensorboard_experiment,write_run_data_requests"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{tensorboard_experiment=projects/*/locations/*/tensorboards/*/experiments/*}:write",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "tensorboard_experiment,write_run_data_requests"
                            }
                          ]
                        },
                        "WriteTensorboardRunData": {
                          "requestType": "WriteTensorboardRunDataRequest",
                          "responseType": "WriteTensorboardRunDataResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{tensorboard_run=projects/*/locations/*/tensorboards/*/experiments/*/runs/*}:write",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "tensorboard_run,time_series_data"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{tensorboard_run=projects/*/locations/*/tensorboards/*/experiments/*/runs/*}:write",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "tensorboard_run,time_series_data"
                            }
                          ]
                        },
                        "ExportTensorboardTimeSeriesData": {
                          "requestType": "ExportTensorboardTimeSeriesDataRequest",
                          "responseType": "ExportTensorboardTimeSeriesDataResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{tensorboard_time_series=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*}:exportTensorboardTimeSeries",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "tensorboard_time_series"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{tensorboard_time_series=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*}:exportTensorboardTimeSeries",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "tensorboard_time_series"
                            }
                          ]
                        }
                      }
                    },
                    "CreateTensorboardRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Tensorboard"
                          }
                        },
                        "tensorboard": {
                          "type": "Tensorboard",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetTensorboardRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Tensorboard"
                          }
                        }
                      }
                    },
                    "ListTensorboardsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/Tensorboard"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 6
                        }
                      }
                    },
                    "ListTensorboardsResponse": {
                      "fields": {
                        "tensorboards": {
                          "rule": "repeated",
                          "type": "Tensorboard",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateTensorboardRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "tensorboard": {
                          "type": "Tensorboard",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteTensorboardRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Tensorboard"
                          }
                        }
                      }
                    },
                    "ReadTensorboardUsageRequest": {
                      "fields": {
                        "tensorboard": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Tensorboard"
                          }
                        }
                      }
                    },
                    "ReadTensorboardUsageResponse": {
                      "fields": {
                        "monthlyUsageData": {
                          "keyType": "string",
                          "type": "PerMonthUsageData",
                          "id": 1
                        }
                      },
                      "nested": {
                        "PerUserUsageData": {
                          "fields": {
                            "username": {
                              "type": "string",
                              "id": 1
                            },
                            "viewCount": {
                              "type": "int64",
                              "id": 2
                            }
                          }
                        },
                        "PerMonthUsageData": {
                          "fields": {
                            "userUsageData": {
                              "rule": "repeated",
                              "type": "PerUserUsageData",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "ReadTensorboardSizeRequest": {
                      "fields": {
                        "tensorboard": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Tensorboard"
                          }
                        }
                      }
                    },
                    "ReadTensorboardSizeResponse": {
                      "fields": {
                        "storageSizeByte": {
                          "type": "int64",
                          "id": 1
                        }
                      }
                    },
                    "CreateTensorboardExperimentRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardExperiment"
                          }
                        },
                        "tensorboardExperiment": {
                          "type": "TensorboardExperiment",
                          "id": 2
                        },
                        "tensorboardExperimentId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetTensorboardExperimentRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardExperiment"
                          }
                        }
                      }
                    },
                    "ListTensorboardExperimentsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/TensorboardExperiment"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 6
                        }
                      }
                    },
                    "ListTensorboardExperimentsResponse": {
                      "fields": {
                        "tensorboardExperiments": {
                          "rule": "repeated",
                          "type": "TensorboardExperiment",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateTensorboardExperimentRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "tensorboardExperiment": {
                          "type": "TensorboardExperiment",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteTensorboardExperimentRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardExperiment"
                          }
                        }
                      }
                    },
                    "BatchCreateTensorboardRunsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardExperiment"
                          }
                        },
                        "requests": {
                          "rule": "repeated",
                          "type": "CreateTensorboardRunRequest",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "BatchCreateTensorboardRunsResponse": {
                      "fields": {
                        "tensorboardRuns": {
                          "rule": "repeated",
                          "type": "TensorboardRun",
                          "id": 1
                        }
                      }
                    },
                    "CreateTensorboardRunRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardRun"
                          }
                        },
                        "tensorboardRun": {
                          "type": "TensorboardRun",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "tensorboardRunId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetTensorboardRunRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardRun"
                          }
                        }
                      }
                    },
                    "ReadTensorboardBlobDataRequest": {
                      "fields": {
                        "timeSeries": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardTimeSeries"
                          }
                        },
                        "blobIds": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "ReadTensorboardBlobDataResponse": {
                      "fields": {
                        "blobs": {
                          "rule": "repeated",
                          "type": "TensorboardBlob",
                          "id": 1
                        }
                      }
                    },
                    "ListTensorboardRunsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/TensorboardRun"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 6
                        }
                      }
                    },
                    "ListTensorboardRunsResponse": {
                      "fields": {
                        "tensorboardRuns": {
                          "rule": "repeated",
                          "type": "TensorboardRun",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateTensorboardRunRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "tensorboardRun": {
                          "type": "TensorboardRun",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteTensorboardRunRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardRun"
                          }
                        }
                      }
                    },
                    "BatchCreateTensorboardTimeSeriesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardExperiment"
                          }
                        },
                        "requests": {
                          "rule": "repeated",
                          "type": "CreateTensorboardTimeSeriesRequest",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "BatchCreateTensorboardTimeSeriesResponse": {
                      "fields": {
                        "tensorboardTimeSeries": {
                          "rule": "repeated",
                          "type": "TensorboardTimeSeries",
                          "id": 1
                        }
                      }
                    },
                    "CreateTensorboardTimeSeriesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardTimeSeries"
                          }
                        },
                        "tensorboardTimeSeriesId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "tensorboardTimeSeries": {
                          "type": "TensorboardTimeSeries",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetTensorboardTimeSeriesRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardTimeSeries"
                          }
                        }
                      }
                    },
                    "ListTensorboardTimeSeriesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/TensorboardTimeSeries"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 6
                        }
                      }
                    },
                    "ListTensorboardTimeSeriesResponse": {
                      "fields": {
                        "tensorboardTimeSeries": {
                          "rule": "repeated",
                          "type": "TensorboardTimeSeries",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateTensorboardTimeSeriesRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "tensorboardTimeSeries": {
                          "type": "TensorboardTimeSeries",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteTensorboardTimeSeriesRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardTimeSeries"
                          }
                        }
                      }
                    },
                    "BatchReadTensorboardTimeSeriesDataRequest": {
                      "fields": {
                        "tensorboard": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Tensorboard"
                          }
                        },
                        "timeSeries": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardTimeSeries"
                          }
                        }
                      }
                    },
                    "BatchReadTensorboardTimeSeriesDataResponse": {
                      "fields": {
                        "timeSeriesData": {
                          "rule": "repeated",
                          "type": "TimeSeriesData",
                          "id": 1
                        }
                      }
                    },
                    "ReadTensorboardTimeSeriesDataRequest": {
                      "fields": {
                        "tensorboardTimeSeries": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardTimeSeries"
                          }
                        },
                        "maxDataPoints": {
                          "type": "int32",
                          "id": 2
                        },
                        "filter": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ReadTensorboardTimeSeriesDataResponse": {
                      "fields": {
                        "timeSeriesData": {
                          "type": "TimeSeriesData",
                          "id": 1
                        }
                      }
                    },
                    "WriteTensorboardExperimentDataRequest": {
                      "fields": {
                        "tensorboardExperiment": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardExperiment"
                          }
                        },
                        "writeRunDataRequests": {
                          "rule": "repeated",
                          "type": "WriteTensorboardRunDataRequest",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "WriteTensorboardExperimentDataResponse": {
                      "fields": {}
                    },
                    "WriteTensorboardRunDataRequest": {
                      "fields": {
                        "tensorboardRun": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardRun"
                          }
                        },
                        "timeSeriesData": {
                          "rule": "repeated",
                          "type": "TimeSeriesData",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "WriteTensorboardRunDataResponse": {
                      "fields": {}
                    },
                    "ExportTensorboardTimeSeriesDataRequest": {
                      "fields": {
                        "tensorboardTimeSeries": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardTimeSeries"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ExportTensorboardTimeSeriesDataResponse": {
                      "fields": {
                        "timeSeriesDataPoints": {
                          "rule": "repeated",
                          "type": "TimeSeriesDataPoint",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "CreateTensorboardOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "UpdateTensorboardOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "VizierService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateStudy": {
                          "requestType": "CreateStudyRequest",
                          "responseType": "Study",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/studies",
                            "(google.api.http).body": "study",
                            "(google.api.method_signature)": "parent,study"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/studies",
                                "body": "study"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,study"
                            }
                          ]
                        },
                        "GetStudy": {
                          "requestType": "GetStudyRequest",
                          "responseType": "Study",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/studies/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/studies/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListStudies": {
                          "requestType": "ListStudiesRequest",
                          "responseType": "ListStudiesResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/studies",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/studies"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteStudy": {
                          "requestType": "DeleteStudyRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/studies/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/studies/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "LookupStudy": {
                          "requestType": "LookupStudyRequest",
                          "responseType": "Study",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/studies:lookup",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/studies:lookup",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "SuggestTrials": {
                          "requestType": "SuggestTrialsRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/studies/*}/trials:suggest",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "SuggestTrialsResponse",
                            "(google.longrunning.operation_info).metadata_type": "SuggestTrialsMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/studies/*}/trials:suggest",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "SuggestTrialsResponse",
                                "metadata_type": "SuggestTrialsMetadata"
                              }
                            }
                          ]
                        },
                        "CreateTrial": {
                          "requestType": "CreateTrialRequest",
                          "responseType": "Trial",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/studies/*}/trials",
                            "(google.api.http).body": "trial",
                            "(google.api.method_signature)": "parent,trial"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/studies/*}/trials",
                                "body": "trial"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,trial"
                            }
                          ]
                        },
                        "GetTrial": {
                          "requestType": "GetTrialRequest",
                          "responseType": "Trial",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/studies/*/trials/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/studies/*/trials/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListTrials": {
                          "requestType": "ListTrialsRequest",
                          "responseType": "ListTrialsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/studies/*}/trials",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/studies/*}/trials"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "AddTrialMeasurement": {
                          "requestType": "AddTrialMeasurementRequest",
                          "responseType": "Trial",
                          "options": {
                            "(google.api.http).post": "/v1/{trial_name=projects/*/locations/*/studies/*/trials/*}:addTrialMeasurement",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{trial_name=projects/*/locations/*/studies/*/trials/*}:addTrialMeasurement",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "CompleteTrial": {
                          "requestType": "CompleteTrialRequest",
                          "responseType": "Trial",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/studies/*/trials/*}:complete",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/studies/*/trials/*}:complete",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "DeleteTrial": {
                          "requestType": "DeleteTrialRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/studies/*/trials/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/studies/*/trials/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CheckTrialEarlyStoppingState": {
                          "requestType": "CheckTrialEarlyStoppingStateRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{trial_name=projects/*/locations/*/studies/*/trials/*}:checkTrialEarlyStoppingState",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "CheckTrialEarlyStoppingStateResponse",
                            "(google.longrunning.operation_info).metadata_type": "CheckTrialEarlyStoppingStateMetatdata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{trial_name=projects/*/locations/*/studies/*/trials/*}:checkTrialEarlyStoppingState",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "CheckTrialEarlyStoppingStateResponse",
                                "metadata_type": "CheckTrialEarlyStoppingStateMetatdata"
                              }
                            }
                          ]
                        },
                        "StopTrial": {
                          "requestType": "StopTrialRequest",
                          "responseType": "Trial",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/studies/*/trials/*}:stop",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/studies/*/trials/*}:stop",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "ListOptimalTrials": {
                          "requestType": "ListOptimalTrialsRequest",
                          "responseType": "ListOptimalTrialsResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/studies/*}/trials:listOptimalTrials",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/studies/*}/trials:listOptimalTrials",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        }
                      }
                    },
                    "GetStudyRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Study"
                          }
                        }
                      }
                    },
                    "CreateStudyRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "study": {
                          "type": "Study",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ListStudiesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListStudiesResponse": {
                      "fields": {
                        "studies": {
                          "rule": "repeated",
                          "type": "Study",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteStudyRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Study"
                          }
                        }
                      }
                    },
                    "LookupStudyRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "SuggestTrialsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Study"
                          }
                        },
                        "suggestionCount": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "clientId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "contexts": {
                          "rule": "repeated",
                          "type": "TrialContext",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "SuggestTrialsResponse": {
                      "fields": {
                        "trials": {
                          "rule": "repeated",
                          "type": "Trial",
                          "id": 1
                        },
                        "studyState": {
                          "type": "Study.State",
                          "id": 2
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4
                        }
                      }
                    },
                    "SuggestTrialsMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        },
                        "clientId": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "CreateTrialRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Study"
                          }
                        },
                        "trial": {
                          "type": "Trial",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetTrialRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Trial"
                          }
                        }
                      }
                    },
                    "ListTrialsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Study"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListTrialsResponse": {
                      "fields": {
                        "trials": {
                          "rule": "repeated",
                          "type": "Trial",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "AddTrialMeasurementRequest": {
                      "fields": {
                        "trialName": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Trial"
                          }
                        },
                        "measurement": {
                          "type": "Measurement",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CompleteTrialRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Trial"
                          }
                        },
                        "finalMeasurement": {
                          "type": "Measurement",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "trialInfeasible": {
                          "type": "bool",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "infeasibleReason": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DeleteTrialRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Trial"
                          }
                        }
                      }
                    },
                    "CheckTrialEarlyStoppingStateRequest": {
                      "fields": {
                        "trialName": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Trial"
                          }
                        }
                      }
                    },
                    "CheckTrialEarlyStoppingStateResponse": {
                      "fields": {
                        "shouldStop": {
                          "type": "bool",
                          "id": 1
                        }
                      }
                    },
                    "CheckTrialEarlyStoppingStateMetatdata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        },
                        "study": {
                          "type": "string",
                          "id": 2
                        },
                        "trial": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "StopTrialRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Trial"
                          }
                        }
                      }
                    },
                    "ListOptimalTrialsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Study"
                          }
                        }
                      }
                    },
                    "ListOptimalTrialsResponse": {
                      "fields": {
                        "optimalTrials": {
                          "rule": "repeated",
                          "type": "Trial",
                          "id": 1
                        }
                      }
                    }
                  }
                },
                "v1beta1": {
                  "options": {
                    "csharp_namespace": "Google.Cloud.AIPlatform.V1Beta1",
                    "go_package": "cloud.google.com/go/aiplatform/apiv1beta1/aiplatformpb;aiplatformpb",
                    "java_multiple_files": true,
                    "java_outer_classname": "VizierServiceProto",
                    "java_package": "com.google.cloud.aiplatform.v1beta1",
                    "php_namespace": "Google\\Cloud\\AIPlatform\\V1beta1",
                    "ruby_package": "Google::Cloud::AIPlatform::V1beta1",
                    "(google.api.resource_definition).type": "compute.googleapis.com/Network",
                    "(google.api.resource_definition).pattern": "projects/{project}/global/networks/{network}"
                  },
                  "nested": {
                    "AcceleratorType": {
                      "values": {
                        "ACCELERATOR_TYPE_UNSPECIFIED": 0,
                        "NVIDIA_TESLA_K80": 1,
                        "NVIDIA_TESLA_P100": 2,
                        "NVIDIA_TESLA_V100": 3,
                        "NVIDIA_TESLA_P4": 4,
                        "NVIDIA_TESLA_T4": 5,
                        "NVIDIA_TESLA_A100": 8,
                        "NVIDIA_A100_80GB": 9,
                        "NVIDIA_L4": 11,
                        "NVIDIA_H100_80GB": 13,
                        "TPU_V2": 6,
                        "TPU_V3": 7,
                        "TPU_V4_POD": 10,
                        "TPU_V5_LITEPOD": 12
                      }
                    },
                    "Annotation": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Annotation",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/datasets/{dataset}/dataItems/{data_item}/annotations/{annotation}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "payloadSchemaUri": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "payload": {
                          "type": "google.protobuf.Value",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "annotationSource": {
                          "type": "UserActionReference",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "UserActionReference": {
                      "oneofs": {
                        "reference": {
                          "oneof": [
                            "operation",
                            "dataLabelingJob"
                          ]
                        }
                      },
                      "fields": {
                        "operation": {
                          "type": "string",
                          "id": 1
                        },
                        "dataLabelingJob": {
                          "type": "string",
                          "id": 2
                        },
                        "method": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "AnnotationSpec": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/AnnotationSpec",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/datasets/{dataset}/annotationSpecs/{annotation_spec}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "Artifact": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Artifact",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2
                        },
                        "uri": {
                          "type": "string",
                          "id": 6
                        },
                        "etag": {
                          "type": "string",
                          "id": 9
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 10
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 13
                        },
                        "schemaTitle": {
                          "type": "string",
                          "id": 14
                        },
                        "schemaVersion": {
                          "type": "string",
                          "id": 15
                        },
                        "metadata": {
                          "type": "google.protobuf.Struct",
                          "id": 16
                        },
                        "description": {
                          "type": "string",
                          "id": 17
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "PENDING": 1,
                            "LIVE": 2
                          }
                        }
                      }
                    },
                    "BatchPredictionJob": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/BatchPredictionJob",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "model": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "modelVersionId": {
                          "type": "string",
                          "id": 30,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "unmanagedContainerModel": {
                          "type": "UnmanagedContainerModel",
                          "id": 28
                        },
                        "inputConfig": {
                          "type": "InputConfig",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "instanceConfig": {
                          "type": "InstanceConfig",
                          "id": 27
                        },
                        "modelParameters": {
                          "type": "google.protobuf.Value",
                          "id": 5
                        },
                        "outputConfig": {
                          "type": "OutputConfig",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "dedicatedResources": {
                          "type": "BatchDedicatedResources",
                          "id": 7
                        },
                        "serviceAccount": {
                          "type": "string",
                          "id": 29
                        },
                        "manualBatchTuningParameters": {
                          "type": "ManualBatchTuningParameters",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "generateExplanation": {
                          "type": "bool",
                          "id": 23
                        },
                        "explanationSpec": {
                          "type": "ExplanationSpec",
                          "id": 25
                        },
                        "outputInfo": {
                          "type": "OutputInfo",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "JobState",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "partialFailures": {
                          "rule": "repeated",
                          "type": "google.rpc.Status",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "resourcesConsumed": {
                          "type": "ResourcesConsumed",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "completionStats": {
                          "type": "CompletionStats",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 15,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 16,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 17,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 18,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 19
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 24
                        },
                        "modelMonitoringConfig": {
                          "type": "ModelMonitoringConfig",
                          "id": 26
                        },
                        "modelMonitoringStatsAnomalies": {
                          "rule": "repeated",
                          "type": "ModelMonitoringStatsAnomalies",
                          "id": 31
                        },
                        "modelMonitoringStatus": {
                          "type": "google.rpc.Status",
                          "id": 32,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "disableContainerLogging": {
                          "type": "bool",
                          "id": 34
                        }
                      },
                      "nested": {
                        "InputConfig": {
                          "oneofs": {
                            "source": {
                              "oneof": [
                                "gcsSource",
                                "bigquerySource"
                              ]
                            }
                          },
                          "fields": {
                            "gcsSource": {
                              "type": "GcsSource",
                              "id": 2
                            },
                            "bigquerySource": {
                              "type": "BigQuerySource",
                              "id": 3
                            },
                            "instancesFormat": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "InstanceConfig": {
                          "fields": {
                            "instanceType": {
                              "type": "string",
                              "id": 1
                            },
                            "keyField": {
                              "type": "string",
                              "id": 2
                            },
                            "includedFields": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3
                            },
                            "excludedFields": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "OutputConfig": {
                          "oneofs": {
                            "destination": {
                              "oneof": [
                                "gcsDestination",
                                "bigqueryDestination"
                              ]
                            }
                          },
                          "fields": {
                            "gcsDestination": {
                              "type": "GcsDestination",
                              "id": 2
                            },
                            "bigqueryDestination": {
                              "type": "BigQueryDestination",
                              "id": 3
                            },
                            "predictionsFormat": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "OutputInfo": {
                          "oneofs": {
                            "outputLocation": {
                              "oneof": [
                                "gcsOutputDirectory",
                                "bigqueryOutputDataset"
                              ]
                            }
                          },
                          "fields": {
                            "gcsOutputDirectory": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "bigqueryOutputDataset": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "bigqueryOutputTable": {
                              "type": "string",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        }
                      }
                    },
                    "CompletionStats": {
                      "fields": {
                        "successfulCount": {
                          "type": "int64",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "failedCount": {
                          "type": "int64",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "incompleteCount": {
                          "type": "int64",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "successfulForecastPointCount": {
                          "type": "int64",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "EncryptionSpec": {
                      "fields": {
                        "kmsKeyName": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "Explanation": {
                      "fields": {
                        "attributions": {
                          "rule": "repeated",
                          "type": "Attribution",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "neighbors": {
                          "rule": "repeated",
                          "type": "Neighbor",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "ModelExplanation": {
                      "fields": {
                        "meanAttributions": {
                          "rule": "repeated",
                          "type": "Attribution",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "Attribution": {
                      "fields": {
                        "baselineOutputValue": {
                          "type": "double",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "instanceOutputValue": {
                          "type": "double",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "featureAttributions": {
                          "type": "google.protobuf.Value",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "outputIndex": {
                          "rule": "repeated",
                          "type": "int32",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "outputDisplayName": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "approximationError": {
                          "type": "double",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "outputName": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "Neighbor": {
                      "fields": {
                        "neighborId": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "neighborDistance": {
                          "type": "double",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "ExplanationSpec": {
                      "fields": {
                        "parameters": {
                          "type": "ExplanationParameters",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "metadata": {
                          "type": "ExplanationMetadata",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ExplanationParameters": {
                      "oneofs": {
                        "method": {
                          "oneof": [
                            "sampledShapleyAttribution",
                            "integratedGradientsAttribution",
                            "xraiAttribution",
                            "examples"
                          ]
                        }
                      },
                      "fields": {
                        "sampledShapleyAttribution": {
                          "type": "SampledShapleyAttribution",
                          "id": 1
                        },
                        "integratedGradientsAttribution": {
                          "type": "IntegratedGradientsAttribution",
                          "id": 2
                        },
                        "xraiAttribution": {
                          "type": "XraiAttribution",
                          "id": 3
                        },
                        "examples": {
                          "type": "Examples",
                          "id": 7
                        },
                        "topK": {
                          "type": "int32",
                          "id": 4
                        },
                        "outputIndices": {
                          "type": "google.protobuf.ListValue",
                          "id": 5
                        }
                      }
                    },
                    "SampledShapleyAttribution": {
                      "fields": {
                        "pathCount": {
                          "type": "int32",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "IntegratedGradientsAttribution": {
                      "fields": {
                        "stepCount": {
                          "type": "int32",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "smoothGradConfig": {
                          "type": "SmoothGradConfig",
                          "id": 2
                        },
                        "blurBaselineConfig": {
                          "type": "BlurBaselineConfig",
                          "id": 3
                        }
                      }
                    },
                    "XraiAttribution": {
                      "fields": {
                        "stepCount": {
                          "type": "int32",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "smoothGradConfig": {
                          "type": "SmoothGradConfig",
                          "id": 2
                        },
                        "blurBaselineConfig": {
                          "type": "BlurBaselineConfig",
                          "id": 3
                        }
                      }
                    },
                    "SmoothGradConfig": {
                      "oneofs": {
                        "GradientNoiseSigma": {
                          "oneof": [
                            "noiseSigma",
                            "featureNoiseSigma"
                          ]
                        }
                      },
                      "fields": {
                        "noiseSigma": {
                          "type": "float",
                          "id": 1
                        },
                        "featureNoiseSigma": {
                          "type": "FeatureNoiseSigma",
                          "id": 2
                        },
                        "noisySampleCount": {
                          "type": "int32",
                          "id": 3
                        }
                      }
                    },
                    "FeatureNoiseSigma": {
                      "fields": {
                        "noiseSigma": {
                          "rule": "repeated",
                          "type": "NoiseSigmaForFeature",
                          "id": 1
                        }
                      },
                      "nested": {
                        "NoiseSigmaForFeature": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "sigma": {
                              "type": "float",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "BlurBaselineConfig": {
                      "fields": {
                        "maxBlurSigma": {
                          "type": "float",
                          "id": 1
                        }
                      }
                    },
                    "Examples": {
                      "oneofs": {
                        "source": {
                          "oneof": [
                            "exampleGcsSource"
                          ]
                        },
                        "config": {
                          "oneof": [
                            "nearestNeighborSearchConfig",
                            "presets"
                          ]
                        }
                      },
                      "fields": {
                        "exampleGcsSource": {
                          "type": "ExampleGcsSource",
                          "id": 5
                        },
                        "nearestNeighborSearchConfig": {
                          "type": "google.protobuf.Value",
                          "id": 2
                        },
                        "presets": {
                          "type": "Presets",
                          "id": 4
                        },
                        "gcsSource": {
                          "type": "GcsSource",
                          "id": 1
                        },
                        "neighborCount": {
                          "type": "int32",
                          "id": 3
                        }
                      },
                      "nested": {
                        "ExampleGcsSource": {
                          "fields": {
                            "dataFormat": {
                              "type": "DataFormat",
                              "id": 1
                            },
                            "gcsSource": {
                              "type": "GcsSource",
                              "id": 2
                            }
                          },
                          "nested": {
                            "DataFormat": {
                              "values": {
                                "DATA_FORMAT_UNSPECIFIED": 0,
                                "JSONL": 1
                              }
                            }
                          }
                        }
                      }
                    },
                    "Presets": {
                      "oneofs": {
                        "_query": {
                          "oneof": [
                            "query"
                          ]
                        }
                      },
                      "fields": {
                        "query": {
                          "type": "Query",
                          "id": 1,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "modality": {
                          "type": "Modality",
                          "id": 2
                        }
                      },
                      "nested": {
                        "Query": {
                          "values": {
                            "PRECISE": 0,
                            "FAST": 1
                          }
                        },
                        "Modality": {
                          "values": {
                            "MODALITY_UNSPECIFIED": 0,
                            "IMAGE": 1,
                            "TEXT": 2,
                            "TABULAR": 3
                          }
                        }
                      }
                    },
                    "ExplanationSpecOverride": {
                      "fields": {
                        "parameters": {
                          "type": "ExplanationParameters",
                          "id": 1
                        },
                        "metadata": {
                          "type": "ExplanationMetadataOverride",
                          "id": 2
                        },
                        "examplesOverride": {
                          "type": "ExamplesOverride",
                          "id": 3
                        }
                      }
                    },
                    "ExplanationMetadataOverride": {
                      "fields": {
                        "inputs": {
                          "keyType": "string",
                          "type": "InputMetadataOverride",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      },
                      "nested": {
                        "InputMetadataOverride": {
                          "fields": {
                            "inputBaselines": {
                              "rule": "repeated",
                              "type": "google.protobuf.Value",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "ExamplesOverride": {
                      "fields": {
                        "neighborCount": {
                          "type": "int32",
                          "id": 1
                        },
                        "crowdingCount": {
                          "type": "int32",
                          "id": 2
                        },
                        "restrictions": {
                          "rule": "repeated",
                          "type": "ExamplesRestrictionsNamespace",
                          "id": 3
                        },
                        "returnEmbeddings": {
                          "type": "bool",
                          "id": 4
                        },
                        "dataFormat": {
                          "type": "DataFormat",
                          "id": 5
                        }
                      },
                      "nested": {
                        "DataFormat": {
                          "values": {
                            "DATA_FORMAT_UNSPECIFIED": 0,
                            "INSTANCES": 1,
                            "EMBEDDINGS": 2
                          }
                        }
                      }
                    },
                    "ExamplesRestrictionsNamespace": {
                      "fields": {
                        "namespaceName": {
                          "type": "string",
                          "id": 1
                        },
                        "allow": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2
                        },
                        "deny": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ExplanationMetadata": {
                      "fields": {
                        "inputs": {
                          "keyType": "string",
                          "type": "InputMetadata",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "outputs": {
                          "keyType": "string",
                          "type": "OutputMetadata",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "featureAttributionsSchemaUri": {
                          "type": "string",
                          "id": 3
                        },
                        "latentSpaceSource": {
                          "type": "string",
                          "id": 5
                        }
                      },
                      "nested": {
                        "InputMetadata": {
                          "fields": {
                            "inputBaselines": {
                              "rule": "repeated",
                              "type": "google.protobuf.Value",
                              "id": 1
                            },
                            "inputTensorName": {
                              "type": "string",
                              "id": 2
                            },
                            "encoding": {
                              "type": "Encoding",
                              "id": 3
                            },
                            "modality": {
                              "type": "string",
                              "id": 4
                            },
                            "featureValueDomain": {
                              "type": "FeatureValueDomain",
                              "id": 5
                            },
                            "indicesTensorName": {
                              "type": "string",
                              "id": 6
                            },
                            "denseShapeTensorName": {
                              "type": "string",
                              "id": 7
                            },
                            "indexFeatureMapping": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 8
                            },
                            "encodedTensorName": {
                              "type": "string",
                              "id": 9
                            },
                            "encodedBaselines": {
                              "rule": "repeated",
                              "type": "google.protobuf.Value",
                              "id": 10
                            },
                            "visualization": {
                              "type": "Visualization",
                              "id": 11
                            },
                            "groupName": {
                              "type": "string",
                              "id": 12
                            }
                          },
                          "nested": {
                            "FeatureValueDomain": {
                              "fields": {
                                "minValue": {
                                  "type": "float",
                                  "id": 1
                                },
                                "maxValue": {
                                  "type": "float",
                                  "id": 2
                                },
                                "originalMean": {
                                  "type": "float",
                                  "id": 3
                                },
                                "originalStddev": {
                                  "type": "float",
                                  "id": 4
                                }
                              }
                            },
                            "Visualization": {
                              "fields": {
                                "type": {
                                  "type": "Type",
                                  "id": 1
                                },
                                "polarity": {
                                  "type": "Polarity",
                                  "id": 2
                                },
                                "colorMap": {
                                  "type": "ColorMap",
                                  "id": 3
                                },
                                "clipPercentUpperbound": {
                                  "type": "float",
                                  "id": 4
                                },
                                "clipPercentLowerbound": {
                                  "type": "float",
                                  "id": 5
                                },
                                "overlayType": {
                                  "type": "OverlayType",
                                  "id": 6
                                }
                              },
                              "nested": {
                                "Type": {
                                  "values": {
                                    "TYPE_UNSPECIFIED": 0,
                                    "PIXELS": 1,
                                    "OUTLINES": 2
                                  }
                                },
                                "Polarity": {
                                  "values": {
                                    "POLARITY_UNSPECIFIED": 0,
                                    "POSITIVE": 1,
                                    "NEGATIVE": 2,
                                    "BOTH": 3
                                  }
                                },
                                "ColorMap": {
                                  "values": {
                                    "COLOR_MAP_UNSPECIFIED": 0,
                                    "PINK_GREEN": 1,
                                    "VIRIDIS": 2,
                                    "RED": 3,
                                    "GREEN": 4,
                                    "RED_GREEN": 6,
                                    "PINK_WHITE_GREEN": 5
                                  }
                                },
                                "OverlayType": {
                                  "values": {
                                    "OVERLAY_TYPE_UNSPECIFIED": 0,
                                    "NONE": 1,
                                    "ORIGINAL": 2,
                                    "GRAYSCALE": 3,
                                    "MASK_BLACK": 4
                                  }
                                }
                              }
                            },
                            "Encoding": {
                              "values": {
                                "ENCODING_UNSPECIFIED": 0,
                                "IDENTITY": 1,
                                "BAG_OF_FEATURES": 2,
                                "BAG_OF_FEATURES_SPARSE": 3,
                                "INDICATOR": 4,
                                "COMBINED_EMBEDDING": 5,
                                "CONCAT_EMBEDDING": 6
                              }
                            }
                          }
                        },
                        "OutputMetadata": {
                          "oneofs": {
                            "displayNameMapping": {
                              "oneof": [
                                "indexDisplayNameMapping",
                                "displayNameMappingKey"
                              ]
                            }
                          },
                          "fields": {
                            "indexDisplayNameMapping": {
                              "type": "google.protobuf.Value",
                              "id": 1
                            },
                            "displayNameMappingKey": {
                              "type": "string",
                              "id": 2
                            },
                            "outputTensorName": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        }
                      }
                    },
                    "AvroSource": {
                      "fields": {
                        "gcsSource": {
                          "type": "GcsSource",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CsvSource": {
                      "fields": {
                        "gcsSource": {
                          "type": "GcsSource",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GcsSource": {
                      "fields": {
                        "uris": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GcsDestination": {
                      "fields": {
                        "outputUriPrefix": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "BigQuerySource": {
                      "fields": {
                        "inputUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "BigQueryDestination": {
                      "fields": {
                        "outputUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CsvDestination": {
                      "fields": {
                        "gcsDestination": {
                          "type": "GcsDestination",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "TFRecordDestination": {
                      "fields": {
                        "gcsDestination": {
                          "type": "GcsDestination",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ContainerRegistryDestination": {
                      "fields": {
                        "outputUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "JobState": {
                      "values": {
                        "JOB_STATE_UNSPECIFIED": 0,
                        "JOB_STATE_QUEUED": 1,
                        "JOB_STATE_PENDING": 2,
                        "JOB_STATE_RUNNING": 3,
                        "JOB_STATE_SUCCEEDED": 4,
                        "JOB_STATE_FAILED": 5,
                        "JOB_STATE_CANCELLING": 6,
                        "JOB_STATE_CANCELLED": 7,
                        "JOB_STATE_PAUSED": 8,
                        "JOB_STATE_EXPIRED": 9,
                        "JOB_STATE_UPDATING": 10,
                        "JOB_STATE_PARTIALLY_SUCCEEDED": 11
                      }
                    },
                    "MachineSpec": {
                      "fields": {
                        "machineType": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "acceleratorType": {
                          "type": "AcceleratorType",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "acceleratorCount": {
                          "type": "int32",
                          "id": 3
                        },
                        "tpuTopology": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "DedicatedResources": {
                      "fields": {
                        "machineSpec": {
                          "type": "MachineSpec",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "minReplicaCount": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "maxReplicaCount": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "autoscalingMetricSpecs": {
                          "rule": "repeated",
                          "type": "AutoscalingMetricSpec",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "AutomaticResources": {
                      "fields": {
                        "minReplicaCount": {
                          "type": "int32",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "maxReplicaCount": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "BatchDedicatedResources": {
                      "fields": {
                        "machineSpec": {
                          "type": "MachineSpec",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "startingReplicaCount": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "maxReplicaCount": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "ResourcesConsumed": {
                      "fields": {
                        "replicaHours": {
                          "type": "double",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "DiskSpec": {
                      "fields": {
                        "bootDiskType": {
                          "type": "string",
                          "id": 1
                        },
                        "bootDiskSizeGb": {
                          "type": "int32",
                          "id": 2
                        }
                      }
                    },
                    "PersistentDiskSpec": {
                      "fields": {
                        "diskType": {
                          "type": "string",
                          "id": 1
                        },
                        "diskSizeGb": {
                          "type": "int64",
                          "id": 2
                        }
                      }
                    },
                    "NfsMount": {
                      "fields": {
                        "server": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "path": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "mountPoint": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "AutoscalingMetricSpec": {
                      "fields": {
                        "metricName": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "target": {
                          "type": "int32",
                          "id": 2
                        }
                      }
                    },
                    "ManualBatchTuningParameters": {
                      "fields": {
                        "batchSize": {
                          "type": "int32",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "ModelDeploymentMonitoringObjectiveType": {
                      "values": {
                        "MODEL_DEPLOYMENT_MONITORING_OBJECTIVE_TYPE_UNSPECIFIED": 0,
                        "RAW_FEATURE_SKEW": 1,
                        "RAW_FEATURE_DRIFT": 2,
                        "FEATURE_ATTRIBUTION_SKEW": 3,
                        "FEATURE_ATTRIBUTION_DRIFT": 4
                      }
                    },
                    "ModelDeploymentMonitoringJob": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/ModelDeploymentMonitoringJob",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "endpoint": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "state": {
                          "type": "JobState",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "scheduleState": {
                          "type": "MonitoringScheduleState",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "latestMonitoringPipelineMetadata": {
                          "type": "LatestMonitoringPipelineMetadata",
                          "id": 25,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "modelDeploymentMonitoringObjectiveConfigs": {
                          "rule": "repeated",
                          "type": "ModelDeploymentMonitoringObjectiveConfig",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "modelDeploymentMonitoringScheduleConfig": {
                          "type": "ModelDeploymentMonitoringScheduleConfig",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "loggingSamplingStrategy": {
                          "type": "SamplingStrategy",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "modelMonitoringAlertConfig": {
                          "type": "ModelMonitoringAlertConfig",
                          "id": 15
                        },
                        "predictInstanceSchemaUri": {
                          "type": "string",
                          "id": 9
                        },
                        "samplePredictInstance": {
                          "type": "google.protobuf.Value",
                          "id": 19
                        },
                        "analysisInstanceSchemaUri": {
                          "type": "string",
                          "id": 16
                        },
                        "bigqueryTables": {
                          "rule": "repeated",
                          "type": "ModelDeploymentMonitoringBigQueryTable",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "logTtl": {
                          "type": "google.protobuf.Duration",
                          "id": 17
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 11
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "nextScheduleTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "statsAnomaliesBaseDirectory": {
                          "type": "GcsDestination",
                          "id": 20
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 21
                        },
                        "enableMonitoringPipelineLogs": {
                          "type": "bool",
                          "id": 22
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 23,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "LatestMonitoringPipelineMetadata": {
                          "fields": {
                            "runTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 1
                            },
                            "status": {
                              "type": "google.rpc.Status",
                              "id": 2
                            }
                          }
                        },
                        "MonitoringScheduleState": {
                          "values": {
                            "MONITORING_SCHEDULE_STATE_UNSPECIFIED": 0,
                            "PENDING": 1,
                            "OFFLINE": 2,
                            "RUNNING": 3
                          }
                        }
                      }
                    },
                    "ModelDeploymentMonitoringBigQueryTable": {
                      "fields": {
                        "logSource": {
                          "type": "LogSource",
                          "id": 1
                        },
                        "logType": {
                          "type": "LogType",
                          "id": 2
                        },
                        "bigqueryTablePath": {
                          "type": "string",
                          "id": 3
                        },
                        "requestResponseLoggingSchemaVersion": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "LogSource": {
                          "values": {
                            "LOG_SOURCE_UNSPECIFIED": 0,
                            "TRAINING": 1,
                            "SERVING": 2
                          }
                        },
                        "LogType": {
                          "values": {
                            "LOG_TYPE_UNSPECIFIED": 0,
                            "PREDICT": 1,
                            "EXPLAIN": 2
                          }
                        }
                      }
                    },
                    "ModelDeploymentMonitoringObjectiveConfig": {
                      "fields": {
                        "deployedModelId": {
                          "type": "string",
                          "id": 1
                        },
                        "objectiveConfig": {
                          "type": "ModelMonitoringObjectiveConfig",
                          "id": 2
                        }
                      }
                    },
                    "ModelDeploymentMonitoringScheduleConfig": {
                      "fields": {
                        "monitorInterval": {
                          "type": "google.protobuf.Duration",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "monitorWindow": {
                          "type": "google.protobuf.Duration",
                          "id": 2
                        }
                      }
                    },
                    "ModelMonitoringStatsAnomalies": {
                      "fields": {
                        "objective": {
                          "type": "ModelDeploymentMonitoringObjectiveType",
                          "id": 1
                        },
                        "deployedModelId": {
                          "type": "string",
                          "id": 2
                        },
                        "anomalyCount": {
                          "type": "int32",
                          "id": 3
                        },
                        "featureStats": {
                          "rule": "repeated",
                          "type": "FeatureHistoricStatsAnomalies",
                          "id": 4
                        }
                      },
                      "nested": {
                        "FeatureHistoricStatsAnomalies": {
                          "fields": {
                            "featureDisplayName": {
                              "type": "string",
                              "id": 1
                            },
                            "threshold": {
                              "type": "ThresholdConfig",
                              "id": 3
                            },
                            "trainingStats": {
                              "type": "FeatureStatsAnomaly",
                              "id": 4
                            },
                            "predictionStats": {
                              "rule": "repeated",
                              "type": "FeatureStatsAnomaly",
                              "id": 5
                            }
                          }
                        }
                      }
                    },
                    "FeatureStatsAnomaly": {
                      "fields": {
                        "score": {
                          "type": "double",
                          "id": 1
                        },
                        "statsUri": {
                          "type": "string",
                          "id": 3
                        },
                        "anomalyUri": {
                          "type": "string",
                          "id": 4
                        },
                        "distributionDeviation": {
                          "type": "double",
                          "id": 5
                        },
                        "anomalyDetectionThreshold": {
                          "type": "double",
                          "id": 9
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8
                        }
                      }
                    },
                    "ModelMonitoringConfig": {
                      "fields": {
                        "objectiveConfigs": {
                          "rule": "repeated",
                          "type": "ModelMonitoringObjectiveConfig",
                          "id": 3
                        },
                        "alertConfig": {
                          "type": "ModelMonitoringAlertConfig",
                          "id": 2
                        },
                        "analysisInstanceSchemaUri": {
                          "type": "string",
                          "id": 4
                        },
                        "statsAnomaliesBaseDirectory": {
                          "type": "GcsDestination",
                          "id": 5
                        }
                      }
                    },
                    "ModelMonitoringObjectiveConfig": {
                      "fields": {
                        "trainingDataset": {
                          "type": "TrainingDataset",
                          "id": 1
                        },
                        "trainingPredictionSkewDetectionConfig": {
                          "type": "TrainingPredictionSkewDetectionConfig",
                          "id": 2
                        },
                        "predictionDriftDetectionConfig": {
                          "type": "PredictionDriftDetectionConfig",
                          "id": 3
                        },
                        "explanationConfig": {
                          "type": "ExplanationConfig",
                          "id": 5
                        }
                      },
                      "nested": {
                        "TrainingDataset": {
                          "oneofs": {
                            "dataSource": {
                              "oneof": [
                                "dataset",
                                "gcsSource",
                                "bigquerySource"
                              ]
                            }
                          },
                          "fields": {
                            "dataset": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                              }
                            },
                            "gcsSource": {
                              "type": "GcsSource",
                              "id": 4
                            },
                            "bigquerySource": {
                              "type": "BigQuerySource",
                              "id": 5
                            },
                            "dataFormat": {
                              "type": "string",
                              "id": 2
                            },
                            "targetField": {
                              "type": "string",
                              "id": 6
                            },
                            "loggingSamplingStrategy": {
                              "type": "SamplingStrategy",
                              "id": 7
                            }
                          }
                        },
                        "TrainingPredictionSkewDetectionConfig": {
                          "fields": {
                            "skewThresholds": {
                              "keyType": "string",
                              "type": "ThresholdConfig",
                              "id": 1
                            },
                            "attributionScoreSkewThresholds": {
                              "keyType": "string",
                              "type": "ThresholdConfig",
                              "id": 2
                            },
                            "defaultSkewThreshold": {
                              "type": "ThresholdConfig",
                              "id": 6
                            }
                          }
                        },
                        "PredictionDriftDetectionConfig": {
                          "fields": {
                            "driftThresholds": {
                              "keyType": "string",
                              "type": "ThresholdConfig",
                              "id": 1
                            },
                            "attributionScoreDriftThresholds": {
                              "keyType": "string",
                              "type": "ThresholdConfig",
                              "id": 2
                            },
                            "defaultDriftThreshold": {
                              "type": "ThresholdConfig",
                              "id": 5
                            }
                          }
                        },
                        "ExplanationConfig": {
                          "fields": {
                            "enableFeatureAttributes": {
                              "type": "bool",
                              "id": 1
                            },
                            "explanationBaseline": {
                              "type": "ExplanationBaseline",
                              "id": 2
                            }
                          },
                          "nested": {
                            "ExplanationBaseline": {
                              "oneofs": {
                                "destination": {
                                  "oneof": [
                                    "gcs",
                                    "bigquery"
                                  ]
                                }
                              },
                              "fields": {
                                "gcs": {
                                  "type": "GcsDestination",
                                  "id": 2
                                },
                                "bigquery": {
                                  "type": "BigQueryDestination",
                                  "id": 3
                                },
                                "predictionFormat": {
                                  "type": "PredictionFormat",
                                  "id": 1
                                }
                              },
                              "nested": {
                                "PredictionFormat": {
                                  "values": {
                                    "PREDICTION_FORMAT_UNSPECIFIED": 0,
                                    "JSONL": 2,
                                    "BIGQUERY": 3
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "ModelMonitoringAlertConfig": {
                      "oneofs": {
                        "alert": {
                          "oneof": [
                            "emailAlertConfig"
                          ]
                        }
                      },
                      "fields": {
                        "emailAlertConfig": {
                          "type": "EmailAlertConfig",
                          "id": 1
                        },
                        "enableLogging": {
                          "type": "bool",
                          "id": 2
                        },
                        "notificationChannels": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.resource_reference).type": "monitoring.googleapis.com/NotificationChannel"
                          }
                        }
                      },
                      "nested": {
                        "EmailAlertConfig": {
                          "fields": {
                            "userEmails": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "ThresholdConfig": {
                      "oneofs": {
                        "threshold": {
                          "oneof": [
                            "value"
                          ]
                        }
                      },
                      "fields": {
                        "value": {
                          "type": "double",
                          "id": 1
                        }
                      }
                    },
                    "SamplingStrategy": {
                      "fields": {
                        "randomSampleConfig": {
                          "type": "RandomSampleConfig",
                          "id": 1
                        }
                      },
                      "nested": {
                        "RandomSampleConfig": {
                          "fields": {
                            "sampleRate": {
                              "type": "double",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "UnmanagedContainerModel": {
                      "fields": {
                        "artifactUri": {
                          "type": "string",
                          "id": 1
                        },
                        "predictSchemata": {
                          "type": "PredictSchemata",
                          "id": 2
                        },
                        "containerSpec": {
                          "type": "ModelContainerSpec",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "INPUT_ONLY"
                          }
                        }
                      }
                    },
                    "Model": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Model",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/models/{model}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "versionId": {
                          "type": "string",
                          "id": 28,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "versionAliases": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 29
                        },
                        "versionCreateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 31,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "versionUpdateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 32,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "versionDescription": {
                          "type": "string",
                          "id": 30
                        },
                        "predictSchemata": {
                          "type": "PredictSchemata",
                          "id": 4
                        },
                        "metadataSchemaUri": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "metadata": {
                          "type": "google.protobuf.Value",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "supportedExportFormats": {
                          "rule": "repeated",
                          "type": "ExportFormat",
                          "id": 20,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "trainingPipeline": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TrainingPipeline"
                          }
                        },
                        "containerSpec": {
                          "type": "ModelContainerSpec",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "INPUT_ONLY"
                          }
                        },
                        "artifactUri": {
                          "type": "string",
                          "id": 26,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "supportedDeploymentResourcesTypes": {
                          "rule": "repeated",
                          "type": "DeploymentResourcesType",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "supportedInputStorageFormats": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "supportedOutputStorageFormats": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "deployedModels": {
                          "rule": "repeated",
                          "type": "DeployedModelRef",
                          "id": 15,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "explanationSpec": {
                          "type": "ExplanationSpec",
                          "id": 23
                        },
                        "etag": {
                          "type": "string",
                          "id": 16
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 17
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 24
                        },
                        "modelSourceInfo": {
                          "type": "ModelSourceInfo",
                          "id": 38,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "originalModelInfo": {
                          "type": "OriginalModelInfo",
                          "id": 34,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "metadataArtifact": {
                          "type": "string",
                          "id": 44,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "ExportFormat": {
                          "fields": {
                            "id": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "exportableContents": {
                              "rule": "repeated",
                              "type": "ExportableContent",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          },
                          "nested": {
                            "ExportableContent": {
                              "values": {
                                "EXPORTABLE_CONTENT_UNSPECIFIED": 0,
                                "ARTIFACT": 1,
                                "IMAGE": 2
                              }
                            }
                          }
                        },
                        "OriginalModelInfo": {
                          "fields": {
                            "model": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY",
                                "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                              }
                            }
                          }
                        },
                        "DeploymentResourcesType": {
                          "values": {
                            "DEPLOYMENT_RESOURCES_TYPE_UNSPECIFIED": 0,
                            "DEDICATED_RESOURCES": 1,
                            "AUTOMATIC_RESOURCES": 2,
                            "SHARED_RESOURCES": 3
                          }
                        }
                      }
                    },
                    "LargeModelReference": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "PredictSchemata": {
                      "fields": {
                        "instanceSchemaUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "parametersSchemaUri": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "predictionSchemaUri": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "ModelContainerSpec": {
                      "fields": {
                        "imageUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "command": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "args": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "env": {
                          "rule": "repeated",
                          "type": "EnvVar",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "ports": {
                          "rule": "repeated",
                          "type": "Port",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "predictRoute": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "healthRoute": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "grpcPorts": {
                          "rule": "repeated",
                          "type": "Port",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "deploymentTimeout": {
                          "type": "google.protobuf.Duration",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "sharedMemorySizeMb": {
                          "type": "int64",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "startupProbe": {
                          "type": "Probe",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "healthProbe": {
                          "type": "Probe",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "Port": {
                      "fields": {
                        "containerPort": {
                          "type": "int32",
                          "id": 3
                        }
                      }
                    },
                    "ModelSourceInfo": {
                      "fields": {
                        "sourceType": {
                          "type": "ModelSourceType",
                          "id": 1
                        },
                        "copy": {
                          "type": "bool",
                          "id": 2
                        }
                      },
                      "nested": {
                        "ModelSourceType": {
                          "values": {
                            "MODEL_SOURCE_TYPE_UNSPECIFIED": 0,
                            "AUTOML": 1,
                            "CUSTOM": 2,
                            "BQML": 3,
                            "MODEL_GARDEN": 4,
                            "GENIE": 5,
                            "CUSTOM_TEXT_EMBEDDING": 6,
                            "MARKETPLACE": 7
                          }
                        }
                      }
                    },
                    "Probe": {
                      "oneofs": {
                        "probeType": {
                          "oneof": [
                            "exec"
                          ]
                        }
                      },
                      "fields": {
                        "exec": {
                          "type": "ExecAction",
                          "id": 1
                        },
                        "periodSeconds": {
                          "type": "int32",
                          "id": 2
                        },
                        "timeoutSeconds": {
                          "type": "int32",
                          "id": 3
                        }
                      },
                      "nested": {
                        "ExecAction": {
                          "fields": {
                            "command": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "DeployedModelRef": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "deployedModelId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "EnvVar": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "value": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "HarmCategory": {
                      "values": {
                        "HARM_CATEGORY_UNSPECIFIED": 0,
                        "HARM_CATEGORY_HATE_SPEECH": 1,
                        "HARM_CATEGORY_DANGEROUS_CONTENT": 2,
                        "HARM_CATEGORY_HARASSMENT": 3,
                        "HARM_CATEGORY_SEXUALLY_EXPLICIT": 4
                      }
                    },
                    "Content": {
                      "fields": {
                        "role": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "parts": {
                          "rule": "repeated",
                          "type": "Part",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "Part": {
                      "oneofs": {
                        "data": {
                          "oneof": [
                            "text",
                            "inlineData",
                            "fileData",
                            "functionCall",
                            "functionResponse"
                          ]
                        },
                        "metadata": {
                          "oneof": [
                            "videoMetadata"
                          ]
                        }
                      },
                      "fields": {
                        "text": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "inlineData": {
                          "type": "Blob",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "fileData": {
                          "type": "FileData",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "functionCall": {
                          "type": "FunctionCall",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "functionResponse": {
                          "type": "FunctionResponse",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "videoMetadata": {
                          "type": "VideoMetadata",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "Blob": {
                      "fields": {
                        "mimeType": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "data": {
                          "type": "bytes",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "FileData": {
                      "fields": {
                        "mimeType": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "fileUri": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "VideoMetadata": {
                      "fields": {
                        "startOffset": {
                          "type": "google.protobuf.Duration",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "endOffset": {
                          "type": "google.protobuf.Duration",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "GenerationConfig": {
                      "oneofs": {
                        "_temperature": {
                          "oneof": [
                            "temperature"
                          ]
                        },
                        "_topP": {
                          "oneof": [
                            "topP"
                          ]
                        },
                        "_topK": {
                          "oneof": [
                            "topK"
                          ]
                        },
                        "_candidateCount": {
                          "oneof": [
                            "candidateCount"
                          ]
                        },
                        "_maxOutputTokens": {
                          "oneof": [
                            "maxOutputTokens"
                          ]
                        }
                      },
                      "fields": {
                        "temperature": {
                          "type": "float",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "proto3_optional": true
                          }
                        },
                        "topP": {
                          "type": "float",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "proto3_optional": true
                          }
                        },
                        "topK": {
                          "type": "float",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "proto3_optional": true
                          }
                        },
                        "candidateCount": {
                          "type": "int32",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "proto3_optional": true
                          }
                        },
                        "maxOutputTokens": {
                          "type": "int32",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "proto3_optional": true
                          }
                        },
                        "stopSequences": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "SafetySetting": {
                      "fields": {
                        "category": {
                          "type": "HarmCategory",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "threshold": {
                          "type": "HarmBlockThreshold",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      },
                      "nested": {
                        "HarmBlockThreshold": {
                          "values": {
                            "HARM_BLOCK_THRESHOLD_UNSPECIFIED": 0,
                            "BLOCK_LOW_AND_ABOVE": 1,
                            "BLOCK_MEDIUM_AND_ABOVE": 2,
                            "BLOCK_ONLY_HIGH": 3,
                            "BLOCK_NONE": 4
                          }
                        }
                      }
                    },
                    "SafetyRating": {
                      "fields": {
                        "category": {
                          "type": "HarmCategory",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "probability": {
                          "type": "HarmProbability",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "blocked": {
                          "type": "bool",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "HarmProbability": {
                          "values": {
                            "HARM_PROBABILITY_UNSPECIFIED": 0,
                            "NEGLIGIBLE": 1,
                            "LOW": 2,
                            "MEDIUM": 3,
                            "HIGH": 4
                          }
                        }
                      }
                    },
                    "CitationMetadata": {
                      "fields": {
                        "citations": {
                          "rule": "repeated",
                          "type": "Citation",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "Citation": {
                      "fields": {
                        "startIndex": {
                          "type": "int32",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endIndex": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "uri": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "title": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "license": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "publicationDate": {
                          "type": "google.type.Date",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "Candidate": {
                      "oneofs": {
                        "_finishMessage": {
                          "oneof": [
                            "finishMessage"
                          ]
                        }
                      },
                      "fields": {
                        "index": {
                          "type": "int32",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "content": {
                          "type": "Content",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "finishReason": {
                          "type": "FinishReason",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "safetyRatings": {
                          "rule": "repeated",
                          "type": "SafetyRating",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "finishMessage": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "proto3_optional": true
                          }
                        },
                        "citationMetadata": {
                          "type": "CitationMetadata",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "groundingMetadata": {
                          "type": "GroundingMetadata",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "FinishReason": {
                          "values": {
                            "FINISH_REASON_UNSPECIFIED": 0,
                            "STOP": 1,
                            "MAX_TOKENS": 2,
                            "SAFETY": 3,
                            "RECITATION": 4,
                            "OTHER": 5
                          }
                        }
                      }
                    },
                    "Segment": {
                      "fields": {
                        "partIndex": {
                          "type": "int32",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startIndex": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endIndex": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "GroundingAttribution": {
                      "oneofs": {
                        "reference": {
                          "oneof": [
                            "web"
                          ]
                        },
                        "_confidenceScore": {
                          "oneof": [
                            "confidenceScore"
                          ]
                        }
                      },
                      "fields": {
                        "web": {
                          "type": "Web",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "segment": {
                          "type": "Segment",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "confidenceScore": {
                          "type": "float",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "proto3_optional": true
                          }
                        }
                      },
                      "nested": {
                        "Web": {
                          "fields": {
                            "uri": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "title": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        }
                      }
                    },
                    "GroundingMetadata": {
                      "fields": {
                        "webSearchQueries": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "groundingAttributions": {
                          "rule": "repeated",
                          "type": "GroundingAttribution",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "Tool": {
                      "fields": {
                        "functionDeclarations": {
                          "rule": "repeated",
                          "type": "FunctionDeclaration",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "retrieval": {
                          "type": "Retrieval",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "googleSearchRetrieval": {
                          "type": "GoogleSearchRetrieval",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "FunctionDeclaration": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "parameters": {
                          "type": "Schema",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "FunctionCall": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "args": {
                          "type": "google.protobuf.Struct",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "FunctionResponse": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "response": {
                          "type": "google.protobuf.Struct",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "Retrieval": {
                      "oneofs": {
                        "source": {
                          "oneof": [
                            "vertexAiSearch"
                          ]
                        }
                      },
                      "fields": {
                        "vertexAiSearch": {
                          "type": "VertexAISearch",
                          "id": 2
                        },
                        "disableAttribution": {
                          "type": "bool",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "VertexAISearch": {
                      "fields": {
                        "datastore": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GoogleSearchRetrieval": {
                      "fields": {
                        "disableAttribution": {
                          "type": "bool",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "Type": {
                      "values": {
                        "TYPE_UNSPECIFIED": 0,
                        "STRING": 1,
                        "NUMBER": 2,
                        "INTEGER": 3,
                        "BOOLEAN": 4,
                        "ARRAY": 5,
                        "OBJECT": 6
                      }
                    },
                    "Schema": {
                      "fields": {
                        "type": {
                          "type": "Type",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "format": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "nullable": {
                          "type": "bool",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "items": {
                          "type": "Schema",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "enum": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "properties": {
                          "keyType": "string",
                          "type": "Schema",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "required": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "example": {
                          "type": "google.protobuf.Value",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "Context": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Context",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/metadataStores/{metadata_store}/contexts/{context}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2
                        },
                        "etag": {
                          "type": "string",
                          "id": 8
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 9
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "parentContexts": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Context"
                          }
                        },
                        "schemaTitle": {
                          "type": "string",
                          "id": 13
                        },
                        "schemaVersion": {
                          "type": "string",
                          "id": 14
                        },
                        "metadata": {
                          "type": "google.protobuf.Struct",
                          "id": 15
                        },
                        "description": {
                          "type": "string",
                          "id": 16
                        }
                      }
                    },
                    "CustomJob": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/CustomJob",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/customJobs/{custom_job}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "jobSpec": {
                          "type": "CustomJobSpec",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "state": {
                          "type": "JobState",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 11
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 12
                        },
                        "webAccessUris": {
                          "keyType": "string",
                          "type": "string",
                          "id": 16,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "CustomJobSpec": {
                      "fields": {
                        "persistentResourceId": {
                          "type": "string",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/PersistentResource"
                          }
                        },
                        "workerPoolSpecs": {
                          "rule": "repeated",
                          "type": "WorkerPoolSpec",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "scheduling": {
                          "type": "Scheduling",
                          "id": 3
                        },
                        "serviceAccount": {
                          "type": "string",
                          "id": 4
                        },
                        "network": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "compute.googleapis.com/Network"
                          }
                        },
                        "reservedIpRanges": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "baseOutputDirectory": {
                          "type": "GcsDestination",
                          "id": 6
                        },
                        "protectedArtifactLocationId": {
                          "type": "string",
                          "id": 19
                        },
                        "tensorboard": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Tensorboard"
                          }
                        },
                        "enableWebAccess": {
                          "type": "bool",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "enableDashboardAccess": {
                          "type": "bool",
                          "id": 16,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "experiment": {
                          "type": "string",
                          "id": 17,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Context"
                          }
                        },
                        "experimentRun": {
                          "type": "string",
                          "id": 18,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Context"
                          }
                        },
                        "models": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 20,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        }
                      }
                    },
                    "WorkerPoolSpec": {
                      "oneofs": {
                        "task": {
                          "oneof": [
                            "containerSpec",
                            "pythonPackageSpec"
                          ]
                        }
                      },
                      "fields": {
                        "containerSpec": {
                          "type": "ContainerSpec",
                          "id": 6
                        },
                        "pythonPackageSpec": {
                          "type": "PythonPackageSpec",
                          "id": 7
                        },
                        "machineSpec": {
                          "type": "MachineSpec",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "replicaCount": {
                          "type": "int64",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "nfsMounts": {
                          "rule": "repeated",
                          "type": "NfsMount",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "diskSpec": {
                          "type": "DiskSpec",
                          "id": 5
                        }
                      }
                    },
                    "ContainerSpec": {
                      "fields": {
                        "imageUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "command": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2
                        },
                        "args": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        },
                        "env": {
                          "rule": "repeated",
                          "type": "EnvVar",
                          "id": 4
                        }
                      }
                    },
                    "PythonPackageSpec": {
                      "fields": {
                        "executorImageUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "packageUris": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "pythonModule": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "args": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 4
                        },
                        "env": {
                          "rule": "repeated",
                          "type": "EnvVar",
                          "id": 5
                        }
                      }
                    },
                    "Scheduling": {
                      "fields": {
                        "timeout": {
                          "type": "google.protobuf.Duration",
                          "id": 1
                        },
                        "restartJobOnWorkerRestart": {
                          "type": "bool",
                          "id": 3
                        },
                        "disableRetries": {
                          "type": "bool",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DataItem": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/DataItem",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/datasets/{dataset}/dataItems/{data_item}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "payload": {
                          "type": "google.protobuf.Value",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DataLabelingJob": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/DataLabelingJob",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "datasets": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "annotationLabels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 12
                        },
                        "labelerCount": {
                          "type": "int32",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "instructionUri": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "inputsSchemaUri": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "inputs": {
                          "type": "google.protobuf.Value",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "state": {
                          "type": "JobState",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labelingProgress": {
                          "type": "int32",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "currentSpend": {
                          "type": "google.type.Money",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 22,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 11
                        },
                        "specialistPools": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 16
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 20
                        },
                        "activeLearningConfig": {
                          "type": "ActiveLearningConfig",
                          "id": 21
                        }
                      }
                    },
                    "ActiveLearningConfig": {
                      "oneofs": {
                        "humanLabelingBudget": {
                          "oneof": [
                            "maxDataItemCount",
                            "maxDataItemPercentage"
                          ]
                        }
                      },
                      "fields": {
                        "maxDataItemCount": {
                          "type": "int64",
                          "id": 1
                        },
                        "maxDataItemPercentage": {
                          "type": "int32",
                          "id": 2
                        },
                        "sampleConfig": {
                          "type": "SampleConfig",
                          "id": 3
                        },
                        "trainingConfig": {
                          "type": "TrainingConfig",
                          "id": 4
                        }
                      }
                    },
                    "SampleConfig": {
                      "oneofs": {
                        "initialBatchSampleSize": {
                          "oneof": [
                            "initialBatchSamplePercentage"
                          ]
                        },
                        "followingBatchSampleSize": {
                          "oneof": [
                            "followingBatchSamplePercentage"
                          ]
                        }
                      },
                      "fields": {
                        "initialBatchSamplePercentage": {
                          "type": "int32",
                          "id": 1
                        },
                        "followingBatchSamplePercentage": {
                          "type": "int32",
                          "id": 3
                        },
                        "sampleStrategy": {
                          "type": "SampleStrategy",
                          "id": 5
                        }
                      },
                      "nested": {
                        "SampleStrategy": {
                          "values": {
                            "SAMPLE_STRATEGY_UNSPECIFIED": 0,
                            "UNCERTAINTY": 1
                          }
                        }
                      }
                    },
                    "TrainingConfig": {
                      "fields": {
                        "timeoutTrainingMilliHours": {
                          "type": "int64",
                          "id": 1
                        }
                      }
                    },
                    "Dataset": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Dataset",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/datasets/{dataset}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 16
                        },
                        "metadataSchemaUri": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "metadata": {
                          "type": "google.protobuf.Value",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "dataItemCount": {
                          "type": "int64",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 6
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 7
                        },
                        "savedQueries": {
                          "rule": "repeated",
                          "type": "SavedQuery",
                          "id": 9
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 11
                        },
                        "metadataArtifact": {
                          "type": "string",
                          "id": 17,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "ImportDataConfig": {
                      "oneofs": {
                        "source": {
                          "oneof": [
                            "gcsSource"
                          ]
                        }
                      },
                      "fields": {
                        "gcsSource": {
                          "type": "GcsSource",
                          "id": 1
                        },
                        "dataItemLabels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 2
                        },
                        "annotationLabels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 3
                        },
                        "importSchemaUri": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ExportDataConfig": {
                      "oneofs": {
                        "destination": {
                          "oneof": [
                            "gcsDestination"
                          ]
                        },
                        "split": {
                          "oneof": [
                            "fractionSplit"
                          ]
                        }
                      },
                      "fields": {
                        "gcsDestination": {
                          "type": "GcsDestination",
                          "id": 1
                        },
                        "fractionSplit": {
                          "type": "ExportFractionSplit",
                          "id": 5
                        },
                        "annotationsFilter": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "ExportFractionSplit": {
                      "fields": {
                        "trainingFraction": {
                          "type": "double",
                          "id": 1
                        },
                        "validationFraction": {
                          "type": "double",
                          "id": 2
                        },
                        "testFraction": {
                          "type": "double",
                          "id": 3
                        }
                      }
                    },
                    "SavedQuery": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/SavedQuery",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/datasets/{dataset}/savedQueries/{saved_query}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "metadata": {
                          "type": "google.protobuf.Value",
                          "id": 12
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "annotationFilter": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "problemType": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "annotationSpecCount": {
                          "type": "int32",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 8
                        },
                        "supportAutomlTraining": {
                          "type": "bool",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "DatasetService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateDataset": {
                          "requestType": "CreateDatasetRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/datasets",
                            "(google.api.http).body": "dataset",
                            "(google.api.method_signature)": "parent,dataset",
                            "(google.longrunning.operation_info).response_type": "Dataset",
                            "(google.longrunning.operation_info).metadata_type": "CreateDatasetOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/datasets",
                                "body": "dataset"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,dataset"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Dataset",
                                "metadata_type": "CreateDatasetOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetDataset": {
                          "requestType": "GetDatasetRequest",
                          "responseType": "Dataset",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/datasets/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/datasets/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "UpdateDataset": {
                          "requestType": "UpdateDatasetRequest",
                          "responseType": "Dataset",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{dataset.name=projects/*/locations/*/datasets/*}",
                            "(google.api.http).body": "dataset",
                            "(google.api.method_signature)": "dataset,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{dataset.name=projects/*/locations/*/datasets/*}",
                                "body": "dataset"
                              }
                            },
                            {
                              "(google.api.method_signature)": "dataset,update_mask"
                            }
                          ]
                        },
                        "ListDatasets": {
                          "requestType": "ListDatasetsRequest",
                          "responseType": "ListDatasetsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/datasets",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/datasets"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteDataset": {
                          "requestType": "DeleteDatasetRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/datasets/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/datasets/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "ImportData": {
                          "requestType": "ImportDataRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{name=projects/*/locations/*/datasets/*}:import",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name,import_configs",
                            "(google.longrunning.operation_info).response_type": "ImportDataResponse",
                            "(google.longrunning.operation_info).metadata_type": "ImportDataOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{name=projects/*/locations/*/datasets/*}:import",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,import_configs"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ImportDataResponse",
                                "metadata_type": "ImportDataOperationMetadata"
                              }
                            }
                          ]
                        },
                        "ExportData": {
                          "requestType": "ExportDataRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{name=projects/*/locations/*/datasets/*}:export",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name,export_config",
                            "(google.longrunning.operation_info).response_type": "ExportDataResponse",
                            "(google.longrunning.operation_info).metadata_type": "ExportDataOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{name=projects/*/locations/*/datasets/*}:export",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,export_config"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ExportDataResponse",
                                "metadata_type": "ExportDataOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CreateDatasetVersion": {
                          "requestType": "CreateDatasetVersionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/datasets/*}/datasetVersions",
                            "(google.api.http).body": "dataset_version",
                            "(google.api.method_signature)": "parent,dataset_version",
                            "(google.longrunning.operation_info).response_type": "DatasetVersion",
                            "(google.longrunning.operation_info).metadata_type": "CreateDatasetVersionOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/datasets/*}/datasetVersions",
                                "body": "dataset_version"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,dataset_version"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "DatasetVersion",
                                "metadata_type": "CreateDatasetVersionOperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteDatasetVersion": {
                          "requestType": "DeleteDatasetVersionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/datasets/*/datasetVersions/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/datasets/*/datasetVersions/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetDatasetVersion": {
                          "requestType": "GetDatasetVersionRequest",
                          "responseType": "DatasetVersion",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/datasets/*/datasetVersions/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/datasets/*/datasetVersions/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListDatasetVersions": {
                          "requestType": "ListDatasetVersionsRequest",
                          "responseType": "ListDatasetVersionsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*/datasets/*}/datasetVersions",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*/datasets/*}/datasetVersions"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "RestoreDatasetVersion": {
                          "requestType": "RestoreDatasetVersionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/datasets/*/datasetVersions/*}:restore",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "DatasetVersion",
                            "(google.longrunning.operation_info).metadata_type": "RestoreDatasetVersionOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/datasets/*/datasetVersions/*}:restore"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "DatasetVersion",
                                "metadata_type": "RestoreDatasetVersionOperationMetadata"
                              }
                            }
                          ]
                        },
                        "ListDataItems": {
                          "requestType": "ListDataItemsRequest",
                          "responseType": "ListDataItemsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*/datasets/*}/dataItems",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*/datasets/*}/dataItems"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "SearchDataItems": {
                          "requestType": "SearchDataItemsRequest",
                          "responseType": "SearchDataItemsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{dataset=projects/*/locations/*/datasets/*}:searchDataItems"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{dataset=projects/*/locations/*/datasets/*}:searchDataItems"
                              }
                            }
                          ]
                        },
                        "ListSavedQueries": {
                          "requestType": "ListSavedQueriesRequest",
                          "responseType": "ListSavedQueriesResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*/datasets/*}/savedQueries",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*/datasets/*}/savedQueries"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteSavedQuery": {
                          "requestType": "DeleteSavedQueryRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/datasets/*/savedQueries/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/datasets/*/savedQueries/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetAnnotationSpec": {
                          "requestType": "GetAnnotationSpecRequest",
                          "responseType": "AnnotationSpec",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/datasets/*/annotationSpecs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/datasets/*/annotationSpecs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListAnnotations": {
                          "requestType": "ListAnnotationsRequest",
                          "responseType": "ListAnnotationsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*/datasets/*/dataItems/*}/annotations",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*/datasets/*/dataItems/*}/annotations"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        }
                      }
                    },
                    "CreateDatasetRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "dataset": {
                          "type": "Dataset",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CreateDatasetOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "GetDatasetRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "UpdateDatasetRequest": {
                      "fields": {
                        "dataset": {
                          "type": "Dataset",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ListDatasetsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 6
                        }
                      }
                    },
                    "ListDatasetsResponse": {
                      "fields": {
                        "datasets": {
                          "rule": "repeated",
                          "type": "Dataset",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteDatasetRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        }
                      }
                    },
                    "ImportDataRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "importConfigs": {
                          "rule": "repeated",
                          "type": "ImportDataConfig",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ImportDataResponse": {
                      "fields": {}
                    },
                    "ImportDataOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "ExportDataRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "exportConfig": {
                          "type": "ExportDataConfig",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ExportDataResponse": {
                      "fields": {
                        "exportedFiles": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "ExportDataOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        },
                        "gcsOutputDirectory": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "CreateDatasetVersionRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "datasetVersion": {
                          "type": "DatasetVersion",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CreateDatasetVersionOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "DeleteDatasetVersionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/DatasetVersion"
                          }
                        }
                      }
                    },
                    "GetDatasetVersionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/DatasetVersion"
                          }
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "ListDatasetVersionsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListDatasetVersionsResponse": {
                      "fields": {
                        "datasetVersions": {
                          "rule": "repeated",
                          "type": "DatasetVersion",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "RestoreDatasetVersionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/DatasetVersion"
                          }
                        }
                      }
                    },
                    "RestoreDatasetVersionOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "ListDataItemsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 6
                        }
                      }
                    },
                    "ListDataItemsResponse": {
                      "fields": {
                        "dataItems": {
                          "rule": "repeated",
                          "type": "DataItem",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "SearchDataItemsRequest": {
                      "oneofs": {
                        "order": {
                          "oneof": [
                            "orderByDataItem",
                            "orderByAnnotation"
                          ]
                        }
                      },
                      "fields": {
                        "orderByDataItem": {
                          "type": "string",
                          "id": 12
                        },
                        "orderByAnnotation": {
                          "type": "OrderByAnnotation",
                          "id": 13
                        },
                        "dataset": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "savedQuery": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "deprecated": true,
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/SavedQuery"
                          }
                        },
                        "dataLabelingJob": {
                          "type": "string",
                          "id": 3
                        },
                        "dataItemFilter": {
                          "type": "string",
                          "id": 4
                        },
                        "annotationsFilter": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "deprecated": true
                          }
                        },
                        "annotationFilters": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 11
                        },
                        "fieldMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 6
                        },
                        "annotationsLimit": {
                          "type": "int32",
                          "id": 7
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 8
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 9,
                          "options": {
                            "deprecated": true
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 10
                        }
                      },
                      "nested": {
                        "OrderByAnnotation": {
                          "fields": {
                            "savedQuery": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "orderBy": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "SearchDataItemsResponse": {
                      "fields": {
                        "dataItemViews": {
                          "rule": "repeated",
                          "type": "DataItemView",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DataItemView": {
                      "fields": {
                        "dataItem": {
                          "type": "DataItem",
                          "id": 1
                        },
                        "annotations": {
                          "rule": "repeated",
                          "type": "Annotation",
                          "id": 2
                        },
                        "hasTruncatedAnnotations": {
                          "type": "bool",
                          "id": 3
                        }
                      }
                    },
                    "ListSavedQueriesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 6
                        }
                      }
                    },
                    "ListSavedQueriesResponse": {
                      "fields": {
                        "savedQueries": {
                          "rule": "repeated",
                          "type": "SavedQuery",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteSavedQueryRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/SavedQuery"
                          }
                        }
                      }
                    },
                    "GetAnnotationSpecRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/AnnotationSpec"
                          }
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "ListAnnotationsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/DataItem"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 6
                        }
                      }
                    },
                    "ListAnnotationsResponse": {
                      "fields": {
                        "annotations": {
                          "rule": "repeated",
                          "type": "Annotation",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DatasetVersion": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/DatasetVersion",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 3
                        },
                        "bigQueryDatasetName": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "GenericOperationMetadata": {
                      "fields": {
                        "partialFailures": {
                          "rule": "repeated",
                          "type": "google.rpc.Status",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "DeleteOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "DeployedIndexRef": {
                      "fields": {
                        "indexEndpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/IndexEndpoint"
                          }
                        },
                        "deployedIndexId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "DeploymentResourcePool": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/DeploymentResourcePool",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "dedicatedResources": {
                          "type": "DedicatedResources",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "DeploymentResourcePoolService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateDeploymentResourcePool": {
                          "requestType": "CreateDeploymentResourcePoolRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/deploymentResourcePools",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,deployment_resource_pool,deployment_resource_pool_id",
                            "(google.longrunning.operation_info).response_type": "DeploymentResourcePool",
                            "(google.longrunning.operation_info).metadata_type": "CreateDeploymentResourcePoolOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/deploymentResourcePools",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,deployment_resource_pool,deployment_resource_pool_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "DeploymentResourcePool",
                                "metadata_type": "CreateDeploymentResourcePoolOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetDeploymentResourcePool": {
                          "requestType": "GetDeploymentResourcePoolRequest",
                          "responseType": "DeploymentResourcePool",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/deploymentResourcePools/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/deploymentResourcePools/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListDeploymentResourcePools": {
                          "requestType": "ListDeploymentResourcePoolsRequest",
                          "responseType": "ListDeploymentResourcePoolsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/deploymentResourcePools",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/deploymentResourcePools"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteDeploymentResourcePool": {
                          "requestType": "DeleteDeploymentResourcePoolRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/deploymentResourcePools/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/deploymentResourcePools/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "QueryDeployedModels": {
                          "requestType": "QueryDeployedModelsRequest",
                          "responseType": "QueryDeployedModelsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{deployment_resource_pool=projects/*/locations/*/deploymentResourcePools/*}:queryDeployedModels",
                            "(google.api.method_signature)": "deployment_resource_pool"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{deployment_resource_pool=projects/*/locations/*/deploymentResourcePools/*}:queryDeployedModels"
                              }
                            },
                            {
                              "(google.api.method_signature)": "deployment_resource_pool"
                            }
                          ]
                        }
                      }
                    },
                    "CreateDeploymentResourcePoolRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "deploymentResourcePool": {
                          "type": "DeploymentResourcePool",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "deploymentResourcePoolId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CreateDeploymentResourcePoolOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "GetDeploymentResourcePoolRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/DeploymentResourcePool"
                          }
                        }
                      }
                    },
                    "ListDeploymentResourcePoolsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "locations.googleapis.com/Location"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListDeploymentResourcePoolsResponse": {
                      "fields": {
                        "deploymentResourcePools": {
                          "rule": "repeated",
                          "type": "DeploymentResourcePool",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateDeploymentResourcePoolOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "DeleteDeploymentResourcePoolRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/DeploymentResourcePool"
                          }
                        }
                      }
                    },
                    "QueryDeployedModelsRequest": {
                      "fields": {
                        "deploymentResourcePool": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "QueryDeployedModelsResponse": {
                      "fields": {
                        "deployedModels": {
                          "rule": "repeated",
                          "type": "DeployedModel",
                          "id": 1,
                          "options": {
                            "deprecated": true
                          }
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "deployedModelRefs": {
                          "rule": "repeated",
                          "type": "DeployedModelRef",
                          "id": 3
                        },
                        "totalDeployedModelCount": {
                          "type": "int32",
                          "id": 4
                        },
                        "totalEndpointCount": {
                          "type": "int32",
                          "id": 5
                        }
                      }
                    },
                    "Endpoint": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Endpoint",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/publishers/{publisher}/models/{model}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "deployedModels": {
                          "rule": "repeated",
                          "type": "DeployedModel",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "trafficSplit": {
                          "keyType": "string",
                          "type": "int32",
                          "id": 5
                        },
                        "etag": {
                          "type": "string",
                          "id": 6
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 7
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 10
                        },
                        "network": {
                          "type": "string",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "compute.googleapis.com/Network"
                          }
                        },
                        "enablePrivateServiceConnect": {
                          "type": "bool",
                          "id": 17,
                          "options": {
                            "deprecated": true
                          }
                        },
                        "modelDeploymentMonitoringJob": {
                          "type": "string",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/ModelDeploymentMonitoringJob"
                          }
                        },
                        "predictRequestResponseLoggingConfig": {
                          "type": "PredictRequestResponseLoggingConfig",
                          "id": 18
                        }
                      }
                    },
                    "DeployedModel": {
                      "oneofs": {
                        "predictionResources": {
                          "oneof": [
                            "dedicatedResources",
                            "automaticResources",
                            "sharedResources"
                          ]
                        }
                      },
                      "fields": {
                        "dedicatedResources": {
                          "type": "DedicatedResources",
                          "id": 7
                        },
                        "automaticResources": {
                          "type": "AutomaticResources",
                          "id": 8
                        },
                        "sharedResources": {
                          "type": "string",
                          "id": 17,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/DeploymentResourcePool"
                          }
                        },
                        "id": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "model": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "modelVersionId": {
                          "type": "string",
                          "id": 18,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 3
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "explanationSpec": {
                          "type": "ExplanationSpec",
                          "id": 9
                        },
                        "disableExplanations": {
                          "type": "bool",
                          "id": 19
                        },
                        "serviceAccount": {
                          "type": "string",
                          "id": 11
                        },
                        "enableContainerLogging": {
                          "type": "bool",
                          "id": 12
                        },
                        "enableAccessLogging": {
                          "type": "bool",
                          "id": 13
                        },
                        "privateEndpoints": {
                          "type": "PrivateEndpoints",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "PrivateEndpoints": {
                      "fields": {
                        "predictHttpUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "explainHttpUri": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "healthHttpUri": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "serviceAttachment": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "PredictRequestResponseLoggingConfig": {
                      "fields": {
                        "enabled": {
                          "type": "bool",
                          "id": 1
                        },
                        "samplingRate": {
                          "type": "double",
                          "id": 2
                        },
                        "bigqueryDestination": {
                          "type": "BigQueryDestination",
                          "id": 3
                        }
                      }
                    },
                    "EndpointService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateEndpoint": {
                          "requestType": "CreateEndpointRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/endpoints",
                            "(google.api.http).body": "endpoint",
                            "(google.api.method_signature)": "parent,endpoint,endpoint_id",
                            "(google.longrunning.operation_info).response_type": "Endpoint",
                            "(google.longrunning.operation_info).metadata_type": "CreateEndpointOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/endpoints",
                                "body": "endpoint"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,endpoint"
                            },
                            {
                              "(google.api.method_signature)": "parent,endpoint,endpoint_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Endpoint",
                                "metadata_type": "CreateEndpointOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetEndpoint": {
                          "requestType": "GetEndpointRequest",
                          "responseType": "Endpoint",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/endpoints/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/endpoints/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListEndpoints": {
                          "requestType": "ListEndpointsRequest",
                          "responseType": "ListEndpointsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/endpoints",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/endpoints"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateEndpoint": {
                          "requestType": "UpdateEndpointRequest",
                          "responseType": "Endpoint",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{endpoint.name=projects/*/locations/*/endpoints/*}",
                            "(google.api.http).body": "endpoint",
                            "(google.api.method_signature)": "endpoint,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{endpoint.name=projects/*/locations/*/endpoints/*}",
                                "body": "endpoint"
                              }
                            },
                            {
                              "(google.api.method_signature)": "endpoint,update_mask"
                            }
                          ]
                        },
                        "DeleteEndpoint": {
                          "requestType": "DeleteEndpointRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/endpoints/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/endpoints/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeployModel": {
                          "requestType": "DeployModelRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{endpoint=projects/*/locations/*/endpoints/*}:deployModel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "endpoint,deployed_model,traffic_split",
                            "(google.longrunning.operation_info).response_type": "DeployModelResponse",
                            "(google.longrunning.operation_info).metadata_type": "DeployModelOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{endpoint=projects/*/locations/*/endpoints/*}:deployModel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "endpoint,deployed_model,traffic_split"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "DeployModelResponse",
                                "metadata_type": "DeployModelOperationMetadata"
                              }
                            }
                          ]
                        },
                        "UndeployModel": {
                          "requestType": "UndeployModelRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{endpoint=projects/*/locations/*/endpoints/*}:undeployModel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "endpoint,deployed_model_id,traffic_split",
                            "(google.longrunning.operation_info).response_type": "UndeployModelResponse",
                            "(google.longrunning.operation_info).metadata_type": "UndeployModelOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{endpoint=projects/*/locations/*/endpoints/*}:undeployModel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "endpoint,deployed_model_id,traffic_split"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "UndeployModelResponse",
                                "metadata_type": "UndeployModelOperationMetadata"
                              }
                            }
                          ]
                        },
                        "MutateDeployedModel": {
                          "requestType": "MutateDeployedModelRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{endpoint=projects/*/locations/*/endpoints/*}:mutateDeployedModel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "endpoint,deployed_model,update_mask",
                            "(google.longrunning.operation_info).response_type": "MutateDeployedModelResponse",
                            "(google.longrunning.operation_info).metadata_type": "MutateDeployedModelOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{endpoint=projects/*/locations/*/endpoints/*}:mutateDeployedModel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "endpoint,deployed_model,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "MutateDeployedModelResponse",
                                "metadata_type": "MutateDeployedModelOperationMetadata"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "CreateEndpointRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "endpoint": {
                          "type": "Endpoint",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "endpointId": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "CreateEndpointOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "GetEndpointRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        }
                      }
                    },
                    "ListEndpointsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListEndpointsResponse": {
                      "fields": {
                        "endpoints": {
                          "rule": "repeated",
                          "type": "Endpoint",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateEndpointRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "Endpoint",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteEndpointRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        }
                      }
                    },
                    "DeployModelRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "deployedModel": {
                          "type": "DeployedModel",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "trafficSplit": {
                          "keyType": "string",
                          "type": "int32",
                          "id": 3
                        }
                      }
                    },
                    "DeployModelResponse": {
                      "fields": {
                        "deployedModel": {
                          "type": "DeployedModel",
                          "id": 1
                        }
                      }
                    },
                    "DeployModelOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "UndeployModelRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "deployedModelId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "trafficSplit": {
                          "keyType": "string",
                          "type": "int32",
                          "id": 3
                        }
                      }
                    },
                    "UndeployModelResponse": {
                      "fields": {}
                    },
                    "UndeployModelOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "MutateDeployedModelRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "deployedModel": {
                          "type": "DeployedModel",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "MutateDeployedModelResponse": {
                      "fields": {
                        "deployedModel": {
                          "type": "DeployedModel",
                          "id": 1
                        }
                      }
                    },
                    "MutateDeployedModelOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "EntityType": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/EntityType",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "monitoringConfig": {
                          "type": "FeaturestoreMonitoringConfig",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "offlineStorageTtlDays": {
                          "type": "int32",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "FeaturestoreMonitoringConfig": {
                      "fields": {
                        "snapshotAnalysis": {
                          "type": "SnapshotAnalysis",
                          "id": 1
                        },
                        "importFeaturesAnalysis": {
                          "type": "ImportFeaturesAnalysis",
                          "id": 2
                        },
                        "numericalThresholdConfig": {
                          "type": "ThresholdConfig",
                          "id": 3
                        },
                        "categoricalThresholdConfig": {
                          "type": "ThresholdConfig",
                          "id": 4
                        }
                      },
                      "nested": {
                        "SnapshotAnalysis": {
                          "fields": {
                            "disabled": {
                              "type": "bool",
                              "id": 1
                            },
                            "monitoringInterval": {
                              "type": "google.protobuf.Duration",
                              "id": 2,
                              "options": {
                                "deprecated": true
                              }
                            },
                            "monitoringIntervalDays": {
                              "type": "int32",
                              "id": 3
                            },
                            "stalenessDays": {
                              "type": "int32",
                              "id": 4
                            }
                          }
                        },
                        "ImportFeaturesAnalysis": {
                          "fields": {
                            "state": {
                              "type": "State",
                              "id": 1
                            },
                            "anomalyDetectionBaseline": {
                              "type": "Baseline",
                              "id": 2
                            }
                          },
                          "nested": {
                            "State": {
                              "values": {
                                "STATE_UNSPECIFIED": 0,
                                "DEFAULT": 1,
                                "ENABLED": 2,
                                "DISABLED": 3
                              }
                            },
                            "Baseline": {
                              "values": {
                                "BASELINE_UNSPECIFIED": 0,
                                "LATEST_STATS": 1,
                                "MOST_RECENT_SNAPSHOT_STATS": 2,
                                "PREVIOUS_IMPORT_FEATURES_STATS": 3
                              }
                            }
                          }
                        },
                        "ThresholdConfig": {
                          "oneofs": {
                            "threshold": {
                              "oneof": [
                                "value"
                              ]
                            }
                          },
                          "fields": {
                            "value": {
                              "type": "double",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "EvaluatedAnnotation": {
                      "fields": {
                        "type": {
                          "type": "EvaluatedAnnotationType",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "predictions": {
                          "rule": "repeated",
                          "type": "google.protobuf.Value",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "groundTruths": {
                          "rule": "repeated",
                          "type": "google.protobuf.Value",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "dataItemPayload": {
                          "type": "google.protobuf.Value",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "evaluatedDataItemViewId": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "explanations": {
                          "rule": "repeated",
                          "type": "EvaluatedAnnotationExplanation",
                          "id": 8
                        },
                        "errorAnalysisAnnotations": {
                          "rule": "repeated",
                          "type": "ErrorAnalysisAnnotation",
                          "id": 9
                        }
                      },
                      "nested": {
                        "EvaluatedAnnotationType": {
                          "values": {
                            "EVALUATED_ANNOTATION_TYPE_UNSPECIFIED": 0,
                            "TRUE_POSITIVE": 1,
                            "FALSE_POSITIVE": 2,
                            "FALSE_NEGATIVE": 3
                          }
                        }
                      }
                    },
                    "EvaluatedAnnotationExplanation": {
                      "fields": {
                        "explanationType": {
                          "type": "string",
                          "id": 1
                        },
                        "explanation": {
                          "type": "Explanation",
                          "id": 2
                        }
                      }
                    },
                    "ErrorAnalysisAnnotation": {
                      "fields": {
                        "attributedItems": {
                          "rule": "repeated",
                          "type": "AttributedItem",
                          "id": 1
                        },
                        "queryType": {
                          "type": "QueryType",
                          "id": 2
                        },
                        "outlierScore": {
                          "type": "double",
                          "id": 3
                        },
                        "outlierThreshold": {
                          "type": "double",
                          "id": 4
                        }
                      },
                      "nested": {
                        "AttributedItem": {
                          "fields": {
                            "annotationResourceName": {
                              "type": "string",
                              "id": 1
                            },
                            "distance": {
                              "type": "double",
                              "id": 2
                            }
                          }
                        },
                        "QueryType": {
                          "values": {
                            "QUERY_TYPE_UNSPECIFIED": 0,
                            "ALL_SIMILAR": 1,
                            "SAME_CLASS_SIMILAR": 2,
                            "SAME_CLASS_DISSIMILAR": 3
                          }
                        }
                      }
                    },
                    "Event": {
                      "fields": {
                        "artifact": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Artifact"
                          }
                        },
                        "execution": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Execution"
                          }
                        },
                        "eventTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "type": {
                          "type": "Type",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 5
                        }
                      },
                      "nested": {
                        "Type": {
                          "values": {
                            "TYPE_UNSPECIFIED": 0,
                            "INPUT": 1,
                            "OUTPUT": 2
                          }
                        }
                      }
                    },
                    "Execution": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Execution",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/metadataStores/{metadata_store}/executions/{execution}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2
                        },
                        "state": {
                          "type": "State",
                          "id": 6
                        },
                        "etag": {
                          "type": "string",
                          "id": 9
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 10
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "schemaTitle": {
                          "type": "string",
                          "id": 13
                        },
                        "schemaVersion": {
                          "type": "string",
                          "id": 14
                        },
                        "metadata": {
                          "type": "google.protobuf.Struct",
                          "id": 15
                        },
                        "description": {
                          "type": "string",
                          "id": 16
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "NEW": 1,
                            "RUNNING": 2,
                            "COMPLETE": 3,
                            "FAILED": 4,
                            "CACHED": 5,
                            "CANCELLED": 6
                          }
                        }
                      }
                    },
                    "Feature": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Feature",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}",
                        "(google.api.resource).plural": "features",
                        "(google.api.resource).singular": "feature"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 2
                        },
                        "valueType": {
                          "type": "ValueType",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 7
                        },
                        "monitoringConfig": {
                          "type": "FeaturestoreMonitoringConfig",
                          "id": 9,
                          "options": {
                            "deprecated": true,
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "disableMonitoring": {
                          "type": "bool",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "monitoringStats": {
                          "rule": "repeated",
                          "type": "FeatureStatsAnomaly",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "monitoringStatsAnomalies": {
                          "rule": "repeated",
                          "type": "MonitoringStatsAnomaly",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "versionColumnName": {
                          "type": "string",
                          "id": 106
                        },
                        "pointOfContact": {
                          "type": "string",
                          "id": 107
                        }
                      },
                      "nested": {
                        "MonitoringStatsAnomaly": {
                          "fields": {
                            "objective": {
                              "type": "Objective",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "featureStatsAnomaly": {
                              "type": "FeatureStatsAnomaly",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          },
                          "nested": {
                            "Objective": {
                              "values": {
                                "OBJECTIVE_UNSPECIFIED": 0,
                                "IMPORT_FEATURE_ANALYSIS": 1,
                                "SNAPSHOT_ANALYSIS": 2
                              }
                            }
                          }
                        },
                        "ValueType": {
                          "values": {
                            "VALUE_TYPE_UNSPECIFIED": 0,
                            "BOOL": 1,
                            "BOOL_ARRAY": 2,
                            "DOUBLE": 3,
                            "DOUBLE_ARRAY": 4,
                            "INT64": 9,
                            "INT64_ARRAY": 10,
                            "STRING": 11,
                            "STRING_ARRAY": 12,
                            "BYTES": 13
                          }
                        }
                      }
                    },
                    "FeatureGroup": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/FeatureGroup",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/featureGroups/{feature_group}",
                        "(google.api.resource).plural": "featureGroups",
                        "(google.api.resource).singular": "featureGroup"
                      },
                      "oneofs": {
                        "source": {
                          "oneof": [
                            "bigQuery"
                          ]
                        }
                      },
                      "fields": {
                        "bigQuery": {
                          "type": "BigQuery",
                          "id": 7
                        },
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IDENTIFIER"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "BigQuery": {
                          "fields": {
                            "bigQuerySource": {
                              "type": "BigQuerySource",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "entityIdColumns": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        }
                      }
                    },
                    "FeatureOnlineStore": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/FeatureOnlineStore",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}"
                      },
                      "oneofs": {
                        "storageType": {
                          "oneof": [
                            "bigtable",
                            "optimized"
                          ]
                        }
                      },
                      "fields": {
                        "bigtable": {
                          "type": "Bigtable",
                          "id": 8
                        },
                        "optimized": {
                          "type": "Optimized",
                          "id": 12
                        },
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IDENTIFIER"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "dedicatedServingEndpoint": {
                          "type": "DedicatedServingEndpoint",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "embeddingManagement": {
                          "type": "EmbeddingManagement",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "Bigtable": {
                          "fields": {
                            "autoScaling": {
                              "type": "AutoScaling",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          },
                          "nested": {
                            "AutoScaling": {
                              "fields": {
                                "minNodeCount": {
                                  "type": "int32",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "maxNodeCount": {
                                  "type": "int32",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "cpuUtilizationTarget": {
                                  "type": "int32",
                                  "id": 3,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "Optimized": {
                          "fields": {}
                        },
                        "DedicatedServingEndpoint": {
                          "fields": {
                            "publicEndpointDomainName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "privateServiceConnectConfig": {
                              "type": "PrivateServiceConnectConfig",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "serviceAttachment": {
                              "type": "string",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        },
                        "EmbeddingManagement": {
                          "fields": {
                            "enabled": {
                              "type": "bool",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "IMMUTABLE"
                              }
                            }
                          }
                        },
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "STABLE": 1,
                            "UPDATING": 2
                          }
                        }
                      }
                    },
                    "PrivateServiceConnectConfig": {
                      "fields": {
                        "enablePrivateServiceConnect": {
                          "type": "bool",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "projectAllowlist": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "PscAutomatedEndpoints": {
                      "fields": {
                        "projectId": {
                          "type": "string",
                          "id": 1
                        },
                        "network": {
                          "type": "string",
                          "id": 2
                        },
                        "matchAddress": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "FeatureOnlineStoreAdminService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateFeatureOnlineStore": {
                          "requestType": "CreateFeatureOnlineStoreRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/featureOnlineStores",
                            "(google.api.http).body": "feature_online_store",
                            "(google.api.method_signature)": "parent,feature_online_store,feature_online_store_id",
                            "(google.longrunning.operation_info).response_type": "FeatureOnlineStore",
                            "(google.longrunning.operation_info).metadata_type": "CreateFeatureOnlineStoreOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/featureOnlineStores",
                                "body": "feature_online_store"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,feature_online_store,feature_online_store_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "FeatureOnlineStore",
                                "metadata_type": "CreateFeatureOnlineStoreOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetFeatureOnlineStore": {
                          "requestType": "GetFeatureOnlineStoreRequest",
                          "responseType": "FeatureOnlineStore",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/featureOnlineStores/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/featureOnlineStores/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListFeatureOnlineStores": {
                          "requestType": "ListFeatureOnlineStoresRequest",
                          "responseType": "ListFeatureOnlineStoresResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/featureOnlineStores",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/featureOnlineStores"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateFeatureOnlineStore": {
                          "requestType": "UpdateFeatureOnlineStoreRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{feature_online_store.name=projects/*/locations/*/featureOnlineStores/*}",
                            "(google.api.http).body": "feature_online_store",
                            "(google.api.method_signature)": "feature_online_store,update_mask",
                            "(google.longrunning.operation_info).response_type": "FeatureOnlineStore",
                            "(google.longrunning.operation_info).metadata_type": "UpdateFeatureOnlineStoreOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{feature_online_store.name=projects/*/locations/*/featureOnlineStores/*}",
                                "body": "feature_online_store"
                              }
                            },
                            {
                              "(google.api.method_signature)": "feature_online_store,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "FeatureOnlineStore",
                                "metadata_type": "UpdateFeatureOnlineStoreOperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteFeatureOnlineStore": {
                          "requestType": "DeleteFeatureOnlineStoreRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/featureOnlineStores/*}",
                            "(google.api.method_signature)": "name,force",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/featureOnlineStores/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,force"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CreateFeatureView": {
                          "requestType": "CreateFeatureViewRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/featureOnlineStores/*}/featureViews",
                            "(google.api.http).body": "feature_view",
                            "(google.api.method_signature)": "parent,feature_view,feature_view_id",
                            "(google.longrunning.operation_info).response_type": "FeatureView",
                            "(google.longrunning.operation_info).metadata_type": "CreateFeatureViewOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/featureOnlineStores/*}/featureViews",
                                "body": "feature_view"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,feature_view,feature_view_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "FeatureView",
                                "metadata_type": "CreateFeatureViewOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetFeatureView": {
                          "requestType": "GetFeatureViewRequest",
                          "responseType": "FeatureView",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/featureOnlineStores/*/featureViews/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/featureOnlineStores/*/featureViews/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListFeatureViews": {
                          "requestType": "ListFeatureViewsRequest",
                          "responseType": "ListFeatureViewsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*/featureOnlineStores/*}/featureViews",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*/featureOnlineStores/*}/featureViews"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateFeatureView": {
                          "requestType": "UpdateFeatureViewRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{feature_view.name=projects/*/locations/*/featureOnlineStores/*/featureViews/*}",
                            "(google.api.http).body": "feature_view",
                            "(google.api.method_signature)": "feature_view,update_mask",
                            "(google.longrunning.operation_info).response_type": "FeatureView",
                            "(google.longrunning.operation_info).metadata_type": "UpdateFeatureViewOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{feature_view.name=projects/*/locations/*/featureOnlineStores/*/featureViews/*}",
                                "body": "feature_view"
                              }
                            },
                            {
                              "(google.api.method_signature)": "feature_view,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "FeatureView",
                                "metadata_type": "UpdateFeatureViewOperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteFeatureView": {
                          "requestType": "DeleteFeatureViewRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/featureOnlineStores/*/featureViews/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/featureOnlineStores/*/featureViews/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "SyncFeatureView": {
                          "requestType": "SyncFeatureViewRequest",
                          "responseType": "SyncFeatureViewResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{feature_view=projects/*/locations/*/featureOnlineStores/*/featureViews/*}:sync",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "feature_view"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{feature_view=projects/*/locations/*/featureOnlineStores/*/featureViews/*}:sync",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "feature_view"
                            }
                          ]
                        },
                        "GetFeatureViewSync": {
                          "requestType": "GetFeatureViewSyncRequest",
                          "responseType": "FeatureViewSync",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/featureOnlineStores/*/featureViews/*/featureViewSyncs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/featureOnlineStores/*/featureViews/*/featureViewSyncs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListFeatureViewSyncs": {
                          "requestType": "ListFeatureViewSyncsRequest",
                          "responseType": "ListFeatureViewSyncsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*/featureOnlineStores/*/featureViews/*}/featureViewSyncs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*/featureOnlineStores/*/featureViews/*}/featureViewSyncs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        }
                      }
                    },
                    "CreateFeatureOnlineStoreRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/FeatureOnlineStore"
                          }
                        },
                        "featureOnlineStore": {
                          "type": "FeatureOnlineStore",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "featureOnlineStoreId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetFeatureOnlineStoreRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/FeatureOnlineStore"
                          }
                        }
                      }
                    },
                    "ListFeatureOnlineStoresRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/FeatureOnlineStore"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ListFeatureOnlineStoresResponse": {
                      "fields": {
                        "featureOnlineStores": {
                          "rule": "repeated",
                          "type": "FeatureOnlineStore",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateFeatureOnlineStoreRequest": {
                      "fields": {
                        "featureOnlineStore": {
                          "type": "FeatureOnlineStore",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "DeleteFeatureOnlineStoreRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/FeatureOnlineStore"
                          }
                        },
                        "force": {
                          "type": "bool",
                          "id": 2
                        }
                      }
                    },
                    "CreateFeatureViewRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/FeatureOnlineStore"
                          }
                        },
                        "featureView": {
                          "type": "FeatureView",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "featureViewId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "runSyncImmediately": {
                          "type": "bool",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "GetFeatureViewRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/FeatureView"
                          }
                        }
                      }
                    },
                    "ListFeatureViewsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/FeatureView"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ListFeatureViewsResponse": {
                      "fields": {
                        "featureViews": {
                          "rule": "repeated",
                          "type": "FeatureView",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateFeatureViewRequest": {
                      "fields": {
                        "featureView": {
                          "type": "FeatureView",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "DeleteFeatureViewRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/FeatureView"
                          }
                        }
                      }
                    },
                    "CreateFeatureOnlineStoreOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "UpdateFeatureOnlineStoreOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "CreateFeatureViewOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "UpdateFeatureViewOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "SyncFeatureViewRequest": {
                      "fields": {
                        "featureView": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/FeatureView"
                          }
                        }
                      }
                    },
                    "SyncFeatureViewResponse": {
                      "fields": {
                        "featureViewSync": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "GetFeatureViewSyncRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/FeatureViewSync"
                          }
                        }
                      }
                    },
                    "ListFeatureViewSyncsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/FeatureView"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ListFeatureViewSyncsResponse": {
                      "fields": {
                        "featureViewSyncs": {
                          "rule": "repeated",
                          "type": "FeatureViewSync",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "FeatureView": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/FeatureView",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}"
                      },
                      "oneofs": {
                        "source": {
                          "oneof": [
                            "bigQuerySource",
                            "featureRegistrySource"
                          ]
                        }
                      },
                      "fields": {
                        "bigQuerySource": {
                          "type": "BigQuerySource",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "featureRegistrySource": {
                          "type": "FeatureRegistrySource",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IDENTIFIER"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "syncConfig": {
                          "type": "SyncConfig",
                          "id": 7
                        },
                        "vectorSearchConfig": {
                          "type": "VectorSearchConfig",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "BigQuerySource": {
                          "fields": {
                            "uri": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "entityIdColumns": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "SyncConfig": {
                          "fields": {
                            "cron": {
                              "type": "string",
                              "id": 1
                            }
                          }
                        },
                        "VectorSearchConfig": {
                          "oneofs": {
                            "algorithmConfig": {
                              "oneof": [
                                "treeAhConfig",
                                "bruteForceConfig"
                              ]
                            },
                            "_embeddingDimension": {
                              "oneof": [
                                "embeddingDimension"
                              ]
                            }
                          },
                          "fields": {
                            "treeAhConfig": {
                              "type": "TreeAHConfig",
                              "id": 8,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "bruteForceConfig": {
                              "type": "BruteForceConfig",
                              "id": 9,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "embeddingColumn": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "filterColumns": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "crowdingColumn": {
                              "type": "string",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "embeddingDimension": {
                              "type": "int32",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            },
                            "distanceMeasureType": {
                              "type": "DistanceMeasureType",
                              "id": 7,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          },
                          "nested": {
                            "BruteForceConfig": {
                              "fields": {}
                            },
                            "TreeAHConfig": {
                              "oneofs": {
                                "_leafNodeEmbeddingCount": {
                                  "oneof": [
                                    "leafNodeEmbeddingCount"
                                  ]
                                }
                              },
                              "fields": {
                                "leafNodeEmbeddingCount": {
                                  "type": "int64",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL",
                                    "proto3_optional": true
                                  }
                                }
                              }
                            },
                            "DistanceMeasureType": {
                              "values": {
                                "DISTANCE_MEASURE_TYPE_UNSPECIFIED": 0,
                                "SQUARED_L2_DISTANCE": 1,
                                "COSINE_DISTANCE": 2,
                                "DOT_PRODUCT_DISTANCE": 3
                              }
                            }
                          }
                        },
                        "FeatureRegistrySource": {
                          "fields": {
                            "featureGroups": {
                              "rule": "repeated",
                              "type": "FeatureGroup",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          },
                          "nested": {
                            "FeatureGroup": {
                              "fields": {
                                "featureGroupId": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "featureIds": {
                                  "rule": "repeated",
                                  "type": "string",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "FeatureViewSync": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/FeatureViewSync",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}/featureViewSyncs/feature_view_sync"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IDENTIFIER"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "runTime": {
                          "type": "google.type.Interval",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "finalStatus": {
                          "type": "google.rpc.Status",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "FeatureOnlineStoreService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "FetchFeatureValues": {
                          "requestType": "FetchFeatureValuesRequest",
                          "responseType": "FetchFeatureValuesResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{feature_view=projects/*/locations/*/featureOnlineStores/*/featureViews/*}:fetchFeatureValues",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "feature_view, data_key"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{feature_view=projects/*/locations/*/featureOnlineStores/*/featureViews/*}:fetchFeatureValues",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "feature_view, data_key"
                            }
                          ]
                        },
                        "SearchNearestEntities": {
                          "requestType": "SearchNearestEntitiesRequest",
                          "responseType": "SearchNearestEntitiesResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{feature_view=projects/*/locations/*/featureOnlineStores/*/featureViews/*}:searchNearestEntities",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{feature_view=projects/*/locations/*/featureOnlineStores/*/featureViews/*}:searchNearestEntities",
                                "body": "*"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "FeatureViewDataFormat": {
                      "values": {
                        "FEATURE_VIEW_DATA_FORMAT_UNSPECIFIED": 0,
                        "KEY_VALUE": 1,
                        "PROTO_STRUCT": 2
                      }
                    },
                    "FeatureViewDataKey": {
                      "oneofs": {
                        "keyOneof": {
                          "oneof": [
                            "key"
                          ]
                        }
                      },
                      "fields": {
                        "key": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "FetchFeatureValuesRequest": {
                      "oneofs": {
                        "entityId": {
                          "oneof": [
                            "id"
                          ]
                        }
                      },
                      "fields": {
                        "id": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "deprecated": true
                          }
                        },
                        "featureView": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/FeatureView"
                          }
                        },
                        "dataKey": {
                          "type": "FeatureViewDataKey",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "dataFormat": {
                          "type": "FeatureViewDataFormat",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "format": {
                          "type": "Format",
                          "id": 5,
                          "options": {
                            "deprecated": true
                          }
                        }
                      },
                      "nested": {
                        "Format": {
                          "options": {
                            "deprecated": true
                          },
                          "values": {
                            "FORMAT_UNSPECIFIED": 0,
                            "KEY_VALUE": 1,
                            "PROTO_STRUCT": 2
                          }
                        }
                      }
                    },
                    "FetchFeatureValuesResponse": {
                      "oneofs": {
                        "format": {
                          "oneof": [
                            "keyValues",
                            "protoStruct"
                          ]
                        }
                      },
                      "fields": {
                        "keyValues": {
                          "type": "FeatureNameValuePairList",
                          "id": 3
                        },
                        "protoStruct": {
                          "type": "google.protobuf.Struct",
                          "id": 2
                        }
                      },
                      "nested": {
                        "FeatureNameValuePairList": {
                          "fields": {
                            "features": {
                              "rule": "repeated",
                              "type": "FeatureNameValuePair",
                              "id": 1
                            }
                          },
                          "nested": {
                            "FeatureNameValuePair": {
                              "oneofs": {
                                "data": {
                                  "oneof": [
                                    "value"
                                  ]
                                }
                              },
                              "fields": {
                                "value": {
                                  "type": "FeatureValue",
                                  "id": 2
                                },
                                "name": {
                                  "type": "string",
                                  "id": 1
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "NearestNeighborQuery": {
                      "oneofs": {
                        "instance": {
                          "oneof": [
                            "entityId",
                            "embedding"
                          ]
                        }
                      },
                      "fields": {
                        "entityId": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "embedding": {
                          "type": "Embedding",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "neighborCount": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "stringFilters": {
                          "rule": "repeated",
                          "type": "StringFilter",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "perCrowdingAttributeNeighborCount": {
                          "type": "int32",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "parameters": {
                          "type": "Parameters",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "Embedding": {
                          "fields": {
                            "value": {
                              "rule": "repeated",
                              "type": "float",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "StringFilter": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "allowTokens": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "denyTokens": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "Parameters": {
                          "fields": {
                            "approximateNeighborCandidates": {
                              "type": "int32",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "leafNodesSearchFraction": {
                              "type": "double",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        }
                      }
                    },
                    "SearchNearestEntitiesRequest": {
                      "fields": {
                        "featureView": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/FeatureView"
                          }
                        },
                        "query": {
                          "type": "NearestNeighborQuery",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "returnFullEntity": {
                          "type": "bool",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "NearestNeighbors": {
                      "fields": {
                        "neighbors": {
                          "rule": "repeated",
                          "type": "Neighbor",
                          "id": 1
                        }
                      },
                      "nested": {
                        "Neighbor": {
                          "fields": {
                            "entityId": {
                              "type": "string",
                              "id": 1
                            },
                            "distance": {
                              "type": "double",
                              "id": 2
                            },
                            "entityKeyValues": {
                              "type": "FetchFeatureValuesResponse",
                              "id": 3
                            }
                          }
                        }
                      }
                    },
                    "SearchNearestEntitiesResponse": {
                      "fields": {
                        "nearestNeighbors": {
                          "type": "NearestNeighbors",
                          "id": 1
                        }
                      }
                    },
                    "FeaturestoreOnlineServingService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "ReadFeatureValues": {
                          "requestType": "ReadFeatureValuesRequest",
                          "responseType": "ReadFeatureValuesResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{entity_type=projects/*/locations/*/featurestores/*/entityTypes/*}:readFeatureValues",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "entity_type"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{entity_type=projects/*/locations/*/featurestores/*/entityTypes/*}:readFeatureValues",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "entity_type"
                            }
                          ]
                        },
                        "StreamingReadFeatureValues": {
                          "requestType": "StreamingReadFeatureValuesRequest",
                          "responseType": "ReadFeatureValuesResponse",
                          "responseStream": true,
                          "options": {
                            "(google.api.http).post": "/v1beta1/{entity_type=projects/*/locations/*/featurestores/*/entityTypes/*}:streamingReadFeatureValues",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "entity_type"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{entity_type=projects/*/locations/*/featurestores/*/entityTypes/*}:streamingReadFeatureValues",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "entity_type"
                            }
                          ]
                        },
                        "WriteFeatureValues": {
                          "requestType": "WriteFeatureValuesRequest",
                          "responseType": "WriteFeatureValuesResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{entity_type=projects/*/locations/*/featurestores/*/entityTypes/*}:writeFeatureValues",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "entity_type,payloads"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{entity_type=projects/*/locations/*/featurestores/*/entityTypes/*}:writeFeatureValues",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "entity_type,payloads"
                            }
                          ]
                        }
                      }
                    },
                    "WriteFeatureValuesRequest": {
                      "fields": {
                        "entityType": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/EntityType"
                          }
                        },
                        "payloads": {
                          "rule": "repeated",
                          "type": "WriteFeatureValuesPayload",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "WriteFeatureValuesPayload": {
                      "fields": {
                        "entityId": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "featureValues": {
                          "keyType": "string",
                          "type": "FeatureValue",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "WriteFeatureValuesResponse": {
                      "fields": {}
                    },
                    "ReadFeatureValuesRequest": {
                      "fields": {
                        "entityType": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/EntityType"
                          }
                        },
                        "entityId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "featureSelector": {
                          "type": "FeatureSelector",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ReadFeatureValuesResponse": {
                      "fields": {
                        "header": {
                          "type": "Header",
                          "id": 1
                        },
                        "entityView": {
                          "type": "EntityView",
                          "id": 2
                        }
                      },
                      "nested": {
                        "FeatureDescriptor": {
                          "fields": {
                            "id": {
                              "type": "string",
                              "id": 1
                            }
                          }
                        },
                        "Header": {
                          "fields": {
                            "entityType": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "aiplatform.googleapis.com/EntityType"
                              }
                            },
                            "featureDescriptors": {
                              "rule": "repeated",
                              "type": "FeatureDescriptor",
                              "id": 2
                            }
                          }
                        },
                        "EntityView": {
                          "fields": {
                            "entityId": {
                              "type": "string",
                              "id": 1
                            },
                            "data": {
                              "rule": "repeated",
                              "type": "Data",
                              "id": 2
                            }
                          },
                          "nested": {
                            "Data": {
                              "oneofs": {
                                "data": {
                                  "oneof": [
                                    "value",
                                    "values"
                                  ]
                                }
                              },
                              "fields": {
                                "value": {
                                  "type": "FeatureValue",
                                  "id": 1
                                },
                                "values": {
                                  "type": "FeatureValueList",
                                  "id": 2
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "StreamingReadFeatureValuesRequest": {
                      "fields": {
                        "entityType": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/EntityType"
                          }
                        },
                        "entityIds": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "featureSelector": {
                          "type": "FeatureSelector",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "FeatureValue": {
                      "oneofs": {
                        "value": {
                          "oneof": [
                            "boolValue",
                            "doubleValue",
                            "int64Value",
                            "stringValue",
                            "boolArrayValue",
                            "doubleArrayValue",
                            "int64ArrayValue",
                            "stringArrayValue",
                            "bytesValue"
                          ]
                        }
                      },
                      "fields": {
                        "boolValue": {
                          "type": "bool",
                          "id": 1
                        },
                        "doubleValue": {
                          "type": "double",
                          "id": 2
                        },
                        "int64Value": {
                          "type": "int64",
                          "id": 5
                        },
                        "stringValue": {
                          "type": "string",
                          "id": 6
                        },
                        "boolArrayValue": {
                          "type": "BoolArray",
                          "id": 7
                        },
                        "doubleArrayValue": {
                          "type": "DoubleArray",
                          "id": 8
                        },
                        "int64ArrayValue": {
                          "type": "Int64Array",
                          "id": 11
                        },
                        "stringArrayValue": {
                          "type": "StringArray",
                          "id": 12
                        },
                        "bytesValue": {
                          "type": "bytes",
                          "id": 13
                        },
                        "metadata": {
                          "type": "Metadata",
                          "id": 14
                        }
                      },
                      "nested": {
                        "Metadata": {
                          "fields": {
                            "generateTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "FeatureValueList": {
                      "fields": {
                        "values": {
                          "rule": "repeated",
                          "type": "FeatureValue",
                          "id": 1
                        }
                      }
                    },
                    "IdMatcher": {
                      "fields": {
                        "ids": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "FeatureSelector": {
                      "fields": {
                        "idMatcher": {
                          "type": "IdMatcher",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "BoolArray": {
                      "fields": {
                        "values": {
                          "rule": "repeated",
                          "type": "bool",
                          "id": 1
                        }
                      }
                    },
                    "DoubleArray": {
                      "fields": {
                        "values": {
                          "rule": "repeated",
                          "type": "double",
                          "id": 1
                        }
                      }
                    },
                    "Int64Array": {
                      "fields": {
                        "values": {
                          "rule": "repeated",
                          "type": "int64",
                          "id": 1
                        }
                      }
                    },
                    "StringArray": {
                      "fields": {
                        "values": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "Tensor": {
                      "fields": {
                        "dtype": {
                          "type": "DataType",
                          "id": 1
                        },
                        "shape": {
                          "rule": "repeated",
                          "type": "int64",
                          "id": 2
                        },
                        "boolVal": {
                          "rule": "repeated",
                          "type": "bool",
                          "id": 3
                        },
                        "stringVal": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 14
                        },
                        "bytesVal": {
                          "rule": "repeated",
                          "type": "bytes",
                          "id": 15
                        },
                        "floatVal": {
                          "rule": "repeated",
                          "type": "float",
                          "id": 5
                        },
                        "doubleVal": {
                          "rule": "repeated",
                          "type": "double",
                          "id": 6
                        },
                        "intVal": {
                          "rule": "repeated",
                          "type": "int32",
                          "id": 7
                        },
                        "int64Val": {
                          "rule": "repeated",
                          "type": "int64",
                          "id": 8
                        },
                        "uintVal": {
                          "rule": "repeated",
                          "type": "uint32",
                          "id": 9
                        },
                        "uint64Val": {
                          "rule": "repeated",
                          "type": "uint64",
                          "id": 10
                        },
                        "listVal": {
                          "rule": "repeated",
                          "type": "Tensor",
                          "id": 11
                        },
                        "structVal": {
                          "keyType": "string",
                          "type": "Tensor",
                          "id": 12
                        },
                        "tensorVal": {
                          "type": "bytes",
                          "id": 13
                        }
                      },
                      "nested": {
                        "DataType": {
                          "values": {
                            "DATA_TYPE_UNSPECIFIED": 0,
                            "BOOL": 1,
                            "STRING": 2,
                            "FLOAT": 3,
                            "DOUBLE": 4,
                            "INT8": 5,
                            "INT16": 6,
                            "INT32": 7,
                            "INT64": 8,
                            "UINT8": 9,
                            "UINT16": 10,
                            "UINT32": 11,
                            "UINT64": 12
                          }
                        }
                      }
                    },
                    "FeatureRegistryService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateFeatureGroup": {
                          "requestType": "CreateFeatureGroupRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/featureGroups",
                            "(google.api.http).body": "feature_group",
                            "(google.api.method_signature)": "parent,feature_group,feature_group_id",
                            "(google.longrunning.operation_info).response_type": "FeatureGroup",
                            "(google.longrunning.operation_info).metadata_type": "CreateFeatureGroupOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/featureGroups",
                                "body": "feature_group"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,feature_group,feature_group_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "FeatureGroup",
                                "metadata_type": "CreateFeatureGroupOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetFeatureGroup": {
                          "requestType": "GetFeatureGroupRequest",
                          "responseType": "FeatureGroup",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/featureGroups/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/featureGroups/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListFeatureGroups": {
                          "requestType": "ListFeatureGroupsRequest",
                          "responseType": "ListFeatureGroupsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/featureGroups",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/featureGroups"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateFeatureGroup": {
                          "requestType": "UpdateFeatureGroupRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{feature_group.name=projects/*/locations/*/featureGroups/*}",
                            "(google.api.http).body": "feature_group",
                            "(google.api.method_signature)": "feature_group,update_mask",
                            "(google.longrunning.operation_info).response_type": "FeatureGroup",
                            "(google.longrunning.operation_info).metadata_type": "UpdateFeatureGroupOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{feature_group.name=projects/*/locations/*/featureGroups/*}",
                                "body": "feature_group"
                              }
                            },
                            {
                              "(google.api.method_signature)": "feature_group,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "FeatureGroup",
                                "metadata_type": "UpdateFeatureGroupOperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteFeatureGroup": {
                          "requestType": "DeleteFeatureGroupRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/featureGroups/*}",
                            "(google.api.method_signature)": "name,force",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/featureGroups/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,force"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CreateFeature": {
                          "requestType": "CreateFeatureRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/featureGroups/*}/features",
                            "(google.api.http).body": "feature",
                            "(google.api.method_signature)": "parent,feature,feature_id",
                            "(google.longrunning.operation_info).response_type": "Feature",
                            "(google.longrunning.operation_info).metadata_type": "CreateFeatureOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/featureGroups/*}/features",
                                "body": "feature"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,feature,feature_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Feature",
                                "metadata_type": "CreateFeatureOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetFeature": {
                          "requestType": "GetFeatureRequest",
                          "responseType": "Feature",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/featureGroups/*/features/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/featureGroups/*/features/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListFeatures": {
                          "requestType": "ListFeaturesRequest",
                          "responseType": "ListFeaturesResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*/featureGroups/*}/features",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*/featureGroups/*}/features"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateFeature": {
                          "requestType": "UpdateFeatureRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{feature.name=projects/*/locations/*/featureGroups/*/features/*}",
                            "(google.api.http).body": "feature",
                            "(google.api.method_signature)": "feature,update_mask",
                            "(google.longrunning.operation_info).response_type": "Feature",
                            "(google.longrunning.operation_info).metadata_type": "UpdateFeatureOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{feature.name=projects/*/locations/*/featureGroups/*/features/*}",
                                "body": "feature"
                              }
                            },
                            {
                              "(google.api.method_signature)": "feature,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Feature",
                                "metadata_type": "UpdateFeatureOperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteFeature": {
                          "requestType": "DeleteFeatureRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/featureGroups/*/features/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/featureGroups/*/features/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "CreateFeatureGroupRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/FeatureGroup"
                          }
                        },
                        "featureGroup": {
                          "type": "FeatureGroup",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "featureGroupId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetFeatureGroupRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/FeatureGroup"
                          }
                        }
                      }
                    },
                    "ListFeatureGroupsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/FeatureGroup"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ListFeatureGroupsResponse": {
                      "fields": {
                        "featureGroups": {
                          "rule": "repeated",
                          "type": "FeatureGroup",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateFeatureGroupRequest": {
                      "fields": {
                        "featureGroup": {
                          "type": "FeatureGroup",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "DeleteFeatureGroupRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/FeatureGroup"
                          }
                        },
                        "force": {
                          "type": "bool",
                          "id": 2
                        }
                      }
                    },
                    "CreateFeatureGroupOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "UpdateFeatureGroupOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "CreateRegistryFeatureOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "UpdateFeatureOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "FeaturestoreService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateFeaturestore": {
                          "requestType": "CreateFeaturestoreRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/featurestores",
                            "(google.api.http).body": "featurestore",
                            "(google.api.method_signature)": "parent,featurestore,featurestore_id",
                            "(google.longrunning.operation_info).response_type": "Featurestore",
                            "(google.longrunning.operation_info).metadata_type": "CreateFeaturestoreOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/featurestores",
                                "body": "featurestore"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,featurestore"
                            },
                            {
                              "(google.api.method_signature)": "parent,featurestore,featurestore_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Featurestore",
                                "metadata_type": "CreateFeaturestoreOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetFeaturestore": {
                          "requestType": "GetFeaturestoreRequest",
                          "responseType": "Featurestore",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/featurestores/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/featurestores/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListFeaturestores": {
                          "requestType": "ListFeaturestoresRequest",
                          "responseType": "ListFeaturestoresResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/featurestores",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/featurestores"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateFeaturestore": {
                          "requestType": "UpdateFeaturestoreRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{featurestore.name=projects/*/locations/*/featurestores/*}",
                            "(google.api.http).body": "featurestore",
                            "(google.api.method_signature)": "featurestore,update_mask",
                            "(google.longrunning.operation_info).response_type": "Featurestore",
                            "(google.longrunning.operation_info).metadata_type": "UpdateFeaturestoreOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{featurestore.name=projects/*/locations/*/featurestores/*}",
                                "body": "featurestore"
                              }
                            },
                            {
                              "(google.api.method_signature)": "featurestore,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Featurestore",
                                "metadata_type": "UpdateFeaturestoreOperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteFeaturestore": {
                          "requestType": "DeleteFeaturestoreRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/featurestores/*}",
                            "(google.api.method_signature)": "name,force",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/featurestores/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.api.method_signature)": "name,force"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CreateEntityType": {
                          "requestType": "CreateEntityTypeRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/featurestores/*}/entityTypes",
                            "(google.api.http).body": "entity_type",
                            "(google.api.method_signature)": "parent,entity_type,entity_type_id",
                            "(google.longrunning.operation_info).response_type": "EntityType",
                            "(google.longrunning.operation_info).metadata_type": "CreateEntityTypeOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/featurestores/*}/entityTypes",
                                "body": "entity_type"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,entity_type"
                            },
                            {
                              "(google.api.method_signature)": "parent,entity_type,entity_type_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "EntityType",
                                "metadata_type": "CreateEntityTypeOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetEntityType": {
                          "requestType": "GetEntityTypeRequest",
                          "responseType": "EntityType",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/featurestores/*/entityTypes/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/featurestores/*/entityTypes/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListEntityTypes": {
                          "requestType": "ListEntityTypesRequest",
                          "responseType": "ListEntityTypesResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*/featurestores/*}/entityTypes",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*/featurestores/*}/entityTypes"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateEntityType": {
                          "requestType": "UpdateEntityTypeRequest",
                          "responseType": "EntityType",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{entity_type.name=projects/*/locations/*/featurestores/*/entityTypes/*}",
                            "(google.api.http).body": "entity_type",
                            "(google.api.method_signature)": "entity_type,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{entity_type.name=projects/*/locations/*/featurestores/*/entityTypes/*}",
                                "body": "entity_type"
                              }
                            },
                            {
                              "(google.api.method_signature)": "entity_type,update_mask"
                            }
                          ]
                        },
                        "DeleteEntityType": {
                          "requestType": "DeleteEntityTypeRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/featurestores/*/entityTypes/*}",
                            "(google.api.method_signature)": "name,force",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/featurestores/*/entityTypes/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.api.method_signature)": "name,force"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CreateFeature": {
                          "requestType": "CreateFeatureRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/featurestores/*/entityTypes/*}/features",
                            "(google.api.http).body": "feature",
                            "(google.api.method_signature)": "parent,feature,feature_id",
                            "(google.longrunning.operation_info).response_type": "Feature",
                            "(google.longrunning.operation_info).metadata_type": "CreateFeatureOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/featurestores/*/entityTypes/*}/features",
                                "body": "feature"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,feature"
                            },
                            {
                              "(google.api.method_signature)": "parent,feature,feature_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Feature",
                                "metadata_type": "CreateFeatureOperationMetadata"
                              }
                            }
                          ]
                        },
                        "BatchCreateFeatures": {
                          "requestType": "BatchCreateFeaturesRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/featurestores/*/entityTypes/*}/features:batchCreate",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,requests",
                            "(google.longrunning.operation_info).response_type": "BatchCreateFeaturesResponse",
                            "(google.longrunning.operation_info).metadata_type": "BatchCreateFeaturesOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/featurestores/*/entityTypes/*}/features:batchCreate",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,requests"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "BatchCreateFeaturesResponse",
                                "metadata_type": "BatchCreateFeaturesOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetFeature": {
                          "requestType": "GetFeatureRequest",
                          "responseType": "Feature",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListFeatures": {
                          "requestType": "ListFeaturesRequest",
                          "responseType": "ListFeaturesResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*/featurestores/*/entityTypes/*}/features",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*/featurestores/*/entityTypes/*}/features"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateFeature": {
                          "requestType": "UpdateFeatureRequest",
                          "responseType": "Feature",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{feature.name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*}",
                            "(google.api.http).body": "feature",
                            "(google.api.method_signature)": "feature,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{feature.name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*}",
                                "body": "feature"
                              }
                            },
                            {
                              "(google.api.method_signature)": "feature,update_mask"
                            }
                          ]
                        },
                        "DeleteFeature": {
                          "requestType": "DeleteFeatureRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "ImportFeatureValues": {
                          "requestType": "ImportFeatureValuesRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{entity_type=projects/*/locations/*/featurestores/*/entityTypes/*}:importFeatureValues",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "entity_type",
                            "(google.longrunning.operation_info).response_type": "ImportFeatureValuesResponse",
                            "(google.longrunning.operation_info).metadata_type": "ImportFeatureValuesOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{entity_type=projects/*/locations/*/featurestores/*/entityTypes/*}:importFeatureValues",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "entity_type"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ImportFeatureValuesResponse",
                                "metadata_type": "ImportFeatureValuesOperationMetadata"
                              }
                            }
                          ]
                        },
                        "BatchReadFeatureValues": {
                          "requestType": "BatchReadFeatureValuesRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{featurestore=projects/*/locations/*/featurestores/*}:batchReadFeatureValues",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "featurestore",
                            "(google.longrunning.operation_info).response_type": "BatchReadFeatureValuesResponse",
                            "(google.longrunning.operation_info).metadata_type": "BatchReadFeatureValuesOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{featurestore=projects/*/locations/*/featurestores/*}:batchReadFeatureValues",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "featurestore"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "BatchReadFeatureValuesResponse",
                                "metadata_type": "BatchReadFeatureValuesOperationMetadata"
                              }
                            }
                          ]
                        },
                        "ExportFeatureValues": {
                          "requestType": "ExportFeatureValuesRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{entity_type=projects/*/locations/*/featurestores/*/entityTypes/*}:exportFeatureValues",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "entity_type",
                            "(google.longrunning.operation_info).response_type": "ExportFeatureValuesResponse",
                            "(google.longrunning.operation_info).metadata_type": "ExportFeatureValuesOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{entity_type=projects/*/locations/*/featurestores/*/entityTypes/*}:exportFeatureValues",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "entity_type"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ExportFeatureValuesResponse",
                                "metadata_type": "ExportFeatureValuesOperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteFeatureValues": {
                          "requestType": "DeleteFeatureValuesRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{entity_type=projects/*/locations/*/featurestores/*/entityTypes/*}:deleteFeatureValues",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "entity_type",
                            "(google.longrunning.operation_info).response_type": "DeleteFeatureValuesResponse",
                            "(google.longrunning.operation_info).metadata_type": "DeleteFeatureValuesOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{entity_type=projects/*/locations/*/featurestores/*/entityTypes/*}:deleteFeatureValues",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "entity_type"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "DeleteFeatureValuesResponse",
                                "metadata_type": "DeleteFeatureValuesOperationMetadata"
                              }
                            }
                          ]
                        },
                        "SearchFeatures": {
                          "requestType": "SearchFeaturesRequest",
                          "responseType": "SearchFeaturesResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{location=projects/*/locations/*}/featurestores:searchFeatures",
                            "(google.api.method_signature)": "location,query"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{location=projects/*/locations/*}/featurestores:searchFeatures"
                              }
                            },
                            {
                              "(google.api.method_signature)": "location"
                            },
                            {
                              "(google.api.method_signature)": "location,query"
                            }
                          ]
                        }
                      }
                    },
                    "CreateFeaturestoreRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/Featurestore"
                          }
                        },
                        "featurestore": {
                          "type": "Featurestore",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "featurestoreId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetFeaturestoreRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Featurestore"
                          }
                        }
                      }
                    },
                    "ListFeaturestoresRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/Featurestore"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 6
                        }
                      }
                    },
                    "ListFeaturestoresResponse": {
                      "fields": {
                        "featurestores": {
                          "rule": "repeated",
                          "type": "Featurestore",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateFeaturestoreRequest": {
                      "fields": {
                        "featurestore": {
                          "type": "Featurestore",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "DeleteFeaturestoreRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Featurestore"
                          }
                        },
                        "force": {
                          "type": "bool",
                          "id": 2
                        }
                      }
                    },
                    "ImportFeatureValuesRequest": {
                      "oneofs": {
                        "source": {
                          "oneof": [
                            "avroSource",
                            "bigquerySource",
                            "csvSource"
                          ]
                        },
                        "featureTimeSource": {
                          "oneof": [
                            "featureTimeField",
                            "featureTime"
                          ]
                        }
                      },
                      "fields": {
                        "avroSource": {
                          "type": "AvroSource",
                          "id": 2
                        },
                        "bigquerySource": {
                          "type": "BigQuerySource",
                          "id": 3
                        },
                        "csvSource": {
                          "type": "CsvSource",
                          "id": 4
                        },
                        "featureTimeField": {
                          "type": "string",
                          "id": 6
                        },
                        "featureTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7
                        },
                        "entityType": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/EntityType"
                          }
                        },
                        "entityIdField": {
                          "type": "string",
                          "id": 5
                        },
                        "featureSpecs": {
                          "rule": "repeated",
                          "type": "FeatureSpec",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "disableOnlineServing": {
                          "type": "bool",
                          "id": 9
                        },
                        "workerCount": {
                          "type": "int32",
                          "id": 11
                        },
                        "disableIngestionAnalysis": {
                          "type": "bool",
                          "id": 12
                        }
                      },
                      "nested": {
                        "FeatureSpec": {
                          "fields": {
                            "id": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "sourceField": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "ImportFeatureValuesResponse": {
                      "fields": {
                        "importedEntityCount": {
                          "type": "int64",
                          "id": 1
                        },
                        "importedFeatureValueCount": {
                          "type": "int64",
                          "id": 2
                        },
                        "invalidRowCount": {
                          "type": "int64",
                          "id": 6
                        },
                        "timestampOutsideRetentionRowsCount": {
                          "type": "int64",
                          "id": 4
                        }
                      }
                    },
                    "BatchReadFeatureValuesRequest": {
                      "oneofs": {
                        "readOption": {
                          "oneof": [
                            "csvReadInstances",
                            "bigqueryReadInstances"
                          ]
                        }
                      },
                      "fields": {
                        "csvReadInstances": {
                          "type": "CsvSource",
                          "id": 3
                        },
                        "bigqueryReadInstances": {
                          "type": "BigQuerySource",
                          "id": 5
                        },
                        "featurestore": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Featurestore"
                          }
                        },
                        "destination": {
                          "type": "FeatureValueDestination",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "passThroughFields": {
                          "rule": "repeated",
                          "type": "PassThroughField",
                          "id": 8
                        },
                        "entityTypeSpecs": {
                          "rule": "repeated",
                          "type": "EntityTypeSpec",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "PassThroughField": {
                          "fields": {
                            "fieldName": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "EntityTypeSpec": {
                          "fields": {
                            "entityTypeId": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "featureSelector": {
                              "type": "FeatureSelector",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "settings": {
                              "rule": "repeated",
                              "type": "DestinationFeatureSetting",
                              "id": 3
                            }
                          }
                        }
                      }
                    },
                    "ExportFeatureValuesRequest": {
                      "oneofs": {
                        "mode": {
                          "oneof": [
                            "snapshotExport",
                            "fullExport"
                          ]
                        }
                      },
                      "fields": {
                        "snapshotExport": {
                          "type": "SnapshotExport",
                          "id": 3
                        },
                        "fullExport": {
                          "type": "FullExport",
                          "id": 7
                        },
                        "entityType": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/EntityType"
                          }
                        },
                        "destination": {
                          "type": "FeatureValueDestination",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "featureSelector": {
                          "type": "FeatureSelector",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "settings": {
                          "rule": "repeated",
                          "type": "DestinationFeatureSetting",
                          "id": 6
                        }
                      },
                      "nested": {
                        "SnapshotExport": {
                          "fields": {
                            "snapshotTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 1
                            },
                            "startTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 2
                            }
                          }
                        },
                        "FullExport": {
                          "fields": {
                            "startTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 2
                            },
                            "endTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "DestinationFeatureSetting": {
                      "fields": {
                        "featureId": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "destinationField": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "FeatureValueDestination": {
                      "oneofs": {
                        "destination": {
                          "oneof": [
                            "bigqueryDestination",
                            "tfrecordDestination",
                            "csvDestination"
                          ]
                        }
                      },
                      "fields": {
                        "bigqueryDestination": {
                          "type": "BigQueryDestination",
                          "id": 1
                        },
                        "tfrecordDestination": {
                          "type": "TFRecordDestination",
                          "id": 2
                        },
                        "csvDestination": {
                          "type": "CsvDestination",
                          "id": 3
                        }
                      }
                    },
                    "ExportFeatureValuesResponse": {
                      "fields": {}
                    },
                    "BatchReadFeatureValuesResponse": {
                      "fields": {}
                    },
                    "CreateEntityTypeRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Featurestore"
                          }
                        },
                        "entityType": {
                          "type": "EntityType",
                          "id": 2
                        },
                        "entityTypeId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetEntityTypeRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/EntityType"
                          }
                        }
                      }
                    },
                    "ListEntityTypesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/EntityType"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 6
                        }
                      }
                    },
                    "ListEntityTypesResponse": {
                      "fields": {
                        "entityTypes": {
                          "rule": "repeated",
                          "type": "EntityType",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateEntityTypeRequest": {
                      "fields": {
                        "entityType": {
                          "type": "EntityType",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "DeleteEntityTypeRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/EntityType"
                          }
                        },
                        "force": {
                          "type": "bool",
                          "id": 2
                        }
                      }
                    },
                    "CreateFeatureRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/Feature"
                          }
                        },
                        "feature": {
                          "type": "Feature",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "featureId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "BatchCreateFeaturesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/EntityType"
                          }
                        },
                        "requests": {
                          "rule": "repeated",
                          "type": "CreateFeatureRequest",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "BatchCreateFeaturesResponse": {
                      "fields": {
                        "features": {
                          "rule": "repeated",
                          "type": "Feature",
                          "id": 1
                        }
                      }
                    },
                    "GetFeatureRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Feature"
                          }
                        }
                      }
                    },
                    "ListFeaturesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/Feature"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 6
                        },
                        "latestStatsCount": {
                          "type": "int32",
                          "id": 7
                        }
                      }
                    },
                    "ListFeaturesResponse": {
                      "fields": {
                        "features": {
                          "rule": "repeated",
                          "type": "Feature",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "SearchFeaturesRequest": {
                      "fields": {
                        "location": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "query": {
                          "type": "string",
                          "id": 3
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 4
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "SearchFeaturesResponse": {
                      "fields": {
                        "features": {
                          "rule": "repeated",
                          "type": "Feature",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateFeatureRequest": {
                      "fields": {
                        "feature": {
                          "type": "Feature",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "DeleteFeatureRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Feature"
                          }
                        }
                      }
                    },
                    "CreateFeaturestoreOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "UpdateFeaturestoreOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "ImportFeatureValuesOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        },
                        "importedEntityCount": {
                          "type": "int64",
                          "id": 2
                        },
                        "importedFeatureValueCount": {
                          "type": "int64",
                          "id": 3
                        },
                        "sourceUris": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 4
                        },
                        "invalidRowCount": {
                          "type": "int64",
                          "id": 6
                        },
                        "timestampOutsideRetentionRowsCount": {
                          "type": "int64",
                          "id": 7
                        },
                        "blockingOperationIds": {
                          "rule": "repeated",
                          "type": "int64",
                          "id": 8
                        }
                      }
                    },
                    "ExportFeatureValuesOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "BatchReadFeatureValuesOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "DeleteFeatureValuesOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "CreateEntityTypeOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "CreateFeatureOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "BatchCreateFeaturesOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "DeleteFeatureValuesRequest": {
                      "oneofs": {
                        "DeleteOption": {
                          "oneof": [
                            "selectEntity",
                            "selectTimeRangeAndFeature"
                          ]
                        }
                      },
                      "fields": {
                        "selectEntity": {
                          "type": "SelectEntity",
                          "id": 2
                        },
                        "selectTimeRangeAndFeature": {
                          "type": "SelectTimeRangeAndFeature",
                          "id": 3
                        },
                        "entityType": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/EntityType"
                          }
                        }
                      },
                      "nested": {
                        "SelectEntity": {
                          "fields": {
                            "entityIdSelector": {
                              "type": "EntityIdSelector",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "SelectTimeRangeAndFeature": {
                          "fields": {
                            "timeRange": {
                              "type": "google.type.Interval",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "featureSelector": {
                              "type": "FeatureSelector",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "skipOnlineStorageDelete": {
                              "type": "bool",
                              "id": 3
                            }
                          }
                        }
                      }
                    },
                    "DeleteFeatureValuesResponse": {
                      "oneofs": {
                        "response": {
                          "oneof": [
                            "selectEntity",
                            "selectTimeRangeAndFeature"
                          ]
                        }
                      },
                      "fields": {
                        "selectEntity": {
                          "type": "SelectEntity",
                          "id": 1
                        },
                        "selectTimeRangeAndFeature": {
                          "type": "SelectTimeRangeAndFeature",
                          "id": 2
                        }
                      },
                      "nested": {
                        "SelectEntity": {
                          "fields": {
                            "offlineStorageDeletedEntityRowCount": {
                              "type": "int64",
                              "id": 1
                            },
                            "onlineStorageDeletedEntityCount": {
                              "type": "int64",
                              "id": 2
                            }
                          }
                        },
                        "SelectTimeRangeAndFeature": {
                          "fields": {
                            "impactedFeatureCount": {
                              "type": "int64",
                              "id": 1
                            },
                            "offlineStorageModifiedEntityRowCount": {
                              "type": "int64",
                              "id": 2
                            },
                            "onlineStorageModifiedEntityCount": {
                              "type": "int64",
                              "id": 3
                            }
                          }
                        }
                      }
                    },
                    "EntityIdSelector": {
                      "oneofs": {
                        "EntityIdsSource": {
                          "oneof": [
                            "csvSource"
                          ]
                        }
                      },
                      "fields": {
                        "csvSource": {
                          "type": "CsvSource",
                          "id": 3
                        },
                        "entityIdField": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "Featurestore": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Featurestore",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/featurestores/{featurestore}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "onlineServingConfig": {
                          "type": "OnlineServingConfig",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "onlineStorageTtlDays": {
                          "type": "int32",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "OnlineServingConfig": {
                          "fields": {
                            "fixedNodeCount": {
                              "type": "int32",
                              "id": 2
                            },
                            "scaling": {
                              "type": "Scaling",
                              "id": 4
                            }
                          },
                          "nested": {
                            "Scaling": {
                              "fields": {
                                "minNodeCount": {
                                  "type": "int32",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "maxNodeCount": {
                                  "type": "int32",
                                  "id": 2
                                },
                                "cpuUtilizationTarget": {
                                  "type": "int32",
                                  "id": 3,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "STABLE": 1,
                            "UPDATING": 2
                          }
                        }
                      }
                    },
                    "HyperparameterTuningJob": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/HyperparameterTuningJob",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_job}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "studySpec": {
                          "type": "StudySpec",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "maxTrialCount": {
                          "type": "int32",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "parallelTrialCount": {
                          "type": "int32",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "maxFailedTrialCount": {
                          "type": "int32",
                          "id": 7
                        },
                        "trialJobSpec": {
                          "type": "CustomJobSpec",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "trials": {
                          "rule": "repeated",
                          "type": "Trial",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "JobState",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 15,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 16
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 17
                        }
                      }
                    },
                    "Study": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Study",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/studies/{study}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "studySpec": {
                          "type": "StudySpec",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "inactiveReason": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "ACTIVE": 1,
                            "INACTIVE": 2,
                            "COMPLETED": 3
                          }
                        }
                      }
                    },
                    "Trial": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Trial",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/studies/{study}/trials/{trial}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "id": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "parameters": {
                          "rule": "repeated",
                          "type": "Parameter",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "finalMeasurement": {
                          "type": "Measurement",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "measurements": {
                          "rule": "repeated",
                          "type": "Measurement",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "clientId": {
                          "type": "string",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "infeasibleReason": {
                          "type": "string",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "customJob": {
                          "type": "string",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/CustomJob"
                          }
                        },
                        "webAccessUris": {
                          "keyType": "string",
                          "type": "string",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "Parameter": {
                          "fields": {
                            "parameterId": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "value": {
                              "type": "google.protobuf.Value",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        },
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "REQUESTED": 1,
                            "ACTIVE": 2,
                            "STOPPING": 3,
                            "SUCCEEDED": 4,
                            "INFEASIBLE": 5
                          }
                        }
                      }
                    },
                    "TrialContext": {
                      "fields": {
                        "description": {
                          "type": "string",
                          "id": 1
                        },
                        "parameters": {
                          "rule": "repeated",
                          "type": "Trial.Parameter",
                          "id": 2
                        }
                      }
                    },
                    "StudyTimeConstraint": {
                      "oneofs": {
                        "constraint": {
                          "oneof": [
                            "maxDuration",
                            "endTime"
                          ]
                        }
                      },
                      "fields": {
                        "maxDuration": {
                          "type": "google.protobuf.Duration",
                          "id": 1
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        }
                      }
                    },
                    "StudySpec": {
                      "oneofs": {
                        "automatedStoppingSpec": {
                          "oneof": [
                            "decayCurveStoppingSpec",
                            "medianAutomatedStoppingSpec",
                            "convexStopConfig",
                            "convexAutomatedStoppingSpec"
                          ]
                        },
                        "_studyStoppingConfig": {
                          "oneof": [
                            "studyStoppingConfig"
                          ]
                        }
                      },
                      "fields": {
                        "decayCurveStoppingSpec": {
                          "type": "DecayCurveAutomatedStoppingSpec",
                          "id": 4
                        },
                        "medianAutomatedStoppingSpec": {
                          "type": "MedianAutomatedStoppingSpec",
                          "id": 5
                        },
                        "convexStopConfig": {
                          "type": "ConvexStopConfig",
                          "id": 8,
                          "options": {
                            "deprecated": true
                          }
                        },
                        "convexAutomatedStoppingSpec": {
                          "type": "ConvexAutomatedStoppingSpec",
                          "id": 9
                        },
                        "metrics": {
                          "rule": "repeated",
                          "type": "MetricSpec",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "parameters": {
                          "rule": "repeated",
                          "type": "ParameterSpec",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "algorithm": {
                          "type": "Algorithm",
                          "id": 3
                        },
                        "observationNoise": {
                          "type": "ObservationNoise",
                          "id": 6
                        },
                        "measurementSelectionType": {
                          "type": "MeasurementSelectionType",
                          "id": 7
                        },
                        "transferLearningConfig": {
                          "type": "TransferLearningConfig",
                          "id": 10
                        },
                        "studyStoppingConfig": {
                          "type": "StudyStoppingConfig",
                          "id": 11,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      },
                      "nested": {
                        "MetricSpec": {
                          "oneofs": {
                            "_safetyConfig": {
                              "oneof": [
                                "safetyConfig"
                              ]
                            }
                          },
                          "fields": {
                            "metricId": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "goal": {
                              "type": "GoalType",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "safetyConfig": {
                              "type": "SafetyMetricConfig",
                              "id": 3,
                              "options": {
                                "proto3_optional": true
                              }
                            }
                          },
                          "nested": {
                            "SafetyMetricConfig": {
                              "oneofs": {
                                "_desiredMinSafeTrialsFraction": {
                                  "oneof": [
                                    "desiredMinSafeTrialsFraction"
                                  ]
                                }
                              },
                              "fields": {
                                "safetyThreshold": {
                                  "type": "double",
                                  "id": 1
                                },
                                "desiredMinSafeTrialsFraction": {
                                  "type": "double",
                                  "id": 2,
                                  "options": {
                                    "proto3_optional": true
                                  }
                                }
                              }
                            },
                            "GoalType": {
                              "values": {
                                "GOAL_TYPE_UNSPECIFIED": 0,
                                "MAXIMIZE": 1,
                                "MINIMIZE": 2
                              }
                            }
                          }
                        },
                        "ParameterSpec": {
                          "oneofs": {
                            "parameterValueSpec": {
                              "oneof": [
                                "doubleValueSpec",
                                "integerValueSpec",
                                "categoricalValueSpec",
                                "discreteValueSpec"
                              ]
                            }
                          },
                          "fields": {
                            "doubleValueSpec": {
                              "type": "DoubleValueSpec",
                              "id": 2
                            },
                            "integerValueSpec": {
                              "type": "IntegerValueSpec",
                              "id": 3
                            },
                            "categoricalValueSpec": {
                              "type": "CategoricalValueSpec",
                              "id": 4
                            },
                            "discreteValueSpec": {
                              "type": "DiscreteValueSpec",
                              "id": 5
                            },
                            "parameterId": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "scaleType": {
                              "type": "ScaleType",
                              "id": 6
                            },
                            "conditionalParameterSpecs": {
                              "rule": "repeated",
                              "type": "ConditionalParameterSpec",
                              "id": 10
                            }
                          },
                          "nested": {
                            "DoubleValueSpec": {
                              "oneofs": {
                                "_defaultValue": {
                                  "oneof": [
                                    "defaultValue"
                                  ]
                                }
                              },
                              "fields": {
                                "minValue": {
                                  "type": "double",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "maxValue": {
                                  "type": "double",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "defaultValue": {
                                  "type": "double",
                                  "id": 4,
                                  "options": {
                                    "proto3_optional": true
                                  }
                                }
                              }
                            },
                            "IntegerValueSpec": {
                              "oneofs": {
                                "_defaultValue": {
                                  "oneof": [
                                    "defaultValue"
                                  ]
                                }
                              },
                              "fields": {
                                "minValue": {
                                  "type": "int64",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "maxValue": {
                                  "type": "int64",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "defaultValue": {
                                  "type": "int64",
                                  "id": 4,
                                  "options": {
                                    "proto3_optional": true
                                  }
                                }
                              }
                            },
                            "CategoricalValueSpec": {
                              "oneofs": {
                                "_defaultValue": {
                                  "oneof": [
                                    "defaultValue"
                                  ]
                                }
                              },
                              "fields": {
                                "values": {
                                  "rule": "repeated",
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "defaultValue": {
                                  "type": "string",
                                  "id": 3,
                                  "options": {
                                    "proto3_optional": true
                                  }
                                }
                              }
                            },
                            "DiscreteValueSpec": {
                              "oneofs": {
                                "_defaultValue": {
                                  "oneof": [
                                    "defaultValue"
                                  ]
                                }
                              },
                              "fields": {
                                "values": {
                                  "rule": "repeated",
                                  "type": "double",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "defaultValue": {
                                  "type": "double",
                                  "id": 3,
                                  "options": {
                                    "proto3_optional": true
                                  }
                                }
                              }
                            },
                            "ConditionalParameterSpec": {
                              "oneofs": {
                                "parentValueCondition": {
                                  "oneof": [
                                    "parentDiscreteValues",
                                    "parentIntValues",
                                    "parentCategoricalValues"
                                  ]
                                }
                              },
                              "fields": {
                                "parentDiscreteValues": {
                                  "type": "DiscreteValueCondition",
                                  "id": 2
                                },
                                "parentIntValues": {
                                  "type": "IntValueCondition",
                                  "id": 3
                                },
                                "parentCategoricalValues": {
                                  "type": "CategoricalValueCondition",
                                  "id": 4
                                },
                                "parameterSpec": {
                                  "type": "ParameterSpec",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              },
                              "nested": {
                                "DiscreteValueCondition": {
                                  "fields": {
                                    "values": {
                                      "rule": "repeated",
                                      "type": "double",
                                      "id": 1,
                                      "options": {
                                        "(google.api.field_behavior)": "REQUIRED"
                                      }
                                    }
                                  }
                                },
                                "IntValueCondition": {
                                  "fields": {
                                    "values": {
                                      "rule": "repeated",
                                      "type": "int64",
                                      "id": 1,
                                      "options": {
                                        "(google.api.field_behavior)": "REQUIRED"
                                      }
                                    }
                                  }
                                },
                                "CategoricalValueCondition": {
                                  "fields": {
                                    "values": {
                                      "rule": "repeated",
                                      "type": "string",
                                      "id": 1,
                                      "options": {
                                        "(google.api.field_behavior)": "REQUIRED"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "ScaleType": {
                              "values": {
                                "SCALE_TYPE_UNSPECIFIED": 0,
                                "UNIT_LINEAR_SCALE": 1,
                                "UNIT_LOG_SCALE": 2,
                                "UNIT_REVERSE_LOG_SCALE": 3
                              }
                            }
                          }
                        },
                        "DecayCurveAutomatedStoppingSpec": {
                          "fields": {
                            "useElapsedDuration": {
                              "type": "bool",
                              "id": 1
                            }
                          }
                        },
                        "MedianAutomatedStoppingSpec": {
                          "fields": {
                            "useElapsedDuration": {
                              "type": "bool",
                              "id": 1
                            }
                          }
                        },
                        "ConvexAutomatedStoppingSpec": {
                          "oneofs": {
                            "_updateAllStoppedTrials": {
                              "oneof": [
                                "updateAllStoppedTrials"
                              ]
                            }
                          },
                          "fields": {
                            "maxStepCount": {
                              "type": "int64",
                              "id": 1
                            },
                            "minStepCount": {
                              "type": "int64",
                              "id": 2
                            },
                            "minMeasurementCount": {
                              "type": "int64",
                              "id": 3
                            },
                            "learningRateParameterName": {
                              "type": "string",
                              "id": 4
                            },
                            "useElapsedDuration": {
                              "type": "bool",
                              "id": 5
                            },
                            "updateAllStoppedTrials": {
                              "type": "bool",
                              "id": 6,
                              "options": {
                                "proto3_optional": true
                              }
                            }
                          }
                        },
                        "ConvexStopConfig": {
                          "options": {
                            "deprecated": true
                          },
                          "fields": {
                            "maxNumSteps": {
                              "type": "int64",
                              "id": 1
                            },
                            "minNumSteps": {
                              "type": "int64",
                              "id": 2
                            },
                            "autoregressiveOrder": {
                              "type": "int64",
                              "id": 3
                            },
                            "learningRateParameterName": {
                              "type": "string",
                              "id": 4
                            },
                            "useSeconds": {
                              "type": "bool",
                              "id": 5
                            }
                          }
                        },
                        "TransferLearningConfig": {
                          "fields": {
                            "disableTransferLearning": {
                              "type": "bool",
                              "id": 1
                            },
                            "priorStudyNames": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        },
                        "StudyStoppingConfig": {
                          "fields": {
                            "shouldStopAsap": {
                              "type": "google.protobuf.BoolValue",
                              "id": 1
                            },
                            "minimumRuntimeConstraint": {
                              "type": "StudyTimeConstraint",
                              "id": 2
                            },
                            "maximumRuntimeConstraint": {
                              "type": "StudyTimeConstraint",
                              "id": 3
                            },
                            "minNumTrials": {
                              "type": "google.protobuf.Int32Value",
                              "id": 4
                            },
                            "maxNumTrials": {
                              "type": "google.protobuf.Int32Value",
                              "id": 5
                            },
                            "maxNumTrialsNoProgress": {
                              "type": "google.protobuf.Int32Value",
                              "id": 6
                            },
                            "maxDurationNoProgress": {
                              "type": "google.protobuf.Duration",
                              "id": 7
                            }
                          }
                        },
                        "Algorithm": {
                          "values": {
                            "ALGORITHM_UNSPECIFIED": 0,
                            "GRID_SEARCH": 2,
                            "RANDOM_SEARCH": 3
                          }
                        },
                        "ObservationNoise": {
                          "values": {
                            "OBSERVATION_NOISE_UNSPECIFIED": 0,
                            "LOW": 1,
                            "HIGH": 2
                          }
                        },
                        "MeasurementSelectionType": {
                          "values": {
                            "MEASUREMENT_SELECTION_TYPE_UNSPECIFIED": 0,
                            "LAST_MEASUREMENT": 1,
                            "BEST_MEASUREMENT": 2
                          }
                        }
                      }
                    },
                    "Measurement": {
                      "fields": {
                        "elapsedDuration": {
                          "type": "google.protobuf.Duration",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "stepCount": {
                          "type": "int64",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "metrics": {
                          "rule": "repeated",
                          "type": "Metric",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "Metric": {
                          "fields": {
                            "metricId": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "value": {
                              "type": "double",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        }
                      }
                    },
                    "Index": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Index",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/indexes/{index}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "metadataSchemaUri": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "metadata": {
                          "type": "google.protobuf.Value",
                          "id": 6
                        },
                        "deployedIndexes": {
                          "rule": "repeated",
                          "type": "DeployedIndexRef",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 8
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 9
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "indexStats": {
                          "type": "IndexStats",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "indexUpdateMethod": {
                          "type": "IndexUpdateMethod",
                          "id": 16,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 17,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      },
                      "nested": {
                        "IndexUpdateMethod": {
                          "values": {
                            "INDEX_UPDATE_METHOD_UNSPECIFIED": 0,
                            "BATCH_UPDATE": 1,
                            "STREAM_UPDATE": 2
                          }
                        }
                      }
                    },
                    "IndexDatapoint": {
                      "fields": {
                        "datapointId": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "featureVector": {
                          "rule": "repeated",
                          "type": "float",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "restricts": {
                          "rule": "repeated",
                          "type": "Restriction",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "numericRestricts": {
                          "rule": "repeated",
                          "type": "NumericRestriction",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "crowdingTag": {
                          "type": "CrowdingTag",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "Restriction": {
                          "fields": {
                            "namespace": {
                              "type": "string",
                              "id": 1
                            },
                            "allowList": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2
                            },
                            "denyList": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "NumericRestriction": {
                          "oneofs": {
                            "Value": {
                              "oneof": [
                                "valueInt",
                                "valueFloat",
                                "valueDouble"
                              ]
                            }
                          },
                          "fields": {
                            "valueInt": {
                              "type": "int64",
                              "id": 2
                            },
                            "valueFloat": {
                              "type": "float",
                              "id": 3
                            },
                            "valueDouble": {
                              "type": "double",
                              "id": 4
                            },
                            "namespace": {
                              "type": "string",
                              "id": 1
                            },
                            "op": {
                              "type": "Operator",
                              "id": 5
                            }
                          },
                          "nested": {
                            "Operator": {
                              "values": {
                                "OPERATOR_UNSPECIFIED": 0,
                                "LESS": 1,
                                "LESS_EQUAL": 2,
                                "EQUAL": 3,
                                "GREATER_EQUAL": 4,
                                "GREATER": 5
                              }
                            }
                          }
                        },
                        "CrowdingTag": {
                          "fields": {
                            "crowdingAttribute": {
                              "type": "string",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "IndexStats": {
                      "fields": {
                        "vectorsCount": {
                          "type": "int64",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "shardsCount": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "IndexEndpoint": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/IndexEndpoint",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "deployedIndexes": {
                          "rule": "repeated",
                          "type": "DeployedIndex",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 5
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "network": {
                          "type": "string",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "enablePrivateServiceConnect": {
                          "type": "bool",
                          "id": 10,
                          "options": {
                            "deprecated": true,
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "privateServiceConnectConfig": {
                          "type": "PrivateServiceConnectConfig",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "publicEndpointEnabled": {
                          "type": "bool",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "publicEndpointDomainName": {
                          "type": "string",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 15,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "DeployedIndex": {
                      "fields": {
                        "id": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "index": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Index"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 3
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "privateEndpoints": {
                          "type": "IndexPrivateEndpoints",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "indexSyncTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "automaticResources": {
                          "type": "AutomaticResources",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "dedicatedResources": {
                          "type": "DedicatedResources",
                          "id": 16,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "enableAccessLogging": {
                          "type": "bool",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "deployedIndexAuthConfig": {
                          "type": "DeployedIndexAuthConfig",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "reservedIpRanges": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "deploymentGroup": {
                          "type": "string",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DeployedIndexAuthConfig": {
                      "fields": {
                        "authProvider": {
                          "type": "AuthProvider",
                          "id": 1
                        }
                      },
                      "nested": {
                        "AuthProvider": {
                          "fields": {
                            "audiences": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 1
                            },
                            "allowedIssuers": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "IndexPrivateEndpoints": {
                      "fields": {
                        "matchGrpcAddress": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "serviceAttachment": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "pscAutomatedEndpoints": {
                          "rule": "repeated",
                          "type": "PscAutomatedEndpoints",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "IndexEndpointService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateIndexEndpoint": {
                          "requestType": "CreateIndexEndpointRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/indexEndpoints",
                            "(google.api.http).body": "index_endpoint",
                            "(google.api.method_signature)": "parent,index_endpoint",
                            "(google.longrunning.operation_info).response_type": "IndexEndpoint",
                            "(google.longrunning.operation_info).metadata_type": "CreateIndexEndpointOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/indexEndpoints",
                                "body": "index_endpoint"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,index_endpoint"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "IndexEndpoint",
                                "metadata_type": "CreateIndexEndpointOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetIndexEndpoint": {
                          "requestType": "GetIndexEndpointRequest",
                          "responseType": "IndexEndpoint",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/indexEndpoints/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/indexEndpoints/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListIndexEndpoints": {
                          "requestType": "ListIndexEndpointsRequest",
                          "responseType": "ListIndexEndpointsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/indexEndpoints",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/indexEndpoints"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateIndexEndpoint": {
                          "requestType": "UpdateIndexEndpointRequest",
                          "responseType": "IndexEndpoint",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{index_endpoint.name=projects/*/locations/*/indexEndpoints/*}",
                            "(google.api.http).body": "index_endpoint",
                            "(google.api.method_signature)": "index_endpoint,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{index_endpoint.name=projects/*/locations/*/indexEndpoints/*}",
                                "body": "index_endpoint"
                              }
                            },
                            {
                              "(google.api.method_signature)": "index_endpoint,update_mask"
                            }
                          ]
                        },
                        "DeleteIndexEndpoint": {
                          "requestType": "DeleteIndexEndpointRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/indexEndpoints/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/indexEndpoints/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeployIndex": {
                          "requestType": "DeployIndexRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{index_endpoint=projects/*/locations/*/indexEndpoints/*}:deployIndex",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "index_endpoint,deployed_index",
                            "(google.longrunning.operation_info).response_type": "DeployIndexResponse",
                            "(google.longrunning.operation_info).metadata_type": "DeployIndexOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{index_endpoint=projects/*/locations/*/indexEndpoints/*}:deployIndex",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "index_endpoint,deployed_index"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "DeployIndexResponse",
                                "metadata_type": "DeployIndexOperationMetadata"
                              }
                            }
                          ]
                        },
                        "UndeployIndex": {
                          "requestType": "UndeployIndexRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{index_endpoint=projects/*/locations/*/indexEndpoints/*}:undeployIndex",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "index_endpoint,deployed_index_id",
                            "(google.longrunning.operation_info).response_type": "UndeployIndexResponse",
                            "(google.longrunning.operation_info).metadata_type": "UndeployIndexOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{index_endpoint=projects/*/locations/*/indexEndpoints/*}:undeployIndex",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "index_endpoint,deployed_index_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "UndeployIndexResponse",
                                "metadata_type": "UndeployIndexOperationMetadata"
                              }
                            }
                          ]
                        },
                        "MutateDeployedIndex": {
                          "requestType": "MutateDeployedIndexRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{index_endpoint=projects/*/locations/*/indexEndpoints/*}:mutateDeployedIndex",
                            "(google.api.http).body": "deployed_index",
                            "(google.api.method_signature)": "index_endpoint,deployed_index",
                            "(google.longrunning.operation_info).response_type": "MutateDeployedIndexResponse",
                            "(google.longrunning.operation_info).metadata_type": "MutateDeployedIndexOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{index_endpoint=projects/*/locations/*/indexEndpoints/*}:mutateDeployedIndex",
                                "body": "deployed_index"
                              }
                            },
                            {
                              "(google.api.method_signature)": "index_endpoint,deployed_index"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "MutateDeployedIndexResponse",
                                "metadata_type": "MutateDeployedIndexOperationMetadata"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "CreateIndexEndpointRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "indexEndpoint": {
                          "type": "IndexEndpoint",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CreateIndexEndpointOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "GetIndexEndpointRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/IndexEndpoint"
                          }
                        }
                      }
                    },
                    "ListIndexEndpointsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListIndexEndpointsResponse": {
                      "fields": {
                        "indexEndpoints": {
                          "rule": "repeated",
                          "type": "IndexEndpoint",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateIndexEndpointRequest": {
                      "fields": {
                        "indexEndpoint": {
                          "type": "IndexEndpoint",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteIndexEndpointRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/IndexEndpoint"
                          }
                        }
                      }
                    },
                    "DeployIndexRequest": {
                      "fields": {
                        "indexEndpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/IndexEndpoint"
                          }
                        },
                        "deployedIndex": {
                          "type": "DeployedIndex",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeployIndexResponse": {
                      "fields": {
                        "deployedIndex": {
                          "type": "DeployedIndex",
                          "id": 1
                        }
                      }
                    },
                    "DeployIndexOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        },
                        "deployedIndexId": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UndeployIndexRequest": {
                      "fields": {
                        "indexEndpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/IndexEndpoint"
                          }
                        },
                        "deployedIndexId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UndeployIndexResponse": {
                      "fields": {}
                    },
                    "UndeployIndexOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "MutateDeployedIndexRequest": {
                      "fields": {
                        "indexEndpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/IndexEndpoint"
                          }
                        },
                        "deployedIndex": {
                          "type": "DeployedIndex",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "MutateDeployedIndexResponse": {
                      "fields": {
                        "deployedIndex": {
                          "type": "DeployedIndex",
                          "id": 1
                        }
                      }
                    },
                    "MutateDeployedIndexOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        },
                        "deployedIndexId": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "IndexService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateIndex": {
                          "requestType": "CreateIndexRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/indexes",
                            "(google.api.http).body": "index",
                            "(google.api.method_signature)": "parent,index",
                            "(google.longrunning.operation_info).response_type": "Index",
                            "(google.longrunning.operation_info).metadata_type": "CreateIndexOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/indexes",
                                "body": "index"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,index"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Index",
                                "metadata_type": "CreateIndexOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetIndex": {
                          "requestType": "GetIndexRequest",
                          "responseType": "Index",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/indexes/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/indexes/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListIndexes": {
                          "requestType": "ListIndexesRequest",
                          "responseType": "ListIndexesResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/indexes",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/indexes"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateIndex": {
                          "requestType": "UpdateIndexRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{index.name=projects/*/locations/*/indexes/*}",
                            "(google.api.http).body": "index",
                            "(google.api.method_signature)": "index,update_mask",
                            "(google.longrunning.operation_info).response_type": "Index",
                            "(google.longrunning.operation_info).metadata_type": "UpdateIndexOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{index.name=projects/*/locations/*/indexes/*}",
                                "body": "index"
                              }
                            },
                            {
                              "(google.api.method_signature)": "index,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Index",
                                "metadata_type": "UpdateIndexOperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteIndex": {
                          "requestType": "DeleteIndexRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/indexes/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/indexes/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpsertDatapoints": {
                          "requestType": "UpsertDatapointsRequest",
                          "responseType": "UpsertDatapointsResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{index=projects/*/locations/*/indexes/*}:upsertDatapoints",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{index=projects/*/locations/*/indexes/*}:upsertDatapoints",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "RemoveDatapoints": {
                          "requestType": "RemoveDatapointsRequest",
                          "responseType": "RemoveDatapointsResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{index=projects/*/locations/*/indexes/*}:removeDatapoints",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{index=projects/*/locations/*/indexes/*}:removeDatapoints",
                                "body": "*"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "CreateIndexRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "index": {
                          "type": "Index",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CreateIndexOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        },
                        "nearestNeighborSearchOperationMetadata": {
                          "type": "NearestNeighborSearchOperationMetadata",
                          "id": 2
                        }
                      }
                    },
                    "GetIndexRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Index"
                          }
                        }
                      }
                    },
                    "ListIndexesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListIndexesResponse": {
                      "fields": {
                        "indexes": {
                          "rule": "repeated",
                          "type": "Index",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateIndexRequest": {
                      "fields": {
                        "index": {
                          "type": "Index",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "UpdateIndexOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        },
                        "nearestNeighborSearchOperationMetadata": {
                          "type": "NearestNeighborSearchOperationMetadata",
                          "id": 2
                        }
                      }
                    },
                    "DeleteIndexRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Index"
                          }
                        }
                      }
                    },
                    "UpsertDatapointsRequest": {
                      "fields": {
                        "index": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Index"
                          }
                        },
                        "datapoints": {
                          "rule": "repeated",
                          "type": "IndexDatapoint",
                          "id": 2
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "UpsertDatapointsResponse": {
                      "fields": {}
                    },
                    "RemoveDatapointsRequest": {
                      "fields": {
                        "index": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Index"
                          }
                        },
                        "datapointIds": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "RemoveDatapointsResponse": {
                      "fields": {}
                    },
                    "NearestNeighborSearchOperationMetadata": {
                      "fields": {
                        "contentValidationStats": {
                          "rule": "repeated",
                          "type": "ContentValidationStats",
                          "id": 1
                        },
                        "dataBytesCount": {
                          "type": "int64",
                          "id": 2
                        }
                      },
                      "nested": {
                        "RecordError": {
                          "fields": {
                            "errorType": {
                              "type": "RecordErrorType",
                              "id": 1
                            },
                            "errorMessage": {
                              "type": "string",
                              "id": 2
                            },
                            "sourceGcsUri": {
                              "type": "string",
                              "id": 3
                            },
                            "embeddingId": {
                              "type": "string",
                              "id": 4
                            },
                            "rawRecord": {
                              "type": "string",
                              "id": 5
                            }
                          },
                          "nested": {
                            "RecordErrorType": {
                              "values": {
                                "ERROR_TYPE_UNSPECIFIED": 0,
                                "EMPTY_LINE": 1,
                                "INVALID_JSON_SYNTAX": 2,
                                "INVALID_CSV_SYNTAX": 3,
                                "INVALID_AVRO_SYNTAX": 4,
                                "INVALID_EMBEDDING_ID": 5,
                                "EMBEDDING_SIZE_MISMATCH": 6,
                                "NAMESPACE_MISSING": 7,
                                "PARSING_ERROR": 8,
                                "DUPLICATE_NAMESPACE": 9,
                                "OP_IN_DATAPOINT": 10,
                                "MULTIPLE_VALUES": 11,
                                "INVALID_NUMERIC_VALUE": 12,
                                "INVALID_ENCODING": 13
                              }
                            }
                          }
                        },
                        "ContentValidationStats": {
                          "fields": {
                            "sourceGcsUri": {
                              "type": "string",
                              "id": 1
                            },
                            "validRecordCount": {
                              "type": "int64",
                              "id": 2
                            },
                            "invalidRecordCount": {
                              "type": "int64",
                              "id": 3
                            },
                            "partialErrors": {
                              "rule": "repeated",
                              "type": "RecordError",
                              "id": 4
                            }
                          }
                        }
                      }
                    },
                    "JobService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/cloud-platform.read-only"
                      },
                      "methods": {
                        "CreateCustomJob": {
                          "requestType": "CreateCustomJobRequest",
                          "responseType": "CustomJob",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/customJobs",
                            "(google.api.http).body": "custom_job",
                            "(google.api.method_signature)": "parent,custom_job"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/customJobs",
                                "body": "custom_job"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,custom_job"
                            }
                          ]
                        },
                        "GetCustomJob": {
                          "requestType": "GetCustomJobRequest",
                          "responseType": "CustomJob",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/customJobs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/customJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListCustomJobs": {
                          "requestType": "ListCustomJobsRequest",
                          "responseType": "ListCustomJobsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/customJobs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/customJobs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteCustomJob": {
                          "requestType": "DeleteCustomJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/customJobs/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/customJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CancelCustomJob": {
                          "requestType": "CancelCustomJobRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{name=projects/*/locations/*/customJobs/*}:cancel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{name=projects/*/locations/*/customJobs/*}:cancel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateDataLabelingJob": {
                          "requestType": "CreateDataLabelingJobRequest",
                          "responseType": "DataLabelingJob",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/dataLabelingJobs",
                            "(google.api.http).body": "data_labeling_job",
                            "(google.api.method_signature)": "parent,data_labeling_job"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/dataLabelingJobs",
                                "body": "data_labeling_job"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,data_labeling_job"
                            }
                          ]
                        },
                        "GetDataLabelingJob": {
                          "requestType": "GetDataLabelingJobRequest",
                          "responseType": "DataLabelingJob",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/dataLabelingJobs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/dataLabelingJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListDataLabelingJobs": {
                          "requestType": "ListDataLabelingJobsRequest",
                          "responseType": "ListDataLabelingJobsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/dataLabelingJobs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/dataLabelingJobs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteDataLabelingJob": {
                          "requestType": "DeleteDataLabelingJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/dataLabelingJobs/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/dataLabelingJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CancelDataLabelingJob": {
                          "requestType": "CancelDataLabelingJobRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{name=projects/*/locations/*/dataLabelingJobs/*}:cancel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{name=projects/*/locations/*/dataLabelingJobs/*}:cancel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateHyperparameterTuningJob": {
                          "requestType": "CreateHyperparameterTuningJobRequest",
                          "responseType": "HyperparameterTuningJob",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/hyperparameterTuningJobs",
                            "(google.api.http).body": "hyperparameter_tuning_job",
                            "(google.api.method_signature)": "parent,hyperparameter_tuning_job"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/hyperparameterTuningJobs",
                                "body": "hyperparameter_tuning_job"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,hyperparameter_tuning_job"
                            }
                          ]
                        },
                        "GetHyperparameterTuningJob": {
                          "requestType": "GetHyperparameterTuningJobRequest",
                          "responseType": "HyperparameterTuningJob",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/hyperparameterTuningJobs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/hyperparameterTuningJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListHyperparameterTuningJobs": {
                          "requestType": "ListHyperparameterTuningJobsRequest",
                          "responseType": "ListHyperparameterTuningJobsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/hyperparameterTuningJobs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/hyperparameterTuningJobs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteHyperparameterTuningJob": {
                          "requestType": "DeleteHyperparameterTuningJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/hyperparameterTuningJobs/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/hyperparameterTuningJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CancelHyperparameterTuningJob": {
                          "requestType": "CancelHyperparameterTuningJobRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{name=projects/*/locations/*/hyperparameterTuningJobs/*}:cancel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{name=projects/*/locations/*/hyperparameterTuningJobs/*}:cancel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateNasJob": {
                          "requestType": "CreateNasJobRequest",
                          "responseType": "NasJob",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/nasJobs",
                            "(google.api.http).body": "nas_job",
                            "(google.api.method_signature)": "parent,nas_job"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/nasJobs",
                                "body": "nas_job"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,nas_job"
                            }
                          ]
                        },
                        "GetNasJob": {
                          "requestType": "GetNasJobRequest",
                          "responseType": "NasJob",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/nasJobs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/nasJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListNasJobs": {
                          "requestType": "ListNasJobsRequest",
                          "responseType": "ListNasJobsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/nasJobs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/nasJobs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteNasJob": {
                          "requestType": "DeleteNasJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/nasJobs/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/nasJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CancelNasJob": {
                          "requestType": "CancelNasJobRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{name=projects/*/locations/*/nasJobs/*}:cancel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{name=projects/*/locations/*/nasJobs/*}:cancel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "GetNasTrialDetail": {
                          "requestType": "GetNasTrialDetailRequest",
                          "responseType": "NasTrialDetail",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/nasJobs/*/nasTrialDetails/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/nasJobs/*/nasTrialDetails/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListNasTrialDetails": {
                          "requestType": "ListNasTrialDetailsRequest",
                          "responseType": "ListNasTrialDetailsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*/nasJobs/*}/nasTrialDetails",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*/nasJobs/*}/nasTrialDetails"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "CreateBatchPredictionJob": {
                          "requestType": "CreateBatchPredictionJobRequest",
                          "responseType": "BatchPredictionJob",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/batchPredictionJobs",
                            "(google.api.http).body": "batch_prediction_job",
                            "(google.api.method_signature)": "parent,batch_prediction_job"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/batchPredictionJobs",
                                "body": "batch_prediction_job"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,batch_prediction_job"
                            }
                          ]
                        },
                        "GetBatchPredictionJob": {
                          "requestType": "GetBatchPredictionJobRequest",
                          "responseType": "BatchPredictionJob",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/batchPredictionJobs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/batchPredictionJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListBatchPredictionJobs": {
                          "requestType": "ListBatchPredictionJobsRequest",
                          "responseType": "ListBatchPredictionJobsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/batchPredictionJobs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/batchPredictionJobs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteBatchPredictionJob": {
                          "requestType": "DeleteBatchPredictionJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/batchPredictionJobs/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/batchPredictionJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CancelBatchPredictionJob": {
                          "requestType": "CancelBatchPredictionJobRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{name=projects/*/locations/*/batchPredictionJobs/*}:cancel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{name=projects/*/locations/*/batchPredictionJobs/*}:cancel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateModelDeploymentMonitoringJob": {
                          "requestType": "CreateModelDeploymentMonitoringJobRequest",
                          "responseType": "ModelDeploymentMonitoringJob",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/modelDeploymentMonitoringJobs",
                            "(google.api.http).body": "model_deployment_monitoring_job",
                            "(google.api.method_signature)": "parent,model_deployment_monitoring_job"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/modelDeploymentMonitoringJobs",
                                "body": "model_deployment_monitoring_job"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,model_deployment_monitoring_job"
                            }
                          ]
                        },
                        "SearchModelDeploymentMonitoringStatsAnomalies": {
                          "requestType": "SearchModelDeploymentMonitoringStatsAnomaliesRequest",
                          "responseType": "SearchModelDeploymentMonitoringStatsAnomaliesResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{model_deployment_monitoring_job=projects/*/locations/*/modelDeploymentMonitoringJobs/*}:searchModelDeploymentMonitoringStatsAnomalies",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "model_deployment_monitoring_job,deployed_model_id"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{model_deployment_monitoring_job=projects/*/locations/*/modelDeploymentMonitoringJobs/*}:searchModelDeploymentMonitoringStatsAnomalies",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "model_deployment_monitoring_job,deployed_model_id"
                            }
                          ]
                        },
                        "GetModelDeploymentMonitoringJob": {
                          "requestType": "GetModelDeploymentMonitoringJobRequest",
                          "responseType": "ModelDeploymentMonitoringJob",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListModelDeploymentMonitoringJobs": {
                          "requestType": "ListModelDeploymentMonitoringJobsRequest",
                          "responseType": "ListModelDeploymentMonitoringJobsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/modelDeploymentMonitoringJobs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/modelDeploymentMonitoringJobs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateModelDeploymentMonitoringJob": {
                          "requestType": "UpdateModelDeploymentMonitoringJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{model_deployment_monitoring_job.name=projects/*/locations/*/modelDeploymentMonitoringJobs/*}",
                            "(google.api.http).body": "model_deployment_monitoring_job",
                            "(google.api.method_signature)": "model_deployment_monitoring_job,update_mask",
                            "(google.longrunning.operation_info).response_type": "ModelDeploymentMonitoringJob",
                            "(google.longrunning.operation_info).metadata_type": "UpdateModelDeploymentMonitoringJobOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{model_deployment_monitoring_job.name=projects/*/locations/*/modelDeploymentMonitoringJobs/*}",
                                "body": "model_deployment_monitoring_job"
                              }
                            },
                            {
                              "(google.api.method_signature)": "model_deployment_monitoring_job,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ModelDeploymentMonitoringJob",
                                "metadata_type": "UpdateModelDeploymentMonitoringJobOperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteModelDeploymentMonitoringJob": {
                          "requestType": "DeleteModelDeploymentMonitoringJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "PauseModelDeploymentMonitoringJob": {
                          "requestType": "PauseModelDeploymentMonitoringJobRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*}:pause",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*}:pause",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ResumeModelDeploymentMonitoringJob": {
                          "requestType": "ResumeModelDeploymentMonitoringJobRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*}:resume",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*}:resume",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        }
                      }
                    },
                    "CreateCustomJobRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "customJob": {
                          "type": "CustomJob",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetCustomJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/CustomJob"
                          }
                        }
                      }
                    },
                    "ListCustomJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListCustomJobsResponse": {
                      "fields": {
                        "customJobs": {
                          "rule": "repeated",
                          "type": "CustomJob",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteCustomJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/CustomJob"
                          }
                        }
                      }
                    },
                    "CancelCustomJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/CustomJob"
                          }
                        }
                      }
                    },
                    "CreateDataLabelingJobRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "dataLabelingJob": {
                          "type": "DataLabelingJob",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetDataLabelingJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/DataLabelingJob"
                          }
                        }
                      }
                    },
                    "ListDataLabelingJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 6
                        }
                      }
                    },
                    "ListDataLabelingJobsResponse": {
                      "fields": {
                        "dataLabelingJobs": {
                          "rule": "repeated",
                          "type": "DataLabelingJob",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteDataLabelingJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/DataLabelingJob"
                          }
                        }
                      }
                    },
                    "CancelDataLabelingJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/DataLabelingJob"
                          }
                        }
                      }
                    },
                    "CreateHyperparameterTuningJobRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "hyperparameterTuningJob": {
                          "type": "HyperparameterTuningJob",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetHyperparameterTuningJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/HyperparameterTuningJob"
                          }
                        }
                      }
                    },
                    "ListHyperparameterTuningJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListHyperparameterTuningJobsResponse": {
                      "fields": {
                        "hyperparameterTuningJobs": {
                          "rule": "repeated",
                          "type": "HyperparameterTuningJob",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteHyperparameterTuningJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/HyperparameterTuningJob"
                          }
                        }
                      }
                    },
                    "CancelHyperparameterTuningJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/HyperparameterTuningJob"
                          }
                        }
                      }
                    },
                    "CreateNasJobRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "nasJob": {
                          "type": "NasJob",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetNasJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/NasJob"
                          }
                        }
                      }
                    },
                    "ListNasJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListNasJobsResponse": {
                      "fields": {
                        "nasJobs": {
                          "rule": "repeated",
                          "type": "NasJob",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteNasJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/NasJob"
                          }
                        }
                      }
                    },
                    "CancelNasJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/NasJob"
                          }
                        }
                      }
                    },
                    "GetNasTrialDetailRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/NasTrialDetail"
                          }
                        }
                      }
                    },
                    "ListNasTrialDetailsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/NasJob"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListNasTrialDetailsResponse": {
                      "fields": {
                        "nasTrialDetails": {
                          "rule": "repeated",
                          "type": "NasTrialDetail",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "CreateBatchPredictionJobRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "batchPredictionJob": {
                          "type": "BatchPredictionJob",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetBatchPredictionJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/BatchPredictionJob"
                          }
                        }
                      }
                    },
                    "ListBatchPredictionJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListBatchPredictionJobsResponse": {
                      "fields": {
                        "batchPredictionJobs": {
                          "rule": "repeated",
                          "type": "BatchPredictionJob",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteBatchPredictionJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/BatchPredictionJob"
                          }
                        }
                      }
                    },
                    "CancelBatchPredictionJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/BatchPredictionJob"
                          }
                        }
                      }
                    },
                    "CreateModelDeploymentMonitoringJobRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "modelDeploymentMonitoringJob": {
                          "type": "ModelDeploymentMonitoringJob",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "SearchModelDeploymentMonitoringStatsAnomaliesRequest": {
                      "fields": {
                        "modelDeploymentMonitoringJob": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/ModelDeploymentMonitoringJob"
                          }
                        },
                        "deployedModelId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "featureDisplayName": {
                          "type": "string",
                          "id": 3
                        },
                        "objectives": {
                          "rule": "repeated",
                          "type": "StatsAnomaliesObjective",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 5
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 6
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8
                        }
                      },
                      "nested": {
                        "StatsAnomaliesObjective": {
                          "fields": {
                            "type": {
                              "type": "ModelDeploymentMonitoringObjectiveType",
                              "id": 1
                            },
                            "topFeatureCount": {
                              "type": "int32",
                              "id": 4
                            }
                          }
                        }
                      }
                    },
                    "SearchModelDeploymentMonitoringStatsAnomaliesResponse": {
                      "fields": {
                        "monitoringStats": {
                          "rule": "repeated",
                          "type": "ModelMonitoringStatsAnomalies",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetModelDeploymentMonitoringJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/ModelDeploymentMonitoringJob"
                          }
                        }
                      }
                    },
                    "ListModelDeploymentMonitoringJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListModelDeploymentMonitoringJobsResponse": {
                      "fields": {
                        "modelDeploymentMonitoringJobs": {
                          "rule": "repeated",
                          "type": "ModelDeploymentMonitoringJob",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateModelDeploymentMonitoringJobRequest": {
                      "fields": {
                        "modelDeploymentMonitoringJob": {
                          "type": "ModelDeploymentMonitoringJob",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteModelDeploymentMonitoringJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/ModelDeploymentMonitoringJob"
                          }
                        }
                      }
                    },
                    "PauseModelDeploymentMonitoringJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/ModelDeploymentMonitoringJob"
                          }
                        }
                      }
                    },
                    "ResumeModelDeploymentMonitoringJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/ModelDeploymentMonitoringJob"
                          }
                        }
                      }
                    },
                    "UpdateModelDeploymentMonitoringJobOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "NasJob": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/NasJob",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/nasJobs/{nas_job}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "nasJobSpec": {
                          "type": "NasJobSpec",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "nasJobOutput": {
                          "type": "NasJobOutput",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "JobState",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 12
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 13
                        },
                        "enableRestrictedImageTraining": {
                          "type": "bool",
                          "id": 14,
                          "options": {
                            "deprecated": true,
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "NasTrialDetail": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/NasTrialDetail",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/nasJobs/{nas_job}/nasTrialDetails/{nas_trial_detail}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "parameters": {
                          "type": "string",
                          "id": 2
                        },
                        "searchTrial": {
                          "type": "NasTrial",
                          "id": 3
                        },
                        "trainTrial": {
                          "type": "NasTrial",
                          "id": 4
                        }
                      }
                    },
                    "NasJobSpec": {
                      "oneofs": {
                        "nasAlgorithmSpec": {
                          "oneof": [
                            "multiTrialAlgorithmSpec"
                          ]
                        }
                      },
                      "fields": {
                        "multiTrialAlgorithmSpec": {
                          "type": "MultiTrialAlgorithmSpec",
                          "id": 2
                        },
                        "resumeNasJobId": {
                          "type": "string",
                          "id": 3
                        },
                        "searchSpaceSpec": {
                          "type": "string",
                          "id": 1
                        }
                      },
                      "nested": {
                        "MultiTrialAlgorithmSpec": {
                          "fields": {
                            "multiTrialAlgorithm": {
                              "type": "MultiTrialAlgorithm",
                              "id": 1
                            },
                            "metric": {
                              "type": "MetricSpec",
                              "id": 2
                            },
                            "searchTrialSpec": {
                              "type": "SearchTrialSpec",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "trainTrialSpec": {
                              "type": "TrainTrialSpec",
                              "id": 4
                            }
                          },
                          "nested": {
                            "MetricSpec": {
                              "fields": {
                                "metricId": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "goal": {
                                  "type": "GoalType",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              },
                              "nested": {
                                "GoalType": {
                                  "values": {
                                    "GOAL_TYPE_UNSPECIFIED": 0,
                                    "MAXIMIZE": 1,
                                    "MINIMIZE": 2
                                  }
                                }
                              }
                            },
                            "SearchTrialSpec": {
                              "fields": {
                                "searchTrialJobSpec": {
                                  "type": "CustomJobSpec",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "maxTrialCount": {
                                  "type": "int32",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "maxParallelTrialCount": {
                                  "type": "int32",
                                  "id": 3,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "maxFailedTrialCount": {
                                  "type": "int32",
                                  "id": 4
                                }
                              }
                            },
                            "TrainTrialSpec": {
                              "fields": {
                                "trainTrialJobSpec": {
                                  "type": "CustomJobSpec",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "maxParallelTrialCount": {
                                  "type": "int32",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "frequency": {
                                  "type": "int32",
                                  "id": 3,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              }
                            },
                            "MultiTrialAlgorithm": {
                              "values": {
                                "MULTI_TRIAL_ALGORITHM_UNSPECIFIED": 0,
                                "REINFORCEMENT_LEARNING": 1,
                                "GRID_SEARCH": 2
                              }
                            }
                          }
                        }
                      }
                    },
                    "NasJobOutput": {
                      "oneofs": {
                        "output": {
                          "oneof": [
                            "multiTrialJobOutput"
                          ]
                        }
                      },
                      "fields": {
                        "multiTrialJobOutput": {
                          "type": "MultiTrialJobOutput",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "MultiTrialJobOutput": {
                          "fields": {
                            "searchTrials": {
                              "rule": "repeated",
                              "type": "NasTrial",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "trainTrials": {
                              "rule": "repeated",
                              "type": "NasTrial",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        }
                      }
                    },
                    "NasTrial": {
                      "fields": {
                        "id": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "finalMeasurement": {
                          "type": "Measurement",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "REQUESTED": 1,
                            "ACTIVE": 2,
                            "STOPPING": 3,
                            "SUCCEEDED": 4,
                            "INFEASIBLE": 5
                          }
                        }
                      }
                    },
                    "LineageSubgraph": {
                      "fields": {
                        "artifacts": {
                          "rule": "repeated",
                          "type": "Artifact",
                          "id": 1
                        },
                        "executions": {
                          "rule": "repeated",
                          "type": "Execution",
                          "id": 2
                        },
                        "events": {
                          "rule": "repeated",
                          "type": "Event",
                          "id": 3
                        }
                      }
                    },
                    "LlmUtilityService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "ComputeTokens": {
                          "requestType": "ComputeTokensRequest",
                          "responseType": "ComputeTokensResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{endpoint=projects/*/locations/*/endpoints/*}:computeTokens",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1beta1/{endpoint=projects/*/locations/*/publishers/*/models/*}:computeTokens",
                            "(google.api.http).additional_bindings.body": "*",
                            "(google.api.method_signature)": "endpoint,instances"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{endpoint=projects/*/locations/*/endpoints/*}:computeTokens",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v1beta1/{endpoint=projects/*/locations/*/publishers/*/models/*}:computeTokens",
                                  "body": "*"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "endpoint,instances"
                            }
                          ]
                        }
                      }
                    },
                    "ComputeTokensRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "instances": {
                          "rule": "repeated",
                          "type": "google.protobuf.Value",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "TokensInfo": {
                      "fields": {
                        "tokens": {
                          "rule": "repeated",
                          "type": "bytes",
                          "id": 1
                        },
                        "tokenIds": {
                          "rule": "repeated",
                          "type": "int64",
                          "id": 2
                        }
                      }
                    },
                    "ComputeTokensResponse": {
                      "fields": {
                        "tokensInfo": {
                          "rule": "repeated",
                          "type": "TokensInfo",
                          "id": 1
                        }
                      }
                    },
                    "MatchService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "FindNeighbors": {
                          "requestType": "FindNeighborsRequest",
                          "responseType": "FindNeighborsResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{index_endpoint=projects/*/locations/*/indexEndpoints/*}:findNeighbors",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{index_endpoint=projects/*/locations/*/indexEndpoints/*}:findNeighbors",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "ReadIndexDatapoints": {
                          "requestType": "ReadIndexDatapointsRequest",
                          "responseType": "ReadIndexDatapointsResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{index_endpoint=projects/*/locations/*/indexEndpoints/*}:readIndexDatapoints",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{index_endpoint=projects/*/locations/*/indexEndpoints/*}:readIndexDatapoints",
                                "body": "*"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "FindNeighborsRequest": {
                      "fields": {
                        "indexEndpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/IndexEndpoint"
                          }
                        },
                        "deployedIndexId": {
                          "type": "string",
                          "id": 2
                        },
                        "queries": {
                          "rule": "repeated",
                          "type": "Query",
                          "id": 3
                        },
                        "returnFullDatapoint": {
                          "type": "bool",
                          "id": 4
                        }
                      },
                      "nested": {
                        "Query": {
                          "fields": {
                            "datapoint": {
                              "type": "IndexDatapoint",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "neighborCount": {
                              "type": "int32",
                              "id": 2
                            },
                            "perCrowdingAttributeNeighborCount": {
                              "type": "int32",
                              "id": 3
                            },
                            "approximateNeighborCount": {
                              "type": "int32",
                              "id": 4
                            },
                            "fractionLeafNodesToSearchOverride": {
                              "type": "double",
                              "id": 5
                            }
                          }
                        }
                      }
                    },
                    "FindNeighborsResponse": {
                      "fields": {
                        "nearestNeighbors": {
                          "rule": "repeated",
                          "type": "NearestNeighbors",
                          "id": 1
                        }
                      },
                      "nested": {
                        "Neighbor": {
                          "fields": {
                            "datapoint": {
                              "type": "IndexDatapoint",
                              "id": 1
                            },
                            "distance": {
                              "type": "double",
                              "id": 2
                            }
                          }
                        },
                        "NearestNeighbors": {
                          "fields": {
                            "id": {
                              "type": "string",
                              "id": 1
                            },
                            "neighbors": {
                              "rule": "repeated",
                              "type": "Neighbor",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "ReadIndexDatapointsRequest": {
                      "fields": {
                        "indexEndpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/IndexEndpoint"
                          }
                        },
                        "deployedIndexId": {
                          "type": "string",
                          "id": 2
                        },
                        "ids": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ReadIndexDatapointsResponse": {
                      "fields": {
                        "datapoints": {
                          "rule": "repeated",
                          "type": "IndexDatapoint",
                          "id": 1
                        }
                      }
                    },
                    "MetadataSchema": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/MetadataSchema",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/metadataStores/{metadata_store}/metadataSchemas/{metadata_schema}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "schemaVersion": {
                          "type": "string",
                          "id": 2
                        },
                        "schema": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "schemaType": {
                          "type": "MetadataSchemaType",
                          "id": 4
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 6
                        }
                      },
                      "nested": {
                        "MetadataSchemaType": {
                          "values": {
                            "METADATA_SCHEMA_TYPE_UNSPECIFIED": 0,
                            "ARTIFACT_TYPE": 1,
                            "EXECUTION_TYPE": 2,
                            "CONTEXT_TYPE": 3
                          }
                        }
                      }
                    },
                    "MetadataService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateMetadataStore": {
                          "requestType": "CreateMetadataStoreRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/metadataStores",
                            "(google.api.http).body": "metadata_store",
                            "(google.api.method_signature)": "parent,metadata_store,metadata_store_id",
                            "(google.longrunning.operation_info).response_type": "MetadataStore",
                            "(google.longrunning.operation_info).metadata_type": "CreateMetadataStoreOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/metadataStores",
                                "body": "metadata_store"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,metadata_store,metadata_store_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "MetadataStore",
                                "metadata_type": "CreateMetadataStoreOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetMetadataStore": {
                          "requestType": "GetMetadataStoreRequest",
                          "responseType": "MetadataStore",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/metadataStores/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/metadataStores/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListMetadataStores": {
                          "requestType": "ListMetadataStoresRequest",
                          "responseType": "ListMetadataStoresResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/metadataStores",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/metadataStores"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteMetadataStore": {
                          "requestType": "DeleteMetadataStoreRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/metadataStores/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteMetadataStoreOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/metadataStores/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteMetadataStoreOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CreateArtifact": {
                          "requestType": "CreateArtifactRequest",
                          "responseType": "Artifact",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/metadataStores/*}/artifacts",
                            "(google.api.http).body": "artifact",
                            "(google.api.method_signature)": "parent,artifact,artifact_id"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/metadataStores/*}/artifacts",
                                "body": "artifact"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,artifact,artifact_id"
                            }
                          ]
                        },
                        "GetArtifact": {
                          "requestType": "GetArtifactRequest",
                          "responseType": "Artifact",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/metadataStores/*/artifacts/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/metadataStores/*/artifacts/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListArtifacts": {
                          "requestType": "ListArtifactsRequest",
                          "responseType": "ListArtifactsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*/metadataStores/*}/artifacts",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*/metadataStores/*}/artifacts"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateArtifact": {
                          "requestType": "UpdateArtifactRequest",
                          "responseType": "Artifact",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{artifact.name=projects/*/locations/*/metadataStores/*/artifacts/*}",
                            "(google.api.http).body": "artifact",
                            "(google.api.method_signature)": "artifact,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{artifact.name=projects/*/locations/*/metadataStores/*/artifacts/*}",
                                "body": "artifact"
                              }
                            },
                            {
                              "(google.api.method_signature)": "artifact,update_mask"
                            }
                          ]
                        },
                        "DeleteArtifact": {
                          "requestType": "DeleteArtifactRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/metadataStores/*/artifacts/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/metadataStores/*/artifacts/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "PurgeArtifacts": {
                          "requestType": "PurgeArtifactsRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/metadataStores/*}/artifacts:purge",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent",
                            "(google.longrunning.operation_info).response_type": "PurgeArtifactsResponse",
                            "(google.longrunning.operation_info).metadata_type": "PurgeArtifactsMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/metadataStores/*}/artifacts:purge",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "PurgeArtifactsResponse",
                                "metadata_type": "PurgeArtifactsMetadata"
                              }
                            }
                          ]
                        },
                        "CreateContext": {
                          "requestType": "CreateContextRequest",
                          "responseType": "Context",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/metadataStores/*}/contexts",
                            "(google.api.http).body": "context",
                            "(google.api.method_signature)": "parent,context,context_id"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/metadataStores/*}/contexts",
                                "body": "context"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,context,context_id"
                            }
                          ]
                        },
                        "GetContext": {
                          "requestType": "GetContextRequest",
                          "responseType": "Context",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/metadataStores/*/contexts/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/metadataStores/*/contexts/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListContexts": {
                          "requestType": "ListContextsRequest",
                          "responseType": "ListContextsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*/metadataStores/*}/contexts",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*/metadataStores/*}/contexts"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateContext": {
                          "requestType": "UpdateContextRequest",
                          "responseType": "Context",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{context.name=projects/*/locations/*/metadataStores/*/contexts/*}",
                            "(google.api.http).body": "context",
                            "(google.api.method_signature)": "context,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{context.name=projects/*/locations/*/metadataStores/*/contexts/*}",
                                "body": "context"
                              }
                            },
                            {
                              "(google.api.method_signature)": "context,update_mask"
                            }
                          ]
                        },
                        "DeleteContext": {
                          "requestType": "DeleteContextRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/metadataStores/*/contexts/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/metadataStores/*/contexts/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "PurgeContexts": {
                          "requestType": "PurgeContextsRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/metadataStores/*}/contexts:purge",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent",
                            "(google.longrunning.operation_info).response_type": "PurgeContextsResponse",
                            "(google.longrunning.operation_info).metadata_type": "PurgeContextsMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/metadataStores/*}/contexts:purge",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "PurgeContextsResponse",
                                "metadata_type": "PurgeContextsMetadata"
                              }
                            }
                          ]
                        },
                        "AddContextArtifactsAndExecutions": {
                          "requestType": "AddContextArtifactsAndExecutionsRequest",
                          "responseType": "AddContextArtifactsAndExecutionsResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{context=projects/*/locations/*/metadataStores/*/contexts/*}:addContextArtifactsAndExecutions",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "context,artifacts,executions"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{context=projects/*/locations/*/metadataStores/*/contexts/*}:addContextArtifactsAndExecutions",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "context,artifacts,executions"
                            }
                          ]
                        },
                        "AddContextChildren": {
                          "requestType": "AddContextChildrenRequest",
                          "responseType": "AddContextChildrenResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{context=projects/*/locations/*/metadataStores/*/contexts/*}:addContextChildren",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "context,child_contexts"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{context=projects/*/locations/*/metadataStores/*/contexts/*}:addContextChildren",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "context,child_contexts"
                            }
                          ]
                        },
                        "RemoveContextChildren": {
                          "requestType": "RemoveContextChildrenRequest",
                          "responseType": "RemoveContextChildrenResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{context=projects/*/locations/*/metadataStores/*/contexts/*}:removeContextChildren",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "context,child_contexts"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{context=projects/*/locations/*/metadataStores/*/contexts/*}:removeContextChildren",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "context,child_contexts"
                            }
                          ]
                        },
                        "QueryContextLineageSubgraph": {
                          "requestType": "QueryContextLineageSubgraphRequest",
                          "responseType": "LineageSubgraph",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{context=projects/*/locations/*/metadataStores/*/contexts/*}:queryContextLineageSubgraph",
                            "(google.api.method_signature)": "context"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{context=projects/*/locations/*/metadataStores/*/contexts/*}:queryContextLineageSubgraph"
                              }
                            },
                            {
                              "(google.api.method_signature)": "context"
                            }
                          ]
                        },
                        "CreateExecution": {
                          "requestType": "CreateExecutionRequest",
                          "responseType": "Execution",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/metadataStores/*}/executions",
                            "(google.api.http).body": "execution",
                            "(google.api.method_signature)": "parent,execution,execution_id"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/metadataStores/*}/executions",
                                "body": "execution"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,execution,execution_id"
                            }
                          ]
                        },
                        "GetExecution": {
                          "requestType": "GetExecutionRequest",
                          "responseType": "Execution",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/metadataStores/*/executions/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/metadataStores/*/executions/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListExecutions": {
                          "requestType": "ListExecutionsRequest",
                          "responseType": "ListExecutionsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*/metadataStores/*}/executions",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*/metadataStores/*}/executions"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateExecution": {
                          "requestType": "UpdateExecutionRequest",
                          "responseType": "Execution",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{execution.name=projects/*/locations/*/metadataStores/*/executions/*}",
                            "(google.api.http).body": "execution",
                            "(google.api.method_signature)": "execution,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{execution.name=projects/*/locations/*/metadataStores/*/executions/*}",
                                "body": "execution"
                              }
                            },
                            {
                              "(google.api.method_signature)": "execution,update_mask"
                            }
                          ]
                        },
                        "DeleteExecution": {
                          "requestType": "DeleteExecutionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/metadataStores/*/executions/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/metadataStores/*/executions/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "PurgeExecutions": {
                          "requestType": "PurgeExecutionsRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/metadataStores/*}/executions:purge",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent",
                            "(google.longrunning.operation_info).response_type": "PurgeExecutionsResponse",
                            "(google.longrunning.operation_info).metadata_type": "PurgeExecutionsMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/metadataStores/*}/executions:purge",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "PurgeExecutionsResponse",
                                "metadata_type": "PurgeExecutionsMetadata"
                              }
                            }
                          ]
                        },
                        "AddExecutionEvents": {
                          "requestType": "AddExecutionEventsRequest",
                          "responseType": "AddExecutionEventsResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{execution=projects/*/locations/*/metadataStores/*/executions/*}:addExecutionEvents",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "execution,events"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{execution=projects/*/locations/*/metadataStores/*/executions/*}:addExecutionEvents",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "execution,events"
                            }
                          ]
                        },
                        "QueryExecutionInputsAndOutputs": {
                          "requestType": "QueryExecutionInputsAndOutputsRequest",
                          "responseType": "LineageSubgraph",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{execution=projects/*/locations/*/metadataStores/*/executions/*}:queryExecutionInputsAndOutputs",
                            "(google.api.method_signature)": "execution"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{execution=projects/*/locations/*/metadataStores/*/executions/*}:queryExecutionInputsAndOutputs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "execution"
                            }
                          ]
                        },
                        "CreateMetadataSchema": {
                          "requestType": "CreateMetadataSchemaRequest",
                          "responseType": "MetadataSchema",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/metadataStores/*}/metadataSchemas",
                            "(google.api.http).body": "metadata_schema",
                            "(google.api.method_signature)": "parent,metadata_schema,metadata_schema_id"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/metadataStores/*}/metadataSchemas",
                                "body": "metadata_schema"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,metadata_schema,metadata_schema_id"
                            }
                          ]
                        },
                        "GetMetadataSchema": {
                          "requestType": "GetMetadataSchemaRequest",
                          "responseType": "MetadataSchema",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/metadataStores/*/metadataSchemas/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/metadataStores/*/metadataSchemas/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListMetadataSchemas": {
                          "requestType": "ListMetadataSchemasRequest",
                          "responseType": "ListMetadataSchemasResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*/metadataStores/*}/metadataSchemas",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*/metadataStores/*}/metadataSchemas"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "QueryArtifactLineageSubgraph": {
                          "requestType": "QueryArtifactLineageSubgraphRequest",
                          "responseType": "LineageSubgraph",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{artifact=projects/*/locations/*/metadataStores/*/artifacts/*}:queryArtifactLineageSubgraph",
                            "(google.api.method_signature)": "artifact"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{artifact=projects/*/locations/*/metadataStores/*/artifacts/*}:queryArtifactLineageSubgraph"
                              }
                            },
                            {
                              "(google.api.method_signature)": "artifact"
                            }
                          ]
                        }
                      }
                    },
                    "CreateMetadataStoreRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "metadataStore": {
                          "type": "MetadataStore",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "metadataStoreId": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "CreateMetadataStoreOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "GetMetadataStoreRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/MetadataStore"
                          }
                        }
                      }
                    },
                    "ListMetadataStoresRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListMetadataStoresResponse": {
                      "fields": {
                        "metadataStores": {
                          "rule": "repeated",
                          "type": "MetadataStore",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteMetadataStoreRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/MetadataStore"
                          }
                        },
                        "force": {
                          "type": "bool",
                          "id": 2,
                          "options": {
                            "deprecated": true
                          }
                        }
                      }
                    },
                    "DeleteMetadataStoreOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "CreateArtifactRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/MetadataStore"
                          }
                        },
                        "artifact": {
                          "type": "Artifact",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "artifactId": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "GetArtifactRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Artifact"
                          }
                        }
                      }
                    },
                    "ListArtifactsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/Artifact"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "filter": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ListArtifactsResponse": {
                      "fields": {
                        "artifacts": {
                          "rule": "repeated",
                          "type": "Artifact",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateArtifactRequest": {
                      "fields": {
                        "artifact": {
                          "type": "Artifact",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "allowMissing": {
                          "type": "bool",
                          "id": 3
                        }
                      }
                    },
                    "DeleteArtifactRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Artifact"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "PurgeArtifactsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/Artifact"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "force": {
                          "type": "bool",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "PurgeArtifactsResponse": {
                      "fields": {
                        "purgeCount": {
                          "type": "int64",
                          "id": 1
                        },
                        "purgeSample": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Artifact"
                          }
                        }
                      }
                    },
                    "PurgeArtifactsMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "CreateContextRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/MetadataStore"
                          }
                        },
                        "context": {
                          "type": "Context",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "contextId": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "GetContextRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Context"
                          }
                        }
                      }
                    },
                    "ListContextsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/Context"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "filter": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ListContextsResponse": {
                      "fields": {
                        "contexts": {
                          "rule": "repeated",
                          "type": "Context",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateContextRequest": {
                      "fields": {
                        "context": {
                          "type": "Context",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "allowMissing": {
                          "type": "bool",
                          "id": 3
                        }
                      }
                    },
                    "DeleteContextRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Context"
                          }
                        },
                        "force": {
                          "type": "bool",
                          "id": 2
                        },
                        "etag": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "PurgeContextsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/Context"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "force": {
                          "type": "bool",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "PurgeContextsResponse": {
                      "fields": {
                        "purgeCount": {
                          "type": "int64",
                          "id": 1
                        },
                        "purgeSample": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Context"
                          }
                        }
                      }
                    },
                    "PurgeContextsMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "AddContextArtifactsAndExecutionsRequest": {
                      "fields": {
                        "context": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Context"
                          }
                        },
                        "artifacts": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Artifact"
                          }
                        },
                        "executions": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Execution"
                          }
                        }
                      }
                    },
                    "AddContextArtifactsAndExecutionsResponse": {
                      "fields": {}
                    },
                    "AddContextChildrenRequest": {
                      "fields": {
                        "context": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Context"
                          }
                        },
                        "childContexts": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Context"
                          }
                        }
                      }
                    },
                    "AddContextChildrenResponse": {
                      "fields": {}
                    },
                    "RemoveContextChildrenRequest": {
                      "fields": {
                        "context": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Context"
                          }
                        },
                        "childContexts": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Context"
                          }
                        }
                      }
                    },
                    "RemoveContextChildrenResponse": {
                      "fields": {}
                    },
                    "QueryContextLineageSubgraphRequest": {
                      "fields": {
                        "context": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Context"
                          }
                        }
                      }
                    },
                    "CreateExecutionRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/MetadataStore"
                          }
                        },
                        "execution": {
                          "type": "Execution",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "executionId": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "GetExecutionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Execution"
                          }
                        }
                      }
                    },
                    "ListExecutionsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/Execution"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "filter": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ListExecutionsResponse": {
                      "fields": {
                        "executions": {
                          "rule": "repeated",
                          "type": "Execution",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateExecutionRequest": {
                      "fields": {
                        "execution": {
                          "type": "Execution",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "allowMissing": {
                          "type": "bool",
                          "id": 3
                        }
                      }
                    },
                    "DeleteExecutionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Execution"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "PurgeExecutionsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/Execution"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "force": {
                          "type": "bool",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "PurgeExecutionsResponse": {
                      "fields": {
                        "purgeCount": {
                          "type": "int64",
                          "id": 1
                        },
                        "purgeSample": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Execution"
                          }
                        }
                      }
                    },
                    "PurgeExecutionsMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "AddExecutionEventsRequest": {
                      "fields": {
                        "execution": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Execution"
                          }
                        },
                        "events": {
                          "rule": "repeated",
                          "type": "Event",
                          "id": 2
                        }
                      }
                    },
                    "AddExecutionEventsResponse": {
                      "fields": {}
                    },
                    "QueryExecutionInputsAndOutputsRequest": {
                      "fields": {
                        "execution": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Execution"
                          }
                        }
                      }
                    },
                    "CreateMetadataSchemaRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/MetadataStore"
                          }
                        },
                        "metadataSchema": {
                          "type": "MetadataSchema",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "metadataSchemaId": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "GetMetadataSchemaRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/MetadataSchema"
                          }
                        }
                      }
                    },
                    "ListMetadataSchemasRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/MetadataSchema"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "filter": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "ListMetadataSchemasResponse": {
                      "fields": {
                        "metadataSchemas": {
                          "rule": "repeated",
                          "type": "MetadataSchema",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "QueryArtifactLineageSubgraphRequest": {
                      "fields": {
                        "artifact": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Artifact"
                          }
                        },
                        "maxHops": {
                          "type": "int32",
                          "id": 2
                        },
                        "filter": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "MetadataStore": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/MetadataStore",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/metadataStores/{metadata_store}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 5
                        },
                        "description": {
                          "type": "string",
                          "id": 6
                        },
                        "state": {
                          "type": "MetadataStoreState",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "MetadataStoreState": {
                          "fields": {
                            "diskUtilizationBytes": {
                              "type": "int64",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "MigratableResource": {
                      "oneofs": {
                        "resource": {
                          "oneof": [
                            "mlEngineModelVersion",
                            "automlModel",
                            "automlDataset",
                            "dataLabelingDataset"
                          ]
                        }
                      },
                      "fields": {
                        "mlEngineModelVersion": {
                          "type": "MlEngineModelVersion",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "automlModel": {
                          "type": "AutomlModel",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "automlDataset": {
                          "type": "AutomlDataset",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "dataLabelingDataset": {
                          "type": "DataLabelingDataset",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "lastMigrateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "lastUpdateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "MlEngineModelVersion": {
                          "fields": {
                            "endpoint": {
                              "type": "string",
                              "id": 1
                            },
                            "version": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.resource_reference).type": "ml.googleapis.com/Version"
                              }
                            }
                          }
                        },
                        "AutomlModel": {
                          "fields": {
                            "model": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "automl.googleapis.com/Model"
                              }
                            },
                            "modelDisplayName": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "AutomlDataset": {
                          "fields": {
                            "dataset": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "automl.googleapis.com/Dataset"
                              }
                            },
                            "datasetDisplayName": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "DataLabelingDataset": {
                          "fields": {
                            "dataset": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "datalabeling.googleapis.com/Dataset"
                              }
                            },
                            "datasetDisplayName": {
                              "type": "string",
                              "id": 4
                            },
                            "dataLabelingAnnotatedDatasets": {
                              "rule": "repeated",
                              "type": "DataLabelingAnnotatedDataset",
                              "id": 3
                            }
                          },
                          "nested": {
                            "DataLabelingAnnotatedDataset": {
                              "fields": {
                                "annotatedDataset": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.resource_reference).type": "datalabeling.googleapis.com/AnnotatedDataset"
                                  }
                                },
                                "annotatedDatasetDisplayName": {
                                  "type": "string",
                                  "id": 3
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "MigrationService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "SearchMigratableResources": {
                          "requestType": "SearchMigratableResourcesRequest",
                          "responseType": "SearchMigratableResourcesResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/migratableResources:search",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/migratableResources:search",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "BatchMigrateResources": {
                          "requestType": "BatchMigrateResourcesRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/migratableResources:batchMigrate",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,migrate_resource_requests",
                            "(google.longrunning.operation_info).response_type": "BatchMigrateResourcesResponse",
                            "(google.longrunning.operation_info).metadata_type": "BatchMigrateResourcesOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/migratableResources:batchMigrate",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,migrate_resource_requests"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "BatchMigrateResourcesResponse",
                                "metadata_type": "BatchMigrateResourcesOperationMetadata"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "SearchMigratableResourcesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "filter": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "SearchMigratableResourcesResponse": {
                      "fields": {
                        "migratableResources": {
                          "rule": "repeated",
                          "type": "MigratableResource",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "BatchMigrateResourcesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "migrateResourceRequests": {
                          "rule": "repeated",
                          "type": "MigrateResourceRequest",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "MigrateResourceRequest": {
                      "oneofs": {
                        "request": {
                          "oneof": [
                            "migrateMlEngineModelVersionConfig",
                            "migrateAutomlModelConfig",
                            "migrateAutomlDatasetConfig",
                            "migrateDataLabelingDatasetConfig"
                          ]
                        }
                      },
                      "fields": {
                        "migrateMlEngineModelVersionConfig": {
                          "type": "MigrateMlEngineModelVersionConfig",
                          "id": 1
                        },
                        "migrateAutomlModelConfig": {
                          "type": "MigrateAutomlModelConfig",
                          "id": 2
                        },
                        "migrateAutomlDatasetConfig": {
                          "type": "MigrateAutomlDatasetConfig",
                          "id": 3
                        },
                        "migrateDataLabelingDatasetConfig": {
                          "type": "MigrateDataLabelingDatasetConfig",
                          "id": 4
                        }
                      },
                      "nested": {
                        "MigrateMlEngineModelVersionConfig": {
                          "fields": {
                            "endpoint": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "modelVersion": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "ml.googleapis.com/Version"
                              }
                            },
                            "modelDisplayName": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "MigrateAutomlModelConfig": {
                          "fields": {
                            "model": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "automl.googleapis.com/Model"
                              }
                            },
                            "modelDisplayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "MigrateAutomlDatasetConfig": {
                          "fields": {
                            "dataset": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "automl.googleapis.com/Dataset"
                              }
                            },
                            "datasetDisplayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "MigrateDataLabelingDatasetConfig": {
                          "fields": {
                            "dataset": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "datalabeling.googleapis.com/Dataset"
                              }
                            },
                            "datasetDisplayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "migrateDataLabelingAnnotatedDatasetConfigs": {
                              "rule": "repeated",
                              "type": "MigrateDataLabelingAnnotatedDatasetConfig",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          },
                          "nested": {
                            "MigrateDataLabelingAnnotatedDatasetConfig": {
                              "fields": {
                                "annotatedDataset": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED",
                                    "(google.api.resource_reference).type": "datalabeling.googleapis.com/AnnotatedDataset"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "BatchMigrateResourcesResponse": {
                      "fields": {
                        "migrateResourceResponses": {
                          "rule": "repeated",
                          "type": "MigrateResourceResponse",
                          "id": 1
                        }
                      }
                    },
                    "MigrateResourceResponse": {
                      "oneofs": {
                        "migratedResource": {
                          "oneof": [
                            "dataset",
                            "model"
                          ]
                        }
                      },
                      "fields": {
                        "dataset": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "model": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "migratableResource": {
                          "type": "MigratableResource",
                          "id": 3
                        }
                      }
                    },
                    "BatchMigrateResourcesOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        },
                        "partialResults": {
                          "rule": "repeated",
                          "type": "PartialResult",
                          "id": 2
                        }
                      },
                      "nested": {
                        "PartialResult": {
                          "oneofs": {
                            "result": {
                              "oneof": [
                                "error",
                                "model",
                                "dataset"
                              ]
                            }
                          },
                          "fields": {
                            "error": {
                              "type": "google.rpc.Status",
                              "id": 2
                            },
                            "model": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                              }
                            },
                            "dataset": {
                              "type": "string",
                              "id": 4,
                              "options": {
                                "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                              }
                            },
                            "request": {
                              "type": "MigrateResourceRequest",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "ModelEvaluation": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/ModelEvaluation",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 10
                        },
                        "metricsSchemaUri": {
                          "type": "string",
                          "id": 2
                        },
                        "metrics": {
                          "type": "google.protobuf.Value",
                          "id": 3
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "sliceDimensions": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 5
                        },
                        "modelExplanation": {
                          "type": "ModelExplanation",
                          "id": 8
                        },
                        "explanationSpecs": {
                          "rule": "repeated",
                          "type": "ModelEvaluationExplanationSpec",
                          "id": 9
                        },
                        "metadata": {
                          "type": "google.protobuf.Value",
                          "id": 11
                        },
                        "biasConfigs": {
                          "type": "BiasConfig",
                          "id": 12
                        }
                      },
                      "nested": {
                        "ModelEvaluationExplanationSpec": {
                          "fields": {
                            "explanationType": {
                              "type": "string",
                              "id": 1
                            },
                            "explanationSpec": {
                              "type": "ExplanationSpec",
                              "id": 2
                            }
                          }
                        },
                        "BiasConfig": {
                          "fields": {
                            "biasSlices": {
                              "type": "ModelEvaluationSlice.Slice.SliceSpec",
                              "id": 1
                            },
                            "labels": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "ModelEvaluationSlice": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/ModelEvaluationSlice",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}/slices/{slice}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "slice": {
                          "type": "Slice",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "metricsSchemaUri": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "metrics": {
                          "type": "google.protobuf.Value",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "modelExplanation": {
                          "type": "ModelExplanation",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "Slice": {
                          "fields": {
                            "dimension": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "value": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "sliceSpec": {
                              "type": "SliceSpec",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          },
                          "nested": {
                            "SliceSpec": {
                              "fields": {
                                "configs": {
                                  "keyType": "string",
                                  "type": "SliceConfig",
                                  "id": 1
                                }
                              },
                              "nested": {
                                "SliceConfig": {
                                  "oneofs": {
                                    "kind": {
                                      "oneof": [
                                        "value",
                                        "range",
                                        "allValues"
                                      ]
                                    }
                                  },
                                  "fields": {
                                    "value": {
                                      "type": "Value",
                                      "id": 1
                                    },
                                    "range": {
                                      "type": "Range",
                                      "id": 2
                                    },
                                    "allValues": {
                                      "type": "google.protobuf.BoolValue",
                                      "id": 3
                                    }
                                  }
                                },
                                "Range": {
                                  "fields": {
                                    "low": {
                                      "type": "float",
                                      "id": 1
                                    },
                                    "high": {
                                      "type": "float",
                                      "id": 2
                                    }
                                  }
                                },
                                "Value": {
                                  "oneofs": {
                                    "kind": {
                                      "oneof": [
                                        "stringValue",
                                        "floatValue"
                                      ]
                                    }
                                  },
                                  "fields": {
                                    "stringValue": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "floatValue": {
                                      "type": "float",
                                      "id": 2
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "ModelGardenService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "GetPublisherModel": {
                          "requestType": "GetPublisherModelRequest",
                          "responseType": "PublisherModel",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=publishers/*/models/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=publishers/*/models/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListPublisherModels": {
                          "requestType": "ListPublisherModelsRequest",
                          "responseType": "ListPublisherModelsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=publishers/*}/models",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=publishers/*}/models"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        }
                      }
                    },
                    "PublisherModelView": {
                      "values": {
                        "PUBLISHER_MODEL_VIEW_UNSPECIFIED": 0,
                        "PUBLISHER_MODEL_VIEW_BASIC": 1,
                        "PUBLISHER_MODEL_VIEW_FULL": 2,
                        "PUBLISHER_MODEL_VERSION_VIEW_BASIC": 3
                      }
                    },
                    "GetPublisherModelRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/PublisherModel"
                          }
                        },
                        "languageCode": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "view": {
                          "type": "PublisherModelView",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListPublisherModelsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "view": {
                          "type": "PublisherModelView",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "languageCode": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListPublisherModelsResponse": {
                      "fields": {
                        "publisherModels": {
                          "rule": "repeated",
                          "type": "PublisherModel",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "PublisherModel": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/PublisherModel",
                        "(google.api.resource).pattern": "publishers/{publisher}/models/{model}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "versionId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "openSourceCategory": {
                          "type": "OpenSourceCategory",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "parent": {
                          "type": "Parent",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "supportedActions": {
                          "type": "CallToAction",
                          "id": 19,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "frameworks": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 23,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "launchStage": {
                          "type": "LaunchStage",
                          "id": 29,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "versionState": {
                          "type": "VersionState",
                          "id": 37,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "publisherModelTemplate": {
                          "type": "string",
                          "id": 30,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "predictSchemata": {
                          "type": "PredictSchemata",
                          "id": 31,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "ResourceReference": {
                          "oneofs": {
                            "reference": {
                              "oneof": [
                                "uri",
                                "resourceName",
                                "useCase",
                                "description"
                              ]
                            }
                          },
                          "fields": {
                            "uri": {
                              "type": "string",
                              "id": 1
                            },
                            "resourceName": {
                              "type": "string",
                              "id": 2
                            },
                            "useCase": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "deprecated": true
                              }
                            },
                            "description": {
                              "type": "string",
                              "id": 4,
                              "options": {
                                "deprecated": true
                              }
                            }
                          }
                        },
                        "Parent": {
                          "fields": {
                            "displayName": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "reference": {
                              "type": "ResourceReference",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "Documentation": {
                          "fields": {
                            "title": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "content": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "CallToAction": {
                          "oneofs": {
                            "_openNotebooks": {
                              "oneof": [
                                "openNotebooks"
                              ]
                            },
                            "_openFineTuningPipelines": {
                              "oneof": [
                                "openFineTuningPipelines"
                              ]
                            }
                          },
                          "fields": {
                            "viewRestApi": {
                              "type": "ViewRestApi",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "openNotebook": {
                              "type": "RegionalResourceReferences",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "openNotebooks": {
                              "type": "OpenNotebooks",
                              "id": 12,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            },
                            "createApplication": {
                              "type": "RegionalResourceReferences",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "openFineTuningPipeline": {
                              "type": "RegionalResourceReferences",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "openFineTuningPipelines": {
                              "type": "OpenFineTuningPipelines",
                              "id": 13,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            },
                            "openPromptTuningPipeline": {
                              "type": "RegionalResourceReferences",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "openGenie": {
                              "type": "RegionalResourceReferences",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "deploy": {
                              "type": "Deploy",
                              "id": 7,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "deployGke": {
                              "type": "DeployGke",
                              "id": 14,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "openGenerationAiStudio": {
                              "type": "RegionalResourceReferences",
                              "id": 8,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "requestAccess": {
                              "type": "RegionalResourceReferences",
                              "id": 9,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "openEvaluationPipeline": {
                              "type": "RegionalResourceReferences",
                              "id": 11,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          },
                          "nested": {
                            "RegionalResourceReferences": {
                              "oneofs": {
                                "_resourceTitle": {
                                  "oneof": [
                                    "resourceTitle"
                                  ]
                                },
                                "_resourceUseCase": {
                                  "oneof": [
                                    "resourceUseCase"
                                  ]
                                },
                                "_resourceDescription": {
                                  "oneof": [
                                    "resourceDescription"
                                  ]
                                }
                              },
                              "fields": {
                                "references": {
                                  "keyType": "string",
                                  "type": "ResourceReference",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "title": {
                                  "type": "string",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "resourceTitle": {
                                  "type": "string",
                                  "id": 3,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL",
                                    "proto3_optional": true
                                  }
                                },
                                "resourceUseCase": {
                                  "type": "string",
                                  "id": 4,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL",
                                    "proto3_optional": true
                                  }
                                },
                                "resourceDescription": {
                                  "type": "string",
                                  "id": 5,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL",
                                    "proto3_optional": true
                                  }
                                }
                              }
                            },
                            "ViewRestApi": {
                              "fields": {
                                "documentations": {
                                  "rule": "repeated",
                                  "type": "Documentation",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "title": {
                                  "type": "string",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              }
                            },
                            "OpenNotebooks": {
                              "fields": {
                                "notebooks": {
                                  "rule": "repeated",
                                  "type": "RegionalResourceReferences",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              }
                            },
                            "OpenFineTuningPipelines": {
                              "fields": {
                                "fineTuningPipelines": {
                                  "rule": "repeated",
                                  "type": "RegionalResourceReferences",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              }
                            },
                            "Deploy": {
                              "oneofs": {
                                "predictionResources": {
                                  "oneof": [
                                    "dedicatedResources",
                                    "automaticResources",
                                    "sharedResources"
                                  ]
                                }
                              },
                              "fields": {
                                "dedicatedResources": {
                                  "type": "DedicatedResources",
                                  "id": 5
                                },
                                "automaticResources": {
                                  "type": "AutomaticResources",
                                  "id": 6
                                },
                                "sharedResources": {
                                  "type": "string",
                                  "id": 7
                                },
                                "modelDisplayName": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "largeModelReference": {
                                  "type": "LargeModelReference",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "containerSpec": {
                                  "type": "ModelContainerSpec",
                                  "id": 3,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "artifactUri": {
                                  "type": "string",
                                  "id": 4,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "title": {
                                  "type": "string",
                                  "id": 8,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "publicArtifactUri": {
                                  "type": "string",
                                  "id": 9,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                }
                              }
                            },
                            "DeployGke": {
                              "fields": {
                                "gkeYamlConfigs": {
                                  "rule": "repeated",
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "OpenSourceCategory": {
                          "values": {
                            "OPEN_SOURCE_CATEGORY_UNSPECIFIED": 0,
                            "PROPRIETARY": 1,
                            "GOOGLE_OWNED_OSS_WITH_GOOGLE_CHECKPOINT": 2,
                            "THIRD_PARTY_OWNED_OSS_WITH_GOOGLE_CHECKPOINT": 3,
                            "GOOGLE_OWNED_OSS": 4,
                            "THIRD_PARTY_OWNED_OSS": 5
                          }
                        },
                        "LaunchStage": {
                          "values": {
                            "LAUNCH_STAGE_UNSPECIFIED": 0,
                            "EXPERIMENTAL": 1,
                            "PRIVATE_PREVIEW": 2,
                            "PUBLIC_PREVIEW": 3,
                            "GA": 4
                          }
                        },
                        "VersionState": {
                          "values": {
                            "VERSION_STATE_UNSPECIFIED": 0,
                            "VERSION_STATE_STABLE": 1,
                            "VERSION_STATE_UNSTABLE": 2
                          }
                        }
                      }
                    },
                    "ModelService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "UploadModel": {
                          "requestType": "UploadModelRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/models:upload",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,model",
                            "(google.longrunning.operation_info).response_type": "UploadModelResponse",
                            "(google.longrunning.operation_info).metadata_type": "UploadModelOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/models:upload",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,model"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "UploadModelResponse",
                                "metadata_type": "UploadModelOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetModel": {
                          "requestType": "GetModelRequest",
                          "responseType": "Model",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/models/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/models/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListModels": {
                          "requestType": "ListModelsRequest",
                          "responseType": "ListModelsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/models",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/models"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "ListModelVersions": {
                          "requestType": "ListModelVersionsRequest",
                          "responseType": "ListModelVersionsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/models/*}:listVersions",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/models/*}:listVersions"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "UpdateModel": {
                          "requestType": "UpdateModelRequest",
                          "responseType": "Model",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{model.name=projects/*/locations/*/models/*}",
                            "(google.api.http).body": "model",
                            "(google.api.method_signature)": "model,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{model.name=projects/*/locations/*/models/*}",
                                "body": "model"
                              }
                            },
                            {
                              "(google.api.method_signature)": "model,update_mask"
                            }
                          ]
                        },
                        "UpdateExplanationDataset": {
                          "requestType": "UpdateExplanationDatasetRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{model=projects/*/locations/*/models/*}:updateExplanationDataset",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "model",
                            "(google.longrunning.operation_info).response_type": "UpdateExplanationDatasetResponse",
                            "(google.longrunning.operation_info).metadata_type": "UpdateExplanationDatasetOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{model=projects/*/locations/*/models/*}:updateExplanationDataset",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "model"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "UpdateExplanationDatasetResponse",
                                "metadata_type": "UpdateExplanationDatasetOperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteModel": {
                          "requestType": "DeleteModelRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/models/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/models/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteModelVersion": {
                          "requestType": "DeleteModelVersionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/models/*}:deleteVersion",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/models/*}:deleteVersion"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "MergeVersionAliases": {
                          "requestType": "MergeVersionAliasesRequest",
                          "responseType": "Model",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{name=projects/*/locations/*/models/*}:mergeVersionAliases",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name,version_aliases"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{name=projects/*/locations/*/models/*}:mergeVersionAliases",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,version_aliases"
                            }
                          ]
                        },
                        "ExportModel": {
                          "requestType": "ExportModelRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{name=projects/*/locations/*/models/*}:export",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name,output_config",
                            "(google.longrunning.operation_info).response_type": "ExportModelResponse",
                            "(google.longrunning.operation_info).metadata_type": "ExportModelOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{name=projects/*/locations/*/models/*}:export",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,output_config"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ExportModelResponse",
                                "metadata_type": "ExportModelOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CopyModel": {
                          "requestType": "CopyModelRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/models:copy",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,source_model",
                            "(google.longrunning.operation_info).response_type": "CopyModelResponse",
                            "(google.longrunning.operation_info).metadata_type": "CopyModelOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/models:copy",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,source_model"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "CopyModelResponse",
                                "metadata_type": "CopyModelOperationMetadata"
                              }
                            }
                          ]
                        },
                        "ImportModelEvaluation": {
                          "requestType": "ImportModelEvaluationRequest",
                          "responseType": "ModelEvaluation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/models/*}/evaluations:import",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,model_evaluation"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/models/*}/evaluations:import",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,model_evaluation"
                            }
                          ]
                        },
                        "BatchImportModelEvaluationSlices": {
                          "requestType": "BatchImportModelEvaluationSlicesRequest",
                          "responseType": "BatchImportModelEvaluationSlicesResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/models/*/evaluations/*}/slices:batchImport",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,model_evaluation_slices"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/models/*/evaluations/*}/slices:batchImport",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,model_evaluation_slices"
                            }
                          ]
                        },
                        "BatchImportEvaluatedAnnotations": {
                          "requestType": "BatchImportEvaluatedAnnotationsRequest",
                          "responseType": "BatchImportEvaluatedAnnotationsResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/models/*/evaluations/*/slices/*}:batchImport",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,evaluated_annotations"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/models/*/evaluations/*/slices/*}:batchImport",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,evaluated_annotations"
                            }
                          ]
                        },
                        "GetModelEvaluation": {
                          "requestType": "GetModelEvaluationRequest",
                          "responseType": "ModelEvaluation",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/models/*/evaluations/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/models/*/evaluations/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListModelEvaluations": {
                          "requestType": "ListModelEvaluationsRequest",
                          "responseType": "ListModelEvaluationsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*/models/*}/evaluations",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*/models/*}/evaluations"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetModelEvaluationSlice": {
                          "requestType": "GetModelEvaluationSliceRequest",
                          "responseType": "ModelEvaluationSlice",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/models/*/evaluations/*/slices/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/models/*/evaluations/*/slices/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListModelEvaluationSlices": {
                          "requestType": "ListModelEvaluationSlicesRequest",
                          "responseType": "ListModelEvaluationSlicesResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*/models/*/evaluations/*}/slices",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*/models/*/evaluations/*}/slices"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        }
                      }
                    },
                    "UploadModelRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "parentModel": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "modelId": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "model": {
                          "type": "Model",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "serviceAccount": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "UploadModelOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "UploadModelResponse": {
                      "fields": {
                        "model": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "modelVersionId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "GetModelRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        }
                      }
                    },
                    "ListModelsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListModelsResponse": {
                      "fields": {
                        "models": {
                          "rule": "repeated",
                          "type": "Model",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "ListModelVersionsRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "filter": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 6
                        }
                      }
                    },
                    "ListModelVersionsResponse": {
                      "fields": {
                        "models": {
                          "rule": "repeated",
                          "type": "Model",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateModelRequest": {
                      "fields": {
                        "model": {
                          "type": "Model",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UpdateExplanationDatasetRequest": {
                      "fields": {
                        "model": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "examples": {
                          "type": "Examples",
                          "id": 2
                        }
                      }
                    },
                    "UpdateExplanationDatasetOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "DeleteModelRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        }
                      }
                    },
                    "DeleteModelVersionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        }
                      }
                    },
                    "MergeVersionAliasesRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "versionAliases": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ExportModelRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "outputConfig": {
                          "type": "OutputConfig",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      },
                      "nested": {
                        "OutputConfig": {
                          "fields": {
                            "exportFormatId": {
                              "type": "string",
                              "id": 1
                            },
                            "artifactDestination": {
                              "type": "GcsDestination",
                              "id": 3
                            },
                            "imageDestination": {
                              "type": "ContainerRegistryDestination",
                              "id": 4
                            }
                          }
                        }
                      }
                    },
                    "ExportModelOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        },
                        "outputInfo": {
                          "type": "OutputInfo",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "OutputInfo": {
                          "fields": {
                            "artifactOutputUri": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "imageOutputUri": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        }
                      }
                    },
                    "UpdateExplanationDatasetResponse": {
                      "fields": {}
                    },
                    "ExportModelResponse": {
                      "fields": {}
                    },
                    "CopyModelRequest": {
                      "oneofs": {
                        "destinationModel": {
                          "oneof": [
                            "modelId",
                            "parentModel"
                          ]
                        }
                      },
                      "fields": {
                        "modelId": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "parentModel": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "sourceModel": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 3
                        }
                      }
                    },
                    "CopyModelOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "CopyModelResponse": {
                      "fields": {
                        "model": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "modelVersionId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "ImportModelEvaluationRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "modelEvaluation": {
                          "type": "ModelEvaluation",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "BatchImportModelEvaluationSlicesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/ModelEvaluation"
                          }
                        },
                        "modelEvaluationSlices": {
                          "rule": "repeated",
                          "type": "ModelEvaluationSlice",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "BatchImportModelEvaluationSlicesResponse": {
                      "fields": {
                        "importedModelEvaluationSlices": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "BatchImportEvaluatedAnnotationsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/ModelEvaluationSlice"
                          }
                        },
                        "evaluatedAnnotations": {
                          "rule": "repeated",
                          "type": "EvaluatedAnnotation",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "BatchImportEvaluatedAnnotationsResponse": {
                      "fields": {
                        "importedEvaluatedAnnotationsCount": {
                          "type": "int32",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "GetModelEvaluationRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/ModelEvaluation"
                          }
                        }
                      }
                    },
                    "ListModelEvaluationsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListModelEvaluationsResponse": {
                      "fields": {
                        "modelEvaluations": {
                          "rule": "repeated",
                          "type": "ModelEvaluation",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetModelEvaluationSliceRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/ModelEvaluationSlice"
                          }
                        }
                      }
                    },
                    "ListModelEvaluationSlicesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/ModelEvaluation"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListModelEvaluationSlicesResponse": {
                      "fields": {
                        "modelEvaluationSlices": {
                          "rule": "repeated",
                          "type": "ModelEvaluationSlice",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "PersistentResource": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/PersistentResource",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/persistentResources/{persistent_resource}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "resourcePools": {
                          "rule": "repeated",
                          "type": "ResourcePool",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "network": {
                          "type": "string",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "compute.googleapis.com/Network"
                          }
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "resourceRuntimeSpec": {
                          "type": "ResourceRuntimeSpec",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "resourceRuntime": {
                          "type": "ResourceRuntime",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "reservedIpRanges": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 15,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "PROVISIONING": 1,
                            "RUNNING": 3,
                            "STOPPING": 4,
                            "ERROR": 5
                          }
                        }
                      }
                    },
                    "ResourcePool": {
                      "oneofs": {
                        "_replicaCount": {
                          "oneof": [
                            "replicaCount"
                          ]
                        }
                      },
                      "fields": {
                        "id": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "machineSpec": {
                          "type": "MachineSpec",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "replicaCount": {
                          "type": "int64",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "proto3_optional": true
                          }
                        },
                        "diskSpec": {
                          "type": "DiskSpec",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "usedReplicaCount": {
                          "type": "int64",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "autoscalingSpec": {
                          "type": "AutoscalingSpec",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "AutoscalingSpec": {
                          "oneofs": {
                            "_minReplicaCount": {
                              "oneof": [
                                "minReplicaCount"
                              ]
                            },
                            "_maxReplicaCount": {
                              "oneof": [
                                "maxReplicaCount"
                              ]
                            }
                          },
                          "fields": {
                            "minReplicaCount": {
                              "type": "int64",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            },
                            "maxReplicaCount": {
                              "type": "int64",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "ResourceRuntimeSpec": {
                      "fields": {
                        "serviceAccountSpec": {
                          "type": "ServiceAccountSpec",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "raySpec": {
                          "type": "RaySpec",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "RaySpec": {
                      "fields": {
                        "imageUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "resourcePoolImages": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "headNodeResourcePoolId": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "rayMetricSpec": {
                          "type": "RayMetricSpec",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ResourceRuntime": {
                      "fields": {
                        "accessUris": {
                          "keyType": "string",
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "ServiceAccountSpec": {
                      "fields": {
                        "enableCustomServiceAccount": {
                          "type": "bool",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "serviceAccount": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "RayMetricSpec": {
                      "fields": {
                        "disabled": {
                          "type": "bool",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "PersistentResourceService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreatePersistentResource": {
                          "requestType": "CreatePersistentResourceRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/persistentResources",
                            "(google.api.http).body": "persistent_resource",
                            "(google.api.method_signature)": "parent,persistent_resource,persistent_resource_id",
                            "(google.longrunning.operation_info).response_type": "PersistentResource",
                            "(google.longrunning.operation_info).metadata_type": "CreatePersistentResourceOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/persistentResources",
                                "body": "persistent_resource"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,persistent_resource,persistent_resource_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "PersistentResource",
                                "metadata_type": "CreatePersistentResourceOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetPersistentResource": {
                          "requestType": "GetPersistentResourceRequest",
                          "responseType": "PersistentResource",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/persistentResources/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/persistentResources/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListPersistentResources": {
                          "requestType": "ListPersistentResourcesRequest",
                          "responseType": "ListPersistentResourcesResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/persistentResources",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/persistentResources"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeletePersistentResource": {
                          "requestType": "DeletePersistentResourceRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/persistentResources/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/persistentResources/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdatePersistentResource": {
                          "requestType": "UpdatePersistentResourceRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{persistent_resource.name=projects/*/locations/*/persistentResources/*}",
                            "(google.api.http).body": "persistent_resource",
                            "(google.api.method_signature)": "persistent_resource,update_mask",
                            "(google.longrunning.operation_info).response_type": "PersistentResource",
                            "(google.longrunning.operation_info).metadata_type": "UpdatePersistentResourceOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{persistent_resource.name=projects/*/locations/*/persistentResources/*}",
                                "body": "persistent_resource"
                              }
                            },
                            {
                              "(google.api.method_signature)": "persistent_resource,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "PersistentResource",
                                "metadata_type": "UpdatePersistentResourceOperationMetadata"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "CreatePersistentResourceRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "persistentResource": {
                          "type": "PersistentResource",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "persistentResourceId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CreatePersistentResourceOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "UpdatePersistentResourceOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "GetPersistentResourceRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/PersistentResource"
                          }
                        }
                      }
                    },
                    "ListPersistentResourcesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListPersistentResourcesResponse": {
                      "fields": {
                        "persistentResources": {
                          "rule": "repeated",
                          "type": "PersistentResource",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeletePersistentResourceRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/PersistentResource"
                          }
                        }
                      }
                    },
                    "UpdatePersistentResourceRequest": {
                      "fields": {
                        "persistentResource": {
                          "type": "PersistentResource",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "PipelineFailurePolicy": {
                      "values": {
                        "PIPELINE_FAILURE_POLICY_UNSPECIFIED": 0,
                        "PIPELINE_FAILURE_POLICY_FAIL_SLOW": 1,
                        "PIPELINE_FAILURE_POLICY_FAIL_FAST": 2
                      }
                    },
                    "PipelineJob": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/PipelineJob",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/pipelineJobs/{pipeline_job}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "pipelineSpec": {
                          "type": "google.protobuf.Struct",
                          "id": 7
                        },
                        "state": {
                          "type": "PipelineState",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "jobDetail": {
                          "type": "PipelineJobDetail",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 11
                        },
                        "runtimeConfig": {
                          "type": "RuntimeConfig",
                          "id": 12
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 16
                        },
                        "serviceAccount": {
                          "type": "string",
                          "id": 17
                        },
                        "network": {
                          "type": "string",
                          "id": 18,
                          "options": {
                            "(google.api.resource_reference).type": "compute.googleapis.com/Network"
                          }
                        },
                        "reservedIpRanges": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 25
                        },
                        "templateUri": {
                          "type": "string",
                          "id": 19
                        },
                        "templateMetadata": {
                          "type": "PipelineTemplateMetadata",
                          "id": 20,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "scheduleName": {
                          "type": "string",
                          "id": 22,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "RuntimeConfig": {
                          "fields": {
                            "parameters": {
                              "keyType": "string",
                              "type": "Value",
                              "id": 1,
                              "options": {
                                "deprecated": true
                              }
                            },
                            "gcsOutputDirectory": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "parameterValues": {
                              "keyType": "string",
                              "type": "google.protobuf.Value",
                              "id": 3
                            },
                            "failurePolicy": {
                              "type": "PipelineFailurePolicy",
                              "id": 4
                            },
                            "inputArtifacts": {
                              "keyType": "string",
                              "type": "InputArtifact",
                              "id": 5
                            }
                          },
                          "nested": {
                            "InputArtifact": {
                              "oneofs": {
                                "kind": {
                                  "oneof": [
                                    "artifactId"
                                  ]
                                }
                              },
                              "fields": {
                                "artifactId": {
                                  "type": "string",
                                  "id": 1
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "PipelineTemplateMetadata": {
                      "fields": {
                        "version": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "PipelineJobDetail": {
                      "fields": {
                        "pipelineContext": {
                          "type": "Context",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "pipelineRunContext": {
                          "type": "Context",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "taskDetails": {
                          "rule": "repeated",
                          "type": "PipelineTaskDetail",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "PipelineTaskDetail": {
                      "fields": {
                        "taskId": {
                          "type": "int64",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "parentTaskId": {
                          "type": "int64",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "taskName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "executorDetail": {
                          "type": "PipelineTaskExecutorDetail",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "execution": {
                          "type": "Execution",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "pipelineTaskStatus": {
                          "rule": "repeated",
                          "type": "PipelineTaskStatus",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "inputs": {
                          "keyType": "string",
                          "type": "ArtifactList",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "outputs": {
                          "keyType": "string",
                          "type": "ArtifactList",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "PipelineTaskStatus": {
                          "fields": {
                            "updateTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "state": {
                              "type": "State",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "error": {
                              "type": "google.rpc.Status",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        },
                        "ArtifactList": {
                          "fields": {
                            "artifacts": {
                              "rule": "repeated",
                              "type": "Artifact",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        },
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "PENDING": 1,
                            "RUNNING": 2,
                            "SUCCEEDED": 3,
                            "CANCEL_PENDING": 4,
                            "CANCELLING": 5,
                            "CANCELLED": 6,
                            "FAILED": 7,
                            "SKIPPED": 8,
                            "NOT_TRIGGERED": 9
                          }
                        }
                      }
                    },
                    "PipelineTaskExecutorDetail": {
                      "oneofs": {
                        "details": {
                          "oneof": [
                            "containerDetail",
                            "customJobDetail"
                          ]
                        }
                      },
                      "fields": {
                        "containerDetail": {
                          "type": "ContainerDetail",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "customJobDetail": {
                          "type": "CustomJobDetail",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "ContainerDetail": {
                          "fields": {
                            "mainJob": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY",
                                "(google.api.resource_reference).type": "aiplatform.googleapis.com/CustomJob"
                              }
                            },
                            "preCachingCheckJob": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY",
                                "(google.api.resource_reference).type": "aiplatform.googleapis.com/CustomJob"
                              }
                            },
                            "failedMainJobs": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "failedPreCachingCheckJobs": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        },
                        "CustomJobDetail": {
                          "fields": {
                            "job": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY",
                                "(google.api.resource_reference).type": "aiplatform.googleapis.com/CustomJob"
                              }
                            },
                            "failedJobs": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        }
                      }
                    },
                    "PipelineState": {
                      "values": {
                        "PIPELINE_STATE_UNSPECIFIED": 0,
                        "PIPELINE_STATE_QUEUED": 1,
                        "PIPELINE_STATE_PENDING": 2,
                        "PIPELINE_STATE_RUNNING": 3,
                        "PIPELINE_STATE_SUCCEEDED": 4,
                        "PIPELINE_STATE_FAILED": 5,
                        "PIPELINE_STATE_CANCELLING": 6,
                        "PIPELINE_STATE_CANCELLED": 7,
                        "PIPELINE_STATE_PAUSED": 8
                      }
                    },
                    "Value": {
                      "oneofs": {
                        "value": {
                          "oneof": [
                            "intValue",
                            "doubleValue",
                            "stringValue"
                          ]
                        }
                      },
                      "fields": {
                        "intValue": {
                          "type": "int64",
                          "id": 1
                        },
                        "doubleValue": {
                          "type": "double",
                          "id": 2
                        },
                        "stringValue": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "PipelineService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateTrainingPipeline": {
                          "requestType": "CreateTrainingPipelineRequest",
                          "responseType": "TrainingPipeline",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/trainingPipelines",
                            "(google.api.http).body": "training_pipeline",
                            "(google.api.method_signature)": "parent,training_pipeline"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/trainingPipelines",
                                "body": "training_pipeline"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,training_pipeline"
                            }
                          ]
                        },
                        "GetTrainingPipeline": {
                          "requestType": "GetTrainingPipelineRequest",
                          "responseType": "TrainingPipeline",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/trainingPipelines/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/trainingPipelines/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListTrainingPipelines": {
                          "requestType": "ListTrainingPipelinesRequest",
                          "responseType": "ListTrainingPipelinesResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/trainingPipelines",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/trainingPipelines"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteTrainingPipeline": {
                          "requestType": "DeleteTrainingPipelineRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/trainingPipelines/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/trainingPipelines/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CancelTrainingPipeline": {
                          "requestType": "CancelTrainingPipelineRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{name=projects/*/locations/*/trainingPipelines/*}:cancel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{name=projects/*/locations/*/trainingPipelines/*}:cancel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreatePipelineJob": {
                          "requestType": "CreatePipelineJobRequest",
                          "responseType": "PipelineJob",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/pipelineJobs",
                            "(google.api.http).body": "pipeline_job",
                            "(google.api.method_signature)": "parent,pipeline_job,pipeline_job_id"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/pipelineJobs",
                                "body": "pipeline_job"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,pipeline_job,pipeline_job_id"
                            }
                          ]
                        },
                        "GetPipelineJob": {
                          "requestType": "GetPipelineJobRequest",
                          "responseType": "PipelineJob",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/pipelineJobs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/pipelineJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListPipelineJobs": {
                          "requestType": "ListPipelineJobsRequest",
                          "responseType": "ListPipelineJobsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/pipelineJobs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/pipelineJobs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeletePipelineJob": {
                          "requestType": "DeletePipelineJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/pipelineJobs/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/pipelineJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "BatchDeletePipelineJobs": {
                          "requestType": "BatchDeletePipelineJobsRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/pipelineJobs:batchDelete",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,names",
                            "(google.longrunning.operation_info).response_type": "BatchDeletePipelineJobsResponse",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/pipelineJobs:batchDelete",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,names"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "BatchDeletePipelineJobsResponse",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CancelPipelineJob": {
                          "requestType": "CancelPipelineJobRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{name=projects/*/locations/*/pipelineJobs/*}:cancel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{name=projects/*/locations/*/pipelineJobs/*}:cancel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "BatchCancelPipelineJobs": {
                          "requestType": "BatchCancelPipelineJobsRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/pipelineJobs:batchCancel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,names",
                            "(google.longrunning.operation_info).response_type": "BatchCancelPipelineJobsResponse",
                            "(google.longrunning.operation_info).metadata_type": "BatchCancelPipelineJobsOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/pipelineJobs:batchCancel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,names"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "BatchCancelPipelineJobsResponse",
                                "metadata_type": "BatchCancelPipelineJobsOperationMetadata"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "BatchCancelPipelineJobsOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "CreateTrainingPipelineRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "trainingPipeline": {
                          "type": "TrainingPipeline",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetTrainingPipelineRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TrainingPipeline"
                          }
                        }
                      }
                    },
                    "ListTrainingPipelinesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListTrainingPipelinesResponse": {
                      "fields": {
                        "trainingPipelines": {
                          "rule": "repeated",
                          "type": "TrainingPipeline",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteTrainingPipelineRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TrainingPipeline"
                          }
                        }
                      }
                    },
                    "CancelTrainingPipelineRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TrainingPipeline"
                          }
                        }
                      }
                    },
                    "CreatePipelineJobRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "pipelineJob": {
                          "type": "PipelineJob",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "pipelineJobId": {
                          "type": "string",
                          "id": 3
                        },
                        "preflightValidations": {
                          "type": "bool",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "GetPipelineJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/PipelineJob"
                          }
                        }
                      }
                    },
                    "ListPipelineJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 6
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 7
                        }
                      }
                    },
                    "ListPipelineJobsResponse": {
                      "fields": {
                        "pipelineJobs": {
                          "rule": "repeated",
                          "type": "PipelineJob",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeletePipelineJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/PipelineJob"
                          }
                        }
                      }
                    },
                    "BatchDeletePipelineJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/PipelineJob"
                          }
                        },
                        "names": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/PipelineJob"
                          }
                        }
                      }
                    },
                    "BatchDeletePipelineJobsResponse": {
                      "fields": {
                        "pipelineJobs": {
                          "rule": "repeated",
                          "type": "PipelineJob",
                          "id": 1
                        }
                      }
                    },
                    "CancelPipelineJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/PipelineJob"
                          }
                        }
                      }
                    },
                    "BatchCancelPipelineJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/PipelineJob"
                          }
                        },
                        "names": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/PipelineJob"
                          }
                        }
                      }
                    },
                    "BatchCancelPipelineJobsResponse": {
                      "fields": {
                        "pipelineJobs": {
                          "rule": "repeated",
                          "type": "PipelineJob",
                          "id": 1
                        }
                      }
                    },
                    "TrainingPipeline": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/TrainingPipeline",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/trainingPipelines/{training_pipeline}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "inputDataConfig": {
                          "type": "InputDataConfig",
                          "id": 3
                        },
                        "trainingTaskDefinition": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "trainingTaskInputs": {
                          "type": "google.protobuf.Value",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "trainingTaskMetadata": {
                          "type": "google.protobuf.Value",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "modelToUpload": {
                          "type": "Model",
                          "id": 7
                        },
                        "modelId": {
                          "type": "string",
                          "id": 22,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "parentModel": {
                          "type": "string",
                          "id": 21,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "state": {
                          "type": "PipelineState",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 15
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 18
                        }
                      }
                    },
                    "InputDataConfig": {
                      "oneofs": {
                        "split": {
                          "oneof": [
                            "fractionSplit",
                            "filterSplit",
                            "predefinedSplit",
                            "timestampSplit",
                            "stratifiedSplit"
                          ]
                        },
                        "destination": {
                          "oneof": [
                            "gcsDestination",
                            "bigqueryDestination"
                          ]
                        }
                      },
                      "fields": {
                        "fractionSplit": {
                          "type": "FractionSplit",
                          "id": 2
                        },
                        "filterSplit": {
                          "type": "FilterSplit",
                          "id": 3
                        },
                        "predefinedSplit": {
                          "type": "PredefinedSplit",
                          "id": 4
                        },
                        "timestampSplit": {
                          "type": "TimestampSplit",
                          "id": 5
                        },
                        "stratifiedSplit": {
                          "type": "StratifiedSplit",
                          "id": 12
                        },
                        "gcsDestination": {
                          "type": "GcsDestination",
                          "id": 8
                        },
                        "bigqueryDestination": {
                          "type": "BigQueryDestination",
                          "id": 10
                        },
                        "datasetId": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "annotationsFilter": {
                          "type": "string",
                          "id": 6
                        },
                        "annotationSchemaUri": {
                          "type": "string",
                          "id": 9
                        },
                        "savedQueryId": {
                          "type": "string",
                          "id": 7
                        },
                        "persistMlUseAssignment": {
                          "type": "bool",
                          "id": 11
                        }
                      }
                    },
                    "FractionSplit": {
                      "fields": {
                        "trainingFraction": {
                          "type": "double",
                          "id": 1
                        },
                        "validationFraction": {
                          "type": "double",
                          "id": 2
                        },
                        "testFraction": {
                          "type": "double",
                          "id": 3
                        }
                      }
                    },
                    "FilterSplit": {
                      "fields": {
                        "trainingFilter": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "validationFilter": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "testFilter": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "PredefinedSplit": {
                      "fields": {
                        "key": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "TimestampSplit": {
                      "fields": {
                        "trainingFraction": {
                          "type": "double",
                          "id": 1
                        },
                        "validationFraction": {
                          "type": "double",
                          "id": 2
                        },
                        "testFraction": {
                          "type": "double",
                          "id": 3
                        },
                        "key": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "StratifiedSplit": {
                      "fields": {
                        "trainingFraction": {
                          "type": "double",
                          "id": 1
                        },
                        "validationFraction": {
                          "type": "double",
                          "id": 2
                        },
                        "testFraction": {
                          "type": "double",
                          "id": 3
                        },
                        "key": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "PredictionService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "Predict": {
                          "requestType": "PredictRequest",
                          "responseType": "PredictResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{endpoint=projects/*/locations/*/endpoints/*}:predict",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1beta1/{endpoint=projects/*/locations/*/publishers/*/models/*}:predict",
                            "(google.api.http).additional_bindings.body": "*",
                            "(google.api.method_signature)": "endpoint,instances,parameters"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{endpoint=projects/*/locations/*/endpoints/*}:predict",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v1beta1/{endpoint=projects/*/locations/*/publishers/*/models/*}:predict",
                                  "body": "*"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "endpoint,instances,parameters"
                            }
                          ]
                        },
                        "RawPredict": {
                          "requestType": "RawPredictRequest",
                          "responseType": "google.api.HttpBody",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{endpoint=projects/*/locations/*/endpoints/*}:rawPredict",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1beta1/{endpoint=projects/*/locations/*/publishers/*/models/*}:rawPredict",
                            "(google.api.http).additional_bindings.body": "*",
                            "(google.api.method_signature)": "endpoint,http_body"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{endpoint=projects/*/locations/*/endpoints/*}:rawPredict",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v1beta1/{endpoint=projects/*/locations/*/publishers/*/models/*}:rawPredict",
                                  "body": "*"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "endpoint,http_body"
                            }
                          ]
                        },
                        "DirectPredict": {
                          "requestType": "DirectPredictRequest",
                          "responseType": "DirectPredictResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{endpoint=projects/*/locations/*/endpoints/*}:directPredict",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{endpoint=projects/*/locations/*/endpoints/*}:directPredict",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "DirectRawPredict": {
                          "requestType": "DirectRawPredictRequest",
                          "responseType": "DirectRawPredictResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{endpoint=projects/*/locations/*/endpoints/*}:directRawPredict",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{endpoint=projects/*/locations/*/endpoints/*}:directRawPredict",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "StreamDirectPredict": {
                          "requestType": "StreamDirectPredictRequest",
                          "requestStream": true,
                          "responseType": "StreamDirectPredictResponse",
                          "responseStream": true
                        },
                        "StreamDirectRawPredict": {
                          "requestType": "StreamDirectRawPredictRequest",
                          "requestStream": true,
                          "responseType": "StreamDirectRawPredictResponse",
                          "responseStream": true
                        },
                        "StreamingPredict": {
                          "requestType": "StreamingPredictRequest",
                          "requestStream": true,
                          "responseType": "StreamingPredictResponse",
                          "responseStream": true
                        },
                        "ServerStreamingPredict": {
                          "requestType": "StreamingPredictRequest",
                          "responseType": "StreamingPredictResponse",
                          "responseStream": true,
                          "options": {
                            "(google.api.http).post": "/v1beta1/{endpoint=projects/*/locations/*/endpoints/*}:serverStreamingPredict",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1beta1/{endpoint=projects/*/locations/*/publishers/*/models/*}:serverStreamingPredict",
                            "(google.api.http).additional_bindings.body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{endpoint=projects/*/locations/*/endpoints/*}:serverStreamingPredict",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v1beta1/{endpoint=projects/*/locations/*/publishers/*/models/*}:serverStreamingPredict",
                                  "body": "*"
                                }
                              }
                            }
                          ]
                        },
                        "StreamingRawPredict": {
                          "requestType": "StreamingRawPredictRequest",
                          "requestStream": true,
                          "responseType": "StreamingRawPredictResponse",
                          "responseStream": true
                        },
                        "Explain": {
                          "requestType": "ExplainRequest",
                          "responseType": "ExplainResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{endpoint=projects/*/locations/*/endpoints/*}:explain",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "endpoint,instances,parameters,deployed_model_id"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{endpoint=projects/*/locations/*/endpoints/*}:explain",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "endpoint,instances,parameters,deployed_model_id"
                            }
                          ]
                        },
                        "CountTokens": {
                          "requestType": "CountTokensRequest",
                          "responseType": "CountTokensResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{endpoint=projects/*/locations/*/endpoints/*}:countTokens",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1beta1/{endpoint=projects/*/locations/*/publishers/*/models/*}:countTokens",
                            "(google.api.http).additional_bindings.body": "*",
                            "(google.api.method_signature)": "endpoint,instances"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{endpoint=projects/*/locations/*/endpoints/*}:countTokens",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v1beta1/{endpoint=projects/*/locations/*/publishers/*/models/*}:countTokens",
                                  "body": "*"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "endpoint,instances"
                            }
                          ]
                        },
                        "GenerateContent": {
                          "requestType": "GenerateContentRequest",
                          "responseType": "GenerateContentResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{model=projects/*/locations/*/endpoints/*}:generateContent",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1beta1/{model=projects/*/locations/*/publishers/*/models/*}:generateContent",
                            "(google.api.http).additional_bindings.body": "*",
                            "(google.api.method_signature)": "model,contents"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{model=projects/*/locations/*/endpoints/*}:generateContent",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v1beta1/{model=projects/*/locations/*/publishers/*/models/*}:generateContent",
                                  "body": "*"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "model,contents"
                            }
                          ]
                        },
                        "StreamGenerateContent": {
                          "requestType": "GenerateContentRequest",
                          "responseType": "GenerateContentResponse",
                          "responseStream": true,
                          "options": {
                            "(google.api.http).post": "/v1beta1/{model=projects/*/locations/*/endpoints/*}:streamGenerateContent",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1beta1/{model=projects/*/locations/*/publishers/*/models/*}:streamGenerateContent",
                            "(google.api.http).additional_bindings.body": "*",
                            "(google.api.method_signature)": "model,contents"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{model=projects/*/locations/*/endpoints/*}:streamGenerateContent",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v1beta1/{model=projects/*/locations/*/publishers/*/models/*}:streamGenerateContent",
                                  "body": "*"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "model,contents"
                            }
                          ]
                        }
                      }
                    },
                    "PredictRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "instances": {
                          "rule": "repeated",
                          "type": "google.protobuf.Value",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "parameters": {
                          "type": "google.protobuf.Value",
                          "id": 3
                        }
                      }
                    },
                    "PredictResponse": {
                      "fields": {
                        "predictions": {
                          "rule": "repeated",
                          "type": "google.protobuf.Value",
                          "id": 1
                        },
                        "deployedModelId": {
                          "type": "string",
                          "id": 2
                        },
                        "model": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "modelVersionId": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "modelDisplayName": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "metadata": {
                          "type": "google.protobuf.Value",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "RawPredictRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "httpBody": {
                          "type": "google.api.HttpBody",
                          "id": 2
                        }
                      }
                    },
                    "DirectPredictRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "inputs": {
                          "rule": "repeated",
                          "type": "Tensor",
                          "id": 2
                        },
                        "parameters": {
                          "type": "Tensor",
                          "id": 3
                        }
                      }
                    },
                    "DirectPredictResponse": {
                      "fields": {
                        "outputs": {
                          "rule": "repeated",
                          "type": "Tensor",
                          "id": 1
                        },
                        "parameters": {
                          "type": "Tensor",
                          "id": 2
                        }
                      }
                    },
                    "DirectRawPredictRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "methodName": {
                          "type": "string",
                          "id": 2
                        },
                        "input": {
                          "type": "bytes",
                          "id": 3
                        }
                      }
                    },
                    "DirectRawPredictResponse": {
                      "fields": {
                        "output": {
                          "type": "bytes",
                          "id": 1
                        }
                      }
                    },
                    "StreamDirectPredictRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "inputs": {
                          "rule": "repeated",
                          "type": "Tensor",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "parameters": {
                          "type": "Tensor",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "StreamDirectPredictResponse": {
                      "fields": {
                        "outputs": {
                          "rule": "repeated",
                          "type": "Tensor",
                          "id": 1
                        },
                        "parameters": {
                          "type": "Tensor",
                          "id": 2
                        }
                      }
                    },
                    "StreamDirectRawPredictRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "methodName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "input": {
                          "type": "bytes",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "StreamDirectRawPredictResponse": {
                      "fields": {
                        "output": {
                          "type": "bytes",
                          "id": 1
                        }
                      }
                    },
                    "StreamingPredictRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "inputs": {
                          "rule": "repeated",
                          "type": "Tensor",
                          "id": 2
                        },
                        "parameters": {
                          "type": "Tensor",
                          "id": 3
                        }
                      }
                    },
                    "StreamingPredictResponse": {
                      "fields": {
                        "outputs": {
                          "rule": "repeated",
                          "type": "Tensor",
                          "id": 1
                        },
                        "parameters": {
                          "type": "Tensor",
                          "id": 2
                        }
                      }
                    },
                    "StreamingRawPredictRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "methodName": {
                          "type": "string",
                          "id": 2
                        },
                        "input": {
                          "type": "bytes",
                          "id": 3
                        }
                      }
                    },
                    "StreamingRawPredictResponse": {
                      "fields": {
                        "output": {
                          "type": "bytes",
                          "id": 1
                        }
                      }
                    },
                    "ExplainRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "instances": {
                          "rule": "repeated",
                          "type": "google.protobuf.Value",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "parameters": {
                          "type": "google.protobuf.Value",
                          "id": 4
                        },
                        "explanationSpecOverride": {
                          "type": "ExplanationSpecOverride",
                          "id": 5
                        },
                        "concurrentExplanationSpecOverride": {
                          "keyType": "string",
                          "type": "ExplanationSpecOverride",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "deployedModelId": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ExplainResponse": {
                      "fields": {
                        "explanations": {
                          "rule": "repeated",
                          "type": "Explanation",
                          "id": 1
                        },
                        "concurrentExplanations": {
                          "keyType": "string",
                          "type": "ConcurrentExplanation",
                          "id": 4
                        },
                        "deployedModelId": {
                          "type": "string",
                          "id": 2
                        },
                        "predictions": {
                          "rule": "repeated",
                          "type": "google.protobuf.Value",
                          "id": 3
                        }
                      },
                      "nested": {
                        "ConcurrentExplanation": {
                          "fields": {
                            "explanations": {
                              "rule": "repeated",
                              "type": "Explanation",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "CountTokensRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "model": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "instances": {
                          "rule": "repeated",
                          "type": "google.protobuf.Value",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "contents": {
                          "rule": "repeated",
                          "type": "Content",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CountTokensResponse": {
                      "fields": {
                        "totalTokens": {
                          "type": "int32",
                          "id": 1
                        },
                        "totalBillableCharacters": {
                          "type": "int32",
                          "id": 2
                        }
                      }
                    },
                    "GenerateContentRequest": {
                      "fields": {
                        "model": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "contents": {
                          "rule": "repeated",
                          "type": "Content",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "tools": {
                          "rule": "repeated",
                          "type": "Tool",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "safetySettings": {
                          "rule": "repeated",
                          "type": "SafetySetting",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "generationConfig": {
                          "type": "GenerationConfig",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "GenerateContentResponse": {
                      "fields": {
                        "candidates": {
                          "rule": "repeated",
                          "type": "Candidate",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "promptFeedback": {
                          "type": "PromptFeedback",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "usageMetadata": {
                          "type": "UsageMetadata",
                          "id": 4
                        }
                      },
                      "nested": {
                        "PromptFeedback": {
                          "fields": {
                            "blockReason": {
                              "type": "BlockedReason",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "safetyRatings": {
                              "rule": "repeated",
                              "type": "SafetyRating",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "blockReasonMessage": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          },
                          "nested": {
                            "BlockedReason": {
                              "values": {
                                "BLOCKED_REASON_UNSPECIFIED": 0,
                                "SAFETY": 1,
                                "OTHER": 2
                              }
                            }
                          }
                        },
                        "UsageMetadata": {
                          "fields": {
                            "promptTokenCount": {
                              "type": "int32",
                              "id": 1
                            },
                            "candidatesTokenCount": {
                              "type": "int32",
                              "id": 2
                            },
                            "totalTokenCount": {
                              "type": "int32",
                              "id": 3
                            }
                          }
                        }
                      }
                    },
                    "Schedule": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Schedule",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/schedules/{schedule}"
                      },
                      "oneofs": {
                        "timeSpecification": {
                          "oneof": [
                            "cron"
                          ]
                        },
                        "request": {
                          "oneof": [
                            "createPipelineJobRequest"
                          ]
                        }
                      },
                      "fields": {
                        "cron": {
                          "type": "string",
                          "id": 10
                        },
                        "createPipelineJobRequest": {
                          "type": "CreatePipelineJobRequest",
                          "id": 14
                        },
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "maxRunCount": {
                          "type": "int64",
                          "id": 16,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "startedRunCount": {
                          "type": "int64",
                          "id": 17,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 19,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "nextRunTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "lastPauseTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "lastResumeTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "maxConcurrentRunCount": {
                          "type": "int64",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "allowQueueing": {
                          "type": "bool",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "catchUp": {
                          "type": "bool",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "lastScheduledRunResponse": {
                          "type": "RunResponse",
                          "id": 18,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "RunResponse": {
                          "fields": {
                            "scheduledRunTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 1
                            },
                            "runResponse": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "ACTIVE": 1,
                            "PAUSED": 2,
                            "COMPLETED": 3
                          }
                        }
                      }
                    },
                    "ScheduleService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateSchedule": {
                          "requestType": "CreateScheduleRequest",
                          "responseType": "Schedule",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/schedules",
                            "(google.api.http).body": "schedule",
                            "(google.api.method_signature)": "parent,schedule"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/schedules",
                                "body": "schedule"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,schedule"
                            }
                          ]
                        },
                        "DeleteSchedule": {
                          "requestType": "DeleteScheduleRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/schedules/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/schedules/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetSchedule": {
                          "requestType": "GetScheduleRequest",
                          "responseType": "Schedule",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/schedules/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/schedules/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListSchedules": {
                          "requestType": "ListSchedulesRequest",
                          "responseType": "ListSchedulesResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/schedules",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/schedules"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "PauseSchedule": {
                          "requestType": "PauseScheduleRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{name=projects/*/locations/*/schedules/*}:pause",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{name=projects/*/locations/*/schedules/*}:pause",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ResumeSchedule": {
                          "requestType": "ResumeScheduleRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{name=projects/*/locations/*/schedules/*}:resume",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name,catch_up"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{name=projects/*/locations/*/schedules/*}:resume",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.api.method_signature)": "name,catch_up"
                            }
                          ]
                        },
                        "UpdateSchedule": {
                          "requestType": "UpdateScheduleRequest",
                          "responseType": "Schedule",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{schedule.name=projects/*/locations/*/schedules/*}",
                            "(google.api.http).body": "schedule",
                            "(google.api.method_signature)": "schedule,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{schedule.name=projects/*/locations/*/schedules/*}",
                                "body": "schedule"
                              }
                            },
                            {
                              "(google.api.method_signature)": "schedule,update_mask"
                            }
                          ]
                        }
                      }
                    },
                    "CreateScheduleRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "schedule": {
                          "type": "Schedule",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetScheduleRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Schedule"
                          }
                        }
                      }
                    },
                    "ListSchedulesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ListSchedulesResponse": {
                      "fields": {
                        "schedules": {
                          "rule": "repeated",
                          "type": "Schedule",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteScheduleRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Schedule"
                          }
                        }
                      }
                    },
                    "PauseScheduleRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Schedule"
                          }
                        }
                      }
                    },
                    "ResumeScheduleRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Schedule"
                          }
                        },
                        "catchUp": {
                          "type": "bool",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "UpdateScheduleRequest": {
                      "fields": {
                        "schedule": {
                          "type": "Schedule",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "schema": {
                      "options": {
                        "csharp_namespace": "Google.Cloud.AIPlatform.V1Beta1.Schema",
                        "go_package": "cloud.google.com/go/aiplatform/apiv1beta1/schema/schemapb;schemapb",
                        "java_multiple_files": true,
                        "java_outer_classname": "DatasetMetadataProto",
                        "java_package": "com.google.cloud.aiplatform.v1beta1.schema",
                        "php_namespace": "Google\\Cloud\\AIPlatform\\V1beta1\\Schema",
                        "ruby_package": "Google::Cloud::AIPlatform::V1beta1::Schema"
                      },
                      "nested": {
                        "ImageClassificationAnnotation": {
                          "fields": {
                            "annotationSpecId": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "ImageBoundingBoxAnnotation": {
                          "fields": {
                            "annotationSpecId": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2
                            },
                            "xMin": {
                              "type": "double",
                              "id": 3
                            },
                            "xMax": {
                              "type": "double",
                              "id": 4
                            },
                            "yMin": {
                              "type": "double",
                              "id": 5
                            },
                            "yMax": {
                              "type": "double",
                              "id": 6
                            }
                          }
                        },
                        "ImageSegmentationAnnotation": {
                          "oneofs": {
                            "annotation": {
                              "oneof": [
                                "maskAnnotation",
                                "polygonAnnotation",
                                "polylineAnnotation"
                              ]
                            }
                          },
                          "fields": {
                            "maskAnnotation": {
                              "type": "MaskAnnotation",
                              "id": 3
                            },
                            "polygonAnnotation": {
                              "type": "PolygonAnnotation",
                              "id": 4
                            },
                            "polylineAnnotation": {
                              "type": "PolylineAnnotation",
                              "id": 5
                            }
                          },
                          "nested": {
                            "MaskAnnotation": {
                              "fields": {
                                "maskGcsUri": {
                                  "type": "string",
                                  "id": 1
                                },
                                "annotationSpecColors": {
                                  "rule": "repeated",
                                  "type": "AnnotationSpecColor",
                                  "id": 2
                                }
                              }
                            },
                            "PolygonAnnotation": {
                              "fields": {
                                "vertexes": {
                                  "rule": "repeated",
                                  "type": "Vertex",
                                  "id": 1
                                },
                                "annotationSpecId": {
                                  "type": "string",
                                  "id": 2
                                },
                                "displayName": {
                                  "type": "string",
                                  "id": 3
                                }
                              }
                            },
                            "PolylineAnnotation": {
                              "fields": {
                                "vertexes": {
                                  "rule": "repeated",
                                  "type": "Vertex",
                                  "id": 1
                                },
                                "annotationSpecId": {
                                  "type": "string",
                                  "id": 2
                                },
                                "displayName": {
                                  "type": "string",
                                  "id": 3
                                }
                              }
                            }
                          }
                        },
                        "TextClassificationAnnotation": {
                          "fields": {
                            "annotationSpecId": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "TextExtractionAnnotation": {
                          "fields": {
                            "textSegment": {
                              "type": "TextSegment",
                              "id": 1
                            },
                            "annotationSpecId": {
                              "type": "string",
                              "id": 2
                            },
                            "displayName": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "TextSegment": {
                          "fields": {
                            "startOffset": {
                              "type": "uint64",
                              "id": 1
                            },
                            "endOffset": {
                              "type": "uint64",
                              "id": 2
                            },
                            "content": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "TextSentimentAnnotation": {
                          "fields": {
                            "sentiment": {
                              "type": "int32",
                              "id": 1
                            },
                            "sentimentMax": {
                              "type": "int32",
                              "id": 2
                            },
                            "annotationSpecId": {
                              "type": "string",
                              "id": 3
                            },
                            "displayName": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "VideoClassificationAnnotation": {
                          "fields": {
                            "timeSegment": {
                              "type": "TimeSegment",
                              "id": 1
                            },
                            "annotationSpecId": {
                              "type": "string",
                              "id": 2
                            },
                            "displayName": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "TimeSegment": {
                          "fields": {
                            "startTimeOffset": {
                              "type": "google.protobuf.Duration",
                              "id": 1
                            },
                            "endTimeOffset": {
                              "type": "google.protobuf.Duration",
                              "id": 2
                            }
                          }
                        },
                        "VideoObjectTrackingAnnotation": {
                          "fields": {
                            "timeOffset": {
                              "type": "google.protobuf.Duration",
                              "id": 1
                            },
                            "xMin": {
                              "type": "double",
                              "id": 2
                            },
                            "xMax": {
                              "type": "double",
                              "id": 3
                            },
                            "yMin": {
                              "type": "double",
                              "id": 4
                            },
                            "yMax": {
                              "type": "double",
                              "id": 5
                            },
                            "instanceId": {
                              "type": "int64",
                              "id": 6
                            },
                            "annotationSpecId": {
                              "type": "string",
                              "id": 7
                            },
                            "displayName": {
                              "type": "string",
                              "id": 8
                            }
                          }
                        },
                        "VideoActionRecognitionAnnotation": {
                          "fields": {
                            "timeSegment": {
                              "type": "TimeSegment",
                              "id": 1
                            },
                            "annotationSpecId": {
                              "type": "string",
                              "id": 2
                            },
                            "displayName": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "AnnotationSpecColor": {
                          "fields": {
                            "color": {
                              "type": "google.type.Color",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2
                            },
                            "id": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "Vertex": {
                          "fields": {
                            "x": {
                              "type": "double",
                              "id": 1
                            },
                            "y": {
                              "type": "double",
                              "id": 2
                            }
                          }
                        },
                        "ImageDataItem": {
                          "fields": {
                            "gcsUri": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "mimeType": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        },
                        "VideoDataItem": {
                          "fields": {
                            "gcsUri": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "mimeType": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        },
                        "TextDataItem": {
                          "fields": {
                            "gcsUri": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        },
                        "ImageDatasetMetadata": {
                          "fields": {
                            "dataItemSchemaUri": {
                              "type": "string",
                              "id": 1
                            },
                            "gcsBucket": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "TextDatasetMetadata": {
                          "fields": {
                            "dataItemSchemaUri": {
                              "type": "string",
                              "id": 1
                            },
                            "gcsBucket": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "VideoDatasetMetadata": {
                          "fields": {
                            "dataItemSchemaUri": {
                              "type": "string",
                              "id": 1
                            },
                            "gcsBucket": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "TablesDatasetMetadata": {
                          "fields": {
                            "inputConfig": {
                              "type": "InputConfig",
                              "id": 1
                            }
                          },
                          "nested": {
                            "InputConfig": {
                              "oneofs": {
                                "source": {
                                  "oneof": [
                                    "gcsSource",
                                    "bigquerySource"
                                  ]
                                }
                              },
                              "fields": {
                                "gcsSource": {
                                  "type": "GcsSource",
                                  "id": 1
                                },
                                "bigquerySource": {
                                  "type": "BigQuerySource",
                                  "id": 2
                                }
                              }
                            },
                            "GcsSource": {
                              "fields": {
                                "uri": {
                                  "rule": "repeated",
                                  "type": "string",
                                  "id": 1
                                }
                              }
                            },
                            "BigQuerySource": {
                              "fields": {
                                "uri": {
                                  "type": "string",
                                  "id": 1
                                }
                              }
                            }
                          }
                        },
                        "TimeSeriesDatasetMetadata": {
                          "fields": {
                            "inputConfig": {
                              "type": "InputConfig",
                              "id": 1
                            },
                            "timeSeriesIdentifierColumn": {
                              "type": "string",
                              "id": 2
                            },
                            "timeColumn": {
                              "type": "string",
                              "id": 3
                            }
                          },
                          "nested": {
                            "InputConfig": {
                              "oneofs": {
                                "source": {
                                  "oneof": [
                                    "gcsSource",
                                    "bigquerySource"
                                  ]
                                }
                              },
                              "fields": {
                                "gcsSource": {
                                  "type": "GcsSource",
                                  "id": 1
                                },
                                "bigquerySource": {
                                  "type": "BigQuerySource",
                                  "id": 2
                                }
                              }
                            },
                            "GcsSource": {
                              "fields": {
                                "uri": {
                                  "rule": "repeated",
                                  "type": "string",
                                  "id": 1
                                }
                              }
                            },
                            "BigQuerySource": {
                              "fields": {
                                "uri": {
                                  "type": "string",
                                  "id": 1
                                }
                              }
                            }
                          }
                        },
                        "predict": {
                          "nested": {
                            "instance": {
                              "options": {
                                "csharp_namespace": "Google.Cloud.AIPlatform.V1Beta1.Schema.Predict.Instance",
                                "go_package": "cloud.google.com/go/aiplatform/apiv1beta1/schema/predict/instance/instancepb;instancepb",
                                "java_multiple_files": true,
                                "java_outer_classname": "VideoObjectTrackingPredictionInstanceProto",
                                "java_package": "com.google.cloud.aiplatform.v1beta1.schema.predict.instance",
                                "php_namespace": "Google\\Cloud\\AIPlatform\\V1beta1\\Schema\\Predict\\Instance",
                                "ruby_package": "Google::Cloud::AIPlatform::V1beta1::Schema::Predict::Instance"
                              },
                              "nested": {
                                "ImageClassificationPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    }
                                  }
                                },
                                "ImageObjectDetectionPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    }
                                  }
                                },
                                "ImageSegmentationPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    }
                                  }
                                },
                                "TextClassificationPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    }
                                  }
                                },
                                "TextExtractionPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "key": {
                                      "type": "string",
                                      "id": 3
                                    }
                                  }
                                },
                                "TextSentimentPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    }
                                  }
                                },
                                "VideoActionRecognitionPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "timeSegmentStart": {
                                      "type": "string",
                                      "id": 3
                                    },
                                    "timeSegmentEnd": {
                                      "type": "string",
                                      "id": 4
                                    }
                                  }
                                },
                                "VideoClassificationPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "timeSegmentStart": {
                                      "type": "string",
                                      "id": 3
                                    },
                                    "timeSegmentEnd": {
                                      "type": "string",
                                      "id": 4
                                    }
                                  }
                                },
                                "VideoObjectTrackingPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "timeSegmentStart": {
                                      "type": "string",
                                      "id": 3
                                    },
                                    "timeSegmentEnd": {
                                      "type": "string",
                                      "id": 4
                                    }
                                  }
                                }
                              }
                            },
                            "params": {
                              "options": {
                                "csharp_namespace": "Google.Cloud.AIPlatform.V1Beta1.Schema.Predict.Params",
                                "go_package": "cloud.google.com/go/aiplatform/apiv1beta1/schema/predict/params/paramspb;paramspb",
                                "java_multiple_files": true,
                                "java_outer_classname": "VideoObjectTrackingPredictionParamsProto",
                                "java_package": "com.google.cloud.aiplatform.v1beta1.schema.predict.params",
                                "php_namespace": "Google\\Cloud\\AIPlatform\\V1beta1\\Schema\\Predict\\Params",
                                "ruby_package": "Google::Cloud::AIPlatform::V1beta1::Schema::Predict::Params"
                              },
                              "nested": {
                                "ImageClassificationPredictionParams": {
                                  "fields": {
                                    "confidenceThreshold": {
                                      "type": "float",
                                      "id": 1
                                    },
                                    "maxPredictions": {
                                      "type": "int32",
                                      "id": 2
                                    }
                                  }
                                },
                                "ImageObjectDetectionPredictionParams": {
                                  "fields": {
                                    "confidenceThreshold": {
                                      "type": "float",
                                      "id": 1
                                    },
                                    "maxPredictions": {
                                      "type": "int32",
                                      "id": 2
                                    }
                                  }
                                },
                                "ImageSegmentationPredictionParams": {
                                  "fields": {
                                    "confidenceThreshold": {
                                      "type": "float",
                                      "id": 1
                                    }
                                  }
                                },
                                "VideoActionRecognitionPredictionParams": {
                                  "fields": {
                                    "confidenceThreshold": {
                                      "type": "float",
                                      "id": 1
                                    },
                                    "maxPredictions": {
                                      "type": "int32",
                                      "id": 2
                                    }
                                  }
                                },
                                "VideoClassificationPredictionParams": {
                                  "fields": {
                                    "confidenceThreshold": {
                                      "type": "float",
                                      "id": 1
                                    },
                                    "maxPredictions": {
                                      "type": "int32",
                                      "id": 2
                                    },
                                    "segmentClassification": {
                                      "type": "bool",
                                      "id": 3
                                    },
                                    "shotClassification": {
                                      "type": "bool",
                                      "id": 4
                                    },
                                    "oneSecIntervalClassification": {
                                      "type": "bool",
                                      "id": 5
                                    }
                                  }
                                },
                                "VideoObjectTrackingPredictionParams": {
                                  "fields": {
                                    "confidenceThreshold": {
                                      "type": "float",
                                      "id": 1
                                    },
                                    "maxPredictions": {
                                      "type": "int32",
                                      "id": 2
                                    },
                                    "minBoundingBoxSize": {
                                      "type": "float",
                                      "id": 3
                                    }
                                  }
                                }
                              }
                            },
                            "prediction": {
                              "options": {
                                "csharp_namespace": "Google.Cloud.AIPlatform.V1Beta1.Schema.Predict.Prediction",
                                "go_package": "cloud.google.com/go/aiplatform/apiv1beta1/schema/predict/prediction/predictionpb;predictionpb",
                                "java_multiple_files": true,
                                "java_outer_classname": "VideoObjectTrackingPredictionResultProto",
                                "java_package": "com.google.cloud.aiplatform.v1beta1.schema.predict.prediction",
                                "php_namespace": "Google\\Cloud\\AIPlatform\\V1beta1\\Schema\\Predict\\Prediction",
                                "ruby_package": "Google::Cloud::AIPlatform::V1beta1::Schema::Predict::Prediction"
                              },
                              "nested": {
                                "ClassificationPredictionResult": {
                                  "fields": {
                                    "ids": {
                                      "rule": "repeated",
                                      "type": "int64",
                                      "id": 1
                                    },
                                    "displayNames": {
                                      "rule": "repeated",
                                      "type": "string",
                                      "id": 2
                                    },
                                    "confidences": {
                                      "rule": "repeated",
                                      "type": "float",
                                      "id": 3
                                    }
                                  }
                                },
                                "ImageObjectDetectionPredictionResult": {
                                  "fields": {
                                    "ids": {
                                      "rule": "repeated",
                                      "type": "int64",
                                      "id": 1
                                    },
                                    "displayNames": {
                                      "rule": "repeated",
                                      "type": "string",
                                      "id": 2
                                    },
                                    "confidences": {
                                      "rule": "repeated",
                                      "type": "float",
                                      "id": 3
                                    },
                                    "bboxes": {
                                      "rule": "repeated",
                                      "type": "google.protobuf.ListValue",
                                      "id": 4
                                    }
                                  }
                                },
                                "ImageSegmentationPredictionResult": {
                                  "fields": {
                                    "categoryMask": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "confidenceMask": {
                                      "type": "string",
                                      "id": 2
                                    }
                                  }
                                },
                                "TabularClassificationPredictionResult": {
                                  "fields": {
                                    "classes": {
                                      "rule": "repeated",
                                      "type": "string",
                                      "id": 1
                                    },
                                    "scores": {
                                      "rule": "repeated",
                                      "type": "float",
                                      "id": 2
                                    }
                                  }
                                },
                                "TabularRegressionPredictionResult": {
                                  "fields": {
                                    "value": {
                                      "type": "float",
                                      "id": 1
                                    },
                                    "lowerBound": {
                                      "type": "float",
                                      "id": 2
                                    },
                                    "upperBound": {
                                      "type": "float",
                                      "id": 3
                                    }
                                  }
                                },
                                "TextExtractionPredictionResult": {
                                  "fields": {
                                    "ids": {
                                      "rule": "repeated",
                                      "type": "int64",
                                      "id": 1
                                    },
                                    "displayNames": {
                                      "rule": "repeated",
                                      "type": "string",
                                      "id": 2
                                    },
                                    "textSegmentStartOffsets": {
                                      "rule": "repeated",
                                      "type": "int64",
                                      "id": 3
                                    },
                                    "textSegmentEndOffsets": {
                                      "rule": "repeated",
                                      "type": "int64",
                                      "id": 4
                                    },
                                    "confidences": {
                                      "rule": "repeated",
                                      "type": "float",
                                      "id": 5
                                    }
                                  }
                                },
                                "TextSentimentPredictionResult": {
                                  "fields": {
                                    "sentiment": {
                                      "type": "int32",
                                      "id": 1
                                    }
                                  }
                                },
                                "TimeSeriesForecastingPredictionResult": {
                                  "fields": {
                                    "value": {
                                      "type": "float",
                                      "id": 1
                                    }
                                  }
                                },
                                "VideoActionRecognitionPredictionResult": {
                                  "fields": {
                                    "id": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "displayName": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "timeSegmentStart": {
                                      "type": "google.protobuf.Duration",
                                      "id": 4
                                    },
                                    "timeSegmentEnd": {
                                      "type": "google.protobuf.Duration",
                                      "id": 5
                                    },
                                    "confidence": {
                                      "type": "google.protobuf.FloatValue",
                                      "id": 6
                                    }
                                  }
                                },
                                "VideoClassificationPredictionResult": {
                                  "fields": {
                                    "id": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "displayName": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "type": {
                                      "type": "string",
                                      "id": 3
                                    },
                                    "timeSegmentStart": {
                                      "type": "google.protobuf.Duration",
                                      "id": 4
                                    },
                                    "timeSegmentEnd": {
                                      "type": "google.protobuf.Duration",
                                      "id": 5
                                    },
                                    "confidence": {
                                      "type": "google.protobuf.FloatValue",
                                      "id": 6
                                    }
                                  }
                                },
                                "VideoObjectTrackingPredictionResult": {
                                  "fields": {
                                    "id": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "displayName": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "timeSegmentStart": {
                                      "type": "google.protobuf.Duration",
                                      "id": 3
                                    },
                                    "timeSegmentEnd": {
                                      "type": "google.protobuf.Duration",
                                      "id": 4
                                    },
                                    "confidence": {
                                      "type": "google.protobuf.FloatValue",
                                      "id": 5
                                    },
                                    "frames": {
                                      "rule": "repeated",
                                      "type": "Frame",
                                      "id": 6
                                    }
                                  },
                                  "nested": {
                                    "Frame": {
                                      "fields": {
                                        "timeOffset": {
                                          "type": "google.protobuf.Duration",
                                          "id": 1
                                        },
                                        "xMin": {
                                          "type": "google.protobuf.FloatValue",
                                          "id": 2
                                        },
                                        "xMax": {
                                          "type": "google.protobuf.FloatValue",
                                          "id": 3
                                        },
                                        "yMin": {
                                          "type": "google.protobuf.FloatValue",
                                          "id": 4
                                        },
                                        "yMax": {
                                          "type": "google.protobuf.FloatValue",
                                          "id": 5
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "trainingjob": {
                          "nested": {
                            "definition": {
                              "options": {
                                "csharp_namespace": "Google.Cloud.AIPlatform.V1Beta1.Schema.TrainingJob.Definition",
                                "go_package": "cloud.google.com/go/aiplatform/apiv1beta1/schema/trainingjob/definition/definitionpb;definitionpb",
                                "java_multiple_files": true,
                                "java_outer_classname": "AutoMLVideoObjectTrackingProto",
                                "java_package": "com.google.cloud.aiplatform.v1beta1.schema.trainingjob.definition",
                                "php_namespace": "Google\\Cloud\\AIPlatform\\V1beta1\\Schema\\TrainingJob\\Definition",
                                "ruby_package": "Google::Cloud::AIPlatform::V1beta1::Schema::TrainingJob::Definition"
                              },
                              "nested": {
                                "AutoMlImageClassification": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlImageClassificationInputs",
                                      "id": 1
                                    },
                                    "metadata": {
                                      "type": "AutoMlImageClassificationMetadata",
                                      "id": 2
                                    }
                                  }
                                },
                                "AutoMlImageClassificationInputs": {
                                  "fields": {
                                    "modelType": {
                                      "type": "ModelType",
                                      "id": 1
                                    },
                                    "baseModelId": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "budgetMilliNodeHours": {
                                      "type": "int64",
                                      "id": 3
                                    },
                                    "disableEarlyStopping": {
                                      "type": "bool",
                                      "id": 4
                                    },
                                    "multiLabel": {
                                      "type": "bool",
                                      "id": 5
                                    }
                                  },
                                  "nested": {
                                    "ModelType": {
                                      "values": {
                                        "MODEL_TYPE_UNSPECIFIED": 0,
                                        "CLOUD": 1,
                                        "MOBILE_TF_LOW_LATENCY_1": 2,
                                        "MOBILE_TF_VERSATILE_1": 3,
                                        "MOBILE_TF_HIGH_ACCURACY_1": 4
                                      }
                                    }
                                  }
                                },
                                "AutoMlImageClassificationMetadata": {
                                  "fields": {
                                    "costMilliNodeHours": {
                                      "type": "int64",
                                      "id": 1
                                    },
                                    "successfulStopReason": {
                                      "type": "SuccessfulStopReason",
                                      "id": 2
                                    }
                                  },
                                  "nested": {
                                    "SuccessfulStopReason": {
                                      "values": {
                                        "SUCCESSFUL_STOP_REASON_UNSPECIFIED": 0,
                                        "BUDGET_REACHED": 1,
                                        "MODEL_CONVERGED": 2
                                      }
                                    }
                                  }
                                },
                                "AutoMlImageObjectDetection": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlImageObjectDetectionInputs",
                                      "id": 1
                                    },
                                    "metadata": {
                                      "type": "AutoMlImageObjectDetectionMetadata",
                                      "id": 2
                                    }
                                  }
                                },
                                "AutoMlImageObjectDetectionInputs": {
                                  "fields": {
                                    "modelType": {
                                      "type": "ModelType",
                                      "id": 1
                                    },
                                    "budgetMilliNodeHours": {
                                      "type": "int64",
                                      "id": 2
                                    },
                                    "disableEarlyStopping": {
                                      "type": "bool",
                                      "id": 3
                                    }
                                  },
                                  "nested": {
                                    "ModelType": {
                                      "values": {
                                        "MODEL_TYPE_UNSPECIFIED": 0,
                                        "CLOUD_HIGH_ACCURACY_1": 1,
                                        "CLOUD_LOW_LATENCY_1": 2,
                                        "MOBILE_TF_LOW_LATENCY_1": 3,
                                        "MOBILE_TF_VERSATILE_1": 4,
                                        "MOBILE_TF_HIGH_ACCURACY_1": 5
                                      }
                                    }
                                  }
                                },
                                "AutoMlImageObjectDetectionMetadata": {
                                  "fields": {
                                    "costMilliNodeHours": {
                                      "type": "int64",
                                      "id": 1
                                    },
                                    "successfulStopReason": {
                                      "type": "SuccessfulStopReason",
                                      "id": 2
                                    }
                                  },
                                  "nested": {
                                    "SuccessfulStopReason": {
                                      "values": {
                                        "SUCCESSFUL_STOP_REASON_UNSPECIFIED": 0,
                                        "BUDGET_REACHED": 1,
                                        "MODEL_CONVERGED": 2
                                      }
                                    }
                                  }
                                },
                                "AutoMlImageSegmentation": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlImageSegmentationInputs",
                                      "id": 1
                                    },
                                    "metadata": {
                                      "type": "AutoMlImageSegmentationMetadata",
                                      "id": 2
                                    }
                                  }
                                },
                                "AutoMlImageSegmentationInputs": {
                                  "fields": {
                                    "modelType": {
                                      "type": "ModelType",
                                      "id": 1
                                    },
                                    "budgetMilliNodeHours": {
                                      "type": "int64",
                                      "id": 2
                                    },
                                    "baseModelId": {
                                      "type": "string",
                                      "id": 3
                                    }
                                  },
                                  "nested": {
                                    "ModelType": {
                                      "values": {
                                        "MODEL_TYPE_UNSPECIFIED": 0,
                                        "CLOUD_HIGH_ACCURACY_1": 1,
                                        "CLOUD_LOW_ACCURACY_1": 2,
                                        "MOBILE_TF_LOW_LATENCY_1": 3
                                      }
                                    }
                                  }
                                },
                                "AutoMlImageSegmentationMetadata": {
                                  "fields": {
                                    "costMilliNodeHours": {
                                      "type": "int64",
                                      "id": 1
                                    },
                                    "successfulStopReason": {
                                      "type": "SuccessfulStopReason",
                                      "id": 2
                                    }
                                  },
                                  "nested": {
                                    "SuccessfulStopReason": {
                                      "values": {
                                        "SUCCESSFUL_STOP_REASON_UNSPECIFIED": 0,
                                        "BUDGET_REACHED": 1,
                                        "MODEL_CONVERGED": 2
                                      }
                                    }
                                  }
                                },
                                "AutoMlTables": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlTablesInputs",
                                      "id": 1
                                    },
                                    "metadata": {
                                      "type": "AutoMlTablesMetadata",
                                      "id": 2
                                    }
                                  }
                                },
                                "AutoMlTablesInputs": {
                                  "oneofs": {
                                    "additionalOptimizationObjectiveConfig": {
                                      "oneof": [
                                        "optimizationObjectiveRecallValue",
                                        "optimizationObjectivePrecisionValue"
                                      ]
                                    }
                                  },
                                  "fields": {
                                    "optimizationObjectiveRecallValue": {
                                      "type": "float",
                                      "id": 5
                                    },
                                    "optimizationObjectivePrecisionValue": {
                                      "type": "float",
                                      "id": 6
                                    },
                                    "predictionType": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "targetColumn": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "transformations": {
                                      "rule": "repeated",
                                      "type": "Transformation",
                                      "id": 3
                                    },
                                    "optimizationObjective": {
                                      "type": "string",
                                      "id": 4
                                    },
                                    "trainBudgetMilliNodeHours": {
                                      "type": "int64",
                                      "id": 7
                                    },
                                    "disableEarlyStopping": {
                                      "type": "bool",
                                      "id": 8
                                    },
                                    "weightColumnName": {
                                      "type": "string",
                                      "id": 9
                                    },
                                    "exportEvaluatedDataItemsConfig": {
                                      "type": "ExportEvaluatedDataItemsConfig",
                                      "id": 10
                                    },
                                    "additionalExperiments": {
                                      "rule": "repeated",
                                      "type": "string",
                                      "id": 11
                                    }
                                  },
                                  "nested": {
                                    "Transformation": {
                                      "oneofs": {
                                        "transformationDetail": {
                                          "oneof": [
                                            "auto",
                                            "numeric",
                                            "categorical",
                                            "timestamp",
                                            "text",
                                            "repeatedNumeric",
                                            "repeatedCategorical",
                                            "repeatedText"
                                          ]
                                        }
                                      },
                                      "fields": {
                                        "auto": {
                                          "type": "AutoTransformation",
                                          "id": 1
                                        },
                                        "numeric": {
                                          "type": "NumericTransformation",
                                          "id": 2
                                        },
                                        "categorical": {
                                          "type": "CategoricalTransformation",
                                          "id": 3
                                        },
                                        "timestamp": {
                                          "type": "TimestampTransformation",
                                          "id": 4
                                        },
                                        "text": {
                                          "type": "TextTransformation",
                                          "id": 5
                                        },
                                        "repeatedNumeric": {
                                          "type": "NumericArrayTransformation",
                                          "id": 6
                                        },
                                        "repeatedCategorical": {
                                          "type": "CategoricalArrayTransformation",
                                          "id": 7
                                        },
                                        "repeatedText": {
                                          "type": "TextArrayTransformation",
                                          "id": 8
                                        }
                                      },
                                      "nested": {
                                        "AutoTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            }
                                          }
                                        },
                                        "NumericTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            },
                                            "invalidValuesAllowed": {
                                              "type": "bool",
                                              "id": 2
                                            }
                                          }
                                        },
                                        "CategoricalTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            }
                                          }
                                        },
                                        "TimestampTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            },
                                            "timeFormat": {
                                              "type": "string",
                                              "id": 2
                                            },
                                            "invalidValuesAllowed": {
                                              "type": "bool",
                                              "id": 3
                                            }
                                          }
                                        },
                                        "TextTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            }
                                          }
                                        },
                                        "NumericArrayTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            },
                                            "invalidValuesAllowed": {
                                              "type": "bool",
                                              "id": 2
                                            }
                                          }
                                        },
                                        "CategoricalArrayTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            }
                                          }
                                        },
                                        "TextArrayTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "AutoMlTablesMetadata": {
                                  "fields": {
                                    "trainCostMilliNodeHours": {
                                      "type": "int64",
                                      "id": 1
                                    }
                                  }
                                },
                                "ExportEvaluatedDataItemsConfig": {
                                  "fields": {
                                    "destinationBigqueryUri": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "overrideExistingTable": {
                                      "type": "bool",
                                      "id": 2
                                    }
                                  }
                                },
                                "AutoMlTextClassification": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlTextClassificationInputs",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlTextClassificationInputs": {
                                  "fields": {
                                    "multiLabel": {
                                      "type": "bool",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlTextExtraction": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlTextExtractionInputs",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlTextExtractionInputs": {
                                  "fields": {}
                                },
                                "AutoMlTextSentiment": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlTextSentimentInputs",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlTextSentimentInputs": {
                                  "fields": {
                                    "sentimentMax": {
                                      "type": "int32",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlForecasting": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlForecastingInputs",
                                      "id": 1
                                    },
                                    "metadata": {
                                      "type": "AutoMlForecastingMetadata",
                                      "id": 2
                                    }
                                  }
                                },
                                "AutoMlForecastingInputs": {
                                  "fields": {
                                    "targetColumn": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "timeSeriesIdentifierColumn": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "timeColumn": {
                                      "type": "string",
                                      "id": 3
                                    },
                                    "transformations": {
                                      "rule": "repeated",
                                      "type": "Transformation",
                                      "id": 4
                                    },
                                    "optimizationObjective": {
                                      "type": "string",
                                      "id": 5
                                    },
                                    "trainBudgetMilliNodeHours": {
                                      "type": "int64",
                                      "id": 6
                                    },
                                    "weightColumn": {
                                      "type": "string",
                                      "id": 7
                                    },
                                    "timeSeriesAttributeColumns": {
                                      "rule": "repeated",
                                      "type": "string",
                                      "id": 19
                                    },
                                    "unavailableAtForecastColumns": {
                                      "rule": "repeated",
                                      "type": "string",
                                      "id": 20
                                    },
                                    "availableAtForecastColumns": {
                                      "rule": "repeated",
                                      "type": "string",
                                      "id": 21
                                    },
                                    "dataGranularity": {
                                      "type": "Granularity",
                                      "id": 22
                                    },
                                    "forecastHorizon": {
                                      "type": "int64",
                                      "id": 23
                                    },
                                    "contextWindow": {
                                      "type": "int64",
                                      "id": 24
                                    },
                                    "exportEvaluatedDataItemsConfig": {
                                      "type": "ExportEvaluatedDataItemsConfig",
                                      "id": 15
                                    },
                                    "quantiles": {
                                      "rule": "repeated",
                                      "type": "double",
                                      "id": 16
                                    },
                                    "validationOptions": {
                                      "type": "string",
                                      "id": 17
                                    },
                                    "additionalExperiments": {
                                      "rule": "repeated",
                                      "type": "string",
                                      "id": 25
                                    }
                                  },
                                  "nested": {
                                    "Transformation": {
                                      "oneofs": {
                                        "transformationDetail": {
                                          "oneof": [
                                            "auto",
                                            "numeric",
                                            "categorical",
                                            "timestamp",
                                            "text"
                                          ]
                                        }
                                      },
                                      "fields": {
                                        "auto": {
                                          "type": "AutoTransformation",
                                          "id": 1
                                        },
                                        "numeric": {
                                          "type": "NumericTransformation",
                                          "id": 2
                                        },
                                        "categorical": {
                                          "type": "CategoricalTransformation",
                                          "id": 3
                                        },
                                        "timestamp": {
                                          "type": "TimestampTransformation",
                                          "id": 4
                                        },
                                        "text": {
                                          "type": "TextTransformation",
                                          "id": 5
                                        }
                                      },
                                      "nested": {
                                        "AutoTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            }
                                          }
                                        },
                                        "NumericTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            }
                                          }
                                        },
                                        "CategoricalTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            }
                                          }
                                        },
                                        "TimestampTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            },
                                            "timeFormat": {
                                              "type": "string",
                                              "id": 2
                                            }
                                          }
                                        },
                                        "TextTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "Granularity": {
                                      "fields": {
                                        "unit": {
                                          "type": "string",
                                          "id": 1
                                        },
                                        "quantity": {
                                          "type": "int64",
                                          "id": 2
                                        }
                                      }
                                    }
                                  }
                                },
                                "AutoMlForecastingMetadata": {
                                  "fields": {
                                    "trainCostMilliNodeHours": {
                                      "type": "int64",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlVideoActionRecognition": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlVideoActionRecognitionInputs",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlVideoActionRecognitionInputs": {
                                  "fields": {
                                    "modelType": {
                                      "type": "ModelType",
                                      "id": 1
                                    }
                                  },
                                  "nested": {
                                    "ModelType": {
                                      "values": {
                                        "MODEL_TYPE_UNSPECIFIED": 0,
                                        "CLOUD": 1,
                                        "MOBILE_VERSATILE_1": 2,
                                        "MOBILE_JETSON_VERSATILE_1": 3,
                                        "MOBILE_CORAL_VERSATILE_1": 4
                                      }
                                    }
                                  }
                                },
                                "AutoMlVideoClassification": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlVideoClassificationInputs",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlVideoClassificationInputs": {
                                  "fields": {
                                    "modelType": {
                                      "type": "ModelType",
                                      "id": 1
                                    }
                                  },
                                  "nested": {
                                    "ModelType": {
                                      "values": {
                                        "MODEL_TYPE_UNSPECIFIED": 0,
                                        "CLOUD": 1,
                                        "MOBILE_VERSATILE_1": 2,
                                        "MOBILE_JETSON_VERSATILE_1": 3
                                      }
                                    }
                                  }
                                },
                                "AutoMlVideoObjectTracking": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlVideoObjectTrackingInputs",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlVideoObjectTrackingInputs": {
                                  "fields": {
                                    "modelType": {
                                      "type": "ModelType",
                                      "id": 1
                                    }
                                  },
                                  "nested": {
                                    "ModelType": {
                                      "values": {
                                        "MODEL_TYPE_UNSPECIFIED": 0,
                                        "CLOUD": 1,
                                        "MOBILE_VERSATILE_1": 2,
                                        "MOBILE_CORAL_VERSATILE_1": 3,
                                        "MOBILE_CORAL_LOW_LATENCY_1": 4,
                                        "MOBILE_JETSON_VERSATILE_1": 5,
                                        "MOBILE_JETSON_LOW_LATENCY_1": 6
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "SpecialistPool": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/SpecialistPool",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/specialistPools/{specialist_pool}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "specialistManagersCount": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "specialistManagerEmails": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 4
                        },
                        "pendingDataLabelingJobs": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "specialistWorkerEmails": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 7
                        }
                      }
                    },
                    "SpecialistPoolService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateSpecialistPool": {
                          "requestType": "CreateSpecialistPoolRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/specialistPools",
                            "(google.api.http).body": "specialist_pool",
                            "(google.api.method_signature)": "parent,specialist_pool",
                            "(google.longrunning.operation_info).response_type": "SpecialistPool",
                            "(google.longrunning.operation_info).metadata_type": "CreateSpecialistPoolOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/specialistPools",
                                "body": "specialist_pool"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,specialist_pool"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "SpecialistPool",
                                "metadata_type": "CreateSpecialistPoolOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetSpecialistPool": {
                          "requestType": "GetSpecialistPoolRequest",
                          "responseType": "SpecialistPool",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/specialistPools/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/specialistPools/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListSpecialistPools": {
                          "requestType": "ListSpecialistPoolsRequest",
                          "responseType": "ListSpecialistPoolsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/specialistPools",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/specialistPools"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteSpecialistPool": {
                          "requestType": "DeleteSpecialistPoolRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/specialistPools/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/specialistPools/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateSpecialistPool": {
                          "requestType": "UpdateSpecialistPoolRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{specialist_pool.name=projects/*/locations/*/specialistPools/*}",
                            "(google.api.http).body": "specialist_pool",
                            "(google.api.method_signature)": "specialist_pool,update_mask",
                            "(google.longrunning.operation_info).response_type": "SpecialistPool",
                            "(google.longrunning.operation_info).metadata_type": "UpdateSpecialistPoolOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{specialist_pool.name=projects/*/locations/*/specialistPools/*}",
                                "body": "specialist_pool"
                              }
                            },
                            {
                              "(google.api.method_signature)": "specialist_pool,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "SpecialistPool",
                                "metadata_type": "UpdateSpecialistPoolOperationMetadata"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "CreateSpecialistPoolRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "specialistPool": {
                          "type": "SpecialistPool",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CreateSpecialistPoolOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "GetSpecialistPoolRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/SpecialistPool"
                          }
                        }
                      }
                    },
                    "ListSpecialistPoolsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 4
                        }
                      }
                    },
                    "ListSpecialistPoolsResponse": {
                      "fields": {
                        "specialistPools": {
                          "rule": "repeated",
                          "type": "SpecialistPool",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteSpecialistPoolRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/SpecialistPool"
                          }
                        },
                        "force": {
                          "type": "bool",
                          "id": 2
                        }
                      }
                    },
                    "UpdateSpecialistPoolRequest": {
                      "fields": {
                        "specialistPool": {
                          "type": "SpecialistPool",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UpdateSpecialistPoolOperationMetadata": {
                      "fields": {
                        "specialistPool": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/SpecialistPool"
                          }
                        },
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 2
                        }
                      }
                    },
                    "Tensorboard": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Tensorboard",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/tensorboards/{tensorboard}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 11
                        },
                        "blobStoragePathPrefix": {
                          "type": "string",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "runCount": {
                          "type": "int32",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 8
                        },
                        "etag": {
                          "type": "string",
                          "id": 9
                        },
                        "isDefault": {
                          "type": "bool",
                          "id": 12
                        }
                      }
                    },
                    "TimeSeriesData": {
                      "fields": {
                        "tensorboardTimeSeriesId": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "valueType": {
                          "type": "TensorboardTimeSeries.ValueType",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "values": {
                          "rule": "repeated",
                          "type": "TimeSeriesDataPoint",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "TimeSeriesDataPoint": {
                      "oneofs": {
                        "value": {
                          "oneof": [
                            "scalar",
                            "tensor",
                            "blobs"
                          ]
                        }
                      },
                      "fields": {
                        "scalar": {
                          "type": "Scalar",
                          "id": 3
                        },
                        "tensor": {
                          "type": "TensorboardTensor",
                          "id": 4
                        },
                        "blobs": {
                          "type": "TensorboardBlobSequence",
                          "id": 5
                        },
                        "wallTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1
                        },
                        "step": {
                          "type": "int64",
                          "id": 2
                        }
                      }
                    },
                    "Scalar": {
                      "fields": {
                        "value": {
                          "type": "double",
                          "id": 1
                        }
                      }
                    },
                    "TensorboardTensor": {
                      "fields": {
                        "value": {
                          "type": "bytes",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "versionNumber": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "TensorboardBlobSequence": {
                      "fields": {
                        "values": {
                          "rule": "repeated",
                          "type": "TensorboardBlob",
                          "id": 1
                        }
                      }
                    },
                    "TensorboardBlob": {
                      "fields": {
                        "id": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "data": {
                          "type": "bytes",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "TensorboardTimeSeries": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/TensorboardTimeSeries",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "valueType": {
                          "type": "ValueType",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 7
                        },
                        "pluginName": {
                          "type": "string",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "pluginData": {
                          "type": "bytes",
                          "id": 9
                        },
                        "metadata": {
                          "type": "Metadata",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "Metadata": {
                          "fields": {
                            "maxStep": {
                              "type": "int64",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "maxWallTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "maxBlobSequenceLength": {
                              "type": "int64",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        },
                        "ValueType": {
                          "values": {
                            "VALUE_TYPE_UNSPECIFIED": 0,
                            "SCALAR": 1,
                            "TENSOR": 2,
                            "BLOB_SEQUENCE": 3
                          }
                        }
                      }
                    },
                    "TensorboardExperiment": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/TensorboardExperiment",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6
                        },
                        "etag": {
                          "type": "string",
                          "id": 7
                        },
                        "source": {
                          "type": "string",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "TensorboardRun": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/TensorboardRun",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 8
                        },
                        "etag": {
                          "type": "string",
                          "id": 9
                        }
                      }
                    },
                    "TensorboardService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateTensorboard": {
                          "requestType": "CreateTensorboardRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/tensorboards",
                            "(google.api.http).body": "tensorboard",
                            "(google.api.method_signature)": "parent,tensorboard",
                            "(google.longrunning.operation_info).response_type": "Tensorboard",
                            "(google.longrunning.operation_info).metadata_type": "CreateTensorboardOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/tensorboards",
                                "body": "tensorboard"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,tensorboard"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Tensorboard",
                                "metadata_type": "CreateTensorboardOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetTensorboard": {
                          "requestType": "GetTensorboardRequest",
                          "responseType": "Tensorboard",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/tensorboards/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/tensorboards/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "UpdateTensorboard": {
                          "requestType": "UpdateTensorboardRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{tensorboard.name=projects/*/locations/*/tensorboards/*}",
                            "(google.api.http).body": "tensorboard",
                            "(google.api.method_signature)": "tensorboard,update_mask",
                            "(google.longrunning.operation_info).response_type": "Tensorboard",
                            "(google.longrunning.operation_info).metadata_type": "UpdateTensorboardOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{tensorboard.name=projects/*/locations/*/tensorboards/*}",
                                "body": "tensorboard"
                              }
                            },
                            {
                              "(google.api.method_signature)": "tensorboard,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Tensorboard",
                                "metadata_type": "UpdateTensorboardOperationMetadata"
                              }
                            }
                          ]
                        },
                        "ListTensorboards": {
                          "requestType": "ListTensorboardsRequest",
                          "responseType": "ListTensorboardsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/tensorboards",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/tensorboards"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteTensorboard": {
                          "requestType": "DeleteTensorboardRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/tensorboards/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/tensorboards/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "ReadTensorboardUsage": {
                          "requestType": "ReadTensorboardUsageRequest",
                          "responseType": "ReadTensorboardUsageResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{tensorboard=projects/*/locations/*/tensorboards/*}:readUsage",
                            "(google.api.method_signature)": "tensorboard"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{tensorboard=projects/*/locations/*/tensorboards/*}:readUsage"
                              }
                            },
                            {
                              "(google.api.method_signature)": "tensorboard"
                            }
                          ]
                        },
                        "ReadTensorboardSize": {
                          "requestType": "ReadTensorboardSizeRequest",
                          "responseType": "ReadTensorboardSizeResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{tensorboard=projects/*/locations/*/tensorboards/*}:readSize",
                            "(google.api.method_signature)": "tensorboard"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{tensorboard=projects/*/locations/*/tensorboards/*}:readSize"
                              }
                            },
                            {
                              "(google.api.method_signature)": "tensorboard"
                            }
                          ]
                        },
                        "CreateTensorboardExperiment": {
                          "requestType": "CreateTensorboardExperimentRequest",
                          "responseType": "TensorboardExperiment",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/tensorboards/*}/experiments",
                            "(google.api.http).body": "tensorboard_experiment",
                            "(google.api.method_signature)": "parent,tensorboard_experiment,tensorboard_experiment_id"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/tensorboards/*}/experiments",
                                "body": "tensorboard_experiment"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,tensorboard_experiment,tensorboard_experiment_id"
                            }
                          ]
                        },
                        "GetTensorboardExperiment": {
                          "requestType": "GetTensorboardExperimentRequest",
                          "responseType": "TensorboardExperiment",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "UpdateTensorboardExperiment": {
                          "requestType": "UpdateTensorboardExperimentRequest",
                          "responseType": "TensorboardExperiment",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{tensorboard_experiment.name=projects/*/locations/*/tensorboards/*/experiments/*}",
                            "(google.api.http).body": "tensorboard_experiment",
                            "(google.api.method_signature)": "tensorboard_experiment,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{tensorboard_experiment.name=projects/*/locations/*/tensorboards/*/experiments/*}",
                                "body": "tensorboard_experiment"
                              }
                            },
                            {
                              "(google.api.method_signature)": "tensorboard_experiment,update_mask"
                            }
                          ]
                        },
                        "ListTensorboardExperiments": {
                          "requestType": "ListTensorboardExperimentsRequest",
                          "responseType": "ListTensorboardExperimentsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*/tensorboards/*}/experiments",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*/tensorboards/*}/experiments"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteTensorboardExperiment": {
                          "requestType": "DeleteTensorboardExperimentRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CreateTensorboardRun": {
                          "requestType": "CreateTensorboardRunRequest",
                          "responseType": "TensorboardRun",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/tensorboards/*/experiments/*}/runs",
                            "(google.api.http).body": "tensorboard_run",
                            "(google.api.method_signature)": "parent,tensorboard_run,tensorboard_run_id"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/tensorboards/*/experiments/*}/runs",
                                "body": "tensorboard_run"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,tensorboard_run,tensorboard_run_id"
                            }
                          ]
                        },
                        "BatchCreateTensorboardRuns": {
                          "requestType": "BatchCreateTensorboardRunsRequest",
                          "responseType": "BatchCreateTensorboardRunsResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/tensorboards/*/experiments/*}/runs:batchCreate",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,requests"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/tensorboards/*/experiments/*}/runs:batchCreate",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,requests"
                            }
                          ]
                        },
                        "GetTensorboardRun": {
                          "requestType": "GetTensorboardRunRequest",
                          "responseType": "TensorboardRun",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "UpdateTensorboardRun": {
                          "requestType": "UpdateTensorboardRunRequest",
                          "responseType": "TensorboardRun",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{tensorboard_run.name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*}",
                            "(google.api.http).body": "tensorboard_run",
                            "(google.api.method_signature)": "tensorboard_run,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{tensorboard_run.name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*}",
                                "body": "tensorboard_run"
                              }
                            },
                            {
                              "(google.api.method_signature)": "tensorboard_run,update_mask"
                            }
                          ]
                        },
                        "ListTensorboardRuns": {
                          "requestType": "ListTensorboardRunsRequest",
                          "responseType": "ListTensorboardRunsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*/tensorboards/*/experiments/*}/runs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*/tensorboards/*/experiments/*}/runs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteTensorboardRun": {
                          "requestType": "DeleteTensorboardRunRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "BatchCreateTensorboardTimeSeries": {
                          "requestType": "BatchCreateTensorboardTimeSeriesRequest",
                          "responseType": "BatchCreateTensorboardTimeSeriesResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/tensorboards/*/experiments/*}:batchCreate",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,requests"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/tensorboards/*/experiments/*}:batchCreate",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,requests"
                            }
                          ]
                        },
                        "CreateTensorboardTimeSeries": {
                          "requestType": "CreateTensorboardTimeSeriesRequest",
                          "responseType": "TensorboardTimeSeries",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/tensorboards/*/experiments/*/runs/*}/timeSeries",
                            "(google.api.http).body": "tensorboard_time_series",
                            "(google.api.method_signature)": "parent,tensorboard_time_series"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/tensorboards/*/experiments/*/runs/*}/timeSeries",
                                "body": "tensorboard_time_series"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,tensorboard_time_series"
                            }
                          ]
                        },
                        "GetTensorboardTimeSeries": {
                          "requestType": "GetTensorboardTimeSeriesRequest",
                          "responseType": "TensorboardTimeSeries",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "UpdateTensorboardTimeSeries": {
                          "requestType": "UpdateTensorboardTimeSeriesRequest",
                          "responseType": "TensorboardTimeSeries",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{tensorboard_time_series.name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*}",
                            "(google.api.http).body": "tensorboard_time_series",
                            "(google.api.method_signature)": "tensorboard_time_series,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{tensorboard_time_series.name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*}",
                                "body": "tensorboard_time_series"
                              }
                            },
                            {
                              "(google.api.method_signature)": "tensorboard_time_series,update_mask"
                            }
                          ]
                        },
                        "ListTensorboardTimeSeries": {
                          "requestType": "ListTensorboardTimeSeriesRequest",
                          "responseType": "ListTensorboardTimeSeriesResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*/tensorboards/*/experiments/*/runs/*}/timeSeries",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*/tensorboards/*/experiments/*/runs/*}/timeSeries"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteTensorboardTimeSeries": {
                          "requestType": "DeleteTensorboardTimeSeriesRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "BatchReadTensorboardTimeSeriesData": {
                          "requestType": "BatchReadTensorboardTimeSeriesDataRequest",
                          "responseType": "BatchReadTensorboardTimeSeriesDataResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{tensorboard=projects/*/locations/*/tensorboards/*}:batchRead",
                            "(google.api.method_signature)": "tensorboard"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{tensorboard=projects/*/locations/*/tensorboards/*}:batchRead"
                              }
                            },
                            {
                              "(google.api.method_signature)": "tensorboard"
                            }
                          ]
                        },
                        "ReadTensorboardTimeSeriesData": {
                          "requestType": "ReadTensorboardTimeSeriesDataRequest",
                          "responseType": "ReadTensorboardTimeSeriesDataResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{tensorboard_time_series=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*}:read",
                            "(google.api.method_signature)": "tensorboard_time_series"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{tensorboard_time_series=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*}:read"
                              }
                            },
                            {
                              "(google.api.method_signature)": "tensorboard_time_series"
                            }
                          ]
                        },
                        "ReadTensorboardBlobData": {
                          "requestType": "ReadTensorboardBlobDataRequest",
                          "responseType": "ReadTensorboardBlobDataResponse",
                          "responseStream": true,
                          "options": {
                            "(google.api.http).get": "/v1beta1/{time_series=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*}:readBlobData",
                            "(google.api.method_signature)": "time_series"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{time_series=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*}:readBlobData"
                              }
                            },
                            {
                              "(google.api.method_signature)": "time_series"
                            }
                          ]
                        },
                        "WriteTensorboardExperimentData": {
                          "requestType": "WriteTensorboardExperimentDataRequest",
                          "responseType": "WriteTensorboardExperimentDataResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{tensorboard_experiment=projects/*/locations/*/tensorboards/*/experiments/*}:write",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "tensorboard_experiment,write_run_data_requests"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{tensorboard_experiment=projects/*/locations/*/tensorboards/*/experiments/*}:write",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "tensorboard_experiment,write_run_data_requests"
                            }
                          ]
                        },
                        "WriteTensorboardRunData": {
                          "requestType": "WriteTensorboardRunDataRequest",
                          "responseType": "WriteTensorboardRunDataResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{tensorboard_run=projects/*/locations/*/tensorboards/*/experiments/*/runs/*}:write",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "tensorboard_run,time_series_data"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{tensorboard_run=projects/*/locations/*/tensorboards/*/experiments/*/runs/*}:write",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "tensorboard_run,time_series_data"
                            }
                          ]
                        },
                        "ExportTensorboardTimeSeriesData": {
                          "requestType": "ExportTensorboardTimeSeriesDataRequest",
                          "responseType": "ExportTensorboardTimeSeriesDataResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{tensorboard_time_series=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*}:exportTensorboardTimeSeries",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "tensorboard_time_series"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{tensorboard_time_series=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*}:exportTensorboardTimeSeries",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "tensorboard_time_series"
                            }
                          ]
                        }
                      }
                    },
                    "CreateTensorboardRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Tensorboard"
                          }
                        },
                        "tensorboard": {
                          "type": "Tensorboard",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetTensorboardRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Tensorboard"
                          }
                        }
                      }
                    },
                    "ListTensorboardsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/Tensorboard"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 6
                        }
                      }
                    },
                    "ListTensorboardsResponse": {
                      "fields": {
                        "tensorboards": {
                          "rule": "repeated",
                          "type": "Tensorboard",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateTensorboardRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "tensorboard": {
                          "type": "Tensorboard",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteTensorboardRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Tensorboard"
                          }
                        }
                      }
                    },
                    "ReadTensorboardUsageRequest": {
                      "fields": {
                        "tensorboard": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Tensorboard"
                          }
                        }
                      }
                    },
                    "ReadTensorboardUsageResponse": {
                      "fields": {
                        "monthlyUsageData": {
                          "keyType": "string",
                          "type": "PerMonthUsageData",
                          "id": 1
                        }
                      },
                      "nested": {
                        "PerUserUsageData": {
                          "fields": {
                            "username": {
                              "type": "string",
                              "id": 1
                            },
                            "viewCount": {
                              "type": "int64",
                              "id": 2
                            }
                          }
                        },
                        "PerMonthUsageData": {
                          "fields": {
                            "userUsageData": {
                              "rule": "repeated",
                              "type": "PerUserUsageData",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "ReadTensorboardSizeRequest": {
                      "fields": {
                        "tensorboard": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Tensorboard"
                          }
                        }
                      }
                    },
                    "ReadTensorboardSizeResponse": {
                      "fields": {
                        "storageSizeByte": {
                          "type": "int64",
                          "id": 1
                        }
                      }
                    },
                    "CreateTensorboardExperimentRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardExperiment"
                          }
                        },
                        "tensorboardExperiment": {
                          "type": "TensorboardExperiment",
                          "id": 2
                        },
                        "tensorboardExperimentId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetTensorboardExperimentRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardExperiment"
                          }
                        }
                      }
                    },
                    "ListTensorboardExperimentsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/TensorboardExperiment"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 6
                        }
                      }
                    },
                    "ListTensorboardExperimentsResponse": {
                      "fields": {
                        "tensorboardExperiments": {
                          "rule": "repeated",
                          "type": "TensorboardExperiment",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateTensorboardExperimentRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "tensorboardExperiment": {
                          "type": "TensorboardExperiment",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteTensorboardExperimentRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardExperiment"
                          }
                        }
                      }
                    },
                    "BatchCreateTensorboardRunsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardExperiment"
                          }
                        },
                        "requests": {
                          "rule": "repeated",
                          "type": "CreateTensorboardRunRequest",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "BatchCreateTensorboardRunsResponse": {
                      "fields": {
                        "tensorboardRuns": {
                          "rule": "repeated",
                          "type": "TensorboardRun",
                          "id": 1
                        }
                      }
                    },
                    "CreateTensorboardRunRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardRun"
                          }
                        },
                        "tensorboardRun": {
                          "type": "TensorboardRun",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "tensorboardRunId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetTensorboardRunRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardRun"
                          }
                        }
                      }
                    },
                    "ReadTensorboardBlobDataRequest": {
                      "fields": {
                        "timeSeries": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardTimeSeries"
                          }
                        },
                        "blobIds": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "ReadTensorboardBlobDataResponse": {
                      "fields": {
                        "blobs": {
                          "rule": "repeated",
                          "type": "TensorboardBlob",
                          "id": 1
                        }
                      }
                    },
                    "ListTensorboardRunsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/TensorboardRun"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 6
                        }
                      }
                    },
                    "ListTensorboardRunsResponse": {
                      "fields": {
                        "tensorboardRuns": {
                          "rule": "repeated",
                          "type": "TensorboardRun",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateTensorboardRunRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "tensorboardRun": {
                          "type": "TensorboardRun",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteTensorboardRunRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardRun"
                          }
                        }
                      }
                    },
                    "BatchCreateTensorboardTimeSeriesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardExperiment"
                          }
                        },
                        "requests": {
                          "rule": "repeated",
                          "type": "CreateTensorboardTimeSeriesRequest",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "BatchCreateTensorboardTimeSeriesResponse": {
                      "fields": {
                        "tensorboardTimeSeries": {
                          "rule": "repeated",
                          "type": "TensorboardTimeSeries",
                          "id": 1
                        }
                      }
                    },
                    "CreateTensorboardTimeSeriesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardTimeSeries"
                          }
                        },
                        "tensorboardTimeSeriesId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "tensorboardTimeSeries": {
                          "type": "TensorboardTimeSeries",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetTensorboardTimeSeriesRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardTimeSeries"
                          }
                        }
                      }
                    },
                    "ListTensorboardTimeSeriesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "aiplatform.googleapis.com/TensorboardTimeSeries"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 6
                        }
                      }
                    },
                    "ListTensorboardTimeSeriesResponse": {
                      "fields": {
                        "tensorboardTimeSeries": {
                          "rule": "repeated",
                          "type": "TensorboardTimeSeries",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateTensorboardTimeSeriesRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "tensorboardTimeSeries": {
                          "type": "TensorboardTimeSeries",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteTensorboardTimeSeriesRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardTimeSeries"
                          }
                        }
                      }
                    },
                    "BatchReadTensorboardTimeSeriesDataRequest": {
                      "fields": {
                        "tensorboard": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Tensorboard"
                          }
                        },
                        "timeSeries": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardTimeSeries"
                          }
                        }
                      }
                    },
                    "BatchReadTensorboardTimeSeriesDataResponse": {
                      "fields": {
                        "timeSeriesData": {
                          "rule": "repeated",
                          "type": "TimeSeriesData",
                          "id": 1
                        }
                      }
                    },
                    "ReadTensorboardTimeSeriesDataRequest": {
                      "fields": {
                        "tensorboardTimeSeries": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardTimeSeries"
                          }
                        },
                        "maxDataPoints": {
                          "type": "int32",
                          "id": 2
                        },
                        "filter": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ReadTensorboardTimeSeriesDataResponse": {
                      "fields": {
                        "timeSeriesData": {
                          "type": "TimeSeriesData",
                          "id": 1
                        }
                      }
                    },
                    "WriteTensorboardExperimentDataRequest": {
                      "fields": {
                        "tensorboardExperiment": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardExperiment"
                          }
                        },
                        "writeRunDataRequests": {
                          "rule": "repeated",
                          "type": "WriteTensorboardRunDataRequest",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "WriteTensorboardExperimentDataResponse": {
                      "fields": {}
                    },
                    "WriteTensorboardRunDataRequest": {
                      "fields": {
                        "tensorboardRun": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardRun"
                          }
                        },
                        "timeSeriesData": {
                          "rule": "repeated",
                          "type": "TimeSeriesData",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "WriteTensorboardRunDataResponse": {
                      "fields": {}
                    },
                    "ExportTensorboardTimeSeriesDataRequest": {
                      "fields": {
                        "tensorboardTimeSeries": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TensorboardTimeSeries"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ExportTensorboardTimeSeriesDataResponse": {
                      "fields": {
                        "timeSeriesDataPoints": {
                          "rule": "repeated",
                          "type": "TimeSeriesDataPoint",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "CreateTensorboardOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "UpdateTensorboardOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "VizierService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateStudy": {
                          "requestType": "CreateStudyRequest",
                          "responseType": "Study",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/studies",
                            "(google.api.http).body": "study",
                            "(google.api.method_signature)": "parent,study"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/studies",
                                "body": "study"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,study"
                            }
                          ]
                        },
                        "GetStudy": {
                          "requestType": "GetStudyRequest",
                          "responseType": "Study",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/studies/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/studies/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListStudies": {
                          "requestType": "ListStudiesRequest",
                          "responseType": "ListStudiesResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/studies",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/studies"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteStudy": {
                          "requestType": "DeleteStudyRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/studies/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/studies/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "LookupStudy": {
                          "requestType": "LookupStudyRequest",
                          "responseType": "Study",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/studies:lookup",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/studies:lookup",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "SuggestTrials": {
                          "requestType": "SuggestTrialsRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/studies/*}/trials:suggest",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "SuggestTrialsResponse",
                            "(google.longrunning.operation_info).metadata_type": "SuggestTrialsMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/studies/*}/trials:suggest",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "SuggestTrialsResponse",
                                "metadata_type": "SuggestTrialsMetadata"
                              }
                            }
                          ]
                        },
                        "CreateTrial": {
                          "requestType": "CreateTrialRequest",
                          "responseType": "Trial",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/studies/*}/trials",
                            "(google.api.http).body": "trial",
                            "(google.api.method_signature)": "parent,trial"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/studies/*}/trials",
                                "body": "trial"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,trial"
                            }
                          ]
                        },
                        "GetTrial": {
                          "requestType": "GetTrialRequest",
                          "responseType": "Trial",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/studies/*/trials/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/studies/*/trials/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListTrials": {
                          "requestType": "ListTrialsRequest",
                          "responseType": "ListTrialsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*/studies/*}/trials",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*/studies/*}/trials"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "AddTrialMeasurement": {
                          "requestType": "AddTrialMeasurementRequest",
                          "responseType": "Trial",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{trial_name=projects/*/locations/*/studies/*/trials/*}:addTrialMeasurement",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{trial_name=projects/*/locations/*/studies/*/trials/*}:addTrialMeasurement",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "CompleteTrial": {
                          "requestType": "CompleteTrialRequest",
                          "responseType": "Trial",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{name=projects/*/locations/*/studies/*/trials/*}:complete",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{name=projects/*/locations/*/studies/*/trials/*}:complete",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "DeleteTrial": {
                          "requestType": "DeleteTrialRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/studies/*/trials/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/studies/*/trials/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CheckTrialEarlyStoppingState": {
                          "requestType": "CheckTrialEarlyStoppingStateRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{trial_name=projects/*/locations/*/studies/*/trials/*}:checkTrialEarlyStoppingState",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "CheckTrialEarlyStoppingStateResponse",
                            "(google.longrunning.operation_info).metadata_type": "CheckTrialEarlyStoppingStateMetatdata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{trial_name=projects/*/locations/*/studies/*/trials/*}:checkTrialEarlyStoppingState",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "CheckTrialEarlyStoppingStateResponse",
                                "metadata_type": "CheckTrialEarlyStoppingStateMetatdata"
                              }
                            }
                          ]
                        },
                        "StopTrial": {
                          "requestType": "StopTrialRequest",
                          "responseType": "Trial",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{name=projects/*/locations/*/studies/*/trials/*}:stop",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{name=projects/*/locations/*/studies/*/trials/*}:stop",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "ListOptimalTrials": {
                          "requestType": "ListOptimalTrialsRequest",
                          "responseType": "ListOptimalTrialsResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/studies/*}/trials:listOptimalTrials",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/studies/*}/trials:listOptimalTrials",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        }
                      }
                    },
                    "GetStudyRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Study"
                          }
                        }
                      }
                    },
                    "CreateStudyRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "study": {
                          "type": "Study",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ListStudiesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListStudiesResponse": {
                      "fields": {
                        "studies": {
                          "rule": "repeated",
                          "type": "Study",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteStudyRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Study"
                          }
                        }
                      }
                    },
                    "LookupStudyRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "SuggestTrialsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Study"
                          }
                        },
                        "suggestionCount": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "clientId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "contexts": {
                          "rule": "repeated",
                          "type": "TrialContext",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "SuggestTrialsResponse": {
                      "fields": {
                        "trials": {
                          "rule": "repeated",
                          "type": "Trial",
                          "id": 1
                        },
                        "studyState": {
                          "type": "Study.State",
                          "id": 2
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4
                        }
                      }
                    },
                    "SuggestTrialsMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        },
                        "clientId": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "CreateTrialRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Study"
                          }
                        },
                        "trial": {
                          "type": "Trial",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetTrialRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Trial"
                          }
                        }
                      }
                    },
                    "ListTrialsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Study"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListTrialsResponse": {
                      "fields": {
                        "trials": {
                          "rule": "repeated",
                          "type": "Trial",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "AddTrialMeasurementRequest": {
                      "fields": {
                        "trialName": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Trial"
                          }
                        },
                        "measurement": {
                          "type": "Measurement",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CompleteTrialRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Trial"
                          }
                        },
                        "finalMeasurement": {
                          "type": "Measurement",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "trialInfeasible": {
                          "type": "bool",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "infeasibleReason": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DeleteTrialRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Trial"
                          }
                        }
                      }
                    },
                    "CheckTrialEarlyStoppingStateRequest": {
                      "fields": {
                        "trialName": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Trial"
                          }
                        }
                      }
                    },
                    "CheckTrialEarlyStoppingStateResponse": {
                      "fields": {
                        "shouldStop": {
                          "type": "bool",
                          "id": 1
                        }
                      }
                    },
                    "CheckTrialEarlyStoppingStateMetatdata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        },
                        "study": {
                          "type": "string",
                          "id": 2
                        },
                        "trial": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "StopTrialRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Trial"
                          }
                        }
                      }
                    },
                    "ListOptimalTrialsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Study"
                          }
                        }
                      }
                    },
                    "ListOptimalTrialsResponse": {
                      "fields": {
                        "optimalTrials": {
                          "rule": "repeated",
                          "type": "Trial",
                          "id": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "api": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/api/httpbody;httpbody",
            "java_multiple_files": true,
            "java_outer_classname": "HttpBodyProto",
            "java_package": "com.google.api",
            "objc_class_prefix": "GAPI",
            "cc_enable_arenas": true
          },
          "nested": {
            "fieldBehavior": {
              "rule": "repeated",
              "type": "google.api.FieldBehavior",
              "id": 1052,
              "extend": "google.protobuf.FieldOptions"
            },
            "FieldBehavior": {
              "values": {
                "FIELD_BEHAVIOR_UNSPECIFIED": 0,
                "OPTIONAL": 1,
                "REQUIRED": 2,
                "OUTPUT_ONLY": 3,
                "INPUT_ONLY": 4,
                "IMMUTABLE": 5,
                "UNORDERED_LIST": 6,
                "NON_EMPTY_DEFAULT": 7
              }
            },
            "resourceReference": {
              "type": "google.api.ResourceReference",
              "id": 1055,
              "extend": "google.protobuf.FieldOptions"
            },
            "resourceDefinition": {
              "rule": "repeated",
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.FileOptions"
            },
            "resource": {
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.MessageOptions"
            },
            "ResourceDescriptor": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "pattern": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 2
                },
                "nameField": {
                  "type": "string",
                  "id": 3
                },
                "history": {
                  "type": "History",
                  "id": 4
                },
                "plural": {
                  "type": "string",
                  "id": 5
                },
                "singular": {
                  "type": "string",
                  "id": 6
                },
                "style": {
                  "rule": "repeated",
                  "type": "Style",
                  "id": 10
                }
              },
              "nested": {
                "History": {
                  "values": {
                    "HISTORY_UNSPECIFIED": 0,
                    "ORIGINALLY_SINGLE_PATTERN": 1,
                    "FUTURE_MULTI_PATTERN": 2
                  }
                },
                "Style": {
                  "values": {
                    "STYLE_UNSPECIFIED": 0,
                    "DECLARATIVE_FRIENDLY": 1
                  }
                }
              }
            },
            "ResourceReference": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "childType": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "http": {
              "type": "HttpRule",
              "id": 72295728,
              "extend": "google.protobuf.MethodOptions"
            },
            "Http": {
              "fields": {
                "rules": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 1
                },
                "fullyDecodeReservedExpansion": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "HttpRule": {
              "oneofs": {
                "pattern": {
                  "oneof": [
                    "get",
                    "put",
                    "post",
                    "delete",
                    "patch",
                    "custom"
                  ]
                }
              },
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "get": {
                  "type": "string",
                  "id": 2
                },
                "put": {
                  "type": "string",
                  "id": 3
                },
                "post": {
                  "type": "string",
                  "id": 4
                },
                "delete": {
                  "type": "string",
                  "id": 5
                },
                "patch": {
                  "type": "string",
                  "id": 6
                },
                "custom": {
                  "type": "CustomHttpPattern",
                  "id": 8
                },
                "body": {
                  "type": "string",
                  "id": 7
                },
                "responseBody": {
                  "type": "string",
                  "id": 12
                },
                "additionalBindings": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 11
                }
              }
            },
            "CustomHttpPattern": {
              "fields": {
                "kind": {
                  "type": "string",
                  "id": 1
                },
                "path": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "methodSignature": {
              "rule": "repeated",
              "type": "string",
              "id": 1051,
              "extend": "google.protobuf.MethodOptions"
            },
            "defaultHost": {
              "type": "string",
              "id": 1049,
              "extend": "google.protobuf.ServiceOptions"
            },
            "oauthScopes": {
              "type": "string",
              "id": 1050,
              "extend": "google.protobuf.ServiceOptions"
            },
            "CommonLanguageSettings": {
              "fields": {
                "referenceDocsUri": {
                  "type": "string",
                  "id": 1,
                  "options": {
                    "deprecated": true
                  }
                },
                "destinations": {
                  "rule": "repeated",
                  "type": "ClientLibraryDestination",
                  "id": 2
                }
              }
            },
            "ClientLibrarySettings": {
              "fields": {
                "version": {
                  "type": "string",
                  "id": 1
                },
                "launchStage": {
                  "type": "LaunchStage",
                  "id": 2
                },
                "restNumericEnums": {
                  "type": "bool",
                  "id": 3
                },
                "javaSettings": {
                  "type": "JavaSettings",
                  "id": 21
                },
                "cppSettings": {
                  "type": "CppSettings",
                  "id": 22
                },
                "phpSettings": {
                  "type": "PhpSettings",
                  "id": 23
                },
                "pythonSettings": {
                  "type": "PythonSettings",
                  "id": 24
                },
                "nodeSettings": {
                  "type": "NodeSettings",
                  "id": 25
                },
                "dotnetSettings": {
                  "type": "DotnetSettings",
                  "id": 26
                },
                "rubySettings": {
                  "type": "RubySettings",
                  "id": 27
                },
                "goSettings": {
                  "type": "GoSettings",
                  "id": 28
                }
              }
            },
            "Publishing": {
              "fields": {
                "methodSettings": {
                  "rule": "repeated",
                  "type": "MethodSettings",
                  "id": 2
                },
                "newIssueUri": {
                  "type": "string",
                  "id": 101
                },
                "documentationUri": {
                  "type": "string",
                  "id": 102
                },
                "apiShortName": {
                  "type": "string",
                  "id": 103
                },
                "githubLabel": {
                  "type": "string",
                  "id": 104
                },
                "codeownerGithubTeams": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 105
                },
                "docTagPrefix": {
                  "type": "string",
                  "id": 106
                },
                "organization": {
                  "type": "ClientLibraryOrganization",
                  "id": 107
                },
                "librarySettings": {
                  "rule": "repeated",
                  "type": "ClientLibrarySettings",
                  "id": 109
                }
              }
            },
            "JavaSettings": {
              "fields": {
                "libraryPackage": {
                  "type": "string",
                  "id": 1
                },
                "serviceClassNames": {
                  "keyType": "string",
                  "type": "string",
                  "id": 2
                },
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 3
                }
              }
            },
            "CppSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "PhpSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "PythonSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "NodeSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "DotnetSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "RubySettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "GoSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "MethodSettings": {
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "longRunning": {
                  "type": "LongRunning",
                  "id": 2
                }
              },
              "nested": {
                "LongRunning": {
                  "fields": {
                    "initialPollDelay": {
                      "type": "google.protobuf.Duration",
                      "id": 1
                    },
                    "pollDelayMultiplier": {
                      "type": "float",
                      "id": 2
                    },
                    "maxPollDelay": {
                      "type": "google.protobuf.Duration",
                      "id": 3
                    },
                    "totalPollTimeout": {
                      "type": "google.protobuf.Duration",
                      "id": 4
                    }
                  }
                }
              }
            },
            "ClientLibraryOrganization": {
              "values": {
                "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED": 0,
                "CLOUD": 1,
                "ADS": 2,
                "PHOTOS": 3,
                "STREET_VIEW": 4
              }
            },
            "ClientLibraryDestination": {
              "values": {
                "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED": 0,
                "GITHUB": 10,
                "PACKAGE_MANAGER": 20
              }
            },
            "LaunchStage": {
              "values": {
                "LAUNCH_STAGE_UNSPECIFIED": 0,
                "UNIMPLEMENTED": 6,
                "PRELAUNCH": 7,
                "EARLY_ACCESS": 1,
                "ALPHA": 2,
                "BETA": 3,
                "GA": 4,
                "DEPRECATED": 5
              }
            },
            "HttpBody": {
              "fields": {
                "contentType": {
                  "type": "string",
                  "id": 1
                },
                "data": {
                  "type": "bytes",
                  "id": 2
                },
                "extensions": {
                  "rule": "repeated",
                  "type": "google.protobuf.Any",
                  "id": 3
                }
              }
            }
          }
        },
        "protobuf": {
          "options": {
            "go_package": "google.golang.org/protobuf/types/descriptorpb",
            "java_package": "com.google.protobuf",
            "java_outer_classname": "DescriptorProtos",
            "csharp_namespace": "Google.Protobuf.Reflection",
            "objc_class_prefix": "GPB",
            "cc_enable_arenas": true,
            "optimize_for": "SPEED"
          },
          "nested": {
            "FileDescriptorSet": {
              "fields": {
                "file": {
                  "rule": "repeated",
                  "type": "FileDescriptorProto",
                  "id": 1
                }
              }
            },
            "FileDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "package": {
                  "type": "string",
                  "id": 2
                },
                "dependency": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                },
                "publicDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 10,
                  "options": {
                    "packed": false
                  }
                },
                "weakDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 11,
                  "options": {
                    "packed": false
                  }
                },
                "messageType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 4
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 5
                },
                "service": {
                  "rule": "repeated",
                  "type": "ServiceDescriptorProto",
                  "id": 6
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 7
                },
                "options": {
                  "type": "FileOptions",
                  "id": 8
                },
                "sourceCodeInfo": {
                  "type": "SourceCodeInfo",
                  "id": 9
                },
                "syntax": {
                  "type": "string",
                  "id": 12
                },
                "edition": {
                  "type": "string",
                  "id": 13
                }
              }
            },
            "DescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "field": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 2
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 6
                },
                "nestedType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 3
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 4
                },
                "extensionRange": {
                  "rule": "repeated",
                  "type": "ExtensionRange",
                  "id": 5
                },
                "oneofDecl": {
                  "rule": "repeated",
                  "type": "OneofDescriptorProto",
                  "id": 8
                },
                "options": {
                  "type": "MessageOptions",
                  "id": 7
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "ReservedRange",
                  "id": 9
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 10
                }
              },
              "nested": {
                "ExtensionRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    },
                    "options": {
                      "type": "ExtensionRangeOptions",
                      "id": 3
                    }
                  }
                },
                "ReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "ExtensionRangeOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "FieldDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 3
                },
                "label": {
                  "type": "Label",
                  "id": 4
                },
                "type": {
                  "type": "Type",
                  "id": 5
                },
                "typeName": {
                  "type": "string",
                  "id": 6
                },
                "extendee": {
                  "type": "string",
                  "id": 2
                },
                "defaultValue": {
                  "type": "string",
                  "id": 7
                },
                "oneofIndex": {
                  "type": "int32",
                  "id": 9
                },
                "jsonName": {
                  "type": "string",
                  "id": 10
                },
                "options": {
                  "type": "FieldOptions",
                  "id": 8
                },
                "proto3Optional": {
                  "type": "bool",
                  "id": 17
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_DOUBLE": 1,
                    "TYPE_FLOAT": 2,
                    "TYPE_INT64": 3,
                    "TYPE_UINT64": 4,
                    "TYPE_INT32": 5,
                    "TYPE_FIXED64": 6,
                    "TYPE_FIXED32": 7,
                    "TYPE_BOOL": 8,
                    "TYPE_STRING": 9,
                    "TYPE_GROUP": 10,
                    "TYPE_MESSAGE": 11,
                    "TYPE_BYTES": 12,
                    "TYPE_UINT32": 13,
                    "TYPE_ENUM": 14,
                    "TYPE_SFIXED32": 15,
                    "TYPE_SFIXED64": 16,
                    "TYPE_SINT32": 17,
                    "TYPE_SINT64": 18
                  }
                },
                "Label": {
                  "values": {
                    "LABEL_OPTIONAL": 1,
                    "LABEL_REQUIRED": 2,
                    "LABEL_REPEATED": 3
                  }
                }
              }
            },
            "OneofDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "options": {
                  "type": "OneofOptions",
                  "id": 2
                }
              }
            },
            "EnumDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "rule": "repeated",
                  "type": "EnumValueDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "EnumOptions",
                  "id": 3
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "EnumReservedRange",
                  "id": 4
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 5
                }
              },
              "nested": {
                "EnumReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "EnumValueDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 2
                },
                "options": {
                  "type": "EnumValueOptions",
                  "id": 3
                }
              }
            },
            "ServiceDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "method": {
                  "rule": "repeated",
                  "type": "MethodDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "ServiceOptions",
                  "id": 3
                }
              }
            },
            "MethodDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "inputType": {
                  "type": "string",
                  "id": 2
                },
                "outputType": {
                  "type": "string",
                  "id": 3
                },
                "options": {
                  "type": "MethodOptions",
                  "id": 4
                },
                "clientStreaming": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "serverStreaming": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "default": false
                  }
                }
              }
            },
            "FileOptions": {
              "fields": {
                "javaPackage": {
                  "type": "string",
                  "id": 1
                },
                "javaOuterClassname": {
                  "type": "string",
                  "id": 8
                },
                "javaMultipleFiles": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "javaGenerateEqualsAndHash": {
                  "type": "bool",
                  "id": 20,
                  "options": {
                    "deprecated": true
                  }
                },
                "javaStringCheckUtf8": {
                  "type": "bool",
                  "id": 27,
                  "options": {
                    "default": false
                  }
                },
                "optimizeFor": {
                  "type": "OptimizeMode",
                  "id": 9,
                  "options": {
                    "default": "SPEED"
                  }
                },
                "goPackage": {
                  "type": "string",
                  "id": 11
                },
                "ccGenericServices": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "javaGenericServices": {
                  "type": "bool",
                  "id": 17,
                  "options": {
                    "default": false
                  }
                },
                "pyGenericServices": {
                  "type": "bool",
                  "id": 18,
                  "options": {
                    "default": false
                  }
                },
                "phpGenericServices": {
                  "type": "bool",
                  "id": 42,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 23,
                  "options": {
                    "default": false
                  }
                },
                "ccEnableArenas": {
                  "type": "bool",
                  "id": 31,
                  "options": {
                    "default": true
                  }
                },
                "objcClassPrefix": {
                  "type": "string",
                  "id": 36
                },
                "csharpNamespace": {
                  "type": "string",
                  "id": 37
                },
                "swiftPrefix": {
                  "type": "string",
                  "id": 39
                },
                "phpClassPrefix": {
                  "type": "string",
                  "id": 40
                },
                "phpNamespace": {
                  "type": "string",
                  "id": 41
                },
                "phpMetadataNamespace": {
                  "type": "string",
                  "id": 44
                },
                "rubyPackage": {
                  "type": "string",
                  "id": 45
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  38,
                  38
                ]
              ],
              "nested": {
                "OptimizeMode": {
                  "values": {
                    "SPEED": 1,
                    "CODE_SIZE": 2,
                    "LITE_RUNTIME": 3
                  }
                }
              }
            },
            "MessageOptions": {
              "fields": {
                "messageSetWireFormat": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "noStandardDescriptorAccessor": {
                  "type": "bool",
                  "id": 2,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "mapEntry": {
                  "type": "bool",
                  "id": 7
                },
                "deprecatedLegacyJsonFieldConflicts": {
                  "type": "bool",
                  "id": 11,
                  "options": {
                    "deprecated": true
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ],
                [
                  5,
                  5
                ],
                [
                  6,
                  6
                ],
                [
                  8,
                  8
                ],
                [
                  9,
                  9
                ]
              ]
            },
            "FieldOptions": {
              "fields": {
                "ctype": {
                  "type": "CType",
                  "id": 1,
                  "options": {
                    "default": "STRING"
                  }
                },
                "packed": {
                  "type": "bool",
                  "id": 2
                },
                "jstype": {
                  "type": "JSType",
                  "id": 6,
                  "options": {
                    "default": "JS_NORMAL"
                  }
                },
                "lazy": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "unverifiedLazy": {
                  "type": "bool",
                  "id": 15,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "weak": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "debugRedact": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "retention": {
                  "type": "OptionRetention",
                  "id": 17
                },
                "target": {
                  "type": "OptionTargetType",
                  "id": 18
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ]
              ],
              "nested": {
                "CType": {
                  "values": {
                    "STRING": 0,
                    "CORD": 1,
                    "STRING_PIECE": 2
                  }
                },
                "JSType": {
                  "values": {
                    "JS_NORMAL": 0,
                    "JS_STRING": 1,
                    "JS_NUMBER": 2
                  }
                },
                "OptionRetention": {
                  "values": {
                    "RETENTION_UNKNOWN": 0,
                    "RETENTION_RUNTIME": 1,
                    "RETENTION_SOURCE": 2
                  }
                },
                "OptionTargetType": {
                  "values": {
                    "TARGET_TYPE_UNKNOWN": 0,
                    "TARGET_TYPE_FILE": 1,
                    "TARGET_TYPE_EXTENSION_RANGE": 2,
                    "TARGET_TYPE_MESSAGE": 3,
                    "TARGET_TYPE_FIELD": 4,
                    "TARGET_TYPE_ONEOF": 5,
                    "TARGET_TYPE_ENUM": 6,
                    "TARGET_TYPE_ENUM_ENTRY": 7,
                    "TARGET_TYPE_SERVICE": 8,
                    "TARGET_TYPE_METHOD": 9
                  }
                }
              }
            },
            "OneofOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumOptions": {
              "fields": {
                "allowAlias": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "deprecatedLegacyJsonFieldConflicts": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "deprecated": true
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  5,
                  5
                ]
              ]
            },
            "EnumValueOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "ServiceOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "MethodOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "idempotencyLevel": {
                  "type": "IdempotencyLevel",
                  "id": 34,
                  "options": {
                    "default": "IDEMPOTENCY_UNKNOWN"
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "nested": {
                "IdempotencyLevel": {
                  "values": {
                    "IDEMPOTENCY_UNKNOWN": 0,
                    "NO_SIDE_EFFECTS": 1,
                    "IDEMPOTENT": 2
                  }
                }
              }
            },
            "UninterpretedOption": {
              "fields": {
                "name": {
                  "rule": "repeated",
                  "type": "NamePart",
                  "id": 2
                },
                "identifierValue": {
                  "type": "string",
                  "id": 3
                },
                "positiveIntValue": {
                  "type": "uint64",
                  "id": 4
                },
                "negativeIntValue": {
                  "type": "int64",
                  "id": 5
                },
                "doubleValue": {
                  "type": "double",
                  "id": 6
                },
                "stringValue": {
                  "type": "bytes",
                  "id": 7
                },
                "aggregateValue": {
                  "type": "string",
                  "id": 8
                }
              },
              "nested": {
                "NamePart": {
                  "fields": {
                    "namePart": {
                      "rule": "required",
                      "type": "string",
                      "id": 1
                    },
                    "isExtension": {
                      "rule": "required",
                      "type": "bool",
                      "id": 2
                    }
                  }
                }
              }
            },
            "SourceCodeInfo": {
              "fields": {
                "location": {
                  "rule": "repeated",
                  "type": "Location",
                  "id": 1
                }
              },
              "nested": {
                "Location": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "span": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 2
                    },
                    "leadingComments": {
                      "type": "string",
                      "id": 3
                    },
                    "trailingComments": {
                      "type": "string",
                      "id": 4
                    },
                    "leadingDetachedComments": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 6
                    }
                  }
                }
              }
            },
            "GeneratedCodeInfo": {
              "fields": {
                "annotation": {
                  "rule": "repeated",
                  "type": "Annotation",
                  "id": 1
                }
              },
              "nested": {
                "Annotation": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "sourceFile": {
                      "type": "string",
                      "id": 2
                    },
                    "begin": {
                      "type": "int32",
                      "id": 3
                    },
                    "end": {
                      "type": "int32",
                      "id": 4
                    },
                    "semantic": {
                      "type": "Semantic",
                      "id": 5
                    }
                  },
                  "nested": {
                    "Semantic": {
                      "values": {
                        "NONE": 0,
                        "SET": 1,
                        "ALIAS": 2
                      }
                    }
                  }
                }
              }
            },
            "Struct": {
              "fields": {
                "fields": {
                  "keyType": "string",
                  "type": "Value",
                  "id": 1
                }
              }
            },
            "Value": {
              "oneofs": {
                "kind": {
                  "oneof": [
                    "nullValue",
                    "numberValue",
                    "stringValue",
                    "boolValue",
                    "structValue",
                    "listValue"
                  ]
                }
              },
              "fields": {
                "nullValue": {
                  "type": "NullValue",
                  "id": 1
                },
                "numberValue": {
                  "type": "double",
                  "id": 2
                },
                "stringValue": {
                  "type": "string",
                  "id": 3
                },
                "boolValue": {
                  "type": "bool",
                  "id": 4
                },
                "structValue": {
                  "type": "Struct",
                  "id": 5
                },
                "listValue": {
                  "type": "ListValue",
                  "id": 6
                }
              }
            },
            "NullValue": {
              "values": {
                "NULL_VALUE": 0
              }
            },
            "ListValue": {
              "fields": {
                "values": {
                  "rule": "repeated",
                  "type": "Value",
                  "id": 1
                }
              }
            },
            "Timestamp": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Duration": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Any": {
              "fields": {
                "type_url": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "Empty": {
              "fields": {}
            },
            "FieldMask": {
              "fields": {
                "paths": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 1
                }
              }
            },
            "DoubleValue": {
              "fields": {
                "value": {
                  "type": "double",
                  "id": 1
                }
              }
            },
            "FloatValue": {
              "fields": {
                "value": {
                  "type": "float",
                  "id": 1
                }
              }
            },
            "Int64Value": {
              "fields": {
                "value": {
                  "type": "int64",
                  "id": 1
                }
              }
            },
            "UInt64Value": {
              "fields": {
                "value": {
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "Int32Value": {
              "fields": {
                "value": {
                  "type": "int32",
                  "id": 1
                }
              }
            },
            "UInt32Value": {
              "fields": {
                "value": {
                  "type": "uint32",
                  "id": 1
                }
              }
            },
            "BoolValue": {
              "fields": {
                "value": {
                  "type": "bool",
                  "id": 1
                }
              }
            },
            "StringValue": {
              "fields": {
                "value": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "BytesValue": {
              "fields": {
                "value": {
                  "type": "bytes",
                  "id": 1
                }
              }
            }
          }
        },
        "rpc": {
          "options": {
            "cc_enable_arenas": true,
            "go_package": "google.golang.org/genproto/googleapis/rpc/status;status",
            "java_multiple_files": true,
            "java_outer_classname": "StatusProto",
            "java_package": "com.google.rpc",
            "objc_class_prefix": "RPC"
          },
          "nested": {
            "Status": {
              "fields": {
                "code": {
                  "type": "int32",
                  "id": 1
                },
                "message": {
                  "type": "string",
                  "id": 2
                },
                "details": {
                  "rule": "repeated",
                  "type": "google.protobuf.Any",
                  "id": 3
                }
              }
            }
          }
        },
        "type": {
          "options": {
            "cc_enable_arenas": true,
            "go_package": "google.golang.org/genproto/googleapis/type/color;color",
            "java_multiple_files": true,
            "java_outer_classname": "ColorProto",
            "java_package": "com.google.type",
            "objc_class_prefix": "GTP"
          },
          "nested": {
            "Date": {
              "fields": {
                "year": {
                  "type": "int32",
                  "id": 1
                },
                "month": {
                  "type": "int32",
                  "id": 2
                },
                "day": {
                  "type": "int32",
                  "id": 3
                }
              }
            },
            "Money": {
              "fields": {
                "currencyCode": {
                  "type": "string",
                  "id": 1
                },
                "units": {
                  "type": "int64",
                  "id": 2
                },
                "nanos": {
                  "type": "int32",
                  "id": 3
                }
              }
            },
            "Interval": {
              "fields": {
                "startTime": {
                  "type": "google.protobuf.Timestamp",
                  "id": 1
                },
                "endTime": {
                  "type": "google.protobuf.Timestamp",
                  "id": 2
                }
              }
            },
            "Color": {
              "fields": {
                "red": {
                  "type": "float",
                  "id": 1
                },
                "green": {
                  "type": "float",
                  "id": 2
                },
                "blue": {
                  "type": "float",
                  "id": 3
                },
                "alpha": {
                  "type": "google.protobuf.FloatValue",
                  "id": 4
                }
              }
            }
          }
        },
        "longrunning": {
          "options": {
            "cc_enable_arenas": true,
            "csharp_namespace": "Google.LongRunning",
            "go_package": "google.golang.org/genproto/googleapis/longrunning;longrunning",
            "java_multiple_files": true,
            "java_outer_classname": "OperationsProto",
            "java_package": "com.google.longrunning",
            "php_namespace": "Google\\LongRunning"
          },
          "nested": {
            "operationInfo": {
              "type": "google.longrunning.OperationInfo",
              "id": 1049,
              "extend": "google.protobuf.MethodOptions"
            },
            "Operations": {
              "options": {
                "(google.api.default_host)": "longrunning.googleapis.com"
              },
              "methods": {
                "ListOperations": {
                  "requestType": "ListOperationsRequest",
                  "responseType": "ListOperationsResponse",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations}",
                    "(google.api.method_signature)": "name,filter"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name,filter"
                    }
                  ]
                },
                "GetOperation": {
                  "requestType": "GetOperationRequest",
                  "responseType": "Operation",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "DeleteOperation": {
                  "requestType": "DeleteOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).delete": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "delete": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "CancelOperation": {
                  "requestType": "CancelOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).post": "/v1/{name=operations/**}:cancel",
                    "(google.api.http).body": "*",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "post": "/v1/{name=operations/**}:cancel",
                        "body": "*"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "WaitOperation": {
                  "requestType": "WaitOperationRequest",
                  "responseType": "Operation"
                }
              }
            },
            "Operation": {
              "oneofs": {
                "result": {
                  "oneof": [
                    "error",
                    "response"
                  ]
                }
              },
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "metadata": {
                  "type": "google.protobuf.Any",
                  "id": 2
                },
                "done": {
                  "type": "bool",
                  "id": 3
                },
                "error": {
                  "type": "google.rpc.Status",
                  "id": 4
                },
                "response": {
                  "type": "google.protobuf.Any",
                  "id": 5
                }
              }
            },
            "GetOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "ListOperationsRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 4
                },
                "filter": {
                  "type": "string",
                  "id": 1
                },
                "pageSize": {
                  "type": "int32",
                  "id": 2
                },
                "pageToken": {
                  "type": "string",
                  "id": 3
                }
              }
            },
            "ListOperationsResponse": {
              "fields": {
                "operations": {
                  "rule": "repeated",
                  "type": "Operation",
                  "id": 1
                },
                "nextPageToken": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "CancelOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "DeleteOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "WaitOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "timeout": {
                  "type": "google.protobuf.Duration",
                  "id": 2
                }
              }
            },
            "OperationInfo": {
              "fields": {
                "responseType": {
                  "type": "string",
                  "id": 1
                },
                "metadataType": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        }
      }
    }
  }
}