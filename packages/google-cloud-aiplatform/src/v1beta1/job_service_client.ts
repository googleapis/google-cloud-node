// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

/* global window */
import type * as gax from 'google-gax';
import type {
  Callback,
  CallOptions,
  Descriptors,
  ClientOptions,
  GrpcClientOptions,
  LROperation,
  PaginationCallback,
  GaxCall,
  IamClient,
  IamProtos,
  LocationsClient,
  LocationProtos,
} from 'google-gax';
import {Transform} from 'stream';
import * as protos from '../../protos/protos';
import jsonProtos = require('../../protos/protos.json');
/**
 * Client JSON configuration object, loaded from
 * `src/v1beta1/job_service_client_config.json`.
 * This file defines retry strategy and timeouts for all API methods in this library.
 */
import * as gapicConfig from './job_service_client_config.json';
const version = require('../../../package.json').version;

/**
 *  A service for creating and managing Vertex AI's jobs.
 * @class
 * @memberof v1beta1
 */
export class JobServiceClient {
  private _terminated = false;
  private _opts: ClientOptions;
  private _providedCustomServicePath: boolean;
  private _gaxModule: typeof gax | typeof gax.fallback;
  private _gaxGrpc: gax.GrpcClient | gax.fallback.GrpcClient;
  private _protos: {};
  private _defaults: {[method: string]: gax.CallSettings};
  auth: gax.GoogleAuth;
  descriptors: Descriptors = {
    page: {},
    stream: {},
    longrunning: {},
    batching: {},
  };
  warn: (code: string, message: string, warnType?: string) => void;
  innerApiCalls: {[name: string]: Function};
  iamClient: IamClient;
  locationsClient: LocationsClient;
  pathTemplates: {[name: string]: gax.PathTemplate};
  operationsClient: gax.OperationsClient;
  jobServiceStub?: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of JobServiceClient.
   *
   * @param {object} [options] - The configuration object.
   * The options accepted by the constructor are described in detail
   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
   * The common options are:
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
   *     Follows the structure of {@link gapicConfig}.
   * @param {boolean | "rest"} [options.fallback] - Use HTTP fallback mode.
   *     Pass "rest" to use HTTP/1.1 REST API instead of gRPC.
   *     For more information, please check the
   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
   *     need to avoid loading the default gRPC version and want to use the fallback
   *     HTTP implementation. Load only fallback version and pass it to the constructor:
   *     ```
   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
   *     const client = new JobServiceClient({fallback: 'rest'}, gax);
   *     ```
   */
  constructor(
    opts?: ClientOptions,
    gaxInstance?: typeof gax | typeof gax.fallback
  ) {
    // Ensure that options include all the required fields.
    const staticMembers = this.constructor as typeof JobServiceClient;
    const servicePath =
      opts?.servicePath || opts?.apiEndpoint || staticMembers.servicePath;
    this._providedCustomServicePath = !!(
      opts?.servicePath || opts?.apiEndpoint
    );
    const port = opts?.port || staticMembers.port;
    const clientConfig = opts?.clientConfig ?? {};
    const fallback =
      opts?.fallback ??
      (typeof window !== 'undefined' && typeof window?.fetch === 'function');
    opts = Object.assign({servicePath, port, clientConfig, fallback}, opts);

    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.
    if (servicePath !== staticMembers.servicePath && !('scopes' in opts)) {
      opts['scopes'] = staticMembers.scopes;
    }

    // Load google-gax module synchronously if needed
    if (!gaxInstance) {
      gaxInstance = require('google-gax') as typeof gax;
    }

    // Choose either gRPC or proto-over-HTTP implementation of google-gax.
    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;

    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.
    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);

    // Save options to use in initialize() method.
    this._opts = opts;

    // Save the auth object to the client, for use by other methods.
    this.auth = this._gaxGrpc.auth as gax.GoogleAuth;

    // Set useJWTAccessWithScope on the auth object.
    this.auth.useJWTAccessWithScope = true;

    // Set defaultServicePath on the auth object.
    this.auth.defaultServicePath = staticMembers.servicePath;

    // Set the default scopes in auth client if needed.
    if (servicePath === staticMembers.servicePath) {
      this.auth.defaultScopes = staticMembers.scopes;
    }
    this.iamClient = new this._gaxModule.IamClient(this._gaxGrpc, opts);

    this.locationsClient = new this._gaxModule.LocationsClient(
      this._gaxGrpc,
      opts
    );

    // Determine the client header string.
    const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];
    if (typeof process !== 'undefined' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${this._gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
    } else if (opts.fallback === 'rest') {
      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);

    // This API contains "path templates"; forward-slash-separated
    // identifiers to uniquely identify resources within the API.
    // Create useful helper objects for these.
    this.pathTemplates = {
      annotationPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/datasets/{dataset}/dataItems/{data_item}/annotations/{annotation}'
      ),
      annotationSpecPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/datasets/{dataset}/annotationSpecs/{annotation_spec}'
      ),
      artifactPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}'
      ),
      batchPredictionJobPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}'
      ),
      contextPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/metadataStores/{metadata_store}/contexts/{context}'
      ),
      customJobPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/customJobs/{custom_job}'
      ),
      dataItemPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/datasets/{dataset}/dataItems/{data_item}'
      ),
      dataLabelingJobPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}'
      ),
      datasetPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/datasets/{dataset}'
      ),
      deploymentResourcePoolPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}'
      ),
      endpointPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/endpoints/{endpoint}'
      ),
      entityTypePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}'
      ),
      executionPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/metadataStores/{metadata_store}/executions/{execution}'
      ),
      featurePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}'
      ),
      featurestorePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/featurestores/{featurestore}'
      ),
      hyperparameterTuningJobPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_job}'
      ),
      indexPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/indexes/{index}'
      ),
      indexEndpointPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}'
      ),
      locationPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}'
      ),
      metadataSchemaPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/metadataStores/{metadata_store}/metadataSchemas/{metadata_schema}'
      ),
      metadataStorePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/metadataStores/{metadata_store}'
      ),
      modelPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/models/{model}'
      ),
      modelDeploymentMonitoringJobPathTemplate:
        new this._gaxModule.PathTemplate(
          'projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}'
        ),
      modelEvaluationPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}'
      ),
      modelEvaluationSlicePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}/slices/{slice}'
      ),
      pipelineJobPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/pipelineJobs/{pipeline_job}'
      ),
      savedQueryPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/datasets/{dataset}/savedQueries/{saved_query}'
      ),
      specialistPoolPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/specialistPools/{specialist_pool}'
      ),
      studyPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/studies/{study}'
      ),
      tensorboardPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/tensorboards/{tensorboard}'
      ),
      tensorboardExperimentPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}'
      ),
      tensorboardRunPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}'
      ),
      tensorboardTimeSeriesPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}'
      ),
      trainingPipelinePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/trainingPipelines/{training_pipeline}'
      ),
      trialPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/studies/{study}/trials/{trial}'
      ),
    };

    // Some of the methods on this service return "paged" results,
    // (e.g. 50 results at a time, with tokens to get subsequent
    // pages). Denote the keys used for pagination and results.
    this.descriptors.page = {
      listCustomJobs: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'customJobs'
      ),
      listDataLabelingJobs: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'dataLabelingJobs'
      ),
      listHyperparameterTuningJobs: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'hyperparameterTuningJobs'
      ),
      listBatchPredictionJobs: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'batchPredictionJobs'
      ),
      searchModelDeploymentMonitoringStatsAnomalies:
        new this._gaxModule.PageDescriptor(
          'pageToken',
          'nextPageToken',
          'monitoringStats'
        ),
      listModelDeploymentMonitoringJobs: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'modelDeploymentMonitoringJobs'
      ),
    };

    const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);
    // This API contains "long-running operations", which return a
    // an Operation object that allows for tracking of the operation,
    // rather than holding a request open.
    const lroOptions: GrpcClientOptions = {
      auth: this.auth,
      grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined,
    };
    if (opts.fallback === 'rest') {
      lroOptions.protoJson = protoFilesRoot;
      lroOptions.httpRules = [
        {
          selector: 'google.cloud.location.Locations.GetLocation',
          get: '/ui/{name=projects/*/locations/*}',
          additional_bindings: [
            {get: '/v1beta1/{name=projects/*/locations/*}'},
          ],
        },
        {
          selector: 'google.cloud.location.Locations.ListLocations',
          get: '/ui/{name=projects/*}/locations',
          additional_bindings: [{get: '/v1beta1/{name=projects/*}/locations'}],
        },
        {
          selector: 'google.iam.v1.IAMPolicy.GetIamPolicy',
          post: '/v1beta1/{resource=projects/*/locations/*/featurestores/*}:getIamPolicy',
          body: '*',
          additional_bindings: [
            {
              post: '/v1beta1/{resource=projects/*/locations/*/featurestores/*/entityTypes/*}:getIamPolicy',
            },
            {
              post: '/ui/{resource=projects/*/locations/*/featurestores/*}:getIamPolicy',
            },
            {
              post: '/ui/{resource=projects/*/locations/*/featurestores/*/entityTypes/*}:getIamPolicy',
            },
          ],
        },
        {
          selector: 'google.iam.v1.IAMPolicy.SetIamPolicy',
          post: '/v1beta1/{resource=projects/*/locations/*/featurestores/*}:setIamPolicy',
          body: '*',
          additional_bindings: [
            {
              post: '/v1beta1/{resource=projects/*/locations/*/featurestores/*/entityTypes/*}:setIamPolicy',
              body: '*',
            },
            {
              post: '/ui/{resource=projects/*/locations/*/featurestores/*}:setIamPolicy',
              body: '*',
            },
            {
              post: '/ui/{resource=projects/*/locations/*/featurestores/*/entityTypes/*}:setIamPolicy',
              body: '*',
            },
          ],
        },
        {
          selector: 'google.iam.v1.IAMPolicy.TestIamPermissions',
          post: '/v1beta1/{resource=projects/*/locations/*/featurestores/*}:testIamPermissions',
          body: '*',
          additional_bindings: [
            {
              post: '/v1beta1/{resource=projects/*/locations/*/featurestores/*/entityTypes/*}:testIamPermissions',
            },
            {
              post: '/ui/{resource=projects/*/locations/*/featurestores/*}:testIamPermissions',
            },
            {
              post: '/ui/{resource=projects/*/locations/*/featurestores/*/entityTypes/*}:testIamPermissions',
            },
          ],
        },
        {
          selector: 'google.longrunning.Operations.CancelOperation',
          post: '/ui/{name=projects/*/locations/*/operations/*}:cancel',
          additional_bindings: [
            {
              post: '/ui/{name=projects/*/locations/*/datasets/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/datasets/*/dataItems/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/datasets/*/savedQueries/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/datasets/*/annotationSpecs/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/datasets/*/dataItems/*/annotations/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/deploymentResourcePools/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/edgeDevices/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/endpoints/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/featurestores/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/featurestores/*/entityTypes/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/customJobs/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/dataLabelingJobs/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/hyperparameterTuningJobs/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/indexes/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/indexEndpoints/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/migratableResources/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/models/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/models/*/evaluations/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/studies/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/studies/*/trials/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/trainingPipelines/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/pipelineJobs/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/specialistPools/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/tensorboards/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/tensorboards/*/experiments/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/datasets/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/datasets/*/dataItems/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/datasets/*/savedQueries/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/datasets/*/annotationSpecs/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/datasets/*/dataItems/*/annotations/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/deploymentResourcePools/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/edgeDevices/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/endpoints/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/featurestores/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/featurestores/*/entityTypes/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/customJobs/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/dataLabelingJobs/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/hyperparameterTuningJobs/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/indexes/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/indexEndpoints/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/migratableResources/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/models/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/models/*/evaluations/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/persistentResources/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/studies/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/studies/*/trials/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/trainingPipelines/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/pipelineJobs/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/schedules/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/specialistPools/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/tensorboards/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*/operations/*}:cancel',
            },
          ],
        },
        {
          selector: 'google.longrunning.Operations.DeleteOperation',
          delete: '/ui/{name=projects/*/locations/*/operations/*}',
          additional_bindings: [
            {
              delete:
                '/ui/{name=projects/*/locations/*/datasets/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/datasets/*/dataItems/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/datasets/*/savedQueries/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/datasets/*/annotationSpecs/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/datasets/*/dataItems/*/annotations/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/deploymentResourcePools/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/edgeDevices/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/endpoints/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/featurestores/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/featurestores/*/entityTypes/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/customJobs/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/dataLabelingJobs/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/hyperparameterTuningJobs/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/indexes/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/indexEndpoints/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/migratableResources/*/operations/*}',
            },
            {delete: '/ui/{name=projects/*/locations/*/models/*/operations/*}'},
            {
              delete:
                '/ui/{name=projects/*/locations/*/models/*/evaluations/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/studies/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/studies/*/trials/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/trainingPipelines/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/pipelineJobs/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/specialistPools/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/tensorboards/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/tensorboards/*/experiments/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*/operations/*}',
            },
            {delete: '/v1beta1/{name=projects/*/locations/*/operations/*}'},
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/datasets/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/datasets/*/dataItems/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/datasets/*/savedQueries/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/datasets/*/annotationSpecs/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/datasets/*/dataItems/*/annotations/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/deploymentResourcePools/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/edgeDevices/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/endpoints/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/featurestores/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/featurestores/*/entityTypes/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/customJobs/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/dataLabelingJobs/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/hyperparameterTuningJobs/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/indexes/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/indexEndpoints/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/migratableResources/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/models/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/models/*/evaluations/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/persistentResources/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/studies/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/studies/*/trials/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/trainingPipelines/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/pipelineJobs/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/schedules/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/specialistPools/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/tensorboards/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*/operations/*}',
            },
          ],
        },
        {
          selector: 'google.longrunning.Operations.GetOperation',
          get: '/ui/{name=projects/*/locations/*/operations/*}',
          additional_bindings: [
            {get: '/ui/{name=projects/*/locations/*/datasets/*/operations/*}'},
            {
              get: '/ui/{name=projects/*/locations/*/datasets/*/dataItems/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/datasets/*/savedQueries/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/datasets/*/annotationSpecs/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/datasets/*/dataItems/*/annotations/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/deploymentResourcePools/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/edgeDeploymentJobs/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/edgeDevices/*/operations/*}',
            },
            {get: '/ui/{name=projects/*/locations/*/endpoints/*/operations/*}'},
            {
              get: '/ui/{name=projects/*/locations/*/featurestores/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/featurestores/*/entityTypes/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/customJobs/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/dataLabelingJobs/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/hyperparameterTuningJobs/*/operations/*}',
            },
            {get: '/ui/{name=projects/*/locations/*/indexes/*/operations/*}'},
            {
              get: '/ui/{name=projects/*/locations/*/indexEndpoints/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/migratableResources/*/operations/*}',
            },
            {get: '/ui/{name=projects/*/locations/*/models/*/operations/*}'},
            {
              get: '/ui/{name=projects/*/locations/*/models/*/evaluations/*/operations/*}',
            },
            {get: '/ui/{name=projects/*/locations/*/studies/*/operations/*}'},
            {
              get: '/ui/{name=projects/*/locations/*/studies/*/trials/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/trainingPipelines/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/pipelineJobs/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/specialistPools/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/tensorboards/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/tensorboards/*/experiments/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*/operations/*}',
            },
            {get: '/v1beta1/{name=projects/*/locations/*/operations/*}'},
            {
              get: '/v1beta1/{name=projects/*/locations/*/datasets/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/datasets/*/dataItems/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/datasets/*/savedQueries/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/datasets/*/annotationSpecs/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/datasets/*/dataItems/*/annotations/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/deploymentResourcePools/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/edgeDevices/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/endpoints/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/featurestores/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/featurestores/*/entityTypes/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/customJobs/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/dataLabelingJobs/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/hyperparameterTuningJobs/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/indexes/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/indexEndpoints/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/migratableResources/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/models/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/models/*/evaluations/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/persistentResources/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/studies/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/studies/*/trials/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/trainingPipelines/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/pipelineJobs/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/schedules/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/specialistPools/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/tensorboards/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*/operations/*}',
            },
          ],
        },
        {
          selector: 'google.longrunning.Operations.ListOperations',
          get: '/ui/{name=projects/*/locations/*}/operations',
          additional_bindings: [
            {get: '/ui/{name=projects/*/locations/*/datasets/*}/operations'},
            {
              get: '/ui/{name=projects/*/locations/*/datasets/*/dataItems/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/datasets/*/savedQueries/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/datasets/*/annotationSpecs/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/datasets/*/dataItems/*/annotations/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/deploymentResourcePools/*}/operations',
            },
            {get: '/ui/{name=projects/*/locations/*/edgeDevices/*}/operations'},
            {get: '/ui/{name=projects/*/locations/*/endpoints/*}/operations'},
            {
              get: '/ui/{name=projects/*/locations/*/featurestores/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/featurestores/*/entityTypes/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*}/operations',
            },
            {get: '/ui/{name=projects/*/locations/*/customJobs/*}/operations'},
            {
              get: '/ui/{name=projects/*/locations/*/dataLabelingJobs/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/hyperparameterTuningJobs/*}/operations',
            },
            {get: '/ui/{name=projects/*/locations/*/indexes/*}/operations'},
            {
              get: '/ui/{name=projects/*/locations/*/indexEndpoints/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/migratableResources/*}/operations',
            },
            {get: '/ui/{name=projects/*/locations/*/models/*}/operations'},
            {
              get: '/ui/{name=projects/*/locations/*/models/*/evaluations/*}/operations',
            },
            {get: '/ui/{name=projects/*/locations/*/studies/*}/operations'},
            {
              get: '/ui/{name=projects/*/locations/*/studies/*/trials/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/trainingPipelines/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/pipelineJobs/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/specialistPools/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/tensorboards/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/tensorboards/*/experiments/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*}/operations',
            },
            {get: '/v1beta1/{name=projects/*/locations/*}/operations'},
            {
              get: '/v1beta1/{name=projects/*/locations/*/datasets/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/datasets/*/dataItems/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/datasets/*/savedQueries/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/datasets/*/annotationSpecs/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/datasets/*/dataItems/*/annotations/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/deploymentResourcePools/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/edgeDevices/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/endpoints/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/featurestores/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/featurestores/*/entityTypes/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/customJobs/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/dataLabelingJobs/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/hyperparameterTuningJobs/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/indexes/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/indexEndpoints/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/migratableResources/*}/operations',
            },
            {get: '/v1beta1/{name=projects/*/locations/*/models/*}/operations'},
            {
              get: '/v1beta1/{name=projects/*/locations/*/models/*/evaluations/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/persistentResources/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/studies/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/studies/*/trials/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/trainingPipelines/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/pipelineJobs/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/schedules/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/specialistPools/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/tensorboards/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*}/operations',
            },
          ],
        },
        {
          selector: 'google.longrunning.Operations.WaitOperation',
          post: '/ui/{name=projects/*/locations/*/operations/*}:wait',
          additional_bindings: [
            {
              post: '/ui/{name=projects/*/locations/*/datasets/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/datasets/*/dataItems/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/datasets/*/savedQueries/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/datasets/*/annotationSpecs/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/datasets/*/dataItems/*/annotations/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/deploymentResourcePools/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/edgeDevices/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/endpoints/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/featurestores/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/featurestores/*/entityTypes/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/customJobs/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/dataLabelingJobs/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/hyperparameterTuningJobs/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/indexes/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/indexEndpoints/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/migratableResources/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/models/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/models/*/evaluations/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/studies/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/studies/*/trials/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/trainingPipelines/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/pipelineJobs/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/specialistPools/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/tensorboards/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/tensorboards/*/experiments/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*/operations/*}:wait',
            },
            {post: '/v1beta1/{name=projects/*/locations/*/operations/*}:wait'},
            {
              post: '/v1beta1/{name=projects/*/locations/*/datasets/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/datasets/*/dataItems/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/datasets/*/savedQueries/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/datasets/*/annotationSpecs/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/datasets/*/dataItems/*/annotations/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/deploymentResourcePools/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/edgeDevices/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/endpoints/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/featurestores/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/featurestores/*/entityTypes/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/customJobs/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/dataLabelingJobs/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/hyperparameterTuningJobs/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/indexes/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/indexEndpoints/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/migratableResources/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/models/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/models/*/evaluations/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/persistentResources/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/studies/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/studies/*/trials/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/trainingPipelines/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/pipelineJobs/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/schedules/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/specialistPools/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/tensorboards/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*/operations/*}:wait',
            },
          ],
        },
      ];
    }
    this.operationsClient = this._gaxModule
      .lro(lroOptions)
      .operationsClient(opts);
    const deleteCustomJobResponse = protoFilesRoot.lookup(
      '.google.protobuf.Empty'
    ) as gax.protobuf.Type;
    const deleteCustomJobMetadata = protoFilesRoot.lookup(
      '.google.cloud.aiplatform.v1beta1.DeleteOperationMetadata'
    ) as gax.protobuf.Type;
    const deleteDataLabelingJobResponse = protoFilesRoot.lookup(
      '.google.protobuf.Empty'
    ) as gax.protobuf.Type;
    const deleteDataLabelingJobMetadata = protoFilesRoot.lookup(
      '.google.cloud.aiplatform.v1beta1.DeleteOperationMetadata'
    ) as gax.protobuf.Type;
    const deleteHyperparameterTuningJobResponse = protoFilesRoot.lookup(
      '.google.protobuf.Empty'
    ) as gax.protobuf.Type;
    const deleteHyperparameterTuningJobMetadata = protoFilesRoot.lookup(
      '.google.cloud.aiplatform.v1beta1.DeleteOperationMetadata'
    ) as gax.protobuf.Type;
    const deleteBatchPredictionJobResponse = protoFilesRoot.lookup(
      '.google.protobuf.Empty'
    ) as gax.protobuf.Type;
    const deleteBatchPredictionJobMetadata = protoFilesRoot.lookup(
      '.google.cloud.aiplatform.v1beta1.DeleteOperationMetadata'
    ) as gax.protobuf.Type;
    const updateModelDeploymentMonitoringJobResponse = protoFilesRoot.lookup(
      '.google.cloud.aiplatform.v1beta1.ModelDeploymentMonitoringJob'
    ) as gax.protobuf.Type;
    const updateModelDeploymentMonitoringJobMetadata = protoFilesRoot.lookup(
      '.google.cloud.aiplatform.v1beta1.UpdateModelDeploymentMonitoringJobOperationMetadata'
    ) as gax.protobuf.Type;
    const deleteModelDeploymentMonitoringJobResponse = protoFilesRoot.lookup(
      '.google.protobuf.Empty'
    ) as gax.protobuf.Type;
    const deleteModelDeploymentMonitoringJobMetadata = protoFilesRoot.lookup(
      '.google.cloud.aiplatform.v1beta1.DeleteOperationMetadata'
    ) as gax.protobuf.Type;

    this.descriptors.longrunning = {
      deleteCustomJob: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        deleteCustomJobResponse.decode.bind(deleteCustomJobResponse),
        deleteCustomJobMetadata.decode.bind(deleteCustomJobMetadata)
      ),
      deleteDataLabelingJob: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        deleteDataLabelingJobResponse.decode.bind(
          deleteDataLabelingJobResponse
        ),
        deleteDataLabelingJobMetadata.decode.bind(deleteDataLabelingJobMetadata)
      ),
      deleteHyperparameterTuningJob: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        deleteHyperparameterTuningJobResponse.decode.bind(
          deleteHyperparameterTuningJobResponse
        ),
        deleteHyperparameterTuningJobMetadata.decode.bind(
          deleteHyperparameterTuningJobMetadata
        )
      ),
      deleteBatchPredictionJob: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        deleteBatchPredictionJobResponse.decode.bind(
          deleteBatchPredictionJobResponse
        ),
        deleteBatchPredictionJobMetadata.decode.bind(
          deleteBatchPredictionJobMetadata
        )
      ),
      updateModelDeploymentMonitoringJob:
        new this._gaxModule.LongrunningDescriptor(
          this.operationsClient,
          updateModelDeploymentMonitoringJobResponse.decode.bind(
            updateModelDeploymentMonitoringJobResponse
          ),
          updateModelDeploymentMonitoringJobMetadata.decode.bind(
            updateModelDeploymentMonitoringJobMetadata
          )
        ),
      deleteModelDeploymentMonitoringJob:
        new this._gaxModule.LongrunningDescriptor(
          this.operationsClient,
          deleteModelDeploymentMonitoringJobResponse.decode.bind(
            deleteModelDeploymentMonitoringJobResponse
          ),
          deleteModelDeploymentMonitoringJobMetadata.decode.bind(
            deleteModelDeploymentMonitoringJobMetadata
          )
        ),
    };

    // Put together the default options sent with requests.
    this._defaults = this._gaxGrpc.constructSettings(
      'google.cloud.aiplatform.v1beta1.JobService',
      gapicConfig as gax.ClientConfig,
      opts.clientConfig || {},
      {'x-goog-api-client': clientHeader.join(' ')}
    );

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this.innerApiCalls = {};

    // Add a warn function to the client constructor so it can be easily tested.
    this.warn = this._gaxModule.warn;
  }

  /**
   * Initialize the client.
   * Performs asynchronous operations (such as authentication) and prepares the client.
   * This function will be called automatically when any class method is called for the
   * first time, but if you need to initialize it before calling an actual method,
   * feel free to call initialize() directly.
   *
   * You can await on this method if you want to make sure the client is initialized.
   *
   * @returns {Promise} A promise that resolves to an authenticated service stub.
   */
  initialize() {
    // If the client stub promise is already initialized, return immediately.
    if (this.jobServiceStub) {
      return this.jobServiceStub;
    }

    // Put together the "service stub" for
    // google.cloud.aiplatform.v1beta1.JobService.
    this.jobServiceStub = this._gaxGrpc.createStub(
      this._opts.fallback
        ? (this._protos as protobuf.Root).lookupService(
            'google.cloud.aiplatform.v1beta1.JobService'
          )
        : // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (this._protos as any).google.cloud.aiplatform.v1beta1.JobService,
      this._opts,
      this._providedCustomServicePath
    ) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const jobServiceStubMethods = [
      'createCustomJob',
      'getCustomJob',
      'listCustomJobs',
      'deleteCustomJob',
      'cancelCustomJob',
      'createDataLabelingJob',
      'getDataLabelingJob',
      'listDataLabelingJobs',
      'deleteDataLabelingJob',
      'cancelDataLabelingJob',
      'createHyperparameterTuningJob',
      'getHyperparameterTuningJob',
      'listHyperparameterTuningJobs',
      'deleteHyperparameterTuningJob',
      'cancelHyperparameterTuningJob',
      'createBatchPredictionJob',
      'getBatchPredictionJob',
      'listBatchPredictionJobs',
      'deleteBatchPredictionJob',
      'cancelBatchPredictionJob',
      'createModelDeploymentMonitoringJob',
      'searchModelDeploymentMonitoringStatsAnomalies',
      'getModelDeploymentMonitoringJob',
      'listModelDeploymentMonitoringJobs',
      'updateModelDeploymentMonitoringJob',
      'deleteModelDeploymentMonitoringJob',
      'pauseModelDeploymentMonitoringJob',
      'resumeModelDeploymentMonitoringJob',
    ];
    for (const methodName of jobServiceStubMethods) {
      const callPromise = this.jobServiceStub.then(
        stub =>
          (...args: Array<{}>) => {
            if (this._terminated) {
              return Promise.reject('The client has already been closed.');
            }
            const func = stub[methodName];
            return func.apply(stub, args);
          },
        (err: Error | null | undefined) => () => {
          throw err;
        }
      );

      const descriptor =
        this.descriptors.page[methodName] ||
        this.descriptors.longrunning[methodName] ||
        undefined;
      const apiCall = this._gaxModule.createApiCall(
        callPromise,
        this._defaults[methodName],
        descriptor,
        this._opts.fallback
      );

      this.innerApiCalls[methodName] = apiCall;
    }

    return this.jobServiceStub;
  }

  /**
   * The DNS address for this API service.
   * @returns {string} The DNS address for this service.
   */
  static get servicePath() {
    return 'aiplatform.googleapis.com';
  }

  /**
   * The DNS address for this API service - same as servicePath(),
   * exists for compatibility reasons.
   * @returns {string} The DNS address for this service.
   */
  static get apiEndpoint() {
    return 'aiplatform.googleapis.com';
  }

  /**
   * The port for this API service.
   * @returns {number} The default port for this service.
   */
  static get port() {
    return 443;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   * @returns {string[]} List of default scopes.
   */
  static get scopes() {
    return ['https://www.googleapis.com/auth/cloud-platform'];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @returns {Promise} A promise that resolves to string containing the project ID.
   */
  getProjectId(
    callback?: Callback<string, undefined, undefined>
  ): Promise<string> | void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------
  /**
   * Creates a CustomJob. A created CustomJob right away
   * will be attempted to be run.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the Location to create the CustomJob in.
   *   Format: `projects/{project}/locations/{location}`
   * @param {google.cloud.aiplatform.v1beta1.CustomJob} request.customJob
   *   Required. The CustomJob to create.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [CustomJob]{@link google.cloud.aiplatform.v1beta1.CustomJob}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.create_custom_job.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_CreateCustomJob_async
   */
  createCustomJob(
    request?: protos.google.cloud.aiplatform.v1beta1.ICreateCustomJobRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.ICustomJob,
      (
        | protos.google.cloud.aiplatform.v1beta1.ICreateCustomJobRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  createCustomJob(
    request: protos.google.cloud.aiplatform.v1beta1.ICreateCustomJobRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.aiplatform.v1beta1.ICustomJob,
      | protos.google.cloud.aiplatform.v1beta1.ICreateCustomJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createCustomJob(
    request: protos.google.cloud.aiplatform.v1beta1.ICreateCustomJobRequest,
    callback: Callback<
      protos.google.cloud.aiplatform.v1beta1.ICustomJob,
      | protos.google.cloud.aiplatform.v1beta1.ICreateCustomJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createCustomJob(
    request?: protos.google.cloud.aiplatform.v1beta1.ICreateCustomJobRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.aiplatform.v1beta1.ICustomJob,
          | protos.google.cloud.aiplatform.v1beta1.ICreateCustomJobRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.aiplatform.v1beta1.ICustomJob,
      | protos.google.cloud.aiplatform.v1beta1.ICreateCustomJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.ICustomJob,
      (
        | protos.google.cloud.aiplatform.v1beta1.ICreateCustomJobRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createCustomJob(request, options, callback);
  }
  /**
   * Gets a CustomJob.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the CustomJob resource.
   *   Format:
   *   `projects/{project}/locations/{location}/customJobs/{custom_job}`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [CustomJob]{@link google.cloud.aiplatform.v1beta1.CustomJob}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.get_custom_job.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_GetCustomJob_async
   */
  getCustomJob(
    request?: protos.google.cloud.aiplatform.v1beta1.IGetCustomJobRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.ICustomJob,
      protos.google.cloud.aiplatform.v1beta1.IGetCustomJobRequest | undefined,
      {} | undefined
    ]
  >;
  getCustomJob(
    request: protos.google.cloud.aiplatform.v1beta1.IGetCustomJobRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.aiplatform.v1beta1.ICustomJob,
      | protos.google.cloud.aiplatform.v1beta1.IGetCustomJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getCustomJob(
    request: protos.google.cloud.aiplatform.v1beta1.IGetCustomJobRequest,
    callback: Callback<
      protos.google.cloud.aiplatform.v1beta1.ICustomJob,
      | protos.google.cloud.aiplatform.v1beta1.IGetCustomJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getCustomJob(
    request?: protos.google.cloud.aiplatform.v1beta1.IGetCustomJobRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.aiplatform.v1beta1.ICustomJob,
          | protos.google.cloud.aiplatform.v1beta1.IGetCustomJobRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.aiplatform.v1beta1.ICustomJob,
      | protos.google.cloud.aiplatform.v1beta1.IGetCustomJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.ICustomJob,
      protos.google.cloud.aiplatform.v1beta1.IGetCustomJobRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getCustomJob(request, options, callback);
  }
  /**
   * Cancels a CustomJob.
   * Starts asynchronous cancellation on the CustomJob. The server
   * makes a best effort to cancel the job, but success is not
   * guaranteed. Clients can use
   * {@link google.cloud.aiplatform.v1beta1.JobService.GetCustomJob|JobService.GetCustomJob}
   * or other methods to check whether the cancellation succeeded or whether the
   * job completed despite cancellation. On successful cancellation,
   * the CustomJob is not deleted; instead it becomes a job with
   * a {@link google.cloud.aiplatform.v1beta1.CustomJob.error|CustomJob.error} value
   * with a {@link google.rpc.Status.code|google.rpc.Status.code} of 1, corresponding
   * to `Code.CANCELLED`, and
   * {@link google.cloud.aiplatform.v1beta1.CustomJob.state|CustomJob.state} is set
   * to `CANCELLED`.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the CustomJob to cancel.
   *   Format:
   *   `projects/{project}/locations/{location}/customJobs/{custom_job}`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.cancel_custom_job.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_CancelCustomJob_async
   */
  cancelCustomJob(
    request?: protos.google.cloud.aiplatform.v1beta1.ICancelCustomJobRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.aiplatform.v1beta1.ICancelCustomJobRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  cancelCustomJob(
    request: protos.google.cloud.aiplatform.v1beta1.ICancelCustomJobRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.aiplatform.v1beta1.ICancelCustomJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  cancelCustomJob(
    request: protos.google.cloud.aiplatform.v1beta1.ICancelCustomJobRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.aiplatform.v1beta1.ICancelCustomJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  cancelCustomJob(
    request?: protos.google.cloud.aiplatform.v1beta1.ICancelCustomJobRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.aiplatform.v1beta1.ICancelCustomJobRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.aiplatform.v1beta1.ICancelCustomJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.aiplatform.v1beta1.ICancelCustomJobRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.cancelCustomJob(request, options, callback);
  }
  /**
   * Creates a DataLabelingJob.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent of the DataLabelingJob.
   *   Format: `projects/{project}/locations/{location}`
   * @param {google.cloud.aiplatform.v1beta1.DataLabelingJob} request.dataLabelingJob
   *   Required. The DataLabelingJob to create.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [DataLabelingJob]{@link google.cloud.aiplatform.v1beta1.DataLabelingJob}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.create_data_labeling_job.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_CreateDataLabelingJob_async
   */
  createDataLabelingJob(
    request?: protos.google.cloud.aiplatform.v1beta1.ICreateDataLabelingJobRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IDataLabelingJob,
      (
        | protos.google.cloud.aiplatform.v1beta1.ICreateDataLabelingJobRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  createDataLabelingJob(
    request: protos.google.cloud.aiplatform.v1beta1.ICreateDataLabelingJobRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.aiplatform.v1beta1.IDataLabelingJob,
      | protos.google.cloud.aiplatform.v1beta1.ICreateDataLabelingJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createDataLabelingJob(
    request: protos.google.cloud.aiplatform.v1beta1.ICreateDataLabelingJobRequest,
    callback: Callback<
      protos.google.cloud.aiplatform.v1beta1.IDataLabelingJob,
      | protos.google.cloud.aiplatform.v1beta1.ICreateDataLabelingJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createDataLabelingJob(
    request?: protos.google.cloud.aiplatform.v1beta1.ICreateDataLabelingJobRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.aiplatform.v1beta1.IDataLabelingJob,
          | protos.google.cloud.aiplatform.v1beta1.ICreateDataLabelingJobRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.aiplatform.v1beta1.IDataLabelingJob,
      | protos.google.cloud.aiplatform.v1beta1.ICreateDataLabelingJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IDataLabelingJob,
      (
        | protos.google.cloud.aiplatform.v1beta1.ICreateDataLabelingJobRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createDataLabelingJob(request, options, callback);
  }
  /**
   * Gets a DataLabelingJob.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the DataLabelingJob.
   *   Format:
   *   `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [DataLabelingJob]{@link google.cloud.aiplatform.v1beta1.DataLabelingJob}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.get_data_labeling_job.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_GetDataLabelingJob_async
   */
  getDataLabelingJob(
    request?: protos.google.cloud.aiplatform.v1beta1.IGetDataLabelingJobRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IDataLabelingJob,
      (
        | protos.google.cloud.aiplatform.v1beta1.IGetDataLabelingJobRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  getDataLabelingJob(
    request: protos.google.cloud.aiplatform.v1beta1.IGetDataLabelingJobRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.aiplatform.v1beta1.IDataLabelingJob,
      | protos.google.cloud.aiplatform.v1beta1.IGetDataLabelingJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getDataLabelingJob(
    request: protos.google.cloud.aiplatform.v1beta1.IGetDataLabelingJobRequest,
    callback: Callback<
      protos.google.cloud.aiplatform.v1beta1.IDataLabelingJob,
      | protos.google.cloud.aiplatform.v1beta1.IGetDataLabelingJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getDataLabelingJob(
    request?: protos.google.cloud.aiplatform.v1beta1.IGetDataLabelingJobRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.aiplatform.v1beta1.IDataLabelingJob,
          | protos.google.cloud.aiplatform.v1beta1.IGetDataLabelingJobRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.aiplatform.v1beta1.IDataLabelingJob,
      | protos.google.cloud.aiplatform.v1beta1.IGetDataLabelingJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IDataLabelingJob,
      (
        | protos.google.cloud.aiplatform.v1beta1.IGetDataLabelingJobRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getDataLabelingJob(request, options, callback);
  }
  /**
   * Cancels a DataLabelingJob. Success of cancellation is not guaranteed.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the DataLabelingJob.
   *   Format:
   *   `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.cancel_data_labeling_job.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_CancelDataLabelingJob_async
   */
  cancelDataLabelingJob(
    request?: protos.google.cloud.aiplatform.v1beta1.ICancelDataLabelingJobRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.aiplatform.v1beta1.ICancelDataLabelingJobRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  cancelDataLabelingJob(
    request: protos.google.cloud.aiplatform.v1beta1.ICancelDataLabelingJobRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.aiplatform.v1beta1.ICancelDataLabelingJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  cancelDataLabelingJob(
    request: protos.google.cloud.aiplatform.v1beta1.ICancelDataLabelingJobRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.aiplatform.v1beta1.ICancelDataLabelingJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  cancelDataLabelingJob(
    request?: protos.google.cloud.aiplatform.v1beta1.ICancelDataLabelingJobRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.aiplatform.v1beta1.ICancelDataLabelingJobRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.aiplatform.v1beta1.ICancelDataLabelingJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.aiplatform.v1beta1.ICancelDataLabelingJobRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.cancelDataLabelingJob(request, options, callback);
  }
  /**
   * Creates a HyperparameterTuningJob
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the Location to create the
   *   HyperparameterTuningJob in. Format:
   *   `projects/{project}/locations/{location}`
   * @param {google.cloud.aiplatform.v1beta1.HyperparameterTuningJob} request.hyperparameterTuningJob
   *   Required. The HyperparameterTuningJob to create.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [HyperparameterTuningJob]{@link google.cloud.aiplatform.v1beta1.HyperparameterTuningJob}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.create_hyperparameter_tuning_job.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_CreateHyperparameterTuningJob_async
   */
  createHyperparameterTuningJob(
    request?: protos.google.cloud.aiplatform.v1beta1.ICreateHyperparameterTuningJobRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IHyperparameterTuningJob,
      (
        | protos.google.cloud.aiplatform.v1beta1.ICreateHyperparameterTuningJobRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  createHyperparameterTuningJob(
    request: protos.google.cloud.aiplatform.v1beta1.ICreateHyperparameterTuningJobRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.aiplatform.v1beta1.IHyperparameterTuningJob,
      | protos.google.cloud.aiplatform.v1beta1.ICreateHyperparameterTuningJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createHyperparameterTuningJob(
    request: protos.google.cloud.aiplatform.v1beta1.ICreateHyperparameterTuningJobRequest,
    callback: Callback<
      protos.google.cloud.aiplatform.v1beta1.IHyperparameterTuningJob,
      | protos.google.cloud.aiplatform.v1beta1.ICreateHyperparameterTuningJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createHyperparameterTuningJob(
    request?: protos.google.cloud.aiplatform.v1beta1.ICreateHyperparameterTuningJobRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.aiplatform.v1beta1.IHyperparameterTuningJob,
          | protos.google.cloud.aiplatform.v1beta1.ICreateHyperparameterTuningJobRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.aiplatform.v1beta1.IHyperparameterTuningJob,
      | protos.google.cloud.aiplatform.v1beta1.ICreateHyperparameterTuningJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IHyperparameterTuningJob,
      (
        | protos.google.cloud.aiplatform.v1beta1.ICreateHyperparameterTuningJobRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createHyperparameterTuningJob(
      request,
      options,
      callback
    );
  }
  /**
   * Gets a HyperparameterTuningJob
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the HyperparameterTuningJob resource.
   *   Format:
   *   `projects/{project}/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_job}`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [HyperparameterTuningJob]{@link google.cloud.aiplatform.v1beta1.HyperparameterTuningJob}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.get_hyperparameter_tuning_job.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_GetHyperparameterTuningJob_async
   */
  getHyperparameterTuningJob(
    request?: protos.google.cloud.aiplatform.v1beta1.IGetHyperparameterTuningJobRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IHyperparameterTuningJob,
      (
        | protos.google.cloud.aiplatform.v1beta1.IGetHyperparameterTuningJobRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  getHyperparameterTuningJob(
    request: protos.google.cloud.aiplatform.v1beta1.IGetHyperparameterTuningJobRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.aiplatform.v1beta1.IHyperparameterTuningJob,
      | protos.google.cloud.aiplatform.v1beta1.IGetHyperparameterTuningJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getHyperparameterTuningJob(
    request: protos.google.cloud.aiplatform.v1beta1.IGetHyperparameterTuningJobRequest,
    callback: Callback<
      protos.google.cloud.aiplatform.v1beta1.IHyperparameterTuningJob,
      | protos.google.cloud.aiplatform.v1beta1.IGetHyperparameterTuningJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getHyperparameterTuningJob(
    request?: protos.google.cloud.aiplatform.v1beta1.IGetHyperparameterTuningJobRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.aiplatform.v1beta1.IHyperparameterTuningJob,
          | protos.google.cloud.aiplatform.v1beta1.IGetHyperparameterTuningJobRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.aiplatform.v1beta1.IHyperparameterTuningJob,
      | protos.google.cloud.aiplatform.v1beta1.IGetHyperparameterTuningJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IHyperparameterTuningJob,
      (
        | protos.google.cloud.aiplatform.v1beta1.IGetHyperparameterTuningJobRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getHyperparameterTuningJob(
      request,
      options,
      callback
    );
  }
  /**
   * Cancels a HyperparameterTuningJob.
   * Starts asynchronous cancellation on the HyperparameterTuningJob. The server
   * makes a best effort to cancel the job, but success is not
   * guaranteed. Clients can use
   * {@link google.cloud.aiplatform.v1beta1.JobService.GetHyperparameterTuningJob|JobService.GetHyperparameterTuningJob}
   * or other methods to check whether the cancellation succeeded or whether the
   * job completed despite cancellation. On successful cancellation,
   * the HyperparameterTuningJob is not deleted; instead it becomes a job with
   * a
   * {@link google.cloud.aiplatform.v1beta1.HyperparameterTuningJob.error|HyperparameterTuningJob.error}
   * value with a {@link google.rpc.Status.code|google.rpc.Status.code} of 1,
   * corresponding to `Code.CANCELLED`, and
   * {@link google.cloud.aiplatform.v1beta1.HyperparameterTuningJob.state|HyperparameterTuningJob.state}
   * is set to `CANCELLED`.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the HyperparameterTuningJob to cancel.
   *   Format:
   *   `projects/{project}/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_job}`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.cancel_hyperparameter_tuning_job.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_CancelHyperparameterTuningJob_async
   */
  cancelHyperparameterTuningJob(
    request?: protos.google.cloud.aiplatform.v1beta1.ICancelHyperparameterTuningJobRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.aiplatform.v1beta1.ICancelHyperparameterTuningJobRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  cancelHyperparameterTuningJob(
    request: protos.google.cloud.aiplatform.v1beta1.ICancelHyperparameterTuningJobRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.aiplatform.v1beta1.ICancelHyperparameterTuningJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  cancelHyperparameterTuningJob(
    request: protos.google.cloud.aiplatform.v1beta1.ICancelHyperparameterTuningJobRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.aiplatform.v1beta1.ICancelHyperparameterTuningJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  cancelHyperparameterTuningJob(
    request?: protos.google.cloud.aiplatform.v1beta1.ICancelHyperparameterTuningJobRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.aiplatform.v1beta1.ICancelHyperparameterTuningJobRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.aiplatform.v1beta1.ICancelHyperparameterTuningJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.aiplatform.v1beta1.ICancelHyperparameterTuningJobRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.cancelHyperparameterTuningJob(
      request,
      options,
      callback
    );
  }
  /**
   * Creates a BatchPredictionJob. A BatchPredictionJob once created will
   * right away be attempted to start.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the Location to create the
   *   BatchPredictionJob in. Format: `projects/{project}/locations/{location}`
   * @param {google.cloud.aiplatform.v1beta1.BatchPredictionJob} request.batchPredictionJob
   *   Required. The BatchPredictionJob to create.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [BatchPredictionJob]{@link google.cloud.aiplatform.v1beta1.BatchPredictionJob}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.create_batch_prediction_job.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_CreateBatchPredictionJob_async
   */
  createBatchPredictionJob(
    request?: protos.google.cloud.aiplatform.v1beta1.ICreateBatchPredictionJobRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IBatchPredictionJob,
      (
        | protos.google.cloud.aiplatform.v1beta1.ICreateBatchPredictionJobRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  createBatchPredictionJob(
    request: protos.google.cloud.aiplatform.v1beta1.ICreateBatchPredictionJobRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.aiplatform.v1beta1.IBatchPredictionJob,
      | protos.google.cloud.aiplatform.v1beta1.ICreateBatchPredictionJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createBatchPredictionJob(
    request: protos.google.cloud.aiplatform.v1beta1.ICreateBatchPredictionJobRequest,
    callback: Callback<
      protos.google.cloud.aiplatform.v1beta1.IBatchPredictionJob,
      | protos.google.cloud.aiplatform.v1beta1.ICreateBatchPredictionJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createBatchPredictionJob(
    request?: protos.google.cloud.aiplatform.v1beta1.ICreateBatchPredictionJobRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.aiplatform.v1beta1.IBatchPredictionJob,
          | protos.google.cloud.aiplatform.v1beta1.ICreateBatchPredictionJobRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.aiplatform.v1beta1.IBatchPredictionJob,
      | protos.google.cloud.aiplatform.v1beta1.ICreateBatchPredictionJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IBatchPredictionJob,
      (
        | protos.google.cloud.aiplatform.v1beta1.ICreateBatchPredictionJobRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createBatchPredictionJob(
      request,
      options,
      callback
    );
  }
  /**
   * Gets a BatchPredictionJob
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the BatchPredictionJob resource.
   *   Format:
   *   `projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [BatchPredictionJob]{@link google.cloud.aiplatform.v1beta1.BatchPredictionJob}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.get_batch_prediction_job.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_GetBatchPredictionJob_async
   */
  getBatchPredictionJob(
    request?: protos.google.cloud.aiplatform.v1beta1.IGetBatchPredictionJobRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IBatchPredictionJob,
      (
        | protos.google.cloud.aiplatform.v1beta1.IGetBatchPredictionJobRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  getBatchPredictionJob(
    request: protos.google.cloud.aiplatform.v1beta1.IGetBatchPredictionJobRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.aiplatform.v1beta1.IBatchPredictionJob,
      | protos.google.cloud.aiplatform.v1beta1.IGetBatchPredictionJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getBatchPredictionJob(
    request: protos.google.cloud.aiplatform.v1beta1.IGetBatchPredictionJobRequest,
    callback: Callback<
      protos.google.cloud.aiplatform.v1beta1.IBatchPredictionJob,
      | protos.google.cloud.aiplatform.v1beta1.IGetBatchPredictionJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getBatchPredictionJob(
    request?: protos.google.cloud.aiplatform.v1beta1.IGetBatchPredictionJobRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.aiplatform.v1beta1.IBatchPredictionJob,
          | protos.google.cloud.aiplatform.v1beta1.IGetBatchPredictionJobRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.aiplatform.v1beta1.IBatchPredictionJob,
      | protos.google.cloud.aiplatform.v1beta1.IGetBatchPredictionJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IBatchPredictionJob,
      (
        | protos.google.cloud.aiplatform.v1beta1.IGetBatchPredictionJobRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getBatchPredictionJob(request, options, callback);
  }
  /**
   * Cancels a BatchPredictionJob.
   *
   * Starts asynchronous cancellation on the BatchPredictionJob. The server
   * makes the best effort to cancel the job, but success is not
   * guaranteed. Clients can use
   * {@link google.cloud.aiplatform.v1beta1.JobService.GetBatchPredictionJob|JobService.GetBatchPredictionJob}
   * or other methods to check whether the cancellation succeeded or whether the
   * job completed despite cancellation. On a successful cancellation,
   * the BatchPredictionJob is not deleted;instead its
   * {@link google.cloud.aiplatform.v1beta1.BatchPredictionJob.state|BatchPredictionJob.state}
   * is set to `CANCELLED`. Any files already outputted by the job are not
   * deleted.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the BatchPredictionJob to cancel.
   *   Format:
   *   `projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.cancel_batch_prediction_job.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_CancelBatchPredictionJob_async
   */
  cancelBatchPredictionJob(
    request?: protos.google.cloud.aiplatform.v1beta1.ICancelBatchPredictionJobRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.aiplatform.v1beta1.ICancelBatchPredictionJobRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  cancelBatchPredictionJob(
    request: protos.google.cloud.aiplatform.v1beta1.ICancelBatchPredictionJobRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.aiplatform.v1beta1.ICancelBatchPredictionJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  cancelBatchPredictionJob(
    request: protos.google.cloud.aiplatform.v1beta1.ICancelBatchPredictionJobRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.aiplatform.v1beta1.ICancelBatchPredictionJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  cancelBatchPredictionJob(
    request?: protos.google.cloud.aiplatform.v1beta1.ICancelBatchPredictionJobRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.aiplatform.v1beta1.ICancelBatchPredictionJobRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.aiplatform.v1beta1.ICancelBatchPredictionJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.aiplatform.v1beta1.ICancelBatchPredictionJobRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.cancelBatchPredictionJob(
      request,
      options,
      callback
    );
  }
  /**
   * Creates a ModelDeploymentMonitoringJob. It will run periodically on a
   * configured interval.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent of the ModelDeploymentMonitoringJob.
   *   Format: `projects/{project}/locations/{location}`
   * @param {google.cloud.aiplatform.v1beta1.ModelDeploymentMonitoringJob} request.modelDeploymentMonitoringJob
   *   Required. The ModelDeploymentMonitoringJob to create
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [ModelDeploymentMonitoringJob]{@link google.cloud.aiplatform.v1beta1.ModelDeploymentMonitoringJob}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.create_model_deployment_monitoring_job.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_CreateModelDeploymentMonitoringJob_async
   */
  createModelDeploymentMonitoringJob(
    request?: protos.google.cloud.aiplatform.v1beta1.ICreateModelDeploymentMonitoringJobRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IModelDeploymentMonitoringJob,
      (
        | protos.google.cloud.aiplatform.v1beta1.ICreateModelDeploymentMonitoringJobRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  createModelDeploymentMonitoringJob(
    request: protos.google.cloud.aiplatform.v1beta1.ICreateModelDeploymentMonitoringJobRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.aiplatform.v1beta1.IModelDeploymentMonitoringJob,
      | protos.google.cloud.aiplatform.v1beta1.ICreateModelDeploymentMonitoringJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createModelDeploymentMonitoringJob(
    request: protos.google.cloud.aiplatform.v1beta1.ICreateModelDeploymentMonitoringJobRequest,
    callback: Callback<
      protos.google.cloud.aiplatform.v1beta1.IModelDeploymentMonitoringJob,
      | protos.google.cloud.aiplatform.v1beta1.ICreateModelDeploymentMonitoringJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createModelDeploymentMonitoringJob(
    request?: protos.google.cloud.aiplatform.v1beta1.ICreateModelDeploymentMonitoringJobRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.aiplatform.v1beta1.IModelDeploymentMonitoringJob,
          | protos.google.cloud.aiplatform.v1beta1.ICreateModelDeploymentMonitoringJobRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.aiplatform.v1beta1.IModelDeploymentMonitoringJob,
      | protos.google.cloud.aiplatform.v1beta1.ICreateModelDeploymentMonitoringJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IModelDeploymentMonitoringJob,
      (
        | protos.google.cloud.aiplatform.v1beta1.ICreateModelDeploymentMonitoringJobRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createModelDeploymentMonitoringJob(
      request,
      options,
      callback
    );
  }
  /**
   * Gets a ModelDeploymentMonitoringJob.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the ModelDeploymentMonitoringJob.
   *   Format:
   *   `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [ModelDeploymentMonitoringJob]{@link google.cloud.aiplatform.v1beta1.ModelDeploymentMonitoringJob}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.get_model_deployment_monitoring_job.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_GetModelDeploymentMonitoringJob_async
   */
  getModelDeploymentMonitoringJob(
    request?: protos.google.cloud.aiplatform.v1beta1.IGetModelDeploymentMonitoringJobRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IModelDeploymentMonitoringJob,
      (
        | protos.google.cloud.aiplatform.v1beta1.IGetModelDeploymentMonitoringJobRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  getModelDeploymentMonitoringJob(
    request: protos.google.cloud.aiplatform.v1beta1.IGetModelDeploymentMonitoringJobRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.aiplatform.v1beta1.IModelDeploymentMonitoringJob,
      | protos.google.cloud.aiplatform.v1beta1.IGetModelDeploymentMonitoringJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getModelDeploymentMonitoringJob(
    request: protos.google.cloud.aiplatform.v1beta1.IGetModelDeploymentMonitoringJobRequest,
    callback: Callback<
      protos.google.cloud.aiplatform.v1beta1.IModelDeploymentMonitoringJob,
      | protos.google.cloud.aiplatform.v1beta1.IGetModelDeploymentMonitoringJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getModelDeploymentMonitoringJob(
    request?: protos.google.cloud.aiplatform.v1beta1.IGetModelDeploymentMonitoringJobRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.aiplatform.v1beta1.IModelDeploymentMonitoringJob,
          | protos.google.cloud.aiplatform.v1beta1.IGetModelDeploymentMonitoringJobRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.aiplatform.v1beta1.IModelDeploymentMonitoringJob,
      | protos.google.cloud.aiplatform.v1beta1.IGetModelDeploymentMonitoringJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IModelDeploymentMonitoringJob,
      (
        | protos.google.cloud.aiplatform.v1beta1.IGetModelDeploymentMonitoringJobRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getModelDeploymentMonitoringJob(
      request,
      options,
      callback
    );
  }
  /**
   * Pauses a ModelDeploymentMonitoringJob. If the job is running, the server
   * makes a best effort to cancel the job. Will mark
   * {@link google.cloud.aiplatform.v1beta1.ModelDeploymentMonitoringJob.state|ModelDeploymentMonitoringJob.state}
   * to 'PAUSED'.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the ModelDeploymentMonitoringJob to pause.
   *   Format:
   *   `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.pause_model_deployment_monitoring_job.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_PauseModelDeploymentMonitoringJob_async
   */
  pauseModelDeploymentMonitoringJob(
    request?: protos.google.cloud.aiplatform.v1beta1.IPauseModelDeploymentMonitoringJobRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.aiplatform.v1beta1.IPauseModelDeploymentMonitoringJobRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  pauseModelDeploymentMonitoringJob(
    request: protos.google.cloud.aiplatform.v1beta1.IPauseModelDeploymentMonitoringJobRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.aiplatform.v1beta1.IPauseModelDeploymentMonitoringJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  pauseModelDeploymentMonitoringJob(
    request: protos.google.cloud.aiplatform.v1beta1.IPauseModelDeploymentMonitoringJobRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.aiplatform.v1beta1.IPauseModelDeploymentMonitoringJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  pauseModelDeploymentMonitoringJob(
    request?: protos.google.cloud.aiplatform.v1beta1.IPauseModelDeploymentMonitoringJobRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.aiplatform.v1beta1.IPauseModelDeploymentMonitoringJobRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.aiplatform.v1beta1.IPauseModelDeploymentMonitoringJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.aiplatform.v1beta1.IPauseModelDeploymentMonitoringJobRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.pauseModelDeploymentMonitoringJob(
      request,
      options,
      callback
    );
  }
  /**
   * Resumes a paused ModelDeploymentMonitoringJob. It will start to run from
   * next scheduled time. A deleted ModelDeploymentMonitoringJob can't be
   * resumed.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the ModelDeploymentMonitoringJob to resume.
   *   Format:
   *   `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.resume_model_deployment_monitoring_job.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_ResumeModelDeploymentMonitoringJob_async
   */
  resumeModelDeploymentMonitoringJob(
    request?: protos.google.cloud.aiplatform.v1beta1.IResumeModelDeploymentMonitoringJobRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.aiplatform.v1beta1.IResumeModelDeploymentMonitoringJobRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  resumeModelDeploymentMonitoringJob(
    request: protos.google.cloud.aiplatform.v1beta1.IResumeModelDeploymentMonitoringJobRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.aiplatform.v1beta1.IResumeModelDeploymentMonitoringJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  resumeModelDeploymentMonitoringJob(
    request: protos.google.cloud.aiplatform.v1beta1.IResumeModelDeploymentMonitoringJobRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.aiplatform.v1beta1.IResumeModelDeploymentMonitoringJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  resumeModelDeploymentMonitoringJob(
    request?: protos.google.cloud.aiplatform.v1beta1.IResumeModelDeploymentMonitoringJobRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.aiplatform.v1beta1.IResumeModelDeploymentMonitoringJobRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.aiplatform.v1beta1.IResumeModelDeploymentMonitoringJobRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.aiplatform.v1beta1.IResumeModelDeploymentMonitoringJobRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.resumeModelDeploymentMonitoringJob(
      request,
      options,
      callback
    );
  }

  /**
   * Deletes a CustomJob.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the CustomJob resource to be deleted.
   *   Format:
   *   `projects/{project}/locations/{location}/customJobs/{custom_job}`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.delete_custom_job.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_DeleteCustomJob_async
   */
  deleteCustomJob(
    request?: protos.google.cloud.aiplatform.v1beta1.IDeleteCustomJobRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  deleteCustomJob(
    request: protos.google.cloud.aiplatform.v1beta1.IDeleteCustomJobRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteCustomJob(
    request: protos.google.cloud.aiplatform.v1beta1.IDeleteCustomJobRequest,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteCustomJob(
    request?: protos.google.cloud.aiplatform.v1beta1.IDeleteCustomJobRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.protobuf.IEmpty,
            protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteCustomJob(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `deleteCustomJob()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.delete_custom_job.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_DeleteCustomJob_async
   */
  async checkDeleteCustomJobProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.aiplatform.v1beta1.DeleteOperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.deleteCustomJob,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.aiplatform.v1beta1.DeleteOperationMetadata
    >;
  }
  /**
   * Deletes a DataLabelingJob.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the DataLabelingJob to be deleted.
   *   Format:
   *   `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.delete_data_labeling_job.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_DeleteDataLabelingJob_async
   */
  deleteDataLabelingJob(
    request?: protos.google.cloud.aiplatform.v1beta1.IDeleteDataLabelingJobRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  deleteDataLabelingJob(
    request: protos.google.cloud.aiplatform.v1beta1.IDeleteDataLabelingJobRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteDataLabelingJob(
    request: protos.google.cloud.aiplatform.v1beta1.IDeleteDataLabelingJobRequest,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteDataLabelingJob(
    request?: protos.google.cloud.aiplatform.v1beta1.IDeleteDataLabelingJobRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.protobuf.IEmpty,
            protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteDataLabelingJob(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `deleteDataLabelingJob()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.delete_data_labeling_job.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_DeleteDataLabelingJob_async
   */
  async checkDeleteDataLabelingJobProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.aiplatform.v1beta1.DeleteOperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.deleteDataLabelingJob,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.aiplatform.v1beta1.DeleteOperationMetadata
    >;
  }
  /**
   * Deletes a HyperparameterTuningJob.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the HyperparameterTuningJob resource to be deleted.
   *   Format:
   *   `projects/{project}/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_job}`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.delete_hyperparameter_tuning_job.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_DeleteHyperparameterTuningJob_async
   */
  deleteHyperparameterTuningJob(
    request?: protos.google.cloud.aiplatform.v1beta1.IDeleteHyperparameterTuningJobRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  deleteHyperparameterTuningJob(
    request: protos.google.cloud.aiplatform.v1beta1.IDeleteHyperparameterTuningJobRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteHyperparameterTuningJob(
    request: protos.google.cloud.aiplatform.v1beta1.IDeleteHyperparameterTuningJobRequest,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteHyperparameterTuningJob(
    request?: protos.google.cloud.aiplatform.v1beta1.IDeleteHyperparameterTuningJobRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.protobuf.IEmpty,
            protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteHyperparameterTuningJob(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `deleteHyperparameterTuningJob()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.delete_hyperparameter_tuning_job.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_DeleteHyperparameterTuningJob_async
   */
  async checkDeleteHyperparameterTuningJobProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.aiplatform.v1beta1.DeleteOperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.deleteHyperparameterTuningJob,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.aiplatform.v1beta1.DeleteOperationMetadata
    >;
  }
  /**
   * Deletes a BatchPredictionJob. Can only be called on jobs that already
   * finished.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the BatchPredictionJob resource to be deleted.
   *   Format:
   *   `projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.delete_batch_prediction_job.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_DeleteBatchPredictionJob_async
   */
  deleteBatchPredictionJob(
    request?: protos.google.cloud.aiplatform.v1beta1.IDeleteBatchPredictionJobRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  deleteBatchPredictionJob(
    request: protos.google.cloud.aiplatform.v1beta1.IDeleteBatchPredictionJobRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteBatchPredictionJob(
    request: protos.google.cloud.aiplatform.v1beta1.IDeleteBatchPredictionJobRequest,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteBatchPredictionJob(
    request?: protos.google.cloud.aiplatform.v1beta1.IDeleteBatchPredictionJobRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.protobuf.IEmpty,
            protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteBatchPredictionJob(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `deleteBatchPredictionJob()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.delete_batch_prediction_job.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_DeleteBatchPredictionJob_async
   */
  async checkDeleteBatchPredictionJobProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.aiplatform.v1beta1.DeleteOperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.deleteBatchPredictionJob,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.aiplatform.v1beta1.DeleteOperationMetadata
    >;
  }
  /**
   * Updates a ModelDeploymentMonitoringJob.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.aiplatform.v1beta1.ModelDeploymentMonitoringJob} request.modelDeploymentMonitoringJob
   *   Required. The model monitoring configuration which replaces the resource on
   *   the server.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Required. The update mask is used to specify the fields to be overwritten
   *   in the ModelDeploymentMonitoringJob resource by the update. The fields
   *   specified in the update_mask are relative to the resource, not the full
   *   request. A field will be overwritten if it is in the mask. If the user does
   *   not provide a mask then only the non-empty fields present in the request
   *   will be overwritten. Set the update_mask to `*` to override all fields. For
   *   the objective config, the user can either provide the update mask for
   *   model_deployment_monitoring_objective_configs or any combination of its
   *   nested fields, such as:
   *   model_deployment_monitoring_objective_configs.objective_config.training_dataset.
   *
   *   Updatable fields:
   *
   *     * `display_name`
   *     * `model_deployment_monitoring_schedule_config`
   *     * `model_monitoring_alert_config`
   *     * `logging_sampling_strategy`
   *     * `labels`
   *     * `log_ttl`
   *     * `enable_monitoring_pipeline_logs`
   *   .  and
   *     * `model_deployment_monitoring_objective_configs`
   *   .  or
   *     * `model_deployment_monitoring_objective_configs.objective_config.training_dataset`
   *     * `model_deployment_monitoring_objective_configs.objective_config.training_prediction_skew_detection_config`
   *     * `model_deployment_monitoring_objective_configs.objective_config.prediction_drift_detection_config`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.update_model_deployment_monitoring_job.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_UpdateModelDeploymentMonitoringJob_async
   */
  updateModelDeploymentMonitoringJob(
    request?: protos.google.cloud.aiplatform.v1beta1.IUpdateModelDeploymentMonitoringJobRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.aiplatform.v1beta1.IModelDeploymentMonitoringJob,
        protos.google.cloud.aiplatform.v1beta1.IUpdateModelDeploymentMonitoringJobOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  updateModelDeploymentMonitoringJob(
    request: protos.google.cloud.aiplatform.v1beta1.IUpdateModelDeploymentMonitoringJobRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.aiplatform.v1beta1.IModelDeploymentMonitoringJob,
        protos.google.cloud.aiplatform.v1beta1.IUpdateModelDeploymentMonitoringJobOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateModelDeploymentMonitoringJob(
    request: protos.google.cloud.aiplatform.v1beta1.IUpdateModelDeploymentMonitoringJobRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.aiplatform.v1beta1.IModelDeploymentMonitoringJob,
        protos.google.cloud.aiplatform.v1beta1.IUpdateModelDeploymentMonitoringJobOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateModelDeploymentMonitoringJob(
    request?: protos.google.cloud.aiplatform.v1beta1.IUpdateModelDeploymentMonitoringJobRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.aiplatform.v1beta1.IModelDeploymentMonitoringJob,
            protos.google.cloud.aiplatform.v1beta1.IUpdateModelDeploymentMonitoringJobOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.aiplatform.v1beta1.IModelDeploymentMonitoringJob,
        protos.google.cloud.aiplatform.v1beta1.IUpdateModelDeploymentMonitoringJobOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.aiplatform.v1beta1.IModelDeploymentMonitoringJob,
        protos.google.cloud.aiplatform.v1beta1.IUpdateModelDeploymentMonitoringJobOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'model_deployment_monitoring_job.name':
          request.modelDeploymentMonitoringJob!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateModelDeploymentMonitoringJob(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `updateModelDeploymentMonitoringJob()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.update_model_deployment_monitoring_job.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_UpdateModelDeploymentMonitoringJob_async
   */
  async checkUpdateModelDeploymentMonitoringJobProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.aiplatform.v1beta1.ModelDeploymentMonitoringJob,
      protos.google.cloud.aiplatform.v1beta1.UpdateModelDeploymentMonitoringJobOperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.updateModelDeploymentMonitoringJob,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.aiplatform.v1beta1.ModelDeploymentMonitoringJob,
      protos.google.cloud.aiplatform.v1beta1.UpdateModelDeploymentMonitoringJobOperationMetadata
    >;
  }
  /**
   * Deletes a ModelDeploymentMonitoringJob.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the model monitoring job to delete.
   *   Format:
   *   `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.delete_model_deployment_monitoring_job.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_DeleteModelDeploymentMonitoringJob_async
   */
  deleteModelDeploymentMonitoringJob(
    request?: protos.google.cloud.aiplatform.v1beta1.IDeleteModelDeploymentMonitoringJobRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  deleteModelDeploymentMonitoringJob(
    request: protos.google.cloud.aiplatform.v1beta1.IDeleteModelDeploymentMonitoringJobRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteModelDeploymentMonitoringJob(
    request: protos.google.cloud.aiplatform.v1beta1.IDeleteModelDeploymentMonitoringJobRequest,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteModelDeploymentMonitoringJob(
    request?: protos.google.cloud.aiplatform.v1beta1.IDeleteModelDeploymentMonitoringJobRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.protobuf.IEmpty,
            protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteModelDeploymentMonitoringJob(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `deleteModelDeploymentMonitoringJob()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.delete_model_deployment_monitoring_job.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_DeleteModelDeploymentMonitoringJob_async
   */
  async checkDeleteModelDeploymentMonitoringJobProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.aiplatform.v1beta1.DeleteOperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.deleteModelDeploymentMonitoringJob,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.aiplatform.v1beta1.DeleteOperationMetadata
    >;
  }
  /**
   * Lists CustomJobs in a Location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the Location to list the CustomJobs from.
   *   Format: `projects/{project}/locations/{location}`
   * @param {string} request.filter
   *   The standard list filter.
   *
   *   Supported fields:
   *
   *     * `display_name` supports `=`, `!=` comparisons, and `:` wildcard.
   *     * `state` supports `=`, `!=` comparisons.
   *     * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons.
   *       `create_time` must be in RFC 3339 format.
   *     * `labels` supports general map functions that is:
   *       `labels.key=value` - key:value equality
   *       `labels.key:* - key existence
   *
   *   Some examples of using the filter are:
   *
   *     * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"`
   *     * `state!="JOB_STATE_FAILED" OR display_name="my_job"`
   *     * `NOT display_name="my_job"`
   *     * `create_time>"2021-05-18T00:00:00Z"`
   *     * `labels.keyA=valueA`
   *     * `labels.keyB:*`
   * @param {number} request.pageSize
   *   The standard list page size.
   * @param {string} request.pageToken
   *   The standard list page token.
   *   Typically obtained via
   *   {@link google.cloud.aiplatform.v1beta1.ListCustomJobsResponse.next_page_token|ListCustomJobsResponse.next_page_token}
   *   of the previous
   *   {@link google.cloud.aiplatform.v1beta1.JobService.ListCustomJobs|JobService.ListCustomJobs}
   *   call.
   * @param {google.protobuf.FieldMask} request.readMask
   *   Mask specifying which fields to read.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [CustomJob]{@link google.cloud.aiplatform.v1beta1.CustomJob}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listCustomJobsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listCustomJobs(
    request?: protos.google.cloud.aiplatform.v1beta1.IListCustomJobsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.ICustomJob[],
      protos.google.cloud.aiplatform.v1beta1.IListCustomJobsRequest | null,
      protos.google.cloud.aiplatform.v1beta1.IListCustomJobsResponse
    ]
  >;
  listCustomJobs(
    request: protos.google.cloud.aiplatform.v1beta1.IListCustomJobsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.aiplatform.v1beta1.IListCustomJobsRequest,
      | protos.google.cloud.aiplatform.v1beta1.IListCustomJobsResponse
      | null
      | undefined,
      protos.google.cloud.aiplatform.v1beta1.ICustomJob
    >
  ): void;
  listCustomJobs(
    request: protos.google.cloud.aiplatform.v1beta1.IListCustomJobsRequest,
    callback: PaginationCallback<
      protos.google.cloud.aiplatform.v1beta1.IListCustomJobsRequest,
      | protos.google.cloud.aiplatform.v1beta1.IListCustomJobsResponse
      | null
      | undefined,
      protos.google.cloud.aiplatform.v1beta1.ICustomJob
    >
  ): void;
  listCustomJobs(
    request?: protos.google.cloud.aiplatform.v1beta1.IListCustomJobsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.aiplatform.v1beta1.IListCustomJobsRequest,
          | protos.google.cloud.aiplatform.v1beta1.IListCustomJobsResponse
          | null
          | undefined,
          protos.google.cloud.aiplatform.v1beta1.ICustomJob
        >,
    callback?: PaginationCallback<
      protos.google.cloud.aiplatform.v1beta1.IListCustomJobsRequest,
      | protos.google.cloud.aiplatform.v1beta1.IListCustomJobsResponse
      | null
      | undefined,
      protos.google.cloud.aiplatform.v1beta1.ICustomJob
    >
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.ICustomJob[],
      protos.google.cloud.aiplatform.v1beta1.IListCustomJobsRequest | null,
      protos.google.cloud.aiplatform.v1beta1.IListCustomJobsResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listCustomJobs(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the Location to list the CustomJobs from.
   *   Format: `projects/{project}/locations/{location}`
   * @param {string} request.filter
   *   The standard list filter.
   *
   *   Supported fields:
   *
   *     * `display_name` supports `=`, `!=` comparisons, and `:` wildcard.
   *     * `state` supports `=`, `!=` comparisons.
   *     * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons.
   *       `create_time` must be in RFC 3339 format.
   *     * `labels` supports general map functions that is:
   *       `labels.key=value` - key:value equality
   *       `labels.key:* - key existence
   *
   *   Some examples of using the filter are:
   *
   *     * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"`
   *     * `state!="JOB_STATE_FAILED" OR display_name="my_job"`
   *     * `NOT display_name="my_job"`
   *     * `create_time>"2021-05-18T00:00:00Z"`
   *     * `labels.keyA=valueA`
   *     * `labels.keyB:*`
   * @param {number} request.pageSize
   *   The standard list page size.
   * @param {string} request.pageToken
   *   The standard list page token.
   *   Typically obtained via
   *   {@link google.cloud.aiplatform.v1beta1.ListCustomJobsResponse.next_page_token|ListCustomJobsResponse.next_page_token}
   *   of the previous
   *   {@link google.cloud.aiplatform.v1beta1.JobService.ListCustomJobs|JobService.ListCustomJobs}
   *   call.
   * @param {google.protobuf.FieldMask} request.readMask
   *   Mask specifying which fields to read.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [CustomJob]{@link google.cloud.aiplatform.v1beta1.CustomJob} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listCustomJobsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listCustomJobsStream(
    request?: protos.google.cloud.aiplatform.v1beta1.IListCustomJobsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listCustomJobs'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listCustomJobs.createStream(
      this.innerApiCalls.listCustomJobs as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listCustomJobs`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the Location to list the CustomJobs from.
   *   Format: `projects/{project}/locations/{location}`
   * @param {string} request.filter
   *   The standard list filter.
   *
   *   Supported fields:
   *
   *     * `display_name` supports `=`, `!=` comparisons, and `:` wildcard.
   *     * `state` supports `=`, `!=` comparisons.
   *     * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons.
   *       `create_time` must be in RFC 3339 format.
   *     * `labels` supports general map functions that is:
   *       `labels.key=value` - key:value equality
   *       `labels.key:* - key existence
   *
   *   Some examples of using the filter are:
   *
   *     * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"`
   *     * `state!="JOB_STATE_FAILED" OR display_name="my_job"`
   *     * `NOT display_name="my_job"`
   *     * `create_time>"2021-05-18T00:00:00Z"`
   *     * `labels.keyA=valueA`
   *     * `labels.keyB:*`
   * @param {number} request.pageSize
   *   The standard list page size.
   * @param {string} request.pageToken
   *   The standard list page token.
   *   Typically obtained via
   *   {@link google.cloud.aiplatform.v1beta1.ListCustomJobsResponse.next_page_token|ListCustomJobsResponse.next_page_token}
   *   of the previous
   *   {@link google.cloud.aiplatform.v1beta1.JobService.ListCustomJobs|JobService.ListCustomJobs}
   *   call.
   * @param {google.protobuf.FieldMask} request.readMask
   *   Mask specifying which fields to read.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [CustomJob]{@link google.cloud.aiplatform.v1beta1.CustomJob}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.list_custom_jobs.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_ListCustomJobs_async
   */
  listCustomJobsAsync(
    request?: protos.google.cloud.aiplatform.v1beta1.IListCustomJobsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.aiplatform.v1beta1.ICustomJob> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listCustomJobs'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listCustomJobs.asyncIterate(
      this.innerApiCalls['listCustomJobs'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.aiplatform.v1beta1.ICustomJob>;
  }
  /**
   * Lists DataLabelingJobs in a Location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent of the DataLabelingJob.
   *   Format: `projects/{project}/locations/{location}`
   * @param {string} request.filter
   *   The standard list filter.
   *
   *   Supported fields:
   *
   *     * `display_name` supports `=`, `!=` comparisons, and `:` wildcard.
   *     * `state` supports `=`, `!=` comparisons.
   *     * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons.
   *       `create_time` must be in RFC 3339 format.
   *     * `labels` supports general map functions that is:
   *       `labels.key=value` - key:value equality
   *       `labels.key:* - key existence
   *
   *   Some examples of using the filter are:
   *
   *     * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"`
   *     * `state!="JOB_STATE_FAILED" OR display_name="my_job"`
   *     * `NOT display_name="my_job"`
   *     * `create_time>"2021-05-18T00:00:00Z"`
   *     * `labels.keyA=valueA`
   *     * `labels.keyB:*`
   * @param {number} request.pageSize
   *   The standard list page size.
   * @param {string} request.pageToken
   *   The standard list page token.
   * @param {google.protobuf.FieldMask} request.readMask
   *   Mask specifying which fields to read. FieldMask represents a set of
   *   symbolic field paths. For example, the mask can be `paths: "name"`. The
   *   "name" here is a field in DataLabelingJob.
   *   If this field is not set, all fields of the DataLabelingJob are returned.
   * @param {string} request.orderBy
   *   A comma-separated list of fields to order by, sorted in ascending order by
   *   default.
   *   Use `desc` after a field name for descending.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [DataLabelingJob]{@link google.cloud.aiplatform.v1beta1.DataLabelingJob}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listDataLabelingJobsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listDataLabelingJobs(
    request?: protos.google.cloud.aiplatform.v1beta1.IListDataLabelingJobsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IDataLabelingJob[],
      protos.google.cloud.aiplatform.v1beta1.IListDataLabelingJobsRequest | null,
      protos.google.cloud.aiplatform.v1beta1.IListDataLabelingJobsResponse
    ]
  >;
  listDataLabelingJobs(
    request: protos.google.cloud.aiplatform.v1beta1.IListDataLabelingJobsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.aiplatform.v1beta1.IListDataLabelingJobsRequest,
      | protos.google.cloud.aiplatform.v1beta1.IListDataLabelingJobsResponse
      | null
      | undefined,
      protos.google.cloud.aiplatform.v1beta1.IDataLabelingJob
    >
  ): void;
  listDataLabelingJobs(
    request: protos.google.cloud.aiplatform.v1beta1.IListDataLabelingJobsRequest,
    callback: PaginationCallback<
      protos.google.cloud.aiplatform.v1beta1.IListDataLabelingJobsRequest,
      | protos.google.cloud.aiplatform.v1beta1.IListDataLabelingJobsResponse
      | null
      | undefined,
      protos.google.cloud.aiplatform.v1beta1.IDataLabelingJob
    >
  ): void;
  listDataLabelingJobs(
    request?: protos.google.cloud.aiplatform.v1beta1.IListDataLabelingJobsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.aiplatform.v1beta1.IListDataLabelingJobsRequest,
          | protos.google.cloud.aiplatform.v1beta1.IListDataLabelingJobsResponse
          | null
          | undefined,
          protos.google.cloud.aiplatform.v1beta1.IDataLabelingJob
        >,
    callback?: PaginationCallback<
      protos.google.cloud.aiplatform.v1beta1.IListDataLabelingJobsRequest,
      | protos.google.cloud.aiplatform.v1beta1.IListDataLabelingJobsResponse
      | null
      | undefined,
      protos.google.cloud.aiplatform.v1beta1.IDataLabelingJob
    >
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IDataLabelingJob[],
      protos.google.cloud.aiplatform.v1beta1.IListDataLabelingJobsRequest | null,
      protos.google.cloud.aiplatform.v1beta1.IListDataLabelingJobsResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listDataLabelingJobs(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent of the DataLabelingJob.
   *   Format: `projects/{project}/locations/{location}`
   * @param {string} request.filter
   *   The standard list filter.
   *
   *   Supported fields:
   *
   *     * `display_name` supports `=`, `!=` comparisons, and `:` wildcard.
   *     * `state` supports `=`, `!=` comparisons.
   *     * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons.
   *       `create_time` must be in RFC 3339 format.
   *     * `labels` supports general map functions that is:
   *       `labels.key=value` - key:value equality
   *       `labels.key:* - key existence
   *
   *   Some examples of using the filter are:
   *
   *     * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"`
   *     * `state!="JOB_STATE_FAILED" OR display_name="my_job"`
   *     * `NOT display_name="my_job"`
   *     * `create_time>"2021-05-18T00:00:00Z"`
   *     * `labels.keyA=valueA`
   *     * `labels.keyB:*`
   * @param {number} request.pageSize
   *   The standard list page size.
   * @param {string} request.pageToken
   *   The standard list page token.
   * @param {google.protobuf.FieldMask} request.readMask
   *   Mask specifying which fields to read. FieldMask represents a set of
   *   symbolic field paths. For example, the mask can be `paths: "name"`. The
   *   "name" here is a field in DataLabelingJob.
   *   If this field is not set, all fields of the DataLabelingJob are returned.
   * @param {string} request.orderBy
   *   A comma-separated list of fields to order by, sorted in ascending order by
   *   default.
   *   Use `desc` after a field name for descending.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [DataLabelingJob]{@link google.cloud.aiplatform.v1beta1.DataLabelingJob} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listDataLabelingJobsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listDataLabelingJobsStream(
    request?: protos.google.cloud.aiplatform.v1beta1.IListDataLabelingJobsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listDataLabelingJobs'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listDataLabelingJobs.createStream(
      this.innerApiCalls.listDataLabelingJobs as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listDataLabelingJobs`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent of the DataLabelingJob.
   *   Format: `projects/{project}/locations/{location}`
   * @param {string} request.filter
   *   The standard list filter.
   *
   *   Supported fields:
   *
   *     * `display_name` supports `=`, `!=` comparisons, and `:` wildcard.
   *     * `state` supports `=`, `!=` comparisons.
   *     * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons.
   *       `create_time` must be in RFC 3339 format.
   *     * `labels` supports general map functions that is:
   *       `labels.key=value` - key:value equality
   *       `labels.key:* - key existence
   *
   *   Some examples of using the filter are:
   *
   *     * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"`
   *     * `state!="JOB_STATE_FAILED" OR display_name="my_job"`
   *     * `NOT display_name="my_job"`
   *     * `create_time>"2021-05-18T00:00:00Z"`
   *     * `labels.keyA=valueA`
   *     * `labels.keyB:*`
   * @param {number} request.pageSize
   *   The standard list page size.
   * @param {string} request.pageToken
   *   The standard list page token.
   * @param {google.protobuf.FieldMask} request.readMask
   *   Mask specifying which fields to read. FieldMask represents a set of
   *   symbolic field paths. For example, the mask can be `paths: "name"`. The
   *   "name" here is a field in DataLabelingJob.
   *   If this field is not set, all fields of the DataLabelingJob are returned.
   * @param {string} request.orderBy
   *   A comma-separated list of fields to order by, sorted in ascending order by
   *   default.
   *   Use `desc` after a field name for descending.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [DataLabelingJob]{@link google.cloud.aiplatform.v1beta1.DataLabelingJob}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.list_data_labeling_jobs.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_ListDataLabelingJobs_async
   */
  listDataLabelingJobsAsync(
    request?: protos.google.cloud.aiplatform.v1beta1.IListDataLabelingJobsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.aiplatform.v1beta1.IDataLabelingJob> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listDataLabelingJobs'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listDataLabelingJobs.asyncIterate(
      this.innerApiCalls['listDataLabelingJobs'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.aiplatform.v1beta1.IDataLabelingJob>;
  }
  /**
   * Lists HyperparameterTuningJobs in a Location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the Location to list the
   *   HyperparameterTuningJobs from. Format:
   *   `projects/{project}/locations/{location}`
   * @param {string} request.filter
   *   The standard list filter.
   *
   *   Supported fields:
   *
   *     * `display_name` supports `=`, `!=` comparisons, and `:` wildcard.
   *     * `state` supports `=`, `!=` comparisons.
   *     * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons.
   *       `create_time` must be in RFC 3339 format.
   *     * `labels` supports general map functions that is:
   *       `labels.key=value` - key:value equality
   *       `labels.key:* - key existence
   *
   *   Some examples of using the filter are:
   *
   *     * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"`
   *     * `state!="JOB_STATE_FAILED" OR display_name="my_job"`
   *     * `NOT display_name="my_job"`
   *     * `create_time>"2021-05-18T00:00:00Z"`
   *     * `labels.keyA=valueA`
   *     * `labels.keyB:*`
   * @param {number} request.pageSize
   *   The standard list page size.
   * @param {string} request.pageToken
   *   The standard list page token.
   *   Typically obtained via
   *   {@link google.cloud.aiplatform.v1beta1.ListHyperparameterTuningJobsResponse.next_page_token|ListHyperparameterTuningJobsResponse.next_page_token}
   *   of the previous
   *   {@link google.cloud.aiplatform.v1beta1.JobService.ListHyperparameterTuningJobs|JobService.ListHyperparameterTuningJobs}
   *   call.
   * @param {google.protobuf.FieldMask} request.readMask
   *   Mask specifying which fields to read.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [HyperparameterTuningJob]{@link google.cloud.aiplatform.v1beta1.HyperparameterTuningJob}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listHyperparameterTuningJobsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listHyperparameterTuningJobs(
    request?: protos.google.cloud.aiplatform.v1beta1.IListHyperparameterTuningJobsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IHyperparameterTuningJob[],
      protos.google.cloud.aiplatform.v1beta1.IListHyperparameterTuningJobsRequest | null,
      protos.google.cloud.aiplatform.v1beta1.IListHyperparameterTuningJobsResponse
    ]
  >;
  listHyperparameterTuningJobs(
    request: protos.google.cloud.aiplatform.v1beta1.IListHyperparameterTuningJobsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.aiplatform.v1beta1.IListHyperparameterTuningJobsRequest,
      | protos.google.cloud.aiplatform.v1beta1.IListHyperparameterTuningJobsResponse
      | null
      | undefined,
      protos.google.cloud.aiplatform.v1beta1.IHyperparameterTuningJob
    >
  ): void;
  listHyperparameterTuningJobs(
    request: protos.google.cloud.aiplatform.v1beta1.IListHyperparameterTuningJobsRequest,
    callback: PaginationCallback<
      protos.google.cloud.aiplatform.v1beta1.IListHyperparameterTuningJobsRequest,
      | protos.google.cloud.aiplatform.v1beta1.IListHyperparameterTuningJobsResponse
      | null
      | undefined,
      protos.google.cloud.aiplatform.v1beta1.IHyperparameterTuningJob
    >
  ): void;
  listHyperparameterTuningJobs(
    request?: protos.google.cloud.aiplatform.v1beta1.IListHyperparameterTuningJobsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.aiplatform.v1beta1.IListHyperparameterTuningJobsRequest,
          | protos.google.cloud.aiplatform.v1beta1.IListHyperparameterTuningJobsResponse
          | null
          | undefined,
          protos.google.cloud.aiplatform.v1beta1.IHyperparameterTuningJob
        >,
    callback?: PaginationCallback<
      protos.google.cloud.aiplatform.v1beta1.IListHyperparameterTuningJobsRequest,
      | protos.google.cloud.aiplatform.v1beta1.IListHyperparameterTuningJobsResponse
      | null
      | undefined,
      protos.google.cloud.aiplatform.v1beta1.IHyperparameterTuningJob
    >
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IHyperparameterTuningJob[],
      protos.google.cloud.aiplatform.v1beta1.IListHyperparameterTuningJobsRequest | null,
      protos.google.cloud.aiplatform.v1beta1.IListHyperparameterTuningJobsResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listHyperparameterTuningJobs(
      request,
      options,
      callback
    );
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the Location to list the
   *   HyperparameterTuningJobs from. Format:
   *   `projects/{project}/locations/{location}`
   * @param {string} request.filter
   *   The standard list filter.
   *
   *   Supported fields:
   *
   *     * `display_name` supports `=`, `!=` comparisons, and `:` wildcard.
   *     * `state` supports `=`, `!=` comparisons.
   *     * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons.
   *       `create_time` must be in RFC 3339 format.
   *     * `labels` supports general map functions that is:
   *       `labels.key=value` - key:value equality
   *       `labels.key:* - key existence
   *
   *   Some examples of using the filter are:
   *
   *     * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"`
   *     * `state!="JOB_STATE_FAILED" OR display_name="my_job"`
   *     * `NOT display_name="my_job"`
   *     * `create_time>"2021-05-18T00:00:00Z"`
   *     * `labels.keyA=valueA`
   *     * `labels.keyB:*`
   * @param {number} request.pageSize
   *   The standard list page size.
   * @param {string} request.pageToken
   *   The standard list page token.
   *   Typically obtained via
   *   {@link google.cloud.aiplatform.v1beta1.ListHyperparameterTuningJobsResponse.next_page_token|ListHyperparameterTuningJobsResponse.next_page_token}
   *   of the previous
   *   {@link google.cloud.aiplatform.v1beta1.JobService.ListHyperparameterTuningJobs|JobService.ListHyperparameterTuningJobs}
   *   call.
   * @param {google.protobuf.FieldMask} request.readMask
   *   Mask specifying which fields to read.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [HyperparameterTuningJob]{@link google.cloud.aiplatform.v1beta1.HyperparameterTuningJob} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listHyperparameterTuningJobsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listHyperparameterTuningJobsStream(
    request?: protos.google.cloud.aiplatform.v1beta1.IListHyperparameterTuningJobsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listHyperparameterTuningJobs'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listHyperparameterTuningJobs.createStream(
      this.innerApiCalls.listHyperparameterTuningJobs as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listHyperparameterTuningJobs`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the Location to list the
   *   HyperparameterTuningJobs from. Format:
   *   `projects/{project}/locations/{location}`
   * @param {string} request.filter
   *   The standard list filter.
   *
   *   Supported fields:
   *
   *     * `display_name` supports `=`, `!=` comparisons, and `:` wildcard.
   *     * `state` supports `=`, `!=` comparisons.
   *     * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons.
   *       `create_time` must be in RFC 3339 format.
   *     * `labels` supports general map functions that is:
   *       `labels.key=value` - key:value equality
   *       `labels.key:* - key existence
   *
   *   Some examples of using the filter are:
   *
   *     * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"`
   *     * `state!="JOB_STATE_FAILED" OR display_name="my_job"`
   *     * `NOT display_name="my_job"`
   *     * `create_time>"2021-05-18T00:00:00Z"`
   *     * `labels.keyA=valueA`
   *     * `labels.keyB:*`
   * @param {number} request.pageSize
   *   The standard list page size.
   * @param {string} request.pageToken
   *   The standard list page token.
   *   Typically obtained via
   *   {@link google.cloud.aiplatform.v1beta1.ListHyperparameterTuningJobsResponse.next_page_token|ListHyperparameterTuningJobsResponse.next_page_token}
   *   of the previous
   *   {@link google.cloud.aiplatform.v1beta1.JobService.ListHyperparameterTuningJobs|JobService.ListHyperparameterTuningJobs}
   *   call.
   * @param {google.protobuf.FieldMask} request.readMask
   *   Mask specifying which fields to read.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [HyperparameterTuningJob]{@link google.cloud.aiplatform.v1beta1.HyperparameterTuningJob}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.list_hyperparameter_tuning_jobs.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_ListHyperparameterTuningJobs_async
   */
  listHyperparameterTuningJobsAsync(
    request?: protos.google.cloud.aiplatform.v1beta1.IListHyperparameterTuningJobsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.aiplatform.v1beta1.IHyperparameterTuningJob> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listHyperparameterTuningJobs'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listHyperparameterTuningJobs.asyncIterate(
      this.innerApiCalls['listHyperparameterTuningJobs'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.aiplatform.v1beta1.IHyperparameterTuningJob>;
  }
  /**
   * Lists BatchPredictionJobs in a Location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the Location to list the BatchPredictionJobs
   *   from. Format: `projects/{project}/locations/{location}`
   * @param {string} request.filter
   *   The standard list filter.
   *
   *   Supported fields:
   *
   *     * `display_name` supports `=`, `!=` comparisons, and `:` wildcard.
   *     * `model_display_name` supports `=`, `!=` comparisons.
   *     * `state` supports `=`, `!=` comparisons.
   *     * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons.
   *       `create_time` must be in RFC 3339 format.
   *     * `labels` supports general map functions that is:
   *       `labels.key=value` - key:value equality
   *       `labels.key:* - key existence
   *
   *   Some examples of using the filter are:
   *
   *     * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"`
   *     * `state!="JOB_STATE_FAILED" OR display_name="my_job"`
   *     * `NOT display_name="my_job"`
   *     * `create_time>"2021-05-18T00:00:00Z"`
   *     * `labels.keyA=valueA`
   *     * `labels.keyB:*`
   * @param {number} request.pageSize
   *   The standard list page size.
   * @param {string} request.pageToken
   *   The standard list page token.
   *   Typically obtained via
   *   {@link google.cloud.aiplatform.v1beta1.ListBatchPredictionJobsResponse.next_page_token|ListBatchPredictionJobsResponse.next_page_token}
   *   of the previous
   *   {@link google.cloud.aiplatform.v1beta1.JobService.ListBatchPredictionJobs|JobService.ListBatchPredictionJobs}
   *   call.
   * @param {google.protobuf.FieldMask} request.readMask
   *   Mask specifying which fields to read.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [BatchPredictionJob]{@link google.cloud.aiplatform.v1beta1.BatchPredictionJob}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listBatchPredictionJobsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listBatchPredictionJobs(
    request?: protos.google.cloud.aiplatform.v1beta1.IListBatchPredictionJobsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IBatchPredictionJob[],
      protos.google.cloud.aiplatform.v1beta1.IListBatchPredictionJobsRequest | null,
      protos.google.cloud.aiplatform.v1beta1.IListBatchPredictionJobsResponse
    ]
  >;
  listBatchPredictionJobs(
    request: protos.google.cloud.aiplatform.v1beta1.IListBatchPredictionJobsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.aiplatform.v1beta1.IListBatchPredictionJobsRequest,
      | protos.google.cloud.aiplatform.v1beta1.IListBatchPredictionJobsResponse
      | null
      | undefined,
      protos.google.cloud.aiplatform.v1beta1.IBatchPredictionJob
    >
  ): void;
  listBatchPredictionJobs(
    request: protos.google.cloud.aiplatform.v1beta1.IListBatchPredictionJobsRequest,
    callback: PaginationCallback<
      protos.google.cloud.aiplatform.v1beta1.IListBatchPredictionJobsRequest,
      | protos.google.cloud.aiplatform.v1beta1.IListBatchPredictionJobsResponse
      | null
      | undefined,
      protos.google.cloud.aiplatform.v1beta1.IBatchPredictionJob
    >
  ): void;
  listBatchPredictionJobs(
    request?: protos.google.cloud.aiplatform.v1beta1.IListBatchPredictionJobsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.aiplatform.v1beta1.IListBatchPredictionJobsRequest,
          | protos.google.cloud.aiplatform.v1beta1.IListBatchPredictionJobsResponse
          | null
          | undefined,
          protos.google.cloud.aiplatform.v1beta1.IBatchPredictionJob
        >,
    callback?: PaginationCallback<
      protos.google.cloud.aiplatform.v1beta1.IListBatchPredictionJobsRequest,
      | protos.google.cloud.aiplatform.v1beta1.IListBatchPredictionJobsResponse
      | null
      | undefined,
      protos.google.cloud.aiplatform.v1beta1.IBatchPredictionJob
    >
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IBatchPredictionJob[],
      protos.google.cloud.aiplatform.v1beta1.IListBatchPredictionJobsRequest | null,
      protos.google.cloud.aiplatform.v1beta1.IListBatchPredictionJobsResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listBatchPredictionJobs(
      request,
      options,
      callback
    );
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the Location to list the BatchPredictionJobs
   *   from. Format: `projects/{project}/locations/{location}`
   * @param {string} request.filter
   *   The standard list filter.
   *
   *   Supported fields:
   *
   *     * `display_name` supports `=`, `!=` comparisons, and `:` wildcard.
   *     * `model_display_name` supports `=`, `!=` comparisons.
   *     * `state` supports `=`, `!=` comparisons.
   *     * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons.
   *       `create_time` must be in RFC 3339 format.
   *     * `labels` supports general map functions that is:
   *       `labels.key=value` - key:value equality
   *       `labels.key:* - key existence
   *
   *   Some examples of using the filter are:
   *
   *     * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"`
   *     * `state!="JOB_STATE_FAILED" OR display_name="my_job"`
   *     * `NOT display_name="my_job"`
   *     * `create_time>"2021-05-18T00:00:00Z"`
   *     * `labels.keyA=valueA`
   *     * `labels.keyB:*`
   * @param {number} request.pageSize
   *   The standard list page size.
   * @param {string} request.pageToken
   *   The standard list page token.
   *   Typically obtained via
   *   {@link google.cloud.aiplatform.v1beta1.ListBatchPredictionJobsResponse.next_page_token|ListBatchPredictionJobsResponse.next_page_token}
   *   of the previous
   *   {@link google.cloud.aiplatform.v1beta1.JobService.ListBatchPredictionJobs|JobService.ListBatchPredictionJobs}
   *   call.
   * @param {google.protobuf.FieldMask} request.readMask
   *   Mask specifying which fields to read.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [BatchPredictionJob]{@link google.cloud.aiplatform.v1beta1.BatchPredictionJob} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listBatchPredictionJobsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listBatchPredictionJobsStream(
    request?: protos.google.cloud.aiplatform.v1beta1.IListBatchPredictionJobsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listBatchPredictionJobs'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listBatchPredictionJobs.createStream(
      this.innerApiCalls.listBatchPredictionJobs as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listBatchPredictionJobs`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the Location to list the BatchPredictionJobs
   *   from. Format: `projects/{project}/locations/{location}`
   * @param {string} request.filter
   *   The standard list filter.
   *
   *   Supported fields:
   *
   *     * `display_name` supports `=`, `!=` comparisons, and `:` wildcard.
   *     * `model_display_name` supports `=`, `!=` comparisons.
   *     * `state` supports `=`, `!=` comparisons.
   *     * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons.
   *       `create_time` must be in RFC 3339 format.
   *     * `labels` supports general map functions that is:
   *       `labels.key=value` - key:value equality
   *       `labels.key:* - key existence
   *
   *   Some examples of using the filter are:
   *
   *     * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"`
   *     * `state!="JOB_STATE_FAILED" OR display_name="my_job"`
   *     * `NOT display_name="my_job"`
   *     * `create_time>"2021-05-18T00:00:00Z"`
   *     * `labels.keyA=valueA`
   *     * `labels.keyB:*`
   * @param {number} request.pageSize
   *   The standard list page size.
   * @param {string} request.pageToken
   *   The standard list page token.
   *   Typically obtained via
   *   {@link google.cloud.aiplatform.v1beta1.ListBatchPredictionJobsResponse.next_page_token|ListBatchPredictionJobsResponse.next_page_token}
   *   of the previous
   *   {@link google.cloud.aiplatform.v1beta1.JobService.ListBatchPredictionJobs|JobService.ListBatchPredictionJobs}
   *   call.
   * @param {google.protobuf.FieldMask} request.readMask
   *   Mask specifying which fields to read.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [BatchPredictionJob]{@link google.cloud.aiplatform.v1beta1.BatchPredictionJob}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.list_batch_prediction_jobs.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_ListBatchPredictionJobs_async
   */
  listBatchPredictionJobsAsync(
    request?: protos.google.cloud.aiplatform.v1beta1.IListBatchPredictionJobsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.aiplatform.v1beta1.IBatchPredictionJob> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listBatchPredictionJobs'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listBatchPredictionJobs.asyncIterate(
      this.innerApiCalls['listBatchPredictionJobs'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.aiplatform.v1beta1.IBatchPredictionJob>;
  }
  /**
   * Searches Model Monitoring Statistics generated within a given time window.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.modelDeploymentMonitoringJob
   *   Required. ModelDeploymentMonitoring Job resource name.
   *   Format:
   *   `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
   * @param {string} request.deployedModelId
   *   Required. The DeployedModel ID of the
   *   [ModelDeploymentMonitoringObjectiveConfig.deployed_model_id].
   * @param {string} request.featureDisplayName
   *   The feature display name. If specified, only return the stats belonging to
   *   this feature. Format:
   *   {@link google.cloud.aiplatform.v1beta1.ModelMonitoringStatsAnomalies.FeatureHistoricStatsAnomalies.feature_display_name|ModelMonitoringStatsAnomalies.FeatureHistoricStatsAnomalies.feature_display_name},
   *   example: "user_destination".
   * @param {number[]} request.objectives
   *   Required. Objectives of the stats to retrieve.
   * @param {number} request.pageSize
   *   The standard list page size.
   * @param {string} request.pageToken
   *   A page token received from a previous
   *   {@link google.cloud.aiplatform.v1beta1.JobService.SearchModelDeploymentMonitoringStatsAnomalies|JobService.SearchModelDeploymentMonitoringStatsAnomalies}
   *   call.
   * @param {google.protobuf.Timestamp} request.startTime
   *   The earliest timestamp of stats being generated.
   *   If not set, indicates fetching stats till the earliest possible one.
   * @param {google.protobuf.Timestamp} request.endTime
   *   The latest timestamp of stats being generated.
   *   If not set, indicates feching stats till the latest possible one.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [ModelMonitoringStatsAnomalies]{@link google.cloud.aiplatform.v1beta1.ModelMonitoringStatsAnomalies}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `searchModelDeploymentMonitoringStatsAnomaliesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  searchModelDeploymentMonitoringStatsAnomalies(
    request?: protos.google.cloud.aiplatform.v1beta1.ISearchModelDeploymentMonitoringStatsAnomaliesRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IModelMonitoringStatsAnomalies[],
      protos.google.cloud.aiplatform.v1beta1.ISearchModelDeploymentMonitoringStatsAnomaliesRequest | null,
      protos.google.cloud.aiplatform.v1beta1.ISearchModelDeploymentMonitoringStatsAnomaliesResponse
    ]
  >;
  searchModelDeploymentMonitoringStatsAnomalies(
    request: protos.google.cloud.aiplatform.v1beta1.ISearchModelDeploymentMonitoringStatsAnomaliesRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.aiplatform.v1beta1.ISearchModelDeploymentMonitoringStatsAnomaliesRequest,
      | protos.google.cloud.aiplatform.v1beta1.ISearchModelDeploymentMonitoringStatsAnomaliesResponse
      | null
      | undefined,
      protos.google.cloud.aiplatform.v1beta1.IModelMonitoringStatsAnomalies
    >
  ): void;
  searchModelDeploymentMonitoringStatsAnomalies(
    request: protos.google.cloud.aiplatform.v1beta1.ISearchModelDeploymentMonitoringStatsAnomaliesRequest,
    callback: PaginationCallback<
      protos.google.cloud.aiplatform.v1beta1.ISearchModelDeploymentMonitoringStatsAnomaliesRequest,
      | protos.google.cloud.aiplatform.v1beta1.ISearchModelDeploymentMonitoringStatsAnomaliesResponse
      | null
      | undefined,
      protos.google.cloud.aiplatform.v1beta1.IModelMonitoringStatsAnomalies
    >
  ): void;
  searchModelDeploymentMonitoringStatsAnomalies(
    request?: protos.google.cloud.aiplatform.v1beta1.ISearchModelDeploymentMonitoringStatsAnomaliesRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.aiplatform.v1beta1.ISearchModelDeploymentMonitoringStatsAnomaliesRequest,
          | protos.google.cloud.aiplatform.v1beta1.ISearchModelDeploymentMonitoringStatsAnomaliesResponse
          | null
          | undefined,
          protos.google.cloud.aiplatform.v1beta1.IModelMonitoringStatsAnomalies
        >,
    callback?: PaginationCallback<
      protos.google.cloud.aiplatform.v1beta1.ISearchModelDeploymentMonitoringStatsAnomaliesRequest,
      | protos.google.cloud.aiplatform.v1beta1.ISearchModelDeploymentMonitoringStatsAnomaliesResponse
      | null
      | undefined,
      protos.google.cloud.aiplatform.v1beta1.IModelMonitoringStatsAnomalies
    >
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IModelMonitoringStatsAnomalies[],
      protos.google.cloud.aiplatform.v1beta1.ISearchModelDeploymentMonitoringStatsAnomaliesRequest | null,
      protos.google.cloud.aiplatform.v1beta1.ISearchModelDeploymentMonitoringStatsAnomaliesResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        model_deployment_monitoring_job:
          request.modelDeploymentMonitoringJob ?? '',
      });
    this.initialize();
    return this.innerApiCalls.searchModelDeploymentMonitoringStatsAnomalies(
      request,
      options,
      callback
    );
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.modelDeploymentMonitoringJob
   *   Required. ModelDeploymentMonitoring Job resource name.
   *   Format:
   *   `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
   * @param {string} request.deployedModelId
   *   Required. The DeployedModel ID of the
   *   [ModelDeploymentMonitoringObjectiveConfig.deployed_model_id].
   * @param {string} request.featureDisplayName
   *   The feature display name. If specified, only return the stats belonging to
   *   this feature. Format:
   *   {@link google.cloud.aiplatform.v1beta1.ModelMonitoringStatsAnomalies.FeatureHistoricStatsAnomalies.feature_display_name|ModelMonitoringStatsAnomalies.FeatureHistoricStatsAnomalies.feature_display_name},
   *   example: "user_destination".
   * @param {number[]} request.objectives
   *   Required. Objectives of the stats to retrieve.
   * @param {number} request.pageSize
   *   The standard list page size.
   * @param {string} request.pageToken
   *   A page token received from a previous
   *   {@link google.cloud.aiplatform.v1beta1.JobService.SearchModelDeploymentMonitoringStatsAnomalies|JobService.SearchModelDeploymentMonitoringStatsAnomalies}
   *   call.
   * @param {google.protobuf.Timestamp} request.startTime
   *   The earliest timestamp of stats being generated.
   *   If not set, indicates fetching stats till the earliest possible one.
   * @param {google.protobuf.Timestamp} request.endTime
   *   The latest timestamp of stats being generated.
   *   If not set, indicates feching stats till the latest possible one.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [ModelMonitoringStatsAnomalies]{@link google.cloud.aiplatform.v1beta1.ModelMonitoringStatsAnomalies} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `searchModelDeploymentMonitoringStatsAnomaliesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  searchModelDeploymentMonitoringStatsAnomaliesStream(
    request?: protos.google.cloud.aiplatform.v1beta1.ISearchModelDeploymentMonitoringStatsAnomaliesRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        model_deployment_monitoring_job:
          request.modelDeploymentMonitoringJob ?? '',
      });
    const defaultCallSettings =
      this._defaults['searchModelDeploymentMonitoringStatsAnomalies'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.searchModelDeploymentMonitoringStatsAnomalies.createStream(
      this.innerApiCalls
        .searchModelDeploymentMonitoringStatsAnomalies as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `searchModelDeploymentMonitoringStatsAnomalies`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.modelDeploymentMonitoringJob
   *   Required. ModelDeploymentMonitoring Job resource name.
   *   Format:
   *   `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
   * @param {string} request.deployedModelId
   *   Required. The DeployedModel ID of the
   *   [ModelDeploymentMonitoringObjectiveConfig.deployed_model_id].
   * @param {string} request.featureDisplayName
   *   The feature display name. If specified, only return the stats belonging to
   *   this feature. Format:
   *   {@link google.cloud.aiplatform.v1beta1.ModelMonitoringStatsAnomalies.FeatureHistoricStatsAnomalies.feature_display_name|ModelMonitoringStatsAnomalies.FeatureHistoricStatsAnomalies.feature_display_name},
   *   example: "user_destination".
   * @param {number[]} request.objectives
   *   Required. Objectives of the stats to retrieve.
   * @param {number} request.pageSize
   *   The standard list page size.
   * @param {string} request.pageToken
   *   A page token received from a previous
   *   {@link google.cloud.aiplatform.v1beta1.JobService.SearchModelDeploymentMonitoringStatsAnomalies|JobService.SearchModelDeploymentMonitoringStatsAnomalies}
   *   call.
   * @param {google.protobuf.Timestamp} request.startTime
   *   The earliest timestamp of stats being generated.
   *   If not set, indicates fetching stats till the earliest possible one.
   * @param {google.protobuf.Timestamp} request.endTime
   *   The latest timestamp of stats being generated.
   *   If not set, indicates feching stats till the latest possible one.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [ModelMonitoringStatsAnomalies]{@link google.cloud.aiplatform.v1beta1.ModelMonitoringStatsAnomalies}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.search_model_deployment_monitoring_stats_anomalies.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_SearchModelDeploymentMonitoringStatsAnomalies_async
   */
  searchModelDeploymentMonitoringStatsAnomaliesAsync(
    request?: protos.google.cloud.aiplatform.v1beta1.ISearchModelDeploymentMonitoringStatsAnomaliesRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.aiplatform.v1beta1.IModelMonitoringStatsAnomalies> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        model_deployment_monitoring_job:
          request.modelDeploymentMonitoringJob ?? '',
      });
    const defaultCallSettings =
      this._defaults['searchModelDeploymentMonitoringStatsAnomalies'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.searchModelDeploymentMonitoringStatsAnomalies.asyncIterate(
      this.innerApiCalls[
        'searchModelDeploymentMonitoringStatsAnomalies'
      ] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.aiplatform.v1beta1.IModelMonitoringStatsAnomalies>;
  }
  /**
   * Lists ModelDeploymentMonitoringJobs in a Location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent of the ModelDeploymentMonitoringJob.
   *   Format: `projects/{project}/locations/{location}`
   * @param {string} request.filter
   *   The standard list filter.
   *
   *   Supported fields:
   *
   *     * `display_name` supports `=`, `!=` comparisons, and `:` wildcard.
   *     * `state` supports `=`, `!=` comparisons.
   *     * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons.
   *       `create_time` must be in RFC 3339 format.
   *     * `labels` supports general map functions that is:
   *       `labels.key=value` - key:value equality
   *       `labels.key:* - key existence
   *
   *   Some examples of using the filter are:
   *
   *     * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"`
   *     * `state!="JOB_STATE_FAILED" OR display_name="my_job"`
   *     * `NOT display_name="my_job"`
   *     * `create_time>"2021-05-18T00:00:00Z"`
   *     * `labels.keyA=valueA`
   *     * `labels.keyB:*`
   * @param {number} request.pageSize
   *   The standard list page size.
   * @param {string} request.pageToken
   *   The standard list page token.
   * @param {google.protobuf.FieldMask} request.readMask
   *   Mask specifying which fields to read
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [ModelDeploymentMonitoringJob]{@link google.cloud.aiplatform.v1beta1.ModelDeploymentMonitoringJob}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listModelDeploymentMonitoringJobsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listModelDeploymentMonitoringJobs(
    request?: protos.google.cloud.aiplatform.v1beta1.IListModelDeploymentMonitoringJobsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IModelDeploymentMonitoringJob[],
      protos.google.cloud.aiplatform.v1beta1.IListModelDeploymentMonitoringJobsRequest | null,
      protos.google.cloud.aiplatform.v1beta1.IListModelDeploymentMonitoringJobsResponse
    ]
  >;
  listModelDeploymentMonitoringJobs(
    request: protos.google.cloud.aiplatform.v1beta1.IListModelDeploymentMonitoringJobsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.aiplatform.v1beta1.IListModelDeploymentMonitoringJobsRequest,
      | protos.google.cloud.aiplatform.v1beta1.IListModelDeploymentMonitoringJobsResponse
      | null
      | undefined,
      protos.google.cloud.aiplatform.v1beta1.IModelDeploymentMonitoringJob
    >
  ): void;
  listModelDeploymentMonitoringJobs(
    request: protos.google.cloud.aiplatform.v1beta1.IListModelDeploymentMonitoringJobsRequest,
    callback: PaginationCallback<
      protos.google.cloud.aiplatform.v1beta1.IListModelDeploymentMonitoringJobsRequest,
      | protos.google.cloud.aiplatform.v1beta1.IListModelDeploymentMonitoringJobsResponse
      | null
      | undefined,
      protos.google.cloud.aiplatform.v1beta1.IModelDeploymentMonitoringJob
    >
  ): void;
  listModelDeploymentMonitoringJobs(
    request?: protos.google.cloud.aiplatform.v1beta1.IListModelDeploymentMonitoringJobsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.aiplatform.v1beta1.IListModelDeploymentMonitoringJobsRequest,
          | protos.google.cloud.aiplatform.v1beta1.IListModelDeploymentMonitoringJobsResponse
          | null
          | undefined,
          protos.google.cloud.aiplatform.v1beta1.IModelDeploymentMonitoringJob
        >,
    callback?: PaginationCallback<
      protos.google.cloud.aiplatform.v1beta1.IListModelDeploymentMonitoringJobsRequest,
      | protos.google.cloud.aiplatform.v1beta1.IListModelDeploymentMonitoringJobsResponse
      | null
      | undefined,
      protos.google.cloud.aiplatform.v1beta1.IModelDeploymentMonitoringJob
    >
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IModelDeploymentMonitoringJob[],
      protos.google.cloud.aiplatform.v1beta1.IListModelDeploymentMonitoringJobsRequest | null,
      protos.google.cloud.aiplatform.v1beta1.IListModelDeploymentMonitoringJobsResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listModelDeploymentMonitoringJobs(
      request,
      options,
      callback
    );
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent of the ModelDeploymentMonitoringJob.
   *   Format: `projects/{project}/locations/{location}`
   * @param {string} request.filter
   *   The standard list filter.
   *
   *   Supported fields:
   *
   *     * `display_name` supports `=`, `!=` comparisons, and `:` wildcard.
   *     * `state` supports `=`, `!=` comparisons.
   *     * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons.
   *       `create_time` must be in RFC 3339 format.
   *     * `labels` supports general map functions that is:
   *       `labels.key=value` - key:value equality
   *       `labels.key:* - key existence
   *
   *   Some examples of using the filter are:
   *
   *     * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"`
   *     * `state!="JOB_STATE_FAILED" OR display_name="my_job"`
   *     * `NOT display_name="my_job"`
   *     * `create_time>"2021-05-18T00:00:00Z"`
   *     * `labels.keyA=valueA`
   *     * `labels.keyB:*`
   * @param {number} request.pageSize
   *   The standard list page size.
   * @param {string} request.pageToken
   *   The standard list page token.
   * @param {google.protobuf.FieldMask} request.readMask
   *   Mask specifying which fields to read
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [ModelDeploymentMonitoringJob]{@link google.cloud.aiplatform.v1beta1.ModelDeploymentMonitoringJob} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listModelDeploymentMonitoringJobsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listModelDeploymentMonitoringJobsStream(
    request?: protos.google.cloud.aiplatform.v1beta1.IListModelDeploymentMonitoringJobsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings =
      this._defaults['listModelDeploymentMonitoringJobs'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listModelDeploymentMonitoringJobs.createStream(
      this.innerApiCalls.listModelDeploymentMonitoringJobs as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listModelDeploymentMonitoringJobs`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent of the ModelDeploymentMonitoringJob.
   *   Format: `projects/{project}/locations/{location}`
   * @param {string} request.filter
   *   The standard list filter.
   *
   *   Supported fields:
   *
   *     * `display_name` supports `=`, `!=` comparisons, and `:` wildcard.
   *     * `state` supports `=`, `!=` comparisons.
   *     * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons.
   *       `create_time` must be in RFC 3339 format.
   *     * `labels` supports general map functions that is:
   *       `labels.key=value` - key:value equality
   *       `labels.key:* - key existence
   *
   *   Some examples of using the filter are:
   *
   *     * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"`
   *     * `state!="JOB_STATE_FAILED" OR display_name="my_job"`
   *     * `NOT display_name="my_job"`
   *     * `create_time>"2021-05-18T00:00:00Z"`
   *     * `labels.keyA=valueA`
   *     * `labels.keyB:*`
   * @param {number} request.pageSize
   *   The standard list page size.
   * @param {string} request.pageToken
   *   The standard list page token.
   * @param {google.protobuf.FieldMask} request.readMask
   *   Mask specifying which fields to read
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [ModelDeploymentMonitoringJob]{@link google.cloud.aiplatform.v1beta1.ModelDeploymentMonitoringJob}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/job_service.list_model_deployment_monitoring_jobs.js</caption>
   * region_tag:aiplatform_v1beta1_generated_JobService_ListModelDeploymentMonitoringJobs_async
   */
  listModelDeploymentMonitoringJobsAsync(
    request?: protos.google.cloud.aiplatform.v1beta1.IListModelDeploymentMonitoringJobsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.aiplatform.v1beta1.IModelDeploymentMonitoringJob> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings =
      this._defaults['listModelDeploymentMonitoringJobs'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listModelDeploymentMonitoringJobs.asyncIterate(
      this.innerApiCalls['listModelDeploymentMonitoringJobs'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.aiplatform.v1beta1.IModelDeploymentMonitoringJob>;
  }
  /**
   * Gets the access control policy for a resource. Returns an empty policy
   * if the resource exists and does not have a policy set.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy is being requested.
   *   See the operation documentation for the appropriate value for this field.
   * @param {Object} [request.options]
   *   OPTIONAL: A `GetPolicyOptions` object for specifying options to
   *   `GetIamPolicy`. This field is only used by Cloud IAM.
   *
   *   This object should have the same structure as [GetPolicyOptions]{@link google.iam.v1.GetPolicyOptions}
   * @param {Object} [options]
   *   Optional parameters. You can override the default settings for this call, e.g, timeout,
   *   retries, paginations, etc. See [gax.CallOptions]{@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html} for the details.
   * @param {function(?Error, ?Object)} [callback]
   *   The function which will be called with the result of the API call.
   *
   *   The second parameter to the callback is an object representing [Policy]{@link google.iam.v1.Policy}.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Policy]{@link google.iam.v1.Policy}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  getIamPolicy(
    request: IamProtos.google.iam.v1.GetIamPolicyRequest,
    options?:
      | gax.CallOptions
      | Callback<
          IamProtos.google.iam.v1.Policy,
          IamProtos.google.iam.v1.GetIamPolicyRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      IamProtos.google.iam.v1.Policy,
      IamProtos.google.iam.v1.GetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<IamProtos.google.iam.v1.Policy> {
    return this.iamClient.getIamPolicy(request, options, callback);
  }

  /**
   * Returns permissions that a caller has on the specified resource. If the
   * resource does not exist, this will return an empty set of
   * permissions, not a NOT_FOUND error.
   *
   * Note: This operation is designed to be used for building
   * permission-aware UIs and command-line tools, not for authorization
   * checking. This operation may "fail open" without warning.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy detail is being requested.
   *   See the operation documentation for the appropriate value for this field.
   * @param {string[]} request.permissions
   *   The set of permissions to check for the `resource`. Permissions with
   *   wildcards (such as '*' or 'storage.*') are not allowed. For more
   *   information see
   *   [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
   * @param {Object} [options]
   *   Optional parameters. You can override the default settings for this call, e.g, timeout,
   *   retries, paginations, etc. See [gax.CallOptions]{@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html} for the details.
   * @param {function(?Error, ?Object)} [callback]
   *   The function which will be called with the result of the API call.
   *
   *   The second parameter to the callback is an object representing [TestIamPermissionsResponse]{@link google.iam.v1.TestIamPermissionsResponse}.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [TestIamPermissionsResponse]{@link google.iam.v1.TestIamPermissionsResponse}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  setIamPolicy(
    request: IamProtos.google.iam.v1.SetIamPolicyRequest,
    options?:
      | gax.CallOptions
      | Callback<
          IamProtos.google.iam.v1.Policy,
          IamProtos.google.iam.v1.SetIamPolicyRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      IamProtos.google.iam.v1.Policy,
      IamProtos.google.iam.v1.SetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<IamProtos.google.iam.v1.Policy> {
    return this.iamClient.setIamPolicy(request, options, callback);
  }

  /**
   * Returns permissions that a caller has on the specified resource. If the
   * resource does not exist, this will return an empty set of
   * permissions, not a NOT_FOUND error.
   *
   * Note: This operation is designed to be used for building
   * permission-aware UIs and command-line tools, not for authorization
   * checking. This operation may "fail open" without warning.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy detail is being requested.
   *   See the operation documentation for the appropriate value for this field.
   * @param {string[]} request.permissions
   *   The set of permissions to check for the `resource`. Permissions with
   *   wildcards (such as '*' or 'storage.*') are not allowed. For more
   *   information see
   *   [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
   * @param {Object} [options]
   *   Optional parameters. You can override the default settings for this call, e.g, timeout,
   *   retries, paginations, etc. See [gax.CallOptions]{@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html} for the details.
   * @param {function(?Error, ?Object)} [callback]
   *   The function which will be called with the result of the API call.
   *
   *   The second parameter to the callback is an object representing [TestIamPermissionsResponse]{@link google.iam.v1.TestIamPermissionsResponse}.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [TestIamPermissionsResponse]{@link google.iam.v1.TestIamPermissionsResponse}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   *
   */
  testIamPermissions(
    request: IamProtos.google.iam.v1.TestIamPermissionsRequest,
    options?:
      | gax.CallOptions
      | Callback<
          IamProtos.google.iam.v1.TestIamPermissionsResponse,
          IamProtos.google.iam.v1.TestIamPermissionsRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      IamProtos.google.iam.v1.TestIamPermissionsResponse,
      IamProtos.google.iam.v1.TestIamPermissionsRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<IamProtos.google.iam.v1.TestIamPermissionsResponse> {
    return this.iamClient.testIamPermissions(request, options, callback);
  }

  /**
   * Gets information about a location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Resource name for the location.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Location]{@link google.cloud.location.Location}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example
   * ```
   * const [response] = await client.getLocation(request);
   * ```
   */
  getLocation(
    request: LocationProtos.google.cloud.location.IGetLocationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          LocationProtos.google.cloud.location.ILocation,
          | LocationProtos.google.cloud.location.IGetLocationRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LocationProtos.google.cloud.location.ILocation,
      | LocationProtos.google.cloud.location.IGetLocationRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<LocationProtos.google.cloud.location.ILocation> {
    return this.locationsClient.getLocation(request, options, callback);
  }

  /**
   * Lists information about the supported locations for this service. Returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   The resource that owns the locations collection, if applicable.
   * @param {string} request.filter
   *   The standard list filter.
   * @param {number} request.pageSize
   *   The standard list page size.
   * @param {string} request.pageToken
   *   The standard list page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [Location]{@link google.cloud.location.Location}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example
   * ```
   * const iterable = client.listLocationsAsync(request);
   * for await (const response of iterable) {
   *   // process response
   * }
   * ```
   */
  listLocationsAsync(
    request: LocationProtos.google.cloud.location.IListLocationsRequest,
    options?: CallOptions
  ): AsyncIterable<LocationProtos.google.cloud.location.ILocation> {
    return this.locationsClient.listLocationsAsync(request, options);
  }

  /**
   * Gets the latest state of a long-running operation.  Clients can use this
   * method to poll the operation result at intervals as recommended by the API
   * service.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation resource.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   *   e.g, timeout, retries, paginations, etc. See [gax.CallOptions]{@link
   *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions} for the
   *   details.
   * @param {function(?Error, ?Object)=} callback
   *   The function which will be called with the result of the API call.
   *
   *   The second parameter to the callback is an object representing
   * [google.longrunning.Operation]{@link
   * external:"google.longrunning.Operation"}.
   * @return {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   * [google.longrunning.Operation]{@link
   * external:"google.longrunning.Operation"}. The promise has a method named
   * "cancel" which cancels the ongoing API call.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * const name = '';
   * const [response] = await client.getOperation({name});
   * // doThingsWith(response)
   * ```
   */
  getOperation(
    request: protos.google.longrunning.GetOperationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          protos.google.longrunning.Operation,
          protos.google.longrunning.GetOperationRequest,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.longrunning.Operation,
      protos.google.longrunning.GetOperationRequest,
      {} | null | undefined
    >
  ): Promise<[protos.google.longrunning.Operation]> {
    return this.operationsClient.getOperation(request, options, callback);
  }
  /**
   * Lists operations that match the specified filter in the request. If the
   * server doesn't support this method, it returns `UNIMPLEMENTED`. Returns an iterable object.
   *
   * For-await-of syntax is used with the iterable to recursively get response element on-demand.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation collection.
   * @param {string} request.filter - The standard list filter.
   * @param {number=} request.pageSize -
   *   The maximum number of resources contained in the underlying API
   *   response. If page streaming is performed per-resource, this
   *   parameter does not affect the return value. If page streaming is
   *   performed per-page, this determines the maximum number of
   *   resources in a page.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   *   e.g, timeout, retries, paginations, etc. See [gax.CallOptions]{@link
   *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions} for the
   *   details.
   * @returns {Object}
   *   An iterable Object that conforms to @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * for await (const response of client.listOperationsAsync(request));
   * // doThingsWith(response)
   * ```
   */
  listOperationsAsync(
    request: protos.google.longrunning.ListOperationsRequest,
    options?: gax.CallOptions
  ): AsyncIterable<protos.google.longrunning.ListOperationsResponse> {
    return this.operationsClient.listOperationsAsync(request, options);
  }
  /**
   * Starts asynchronous cancellation on a long-running operation.  The server
   * makes a best effort to cancel the operation, but success is not
   * guaranteed.  If the server doesn't support this method, it returns
   * `google.rpc.Code.UNIMPLEMENTED`.  Clients can use
   * {@link Operations.GetOperation} or
   * other methods to check whether the cancellation succeeded or whether the
   * operation completed despite cancellation. On successful cancellation,
   * the operation is not deleted; instead, it becomes an operation with
   * an {@link Operation.error} value with a {@link google.rpc.Status.code} of
   * 1, corresponding to `Code.CANCELLED`.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation resource to be cancelled.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   * e.g, timeout, retries, paginations, etc. See [gax.CallOptions]{@link
   * https://googleapis.github.io/gax-nodejs/global.html#CallOptions} for the
   * details.
   * @param {function(?Error)=} callback
   *   The function which will be called with the result of the API call.
   * @return {Promise} - The promise which resolves when API call finishes.
   *   The promise has a method named "cancel" which cancels the ongoing API
   * call.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * await client.cancelOperation({name: ''});
   * ```
   */
  cancelOperation(
    request: protos.google.longrunning.CancelOperationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          protos.google.protobuf.Empty,
          protos.google.longrunning.CancelOperationRequest,
          {} | undefined | null
        >,
    callback?: Callback<
      protos.google.longrunning.CancelOperationRequest,
      protos.google.protobuf.Empty,
      {} | undefined | null
    >
  ): Promise<protos.google.protobuf.Empty> {
    return this.operationsClient.cancelOperation(request, options, callback);
  }

  /**
   * Deletes a long-running operation. This method indicates that the client is
   * no longer interested in the operation result. It does not cancel the
   * operation. If the server doesn't support this method, it returns
   * `google.rpc.Code.UNIMPLEMENTED`.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation resource to be deleted.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   * e.g, timeout, retries, paginations, etc. See [gax.CallOptions]{@link
   * https://googleapis.github.io/gax-nodejs/global.html#CallOptions} for the
   * details.
   * @param {function(?Error)=} callback
   *   The function which will be called with the result of the API call.
   * @return {Promise} - The promise which resolves when API call finishes.
   *   The promise has a method named "cancel" which cancels the ongoing API
   * call.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * await client.deleteOperation({name: ''});
   * ```
   */
  deleteOperation(
    request: protos.google.longrunning.DeleteOperationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          protos.google.protobuf.Empty,
          protos.google.longrunning.DeleteOperationRequest,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.Empty,
      protos.google.longrunning.DeleteOperationRequest,
      {} | null | undefined
    >
  ): Promise<protos.google.protobuf.Empty> {
    return this.operationsClient.deleteOperation(request, options, callback);
  }

  // --------------------
  // -- Path templates --
  // --------------------

  /**
   * Return a fully-qualified annotation resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} dataset
   * @param {string} data_item
   * @param {string} annotation
   * @returns {string} Resource name string.
   */
  annotationPath(
    project: string,
    location: string,
    dataset: string,
    dataItem: string,
    annotation: string
  ) {
    return this.pathTemplates.annotationPathTemplate.render({
      project: project,
      location: location,
      dataset: dataset,
      data_item: dataItem,
      annotation: annotation,
    });
  }

  /**
   * Parse the project from Annotation resource.
   *
   * @param {string} annotationName
   *   A fully-qualified path representing Annotation resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromAnnotationName(annotationName: string) {
    return this.pathTemplates.annotationPathTemplate.match(annotationName)
      .project;
  }

  /**
   * Parse the location from Annotation resource.
   *
   * @param {string} annotationName
   *   A fully-qualified path representing Annotation resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromAnnotationName(annotationName: string) {
    return this.pathTemplates.annotationPathTemplate.match(annotationName)
      .location;
  }

  /**
   * Parse the dataset from Annotation resource.
   *
   * @param {string} annotationName
   *   A fully-qualified path representing Annotation resource.
   * @returns {string} A string representing the dataset.
   */
  matchDatasetFromAnnotationName(annotationName: string) {
    return this.pathTemplates.annotationPathTemplate.match(annotationName)
      .dataset;
  }

  /**
   * Parse the data_item from Annotation resource.
   *
   * @param {string} annotationName
   *   A fully-qualified path representing Annotation resource.
   * @returns {string} A string representing the data_item.
   */
  matchDataItemFromAnnotationName(annotationName: string) {
    return this.pathTemplates.annotationPathTemplate.match(annotationName)
      .data_item;
  }

  /**
   * Parse the annotation from Annotation resource.
   *
   * @param {string} annotationName
   *   A fully-qualified path representing Annotation resource.
   * @returns {string} A string representing the annotation.
   */
  matchAnnotationFromAnnotationName(annotationName: string) {
    return this.pathTemplates.annotationPathTemplate.match(annotationName)
      .annotation;
  }

  /**
   * Return a fully-qualified annotationSpec resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} dataset
   * @param {string} annotation_spec
   * @returns {string} Resource name string.
   */
  annotationSpecPath(
    project: string,
    location: string,
    dataset: string,
    annotationSpec: string
  ) {
    return this.pathTemplates.annotationSpecPathTemplate.render({
      project: project,
      location: location,
      dataset: dataset,
      annotation_spec: annotationSpec,
    });
  }

  /**
   * Parse the project from AnnotationSpec resource.
   *
   * @param {string} annotationSpecName
   *   A fully-qualified path representing AnnotationSpec resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromAnnotationSpecName(annotationSpecName: string) {
    return this.pathTemplates.annotationSpecPathTemplate.match(
      annotationSpecName
    ).project;
  }

  /**
   * Parse the location from AnnotationSpec resource.
   *
   * @param {string} annotationSpecName
   *   A fully-qualified path representing AnnotationSpec resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromAnnotationSpecName(annotationSpecName: string) {
    return this.pathTemplates.annotationSpecPathTemplate.match(
      annotationSpecName
    ).location;
  }

  /**
   * Parse the dataset from AnnotationSpec resource.
   *
   * @param {string} annotationSpecName
   *   A fully-qualified path representing AnnotationSpec resource.
   * @returns {string} A string representing the dataset.
   */
  matchDatasetFromAnnotationSpecName(annotationSpecName: string) {
    return this.pathTemplates.annotationSpecPathTemplate.match(
      annotationSpecName
    ).dataset;
  }

  /**
   * Parse the annotation_spec from AnnotationSpec resource.
   *
   * @param {string} annotationSpecName
   *   A fully-qualified path representing AnnotationSpec resource.
   * @returns {string} A string representing the annotation_spec.
   */
  matchAnnotationSpecFromAnnotationSpecName(annotationSpecName: string) {
    return this.pathTemplates.annotationSpecPathTemplate.match(
      annotationSpecName
    ).annotation_spec;
  }

  /**
   * Return a fully-qualified artifact resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} metadata_store
   * @param {string} artifact
   * @returns {string} Resource name string.
   */
  artifactPath(
    project: string,
    location: string,
    metadataStore: string,
    artifact: string
  ) {
    return this.pathTemplates.artifactPathTemplate.render({
      project: project,
      location: location,
      metadata_store: metadataStore,
      artifact: artifact,
    });
  }

  /**
   * Parse the project from Artifact resource.
   *
   * @param {string} artifactName
   *   A fully-qualified path representing Artifact resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromArtifactName(artifactName: string) {
    return this.pathTemplates.artifactPathTemplate.match(artifactName).project;
  }

  /**
   * Parse the location from Artifact resource.
   *
   * @param {string} artifactName
   *   A fully-qualified path representing Artifact resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromArtifactName(artifactName: string) {
    return this.pathTemplates.artifactPathTemplate.match(artifactName).location;
  }

  /**
   * Parse the metadata_store from Artifact resource.
   *
   * @param {string} artifactName
   *   A fully-qualified path representing Artifact resource.
   * @returns {string} A string representing the metadata_store.
   */
  matchMetadataStoreFromArtifactName(artifactName: string) {
    return this.pathTemplates.artifactPathTemplate.match(artifactName)
      .metadata_store;
  }

  /**
   * Parse the artifact from Artifact resource.
   *
   * @param {string} artifactName
   *   A fully-qualified path representing Artifact resource.
   * @returns {string} A string representing the artifact.
   */
  matchArtifactFromArtifactName(artifactName: string) {
    return this.pathTemplates.artifactPathTemplate.match(artifactName).artifact;
  }

  /**
   * Return a fully-qualified batchPredictionJob resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} batch_prediction_job
   * @returns {string} Resource name string.
   */
  batchPredictionJobPath(
    project: string,
    location: string,
    batchPredictionJob: string
  ) {
    return this.pathTemplates.batchPredictionJobPathTemplate.render({
      project: project,
      location: location,
      batch_prediction_job: batchPredictionJob,
    });
  }

  /**
   * Parse the project from BatchPredictionJob resource.
   *
   * @param {string} batchPredictionJobName
   *   A fully-qualified path representing BatchPredictionJob resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromBatchPredictionJobName(batchPredictionJobName: string) {
    return this.pathTemplates.batchPredictionJobPathTemplate.match(
      batchPredictionJobName
    ).project;
  }

  /**
   * Parse the location from BatchPredictionJob resource.
   *
   * @param {string} batchPredictionJobName
   *   A fully-qualified path representing BatchPredictionJob resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromBatchPredictionJobName(batchPredictionJobName: string) {
    return this.pathTemplates.batchPredictionJobPathTemplate.match(
      batchPredictionJobName
    ).location;
  }

  /**
   * Parse the batch_prediction_job from BatchPredictionJob resource.
   *
   * @param {string} batchPredictionJobName
   *   A fully-qualified path representing BatchPredictionJob resource.
   * @returns {string} A string representing the batch_prediction_job.
   */
  matchBatchPredictionJobFromBatchPredictionJobName(
    batchPredictionJobName: string
  ) {
    return this.pathTemplates.batchPredictionJobPathTemplate.match(
      batchPredictionJobName
    ).batch_prediction_job;
  }

  /**
   * Return a fully-qualified context resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} metadata_store
   * @param {string} context
   * @returns {string} Resource name string.
   */
  contextPath(
    project: string,
    location: string,
    metadataStore: string,
    context: string
  ) {
    return this.pathTemplates.contextPathTemplate.render({
      project: project,
      location: location,
      metadata_store: metadataStore,
      context: context,
    });
  }

  /**
   * Parse the project from Context resource.
   *
   * @param {string} contextName
   *   A fully-qualified path representing Context resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromContextName(contextName: string) {
    return this.pathTemplates.contextPathTemplate.match(contextName).project;
  }

  /**
   * Parse the location from Context resource.
   *
   * @param {string} contextName
   *   A fully-qualified path representing Context resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromContextName(contextName: string) {
    return this.pathTemplates.contextPathTemplate.match(contextName).location;
  }

  /**
   * Parse the metadata_store from Context resource.
   *
   * @param {string} contextName
   *   A fully-qualified path representing Context resource.
   * @returns {string} A string representing the metadata_store.
   */
  matchMetadataStoreFromContextName(contextName: string) {
    return this.pathTemplates.contextPathTemplate.match(contextName)
      .metadata_store;
  }

  /**
   * Parse the context from Context resource.
   *
   * @param {string} contextName
   *   A fully-qualified path representing Context resource.
   * @returns {string} A string representing the context.
   */
  matchContextFromContextName(contextName: string) {
    return this.pathTemplates.contextPathTemplate.match(contextName).context;
  }

  /**
   * Return a fully-qualified customJob resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} custom_job
   * @returns {string} Resource name string.
   */
  customJobPath(project: string, location: string, customJob: string) {
    return this.pathTemplates.customJobPathTemplate.render({
      project: project,
      location: location,
      custom_job: customJob,
    });
  }

  /**
   * Parse the project from CustomJob resource.
   *
   * @param {string} customJobName
   *   A fully-qualified path representing CustomJob resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromCustomJobName(customJobName: string) {
    return this.pathTemplates.customJobPathTemplate.match(customJobName)
      .project;
  }

  /**
   * Parse the location from CustomJob resource.
   *
   * @param {string} customJobName
   *   A fully-qualified path representing CustomJob resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromCustomJobName(customJobName: string) {
    return this.pathTemplates.customJobPathTemplate.match(customJobName)
      .location;
  }

  /**
   * Parse the custom_job from CustomJob resource.
   *
   * @param {string} customJobName
   *   A fully-qualified path representing CustomJob resource.
   * @returns {string} A string representing the custom_job.
   */
  matchCustomJobFromCustomJobName(customJobName: string) {
    return this.pathTemplates.customJobPathTemplate.match(customJobName)
      .custom_job;
  }

  /**
   * Return a fully-qualified dataItem resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} dataset
   * @param {string} data_item
   * @returns {string} Resource name string.
   */
  dataItemPath(
    project: string,
    location: string,
    dataset: string,
    dataItem: string
  ) {
    return this.pathTemplates.dataItemPathTemplate.render({
      project: project,
      location: location,
      dataset: dataset,
      data_item: dataItem,
    });
  }

  /**
   * Parse the project from DataItem resource.
   *
   * @param {string} dataItemName
   *   A fully-qualified path representing DataItem resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromDataItemName(dataItemName: string) {
    return this.pathTemplates.dataItemPathTemplate.match(dataItemName).project;
  }

  /**
   * Parse the location from DataItem resource.
   *
   * @param {string} dataItemName
   *   A fully-qualified path representing DataItem resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromDataItemName(dataItemName: string) {
    return this.pathTemplates.dataItemPathTemplate.match(dataItemName).location;
  }

  /**
   * Parse the dataset from DataItem resource.
   *
   * @param {string} dataItemName
   *   A fully-qualified path representing DataItem resource.
   * @returns {string} A string representing the dataset.
   */
  matchDatasetFromDataItemName(dataItemName: string) {
    return this.pathTemplates.dataItemPathTemplate.match(dataItemName).dataset;
  }

  /**
   * Parse the data_item from DataItem resource.
   *
   * @param {string} dataItemName
   *   A fully-qualified path representing DataItem resource.
   * @returns {string} A string representing the data_item.
   */
  matchDataItemFromDataItemName(dataItemName: string) {
    return this.pathTemplates.dataItemPathTemplate.match(dataItemName)
      .data_item;
  }

  /**
   * Return a fully-qualified dataLabelingJob resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} data_labeling_job
   * @returns {string} Resource name string.
   */
  dataLabelingJobPath(
    project: string,
    location: string,
    dataLabelingJob: string
  ) {
    return this.pathTemplates.dataLabelingJobPathTemplate.render({
      project: project,
      location: location,
      data_labeling_job: dataLabelingJob,
    });
  }

  /**
   * Parse the project from DataLabelingJob resource.
   *
   * @param {string} dataLabelingJobName
   *   A fully-qualified path representing DataLabelingJob resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromDataLabelingJobName(dataLabelingJobName: string) {
    return this.pathTemplates.dataLabelingJobPathTemplate.match(
      dataLabelingJobName
    ).project;
  }

  /**
   * Parse the location from DataLabelingJob resource.
   *
   * @param {string} dataLabelingJobName
   *   A fully-qualified path representing DataLabelingJob resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromDataLabelingJobName(dataLabelingJobName: string) {
    return this.pathTemplates.dataLabelingJobPathTemplate.match(
      dataLabelingJobName
    ).location;
  }

  /**
   * Parse the data_labeling_job from DataLabelingJob resource.
   *
   * @param {string} dataLabelingJobName
   *   A fully-qualified path representing DataLabelingJob resource.
   * @returns {string} A string representing the data_labeling_job.
   */
  matchDataLabelingJobFromDataLabelingJobName(dataLabelingJobName: string) {
    return this.pathTemplates.dataLabelingJobPathTemplate.match(
      dataLabelingJobName
    ).data_labeling_job;
  }

  /**
   * Return a fully-qualified dataset resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} dataset
   * @returns {string} Resource name string.
   */
  datasetPath(project: string, location: string, dataset: string) {
    return this.pathTemplates.datasetPathTemplate.render({
      project: project,
      location: location,
      dataset: dataset,
    });
  }

  /**
   * Parse the project from Dataset resource.
   *
   * @param {string} datasetName
   *   A fully-qualified path representing Dataset resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromDatasetName(datasetName: string) {
    return this.pathTemplates.datasetPathTemplate.match(datasetName).project;
  }

  /**
   * Parse the location from Dataset resource.
   *
   * @param {string} datasetName
   *   A fully-qualified path representing Dataset resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromDatasetName(datasetName: string) {
    return this.pathTemplates.datasetPathTemplate.match(datasetName).location;
  }

  /**
   * Parse the dataset from Dataset resource.
   *
   * @param {string} datasetName
   *   A fully-qualified path representing Dataset resource.
   * @returns {string} A string representing the dataset.
   */
  matchDatasetFromDatasetName(datasetName: string) {
    return this.pathTemplates.datasetPathTemplate.match(datasetName).dataset;
  }

  /**
   * Return a fully-qualified deploymentResourcePool resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} deployment_resource_pool
   * @returns {string} Resource name string.
   */
  deploymentResourcePoolPath(
    project: string,
    location: string,
    deploymentResourcePool: string
  ) {
    return this.pathTemplates.deploymentResourcePoolPathTemplate.render({
      project: project,
      location: location,
      deployment_resource_pool: deploymentResourcePool,
    });
  }

  /**
   * Parse the project from DeploymentResourcePool resource.
   *
   * @param {string} deploymentResourcePoolName
   *   A fully-qualified path representing DeploymentResourcePool resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromDeploymentResourcePoolName(
    deploymentResourcePoolName: string
  ) {
    return this.pathTemplates.deploymentResourcePoolPathTemplate.match(
      deploymentResourcePoolName
    ).project;
  }

  /**
   * Parse the location from DeploymentResourcePool resource.
   *
   * @param {string} deploymentResourcePoolName
   *   A fully-qualified path representing DeploymentResourcePool resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromDeploymentResourcePoolName(
    deploymentResourcePoolName: string
  ) {
    return this.pathTemplates.deploymentResourcePoolPathTemplate.match(
      deploymentResourcePoolName
    ).location;
  }

  /**
   * Parse the deployment_resource_pool from DeploymentResourcePool resource.
   *
   * @param {string} deploymentResourcePoolName
   *   A fully-qualified path representing DeploymentResourcePool resource.
   * @returns {string} A string representing the deployment_resource_pool.
   */
  matchDeploymentResourcePoolFromDeploymentResourcePoolName(
    deploymentResourcePoolName: string
  ) {
    return this.pathTemplates.deploymentResourcePoolPathTemplate.match(
      deploymentResourcePoolName
    ).deployment_resource_pool;
  }

  /**
   * Return a fully-qualified endpoint resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} endpoint
   * @returns {string} Resource name string.
   */
  endpointPath(project: string, location: string, endpoint: string) {
    return this.pathTemplates.endpointPathTemplate.render({
      project: project,
      location: location,
      endpoint: endpoint,
    });
  }

  /**
   * Parse the project from Endpoint resource.
   *
   * @param {string} endpointName
   *   A fully-qualified path representing Endpoint resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromEndpointName(endpointName: string) {
    return this.pathTemplates.endpointPathTemplate.match(endpointName).project;
  }

  /**
   * Parse the location from Endpoint resource.
   *
   * @param {string} endpointName
   *   A fully-qualified path representing Endpoint resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromEndpointName(endpointName: string) {
    return this.pathTemplates.endpointPathTemplate.match(endpointName).location;
  }

  /**
   * Parse the endpoint from Endpoint resource.
   *
   * @param {string} endpointName
   *   A fully-qualified path representing Endpoint resource.
   * @returns {string} A string representing the endpoint.
   */
  matchEndpointFromEndpointName(endpointName: string) {
    return this.pathTemplates.endpointPathTemplate.match(endpointName).endpoint;
  }

  /**
   * Return a fully-qualified entityType resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} featurestore
   * @param {string} entity_type
   * @returns {string} Resource name string.
   */
  entityTypePath(
    project: string,
    location: string,
    featurestore: string,
    entityType: string
  ) {
    return this.pathTemplates.entityTypePathTemplate.render({
      project: project,
      location: location,
      featurestore: featurestore,
      entity_type: entityType,
    });
  }

  /**
   * Parse the project from EntityType resource.
   *
   * @param {string} entityTypeName
   *   A fully-qualified path representing EntityType resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromEntityTypeName(entityTypeName: string) {
    return this.pathTemplates.entityTypePathTemplate.match(entityTypeName)
      .project;
  }

  /**
   * Parse the location from EntityType resource.
   *
   * @param {string} entityTypeName
   *   A fully-qualified path representing EntityType resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromEntityTypeName(entityTypeName: string) {
    return this.pathTemplates.entityTypePathTemplate.match(entityTypeName)
      .location;
  }

  /**
   * Parse the featurestore from EntityType resource.
   *
   * @param {string} entityTypeName
   *   A fully-qualified path representing EntityType resource.
   * @returns {string} A string representing the featurestore.
   */
  matchFeaturestoreFromEntityTypeName(entityTypeName: string) {
    return this.pathTemplates.entityTypePathTemplate.match(entityTypeName)
      .featurestore;
  }

  /**
   * Parse the entity_type from EntityType resource.
   *
   * @param {string} entityTypeName
   *   A fully-qualified path representing EntityType resource.
   * @returns {string} A string representing the entity_type.
   */
  matchEntityTypeFromEntityTypeName(entityTypeName: string) {
    return this.pathTemplates.entityTypePathTemplate.match(entityTypeName)
      .entity_type;
  }

  /**
   * Return a fully-qualified execution resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} metadata_store
   * @param {string} execution
   * @returns {string} Resource name string.
   */
  executionPath(
    project: string,
    location: string,
    metadataStore: string,
    execution: string
  ) {
    return this.pathTemplates.executionPathTemplate.render({
      project: project,
      location: location,
      metadata_store: metadataStore,
      execution: execution,
    });
  }

  /**
   * Parse the project from Execution resource.
   *
   * @param {string} executionName
   *   A fully-qualified path representing Execution resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromExecutionName(executionName: string) {
    return this.pathTemplates.executionPathTemplate.match(executionName)
      .project;
  }

  /**
   * Parse the location from Execution resource.
   *
   * @param {string} executionName
   *   A fully-qualified path representing Execution resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromExecutionName(executionName: string) {
    return this.pathTemplates.executionPathTemplate.match(executionName)
      .location;
  }

  /**
   * Parse the metadata_store from Execution resource.
   *
   * @param {string} executionName
   *   A fully-qualified path representing Execution resource.
   * @returns {string} A string representing the metadata_store.
   */
  matchMetadataStoreFromExecutionName(executionName: string) {
    return this.pathTemplates.executionPathTemplate.match(executionName)
      .metadata_store;
  }

  /**
   * Parse the execution from Execution resource.
   *
   * @param {string} executionName
   *   A fully-qualified path representing Execution resource.
   * @returns {string} A string representing the execution.
   */
  matchExecutionFromExecutionName(executionName: string) {
    return this.pathTemplates.executionPathTemplate.match(executionName)
      .execution;
  }

  /**
   * Return a fully-qualified feature resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} featurestore
   * @param {string} entity_type
   * @param {string} feature
   * @returns {string} Resource name string.
   */
  featurePath(
    project: string,
    location: string,
    featurestore: string,
    entityType: string,
    feature: string
  ) {
    return this.pathTemplates.featurePathTemplate.render({
      project: project,
      location: location,
      featurestore: featurestore,
      entity_type: entityType,
      feature: feature,
    });
  }

  /**
   * Parse the project from Feature resource.
   *
   * @param {string} featureName
   *   A fully-qualified path representing Feature resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromFeatureName(featureName: string) {
    return this.pathTemplates.featurePathTemplate.match(featureName).project;
  }

  /**
   * Parse the location from Feature resource.
   *
   * @param {string} featureName
   *   A fully-qualified path representing Feature resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromFeatureName(featureName: string) {
    return this.pathTemplates.featurePathTemplate.match(featureName).location;
  }

  /**
   * Parse the featurestore from Feature resource.
   *
   * @param {string} featureName
   *   A fully-qualified path representing Feature resource.
   * @returns {string} A string representing the featurestore.
   */
  matchFeaturestoreFromFeatureName(featureName: string) {
    return this.pathTemplates.featurePathTemplate.match(featureName)
      .featurestore;
  }

  /**
   * Parse the entity_type from Feature resource.
   *
   * @param {string} featureName
   *   A fully-qualified path representing Feature resource.
   * @returns {string} A string representing the entity_type.
   */
  matchEntityTypeFromFeatureName(featureName: string) {
    return this.pathTemplates.featurePathTemplate.match(featureName)
      .entity_type;
  }

  /**
   * Parse the feature from Feature resource.
   *
   * @param {string} featureName
   *   A fully-qualified path representing Feature resource.
   * @returns {string} A string representing the feature.
   */
  matchFeatureFromFeatureName(featureName: string) {
    return this.pathTemplates.featurePathTemplate.match(featureName).feature;
  }

  /**
   * Return a fully-qualified featurestore resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} featurestore
   * @returns {string} Resource name string.
   */
  featurestorePath(project: string, location: string, featurestore: string) {
    return this.pathTemplates.featurestorePathTemplate.render({
      project: project,
      location: location,
      featurestore: featurestore,
    });
  }

  /**
   * Parse the project from Featurestore resource.
   *
   * @param {string} featurestoreName
   *   A fully-qualified path representing Featurestore resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromFeaturestoreName(featurestoreName: string) {
    return this.pathTemplates.featurestorePathTemplate.match(featurestoreName)
      .project;
  }

  /**
   * Parse the location from Featurestore resource.
   *
   * @param {string} featurestoreName
   *   A fully-qualified path representing Featurestore resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromFeaturestoreName(featurestoreName: string) {
    return this.pathTemplates.featurestorePathTemplate.match(featurestoreName)
      .location;
  }

  /**
   * Parse the featurestore from Featurestore resource.
   *
   * @param {string} featurestoreName
   *   A fully-qualified path representing Featurestore resource.
   * @returns {string} A string representing the featurestore.
   */
  matchFeaturestoreFromFeaturestoreName(featurestoreName: string) {
    return this.pathTemplates.featurestorePathTemplate.match(featurestoreName)
      .featurestore;
  }

  /**
   * Return a fully-qualified hyperparameterTuningJob resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} hyperparameter_tuning_job
   * @returns {string} Resource name string.
   */
  hyperparameterTuningJobPath(
    project: string,
    location: string,
    hyperparameterTuningJob: string
  ) {
    return this.pathTemplates.hyperparameterTuningJobPathTemplate.render({
      project: project,
      location: location,
      hyperparameter_tuning_job: hyperparameterTuningJob,
    });
  }

  /**
   * Parse the project from HyperparameterTuningJob resource.
   *
   * @param {string} hyperparameterTuningJobName
   *   A fully-qualified path representing HyperparameterTuningJob resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromHyperparameterTuningJobName(
    hyperparameterTuningJobName: string
  ) {
    return this.pathTemplates.hyperparameterTuningJobPathTemplate.match(
      hyperparameterTuningJobName
    ).project;
  }

  /**
   * Parse the location from HyperparameterTuningJob resource.
   *
   * @param {string} hyperparameterTuningJobName
   *   A fully-qualified path representing HyperparameterTuningJob resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromHyperparameterTuningJobName(
    hyperparameterTuningJobName: string
  ) {
    return this.pathTemplates.hyperparameterTuningJobPathTemplate.match(
      hyperparameterTuningJobName
    ).location;
  }

  /**
   * Parse the hyperparameter_tuning_job from HyperparameterTuningJob resource.
   *
   * @param {string} hyperparameterTuningJobName
   *   A fully-qualified path representing HyperparameterTuningJob resource.
   * @returns {string} A string representing the hyperparameter_tuning_job.
   */
  matchHyperparameterTuningJobFromHyperparameterTuningJobName(
    hyperparameterTuningJobName: string
  ) {
    return this.pathTemplates.hyperparameterTuningJobPathTemplate.match(
      hyperparameterTuningJobName
    ).hyperparameter_tuning_job;
  }

  /**
   * Return a fully-qualified index resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} index
   * @returns {string} Resource name string.
   */
  indexPath(project: string, location: string, index: string) {
    return this.pathTemplates.indexPathTemplate.render({
      project: project,
      location: location,
      index: index,
    });
  }

  /**
   * Parse the project from Index resource.
   *
   * @param {string} indexName
   *   A fully-qualified path representing Index resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromIndexName(indexName: string) {
    return this.pathTemplates.indexPathTemplate.match(indexName).project;
  }

  /**
   * Parse the location from Index resource.
   *
   * @param {string} indexName
   *   A fully-qualified path representing Index resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromIndexName(indexName: string) {
    return this.pathTemplates.indexPathTemplate.match(indexName).location;
  }

  /**
   * Parse the index from Index resource.
   *
   * @param {string} indexName
   *   A fully-qualified path representing Index resource.
   * @returns {string} A string representing the index.
   */
  matchIndexFromIndexName(indexName: string) {
    return this.pathTemplates.indexPathTemplate.match(indexName).index;
  }

  /**
   * Return a fully-qualified indexEndpoint resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} index_endpoint
   * @returns {string} Resource name string.
   */
  indexEndpointPath(project: string, location: string, indexEndpoint: string) {
    return this.pathTemplates.indexEndpointPathTemplate.render({
      project: project,
      location: location,
      index_endpoint: indexEndpoint,
    });
  }

  /**
   * Parse the project from IndexEndpoint resource.
   *
   * @param {string} indexEndpointName
   *   A fully-qualified path representing IndexEndpoint resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromIndexEndpointName(indexEndpointName: string) {
    return this.pathTemplates.indexEndpointPathTemplate.match(indexEndpointName)
      .project;
  }

  /**
   * Parse the location from IndexEndpoint resource.
   *
   * @param {string} indexEndpointName
   *   A fully-qualified path representing IndexEndpoint resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromIndexEndpointName(indexEndpointName: string) {
    return this.pathTemplates.indexEndpointPathTemplate.match(indexEndpointName)
      .location;
  }

  /**
   * Parse the index_endpoint from IndexEndpoint resource.
   *
   * @param {string} indexEndpointName
   *   A fully-qualified path representing IndexEndpoint resource.
   * @returns {string} A string representing the index_endpoint.
   */
  matchIndexEndpointFromIndexEndpointName(indexEndpointName: string) {
    return this.pathTemplates.indexEndpointPathTemplate.match(indexEndpointName)
      .index_endpoint;
  }

  /**
   * Return a fully-qualified location resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @returns {string} Resource name string.
   */
  locationPath(project: string, location: string) {
    return this.pathTemplates.locationPathTemplate.render({
      project: project,
      location: location,
    });
  }

  /**
   * Parse the project from Location resource.
   *
   * @param {string} locationName
   *   A fully-qualified path representing Location resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromLocationName(locationName: string) {
    return this.pathTemplates.locationPathTemplate.match(locationName).project;
  }

  /**
   * Parse the location from Location resource.
   *
   * @param {string} locationName
   *   A fully-qualified path representing Location resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromLocationName(locationName: string) {
    return this.pathTemplates.locationPathTemplate.match(locationName).location;
  }

  /**
   * Return a fully-qualified metadataSchema resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} metadata_store
   * @param {string} metadata_schema
   * @returns {string} Resource name string.
   */
  metadataSchemaPath(
    project: string,
    location: string,
    metadataStore: string,
    metadataSchema: string
  ) {
    return this.pathTemplates.metadataSchemaPathTemplate.render({
      project: project,
      location: location,
      metadata_store: metadataStore,
      metadata_schema: metadataSchema,
    });
  }

  /**
   * Parse the project from MetadataSchema resource.
   *
   * @param {string} metadataSchemaName
   *   A fully-qualified path representing MetadataSchema resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromMetadataSchemaName(metadataSchemaName: string) {
    return this.pathTemplates.metadataSchemaPathTemplate.match(
      metadataSchemaName
    ).project;
  }

  /**
   * Parse the location from MetadataSchema resource.
   *
   * @param {string} metadataSchemaName
   *   A fully-qualified path representing MetadataSchema resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromMetadataSchemaName(metadataSchemaName: string) {
    return this.pathTemplates.metadataSchemaPathTemplate.match(
      metadataSchemaName
    ).location;
  }

  /**
   * Parse the metadata_store from MetadataSchema resource.
   *
   * @param {string} metadataSchemaName
   *   A fully-qualified path representing MetadataSchema resource.
   * @returns {string} A string representing the metadata_store.
   */
  matchMetadataStoreFromMetadataSchemaName(metadataSchemaName: string) {
    return this.pathTemplates.metadataSchemaPathTemplate.match(
      metadataSchemaName
    ).metadata_store;
  }

  /**
   * Parse the metadata_schema from MetadataSchema resource.
   *
   * @param {string} metadataSchemaName
   *   A fully-qualified path representing MetadataSchema resource.
   * @returns {string} A string representing the metadata_schema.
   */
  matchMetadataSchemaFromMetadataSchemaName(metadataSchemaName: string) {
    return this.pathTemplates.metadataSchemaPathTemplate.match(
      metadataSchemaName
    ).metadata_schema;
  }

  /**
   * Return a fully-qualified metadataStore resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} metadata_store
   * @returns {string} Resource name string.
   */
  metadataStorePath(project: string, location: string, metadataStore: string) {
    return this.pathTemplates.metadataStorePathTemplate.render({
      project: project,
      location: location,
      metadata_store: metadataStore,
    });
  }

  /**
   * Parse the project from MetadataStore resource.
   *
   * @param {string} metadataStoreName
   *   A fully-qualified path representing MetadataStore resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromMetadataStoreName(metadataStoreName: string) {
    return this.pathTemplates.metadataStorePathTemplate.match(metadataStoreName)
      .project;
  }

  /**
   * Parse the location from MetadataStore resource.
   *
   * @param {string} metadataStoreName
   *   A fully-qualified path representing MetadataStore resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromMetadataStoreName(metadataStoreName: string) {
    return this.pathTemplates.metadataStorePathTemplate.match(metadataStoreName)
      .location;
  }

  /**
   * Parse the metadata_store from MetadataStore resource.
   *
   * @param {string} metadataStoreName
   *   A fully-qualified path representing MetadataStore resource.
   * @returns {string} A string representing the metadata_store.
   */
  matchMetadataStoreFromMetadataStoreName(metadataStoreName: string) {
    return this.pathTemplates.metadataStorePathTemplate.match(metadataStoreName)
      .metadata_store;
  }

  /**
   * Return a fully-qualified model resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} model
   * @returns {string} Resource name string.
   */
  modelPath(project: string, location: string, model: string) {
    return this.pathTemplates.modelPathTemplate.render({
      project: project,
      location: location,
      model: model,
    });
  }

  /**
   * Parse the project from Model resource.
   *
   * @param {string} modelName
   *   A fully-qualified path representing Model resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromModelName(modelName: string) {
    return this.pathTemplates.modelPathTemplate.match(modelName).project;
  }

  /**
   * Parse the location from Model resource.
   *
   * @param {string} modelName
   *   A fully-qualified path representing Model resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromModelName(modelName: string) {
    return this.pathTemplates.modelPathTemplate.match(modelName).location;
  }

  /**
   * Parse the model from Model resource.
   *
   * @param {string} modelName
   *   A fully-qualified path representing Model resource.
   * @returns {string} A string representing the model.
   */
  matchModelFromModelName(modelName: string) {
    return this.pathTemplates.modelPathTemplate.match(modelName).model;
  }

  /**
   * Return a fully-qualified modelDeploymentMonitoringJob resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} model_deployment_monitoring_job
   * @returns {string} Resource name string.
   */
  modelDeploymentMonitoringJobPath(
    project: string,
    location: string,
    modelDeploymentMonitoringJob: string
  ) {
    return this.pathTemplates.modelDeploymentMonitoringJobPathTemplate.render({
      project: project,
      location: location,
      model_deployment_monitoring_job: modelDeploymentMonitoringJob,
    });
  }

  /**
   * Parse the project from ModelDeploymentMonitoringJob resource.
   *
   * @param {string} modelDeploymentMonitoringJobName
   *   A fully-qualified path representing ModelDeploymentMonitoringJob resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromModelDeploymentMonitoringJobName(
    modelDeploymentMonitoringJobName: string
  ) {
    return this.pathTemplates.modelDeploymentMonitoringJobPathTemplate.match(
      modelDeploymentMonitoringJobName
    ).project;
  }

  /**
   * Parse the location from ModelDeploymentMonitoringJob resource.
   *
   * @param {string} modelDeploymentMonitoringJobName
   *   A fully-qualified path representing ModelDeploymentMonitoringJob resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromModelDeploymentMonitoringJobName(
    modelDeploymentMonitoringJobName: string
  ) {
    return this.pathTemplates.modelDeploymentMonitoringJobPathTemplate.match(
      modelDeploymentMonitoringJobName
    ).location;
  }

  /**
   * Parse the model_deployment_monitoring_job from ModelDeploymentMonitoringJob resource.
   *
   * @param {string} modelDeploymentMonitoringJobName
   *   A fully-qualified path representing ModelDeploymentMonitoringJob resource.
   * @returns {string} A string representing the model_deployment_monitoring_job.
   */
  matchModelDeploymentMonitoringJobFromModelDeploymentMonitoringJobName(
    modelDeploymentMonitoringJobName: string
  ) {
    return this.pathTemplates.modelDeploymentMonitoringJobPathTemplate.match(
      modelDeploymentMonitoringJobName
    ).model_deployment_monitoring_job;
  }

  /**
   * Return a fully-qualified modelEvaluation resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} model
   * @param {string} evaluation
   * @returns {string} Resource name string.
   */
  modelEvaluationPath(
    project: string,
    location: string,
    model: string,
    evaluation: string
  ) {
    return this.pathTemplates.modelEvaluationPathTemplate.render({
      project: project,
      location: location,
      model: model,
      evaluation: evaluation,
    });
  }

  /**
   * Parse the project from ModelEvaluation resource.
   *
   * @param {string} modelEvaluationName
   *   A fully-qualified path representing ModelEvaluation resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromModelEvaluationName(modelEvaluationName: string) {
    return this.pathTemplates.modelEvaluationPathTemplate.match(
      modelEvaluationName
    ).project;
  }

  /**
   * Parse the location from ModelEvaluation resource.
   *
   * @param {string} modelEvaluationName
   *   A fully-qualified path representing ModelEvaluation resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromModelEvaluationName(modelEvaluationName: string) {
    return this.pathTemplates.modelEvaluationPathTemplate.match(
      modelEvaluationName
    ).location;
  }

  /**
   * Parse the model from ModelEvaluation resource.
   *
   * @param {string} modelEvaluationName
   *   A fully-qualified path representing ModelEvaluation resource.
   * @returns {string} A string representing the model.
   */
  matchModelFromModelEvaluationName(modelEvaluationName: string) {
    return this.pathTemplates.modelEvaluationPathTemplate.match(
      modelEvaluationName
    ).model;
  }

  /**
   * Parse the evaluation from ModelEvaluation resource.
   *
   * @param {string} modelEvaluationName
   *   A fully-qualified path representing ModelEvaluation resource.
   * @returns {string} A string representing the evaluation.
   */
  matchEvaluationFromModelEvaluationName(modelEvaluationName: string) {
    return this.pathTemplates.modelEvaluationPathTemplate.match(
      modelEvaluationName
    ).evaluation;
  }

  /**
   * Return a fully-qualified modelEvaluationSlice resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} model
   * @param {string} evaluation
   * @param {string} slice
   * @returns {string} Resource name string.
   */
  modelEvaluationSlicePath(
    project: string,
    location: string,
    model: string,
    evaluation: string,
    slice: string
  ) {
    return this.pathTemplates.modelEvaluationSlicePathTemplate.render({
      project: project,
      location: location,
      model: model,
      evaluation: evaluation,
      slice: slice,
    });
  }

  /**
   * Parse the project from ModelEvaluationSlice resource.
   *
   * @param {string} modelEvaluationSliceName
   *   A fully-qualified path representing ModelEvaluationSlice resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromModelEvaluationSliceName(modelEvaluationSliceName: string) {
    return this.pathTemplates.modelEvaluationSlicePathTemplate.match(
      modelEvaluationSliceName
    ).project;
  }

  /**
   * Parse the location from ModelEvaluationSlice resource.
   *
   * @param {string} modelEvaluationSliceName
   *   A fully-qualified path representing ModelEvaluationSlice resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromModelEvaluationSliceName(modelEvaluationSliceName: string) {
    return this.pathTemplates.modelEvaluationSlicePathTemplate.match(
      modelEvaluationSliceName
    ).location;
  }

  /**
   * Parse the model from ModelEvaluationSlice resource.
   *
   * @param {string} modelEvaluationSliceName
   *   A fully-qualified path representing ModelEvaluationSlice resource.
   * @returns {string} A string representing the model.
   */
  matchModelFromModelEvaluationSliceName(modelEvaluationSliceName: string) {
    return this.pathTemplates.modelEvaluationSlicePathTemplate.match(
      modelEvaluationSliceName
    ).model;
  }

  /**
   * Parse the evaluation from ModelEvaluationSlice resource.
   *
   * @param {string} modelEvaluationSliceName
   *   A fully-qualified path representing ModelEvaluationSlice resource.
   * @returns {string} A string representing the evaluation.
   */
  matchEvaluationFromModelEvaluationSliceName(
    modelEvaluationSliceName: string
  ) {
    return this.pathTemplates.modelEvaluationSlicePathTemplate.match(
      modelEvaluationSliceName
    ).evaluation;
  }

  /**
   * Parse the slice from ModelEvaluationSlice resource.
   *
   * @param {string} modelEvaluationSliceName
   *   A fully-qualified path representing ModelEvaluationSlice resource.
   * @returns {string} A string representing the slice.
   */
  matchSliceFromModelEvaluationSliceName(modelEvaluationSliceName: string) {
    return this.pathTemplates.modelEvaluationSlicePathTemplate.match(
      modelEvaluationSliceName
    ).slice;
  }

  /**
   * Return a fully-qualified pipelineJob resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} pipeline_job
   * @returns {string} Resource name string.
   */
  pipelineJobPath(project: string, location: string, pipelineJob: string) {
    return this.pathTemplates.pipelineJobPathTemplate.render({
      project: project,
      location: location,
      pipeline_job: pipelineJob,
    });
  }

  /**
   * Parse the project from PipelineJob resource.
   *
   * @param {string} pipelineJobName
   *   A fully-qualified path representing PipelineJob resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromPipelineJobName(pipelineJobName: string) {
    return this.pathTemplates.pipelineJobPathTemplate.match(pipelineJobName)
      .project;
  }

  /**
   * Parse the location from PipelineJob resource.
   *
   * @param {string} pipelineJobName
   *   A fully-qualified path representing PipelineJob resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromPipelineJobName(pipelineJobName: string) {
    return this.pathTemplates.pipelineJobPathTemplate.match(pipelineJobName)
      .location;
  }

  /**
   * Parse the pipeline_job from PipelineJob resource.
   *
   * @param {string} pipelineJobName
   *   A fully-qualified path representing PipelineJob resource.
   * @returns {string} A string representing the pipeline_job.
   */
  matchPipelineJobFromPipelineJobName(pipelineJobName: string) {
    return this.pathTemplates.pipelineJobPathTemplate.match(pipelineJobName)
      .pipeline_job;
  }

  /**
   * Return a fully-qualified savedQuery resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} dataset
   * @param {string} saved_query
   * @returns {string} Resource name string.
   */
  savedQueryPath(
    project: string,
    location: string,
    dataset: string,
    savedQuery: string
  ) {
    return this.pathTemplates.savedQueryPathTemplate.render({
      project: project,
      location: location,
      dataset: dataset,
      saved_query: savedQuery,
    });
  }

  /**
   * Parse the project from SavedQuery resource.
   *
   * @param {string} savedQueryName
   *   A fully-qualified path representing SavedQuery resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromSavedQueryName(savedQueryName: string) {
    return this.pathTemplates.savedQueryPathTemplate.match(savedQueryName)
      .project;
  }

  /**
   * Parse the location from SavedQuery resource.
   *
   * @param {string} savedQueryName
   *   A fully-qualified path representing SavedQuery resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromSavedQueryName(savedQueryName: string) {
    return this.pathTemplates.savedQueryPathTemplate.match(savedQueryName)
      .location;
  }

  /**
   * Parse the dataset from SavedQuery resource.
   *
   * @param {string} savedQueryName
   *   A fully-qualified path representing SavedQuery resource.
   * @returns {string} A string representing the dataset.
   */
  matchDatasetFromSavedQueryName(savedQueryName: string) {
    return this.pathTemplates.savedQueryPathTemplate.match(savedQueryName)
      .dataset;
  }

  /**
   * Parse the saved_query from SavedQuery resource.
   *
   * @param {string} savedQueryName
   *   A fully-qualified path representing SavedQuery resource.
   * @returns {string} A string representing the saved_query.
   */
  matchSavedQueryFromSavedQueryName(savedQueryName: string) {
    return this.pathTemplates.savedQueryPathTemplate.match(savedQueryName)
      .saved_query;
  }

  /**
   * Return a fully-qualified specialistPool resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} specialist_pool
   * @returns {string} Resource name string.
   */
  specialistPoolPath(
    project: string,
    location: string,
    specialistPool: string
  ) {
    return this.pathTemplates.specialistPoolPathTemplate.render({
      project: project,
      location: location,
      specialist_pool: specialistPool,
    });
  }

  /**
   * Parse the project from SpecialistPool resource.
   *
   * @param {string} specialistPoolName
   *   A fully-qualified path representing SpecialistPool resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromSpecialistPoolName(specialistPoolName: string) {
    return this.pathTemplates.specialistPoolPathTemplate.match(
      specialistPoolName
    ).project;
  }

  /**
   * Parse the location from SpecialistPool resource.
   *
   * @param {string} specialistPoolName
   *   A fully-qualified path representing SpecialistPool resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromSpecialistPoolName(specialistPoolName: string) {
    return this.pathTemplates.specialistPoolPathTemplate.match(
      specialistPoolName
    ).location;
  }

  /**
   * Parse the specialist_pool from SpecialistPool resource.
   *
   * @param {string} specialistPoolName
   *   A fully-qualified path representing SpecialistPool resource.
   * @returns {string} A string representing the specialist_pool.
   */
  matchSpecialistPoolFromSpecialistPoolName(specialistPoolName: string) {
    return this.pathTemplates.specialistPoolPathTemplate.match(
      specialistPoolName
    ).specialist_pool;
  }

  /**
   * Return a fully-qualified study resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} study
   * @returns {string} Resource name string.
   */
  studyPath(project: string, location: string, study: string) {
    return this.pathTemplates.studyPathTemplate.render({
      project: project,
      location: location,
      study: study,
    });
  }

  /**
   * Parse the project from Study resource.
   *
   * @param {string} studyName
   *   A fully-qualified path representing Study resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromStudyName(studyName: string) {
    return this.pathTemplates.studyPathTemplate.match(studyName).project;
  }

  /**
   * Parse the location from Study resource.
   *
   * @param {string} studyName
   *   A fully-qualified path representing Study resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromStudyName(studyName: string) {
    return this.pathTemplates.studyPathTemplate.match(studyName).location;
  }

  /**
   * Parse the study from Study resource.
   *
   * @param {string} studyName
   *   A fully-qualified path representing Study resource.
   * @returns {string} A string representing the study.
   */
  matchStudyFromStudyName(studyName: string) {
    return this.pathTemplates.studyPathTemplate.match(studyName).study;
  }

  /**
   * Return a fully-qualified tensorboard resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} tensorboard
   * @returns {string} Resource name string.
   */
  tensorboardPath(project: string, location: string, tensorboard: string) {
    return this.pathTemplates.tensorboardPathTemplate.render({
      project: project,
      location: location,
      tensorboard: tensorboard,
    });
  }

  /**
   * Parse the project from Tensorboard resource.
   *
   * @param {string} tensorboardName
   *   A fully-qualified path representing Tensorboard resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromTensorboardName(tensorboardName: string) {
    return this.pathTemplates.tensorboardPathTemplate.match(tensorboardName)
      .project;
  }

  /**
   * Parse the location from Tensorboard resource.
   *
   * @param {string} tensorboardName
   *   A fully-qualified path representing Tensorboard resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromTensorboardName(tensorboardName: string) {
    return this.pathTemplates.tensorboardPathTemplate.match(tensorboardName)
      .location;
  }

  /**
   * Parse the tensorboard from Tensorboard resource.
   *
   * @param {string} tensorboardName
   *   A fully-qualified path representing Tensorboard resource.
   * @returns {string} A string representing the tensorboard.
   */
  matchTensorboardFromTensorboardName(tensorboardName: string) {
    return this.pathTemplates.tensorboardPathTemplate.match(tensorboardName)
      .tensorboard;
  }

  /**
   * Return a fully-qualified tensorboardExperiment resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} tensorboard
   * @param {string} experiment
   * @returns {string} Resource name string.
   */
  tensorboardExperimentPath(
    project: string,
    location: string,
    tensorboard: string,
    experiment: string
  ) {
    return this.pathTemplates.tensorboardExperimentPathTemplate.render({
      project: project,
      location: location,
      tensorboard: tensorboard,
      experiment: experiment,
    });
  }

  /**
   * Parse the project from TensorboardExperiment resource.
   *
   * @param {string} tensorboardExperimentName
   *   A fully-qualified path representing TensorboardExperiment resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromTensorboardExperimentName(tensorboardExperimentName: string) {
    return this.pathTemplates.tensorboardExperimentPathTemplate.match(
      tensorboardExperimentName
    ).project;
  }

  /**
   * Parse the location from TensorboardExperiment resource.
   *
   * @param {string} tensorboardExperimentName
   *   A fully-qualified path representing TensorboardExperiment resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromTensorboardExperimentName(
    tensorboardExperimentName: string
  ) {
    return this.pathTemplates.tensorboardExperimentPathTemplate.match(
      tensorboardExperimentName
    ).location;
  }

  /**
   * Parse the tensorboard from TensorboardExperiment resource.
   *
   * @param {string} tensorboardExperimentName
   *   A fully-qualified path representing TensorboardExperiment resource.
   * @returns {string} A string representing the tensorboard.
   */
  matchTensorboardFromTensorboardExperimentName(
    tensorboardExperimentName: string
  ) {
    return this.pathTemplates.tensorboardExperimentPathTemplate.match(
      tensorboardExperimentName
    ).tensorboard;
  }

  /**
   * Parse the experiment from TensorboardExperiment resource.
   *
   * @param {string} tensorboardExperimentName
   *   A fully-qualified path representing TensorboardExperiment resource.
   * @returns {string} A string representing the experiment.
   */
  matchExperimentFromTensorboardExperimentName(
    tensorboardExperimentName: string
  ) {
    return this.pathTemplates.tensorboardExperimentPathTemplate.match(
      tensorboardExperimentName
    ).experiment;
  }

  /**
   * Return a fully-qualified tensorboardRun resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} tensorboard
   * @param {string} experiment
   * @param {string} run
   * @returns {string} Resource name string.
   */
  tensorboardRunPath(
    project: string,
    location: string,
    tensorboard: string,
    experiment: string,
    run: string
  ) {
    return this.pathTemplates.tensorboardRunPathTemplate.render({
      project: project,
      location: location,
      tensorboard: tensorboard,
      experiment: experiment,
      run: run,
    });
  }

  /**
   * Parse the project from TensorboardRun resource.
   *
   * @param {string} tensorboardRunName
   *   A fully-qualified path representing TensorboardRun resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromTensorboardRunName(tensorboardRunName: string) {
    return this.pathTemplates.tensorboardRunPathTemplate.match(
      tensorboardRunName
    ).project;
  }

  /**
   * Parse the location from TensorboardRun resource.
   *
   * @param {string} tensorboardRunName
   *   A fully-qualified path representing TensorboardRun resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromTensorboardRunName(tensorboardRunName: string) {
    return this.pathTemplates.tensorboardRunPathTemplate.match(
      tensorboardRunName
    ).location;
  }

  /**
   * Parse the tensorboard from TensorboardRun resource.
   *
   * @param {string} tensorboardRunName
   *   A fully-qualified path representing TensorboardRun resource.
   * @returns {string} A string representing the tensorboard.
   */
  matchTensorboardFromTensorboardRunName(tensorboardRunName: string) {
    return this.pathTemplates.tensorboardRunPathTemplate.match(
      tensorboardRunName
    ).tensorboard;
  }

  /**
   * Parse the experiment from TensorboardRun resource.
   *
   * @param {string} tensorboardRunName
   *   A fully-qualified path representing TensorboardRun resource.
   * @returns {string} A string representing the experiment.
   */
  matchExperimentFromTensorboardRunName(tensorboardRunName: string) {
    return this.pathTemplates.tensorboardRunPathTemplate.match(
      tensorboardRunName
    ).experiment;
  }

  /**
   * Parse the run from TensorboardRun resource.
   *
   * @param {string} tensorboardRunName
   *   A fully-qualified path representing TensorboardRun resource.
   * @returns {string} A string representing the run.
   */
  matchRunFromTensorboardRunName(tensorboardRunName: string) {
    return this.pathTemplates.tensorboardRunPathTemplate.match(
      tensorboardRunName
    ).run;
  }

  /**
   * Return a fully-qualified tensorboardTimeSeries resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} tensorboard
   * @param {string} experiment
   * @param {string} run
   * @param {string} time_series
   * @returns {string} Resource name string.
   */
  tensorboardTimeSeriesPath(
    project: string,
    location: string,
    tensorboard: string,
    experiment: string,
    run: string,
    timeSeries: string
  ) {
    return this.pathTemplates.tensorboardTimeSeriesPathTemplate.render({
      project: project,
      location: location,
      tensorboard: tensorboard,
      experiment: experiment,
      run: run,
      time_series: timeSeries,
    });
  }

  /**
   * Parse the project from TensorboardTimeSeries resource.
   *
   * @param {string} tensorboardTimeSeriesName
   *   A fully-qualified path representing TensorboardTimeSeries resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromTensorboardTimeSeriesName(tensorboardTimeSeriesName: string) {
    return this.pathTemplates.tensorboardTimeSeriesPathTemplate.match(
      tensorboardTimeSeriesName
    ).project;
  }

  /**
   * Parse the location from TensorboardTimeSeries resource.
   *
   * @param {string} tensorboardTimeSeriesName
   *   A fully-qualified path representing TensorboardTimeSeries resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromTensorboardTimeSeriesName(
    tensorboardTimeSeriesName: string
  ) {
    return this.pathTemplates.tensorboardTimeSeriesPathTemplate.match(
      tensorboardTimeSeriesName
    ).location;
  }

  /**
   * Parse the tensorboard from TensorboardTimeSeries resource.
   *
   * @param {string} tensorboardTimeSeriesName
   *   A fully-qualified path representing TensorboardTimeSeries resource.
   * @returns {string} A string representing the tensorboard.
   */
  matchTensorboardFromTensorboardTimeSeriesName(
    tensorboardTimeSeriesName: string
  ) {
    return this.pathTemplates.tensorboardTimeSeriesPathTemplate.match(
      tensorboardTimeSeriesName
    ).tensorboard;
  }

  /**
   * Parse the experiment from TensorboardTimeSeries resource.
   *
   * @param {string} tensorboardTimeSeriesName
   *   A fully-qualified path representing TensorboardTimeSeries resource.
   * @returns {string} A string representing the experiment.
   */
  matchExperimentFromTensorboardTimeSeriesName(
    tensorboardTimeSeriesName: string
  ) {
    return this.pathTemplates.tensorboardTimeSeriesPathTemplate.match(
      tensorboardTimeSeriesName
    ).experiment;
  }

  /**
   * Parse the run from TensorboardTimeSeries resource.
   *
   * @param {string} tensorboardTimeSeriesName
   *   A fully-qualified path representing TensorboardTimeSeries resource.
   * @returns {string} A string representing the run.
   */
  matchRunFromTensorboardTimeSeriesName(tensorboardTimeSeriesName: string) {
    return this.pathTemplates.tensorboardTimeSeriesPathTemplate.match(
      tensorboardTimeSeriesName
    ).run;
  }

  /**
   * Parse the time_series from TensorboardTimeSeries resource.
   *
   * @param {string} tensorboardTimeSeriesName
   *   A fully-qualified path representing TensorboardTimeSeries resource.
   * @returns {string} A string representing the time_series.
   */
  matchTimeSeriesFromTensorboardTimeSeriesName(
    tensorboardTimeSeriesName: string
  ) {
    return this.pathTemplates.tensorboardTimeSeriesPathTemplate.match(
      tensorboardTimeSeriesName
    ).time_series;
  }

  /**
   * Return a fully-qualified trainingPipeline resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} training_pipeline
   * @returns {string} Resource name string.
   */
  trainingPipelinePath(
    project: string,
    location: string,
    trainingPipeline: string
  ) {
    return this.pathTemplates.trainingPipelinePathTemplate.render({
      project: project,
      location: location,
      training_pipeline: trainingPipeline,
    });
  }

  /**
   * Parse the project from TrainingPipeline resource.
   *
   * @param {string} trainingPipelineName
   *   A fully-qualified path representing TrainingPipeline resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromTrainingPipelineName(trainingPipelineName: string) {
    return this.pathTemplates.trainingPipelinePathTemplate.match(
      trainingPipelineName
    ).project;
  }

  /**
   * Parse the location from TrainingPipeline resource.
   *
   * @param {string} trainingPipelineName
   *   A fully-qualified path representing TrainingPipeline resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromTrainingPipelineName(trainingPipelineName: string) {
    return this.pathTemplates.trainingPipelinePathTemplate.match(
      trainingPipelineName
    ).location;
  }

  /**
   * Parse the training_pipeline from TrainingPipeline resource.
   *
   * @param {string} trainingPipelineName
   *   A fully-qualified path representing TrainingPipeline resource.
   * @returns {string} A string representing the training_pipeline.
   */
  matchTrainingPipelineFromTrainingPipelineName(trainingPipelineName: string) {
    return this.pathTemplates.trainingPipelinePathTemplate.match(
      trainingPipelineName
    ).training_pipeline;
  }

  /**
   * Return a fully-qualified trial resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} study
   * @param {string} trial
   * @returns {string} Resource name string.
   */
  trialPath(project: string, location: string, study: string, trial: string) {
    return this.pathTemplates.trialPathTemplate.render({
      project: project,
      location: location,
      study: study,
      trial: trial,
    });
  }

  /**
   * Parse the project from Trial resource.
   *
   * @param {string} trialName
   *   A fully-qualified path representing Trial resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromTrialName(trialName: string) {
    return this.pathTemplates.trialPathTemplate.match(trialName).project;
  }

  /**
   * Parse the location from Trial resource.
   *
   * @param {string} trialName
   *   A fully-qualified path representing Trial resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromTrialName(trialName: string) {
    return this.pathTemplates.trialPathTemplate.match(trialName).location;
  }

  /**
   * Parse the study from Trial resource.
   *
   * @param {string} trialName
   *   A fully-qualified path representing Trial resource.
   * @returns {string} A string representing the study.
   */
  matchStudyFromTrialName(trialName: string) {
    return this.pathTemplates.trialPathTemplate.match(trialName).study;
  }

  /**
   * Parse the trial from Trial resource.
   *
   * @param {string} trialName
   *   A fully-qualified path representing Trial resource.
   * @returns {string} A string representing the trial.
   */
  matchTrialFromTrialName(trialName: string) {
    return this.pathTemplates.trialPathTemplate.match(trialName).trial;
  }

  /**
   * Terminate the gRPC channel and close the client.
   *
   * The client will no longer be usable and all future behavior is undefined.
   * @returns {Promise} A promise that resolves when the client is closed.
   */
  close(): Promise<void> {
    if (this.jobServiceStub && !this._terminated) {
      return this.jobServiceStub.then(stub => {
        this._terminated = true;
        stub.close();
        this.iamClient.close();
        this.locationsClient.close();
        this.operationsClient.close();
      });
    }
    return Promise.resolve();
  }
}
