// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

import {
  DatasetServiceClient,
  EndpointServiceClient,
  FeaturestoreOnlineServingServiceClient,
  FeaturestoreServiceClient,
  IndexEndpointServiceClient,
  IndexServiceClient,
  JobServiceClient,
  MetadataServiceClient,
  MigrationServiceClient,
  ModelServiceClient,
  PipelineServiceClient,
  PredictionServiceClient,
  SpecialistPoolServiceClient,
  TensorboardServiceClient,
  VizierServiceClient,
} from '@google-cloud/aiplatform';

// check that the client class type name can be used
function doStuffWithDatasetServiceClient(client: DatasetServiceClient) {
  client.close();
}
function doStuffWithEndpointServiceClient(client: EndpointServiceClient) {
  client.close();
}
function doStuffWithFeaturestoreOnlineServingServiceClient(
  client: FeaturestoreOnlineServingServiceClient
) {
  client.close();
}
function doStuffWithFeaturestoreServiceClient(
  client: FeaturestoreServiceClient
) {
  client.close();
}
function doStuffWithIndexEndpointServiceClient(
  client: IndexEndpointServiceClient
) {
  client.close();
}
function doStuffWithIndexServiceClient(client: IndexServiceClient) {
  client.close();
}
function doStuffWithJobServiceClient(client: JobServiceClient) {
  client.close();
}
function doStuffWithMetadataServiceClient(client: MetadataServiceClient) {
  client.close();
}
function doStuffWithMigrationServiceClient(client: MigrationServiceClient) {
  client.close();
}
function doStuffWithModelServiceClient(client: ModelServiceClient) {
  client.close();
}
function doStuffWithPipelineServiceClient(client: PipelineServiceClient) {
  client.close();
}
function doStuffWithPredictionServiceClient(client: PredictionServiceClient) {
  client.close();
}
function doStuffWithSpecialistPoolServiceClient(
  client: SpecialistPoolServiceClient
) {
  client.close();
}
function doStuffWithTensorboardServiceClient(client: TensorboardServiceClient) {
  client.close();
}
function doStuffWithVizierServiceClient(client: VizierServiceClient) {
  client.close();
}

function main() {
  // check that the client instance can be created
  const datasetServiceClient = new DatasetServiceClient();
  doStuffWithDatasetServiceClient(datasetServiceClient);
  // check that the client instance can be created
  const endpointServiceClient = new EndpointServiceClient();
  doStuffWithEndpointServiceClient(endpointServiceClient);
  // check that the client instance can be created
  const featurestoreOnlineServingServiceClient =
    new FeaturestoreOnlineServingServiceClient();
  doStuffWithFeaturestoreOnlineServingServiceClient(
    featurestoreOnlineServingServiceClient
  );
  // check that the client instance can be created
  const featurestoreServiceClient = new FeaturestoreServiceClient();
  doStuffWithFeaturestoreServiceClient(featurestoreServiceClient);
  // check that the client instance can be created
  const indexEndpointServiceClient = new IndexEndpointServiceClient();
  doStuffWithIndexEndpointServiceClient(indexEndpointServiceClient);
  // check that the client instance can be created
  const indexServiceClient = new IndexServiceClient();
  doStuffWithIndexServiceClient(indexServiceClient);
  // check that the client instance can be created
  const jobServiceClient = new JobServiceClient();
  doStuffWithJobServiceClient(jobServiceClient);
  // check that the client instance can be created
  const metadataServiceClient = new MetadataServiceClient();
  doStuffWithMetadataServiceClient(metadataServiceClient);
  // check that the client instance can be created
  const migrationServiceClient = new MigrationServiceClient();
  doStuffWithMigrationServiceClient(migrationServiceClient);
  // check that the client instance can be created
  const modelServiceClient = new ModelServiceClient();
  doStuffWithModelServiceClient(modelServiceClient);
  // check that the client instance can be created
  const pipelineServiceClient = new PipelineServiceClient();
  doStuffWithPipelineServiceClient(pipelineServiceClient);
  // check that the client instance can be created
  const predictionServiceClient = new PredictionServiceClient();
  doStuffWithPredictionServiceClient(predictionServiceClient);
  // check that the client instance can be created
  const specialistPoolServiceClient = new SpecialistPoolServiceClient();
  doStuffWithSpecialistPoolServiceClient(specialistPoolServiceClient);
  // check that the client instance can be created
  const tensorboardServiceClient = new TensorboardServiceClient();
  doStuffWithTensorboardServiceClient(tensorboardServiceClient);
  // check that the client instance can be created
  const vizierServiceClient = new VizierServiceClient();
  doStuffWithVizierServiceClient(vizierServiceClient);
}

main();
