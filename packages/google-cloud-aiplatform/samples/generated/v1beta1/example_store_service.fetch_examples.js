// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(exampleStore) {
  // [START aiplatform_v1beta1_generated_ExampleStoreService_FetchExamples_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  The metadata filters for StoredContentsExamples.
   */
  // const storedContentsExampleFilter = {}
  /**
   *  Required. The name of the ExampleStore resource that the examples should be
   *  fetched from. Format:
   *  `projects/{project}/locations/{location}/exampleStores/{example_store}`
   */
  // const exampleStore = 'abc123'
  /**
   *  Optional. The maximum number of examples to return. The service may return
   *  fewer than this value. If unspecified, at most 100 examples will be
   *  returned.
   */
  // const pageSize = 1234
  /**
   *  Optional. The
   *  next_page_token google.cloud.aiplatform.v1beta1.FetchExamplesResponse.next_page_token 
   *  value returned from a previous list
   *  ExampleStoreService.FetchExamplesResponse   call.
   */
  // const pageToken = 'abc123'
  /**
   *  Optional. Example IDs to fetch. If both metadata filters and Example IDs
   *  are specified, then both ID and metadata filtering will be applied.
   */
  // const exampleIds = ['abc','def']

  // Imports the Aiplatform library
  const {ExampleStoreServiceClient} = require('@google-cloud/aiplatform').v1beta1;

  // Instantiates a client
  const aiplatformClient = new ExampleStoreServiceClient();

  async function callFetchExamples() {
    // Construct request
    const request = {
      exampleStore,
    };

    // Run request
    const iterable = aiplatformClient.fetchExamplesAsync(request);
    for await (const response of iterable) {
        console.log(response);
    }
  }

  callFetchExamples();
  // [END aiplatform_v1beta1_generated_ExampleStoreService_FetchExamples_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
