import json

import logging

from pathlib import Path

from synthtool import shell

def patch(library: Path):
  s.replace(library / 'src/v1/sql_backup_runs_service_client.ts', 'id: request\.id', 'id: request.id?.toString()') 
  s.replace(library / 'src/v1beta4/sql_backup_runs_service_client.ts', 'id: request\.id', 'id: request.id?.toString()')
  s.replace(library / 'src/v1/index.ts', r'(?s).*',"// Copyright 2023 Google LLC\n"+
"//\n"+
"// Licensed under the Apache License, Version 2.0 (the "License");\n"+
"// you may not use this file except in compliance with the License.\n"+
"// You may obtain a copy of the License at\n"+
"//\n"+
"//     https://www.apache.org/licenses/LICENSE-2.0\n"+
"//\n"+
"// Unless required by applicable law or agreed to in writing, software\n"+
"// distributed under the License is distributed on an "AS IS" BASIS,\n"+
"// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n"+
"// See the License for the specific language governing permissions and\n"+
"// limitations under the License.\n"+
"//\n"+
"// ** This file is automatically generated by gapic-generator-typescript. **\n"+
"// ** https://github.com/googleapis/gapic-generator-typescript **\n"+
"// ** All changes to this file may be overwritten. **\n"+
"\n"+
"export {SqlBackupRunsServiceClient} from './sql_backup_runs_service_client';\n"+
"export {SqlConnectServiceClient} from './sql_connect_service_client';\n"+
"export {SqlDatabasesServiceClient} from './sql_databases_service_client';\n"+
"export {SqlFlagsServiceClient} from './sql_flags_service_client';\n"+
"export {SqlInstancesServiceClient} from './sql_instances_service_client';\n"+
"export {SqlOperationsServiceClient} from './sql_operations_service_client';\n"+
"export {SqlSslCertsServiceClient} from './sql_ssl_certs_service_client';\n"+
"export {SqlTiersServiceClient} from './sql_tiers_service_client';\n"+
"export {SqlUsersServiceClient} from './sql_users_service_client';\n")

node.owlbot_main(relative_dir="packages/google-cloud-sql", templates_excludes=["src/index.ts", "src/v1/index.ts", "src/v1beta4/index.ts", "system-test/fixtures/sample/src/index.js", "system-test/fixtures/sample/src/index.ts"], staging_excludes=["src/index.ts", "src/v1/index.ts"], patch_staging=patch)


shell.run(('rm', '-rf', 'packages/google-cloud-sql/src/v1/sql_available_database_versions_service_client.ts', 'packages/google-cloud-sql/src/v1/sql_available_database_versions_service_client_config.json', 'packages/google-cloud-sql/src/v1/sql_available_database_versions_service_proto_list.json', 'packages/google-cloud-sql/src/v1/sql_events_service_client.ts', 'packages/google-cloud-sql/src/v1/sql_events_service_client_config.json', 'packages/google-cloud-sql/src/v1/sql_events_service_proto_list.json', 'packages/google-cloud-sql/src/v1/sql_iam_policies_service_client.ts','packages/google-cloud-sql/src/v1/sql_iam_policies_service_client_config.json', 'packages/google-cloud-sql/src/v1/sql_iam_policies_service_proto_list.json', 'packages/google-cloud-sql/src/v1/sql_instance_names_service_client.ts', 'packages/google-cloud-sql/src/v1/sql_instance_names_service_client_config.json', 'packages/google-cloud-sql/src/v1/sql_instance_names_service_proto_list.json', 'packages/google-cloud-sql/src/v1/sql_regions_service_client.ts', 'packages/google-cloud-sql/src/v1/sql_regions_service_client_config.json', 'packages/google-cloud-sql/src/v1/sql_regions_service_proto_list.json', 'packages/google-cloud-sql/test/gapic_sql_available_database_versions_service_v1.ts', 'packages/google-cloud-sql/test/gapic_sql_events_service_v1.ts', 'packages/google-cloud-sql/test/gapic_sql_iam_policies_service_v1.ts', 'packages/google-cloud-sql/test/gapic_sql_instance_names_service_v1.ts', 'packages/google-cloud-sql/test/gapic_sql_regions_service_v1.ts'), hide_output = False)
