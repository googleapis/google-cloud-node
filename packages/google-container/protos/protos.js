// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("google-gax/build/src/protobuf").protobufMinimal);

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots._google_cloud_container_protos || ($protobuf.roots._google_cloud_container_protos = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.container = (function() {
    
            /**
             * Namespace container.
             * @memberof google
             * @namespace
             */
            var container = {};
    
            container.v1 = (function() {
    
                /**
                 * Namespace v1.
                 * @memberof google.container
                 * @namespace
                 */
                var v1 = {};
    
                v1.ClusterManager = (function() {
    
                    /**
                     * Constructs a new ClusterManager service.
                     * @memberof google.container.v1
                     * @classdesc Represents a ClusterManager
                     * @extends $protobuf.rpc.Service
                     * @constructor
                     * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                     */
                    function ClusterManager(rpcImpl, requestDelimited, responseDelimited) {
                        $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                    }
    
                    (ClusterManager.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = ClusterManager;
    
                    /**
                     * Creates new ClusterManager service using the specified rpc implementation.
                     * @function create
                     * @memberof google.container.v1.ClusterManager
                     * @static
                     * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                     * @returns {ClusterManager} RPC service. Useful where requests and/or responses are streamed.
                     */
                    ClusterManager.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                        return new this(rpcImpl, requestDelimited, responseDelimited);
                    };
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|listClusters}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef ListClustersCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.ListClustersResponse} [response] ListClustersResponse
                     */
    
                    /**
                     * Calls ListClusters.
                     * @function listClusters
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IListClustersRequest} request ListClustersRequest message or plain object
                     * @param {google.container.v1.ClusterManager.ListClustersCallback} callback Node-style callback called with the error, if any, and ListClustersResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.listClusters = function listClusters(request, callback) {
                        return this.rpcCall(listClusters, $root.google.container.v1.ListClustersRequest, $root.google.container.v1.ListClustersResponse, request, callback);
                    }, "name", { value: "ListClusters" });
    
                    /**
                     * Calls ListClusters.
                     * @function listClusters
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IListClustersRequest} request ListClustersRequest message or plain object
                     * @returns {Promise<google.container.v1.ListClustersResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|getCluster}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef GetClusterCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.Cluster} [response] Cluster
                     */
    
                    /**
                     * Calls GetCluster.
                     * @function getCluster
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IGetClusterRequest} request GetClusterRequest message or plain object
                     * @param {google.container.v1.ClusterManager.GetClusterCallback} callback Node-style callback called with the error, if any, and Cluster
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.getCluster = function getCluster(request, callback) {
                        return this.rpcCall(getCluster, $root.google.container.v1.GetClusterRequest, $root.google.container.v1.Cluster, request, callback);
                    }, "name", { value: "GetCluster" });
    
                    /**
                     * Calls GetCluster.
                     * @function getCluster
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IGetClusterRequest} request GetClusterRequest message or plain object
                     * @returns {Promise<google.container.v1.Cluster>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|createCluster}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef CreateClusterCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.Operation} [response] Operation
                     */
    
                    /**
                     * Calls CreateCluster.
                     * @function createCluster
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ICreateClusterRequest} request CreateClusterRequest message or plain object
                     * @param {google.container.v1.ClusterManager.CreateClusterCallback} callback Node-style callback called with the error, if any, and Operation
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.createCluster = function createCluster(request, callback) {
                        return this.rpcCall(createCluster, $root.google.container.v1.CreateClusterRequest, $root.google.container.v1.Operation, request, callback);
                    }, "name", { value: "CreateCluster" });
    
                    /**
                     * Calls CreateCluster.
                     * @function createCluster
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ICreateClusterRequest} request CreateClusterRequest message or plain object
                     * @returns {Promise<google.container.v1.Operation>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|updateCluster}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef UpdateClusterCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.Operation} [response] Operation
                     */
    
                    /**
                     * Calls UpdateCluster.
                     * @function updateCluster
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IUpdateClusterRequest} request UpdateClusterRequest message or plain object
                     * @param {google.container.v1.ClusterManager.UpdateClusterCallback} callback Node-style callback called with the error, if any, and Operation
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.updateCluster = function updateCluster(request, callback) {
                        return this.rpcCall(updateCluster, $root.google.container.v1.UpdateClusterRequest, $root.google.container.v1.Operation, request, callback);
                    }, "name", { value: "UpdateCluster" });
    
                    /**
                     * Calls UpdateCluster.
                     * @function updateCluster
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IUpdateClusterRequest} request UpdateClusterRequest message or plain object
                     * @returns {Promise<google.container.v1.Operation>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|updateNodePool}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef UpdateNodePoolCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.Operation} [response] Operation
                     */
    
                    /**
                     * Calls UpdateNodePool.
                     * @function updateNodePool
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IUpdateNodePoolRequest} request UpdateNodePoolRequest message or plain object
                     * @param {google.container.v1.ClusterManager.UpdateNodePoolCallback} callback Node-style callback called with the error, if any, and Operation
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.updateNodePool = function updateNodePool(request, callback) {
                        return this.rpcCall(updateNodePool, $root.google.container.v1.UpdateNodePoolRequest, $root.google.container.v1.Operation, request, callback);
                    }, "name", { value: "UpdateNodePool" });
    
                    /**
                     * Calls UpdateNodePool.
                     * @function updateNodePool
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IUpdateNodePoolRequest} request UpdateNodePoolRequest message or plain object
                     * @returns {Promise<google.container.v1.Operation>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|setNodePoolAutoscaling}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef SetNodePoolAutoscalingCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.Operation} [response] Operation
                     */
    
                    /**
                     * Calls SetNodePoolAutoscaling.
                     * @function setNodePoolAutoscaling
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ISetNodePoolAutoscalingRequest} request SetNodePoolAutoscalingRequest message or plain object
                     * @param {google.container.v1.ClusterManager.SetNodePoolAutoscalingCallback} callback Node-style callback called with the error, if any, and Operation
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.setNodePoolAutoscaling = function setNodePoolAutoscaling(request, callback) {
                        return this.rpcCall(setNodePoolAutoscaling, $root.google.container.v1.SetNodePoolAutoscalingRequest, $root.google.container.v1.Operation, request, callback);
                    }, "name", { value: "SetNodePoolAutoscaling" });
    
                    /**
                     * Calls SetNodePoolAutoscaling.
                     * @function setNodePoolAutoscaling
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ISetNodePoolAutoscalingRequest} request SetNodePoolAutoscalingRequest message or plain object
                     * @returns {Promise<google.container.v1.Operation>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|setLoggingService}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef SetLoggingServiceCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.Operation} [response] Operation
                     */
    
                    /**
                     * Calls SetLoggingService.
                     * @function setLoggingService
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ISetLoggingServiceRequest} request SetLoggingServiceRequest message or plain object
                     * @param {google.container.v1.ClusterManager.SetLoggingServiceCallback} callback Node-style callback called with the error, if any, and Operation
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.setLoggingService = function setLoggingService(request, callback) {
                        return this.rpcCall(setLoggingService, $root.google.container.v1.SetLoggingServiceRequest, $root.google.container.v1.Operation, request, callback);
                    }, "name", { value: "SetLoggingService" });
    
                    /**
                     * Calls SetLoggingService.
                     * @function setLoggingService
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ISetLoggingServiceRequest} request SetLoggingServiceRequest message or plain object
                     * @returns {Promise<google.container.v1.Operation>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|setMonitoringService}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef SetMonitoringServiceCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.Operation} [response] Operation
                     */
    
                    /**
                     * Calls SetMonitoringService.
                     * @function setMonitoringService
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ISetMonitoringServiceRequest} request SetMonitoringServiceRequest message or plain object
                     * @param {google.container.v1.ClusterManager.SetMonitoringServiceCallback} callback Node-style callback called with the error, if any, and Operation
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.setMonitoringService = function setMonitoringService(request, callback) {
                        return this.rpcCall(setMonitoringService, $root.google.container.v1.SetMonitoringServiceRequest, $root.google.container.v1.Operation, request, callback);
                    }, "name", { value: "SetMonitoringService" });
    
                    /**
                     * Calls SetMonitoringService.
                     * @function setMonitoringService
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ISetMonitoringServiceRequest} request SetMonitoringServiceRequest message or plain object
                     * @returns {Promise<google.container.v1.Operation>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|setAddonsConfig}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef SetAddonsConfigCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.Operation} [response] Operation
                     */
    
                    /**
                     * Calls SetAddonsConfig.
                     * @function setAddonsConfig
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ISetAddonsConfigRequest} request SetAddonsConfigRequest message or plain object
                     * @param {google.container.v1.ClusterManager.SetAddonsConfigCallback} callback Node-style callback called with the error, if any, and Operation
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.setAddonsConfig = function setAddonsConfig(request, callback) {
                        return this.rpcCall(setAddonsConfig, $root.google.container.v1.SetAddonsConfigRequest, $root.google.container.v1.Operation, request, callback);
                    }, "name", { value: "SetAddonsConfig" });
    
                    /**
                     * Calls SetAddonsConfig.
                     * @function setAddonsConfig
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ISetAddonsConfigRequest} request SetAddonsConfigRequest message or plain object
                     * @returns {Promise<google.container.v1.Operation>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|setLocations}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef SetLocationsCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.Operation} [response] Operation
                     */
    
                    /**
                     * Calls SetLocations.
                     * @function setLocations
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ISetLocationsRequest} request SetLocationsRequest message or plain object
                     * @param {google.container.v1.ClusterManager.SetLocationsCallback} callback Node-style callback called with the error, if any, and Operation
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.setLocations = function setLocations(request, callback) {
                        return this.rpcCall(setLocations, $root.google.container.v1.SetLocationsRequest, $root.google.container.v1.Operation, request, callback);
                    }, "name", { value: "SetLocations" });
    
                    /**
                     * Calls SetLocations.
                     * @function setLocations
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ISetLocationsRequest} request SetLocationsRequest message or plain object
                     * @returns {Promise<google.container.v1.Operation>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|updateMaster}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef UpdateMasterCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.Operation} [response] Operation
                     */
    
                    /**
                     * Calls UpdateMaster.
                     * @function updateMaster
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IUpdateMasterRequest} request UpdateMasterRequest message or plain object
                     * @param {google.container.v1.ClusterManager.UpdateMasterCallback} callback Node-style callback called with the error, if any, and Operation
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.updateMaster = function updateMaster(request, callback) {
                        return this.rpcCall(updateMaster, $root.google.container.v1.UpdateMasterRequest, $root.google.container.v1.Operation, request, callback);
                    }, "name", { value: "UpdateMaster" });
    
                    /**
                     * Calls UpdateMaster.
                     * @function updateMaster
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IUpdateMasterRequest} request UpdateMasterRequest message or plain object
                     * @returns {Promise<google.container.v1.Operation>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|setMasterAuth}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef SetMasterAuthCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.Operation} [response] Operation
                     */
    
                    /**
                     * Calls SetMasterAuth.
                     * @function setMasterAuth
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ISetMasterAuthRequest} request SetMasterAuthRequest message or plain object
                     * @param {google.container.v1.ClusterManager.SetMasterAuthCallback} callback Node-style callback called with the error, if any, and Operation
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.setMasterAuth = function setMasterAuth(request, callback) {
                        return this.rpcCall(setMasterAuth, $root.google.container.v1.SetMasterAuthRequest, $root.google.container.v1.Operation, request, callback);
                    }, "name", { value: "SetMasterAuth" });
    
                    /**
                     * Calls SetMasterAuth.
                     * @function setMasterAuth
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ISetMasterAuthRequest} request SetMasterAuthRequest message or plain object
                     * @returns {Promise<google.container.v1.Operation>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|deleteCluster}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef DeleteClusterCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.Operation} [response] Operation
                     */
    
                    /**
                     * Calls DeleteCluster.
                     * @function deleteCluster
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IDeleteClusterRequest} request DeleteClusterRequest message or plain object
                     * @param {google.container.v1.ClusterManager.DeleteClusterCallback} callback Node-style callback called with the error, if any, and Operation
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.deleteCluster = function deleteCluster(request, callback) {
                        return this.rpcCall(deleteCluster, $root.google.container.v1.DeleteClusterRequest, $root.google.container.v1.Operation, request, callback);
                    }, "name", { value: "DeleteCluster" });
    
                    /**
                     * Calls DeleteCluster.
                     * @function deleteCluster
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IDeleteClusterRequest} request DeleteClusterRequest message or plain object
                     * @returns {Promise<google.container.v1.Operation>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|listOperations}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef ListOperationsCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.ListOperationsResponse} [response] ListOperationsResponse
                     */
    
                    /**
                     * Calls ListOperations.
                     * @function listOperations
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IListOperationsRequest} request ListOperationsRequest message or plain object
                     * @param {google.container.v1.ClusterManager.ListOperationsCallback} callback Node-style callback called with the error, if any, and ListOperationsResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.listOperations = function listOperations(request, callback) {
                        return this.rpcCall(listOperations, $root.google.container.v1.ListOperationsRequest, $root.google.container.v1.ListOperationsResponse, request, callback);
                    }, "name", { value: "ListOperations" });
    
                    /**
                     * Calls ListOperations.
                     * @function listOperations
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IListOperationsRequest} request ListOperationsRequest message or plain object
                     * @returns {Promise<google.container.v1.ListOperationsResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|getOperation}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef GetOperationCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.Operation} [response] Operation
                     */
    
                    /**
                     * Calls GetOperation.
                     * @function getOperation
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IGetOperationRequest} request GetOperationRequest message or plain object
                     * @param {google.container.v1.ClusterManager.GetOperationCallback} callback Node-style callback called with the error, if any, and Operation
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.getOperation = function getOperation(request, callback) {
                        return this.rpcCall(getOperation, $root.google.container.v1.GetOperationRequest, $root.google.container.v1.Operation, request, callback);
                    }, "name", { value: "GetOperation" });
    
                    /**
                     * Calls GetOperation.
                     * @function getOperation
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IGetOperationRequest} request GetOperationRequest message or plain object
                     * @returns {Promise<google.container.v1.Operation>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|cancelOperation}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef CancelOperationCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.protobuf.Empty} [response] Empty
                     */
    
                    /**
                     * Calls CancelOperation.
                     * @function cancelOperation
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ICancelOperationRequest} request CancelOperationRequest message or plain object
                     * @param {google.container.v1.ClusterManager.CancelOperationCallback} callback Node-style callback called with the error, if any, and Empty
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.cancelOperation = function cancelOperation(request, callback) {
                        return this.rpcCall(cancelOperation, $root.google.container.v1.CancelOperationRequest, $root.google.protobuf.Empty, request, callback);
                    }, "name", { value: "CancelOperation" });
    
                    /**
                     * Calls CancelOperation.
                     * @function cancelOperation
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ICancelOperationRequest} request CancelOperationRequest message or plain object
                     * @returns {Promise<google.protobuf.Empty>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|getServerConfig}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef GetServerConfigCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.ServerConfig} [response] ServerConfig
                     */
    
                    /**
                     * Calls GetServerConfig.
                     * @function getServerConfig
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IGetServerConfigRequest} request GetServerConfigRequest message or plain object
                     * @param {google.container.v1.ClusterManager.GetServerConfigCallback} callback Node-style callback called with the error, if any, and ServerConfig
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.getServerConfig = function getServerConfig(request, callback) {
                        return this.rpcCall(getServerConfig, $root.google.container.v1.GetServerConfigRequest, $root.google.container.v1.ServerConfig, request, callback);
                    }, "name", { value: "GetServerConfig" });
    
                    /**
                     * Calls GetServerConfig.
                     * @function getServerConfig
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IGetServerConfigRequest} request GetServerConfigRequest message or plain object
                     * @returns {Promise<google.container.v1.ServerConfig>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|getJSONWebKeys}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef GetJSONWebKeysCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.GetJSONWebKeysResponse} [response] GetJSONWebKeysResponse
                     */
    
                    /**
                     * Calls GetJSONWebKeys.
                     * @function getJSONWebKeys
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IGetJSONWebKeysRequest} request GetJSONWebKeysRequest message or plain object
                     * @param {google.container.v1.ClusterManager.GetJSONWebKeysCallback} callback Node-style callback called with the error, if any, and GetJSONWebKeysResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.getJSONWebKeys = function getJSONWebKeys(request, callback) {
                        return this.rpcCall(getJSONWebKeys, $root.google.container.v1.GetJSONWebKeysRequest, $root.google.container.v1.GetJSONWebKeysResponse, request, callback);
                    }, "name", { value: "GetJSONWebKeys" });
    
                    /**
                     * Calls GetJSONWebKeys.
                     * @function getJSONWebKeys
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IGetJSONWebKeysRequest} request GetJSONWebKeysRequest message or plain object
                     * @returns {Promise<google.container.v1.GetJSONWebKeysResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|listNodePools}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef ListNodePoolsCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.ListNodePoolsResponse} [response] ListNodePoolsResponse
                     */
    
                    /**
                     * Calls ListNodePools.
                     * @function listNodePools
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IListNodePoolsRequest} request ListNodePoolsRequest message or plain object
                     * @param {google.container.v1.ClusterManager.ListNodePoolsCallback} callback Node-style callback called with the error, if any, and ListNodePoolsResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.listNodePools = function listNodePools(request, callback) {
                        return this.rpcCall(listNodePools, $root.google.container.v1.ListNodePoolsRequest, $root.google.container.v1.ListNodePoolsResponse, request, callback);
                    }, "name", { value: "ListNodePools" });
    
                    /**
                     * Calls ListNodePools.
                     * @function listNodePools
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IListNodePoolsRequest} request ListNodePoolsRequest message or plain object
                     * @returns {Promise<google.container.v1.ListNodePoolsResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|getNodePool}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef GetNodePoolCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.NodePool} [response] NodePool
                     */
    
                    /**
                     * Calls GetNodePool.
                     * @function getNodePool
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IGetNodePoolRequest} request GetNodePoolRequest message or plain object
                     * @param {google.container.v1.ClusterManager.GetNodePoolCallback} callback Node-style callback called with the error, if any, and NodePool
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.getNodePool = function getNodePool(request, callback) {
                        return this.rpcCall(getNodePool, $root.google.container.v1.GetNodePoolRequest, $root.google.container.v1.NodePool, request, callback);
                    }, "name", { value: "GetNodePool" });
    
                    /**
                     * Calls GetNodePool.
                     * @function getNodePool
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IGetNodePoolRequest} request GetNodePoolRequest message or plain object
                     * @returns {Promise<google.container.v1.NodePool>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|createNodePool}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef CreateNodePoolCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.Operation} [response] Operation
                     */
    
                    /**
                     * Calls CreateNodePool.
                     * @function createNodePool
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ICreateNodePoolRequest} request CreateNodePoolRequest message or plain object
                     * @param {google.container.v1.ClusterManager.CreateNodePoolCallback} callback Node-style callback called with the error, if any, and Operation
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.createNodePool = function createNodePool(request, callback) {
                        return this.rpcCall(createNodePool, $root.google.container.v1.CreateNodePoolRequest, $root.google.container.v1.Operation, request, callback);
                    }, "name", { value: "CreateNodePool" });
    
                    /**
                     * Calls CreateNodePool.
                     * @function createNodePool
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ICreateNodePoolRequest} request CreateNodePoolRequest message or plain object
                     * @returns {Promise<google.container.v1.Operation>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|deleteNodePool}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef DeleteNodePoolCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.Operation} [response] Operation
                     */
    
                    /**
                     * Calls DeleteNodePool.
                     * @function deleteNodePool
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IDeleteNodePoolRequest} request DeleteNodePoolRequest message or plain object
                     * @param {google.container.v1.ClusterManager.DeleteNodePoolCallback} callback Node-style callback called with the error, if any, and Operation
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.deleteNodePool = function deleteNodePool(request, callback) {
                        return this.rpcCall(deleteNodePool, $root.google.container.v1.DeleteNodePoolRequest, $root.google.container.v1.Operation, request, callback);
                    }, "name", { value: "DeleteNodePool" });
    
                    /**
                     * Calls DeleteNodePool.
                     * @function deleteNodePool
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IDeleteNodePoolRequest} request DeleteNodePoolRequest message or plain object
                     * @returns {Promise<google.container.v1.Operation>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|completeNodePoolUpgrade}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef CompleteNodePoolUpgradeCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.protobuf.Empty} [response] Empty
                     */
    
                    /**
                     * Calls CompleteNodePoolUpgrade.
                     * @function completeNodePoolUpgrade
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ICompleteNodePoolUpgradeRequest} request CompleteNodePoolUpgradeRequest message or plain object
                     * @param {google.container.v1.ClusterManager.CompleteNodePoolUpgradeCallback} callback Node-style callback called with the error, if any, and Empty
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.completeNodePoolUpgrade = function completeNodePoolUpgrade(request, callback) {
                        return this.rpcCall(completeNodePoolUpgrade, $root.google.container.v1.CompleteNodePoolUpgradeRequest, $root.google.protobuf.Empty, request, callback);
                    }, "name", { value: "CompleteNodePoolUpgrade" });
    
                    /**
                     * Calls CompleteNodePoolUpgrade.
                     * @function completeNodePoolUpgrade
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ICompleteNodePoolUpgradeRequest} request CompleteNodePoolUpgradeRequest message or plain object
                     * @returns {Promise<google.protobuf.Empty>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|rollbackNodePoolUpgrade}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef RollbackNodePoolUpgradeCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.Operation} [response] Operation
                     */
    
                    /**
                     * Calls RollbackNodePoolUpgrade.
                     * @function rollbackNodePoolUpgrade
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IRollbackNodePoolUpgradeRequest} request RollbackNodePoolUpgradeRequest message or plain object
                     * @param {google.container.v1.ClusterManager.RollbackNodePoolUpgradeCallback} callback Node-style callback called with the error, if any, and Operation
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.rollbackNodePoolUpgrade = function rollbackNodePoolUpgrade(request, callback) {
                        return this.rpcCall(rollbackNodePoolUpgrade, $root.google.container.v1.RollbackNodePoolUpgradeRequest, $root.google.container.v1.Operation, request, callback);
                    }, "name", { value: "RollbackNodePoolUpgrade" });
    
                    /**
                     * Calls RollbackNodePoolUpgrade.
                     * @function rollbackNodePoolUpgrade
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IRollbackNodePoolUpgradeRequest} request RollbackNodePoolUpgradeRequest message or plain object
                     * @returns {Promise<google.container.v1.Operation>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|setNodePoolManagement}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef SetNodePoolManagementCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.Operation} [response] Operation
                     */
    
                    /**
                     * Calls SetNodePoolManagement.
                     * @function setNodePoolManagement
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ISetNodePoolManagementRequest} request SetNodePoolManagementRequest message or plain object
                     * @param {google.container.v1.ClusterManager.SetNodePoolManagementCallback} callback Node-style callback called with the error, if any, and Operation
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.setNodePoolManagement = function setNodePoolManagement(request, callback) {
                        return this.rpcCall(setNodePoolManagement, $root.google.container.v1.SetNodePoolManagementRequest, $root.google.container.v1.Operation, request, callback);
                    }, "name", { value: "SetNodePoolManagement" });
    
                    /**
                     * Calls SetNodePoolManagement.
                     * @function setNodePoolManagement
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ISetNodePoolManagementRequest} request SetNodePoolManagementRequest message or plain object
                     * @returns {Promise<google.container.v1.Operation>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|setLabels}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef SetLabelsCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.Operation} [response] Operation
                     */
    
                    /**
                     * Calls SetLabels.
                     * @function setLabels
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ISetLabelsRequest} request SetLabelsRequest message or plain object
                     * @param {google.container.v1.ClusterManager.SetLabelsCallback} callback Node-style callback called with the error, if any, and Operation
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.setLabels = function setLabels(request, callback) {
                        return this.rpcCall(setLabels, $root.google.container.v1.SetLabelsRequest, $root.google.container.v1.Operation, request, callback);
                    }, "name", { value: "SetLabels" });
    
                    /**
                     * Calls SetLabels.
                     * @function setLabels
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ISetLabelsRequest} request SetLabelsRequest message or plain object
                     * @returns {Promise<google.container.v1.Operation>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|setLegacyAbac}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef SetLegacyAbacCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.Operation} [response] Operation
                     */
    
                    /**
                     * Calls SetLegacyAbac.
                     * @function setLegacyAbac
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ISetLegacyAbacRequest} request SetLegacyAbacRequest message or plain object
                     * @param {google.container.v1.ClusterManager.SetLegacyAbacCallback} callback Node-style callback called with the error, if any, and Operation
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.setLegacyAbac = function setLegacyAbac(request, callback) {
                        return this.rpcCall(setLegacyAbac, $root.google.container.v1.SetLegacyAbacRequest, $root.google.container.v1.Operation, request, callback);
                    }, "name", { value: "SetLegacyAbac" });
    
                    /**
                     * Calls SetLegacyAbac.
                     * @function setLegacyAbac
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ISetLegacyAbacRequest} request SetLegacyAbacRequest message or plain object
                     * @returns {Promise<google.container.v1.Operation>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|startIPRotation}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef StartIPRotationCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.Operation} [response] Operation
                     */
    
                    /**
                     * Calls StartIPRotation.
                     * @function startIPRotation
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IStartIPRotationRequest} request StartIPRotationRequest message or plain object
                     * @param {google.container.v1.ClusterManager.StartIPRotationCallback} callback Node-style callback called with the error, if any, and Operation
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.startIPRotation = function startIPRotation(request, callback) {
                        return this.rpcCall(startIPRotation, $root.google.container.v1.StartIPRotationRequest, $root.google.container.v1.Operation, request, callback);
                    }, "name", { value: "StartIPRotation" });
    
                    /**
                     * Calls StartIPRotation.
                     * @function startIPRotation
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IStartIPRotationRequest} request StartIPRotationRequest message or plain object
                     * @returns {Promise<google.container.v1.Operation>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|completeIPRotation}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef CompleteIPRotationCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.Operation} [response] Operation
                     */
    
                    /**
                     * Calls CompleteIPRotation.
                     * @function completeIPRotation
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ICompleteIPRotationRequest} request CompleteIPRotationRequest message or plain object
                     * @param {google.container.v1.ClusterManager.CompleteIPRotationCallback} callback Node-style callback called with the error, if any, and Operation
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.completeIPRotation = function completeIPRotation(request, callback) {
                        return this.rpcCall(completeIPRotation, $root.google.container.v1.CompleteIPRotationRequest, $root.google.container.v1.Operation, request, callback);
                    }, "name", { value: "CompleteIPRotation" });
    
                    /**
                     * Calls CompleteIPRotation.
                     * @function completeIPRotation
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ICompleteIPRotationRequest} request CompleteIPRotationRequest message or plain object
                     * @returns {Promise<google.container.v1.Operation>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|setNodePoolSize}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef SetNodePoolSizeCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.Operation} [response] Operation
                     */
    
                    /**
                     * Calls SetNodePoolSize.
                     * @function setNodePoolSize
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ISetNodePoolSizeRequest} request SetNodePoolSizeRequest message or plain object
                     * @param {google.container.v1.ClusterManager.SetNodePoolSizeCallback} callback Node-style callback called with the error, if any, and Operation
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.setNodePoolSize = function setNodePoolSize(request, callback) {
                        return this.rpcCall(setNodePoolSize, $root.google.container.v1.SetNodePoolSizeRequest, $root.google.container.v1.Operation, request, callback);
                    }, "name", { value: "SetNodePoolSize" });
    
                    /**
                     * Calls SetNodePoolSize.
                     * @function setNodePoolSize
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ISetNodePoolSizeRequest} request SetNodePoolSizeRequest message or plain object
                     * @returns {Promise<google.container.v1.Operation>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|setNetworkPolicy}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef SetNetworkPolicyCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.Operation} [response] Operation
                     */
    
                    /**
                     * Calls SetNetworkPolicy.
                     * @function setNetworkPolicy
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ISetNetworkPolicyRequest} request SetNetworkPolicyRequest message or plain object
                     * @param {google.container.v1.ClusterManager.SetNetworkPolicyCallback} callback Node-style callback called with the error, if any, and Operation
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.setNetworkPolicy = function setNetworkPolicy(request, callback) {
                        return this.rpcCall(setNetworkPolicy, $root.google.container.v1.SetNetworkPolicyRequest, $root.google.container.v1.Operation, request, callback);
                    }, "name", { value: "SetNetworkPolicy" });
    
                    /**
                     * Calls SetNetworkPolicy.
                     * @function setNetworkPolicy
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ISetNetworkPolicyRequest} request SetNetworkPolicyRequest message or plain object
                     * @returns {Promise<google.container.v1.Operation>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|setMaintenancePolicy}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef SetMaintenancePolicyCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.Operation} [response] Operation
                     */
    
                    /**
                     * Calls SetMaintenancePolicy.
                     * @function setMaintenancePolicy
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ISetMaintenancePolicyRequest} request SetMaintenancePolicyRequest message or plain object
                     * @param {google.container.v1.ClusterManager.SetMaintenancePolicyCallback} callback Node-style callback called with the error, if any, and Operation
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.setMaintenancePolicy = function setMaintenancePolicy(request, callback) {
                        return this.rpcCall(setMaintenancePolicy, $root.google.container.v1.SetMaintenancePolicyRequest, $root.google.container.v1.Operation, request, callback);
                    }, "name", { value: "SetMaintenancePolicy" });
    
                    /**
                     * Calls SetMaintenancePolicy.
                     * @function setMaintenancePolicy
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.ISetMaintenancePolicyRequest} request SetMaintenancePolicyRequest message or plain object
                     * @returns {Promise<google.container.v1.Operation>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.container.v1.ClusterManager|listUsableSubnetworks}.
                     * @memberof google.container.v1.ClusterManager
                     * @typedef ListUsableSubnetworksCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.container.v1.ListUsableSubnetworksResponse} [response] ListUsableSubnetworksResponse
                     */
    
                    /**
                     * Calls ListUsableSubnetworks.
                     * @function listUsableSubnetworks
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IListUsableSubnetworksRequest} request ListUsableSubnetworksRequest message or plain object
                     * @param {google.container.v1.ClusterManager.ListUsableSubnetworksCallback} callback Node-style callback called with the error, if any, and ListUsableSubnetworksResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(ClusterManager.prototype.listUsableSubnetworks = function listUsableSubnetworks(request, callback) {
                        return this.rpcCall(listUsableSubnetworks, $root.google.container.v1.ListUsableSubnetworksRequest, $root.google.container.v1.ListUsableSubnetworksResponse, request, callback);
                    }, "name", { value: "ListUsableSubnetworks" });
    
                    /**
                     * Calls ListUsableSubnetworks.
                     * @function listUsableSubnetworks
                     * @memberof google.container.v1.ClusterManager
                     * @instance
                     * @param {google.container.v1.IListUsableSubnetworksRequest} request ListUsableSubnetworksRequest message or plain object
                     * @returns {Promise<google.container.v1.ListUsableSubnetworksResponse>} Promise
                     * @variation 2
                     */
    
                    return ClusterManager;
                })();
    
                v1.LinuxNodeConfig = (function() {
    
                    /**
                     * Properties of a LinuxNodeConfig.
                     * @memberof google.container.v1
                     * @interface ILinuxNodeConfig
                     * @property {Object.<string,string>|null} [sysctls] LinuxNodeConfig sysctls
                     * @property {google.container.v1.LinuxNodeConfig.CgroupMode|null} [cgroupMode] LinuxNodeConfig cgroupMode
                     */
    
                    /**
                     * Constructs a new LinuxNodeConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a LinuxNodeConfig.
                     * @implements ILinuxNodeConfig
                     * @constructor
                     * @param {google.container.v1.ILinuxNodeConfig=} [properties] Properties to set
                     */
                    function LinuxNodeConfig(properties) {
                        this.sysctls = {};
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * LinuxNodeConfig sysctls.
                     * @member {Object.<string,string>} sysctls
                     * @memberof google.container.v1.LinuxNodeConfig
                     * @instance
                     */
                    LinuxNodeConfig.prototype.sysctls = $util.emptyObject;
    
                    /**
                     * LinuxNodeConfig cgroupMode.
                     * @member {google.container.v1.LinuxNodeConfig.CgroupMode} cgroupMode
                     * @memberof google.container.v1.LinuxNodeConfig
                     * @instance
                     */
                    LinuxNodeConfig.prototype.cgroupMode = 0;
    
                    /**
                     * Creates a new LinuxNodeConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.LinuxNodeConfig
                     * @static
                     * @param {google.container.v1.ILinuxNodeConfig=} [properties] Properties to set
                     * @returns {google.container.v1.LinuxNodeConfig} LinuxNodeConfig instance
                     */
                    LinuxNodeConfig.create = function create(properties) {
                        return new LinuxNodeConfig(properties);
                    };
    
                    /**
                     * Encodes the specified LinuxNodeConfig message. Does not implicitly {@link google.container.v1.LinuxNodeConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.LinuxNodeConfig
                     * @static
                     * @param {google.container.v1.ILinuxNodeConfig} message LinuxNodeConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LinuxNodeConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.sysctls != null && Object.hasOwnProperty.call(message, "sysctls"))
                            for (var keys = Object.keys(message.sysctls), i = 0; i < keys.length; ++i)
                                writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.sysctls[keys[i]]).ldelim();
                        if (message.cgroupMode != null && Object.hasOwnProperty.call(message, "cgroupMode"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.cgroupMode);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified LinuxNodeConfig message, length delimited. Does not implicitly {@link google.container.v1.LinuxNodeConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.LinuxNodeConfig
                     * @static
                     * @param {google.container.v1.ILinuxNodeConfig} message LinuxNodeConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LinuxNodeConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a LinuxNodeConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.LinuxNodeConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.LinuxNodeConfig} LinuxNodeConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LinuxNodeConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.LinuxNodeConfig(), key, value;
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (message.sysctls === $util.emptyObject)
                                        message.sysctls = {};
                                    var end2 = reader.uint32() + reader.pos;
                                    key = "";
                                    value = "";
                                    while (reader.pos < end2) {
                                        var tag2 = reader.uint32();
                                        switch (tag2 >>> 3) {
                                        case 1:
                                            key = reader.string();
                                            break;
                                        case 2:
                                            value = reader.string();
                                            break;
                                        default:
                                            reader.skipType(tag2 & 7);
                                            break;
                                        }
                                    }
                                    message.sysctls[key] = value;
                                    break;
                                }
                            case 2: {
                                    message.cgroupMode = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a LinuxNodeConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.LinuxNodeConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.LinuxNodeConfig} LinuxNodeConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LinuxNodeConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a LinuxNodeConfig message.
                     * @function verify
                     * @memberof google.container.v1.LinuxNodeConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    LinuxNodeConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.sysctls != null && message.hasOwnProperty("sysctls")) {
                            if (!$util.isObject(message.sysctls))
                                return "sysctls: object expected";
                            var key = Object.keys(message.sysctls);
                            for (var i = 0; i < key.length; ++i)
                                if (!$util.isString(message.sysctls[key[i]]))
                                    return "sysctls: string{k:string} expected";
                        }
                        if (message.cgroupMode != null && message.hasOwnProperty("cgroupMode"))
                            switch (message.cgroupMode) {
                            default:
                                return "cgroupMode: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates a LinuxNodeConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.LinuxNodeConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.LinuxNodeConfig} LinuxNodeConfig
                     */
                    LinuxNodeConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.LinuxNodeConfig)
                            return object;
                        var message = new $root.google.container.v1.LinuxNodeConfig();
                        if (object.sysctls) {
                            if (typeof object.sysctls !== "object")
                                throw TypeError(".google.container.v1.LinuxNodeConfig.sysctls: object expected");
                            message.sysctls = {};
                            for (var keys = Object.keys(object.sysctls), i = 0; i < keys.length; ++i)
                                message.sysctls[keys[i]] = String(object.sysctls[keys[i]]);
                        }
                        switch (object.cgroupMode) {
                        default:
                            if (typeof object.cgroupMode === "number") {
                                message.cgroupMode = object.cgroupMode;
                                break;
                            }
                            break;
                        case "CGROUP_MODE_UNSPECIFIED":
                        case 0:
                            message.cgroupMode = 0;
                            break;
                        case "CGROUP_MODE_V1":
                        case 1:
                            message.cgroupMode = 1;
                            break;
                        case "CGROUP_MODE_V2":
                        case 2:
                            message.cgroupMode = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a LinuxNodeConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.LinuxNodeConfig
                     * @static
                     * @param {google.container.v1.LinuxNodeConfig} message LinuxNodeConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    LinuxNodeConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.objects || options.defaults)
                            object.sysctls = {};
                        if (options.defaults)
                            object.cgroupMode = options.enums === String ? "CGROUP_MODE_UNSPECIFIED" : 0;
                        var keys2;
                        if (message.sysctls && (keys2 = Object.keys(message.sysctls)).length) {
                            object.sysctls = {};
                            for (var j = 0; j < keys2.length; ++j)
                                object.sysctls[keys2[j]] = message.sysctls[keys2[j]];
                        }
                        if (message.cgroupMode != null && message.hasOwnProperty("cgroupMode"))
                            object.cgroupMode = options.enums === String ? $root.google.container.v1.LinuxNodeConfig.CgroupMode[message.cgroupMode] === undefined ? message.cgroupMode : $root.google.container.v1.LinuxNodeConfig.CgroupMode[message.cgroupMode] : message.cgroupMode;
                        return object;
                    };
    
                    /**
                     * Converts this LinuxNodeConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.LinuxNodeConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    LinuxNodeConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for LinuxNodeConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.LinuxNodeConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    LinuxNodeConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.LinuxNodeConfig";
                    };
    
                    /**
                     * CgroupMode enum.
                     * @name google.container.v1.LinuxNodeConfig.CgroupMode
                     * @enum {number}
                     * @property {number} CGROUP_MODE_UNSPECIFIED=0 CGROUP_MODE_UNSPECIFIED value
                     * @property {number} CGROUP_MODE_V1=1 CGROUP_MODE_V1 value
                     * @property {number} CGROUP_MODE_V2=2 CGROUP_MODE_V2 value
                     */
                    LinuxNodeConfig.CgroupMode = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "CGROUP_MODE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "CGROUP_MODE_V1"] = 1;
                        values[valuesById[2] = "CGROUP_MODE_V2"] = 2;
                        return values;
                    })();
    
                    return LinuxNodeConfig;
                })();
    
                v1.NodeKubeletConfig = (function() {
    
                    /**
                     * Properties of a NodeKubeletConfig.
                     * @memberof google.container.v1
                     * @interface INodeKubeletConfig
                     * @property {string|null} [cpuManagerPolicy] NodeKubeletConfig cpuManagerPolicy
                     * @property {google.protobuf.IBoolValue|null} [cpuCfsQuota] NodeKubeletConfig cpuCfsQuota
                     * @property {string|null} [cpuCfsQuotaPeriod] NodeKubeletConfig cpuCfsQuotaPeriod
                     * @property {number|Long|null} [podPidsLimit] NodeKubeletConfig podPidsLimit
                     */
    
                    /**
                     * Constructs a new NodeKubeletConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a NodeKubeletConfig.
                     * @implements INodeKubeletConfig
                     * @constructor
                     * @param {google.container.v1.INodeKubeletConfig=} [properties] Properties to set
                     */
                    function NodeKubeletConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NodeKubeletConfig cpuManagerPolicy.
                     * @member {string} cpuManagerPolicy
                     * @memberof google.container.v1.NodeKubeletConfig
                     * @instance
                     */
                    NodeKubeletConfig.prototype.cpuManagerPolicy = "";
    
                    /**
                     * NodeKubeletConfig cpuCfsQuota.
                     * @member {google.protobuf.IBoolValue|null|undefined} cpuCfsQuota
                     * @memberof google.container.v1.NodeKubeletConfig
                     * @instance
                     */
                    NodeKubeletConfig.prototype.cpuCfsQuota = null;
    
                    /**
                     * NodeKubeletConfig cpuCfsQuotaPeriod.
                     * @member {string} cpuCfsQuotaPeriod
                     * @memberof google.container.v1.NodeKubeletConfig
                     * @instance
                     */
                    NodeKubeletConfig.prototype.cpuCfsQuotaPeriod = "";
    
                    /**
                     * NodeKubeletConfig podPidsLimit.
                     * @member {number|Long} podPidsLimit
                     * @memberof google.container.v1.NodeKubeletConfig
                     * @instance
                     */
                    NodeKubeletConfig.prototype.podPidsLimit = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                    /**
                     * Creates a new NodeKubeletConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.NodeKubeletConfig
                     * @static
                     * @param {google.container.v1.INodeKubeletConfig=} [properties] Properties to set
                     * @returns {google.container.v1.NodeKubeletConfig} NodeKubeletConfig instance
                     */
                    NodeKubeletConfig.create = function create(properties) {
                        return new NodeKubeletConfig(properties);
                    };
    
                    /**
                     * Encodes the specified NodeKubeletConfig message. Does not implicitly {@link google.container.v1.NodeKubeletConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.NodeKubeletConfig
                     * @static
                     * @param {google.container.v1.INodeKubeletConfig} message NodeKubeletConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NodeKubeletConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.cpuManagerPolicy != null && Object.hasOwnProperty.call(message, "cpuManagerPolicy"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.cpuManagerPolicy);
                        if (message.cpuCfsQuota != null && Object.hasOwnProperty.call(message, "cpuCfsQuota"))
                            $root.google.protobuf.BoolValue.encode(message.cpuCfsQuota, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.cpuCfsQuotaPeriod != null && Object.hasOwnProperty.call(message, "cpuCfsQuotaPeriod"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.cpuCfsQuotaPeriod);
                        if (message.podPidsLimit != null && Object.hasOwnProperty.call(message, "podPidsLimit"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int64(message.podPidsLimit);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NodeKubeletConfig message, length delimited. Does not implicitly {@link google.container.v1.NodeKubeletConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.NodeKubeletConfig
                     * @static
                     * @param {google.container.v1.INodeKubeletConfig} message NodeKubeletConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NodeKubeletConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NodeKubeletConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.NodeKubeletConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.NodeKubeletConfig} NodeKubeletConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NodeKubeletConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.NodeKubeletConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.cpuManagerPolicy = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.cpuCfsQuota = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.cpuCfsQuotaPeriod = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.podPidsLimit = reader.int64();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a NodeKubeletConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.NodeKubeletConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.NodeKubeletConfig} NodeKubeletConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NodeKubeletConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NodeKubeletConfig message.
                     * @function verify
                     * @memberof google.container.v1.NodeKubeletConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NodeKubeletConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.cpuManagerPolicy != null && message.hasOwnProperty("cpuManagerPolicy"))
                            if (!$util.isString(message.cpuManagerPolicy))
                                return "cpuManagerPolicy: string expected";
                        if (message.cpuCfsQuota != null && message.hasOwnProperty("cpuCfsQuota")) {
                            var error = $root.google.protobuf.BoolValue.verify(message.cpuCfsQuota);
                            if (error)
                                return "cpuCfsQuota." + error;
                        }
                        if (message.cpuCfsQuotaPeriod != null && message.hasOwnProperty("cpuCfsQuotaPeriod"))
                            if (!$util.isString(message.cpuCfsQuotaPeriod))
                                return "cpuCfsQuotaPeriod: string expected";
                        if (message.podPidsLimit != null && message.hasOwnProperty("podPidsLimit"))
                            if (!$util.isInteger(message.podPidsLimit) && !(message.podPidsLimit && $util.isInteger(message.podPidsLimit.low) && $util.isInteger(message.podPidsLimit.high)))
                                return "podPidsLimit: integer|Long expected";
                        return null;
                    };
    
                    /**
                     * Creates a NodeKubeletConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.NodeKubeletConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.NodeKubeletConfig} NodeKubeletConfig
                     */
                    NodeKubeletConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.NodeKubeletConfig)
                            return object;
                        var message = new $root.google.container.v1.NodeKubeletConfig();
                        if (object.cpuManagerPolicy != null)
                            message.cpuManagerPolicy = String(object.cpuManagerPolicy);
                        if (object.cpuCfsQuota != null) {
                            if (typeof object.cpuCfsQuota !== "object")
                                throw TypeError(".google.container.v1.NodeKubeletConfig.cpuCfsQuota: object expected");
                            message.cpuCfsQuota = $root.google.protobuf.BoolValue.fromObject(object.cpuCfsQuota);
                        }
                        if (object.cpuCfsQuotaPeriod != null)
                            message.cpuCfsQuotaPeriod = String(object.cpuCfsQuotaPeriod);
                        if (object.podPidsLimit != null)
                            if ($util.Long)
                                (message.podPidsLimit = $util.Long.fromValue(object.podPidsLimit)).unsigned = false;
                            else if (typeof object.podPidsLimit === "string")
                                message.podPidsLimit = parseInt(object.podPidsLimit, 10);
                            else if (typeof object.podPidsLimit === "number")
                                message.podPidsLimit = object.podPidsLimit;
                            else if (typeof object.podPidsLimit === "object")
                                message.podPidsLimit = new $util.LongBits(object.podPidsLimit.low >>> 0, object.podPidsLimit.high >>> 0).toNumber();
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NodeKubeletConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.NodeKubeletConfig
                     * @static
                     * @param {google.container.v1.NodeKubeletConfig} message NodeKubeletConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NodeKubeletConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.cpuManagerPolicy = "";
                            object.cpuCfsQuota = null;
                            object.cpuCfsQuotaPeriod = "";
                            if ($util.Long) {
                                var long = new $util.Long(0, 0, false);
                                object.podPidsLimit = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                            } else
                                object.podPidsLimit = options.longs === String ? "0" : 0;
                        }
                        if (message.cpuManagerPolicy != null && message.hasOwnProperty("cpuManagerPolicy"))
                            object.cpuManagerPolicy = message.cpuManagerPolicy;
                        if (message.cpuCfsQuota != null && message.hasOwnProperty("cpuCfsQuota"))
                            object.cpuCfsQuota = $root.google.protobuf.BoolValue.toObject(message.cpuCfsQuota, options);
                        if (message.cpuCfsQuotaPeriod != null && message.hasOwnProperty("cpuCfsQuotaPeriod"))
                            object.cpuCfsQuotaPeriod = message.cpuCfsQuotaPeriod;
                        if (message.podPidsLimit != null && message.hasOwnProperty("podPidsLimit"))
                            if (typeof message.podPidsLimit === "number")
                                object.podPidsLimit = options.longs === String ? String(message.podPidsLimit) : message.podPidsLimit;
                            else
                                object.podPidsLimit = options.longs === String ? $util.Long.prototype.toString.call(message.podPidsLimit) : options.longs === Number ? new $util.LongBits(message.podPidsLimit.low >>> 0, message.podPidsLimit.high >>> 0).toNumber() : message.podPidsLimit;
                        return object;
                    };
    
                    /**
                     * Converts this NodeKubeletConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.NodeKubeletConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NodeKubeletConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NodeKubeletConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.NodeKubeletConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NodeKubeletConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.NodeKubeletConfig";
                    };
    
                    return NodeKubeletConfig;
                })();
    
                v1.NodeConfig = (function() {
    
                    /**
                     * Properties of a NodeConfig.
                     * @memberof google.container.v1
                     * @interface INodeConfig
                     * @property {string|null} [machineType] NodeConfig machineType
                     * @property {number|null} [diskSizeGb] NodeConfig diskSizeGb
                     * @property {Array.<string>|null} [oauthScopes] NodeConfig oauthScopes
                     * @property {string|null} [serviceAccount] NodeConfig serviceAccount
                     * @property {Object.<string,string>|null} [metadata] NodeConfig metadata
                     * @property {string|null} [imageType] NodeConfig imageType
                     * @property {Object.<string,string>|null} [labels] NodeConfig labels
                     * @property {number|null} [localSsdCount] NodeConfig localSsdCount
                     * @property {Array.<string>|null} [tags] NodeConfig tags
                     * @property {boolean|null} [preemptible] NodeConfig preemptible
                     * @property {Array.<google.container.v1.IAcceleratorConfig>|null} [accelerators] NodeConfig accelerators
                     * @property {string|null} [diskType] NodeConfig diskType
                     * @property {string|null} [minCpuPlatform] NodeConfig minCpuPlatform
                     * @property {google.container.v1.IWorkloadMetadataConfig|null} [workloadMetadataConfig] NodeConfig workloadMetadataConfig
                     * @property {Array.<google.container.v1.INodeTaint>|null} [taints] NodeConfig taints
                     * @property {google.container.v1.ISandboxConfig|null} [sandboxConfig] NodeConfig sandboxConfig
                     * @property {string|null} [nodeGroup] NodeConfig nodeGroup
                     * @property {google.container.v1.IReservationAffinity|null} [reservationAffinity] NodeConfig reservationAffinity
                     * @property {google.container.v1.IShieldedInstanceConfig|null} [shieldedInstanceConfig] NodeConfig shieldedInstanceConfig
                     * @property {google.container.v1.ILinuxNodeConfig|null} [linuxNodeConfig] NodeConfig linuxNodeConfig
                     * @property {google.container.v1.INodeKubeletConfig|null} [kubeletConfig] NodeConfig kubeletConfig
                     * @property {string|null} [bootDiskKmsKey] NodeConfig bootDiskKmsKey
                     * @property {google.container.v1.IGcfsConfig|null} [gcfsConfig] NodeConfig gcfsConfig
                     * @property {google.container.v1.IAdvancedMachineFeatures|null} [advancedMachineFeatures] NodeConfig advancedMachineFeatures
                     * @property {google.container.v1.IVirtualNIC|null} [gvnic] NodeConfig gvnic
                     * @property {boolean|null} [spot] NodeConfig spot
                     * @property {google.container.v1.IConfidentialNodes|null} [confidentialNodes] NodeConfig confidentialNodes
                     * @property {Object.<string,string>|null} [resourceLabels] NodeConfig resourceLabels
                     * @property {google.container.v1.INodePoolLoggingConfig|null} [loggingConfig] NodeConfig loggingConfig
                     */
    
                    /**
                     * Constructs a new NodeConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a NodeConfig.
                     * @implements INodeConfig
                     * @constructor
                     * @param {google.container.v1.INodeConfig=} [properties] Properties to set
                     */
                    function NodeConfig(properties) {
                        this.oauthScopes = [];
                        this.metadata = {};
                        this.labels = {};
                        this.tags = [];
                        this.accelerators = [];
                        this.taints = [];
                        this.resourceLabels = {};
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NodeConfig machineType.
                     * @member {string} machineType
                     * @memberof google.container.v1.NodeConfig
                     * @instance
                     */
                    NodeConfig.prototype.machineType = "";
    
                    /**
                     * NodeConfig diskSizeGb.
                     * @member {number} diskSizeGb
                     * @memberof google.container.v1.NodeConfig
                     * @instance
                     */
                    NodeConfig.prototype.diskSizeGb = 0;
    
                    /**
                     * NodeConfig oauthScopes.
                     * @member {Array.<string>} oauthScopes
                     * @memberof google.container.v1.NodeConfig
                     * @instance
                     */
                    NodeConfig.prototype.oauthScopes = $util.emptyArray;
    
                    /**
                     * NodeConfig serviceAccount.
                     * @member {string} serviceAccount
                     * @memberof google.container.v1.NodeConfig
                     * @instance
                     */
                    NodeConfig.prototype.serviceAccount = "";
    
                    /**
                     * NodeConfig metadata.
                     * @member {Object.<string,string>} metadata
                     * @memberof google.container.v1.NodeConfig
                     * @instance
                     */
                    NodeConfig.prototype.metadata = $util.emptyObject;
    
                    /**
                     * NodeConfig imageType.
                     * @member {string} imageType
                     * @memberof google.container.v1.NodeConfig
                     * @instance
                     */
                    NodeConfig.prototype.imageType = "";
    
                    /**
                     * NodeConfig labels.
                     * @member {Object.<string,string>} labels
                     * @memberof google.container.v1.NodeConfig
                     * @instance
                     */
                    NodeConfig.prototype.labels = $util.emptyObject;
    
                    /**
                     * NodeConfig localSsdCount.
                     * @member {number} localSsdCount
                     * @memberof google.container.v1.NodeConfig
                     * @instance
                     */
                    NodeConfig.prototype.localSsdCount = 0;
    
                    /**
                     * NodeConfig tags.
                     * @member {Array.<string>} tags
                     * @memberof google.container.v1.NodeConfig
                     * @instance
                     */
                    NodeConfig.prototype.tags = $util.emptyArray;
    
                    /**
                     * NodeConfig preemptible.
                     * @member {boolean} preemptible
                     * @memberof google.container.v1.NodeConfig
                     * @instance
                     */
                    NodeConfig.prototype.preemptible = false;
    
                    /**
                     * NodeConfig accelerators.
                     * @member {Array.<google.container.v1.IAcceleratorConfig>} accelerators
                     * @memberof google.container.v1.NodeConfig
                     * @instance
                     */
                    NodeConfig.prototype.accelerators = $util.emptyArray;
    
                    /**
                     * NodeConfig diskType.
                     * @member {string} diskType
                     * @memberof google.container.v1.NodeConfig
                     * @instance
                     */
                    NodeConfig.prototype.diskType = "";
    
                    /**
                     * NodeConfig minCpuPlatform.
                     * @member {string} minCpuPlatform
                     * @memberof google.container.v1.NodeConfig
                     * @instance
                     */
                    NodeConfig.prototype.minCpuPlatform = "";
    
                    /**
                     * NodeConfig workloadMetadataConfig.
                     * @member {google.container.v1.IWorkloadMetadataConfig|null|undefined} workloadMetadataConfig
                     * @memberof google.container.v1.NodeConfig
                     * @instance
                     */
                    NodeConfig.prototype.workloadMetadataConfig = null;
    
                    /**
                     * NodeConfig taints.
                     * @member {Array.<google.container.v1.INodeTaint>} taints
                     * @memberof google.container.v1.NodeConfig
                     * @instance
                     */
                    NodeConfig.prototype.taints = $util.emptyArray;
    
                    /**
                     * NodeConfig sandboxConfig.
                     * @member {google.container.v1.ISandboxConfig|null|undefined} sandboxConfig
                     * @memberof google.container.v1.NodeConfig
                     * @instance
                     */
                    NodeConfig.prototype.sandboxConfig = null;
    
                    /**
                     * NodeConfig nodeGroup.
                     * @member {string} nodeGroup
                     * @memberof google.container.v1.NodeConfig
                     * @instance
                     */
                    NodeConfig.prototype.nodeGroup = "";
    
                    /**
                     * NodeConfig reservationAffinity.
                     * @member {google.container.v1.IReservationAffinity|null|undefined} reservationAffinity
                     * @memberof google.container.v1.NodeConfig
                     * @instance
                     */
                    NodeConfig.prototype.reservationAffinity = null;
    
                    /**
                     * NodeConfig shieldedInstanceConfig.
                     * @member {google.container.v1.IShieldedInstanceConfig|null|undefined} shieldedInstanceConfig
                     * @memberof google.container.v1.NodeConfig
                     * @instance
                     */
                    NodeConfig.prototype.shieldedInstanceConfig = null;
    
                    /**
                     * NodeConfig linuxNodeConfig.
                     * @member {google.container.v1.ILinuxNodeConfig|null|undefined} linuxNodeConfig
                     * @memberof google.container.v1.NodeConfig
                     * @instance
                     */
                    NodeConfig.prototype.linuxNodeConfig = null;
    
                    /**
                     * NodeConfig kubeletConfig.
                     * @member {google.container.v1.INodeKubeletConfig|null|undefined} kubeletConfig
                     * @memberof google.container.v1.NodeConfig
                     * @instance
                     */
                    NodeConfig.prototype.kubeletConfig = null;
    
                    /**
                     * NodeConfig bootDiskKmsKey.
                     * @member {string} bootDiskKmsKey
                     * @memberof google.container.v1.NodeConfig
                     * @instance
                     */
                    NodeConfig.prototype.bootDiskKmsKey = "";
    
                    /**
                     * NodeConfig gcfsConfig.
                     * @member {google.container.v1.IGcfsConfig|null|undefined} gcfsConfig
                     * @memberof google.container.v1.NodeConfig
                     * @instance
                     */
                    NodeConfig.prototype.gcfsConfig = null;
    
                    /**
                     * NodeConfig advancedMachineFeatures.
                     * @member {google.container.v1.IAdvancedMachineFeatures|null|undefined} advancedMachineFeatures
                     * @memberof google.container.v1.NodeConfig
                     * @instance
                     */
                    NodeConfig.prototype.advancedMachineFeatures = null;
    
                    /**
                     * NodeConfig gvnic.
                     * @member {google.container.v1.IVirtualNIC|null|undefined} gvnic
                     * @memberof google.container.v1.NodeConfig
                     * @instance
                     */
                    NodeConfig.prototype.gvnic = null;
    
                    /**
                     * NodeConfig spot.
                     * @member {boolean} spot
                     * @memberof google.container.v1.NodeConfig
                     * @instance
                     */
                    NodeConfig.prototype.spot = false;
    
                    /**
                     * NodeConfig confidentialNodes.
                     * @member {google.container.v1.IConfidentialNodes|null|undefined} confidentialNodes
                     * @memberof google.container.v1.NodeConfig
                     * @instance
                     */
                    NodeConfig.prototype.confidentialNodes = null;
    
                    /**
                     * NodeConfig resourceLabels.
                     * @member {Object.<string,string>} resourceLabels
                     * @memberof google.container.v1.NodeConfig
                     * @instance
                     */
                    NodeConfig.prototype.resourceLabels = $util.emptyObject;
    
                    /**
                     * NodeConfig loggingConfig.
                     * @member {google.container.v1.INodePoolLoggingConfig|null|undefined} loggingConfig
                     * @memberof google.container.v1.NodeConfig
                     * @instance
                     */
                    NodeConfig.prototype.loggingConfig = null;
    
                    /**
                     * Creates a new NodeConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.NodeConfig
                     * @static
                     * @param {google.container.v1.INodeConfig=} [properties] Properties to set
                     * @returns {google.container.v1.NodeConfig} NodeConfig instance
                     */
                    NodeConfig.create = function create(properties) {
                        return new NodeConfig(properties);
                    };
    
                    /**
                     * Encodes the specified NodeConfig message. Does not implicitly {@link google.container.v1.NodeConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.NodeConfig
                     * @static
                     * @param {google.container.v1.INodeConfig} message NodeConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NodeConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.machineType != null && Object.hasOwnProperty.call(message, "machineType"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.machineType);
                        if (message.diskSizeGb != null && Object.hasOwnProperty.call(message, "diskSizeGb"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.diskSizeGb);
                        if (message.oauthScopes != null && message.oauthScopes.length)
                            for (var i = 0; i < message.oauthScopes.length; ++i)
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.oauthScopes[i]);
                        if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                            for (var keys = Object.keys(message.metadata), i = 0; i < keys.length; ++i)
                                writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.metadata[keys[i]]).ldelim();
                        if (message.imageType != null && Object.hasOwnProperty.call(message, "imageType"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.imageType);
                        if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                            for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                        if (message.localSsdCount != null && Object.hasOwnProperty.call(message, "localSsdCount"))
                            writer.uint32(/* id 7, wireType 0 =*/56).int32(message.localSsdCount);
                        if (message.tags != null && message.tags.length)
                            for (var i = 0; i < message.tags.length; ++i)
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.tags[i]);
                        if (message.serviceAccount != null && Object.hasOwnProperty.call(message, "serviceAccount"))
                            writer.uint32(/* id 9, wireType 2 =*/74).string(message.serviceAccount);
                        if (message.preemptible != null && Object.hasOwnProperty.call(message, "preemptible"))
                            writer.uint32(/* id 10, wireType 0 =*/80).bool(message.preemptible);
                        if (message.accelerators != null && message.accelerators.length)
                            for (var i = 0; i < message.accelerators.length; ++i)
                                $root.google.container.v1.AcceleratorConfig.encode(message.accelerators[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                        if (message.diskType != null && Object.hasOwnProperty.call(message, "diskType"))
                            writer.uint32(/* id 12, wireType 2 =*/98).string(message.diskType);
                        if (message.minCpuPlatform != null && Object.hasOwnProperty.call(message, "minCpuPlatform"))
                            writer.uint32(/* id 13, wireType 2 =*/106).string(message.minCpuPlatform);
                        if (message.workloadMetadataConfig != null && Object.hasOwnProperty.call(message, "workloadMetadataConfig"))
                            $root.google.container.v1.WorkloadMetadataConfig.encode(message.workloadMetadataConfig, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                        if (message.taints != null && message.taints.length)
                            for (var i = 0; i < message.taints.length; ++i)
                                $root.google.container.v1.NodeTaint.encode(message.taints[i], writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                        if (message.sandboxConfig != null && Object.hasOwnProperty.call(message, "sandboxConfig"))
                            $root.google.container.v1.SandboxConfig.encode(message.sandboxConfig, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                        if (message.nodeGroup != null && Object.hasOwnProperty.call(message, "nodeGroup"))
                            writer.uint32(/* id 18, wireType 2 =*/146).string(message.nodeGroup);
                        if (message.reservationAffinity != null && Object.hasOwnProperty.call(message, "reservationAffinity"))
                            $root.google.container.v1.ReservationAffinity.encode(message.reservationAffinity, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();
                        if (message.shieldedInstanceConfig != null && Object.hasOwnProperty.call(message, "shieldedInstanceConfig"))
                            $root.google.container.v1.ShieldedInstanceConfig.encode(message.shieldedInstanceConfig, writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();
                        if (message.linuxNodeConfig != null && Object.hasOwnProperty.call(message, "linuxNodeConfig"))
                            $root.google.container.v1.LinuxNodeConfig.encode(message.linuxNodeConfig, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                        if (message.kubeletConfig != null && Object.hasOwnProperty.call(message, "kubeletConfig"))
                            $root.google.container.v1.NodeKubeletConfig.encode(message.kubeletConfig, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
                        if (message.bootDiskKmsKey != null && Object.hasOwnProperty.call(message, "bootDiskKmsKey"))
                            writer.uint32(/* id 23, wireType 2 =*/186).string(message.bootDiskKmsKey);
                        if (message.gcfsConfig != null && Object.hasOwnProperty.call(message, "gcfsConfig"))
                            $root.google.container.v1.GcfsConfig.encode(message.gcfsConfig, writer.uint32(/* id 25, wireType 2 =*/202).fork()).ldelim();
                        if (message.advancedMachineFeatures != null && Object.hasOwnProperty.call(message, "advancedMachineFeatures"))
                            $root.google.container.v1.AdvancedMachineFeatures.encode(message.advancedMachineFeatures, writer.uint32(/* id 26, wireType 2 =*/210).fork()).ldelim();
                        if (message.gvnic != null && Object.hasOwnProperty.call(message, "gvnic"))
                            $root.google.container.v1.VirtualNIC.encode(message.gvnic, writer.uint32(/* id 29, wireType 2 =*/234).fork()).ldelim();
                        if (message.spot != null && Object.hasOwnProperty.call(message, "spot"))
                            writer.uint32(/* id 32, wireType 0 =*/256).bool(message.spot);
                        if (message.confidentialNodes != null && Object.hasOwnProperty.call(message, "confidentialNodes"))
                            $root.google.container.v1.ConfidentialNodes.encode(message.confidentialNodes, writer.uint32(/* id 35, wireType 2 =*/282).fork()).ldelim();
                        if (message.resourceLabels != null && Object.hasOwnProperty.call(message, "resourceLabels"))
                            for (var keys = Object.keys(message.resourceLabels), i = 0; i < keys.length; ++i)
                                writer.uint32(/* id 37, wireType 2 =*/298).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.resourceLabels[keys[i]]).ldelim();
                        if (message.loggingConfig != null && Object.hasOwnProperty.call(message, "loggingConfig"))
                            $root.google.container.v1.NodePoolLoggingConfig.encode(message.loggingConfig, writer.uint32(/* id 38, wireType 2 =*/306).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NodeConfig message, length delimited. Does not implicitly {@link google.container.v1.NodeConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.NodeConfig
                     * @static
                     * @param {google.container.v1.INodeConfig} message NodeConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NodeConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NodeConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.NodeConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.NodeConfig} NodeConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NodeConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.NodeConfig(), key, value;
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.machineType = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.diskSizeGb = reader.int32();
                                    break;
                                }
                            case 3: {
                                    if (!(message.oauthScopes && message.oauthScopes.length))
                                        message.oauthScopes = [];
                                    message.oauthScopes.push(reader.string());
                                    break;
                                }
                            case 9: {
                                    message.serviceAccount = reader.string();
                                    break;
                                }
                            case 4: {
                                    if (message.metadata === $util.emptyObject)
                                        message.metadata = {};
                                    var end2 = reader.uint32() + reader.pos;
                                    key = "";
                                    value = "";
                                    while (reader.pos < end2) {
                                        var tag2 = reader.uint32();
                                        switch (tag2 >>> 3) {
                                        case 1:
                                            key = reader.string();
                                            break;
                                        case 2:
                                            value = reader.string();
                                            break;
                                        default:
                                            reader.skipType(tag2 & 7);
                                            break;
                                        }
                                    }
                                    message.metadata[key] = value;
                                    break;
                                }
                            case 5: {
                                    message.imageType = reader.string();
                                    break;
                                }
                            case 6: {
                                    if (message.labels === $util.emptyObject)
                                        message.labels = {};
                                    var end2 = reader.uint32() + reader.pos;
                                    key = "";
                                    value = "";
                                    while (reader.pos < end2) {
                                        var tag2 = reader.uint32();
                                        switch (tag2 >>> 3) {
                                        case 1:
                                            key = reader.string();
                                            break;
                                        case 2:
                                            value = reader.string();
                                            break;
                                        default:
                                            reader.skipType(tag2 & 7);
                                            break;
                                        }
                                    }
                                    message.labels[key] = value;
                                    break;
                                }
                            case 7: {
                                    message.localSsdCount = reader.int32();
                                    break;
                                }
                            case 8: {
                                    if (!(message.tags && message.tags.length))
                                        message.tags = [];
                                    message.tags.push(reader.string());
                                    break;
                                }
                            case 10: {
                                    message.preemptible = reader.bool();
                                    break;
                                }
                            case 11: {
                                    if (!(message.accelerators && message.accelerators.length))
                                        message.accelerators = [];
                                    message.accelerators.push($root.google.container.v1.AcceleratorConfig.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 12: {
                                    message.diskType = reader.string();
                                    break;
                                }
                            case 13: {
                                    message.minCpuPlatform = reader.string();
                                    break;
                                }
                            case 14: {
                                    message.workloadMetadataConfig = $root.google.container.v1.WorkloadMetadataConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 15: {
                                    if (!(message.taints && message.taints.length))
                                        message.taints = [];
                                    message.taints.push($root.google.container.v1.NodeTaint.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 17: {
                                    message.sandboxConfig = $root.google.container.v1.SandboxConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 18: {
                                    message.nodeGroup = reader.string();
                                    break;
                                }
                            case 19: {
                                    message.reservationAffinity = $root.google.container.v1.ReservationAffinity.decode(reader, reader.uint32());
                                    break;
                                }
                            case 20: {
                                    message.shieldedInstanceConfig = $root.google.container.v1.ShieldedInstanceConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 21: {
                                    message.linuxNodeConfig = $root.google.container.v1.LinuxNodeConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 22: {
                                    message.kubeletConfig = $root.google.container.v1.NodeKubeletConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 23: {
                                    message.bootDiskKmsKey = reader.string();
                                    break;
                                }
                            case 25: {
                                    message.gcfsConfig = $root.google.container.v1.GcfsConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 26: {
                                    message.advancedMachineFeatures = $root.google.container.v1.AdvancedMachineFeatures.decode(reader, reader.uint32());
                                    break;
                                }
                            case 29: {
                                    message.gvnic = $root.google.container.v1.VirtualNIC.decode(reader, reader.uint32());
                                    break;
                                }
                            case 32: {
                                    message.spot = reader.bool();
                                    break;
                                }
                            case 35: {
                                    message.confidentialNodes = $root.google.container.v1.ConfidentialNodes.decode(reader, reader.uint32());
                                    break;
                                }
                            case 37: {
                                    if (message.resourceLabels === $util.emptyObject)
                                        message.resourceLabels = {};
                                    var end2 = reader.uint32() + reader.pos;
                                    key = "";
                                    value = "";
                                    while (reader.pos < end2) {
                                        var tag2 = reader.uint32();
                                        switch (tag2 >>> 3) {
                                        case 1:
                                            key = reader.string();
                                            break;
                                        case 2:
                                            value = reader.string();
                                            break;
                                        default:
                                            reader.skipType(tag2 & 7);
                                            break;
                                        }
                                    }
                                    message.resourceLabels[key] = value;
                                    break;
                                }
                            case 38: {
                                    message.loggingConfig = $root.google.container.v1.NodePoolLoggingConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a NodeConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.NodeConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.NodeConfig} NodeConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NodeConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NodeConfig message.
                     * @function verify
                     * @memberof google.container.v1.NodeConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NodeConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.machineType != null && message.hasOwnProperty("machineType"))
                            if (!$util.isString(message.machineType))
                                return "machineType: string expected";
                        if (message.diskSizeGb != null && message.hasOwnProperty("diskSizeGb"))
                            if (!$util.isInteger(message.diskSizeGb))
                                return "diskSizeGb: integer expected";
                        if (message.oauthScopes != null && message.hasOwnProperty("oauthScopes")) {
                            if (!Array.isArray(message.oauthScopes))
                                return "oauthScopes: array expected";
                            for (var i = 0; i < message.oauthScopes.length; ++i)
                                if (!$util.isString(message.oauthScopes[i]))
                                    return "oauthScopes: string[] expected";
                        }
                        if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                            if (!$util.isString(message.serviceAccount))
                                return "serviceAccount: string expected";
                        if (message.metadata != null && message.hasOwnProperty("metadata")) {
                            if (!$util.isObject(message.metadata))
                                return "metadata: object expected";
                            var key = Object.keys(message.metadata);
                            for (var i = 0; i < key.length; ++i)
                                if (!$util.isString(message.metadata[key[i]]))
                                    return "metadata: string{k:string} expected";
                        }
                        if (message.imageType != null && message.hasOwnProperty("imageType"))
                            if (!$util.isString(message.imageType))
                                return "imageType: string expected";
                        if (message.labels != null && message.hasOwnProperty("labels")) {
                            if (!$util.isObject(message.labels))
                                return "labels: object expected";
                            var key = Object.keys(message.labels);
                            for (var i = 0; i < key.length; ++i)
                                if (!$util.isString(message.labels[key[i]]))
                                    return "labels: string{k:string} expected";
                        }
                        if (message.localSsdCount != null && message.hasOwnProperty("localSsdCount"))
                            if (!$util.isInteger(message.localSsdCount))
                                return "localSsdCount: integer expected";
                        if (message.tags != null && message.hasOwnProperty("tags")) {
                            if (!Array.isArray(message.tags))
                                return "tags: array expected";
                            for (var i = 0; i < message.tags.length; ++i)
                                if (!$util.isString(message.tags[i]))
                                    return "tags: string[] expected";
                        }
                        if (message.preemptible != null && message.hasOwnProperty("preemptible"))
                            if (typeof message.preemptible !== "boolean")
                                return "preemptible: boolean expected";
                        if (message.accelerators != null && message.hasOwnProperty("accelerators")) {
                            if (!Array.isArray(message.accelerators))
                                return "accelerators: array expected";
                            for (var i = 0; i < message.accelerators.length; ++i) {
                                var error = $root.google.container.v1.AcceleratorConfig.verify(message.accelerators[i]);
                                if (error)
                                    return "accelerators." + error;
                            }
                        }
                        if (message.diskType != null && message.hasOwnProperty("diskType"))
                            if (!$util.isString(message.diskType))
                                return "diskType: string expected";
                        if (message.minCpuPlatform != null && message.hasOwnProperty("minCpuPlatform"))
                            if (!$util.isString(message.minCpuPlatform))
                                return "minCpuPlatform: string expected";
                        if (message.workloadMetadataConfig != null && message.hasOwnProperty("workloadMetadataConfig")) {
                            var error = $root.google.container.v1.WorkloadMetadataConfig.verify(message.workloadMetadataConfig);
                            if (error)
                                return "workloadMetadataConfig." + error;
                        }
                        if (message.taints != null && message.hasOwnProperty("taints")) {
                            if (!Array.isArray(message.taints))
                                return "taints: array expected";
                            for (var i = 0; i < message.taints.length; ++i) {
                                var error = $root.google.container.v1.NodeTaint.verify(message.taints[i]);
                                if (error)
                                    return "taints." + error;
                            }
                        }
                        if (message.sandboxConfig != null && message.hasOwnProperty("sandboxConfig")) {
                            var error = $root.google.container.v1.SandboxConfig.verify(message.sandboxConfig);
                            if (error)
                                return "sandboxConfig." + error;
                        }
                        if (message.nodeGroup != null && message.hasOwnProperty("nodeGroup"))
                            if (!$util.isString(message.nodeGroup))
                                return "nodeGroup: string expected";
                        if (message.reservationAffinity != null && message.hasOwnProperty("reservationAffinity")) {
                            var error = $root.google.container.v1.ReservationAffinity.verify(message.reservationAffinity);
                            if (error)
                                return "reservationAffinity." + error;
                        }
                        if (message.shieldedInstanceConfig != null && message.hasOwnProperty("shieldedInstanceConfig")) {
                            var error = $root.google.container.v1.ShieldedInstanceConfig.verify(message.shieldedInstanceConfig);
                            if (error)
                                return "shieldedInstanceConfig." + error;
                        }
                        if (message.linuxNodeConfig != null && message.hasOwnProperty("linuxNodeConfig")) {
                            var error = $root.google.container.v1.LinuxNodeConfig.verify(message.linuxNodeConfig);
                            if (error)
                                return "linuxNodeConfig." + error;
                        }
                        if (message.kubeletConfig != null && message.hasOwnProperty("kubeletConfig")) {
                            var error = $root.google.container.v1.NodeKubeletConfig.verify(message.kubeletConfig);
                            if (error)
                                return "kubeletConfig." + error;
                        }
                        if (message.bootDiskKmsKey != null && message.hasOwnProperty("bootDiskKmsKey"))
                            if (!$util.isString(message.bootDiskKmsKey))
                                return "bootDiskKmsKey: string expected";
                        if (message.gcfsConfig != null && message.hasOwnProperty("gcfsConfig")) {
                            var error = $root.google.container.v1.GcfsConfig.verify(message.gcfsConfig);
                            if (error)
                                return "gcfsConfig." + error;
                        }
                        if (message.advancedMachineFeatures != null && message.hasOwnProperty("advancedMachineFeatures")) {
                            var error = $root.google.container.v1.AdvancedMachineFeatures.verify(message.advancedMachineFeatures);
                            if (error)
                                return "advancedMachineFeatures." + error;
                        }
                        if (message.gvnic != null && message.hasOwnProperty("gvnic")) {
                            var error = $root.google.container.v1.VirtualNIC.verify(message.gvnic);
                            if (error)
                                return "gvnic." + error;
                        }
                        if (message.spot != null && message.hasOwnProperty("spot"))
                            if (typeof message.spot !== "boolean")
                                return "spot: boolean expected";
                        if (message.confidentialNodes != null && message.hasOwnProperty("confidentialNodes")) {
                            var error = $root.google.container.v1.ConfidentialNodes.verify(message.confidentialNodes);
                            if (error)
                                return "confidentialNodes." + error;
                        }
                        if (message.resourceLabels != null && message.hasOwnProperty("resourceLabels")) {
                            if (!$util.isObject(message.resourceLabels))
                                return "resourceLabels: object expected";
                            var key = Object.keys(message.resourceLabels);
                            for (var i = 0; i < key.length; ++i)
                                if (!$util.isString(message.resourceLabels[key[i]]))
                                    return "resourceLabels: string{k:string} expected";
                        }
                        if (message.loggingConfig != null && message.hasOwnProperty("loggingConfig")) {
                            var error = $root.google.container.v1.NodePoolLoggingConfig.verify(message.loggingConfig);
                            if (error)
                                return "loggingConfig." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a NodeConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.NodeConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.NodeConfig} NodeConfig
                     */
                    NodeConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.NodeConfig)
                            return object;
                        var message = new $root.google.container.v1.NodeConfig();
                        if (object.machineType != null)
                            message.machineType = String(object.machineType);
                        if (object.diskSizeGb != null)
                            message.diskSizeGb = object.diskSizeGb | 0;
                        if (object.oauthScopes) {
                            if (!Array.isArray(object.oauthScopes))
                                throw TypeError(".google.container.v1.NodeConfig.oauthScopes: array expected");
                            message.oauthScopes = [];
                            for (var i = 0; i < object.oauthScopes.length; ++i)
                                message.oauthScopes[i] = String(object.oauthScopes[i]);
                        }
                        if (object.serviceAccount != null)
                            message.serviceAccount = String(object.serviceAccount);
                        if (object.metadata) {
                            if (typeof object.metadata !== "object")
                                throw TypeError(".google.container.v1.NodeConfig.metadata: object expected");
                            message.metadata = {};
                            for (var keys = Object.keys(object.metadata), i = 0; i < keys.length; ++i)
                                message.metadata[keys[i]] = String(object.metadata[keys[i]]);
                        }
                        if (object.imageType != null)
                            message.imageType = String(object.imageType);
                        if (object.labels) {
                            if (typeof object.labels !== "object")
                                throw TypeError(".google.container.v1.NodeConfig.labels: object expected");
                            message.labels = {};
                            for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                message.labels[keys[i]] = String(object.labels[keys[i]]);
                        }
                        if (object.localSsdCount != null)
                            message.localSsdCount = object.localSsdCount | 0;
                        if (object.tags) {
                            if (!Array.isArray(object.tags))
                                throw TypeError(".google.container.v1.NodeConfig.tags: array expected");
                            message.tags = [];
                            for (var i = 0; i < object.tags.length; ++i)
                                message.tags[i] = String(object.tags[i]);
                        }
                        if (object.preemptible != null)
                            message.preemptible = Boolean(object.preemptible);
                        if (object.accelerators) {
                            if (!Array.isArray(object.accelerators))
                                throw TypeError(".google.container.v1.NodeConfig.accelerators: array expected");
                            message.accelerators = [];
                            for (var i = 0; i < object.accelerators.length; ++i) {
                                if (typeof object.accelerators[i] !== "object")
                                    throw TypeError(".google.container.v1.NodeConfig.accelerators: object expected");
                                message.accelerators[i] = $root.google.container.v1.AcceleratorConfig.fromObject(object.accelerators[i]);
                            }
                        }
                        if (object.diskType != null)
                            message.diskType = String(object.diskType);
                        if (object.minCpuPlatform != null)
                            message.minCpuPlatform = String(object.minCpuPlatform);
                        if (object.workloadMetadataConfig != null) {
                            if (typeof object.workloadMetadataConfig !== "object")
                                throw TypeError(".google.container.v1.NodeConfig.workloadMetadataConfig: object expected");
                            message.workloadMetadataConfig = $root.google.container.v1.WorkloadMetadataConfig.fromObject(object.workloadMetadataConfig);
                        }
                        if (object.taints) {
                            if (!Array.isArray(object.taints))
                                throw TypeError(".google.container.v1.NodeConfig.taints: array expected");
                            message.taints = [];
                            for (var i = 0; i < object.taints.length; ++i) {
                                if (typeof object.taints[i] !== "object")
                                    throw TypeError(".google.container.v1.NodeConfig.taints: object expected");
                                message.taints[i] = $root.google.container.v1.NodeTaint.fromObject(object.taints[i]);
                            }
                        }
                        if (object.sandboxConfig != null) {
                            if (typeof object.sandboxConfig !== "object")
                                throw TypeError(".google.container.v1.NodeConfig.sandboxConfig: object expected");
                            message.sandboxConfig = $root.google.container.v1.SandboxConfig.fromObject(object.sandboxConfig);
                        }
                        if (object.nodeGroup != null)
                            message.nodeGroup = String(object.nodeGroup);
                        if (object.reservationAffinity != null) {
                            if (typeof object.reservationAffinity !== "object")
                                throw TypeError(".google.container.v1.NodeConfig.reservationAffinity: object expected");
                            message.reservationAffinity = $root.google.container.v1.ReservationAffinity.fromObject(object.reservationAffinity);
                        }
                        if (object.shieldedInstanceConfig != null) {
                            if (typeof object.shieldedInstanceConfig !== "object")
                                throw TypeError(".google.container.v1.NodeConfig.shieldedInstanceConfig: object expected");
                            message.shieldedInstanceConfig = $root.google.container.v1.ShieldedInstanceConfig.fromObject(object.shieldedInstanceConfig);
                        }
                        if (object.linuxNodeConfig != null) {
                            if (typeof object.linuxNodeConfig !== "object")
                                throw TypeError(".google.container.v1.NodeConfig.linuxNodeConfig: object expected");
                            message.linuxNodeConfig = $root.google.container.v1.LinuxNodeConfig.fromObject(object.linuxNodeConfig);
                        }
                        if (object.kubeletConfig != null) {
                            if (typeof object.kubeletConfig !== "object")
                                throw TypeError(".google.container.v1.NodeConfig.kubeletConfig: object expected");
                            message.kubeletConfig = $root.google.container.v1.NodeKubeletConfig.fromObject(object.kubeletConfig);
                        }
                        if (object.bootDiskKmsKey != null)
                            message.bootDiskKmsKey = String(object.bootDiskKmsKey);
                        if (object.gcfsConfig != null) {
                            if (typeof object.gcfsConfig !== "object")
                                throw TypeError(".google.container.v1.NodeConfig.gcfsConfig: object expected");
                            message.gcfsConfig = $root.google.container.v1.GcfsConfig.fromObject(object.gcfsConfig);
                        }
                        if (object.advancedMachineFeatures != null) {
                            if (typeof object.advancedMachineFeatures !== "object")
                                throw TypeError(".google.container.v1.NodeConfig.advancedMachineFeatures: object expected");
                            message.advancedMachineFeatures = $root.google.container.v1.AdvancedMachineFeatures.fromObject(object.advancedMachineFeatures);
                        }
                        if (object.gvnic != null) {
                            if (typeof object.gvnic !== "object")
                                throw TypeError(".google.container.v1.NodeConfig.gvnic: object expected");
                            message.gvnic = $root.google.container.v1.VirtualNIC.fromObject(object.gvnic);
                        }
                        if (object.spot != null)
                            message.spot = Boolean(object.spot);
                        if (object.confidentialNodes != null) {
                            if (typeof object.confidentialNodes !== "object")
                                throw TypeError(".google.container.v1.NodeConfig.confidentialNodes: object expected");
                            message.confidentialNodes = $root.google.container.v1.ConfidentialNodes.fromObject(object.confidentialNodes);
                        }
                        if (object.resourceLabels) {
                            if (typeof object.resourceLabels !== "object")
                                throw TypeError(".google.container.v1.NodeConfig.resourceLabels: object expected");
                            message.resourceLabels = {};
                            for (var keys = Object.keys(object.resourceLabels), i = 0; i < keys.length; ++i)
                                message.resourceLabels[keys[i]] = String(object.resourceLabels[keys[i]]);
                        }
                        if (object.loggingConfig != null) {
                            if (typeof object.loggingConfig !== "object")
                                throw TypeError(".google.container.v1.NodeConfig.loggingConfig: object expected");
                            message.loggingConfig = $root.google.container.v1.NodePoolLoggingConfig.fromObject(object.loggingConfig);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NodeConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.NodeConfig
                     * @static
                     * @param {google.container.v1.NodeConfig} message NodeConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NodeConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.oauthScopes = [];
                            object.tags = [];
                            object.accelerators = [];
                            object.taints = [];
                        }
                        if (options.objects || options.defaults) {
                            object.metadata = {};
                            object.labels = {};
                            object.resourceLabels = {};
                        }
                        if (options.defaults) {
                            object.machineType = "";
                            object.diskSizeGb = 0;
                            object.imageType = "";
                            object.localSsdCount = 0;
                            object.serviceAccount = "";
                            object.preemptible = false;
                            object.diskType = "";
                            object.minCpuPlatform = "";
                            object.workloadMetadataConfig = null;
                            object.sandboxConfig = null;
                            object.nodeGroup = "";
                            object.reservationAffinity = null;
                            object.shieldedInstanceConfig = null;
                            object.linuxNodeConfig = null;
                            object.kubeletConfig = null;
                            object.bootDiskKmsKey = "";
                            object.gcfsConfig = null;
                            object.advancedMachineFeatures = null;
                            object.gvnic = null;
                            object.spot = false;
                            object.confidentialNodes = null;
                            object.loggingConfig = null;
                        }
                        if (message.machineType != null && message.hasOwnProperty("machineType"))
                            object.machineType = message.machineType;
                        if (message.diskSizeGb != null && message.hasOwnProperty("diskSizeGb"))
                            object.diskSizeGb = message.diskSizeGb;
                        if (message.oauthScopes && message.oauthScopes.length) {
                            object.oauthScopes = [];
                            for (var j = 0; j < message.oauthScopes.length; ++j)
                                object.oauthScopes[j] = message.oauthScopes[j];
                        }
                        var keys2;
                        if (message.metadata && (keys2 = Object.keys(message.metadata)).length) {
                            object.metadata = {};
                            for (var j = 0; j < keys2.length; ++j)
                                object.metadata[keys2[j]] = message.metadata[keys2[j]];
                        }
                        if (message.imageType != null && message.hasOwnProperty("imageType"))
                            object.imageType = message.imageType;
                        if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                            object.labels = {};
                            for (var j = 0; j < keys2.length; ++j)
                                object.labels[keys2[j]] = message.labels[keys2[j]];
                        }
                        if (message.localSsdCount != null && message.hasOwnProperty("localSsdCount"))
                            object.localSsdCount = message.localSsdCount;
                        if (message.tags && message.tags.length) {
                            object.tags = [];
                            for (var j = 0; j < message.tags.length; ++j)
                                object.tags[j] = message.tags[j];
                        }
                        if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                            object.serviceAccount = message.serviceAccount;
                        if (message.preemptible != null && message.hasOwnProperty("preemptible"))
                            object.preemptible = message.preemptible;
                        if (message.accelerators && message.accelerators.length) {
                            object.accelerators = [];
                            for (var j = 0; j < message.accelerators.length; ++j)
                                object.accelerators[j] = $root.google.container.v1.AcceleratorConfig.toObject(message.accelerators[j], options);
                        }
                        if (message.diskType != null && message.hasOwnProperty("diskType"))
                            object.diskType = message.diskType;
                        if (message.minCpuPlatform != null && message.hasOwnProperty("minCpuPlatform"))
                            object.minCpuPlatform = message.minCpuPlatform;
                        if (message.workloadMetadataConfig != null && message.hasOwnProperty("workloadMetadataConfig"))
                            object.workloadMetadataConfig = $root.google.container.v1.WorkloadMetadataConfig.toObject(message.workloadMetadataConfig, options);
                        if (message.taints && message.taints.length) {
                            object.taints = [];
                            for (var j = 0; j < message.taints.length; ++j)
                                object.taints[j] = $root.google.container.v1.NodeTaint.toObject(message.taints[j], options);
                        }
                        if (message.sandboxConfig != null && message.hasOwnProperty("sandboxConfig"))
                            object.sandboxConfig = $root.google.container.v1.SandboxConfig.toObject(message.sandboxConfig, options);
                        if (message.nodeGroup != null && message.hasOwnProperty("nodeGroup"))
                            object.nodeGroup = message.nodeGroup;
                        if (message.reservationAffinity != null && message.hasOwnProperty("reservationAffinity"))
                            object.reservationAffinity = $root.google.container.v1.ReservationAffinity.toObject(message.reservationAffinity, options);
                        if (message.shieldedInstanceConfig != null && message.hasOwnProperty("shieldedInstanceConfig"))
                            object.shieldedInstanceConfig = $root.google.container.v1.ShieldedInstanceConfig.toObject(message.shieldedInstanceConfig, options);
                        if (message.linuxNodeConfig != null && message.hasOwnProperty("linuxNodeConfig"))
                            object.linuxNodeConfig = $root.google.container.v1.LinuxNodeConfig.toObject(message.linuxNodeConfig, options);
                        if (message.kubeletConfig != null && message.hasOwnProperty("kubeletConfig"))
                            object.kubeletConfig = $root.google.container.v1.NodeKubeletConfig.toObject(message.kubeletConfig, options);
                        if (message.bootDiskKmsKey != null && message.hasOwnProperty("bootDiskKmsKey"))
                            object.bootDiskKmsKey = message.bootDiskKmsKey;
                        if (message.gcfsConfig != null && message.hasOwnProperty("gcfsConfig"))
                            object.gcfsConfig = $root.google.container.v1.GcfsConfig.toObject(message.gcfsConfig, options);
                        if (message.advancedMachineFeatures != null && message.hasOwnProperty("advancedMachineFeatures"))
                            object.advancedMachineFeatures = $root.google.container.v1.AdvancedMachineFeatures.toObject(message.advancedMachineFeatures, options);
                        if (message.gvnic != null && message.hasOwnProperty("gvnic"))
                            object.gvnic = $root.google.container.v1.VirtualNIC.toObject(message.gvnic, options);
                        if (message.spot != null && message.hasOwnProperty("spot"))
                            object.spot = message.spot;
                        if (message.confidentialNodes != null && message.hasOwnProperty("confidentialNodes"))
                            object.confidentialNodes = $root.google.container.v1.ConfidentialNodes.toObject(message.confidentialNodes, options);
                        if (message.resourceLabels && (keys2 = Object.keys(message.resourceLabels)).length) {
                            object.resourceLabels = {};
                            for (var j = 0; j < keys2.length; ++j)
                                object.resourceLabels[keys2[j]] = message.resourceLabels[keys2[j]];
                        }
                        if (message.loggingConfig != null && message.hasOwnProperty("loggingConfig"))
                            object.loggingConfig = $root.google.container.v1.NodePoolLoggingConfig.toObject(message.loggingConfig, options);
                        return object;
                    };
    
                    /**
                     * Converts this NodeConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.NodeConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NodeConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NodeConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.NodeConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NodeConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.NodeConfig";
                    };
    
                    return NodeConfig;
                })();
    
                v1.AdvancedMachineFeatures = (function() {
    
                    /**
                     * Properties of an AdvancedMachineFeatures.
                     * @memberof google.container.v1
                     * @interface IAdvancedMachineFeatures
                     * @property {number|Long|null} [threadsPerCore] AdvancedMachineFeatures threadsPerCore
                     */
    
                    /**
                     * Constructs a new AdvancedMachineFeatures.
                     * @memberof google.container.v1
                     * @classdesc Represents an AdvancedMachineFeatures.
                     * @implements IAdvancedMachineFeatures
                     * @constructor
                     * @param {google.container.v1.IAdvancedMachineFeatures=} [properties] Properties to set
                     */
                    function AdvancedMachineFeatures(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * AdvancedMachineFeatures threadsPerCore.
                     * @member {number|Long|null|undefined} threadsPerCore
                     * @memberof google.container.v1.AdvancedMachineFeatures
                     * @instance
                     */
                    AdvancedMachineFeatures.prototype.threadsPerCore = null;
    
                    // OneOf field names bound to virtual getters and setters
                    var $oneOfFields;
    
                    /**
                     * AdvancedMachineFeatures _threadsPerCore.
                     * @member {"threadsPerCore"|undefined} _threadsPerCore
                     * @memberof google.container.v1.AdvancedMachineFeatures
                     * @instance
                     */
                    Object.defineProperty(AdvancedMachineFeatures.prototype, "_threadsPerCore", {
                        get: $util.oneOfGetter($oneOfFields = ["threadsPerCore"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });
    
                    /**
                     * Creates a new AdvancedMachineFeatures instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.AdvancedMachineFeatures
                     * @static
                     * @param {google.container.v1.IAdvancedMachineFeatures=} [properties] Properties to set
                     * @returns {google.container.v1.AdvancedMachineFeatures} AdvancedMachineFeatures instance
                     */
                    AdvancedMachineFeatures.create = function create(properties) {
                        return new AdvancedMachineFeatures(properties);
                    };
    
                    /**
                     * Encodes the specified AdvancedMachineFeatures message. Does not implicitly {@link google.container.v1.AdvancedMachineFeatures.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.AdvancedMachineFeatures
                     * @static
                     * @param {google.container.v1.IAdvancedMachineFeatures} message AdvancedMachineFeatures message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AdvancedMachineFeatures.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.threadsPerCore != null && Object.hasOwnProperty.call(message, "threadsPerCore"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int64(message.threadsPerCore);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified AdvancedMachineFeatures message, length delimited. Does not implicitly {@link google.container.v1.AdvancedMachineFeatures.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.AdvancedMachineFeatures
                     * @static
                     * @param {google.container.v1.IAdvancedMachineFeatures} message AdvancedMachineFeatures message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AdvancedMachineFeatures.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an AdvancedMachineFeatures message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.AdvancedMachineFeatures
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.AdvancedMachineFeatures} AdvancedMachineFeatures
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AdvancedMachineFeatures.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.AdvancedMachineFeatures();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.threadsPerCore = reader.int64();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an AdvancedMachineFeatures message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.AdvancedMachineFeatures
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.AdvancedMachineFeatures} AdvancedMachineFeatures
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AdvancedMachineFeatures.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an AdvancedMachineFeatures message.
                     * @function verify
                     * @memberof google.container.v1.AdvancedMachineFeatures
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    AdvancedMachineFeatures.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        var properties = {};
                        if (message.threadsPerCore != null && message.hasOwnProperty("threadsPerCore")) {
                            properties._threadsPerCore = 1;
                            if (!$util.isInteger(message.threadsPerCore) && !(message.threadsPerCore && $util.isInteger(message.threadsPerCore.low) && $util.isInteger(message.threadsPerCore.high)))
                                return "threadsPerCore: integer|Long expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates an AdvancedMachineFeatures message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.AdvancedMachineFeatures
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.AdvancedMachineFeatures} AdvancedMachineFeatures
                     */
                    AdvancedMachineFeatures.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.AdvancedMachineFeatures)
                            return object;
                        var message = new $root.google.container.v1.AdvancedMachineFeatures();
                        if (object.threadsPerCore != null)
                            if ($util.Long)
                                (message.threadsPerCore = $util.Long.fromValue(object.threadsPerCore)).unsigned = false;
                            else if (typeof object.threadsPerCore === "string")
                                message.threadsPerCore = parseInt(object.threadsPerCore, 10);
                            else if (typeof object.threadsPerCore === "number")
                                message.threadsPerCore = object.threadsPerCore;
                            else if (typeof object.threadsPerCore === "object")
                                message.threadsPerCore = new $util.LongBits(object.threadsPerCore.low >>> 0, object.threadsPerCore.high >>> 0).toNumber();
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an AdvancedMachineFeatures message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.AdvancedMachineFeatures
                     * @static
                     * @param {google.container.v1.AdvancedMachineFeatures} message AdvancedMachineFeatures
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    AdvancedMachineFeatures.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (message.threadsPerCore != null && message.hasOwnProperty("threadsPerCore")) {
                            if (typeof message.threadsPerCore === "number")
                                object.threadsPerCore = options.longs === String ? String(message.threadsPerCore) : message.threadsPerCore;
                            else
                                object.threadsPerCore = options.longs === String ? $util.Long.prototype.toString.call(message.threadsPerCore) : options.longs === Number ? new $util.LongBits(message.threadsPerCore.low >>> 0, message.threadsPerCore.high >>> 0).toNumber() : message.threadsPerCore;
                            if (options.oneofs)
                                object._threadsPerCore = "threadsPerCore";
                        }
                        return object;
                    };
    
                    /**
                     * Converts this AdvancedMachineFeatures to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.AdvancedMachineFeatures
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    AdvancedMachineFeatures.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for AdvancedMachineFeatures
                     * @function getTypeUrl
                     * @memberof google.container.v1.AdvancedMachineFeatures
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    AdvancedMachineFeatures.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.AdvancedMachineFeatures";
                    };
    
                    return AdvancedMachineFeatures;
                })();
    
                v1.NodeNetworkConfig = (function() {
    
                    /**
                     * Properties of a NodeNetworkConfig.
                     * @memberof google.container.v1
                     * @interface INodeNetworkConfig
                     * @property {boolean|null} [createPodRange] NodeNetworkConfig createPodRange
                     * @property {string|null} [podRange] NodeNetworkConfig podRange
                     * @property {string|null} [podIpv4CidrBlock] NodeNetworkConfig podIpv4CidrBlock
                     * @property {boolean|null} [enablePrivateNodes] NodeNetworkConfig enablePrivateNodes
                     * @property {google.container.v1.NodeNetworkConfig.INetworkPerformanceConfig|null} [networkPerformanceConfig] NodeNetworkConfig networkPerformanceConfig
                     */
    
                    /**
                     * Constructs a new NodeNetworkConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a NodeNetworkConfig.
                     * @implements INodeNetworkConfig
                     * @constructor
                     * @param {google.container.v1.INodeNetworkConfig=} [properties] Properties to set
                     */
                    function NodeNetworkConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NodeNetworkConfig createPodRange.
                     * @member {boolean} createPodRange
                     * @memberof google.container.v1.NodeNetworkConfig
                     * @instance
                     */
                    NodeNetworkConfig.prototype.createPodRange = false;
    
                    /**
                     * NodeNetworkConfig podRange.
                     * @member {string} podRange
                     * @memberof google.container.v1.NodeNetworkConfig
                     * @instance
                     */
                    NodeNetworkConfig.prototype.podRange = "";
    
                    /**
                     * NodeNetworkConfig podIpv4CidrBlock.
                     * @member {string} podIpv4CidrBlock
                     * @memberof google.container.v1.NodeNetworkConfig
                     * @instance
                     */
                    NodeNetworkConfig.prototype.podIpv4CidrBlock = "";
    
                    /**
                     * NodeNetworkConfig enablePrivateNodes.
                     * @member {boolean|null|undefined} enablePrivateNodes
                     * @memberof google.container.v1.NodeNetworkConfig
                     * @instance
                     */
                    NodeNetworkConfig.prototype.enablePrivateNodes = null;
    
                    /**
                     * NodeNetworkConfig networkPerformanceConfig.
                     * @member {google.container.v1.NodeNetworkConfig.INetworkPerformanceConfig|null|undefined} networkPerformanceConfig
                     * @memberof google.container.v1.NodeNetworkConfig
                     * @instance
                     */
                    NodeNetworkConfig.prototype.networkPerformanceConfig = null;
    
                    // OneOf field names bound to virtual getters and setters
                    var $oneOfFields;
    
                    /**
                     * NodeNetworkConfig _enablePrivateNodes.
                     * @member {"enablePrivateNodes"|undefined} _enablePrivateNodes
                     * @memberof google.container.v1.NodeNetworkConfig
                     * @instance
                     */
                    Object.defineProperty(NodeNetworkConfig.prototype, "_enablePrivateNodes", {
                        get: $util.oneOfGetter($oneOfFields = ["enablePrivateNodes"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });
    
                    /**
                     * NodeNetworkConfig _networkPerformanceConfig.
                     * @member {"networkPerformanceConfig"|undefined} _networkPerformanceConfig
                     * @memberof google.container.v1.NodeNetworkConfig
                     * @instance
                     */
                    Object.defineProperty(NodeNetworkConfig.prototype, "_networkPerformanceConfig", {
                        get: $util.oneOfGetter($oneOfFields = ["networkPerformanceConfig"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });
    
                    /**
                     * Creates a new NodeNetworkConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.NodeNetworkConfig
                     * @static
                     * @param {google.container.v1.INodeNetworkConfig=} [properties] Properties to set
                     * @returns {google.container.v1.NodeNetworkConfig} NodeNetworkConfig instance
                     */
                    NodeNetworkConfig.create = function create(properties) {
                        return new NodeNetworkConfig(properties);
                    };
    
                    /**
                     * Encodes the specified NodeNetworkConfig message. Does not implicitly {@link google.container.v1.NodeNetworkConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.NodeNetworkConfig
                     * @static
                     * @param {google.container.v1.INodeNetworkConfig} message NodeNetworkConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NodeNetworkConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.createPodRange != null && Object.hasOwnProperty.call(message, "createPodRange"))
                            writer.uint32(/* id 4, wireType 0 =*/32).bool(message.createPodRange);
                        if (message.podRange != null && Object.hasOwnProperty.call(message, "podRange"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.podRange);
                        if (message.podIpv4CidrBlock != null && Object.hasOwnProperty.call(message, "podIpv4CidrBlock"))
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.podIpv4CidrBlock);
                        if (message.enablePrivateNodes != null && Object.hasOwnProperty.call(message, "enablePrivateNodes"))
                            writer.uint32(/* id 9, wireType 0 =*/72).bool(message.enablePrivateNodes);
                        if (message.networkPerformanceConfig != null && Object.hasOwnProperty.call(message, "networkPerformanceConfig"))
                            $root.google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig.encode(message.networkPerformanceConfig, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NodeNetworkConfig message, length delimited. Does not implicitly {@link google.container.v1.NodeNetworkConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.NodeNetworkConfig
                     * @static
                     * @param {google.container.v1.INodeNetworkConfig} message NodeNetworkConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NodeNetworkConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NodeNetworkConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.NodeNetworkConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.NodeNetworkConfig} NodeNetworkConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NodeNetworkConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.NodeNetworkConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 4: {
                                    message.createPodRange = reader.bool();
                                    break;
                                }
                            case 5: {
                                    message.podRange = reader.string();
                                    break;
                                }
                            case 6: {
                                    message.podIpv4CidrBlock = reader.string();
                                    break;
                                }
                            case 9: {
                                    message.enablePrivateNodes = reader.bool();
                                    break;
                                }
                            case 11: {
                                    message.networkPerformanceConfig = $root.google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a NodeNetworkConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.NodeNetworkConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.NodeNetworkConfig} NodeNetworkConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NodeNetworkConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NodeNetworkConfig message.
                     * @function verify
                     * @memberof google.container.v1.NodeNetworkConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NodeNetworkConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        var properties = {};
                        if (message.createPodRange != null && message.hasOwnProperty("createPodRange"))
                            if (typeof message.createPodRange !== "boolean")
                                return "createPodRange: boolean expected";
                        if (message.podRange != null && message.hasOwnProperty("podRange"))
                            if (!$util.isString(message.podRange))
                                return "podRange: string expected";
                        if (message.podIpv4CidrBlock != null && message.hasOwnProperty("podIpv4CidrBlock"))
                            if (!$util.isString(message.podIpv4CidrBlock))
                                return "podIpv4CidrBlock: string expected";
                        if (message.enablePrivateNodes != null && message.hasOwnProperty("enablePrivateNodes")) {
                            properties._enablePrivateNodes = 1;
                            if (typeof message.enablePrivateNodes !== "boolean")
                                return "enablePrivateNodes: boolean expected";
                        }
                        if (message.networkPerformanceConfig != null && message.hasOwnProperty("networkPerformanceConfig")) {
                            properties._networkPerformanceConfig = 1;
                            {
                                var error = $root.google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig.verify(message.networkPerformanceConfig);
                                if (error)
                                    return "networkPerformanceConfig." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a NodeNetworkConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.NodeNetworkConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.NodeNetworkConfig} NodeNetworkConfig
                     */
                    NodeNetworkConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.NodeNetworkConfig)
                            return object;
                        var message = new $root.google.container.v1.NodeNetworkConfig();
                        if (object.createPodRange != null)
                            message.createPodRange = Boolean(object.createPodRange);
                        if (object.podRange != null)
                            message.podRange = String(object.podRange);
                        if (object.podIpv4CidrBlock != null)
                            message.podIpv4CidrBlock = String(object.podIpv4CidrBlock);
                        if (object.enablePrivateNodes != null)
                            message.enablePrivateNodes = Boolean(object.enablePrivateNodes);
                        if (object.networkPerformanceConfig != null) {
                            if (typeof object.networkPerformanceConfig !== "object")
                                throw TypeError(".google.container.v1.NodeNetworkConfig.networkPerformanceConfig: object expected");
                            message.networkPerformanceConfig = $root.google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig.fromObject(object.networkPerformanceConfig);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NodeNetworkConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.NodeNetworkConfig
                     * @static
                     * @param {google.container.v1.NodeNetworkConfig} message NodeNetworkConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NodeNetworkConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.createPodRange = false;
                            object.podRange = "";
                            object.podIpv4CidrBlock = "";
                        }
                        if (message.createPodRange != null && message.hasOwnProperty("createPodRange"))
                            object.createPodRange = message.createPodRange;
                        if (message.podRange != null && message.hasOwnProperty("podRange"))
                            object.podRange = message.podRange;
                        if (message.podIpv4CidrBlock != null && message.hasOwnProperty("podIpv4CidrBlock"))
                            object.podIpv4CidrBlock = message.podIpv4CidrBlock;
                        if (message.enablePrivateNodes != null && message.hasOwnProperty("enablePrivateNodes")) {
                            object.enablePrivateNodes = message.enablePrivateNodes;
                            if (options.oneofs)
                                object._enablePrivateNodes = "enablePrivateNodes";
                        }
                        if (message.networkPerformanceConfig != null && message.hasOwnProperty("networkPerformanceConfig")) {
                            object.networkPerformanceConfig = $root.google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig.toObject(message.networkPerformanceConfig, options);
                            if (options.oneofs)
                                object._networkPerformanceConfig = "networkPerformanceConfig";
                        }
                        return object;
                    };
    
                    /**
                     * Converts this NodeNetworkConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.NodeNetworkConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NodeNetworkConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NodeNetworkConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.NodeNetworkConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NodeNetworkConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.NodeNetworkConfig";
                    };
    
                    NodeNetworkConfig.NetworkPerformanceConfig = (function() {
    
                        /**
                         * Properties of a NetworkPerformanceConfig.
                         * @memberof google.container.v1.NodeNetworkConfig
                         * @interface INetworkPerformanceConfig
                         * @property {google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig.Tier|null} [totalEgressBandwidthTier] NetworkPerformanceConfig totalEgressBandwidthTier
                         */
    
                        /**
                         * Constructs a new NetworkPerformanceConfig.
                         * @memberof google.container.v1.NodeNetworkConfig
                         * @classdesc Represents a NetworkPerformanceConfig.
                         * @implements INetworkPerformanceConfig
                         * @constructor
                         * @param {google.container.v1.NodeNetworkConfig.INetworkPerformanceConfig=} [properties] Properties to set
                         */
                        function NetworkPerformanceConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * NetworkPerformanceConfig totalEgressBandwidthTier.
                         * @member {google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig.Tier|null|undefined} totalEgressBandwidthTier
                         * @memberof google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig
                         * @instance
                         */
                        NetworkPerformanceConfig.prototype.totalEgressBandwidthTier = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * NetworkPerformanceConfig _totalEgressBandwidthTier.
                         * @member {"totalEgressBandwidthTier"|undefined} _totalEgressBandwidthTier
                         * @memberof google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig
                         * @instance
                         */
                        Object.defineProperty(NetworkPerformanceConfig.prototype, "_totalEgressBandwidthTier", {
                            get: $util.oneOfGetter($oneOfFields = ["totalEgressBandwidthTier"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new NetworkPerformanceConfig instance using the specified properties.
                         * @function create
                         * @memberof google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig
                         * @static
                         * @param {google.container.v1.NodeNetworkConfig.INetworkPerformanceConfig=} [properties] Properties to set
                         * @returns {google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig} NetworkPerformanceConfig instance
                         */
                        NetworkPerformanceConfig.create = function create(properties) {
                            return new NetworkPerformanceConfig(properties);
                        };
    
                        /**
                         * Encodes the specified NetworkPerformanceConfig message. Does not implicitly {@link google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig
                         * @static
                         * @param {google.container.v1.NodeNetworkConfig.INetworkPerformanceConfig} message NetworkPerformanceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NetworkPerformanceConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.totalEgressBandwidthTier != null && Object.hasOwnProperty.call(message, "totalEgressBandwidthTier"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.totalEgressBandwidthTier);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified NetworkPerformanceConfig message, length delimited. Does not implicitly {@link google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig
                         * @static
                         * @param {google.container.v1.NodeNetworkConfig.INetworkPerformanceConfig} message NetworkPerformanceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NetworkPerformanceConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a NetworkPerformanceConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig} NetworkPerformanceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NetworkPerformanceConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.totalEgressBandwidthTier = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a NetworkPerformanceConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig} NetworkPerformanceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NetworkPerformanceConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a NetworkPerformanceConfig message.
                         * @function verify
                         * @memberof google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        NetworkPerformanceConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.totalEgressBandwidthTier != null && message.hasOwnProperty("totalEgressBandwidthTier")) {
                                properties._totalEgressBandwidthTier = 1;
                                switch (message.totalEgressBandwidthTier) {
                                default:
                                    return "totalEgressBandwidthTier: enum value expected";
                                case 0:
                                case 1:
                                    break;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a NetworkPerformanceConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig} NetworkPerformanceConfig
                         */
                        NetworkPerformanceConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig)
                                return object;
                            var message = new $root.google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig();
                            switch (object.totalEgressBandwidthTier) {
                            default:
                                if (typeof object.totalEgressBandwidthTier === "number") {
                                    message.totalEgressBandwidthTier = object.totalEgressBandwidthTier;
                                    break;
                                }
                                break;
                            case "TIER_UNSPECIFIED":
                            case 0:
                                message.totalEgressBandwidthTier = 0;
                                break;
                            case "TIER_1":
                            case 1:
                                message.totalEgressBandwidthTier = 1;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a NetworkPerformanceConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig
                         * @static
                         * @param {google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig} message NetworkPerformanceConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        NetworkPerformanceConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.totalEgressBandwidthTier != null && message.hasOwnProperty("totalEgressBandwidthTier")) {
                                object.totalEgressBandwidthTier = options.enums === String ? $root.google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig.Tier[message.totalEgressBandwidthTier] === undefined ? message.totalEgressBandwidthTier : $root.google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig.Tier[message.totalEgressBandwidthTier] : message.totalEgressBandwidthTier;
                                if (options.oneofs)
                                    object._totalEgressBandwidthTier = "totalEgressBandwidthTier";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this NetworkPerformanceConfig to JSON.
                         * @function toJSON
                         * @memberof google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        NetworkPerformanceConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for NetworkPerformanceConfig
                         * @function getTypeUrl
                         * @memberof google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        NetworkPerformanceConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig";
                        };
    
                        /**
                         * Tier enum.
                         * @name google.container.v1.NodeNetworkConfig.NetworkPerformanceConfig.Tier
                         * @enum {number}
                         * @property {number} TIER_UNSPECIFIED=0 TIER_UNSPECIFIED value
                         * @property {number} TIER_1=1 TIER_1 value
                         */
                        NetworkPerformanceConfig.Tier = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "TIER_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "TIER_1"] = 1;
                            return values;
                        })();
    
                        return NetworkPerformanceConfig;
                    })();
    
                    return NodeNetworkConfig;
                })();
    
                v1.ShieldedInstanceConfig = (function() {
    
                    /**
                     * Properties of a ShieldedInstanceConfig.
                     * @memberof google.container.v1
                     * @interface IShieldedInstanceConfig
                     * @property {boolean|null} [enableSecureBoot] ShieldedInstanceConfig enableSecureBoot
                     * @property {boolean|null} [enableIntegrityMonitoring] ShieldedInstanceConfig enableIntegrityMonitoring
                     */
    
                    /**
                     * Constructs a new ShieldedInstanceConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a ShieldedInstanceConfig.
                     * @implements IShieldedInstanceConfig
                     * @constructor
                     * @param {google.container.v1.IShieldedInstanceConfig=} [properties] Properties to set
                     */
                    function ShieldedInstanceConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ShieldedInstanceConfig enableSecureBoot.
                     * @member {boolean} enableSecureBoot
                     * @memberof google.container.v1.ShieldedInstanceConfig
                     * @instance
                     */
                    ShieldedInstanceConfig.prototype.enableSecureBoot = false;
    
                    /**
                     * ShieldedInstanceConfig enableIntegrityMonitoring.
                     * @member {boolean} enableIntegrityMonitoring
                     * @memberof google.container.v1.ShieldedInstanceConfig
                     * @instance
                     */
                    ShieldedInstanceConfig.prototype.enableIntegrityMonitoring = false;
    
                    /**
                     * Creates a new ShieldedInstanceConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.ShieldedInstanceConfig
                     * @static
                     * @param {google.container.v1.IShieldedInstanceConfig=} [properties] Properties to set
                     * @returns {google.container.v1.ShieldedInstanceConfig} ShieldedInstanceConfig instance
                     */
                    ShieldedInstanceConfig.create = function create(properties) {
                        return new ShieldedInstanceConfig(properties);
                    };
    
                    /**
                     * Encodes the specified ShieldedInstanceConfig message. Does not implicitly {@link google.container.v1.ShieldedInstanceConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.ShieldedInstanceConfig
                     * @static
                     * @param {google.container.v1.IShieldedInstanceConfig} message ShieldedInstanceConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ShieldedInstanceConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.enableSecureBoot != null && Object.hasOwnProperty.call(message, "enableSecureBoot"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enableSecureBoot);
                        if (message.enableIntegrityMonitoring != null && Object.hasOwnProperty.call(message, "enableIntegrityMonitoring"))
                            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.enableIntegrityMonitoring);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ShieldedInstanceConfig message, length delimited. Does not implicitly {@link google.container.v1.ShieldedInstanceConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.ShieldedInstanceConfig
                     * @static
                     * @param {google.container.v1.IShieldedInstanceConfig} message ShieldedInstanceConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ShieldedInstanceConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ShieldedInstanceConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.ShieldedInstanceConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.ShieldedInstanceConfig} ShieldedInstanceConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ShieldedInstanceConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.ShieldedInstanceConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.enableSecureBoot = reader.bool();
                                    break;
                                }
                            case 2: {
                                    message.enableIntegrityMonitoring = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ShieldedInstanceConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.ShieldedInstanceConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.ShieldedInstanceConfig} ShieldedInstanceConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ShieldedInstanceConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ShieldedInstanceConfig message.
                     * @function verify
                     * @memberof google.container.v1.ShieldedInstanceConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ShieldedInstanceConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.enableSecureBoot != null && message.hasOwnProperty("enableSecureBoot"))
                            if (typeof message.enableSecureBoot !== "boolean")
                                return "enableSecureBoot: boolean expected";
                        if (message.enableIntegrityMonitoring != null && message.hasOwnProperty("enableIntegrityMonitoring"))
                            if (typeof message.enableIntegrityMonitoring !== "boolean")
                                return "enableIntegrityMonitoring: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a ShieldedInstanceConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.ShieldedInstanceConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.ShieldedInstanceConfig} ShieldedInstanceConfig
                     */
                    ShieldedInstanceConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.ShieldedInstanceConfig)
                            return object;
                        var message = new $root.google.container.v1.ShieldedInstanceConfig();
                        if (object.enableSecureBoot != null)
                            message.enableSecureBoot = Boolean(object.enableSecureBoot);
                        if (object.enableIntegrityMonitoring != null)
                            message.enableIntegrityMonitoring = Boolean(object.enableIntegrityMonitoring);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ShieldedInstanceConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.ShieldedInstanceConfig
                     * @static
                     * @param {google.container.v1.ShieldedInstanceConfig} message ShieldedInstanceConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ShieldedInstanceConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.enableSecureBoot = false;
                            object.enableIntegrityMonitoring = false;
                        }
                        if (message.enableSecureBoot != null && message.hasOwnProperty("enableSecureBoot"))
                            object.enableSecureBoot = message.enableSecureBoot;
                        if (message.enableIntegrityMonitoring != null && message.hasOwnProperty("enableIntegrityMonitoring"))
                            object.enableIntegrityMonitoring = message.enableIntegrityMonitoring;
                        return object;
                    };
    
                    /**
                     * Converts this ShieldedInstanceConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.ShieldedInstanceConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ShieldedInstanceConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ShieldedInstanceConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.ShieldedInstanceConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ShieldedInstanceConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.ShieldedInstanceConfig";
                    };
    
                    return ShieldedInstanceConfig;
                })();
    
                v1.SandboxConfig = (function() {
    
                    /**
                     * Properties of a SandboxConfig.
                     * @memberof google.container.v1
                     * @interface ISandboxConfig
                     * @property {google.container.v1.SandboxConfig.Type|null} [type] SandboxConfig type
                     */
    
                    /**
                     * Constructs a new SandboxConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a SandboxConfig.
                     * @implements ISandboxConfig
                     * @constructor
                     * @param {google.container.v1.ISandboxConfig=} [properties] Properties to set
                     */
                    function SandboxConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * SandboxConfig type.
                     * @member {google.container.v1.SandboxConfig.Type} type
                     * @memberof google.container.v1.SandboxConfig
                     * @instance
                     */
                    SandboxConfig.prototype.type = 0;
    
                    /**
                     * Creates a new SandboxConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.SandboxConfig
                     * @static
                     * @param {google.container.v1.ISandboxConfig=} [properties] Properties to set
                     * @returns {google.container.v1.SandboxConfig} SandboxConfig instance
                     */
                    SandboxConfig.create = function create(properties) {
                        return new SandboxConfig(properties);
                    };
    
                    /**
                     * Encodes the specified SandboxConfig message. Does not implicitly {@link google.container.v1.SandboxConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.SandboxConfig
                     * @static
                     * @param {google.container.v1.ISandboxConfig} message SandboxConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SandboxConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified SandboxConfig message, length delimited. Does not implicitly {@link google.container.v1.SandboxConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.SandboxConfig
                     * @static
                     * @param {google.container.v1.ISandboxConfig} message SandboxConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SandboxConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a SandboxConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.SandboxConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.SandboxConfig} SandboxConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SandboxConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.SandboxConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 2: {
                                    message.type = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a SandboxConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.SandboxConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.SandboxConfig} SandboxConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SandboxConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a SandboxConfig message.
                     * @function verify
                     * @memberof google.container.v1.SandboxConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    SandboxConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.type != null && message.hasOwnProperty("type"))
                            switch (message.type) {
                            default:
                                return "type: enum value expected";
                            case 0:
                            case 1:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates a SandboxConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.SandboxConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.SandboxConfig} SandboxConfig
                     */
                    SandboxConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.SandboxConfig)
                            return object;
                        var message = new $root.google.container.v1.SandboxConfig();
                        switch (object.type) {
                        default:
                            if (typeof object.type === "number") {
                                message.type = object.type;
                                break;
                            }
                            break;
                        case "UNSPECIFIED":
                        case 0:
                            message.type = 0;
                            break;
                        case "GVISOR":
                        case 1:
                            message.type = 1;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a SandboxConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.SandboxConfig
                     * @static
                     * @param {google.container.v1.SandboxConfig} message SandboxConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    SandboxConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.type = options.enums === String ? "UNSPECIFIED" : 0;
                        if (message.type != null && message.hasOwnProperty("type"))
                            object.type = options.enums === String ? $root.google.container.v1.SandboxConfig.Type[message.type] === undefined ? message.type : $root.google.container.v1.SandboxConfig.Type[message.type] : message.type;
                        return object;
                    };
    
                    /**
                     * Converts this SandboxConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.SandboxConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    SandboxConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for SandboxConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.SandboxConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    SandboxConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.SandboxConfig";
                    };
    
                    /**
                     * Type enum.
                     * @name google.container.v1.SandboxConfig.Type
                     * @enum {number}
                     * @property {number} UNSPECIFIED=0 UNSPECIFIED value
                     * @property {number} GVISOR=1 GVISOR value
                     */
                    SandboxConfig.Type = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "UNSPECIFIED"] = 0;
                        values[valuesById[1] = "GVISOR"] = 1;
                        return values;
                    })();
    
                    return SandboxConfig;
                })();
    
                v1.GcfsConfig = (function() {
    
                    /**
                     * Properties of a GcfsConfig.
                     * @memberof google.container.v1
                     * @interface IGcfsConfig
                     * @property {boolean|null} [enabled] GcfsConfig enabled
                     */
    
                    /**
                     * Constructs a new GcfsConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a GcfsConfig.
                     * @implements IGcfsConfig
                     * @constructor
                     * @param {google.container.v1.IGcfsConfig=} [properties] Properties to set
                     */
                    function GcfsConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GcfsConfig enabled.
                     * @member {boolean} enabled
                     * @memberof google.container.v1.GcfsConfig
                     * @instance
                     */
                    GcfsConfig.prototype.enabled = false;
    
                    /**
                     * Creates a new GcfsConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.GcfsConfig
                     * @static
                     * @param {google.container.v1.IGcfsConfig=} [properties] Properties to set
                     * @returns {google.container.v1.GcfsConfig} GcfsConfig instance
                     */
                    GcfsConfig.create = function create(properties) {
                        return new GcfsConfig(properties);
                    };
    
                    /**
                     * Encodes the specified GcfsConfig message. Does not implicitly {@link google.container.v1.GcfsConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.GcfsConfig
                     * @static
                     * @param {google.container.v1.IGcfsConfig} message GcfsConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GcfsConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GcfsConfig message, length delimited. Does not implicitly {@link google.container.v1.GcfsConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.GcfsConfig
                     * @static
                     * @param {google.container.v1.IGcfsConfig} message GcfsConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GcfsConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GcfsConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.GcfsConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.GcfsConfig} GcfsConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GcfsConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.GcfsConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.enabled = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GcfsConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.GcfsConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.GcfsConfig} GcfsConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GcfsConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GcfsConfig message.
                     * @function verify
                     * @memberof google.container.v1.GcfsConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GcfsConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            if (typeof message.enabled !== "boolean")
                                return "enabled: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a GcfsConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.GcfsConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.GcfsConfig} GcfsConfig
                     */
                    GcfsConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.GcfsConfig)
                            return object;
                        var message = new $root.google.container.v1.GcfsConfig();
                        if (object.enabled != null)
                            message.enabled = Boolean(object.enabled);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GcfsConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.GcfsConfig
                     * @static
                     * @param {google.container.v1.GcfsConfig} message GcfsConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GcfsConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.enabled = false;
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            object.enabled = message.enabled;
                        return object;
                    };
    
                    /**
                     * Converts this GcfsConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.GcfsConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GcfsConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GcfsConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.GcfsConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GcfsConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.GcfsConfig";
                    };
    
                    return GcfsConfig;
                })();
    
                v1.ReservationAffinity = (function() {
    
                    /**
                     * Properties of a ReservationAffinity.
                     * @memberof google.container.v1
                     * @interface IReservationAffinity
                     * @property {google.container.v1.ReservationAffinity.Type|null} [consumeReservationType] ReservationAffinity consumeReservationType
                     * @property {string|null} [key] ReservationAffinity key
                     * @property {Array.<string>|null} [values] ReservationAffinity values
                     */
    
                    /**
                     * Constructs a new ReservationAffinity.
                     * @memberof google.container.v1
                     * @classdesc Represents a ReservationAffinity.
                     * @implements IReservationAffinity
                     * @constructor
                     * @param {google.container.v1.IReservationAffinity=} [properties] Properties to set
                     */
                    function ReservationAffinity(properties) {
                        this.values = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservationAffinity consumeReservationType.
                     * @member {google.container.v1.ReservationAffinity.Type} consumeReservationType
                     * @memberof google.container.v1.ReservationAffinity
                     * @instance
                     */
                    ReservationAffinity.prototype.consumeReservationType = 0;
    
                    /**
                     * ReservationAffinity key.
                     * @member {string} key
                     * @memberof google.container.v1.ReservationAffinity
                     * @instance
                     */
                    ReservationAffinity.prototype.key = "";
    
                    /**
                     * ReservationAffinity values.
                     * @member {Array.<string>} values
                     * @memberof google.container.v1.ReservationAffinity
                     * @instance
                     */
                    ReservationAffinity.prototype.values = $util.emptyArray;
    
                    /**
                     * Creates a new ReservationAffinity instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.ReservationAffinity
                     * @static
                     * @param {google.container.v1.IReservationAffinity=} [properties] Properties to set
                     * @returns {google.container.v1.ReservationAffinity} ReservationAffinity instance
                     */
                    ReservationAffinity.create = function create(properties) {
                        return new ReservationAffinity(properties);
                    };
    
                    /**
                     * Encodes the specified ReservationAffinity message. Does not implicitly {@link google.container.v1.ReservationAffinity.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.ReservationAffinity
                     * @static
                     * @param {google.container.v1.IReservationAffinity} message ReservationAffinity message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservationAffinity.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.consumeReservationType != null && Object.hasOwnProperty.call(message, "consumeReservationType"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.consumeReservationType);
                        if (message.key != null && Object.hasOwnProperty.call(message, "key"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.key);
                        if (message.values != null && message.values.length)
                            for (var i = 0; i < message.values.length; ++i)
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.values[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservationAffinity message, length delimited. Does not implicitly {@link google.container.v1.ReservationAffinity.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.ReservationAffinity
                     * @static
                     * @param {google.container.v1.IReservationAffinity} message ReservationAffinity message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservationAffinity.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservationAffinity message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.ReservationAffinity
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.ReservationAffinity} ReservationAffinity
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservationAffinity.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.ReservationAffinity();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.consumeReservationType = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.key = reader.string();
                                    break;
                                }
                            case 3: {
                                    if (!(message.values && message.values.length))
                                        message.values = [];
                                    message.values.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservationAffinity message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.ReservationAffinity
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.ReservationAffinity} ReservationAffinity
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservationAffinity.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservationAffinity message.
                     * @function verify
                     * @memberof google.container.v1.ReservationAffinity
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservationAffinity.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.consumeReservationType != null && message.hasOwnProperty("consumeReservationType"))
                            switch (message.consumeReservationType) {
                            default:
                                return "consumeReservationType: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                                break;
                            }
                        if (message.key != null && message.hasOwnProperty("key"))
                            if (!$util.isString(message.key))
                                return "key: string expected";
                        if (message.values != null && message.hasOwnProperty("values")) {
                            if (!Array.isArray(message.values))
                                return "values: array expected";
                            for (var i = 0; i < message.values.length; ++i)
                                if (!$util.isString(message.values[i]))
                                    return "values: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a ReservationAffinity message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.ReservationAffinity
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.ReservationAffinity} ReservationAffinity
                     */
                    ReservationAffinity.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.ReservationAffinity)
                            return object;
                        var message = new $root.google.container.v1.ReservationAffinity();
                        switch (object.consumeReservationType) {
                        default:
                            if (typeof object.consumeReservationType === "number") {
                                message.consumeReservationType = object.consumeReservationType;
                                break;
                            }
                            break;
                        case "UNSPECIFIED":
                        case 0:
                            message.consumeReservationType = 0;
                            break;
                        case "NO_RESERVATION":
                        case 1:
                            message.consumeReservationType = 1;
                            break;
                        case "ANY_RESERVATION":
                        case 2:
                            message.consumeReservationType = 2;
                            break;
                        case "SPECIFIC_RESERVATION":
                        case 3:
                            message.consumeReservationType = 3;
                            break;
                        }
                        if (object.key != null)
                            message.key = String(object.key);
                        if (object.values) {
                            if (!Array.isArray(object.values))
                                throw TypeError(".google.container.v1.ReservationAffinity.values: array expected");
                            message.values = [];
                            for (var i = 0; i < object.values.length; ++i)
                                message.values[i] = String(object.values[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservationAffinity message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.ReservationAffinity
                     * @static
                     * @param {google.container.v1.ReservationAffinity} message ReservationAffinity
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservationAffinity.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.values = [];
                        if (options.defaults) {
                            object.consumeReservationType = options.enums === String ? "UNSPECIFIED" : 0;
                            object.key = "";
                        }
                        if (message.consumeReservationType != null && message.hasOwnProperty("consumeReservationType"))
                            object.consumeReservationType = options.enums === String ? $root.google.container.v1.ReservationAffinity.Type[message.consumeReservationType] === undefined ? message.consumeReservationType : $root.google.container.v1.ReservationAffinity.Type[message.consumeReservationType] : message.consumeReservationType;
                        if (message.key != null && message.hasOwnProperty("key"))
                            object.key = message.key;
                        if (message.values && message.values.length) {
                            object.values = [];
                            for (var j = 0; j < message.values.length; ++j)
                                object.values[j] = message.values[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this ReservationAffinity to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.ReservationAffinity
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservationAffinity.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ReservationAffinity
                     * @function getTypeUrl
                     * @memberof google.container.v1.ReservationAffinity
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ReservationAffinity.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.ReservationAffinity";
                    };
    
                    /**
                     * Type enum.
                     * @name google.container.v1.ReservationAffinity.Type
                     * @enum {number}
                     * @property {number} UNSPECIFIED=0 UNSPECIFIED value
                     * @property {number} NO_RESERVATION=1 NO_RESERVATION value
                     * @property {number} ANY_RESERVATION=2 ANY_RESERVATION value
                     * @property {number} SPECIFIC_RESERVATION=3 SPECIFIC_RESERVATION value
                     */
                    ReservationAffinity.Type = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "UNSPECIFIED"] = 0;
                        values[valuesById[1] = "NO_RESERVATION"] = 1;
                        values[valuesById[2] = "ANY_RESERVATION"] = 2;
                        values[valuesById[3] = "SPECIFIC_RESERVATION"] = 3;
                        return values;
                    })();
    
                    return ReservationAffinity;
                })();
    
                v1.NodeTaint = (function() {
    
                    /**
                     * Properties of a NodeTaint.
                     * @memberof google.container.v1
                     * @interface INodeTaint
                     * @property {string|null} [key] NodeTaint key
                     * @property {string|null} [value] NodeTaint value
                     * @property {google.container.v1.NodeTaint.Effect|null} [effect] NodeTaint effect
                     */
    
                    /**
                     * Constructs a new NodeTaint.
                     * @memberof google.container.v1
                     * @classdesc Represents a NodeTaint.
                     * @implements INodeTaint
                     * @constructor
                     * @param {google.container.v1.INodeTaint=} [properties] Properties to set
                     */
                    function NodeTaint(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NodeTaint key.
                     * @member {string} key
                     * @memberof google.container.v1.NodeTaint
                     * @instance
                     */
                    NodeTaint.prototype.key = "";
    
                    /**
                     * NodeTaint value.
                     * @member {string} value
                     * @memberof google.container.v1.NodeTaint
                     * @instance
                     */
                    NodeTaint.prototype.value = "";
    
                    /**
                     * NodeTaint effect.
                     * @member {google.container.v1.NodeTaint.Effect} effect
                     * @memberof google.container.v1.NodeTaint
                     * @instance
                     */
                    NodeTaint.prototype.effect = 0;
    
                    /**
                     * Creates a new NodeTaint instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.NodeTaint
                     * @static
                     * @param {google.container.v1.INodeTaint=} [properties] Properties to set
                     * @returns {google.container.v1.NodeTaint} NodeTaint instance
                     */
                    NodeTaint.create = function create(properties) {
                        return new NodeTaint(properties);
                    };
    
                    /**
                     * Encodes the specified NodeTaint message. Does not implicitly {@link google.container.v1.NodeTaint.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.NodeTaint
                     * @static
                     * @param {google.container.v1.INodeTaint} message NodeTaint message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NodeTaint.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.key != null && Object.hasOwnProperty.call(message, "key"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);
                        if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
                        if (message.effect != null && Object.hasOwnProperty.call(message, "effect"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.effect);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NodeTaint message, length delimited. Does not implicitly {@link google.container.v1.NodeTaint.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.NodeTaint
                     * @static
                     * @param {google.container.v1.INodeTaint} message NodeTaint message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NodeTaint.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NodeTaint message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.NodeTaint
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.NodeTaint} NodeTaint
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NodeTaint.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.NodeTaint();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.key = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.value = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.effect = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a NodeTaint message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.NodeTaint
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.NodeTaint} NodeTaint
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NodeTaint.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NodeTaint message.
                     * @function verify
                     * @memberof google.container.v1.NodeTaint
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NodeTaint.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.key != null && message.hasOwnProperty("key"))
                            if (!$util.isString(message.key))
                                return "key: string expected";
                        if (message.value != null && message.hasOwnProperty("value"))
                            if (!$util.isString(message.value))
                                return "value: string expected";
                        if (message.effect != null && message.hasOwnProperty("effect"))
                            switch (message.effect) {
                            default:
                                return "effect: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates a NodeTaint message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.NodeTaint
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.NodeTaint} NodeTaint
                     */
                    NodeTaint.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.NodeTaint)
                            return object;
                        var message = new $root.google.container.v1.NodeTaint();
                        if (object.key != null)
                            message.key = String(object.key);
                        if (object.value != null)
                            message.value = String(object.value);
                        switch (object.effect) {
                        default:
                            if (typeof object.effect === "number") {
                                message.effect = object.effect;
                                break;
                            }
                            break;
                        case "EFFECT_UNSPECIFIED":
                        case 0:
                            message.effect = 0;
                            break;
                        case "NO_SCHEDULE":
                        case 1:
                            message.effect = 1;
                            break;
                        case "PREFER_NO_SCHEDULE":
                        case 2:
                            message.effect = 2;
                            break;
                        case "NO_EXECUTE":
                        case 3:
                            message.effect = 3;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NodeTaint message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.NodeTaint
                     * @static
                     * @param {google.container.v1.NodeTaint} message NodeTaint
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NodeTaint.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.key = "";
                            object.value = "";
                            object.effect = options.enums === String ? "EFFECT_UNSPECIFIED" : 0;
                        }
                        if (message.key != null && message.hasOwnProperty("key"))
                            object.key = message.key;
                        if (message.value != null && message.hasOwnProperty("value"))
                            object.value = message.value;
                        if (message.effect != null && message.hasOwnProperty("effect"))
                            object.effect = options.enums === String ? $root.google.container.v1.NodeTaint.Effect[message.effect] === undefined ? message.effect : $root.google.container.v1.NodeTaint.Effect[message.effect] : message.effect;
                        return object;
                    };
    
                    /**
                     * Converts this NodeTaint to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.NodeTaint
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NodeTaint.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NodeTaint
                     * @function getTypeUrl
                     * @memberof google.container.v1.NodeTaint
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NodeTaint.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.NodeTaint";
                    };
    
                    /**
                     * Effect enum.
                     * @name google.container.v1.NodeTaint.Effect
                     * @enum {number}
                     * @property {number} EFFECT_UNSPECIFIED=0 EFFECT_UNSPECIFIED value
                     * @property {number} NO_SCHEDULE=1 NO_SCHEDULE value
                     * @property {number} PREFER_NO_SCHEDULE=2 PREFER_NO_SCHEDULE value
                     * @property {number} NO_EXECUTE=3 NO_EXECUTE value
                     */
                    NodeTaint.Effect = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "EFFECT_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "NO_SCHEDULE"] = 1;
                        values[valuesById[2] = "PREFER_NO_SCHEDULE"] = 2;
                        values[valuesById[3] = "NO_EXECUTE"] = 3;
                        return values;
                    })();
    
                    return NodeTaint;
                })();
    
                v1.NodeTaints = (function() {
    
                    /**
                     * Properties of a NodeTaints.
                     * @memberof google.container.v1
                     * @interface INodeTaints
                     * @property {Array.<google.container.v1.INodeTaint>|null} [taints] NodeTaints taints
                     */
    
                    /**
                     * Constructs a new NodeTaints.
                     * @memberof google.container.v1
                     * @classdesc Represents a NodeTaints.
                     * @implements INodeTaints
                     * @constructor
                     * @param {google.container.v1.INodeTaints=} [properties] Properties to set
                     */
                    function NodeTaints(properties) {
                        this.taints = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NodeTaints taints.
                     * @member {Array.<google.container.v1.INodeTaint>} taints
                     * @memberof google.container.v1.NodeTaints
                     * @instance
                     */
                    NodeTaints.prototype.taints = $util.emptyArray;
    
                    /**
                     * Creates a new NodeTaints instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.NodeTaints
                     * @static
                     * @param {google.container.v1.INodeTaints=} [properties] Properties to set
                     * @returns {google.container.v1.NodeTaints} NodeTaints instance
                     */
                    NodeTaints.create = function create(properties) {
                        return new NodeTaints(properties);
                    };
    
                    /**
                     * Encodes the specified NodeTaints message. Does not implicitly {@link google.container.v1.NodeTaints.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.NodeTaints
                     * @static
                     * @param {google.container.v1.INodeTaints} message NodeTaints message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NodeTaints.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.taints != null && message.taints.length)
                            for (var i = 0; i < message.taints.length; ++i)
                                $root.google.container.v1.NodeTaint.encode(message.taints[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NodeTaints message, length delimited. Does not implicitly {@link google.container.v1.NodeTaints.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.NodeTaints
                     * @static
                     * @param {google.container.v1.INodeTaints} message NodeTaints message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NodeTaints.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NodeTaints message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.NodeTaints
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.NodeTaints} NodeTaints
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NodeTaints.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.NodeTaints();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.taints && message.taints.length))
                                        message.taints = [];
                                    message.taints.push($root.google.container.v1.NodeTaint.decode(reader, reader.uint32()));
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a NodeTaints message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.NodeTaints
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.NodeTaints} NodeTaints
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NodeTaints.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NodeTaints message.
                     * @function verify
                     * @memberof google.container.v1.NodeTaints
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NodeTaints.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.taints != null && message.hasOwnProperty("taints")) {
                            if (!Array.isArray(message.taints))
                                return "taints: array expected";
                            for (var i = 0; i < message.taints.length; ++i) {
                                var error = $root.google.container.v1.NodeTaint.verify(message.taints[i]);
                                if (error)
                                    return "taints." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a NodeTaints message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.NodeTaints
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.NodeTaints} NodeTaints
                     */
                    NodeTaints.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.NodeTaints)
                            return object;
                        var message = new $root.google.container.v1.NodeTaints();
                        if (object.taints) {
                            if (!Array.isArray(object.taints))
                                throw TypeError(".google.container.v1.NodeTaints.taints: array expected");
                            message.taints = [];
                            for (var i = 0; i < object.taints.length; ++i) {
                                if (typeof object.taints[i] !== "object")
                                    throw TypeError(".google.container.v1.NodeTaints.taints: object expected");
                                message.taints[i] = $root.google.container.v1.NodeTaint.fromObject(object.taints[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NodeTaints message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.NodeTaints
                     * @static
                     * @param {google.container.v1.NodeTaints} message NodeTaints
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NodeTaints.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.taints = [];
                        if (message.taints && message.taints.length) {
                            object.taints = [];
                            for (var j = 0; j < message.taints.length; ++j)
                                object.taints[j] = $root.google.container.v1.NodeTaint.toObject(message.taints[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this NodeTaints to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.NodeTaints
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NodeTaints.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NodeTaints
                     * @function getTypeUrl
                     * @memberof google.container.v1.NodeTaints
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NodeTaints.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.NodeTaints";
                    };
    
                    return NodeTaints;
                })();
    
                v1.NodeLabels = (function() {
    
                    /**
                     * Properties of a NodeLabels.
                     * @memberof google.container.v1
                     * @interface INodeLabels
                     * @property {Object.<string,string>|null} [labels] NodeLabels labels
                     */
    
                    /**
                     * Constructs a new NodeLabels.
                     * @memberof google.container.v1
                     * @classdesc Represents a NodeLabels.
                     * @implements INodeLabels
                     * @constructor
                     * @param {google.container.v1.INodeLabels=} [properties] Properties to set
                     */
                    function NodeLabels(properties) {
                        this.labels = {};
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NodeLabels labels.
                     * @member {Object.<string,string>} labels
                     * @memberof google.container.v1.NodeLabels
                     * @instance
                     */
                    NodeLabels.prototype.labels = $util.emptyObject;
    
                    /**
                     * Creates a new NodeLabels instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.NodeLabels
                     * @static
                     * @param {google.container.v1.INodeLabels=} [properties] Properties to set
                     * @returns {google.container.v1.NodeLabels} NodeLabels instance
                     */
                    NodeLabels.create = function create(properties) {
                        return new NodeLabels(properties);
                    };
    
                    /**
                     * Encodes the specified NodeLabels message. Does not implicitly {@link google.container.v1.NodeLabels.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.NodeLabels
                     * @static
                     * @param {google.container.v1.INodeLabels} message NodeLabels message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NodeLabels.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                            for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NodeLabels message, length delimited. Does not implicitly {@link google.container.v1.NodeLabels.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.NodeLabels
                     * @static
                     * @param {google.container.v1.INodeLabels} message NodeLabels message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NodeLabels.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NodeLabels message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.NodeLabels
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.NodeLabels} NodeLabels
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NodeLabels.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.NodeLabels(), key, value;
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (message.labels === $util.emptyObject)
                                        message.labels = {};
                                    var end2 = reader.uint32() + reader.pos;
                                    key = "";
                                    value = "";
                                    while (reader.pos < end2) {
                                        var tag2 = reader.uint32();
                                        switch (tag2 >>> 3) {
                                        case 1:
                                            key = reader.string();
                                            break;
                                        case 2:
                                            value = reader.string();
                                            break;
                                        default:
                                            reader.skipType(tag2 & 7);
                                            break;
                                        }
                                    }
                                    message.labels[key] = value;
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a NodeLabels message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.NodeLabels
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.NodeLabels} NodeLabels
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NodeLabels.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NodeLabels message.
                     * @function verify
                     * @memberof google.container.v1.NodeLabels
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NodeLabels.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.labels != null && message.hasOwnProperty("labels")) {
                            if (!$util.isObject(message.labels))
                                return "labels: object expected";
                            var key = Object.keys(message.labels);
                            for (var i = 0; i < key.length; ++i)
                                if (!$util.isString(message.labels[key[i]]))
                                    return "labels: string{k:string} expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a NodeLabels message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.NodeLabels
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.NodeLabels} NodeLabels
                     */
                    NodeLabels.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.NodeLabels)
                            return object;
                        var message = new $root.google.container.v1.NodeLabels();
                        if (object.labels) {
                            if (typeof object.labels !== "object")
                                throw TypeError(".google.container.v1.NodeLabels.labels: object expected");
                            message.labels = {};
                            for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                message.labels[keys[i]] = String(object.labels[keys[i]]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NodeLabels message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.NodeLabels
                     * @static
                     * @param {google.container.v1.NodeLabels} message NodeLabels
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NodeLabels.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.objects || options.defaults)
                            object.labels = {};
                        var keys2;
                        if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                            object.labels = {};
                            for (var j = 0; j < keys2.length; ++j)
                                object.labels[keys2[j]] = message.labels[keys2[j]];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this NodeLabels to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.NodeLabels
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NodeLabels.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NodeLabels
                     * @function getTypeUrl
                     * @memberof google.container.v1.NodeLabels
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NodeLabels.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.NodeLabels";
                    };
    
                    return NodeLabels;
                })();
    
                v1.ResourceLabels = (function() {
    
                    /**
                     * Properties of a ResourceLabels.
                     * @memberof google.container.v1
                     * @interface IResourceLabels
                     * @property {Object.<string,string>|null} [labels] ResourceLabels labels
                     */
    
                    /**
                     * Constructs a new ResourceLabels.
                     * @memberof google.container.v1
                     * @classdesc Represents a ResourceLabels.
                     * @implements IResourceLabels
                     * @constructor
                     * @param {google.container.v1.IResourceLabels=} [properties] Properties to set
                     */
                    function ResourceLabels(properties) {
                        this.labels = {};
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ResourceLabels labels.
                     * @member {Object.<string,string>} labels
                     * @memberof google.container.v1.ResourceLabels
                     * @instance
                     */
                    ResourceLabels.prototype.labels = $util.emptyObject;
    
                    /**
                     * Creates a new ResourceLabels instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.ResourceLabels
                     * @static
                     * @param {google.container.v1.IResourceLabels=} [properties] Properties to set
                     * @returns {google.container.v1.ResourceLabels} ResourceLabels instance
                     */
                    ResourceLabels.create = function create(properties) {
                        return new ResourceLabels(properties);
                    };
    
                    /**
                     * Encodes the specified ResourceLabels message. Does not implicitly {@link google.container.v1.ResourceLabels.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.ResourceLabels
                     * @static
                     * @param {google.container.v1.IResourceLabels} message ResourceLabels message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ResourceLabels.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                            for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ResourceLabels message, length delimited. Does not implicitly {@link google.container.v1.ResourceLabels.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.ResourceLabels
                     * @static
                     * @param {google.container.v1.IResourceLabels} message ResourceLabels message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ResourceLabels.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ResourceLabels message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.ResourceLabels
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.ResourceLabels} ResourceLabels
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ResourceLabels.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.ResourceLabels(), key, value;
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (message.labels === $util.emptyObject)
                                        message.labels = {};
                                    var end2 = reader.uint32() + reader.pos;
                                    key = "";
                                    value = "";
                                    while (reader.pos < end2) {
                                        var tag2 = reader.uint32();
                                        switch (tag2 >>> 3) {
                                        case 1:
                                            key = reader.string();
                                            break;
                                        case 2:
                                            value = reader.string();
                                            break;
                                        default:
                                            reader.skipType(tag2 & 7);
                                            break;
                                        }
                                    }
                                    message.labels[key] = value;
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ResourceLabels message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.ResourceLabels
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.ResourceLabels} ResourceLabels
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ResourceLabels.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ResourceLabels message.
                     * @function verify
                     * @memberof google.container.v1.ResourceLabels
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ResourceLabels.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.labels != null && message.hasOwnProperty("labels")) {
                            if (!$util.isObject(message.labels))
                                return "labels: object expected";
                            var key = Object.keys(message.labels);
                            for (var i = 0; i < key.length; ++i)
                                if (!$util.isString(message.labels[key[i]]))
                                    return "labels: string{k:string} expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a ResourceLabels message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.ResourceLabels
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.ResourceLabels} ResourceLabels
                     */
                    ResourceLabels.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.ResourceLabels)
                            return object;
                        var message = new $root.google.container.v1.ResourceLabels();
                        if (object.labels) {
                            if (typeof object.labels !== "object")
                                throw TypeError(".google.container.v1.ResourceLabels.labels: object expected");
                            message.labels = {};
                            for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                message.labels[keys[i]] = String(object.labels[keys[i]]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ResourceLabels message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.ResourceLabels
                     * @static
                     * @param {google.container.v1.ResourceLabels} message ResourceLabels
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ResourceLabels.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.objects || options.defaults)
                            object.labels = {};
                        var keys2;
                        if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                            object.labels = {};
                            for (var j = 0; j < keys2.length; ++j)
                                object.labels[keys2[j]] = message.labels[keys2[j]];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this ResourceLabels to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.ResourceLabels
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ResourceLabels.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ResourceLabels
                     * @function getTypeUrl
                     * @memberof google.container.v1.ResourceLabels
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ResourceLabels.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.ResourceLabels";
                    };
    
                    return ResourceLabels;
                })();
    
                v1.NetworkTags = (function() {
    
                    /**
                     * Properties of a NetworkTags.
                     * @memberof google.container.v1
                     * @interface INetworkTags
                     * @property {Array.<string>|null} [tags] NetworkTags tags
                     */
    
                    /**
                     * Constructs a new NetworkTags.
                     * @memberof google.container.v1
                     * @classdesc Represents a NetworkTags.
                     * @implements INetworkTags
                     * @constructor
                     * @param {google.container.v1.INetworkTags=} [properties] Properties to set
                     */
                    function NetworkTags(properties) {
                        this.tags = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NetworkTags tags.
                     * @member {Array.<string>} tags
                     * @memberof google.container.v1.NetworkTags
                     * @instance
                     */
                    NetworkTags.prototype.tags = $util.emptyArray;
    
                    /**
                     * Creates a new NetworkTags instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.NetworkTags
                     * @static
                     * @param {google.container.v1.INetworkTags=} [properties] Properties to set
                     * @returns {google.container.v1.NetworkTags} NetworkTags instance
                     */
                    NetworkTags.create = function create(properties) {
                        return new NetworkTags(properties);
                    };
    
                    /**
                     * Encodes the specified NetworkTags message. Does not implicitly {@link google.container.v1.NetworkTags.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.NetworkTags
                     * @static
                     * @param {google.container.v1.INetworkTags} message NetworkTags message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NetworkTags.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.tags != null && message.tags.length)
                            for (var i = 0; i < message.tags.length; ++i)
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.tags[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NetworkTags message, length delimited. Does not implicitly {@link google.container.v1.NetworkTags.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.NetworkTags
                     * @static
                     * @param {google.container.v1.INetworkTags} message NetworkTags message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NetworkTags.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NetworkTags message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.NetworkTags
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.NetworkTags} NetworkTags
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NetworkTags.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.NetworkTags();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.tags && message.tags.length))
                                        message.tags = [];
                                    message.tags.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a NetworkTags message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.NetworkTags
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.NetworkTags} NetworkTags
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NetworkTags.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NetworkTags message.
                     * @function verify
                     * @memberof google.container.v1.NetworkTags
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NetworkTags.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.tags != null && message.hasOwnProperty("tags")) {
                            if (!Array.isArray(message.tags))
                                return "tags: array expected";
                            for (var i = 0; i < message.tags.length; ++i)
                                if (!$util.isString(message.tags[i]))
                                    return "tags: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a NetworkTags message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.NetworkTags
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.NetworkTags} NetworkTags
                     */
                    NetworkTags.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.NetworkTags)
                            return object;
                        var message = new $root.google.container.v1.NetworkTags();
                        if (object.tags) {
                            if (!Array.isArray(object.tags))
                                throw TypeError(".google.container.v1.NetworkTags.tags: array expected");
                            message.tags = [];
                            for (var i = 0; i < object.tags.length; ++i)
                                message.tags[i] = String(object.tags[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NetworkTags message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.NetworkTags
                     * @static
                     * @param {google.container.v1.NetworkTags} message NetworkTags
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NetworkTags.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.tags = [];
                        if (message.tags && message.tags.length) {
                            object.tags = [];
                            for (var j = 0; j < message.tags.length; ++j)
                                object.tags[j] = message.tags[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this NetworkTags to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.NetworkTags
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NetworkTags.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NetworkTags
                     * @function getTypeUrl
                     * @memberof google.container.v1.NetworkTags
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NetworkTags.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.NetworkTags";
                    };
    
                    return NetworkTags;
                })();
    
                v1.MasterAuth = (function() {
    
                    /**
                     * Properties of a MasterAuth.
                     * @memberof google.container.v1
                     * @interface IMasterAuth
                     * @property {string|null} [username] MasterAuth username
                     * @property {string|null} [password] MasterAuth password
                     * @property {google.container.v1.IClientCertificateConfig|null} [clientCertificateConfig] MasterAuth clientCertificateConfig
                     * @property {string|null} [clusterCaCertificate] MasterAuth clusterCaCertificate
                     * @property {string|null} [clientCertificate] MasterAuth clientCertificate
                     * @property {string|null} [clientKey] MasterAuth clientKey
                     */
    
                    /**
                     * Constructs a new MasterAuth.
                     * @memberof google.container.v1
                     * @classdesc Represents a MasterAuth.
                     * @implements IMasterAuth
                     * @constructor
                     * @param {google.container.v1.IMasterAuth=} [properties] Properties to set
                     */
                    function MasterAuth(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * MasterAuth username.
                     * @member {string} username
                     * @memberof google.container.v1.MasterAuth
                     * @instance
                     */
                    MasterAuth.prototype.username = "";
    
                    /**
                     * MasterAuth password.
                     * @member {string} password
                     * @memberof google.container.v1.MasterAuth
                     * @instance
                     */
                    MasterAuth.prototype.password = "";
    
                    /**
                     * MasterAuth clientCertificateConfig.
                     * @member {google.container.v1.IClientCertificateConfig|null|undefined} clientCertificateConfig
                     * @memberof google.container.v1.MasterAuth
                     * @instance
                     */
                    MasterAuth.prototype.clientCertificateConfig = null;
    
                    /**
                     * MasterAuth clusterCaCertificate.
                     * @member {string} clusterCaCertificate
                     * @memberof google.container.v1.MasterAuth
                     * @instance
                     */
                    MasterAuth.prototype.clusterCaCertificate = "";
    
                    /**
                     * MasterAuth clientCertificate.
                     * @member {string} clientCertificate
                     * @memberof google.container.v1.MasterAuth
                     * @instance
                     */
                    MasterAuth.prototype.clientCertificate = "";
    
                    /**
                     * MasterAuth clientKey.
                     * @member {string} clientKey
                     * @memberof google.container.v1.MasterAuth
                     * @instance
                     */
                    MasterAuth.prototype.clientKey = "";
    
                    /**
                     * Creates a new MasterAuth instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.MasterAuth
                     * @static
                     * @param {google.container.v1.IMasterAuth=} [properties] Properties to set
                     * @returns {google.container.v1.MasterAuth} MasterAuth instance
                     */
                    MasterAuth.create = function create(properties) {
                        return new MasterAuth(properties);
                    };
    
                    /**
                     * Encodes the specified MasterAuth message. Does not implicitly {@link google.container.v1.MasterAuth.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.MasterAuth
                     * @static
                     * @param {google.container.v1.IMasterAuth} message MasterAuth message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MasterAuth.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.username != null && Object.hasOwnProperty.call(message, "username"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.username);
                        if (message.password != null && Object.hasOwnProperty.call(message, "password"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.password);
                        if (message.clientCertificateConfig != null && Object.hasOwnProperty.call(message, "clientCertificateConfig"))
                            $root.google.container.v1.ClientCertificateConfig.encode(message.clientCertificateConfig, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.clusterCaCertificate != null && Object.hasOwnProperty.call(message, "clusterCaCertificate"))
                            writer.uint32(/* id 100, wireType 2 =*/802).string(message.clusterCaCertificate);
                        if (message.clientCertificate != null && Object.hasOwnProperty.call(message, "clientCertificate"))
                            writer.uint32(/* id 101, wireType 2 =*/810).string(message.clientCertificate);
                        if (message.clientKey != null && Object.hasOwnProperty.call(message, "clientKey"))
                            writer.uint32(/* id 102, wireType 2 =*/818).string(message.clientKey);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified MasterAuth message, length delimited. Does not implicitly {@link google.container.v1.MasterAuth.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.MasterAuth
                     * @static
                     * @param {google.container.v1.IMasterAuth} message MasterAuth message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MasterAuth.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a MasterAuth message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.MasterAuth
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.MasterAuth} MasterAuth
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MasterAuth.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.MasterAuth();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.username = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.password = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.clientCertificateConfig = $root.google.container.v1.ClientCertificateConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 100: {
                                    message.clusterCaCertificate = reader.string();
                                    break;
                                }
                            case 101: {
                                    message.clientCertificate = reader.string();
                                    break;
                                }
                            case 102: {
                                    message.clientKey = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a MasterAuth message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.MasterAuth
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.MasterAuth} MasterAuth
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MasterAuth.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a MasterAuth message.
                     * @function verify
                     * @memberof google.container.v1.MasterAuth
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    MasterAuth.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.username != null && message.hasOwnProperty("username"))
                            if (!$util.isString(message.username))
                                return "username: string expected";
                        if (message.password != null && message.hasOwnProperty("password"))
                            if (!$util.isString(message.password))
                                return "password: string expected";
                        if (message.clientCertificateConfig != null && message.hasOwnProperty("clientCertificateConfig")) {
                            var error = $root.google.container.v1.ClientCertificateConfig.verify(message.clientCertificateConfig);
                            if (error)
                                return "clientCertificateConfig." + error;
                        }
                        if (message.clusterCaCertificate != null && message.hasOwnProperty("clusterCaCertificate"))
                            if (!$util.isString(message.clusterCaCertificate))
                                return "clusterCaCertificate: string expected";
                        if (message.clientCertificate != null && message.hasOwnProperty("clientCertificate"))
                            if (!$util.isString(message.clientCertificate))
                                return "clientCertificate: string expected";
                        if (message.clientKey != null && message.hasOwnProperty("clientKey"))
                            if (!$util.isString(message.clientKey))
                                return "clientKey: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a MasterAuth message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.MasterAuth
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.MasterAuth} MasterAuth
                     */
                    MasterAuth.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.MasterAuth)
                            return object;
                        var message = new $root.google.container.v1.MasterAuth();
                        if (object.username != null)
                            message.username = String(object.username);
                        if (object.password != null)
                            message.password = String(object.password);
                        if (object.clientCertificateConfig != null) {
                            if (typeof object.clientCertificateConfig !== "object")
                                throw TypeError(".google.container.v1.MasterAuth.clientCertificateConfig: object expected");
                            message.clientCertificateConfig = $root.google.container.v1.ClientCertificateConfig.fromObject(object.clientCertificateConfig);
                        }
                        if (object.clusterCaCertificate != null)
                            message.clusterCaCertificate = String(object.clusterCaCertificate);
                        if (object.clientCertificate != null)
                            message.clientCertificate = String(object.clientCertificate);
                        if (object.clientKey != null)
                            message.clientKey = String(object.clientKey);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a MasterAuth message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.MasterAuth
                     * @static
                     * @param {google.container.v1.MasterAuth} message MasterAuth
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    MasterAuth.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.username = "";
                            object.password = "";
                            object.clientCertificateConfig = null;
                            object.clusterCaCertificate = "";
                            object.clientCertificate = "";
                            object.clientKey = "";
                        }
                        if (message.username != null && message.hasOwnProperty("username"))
                            object.username = message.username;
                        if (message.password != null && message.hasOwnProperty("password"))
                            object.password = message.password;
                        if (message.clientCertificateConfig != null && message.hasOwnProperty("clientCertificateConfig"))
                            object.clientCertificateConfig = $root.google.container.v1.ClientCertificateConfig.toObject(message.clientCertificateConfig, options);
                        if (message.clusterCaCertificate != null && message.hasOwnProperty("clusterCaCertificate"))
                            object.clusterCaCertificate = message.clusterCaCertificate;
                        if (message.clientCertificate != null && message.hasOwnProperty("clientCertificate"))
                            object.clientCertificate = message.clientCertificate;
                        if (message.clientKey != null && message.hasOwnProperty("clientKey"))
                            object.clientKey = message.clientKey;
                        return object;
                    };
    
                    /**
                     * Converts this MasterAuth to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.MasterAuth
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    MasterAuth.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for MasterAuth
                     * @function getTypeUrl
                     * @memberof google.container.v1.MasterAuth
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    MasterAuth.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.MasterAuth";
                    };
    
                    return MasterAuth;
                })();
    
                v1.ClientCertificateConfig = (function() {
    
                    /**
                     * Properties of a ClientCertificateConfig.
                     * @memberof google.container.v1
                     * @interface IClientCertificateConfig
                     * @property {boolean|null} [issueClientCertificate] ClientCertificateConfig issueClientCertificate
                     */
    
                    /**
                     * Constructs a new ClientCertificateConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a ClientCertificateConfig.
                     * @implements IClientCertificateConfig
                     * @constructor
                     * @param {google.container.v1.IClientCertificateConfig=} [properties] Properties to set
                     */
                    function ClientCertificateConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ClientCertificateConfig issueClientCertificate.
                     * @member {boolean} issueClientCertificate
                     * @memberof google.container.v1.ClientCertificateConfig
                     * @instance
                     */
                    ClientCertificateConfig.prototype.issueClientCertificate = false;
    
                    /**
                     * Creates a new ClientCertificateConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.ClientCertificateConfig
                     * @static
                     * @param {google.container.v1.IClientCertificateConfig=} [properties] Properties to set
                     * @returns {google.container.v1.ClientCertificateConfig} ClientCertificateConfig instance
                     */
                    ClientCertificateConfig.create = function create(properties) {
                        return new ClientCertificateConfig(properties);
                    };
    
                    /**
                     * Encodes the specified ClientCertificateConfig message. Does not implicitly {@link google.container.v1.ClientCertificateConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.ClientCertificateConfig
                     * @static
                     * @param {google.container.v1.IClientCertificateConfig} message ClientCertificateConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ClientCertificateConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.issueClientCertificate != null && Object.hasOwnProperty.call(message, "issueClientCertificate"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.issueClientCertificate);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ClientCertificateConfig message, length delimited. Does not implicitly {@link google.container.v1.ClientCertificateConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.ClientCertificateConfig
                     * @static
                     * @param {google.container.v1.IClientCertificateConfig} message ClientCertificateConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ClientCertificateConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ClientCertificateConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.ClientCertificateConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.ClientCertificateConfig} ClientCertificateConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ClientCertificateConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.ClientCertificateConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.issueClientCertificate = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ClientCertificateConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.ClientCertificateConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.ClientCertificateConfig} ClientCertificateConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ClientCertificateConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ClientCertificateConfig message.
                     * @function verify
                     * @memberof google.container.v1.ClientCertificateConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ClientCertificateConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.issueClientCertificate != null && message.hasOwnProperty("issueClientCertificate"))
                            if (typeof message.issueClientCertificate !== "boolean")
                                return "issueClientCertificate: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a ClientCertificateConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.ClientCertificateConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.ClientCertificateConfig} ClientCertificateConfig
                     */
                    ClientCertificateConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.ClientCertificateConfig)
                            return object;
                        var message = new $root.google.container.v1.ClientCertificateConfig();
                        if (object.issueClientCertificate != null)
                            message.issueClientCertificate = Boolean(object.issueClientCertificate);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ClientCertificateConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.ClientCertificateConfig
                     * @static
                     * @param {google.container.v1.ClientCertificateConfig} message ClientCertificateConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ClientCertificateConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.issueClientCertificate = false;
                        if (message.issueClientCertificate != null && message.hasOwnProperty("issueClientCertificate"))
                            object.issueClientCertificate = message.issueClientCertificate;
                        return object;
                    };
    
                    /**
                     * Converts this ClientCertificateConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.ClientCertificateConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ClientCertificateConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ClientCertificateConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.ClientCertificateConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ClientCertificateConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.ClientCertificateConfig";
                    };
    
                    return ClientCertificateConfig;
                })();
    
                v1.AddonsConfig = (function() {
    
                    /**
                     * Properties of an AddonsConfig.
                     * @memberof google.container.v1
                     * @interface IAddonsConfig
                     * @property {google.container.v1.IHttpLoadBalancing|null} [httpLoadBalancing] AddonsConfig httpLoadBalancing
                     * @property {google.container.v1.IHorizontalPodAutoscaling|null} [horizontalPodAutoscaling] AddonsConfig horizontalPodAutoscaling
                     * @property {google.container.v1.IKubernetesDashboard|null} [kubernetesDashboard] AddonsConfig kubernetesDashboard
                     * @property {google.container.v1.INetworkPolicyConfig|null} [networkPolicyConfig] AddonsConfig networkPolicyConfig
                     * @property {google.container.v1.ICloudRunConfig|null} [cloudRunConfig] AddonsConfig cloudRunConfig
                     * @property {google.container.v1.IDnsCacheConfig|null} [dnsCacheConfig] AddonsConfig dnsCacheConfig
                     * @property {google.container.v1.IConfigConnectorConfig|null} [configConnectorConfig] AddonsConfig configConnectorConfig
                     * @property {google.container.v1.IGcePersistentDiskCsiDriverConfig|null} [gcePersistentDiskCsiDriverConfig] AddonsConfig gcePersistentDiskCsiDriverConfig
                     * @property {google.container.v1.IGcpFilestoreCsiDriverConfig|null} [gcpFilestoreCsiDriverConfig] AddonsConfig gcpFilestoreCsiDriverConfig
                     * @property {google.container.v1.IGkeBackupAgentConfig|null} [gkeBackupAgentConfig] AddonsConfig gkeBackupAgentConfig
                     */
    
                    /**
                     * Constructs a new AddonsConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents an AddonsConfig.
                     * @implements IAddonsConfig
                     * @constructor
                     * @param {google.container.v1.IAddonsConfig=} [properties] Properties to set
                     */
                    function AddonsConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * AddonsConfig httpLoadBalancing.
                     * @member {google.container.v1.IHttpLoadBalancing|null|undefined} httpLoadBalancing
                     * @memberof google.container.v1.AddonsConfig
                     * @instance
                     */
                    AddonsConfig.prototype.httpLoadBalancing = null;
    
                    /**
                     * AddonsConfig horizontalPodAutoscaling.
                     * @member {google.container.v1.IHorizontalPodAutoscaling|null|undefined} horizontalPodAutoscaling
                     * @memberof google.container.v1.AddonsConfig
                     * @instance
                     */
                    AddonsConfig.prototype.horizontalPodAutoscaling = null;
    
                    /**
                     * AddonsConfig kubernetesDashboard.
                     * @member {google.container.v1.IKubernetesDashboard|null|undefined} kubernetesDashboard
                     * @memberof google.container.v1.AddonsConfig
                     * @instance
                     */
                    AddonsConfig.prototype.kubernetesDashboard = null;
    
                    /**
                     * AddonsConfig networkPolicyConfig.
                     * @member {google.container.v1.INetworkPolicyConfig|null|undefined} networkPolicyConfig
                     * @memberof google.container.v1.AddonsConfig
                     * @instance
                     */
                    AddonsConfig.prototype.networkPolicyConfig = null;
    
                    /**
                     * AddonsConfig cloudRunConfig.
                     * @member {google.container.v1.ICloudRunConfig|null|undefined} cloudRunConfig
                     * @memberof google.container.v1.AddonsConfig
                     * @instance
                     */
                    AddonsConfig.prototype.cloudRunConfig = null;
    
                    /**
                     * AddonsConfig dnsCacheConfig.
                     * @member {google.container.v1.IDnsCacheConfig|null|undefined} dnsCacheConfig
                     * @memberof google.container.v1.AddonsConfig
                     * @instance
                     */
                    AddonsConfig.prototype.dnsCacheConfig = null;
    
                    /**
                     * AddonsConfig configConnectorConfig.
                     * @member {google.container.v1.IConfigConnectorConfig|null|undefined} configConnectorConfig
                     * @memberof google.container.v1.AddonsConfig
                     * @instance
                     */
                    AddonsConfig.prototype.configConnectorConfig = null;
    
                    /**
                     * AddonsConfig gcePersistentDiskCsiDriverConfig.
                     * @member {google.container.v1.IGcePersistentDiskCsiDriverConfig|null|undefined} gcePersistentDiskCsiDriverConfig
                     * @memberof google.container.v1.AddonsConfig
                     * @instance
                     */
                    AddonsConfig.prototype.gcePersistentDiskCsiDriverConfig = null;
    
                    /**
                     * AddonsConfig gcpFilestoreCsiDriverConfig.
                     * @member {google.container.v1.IGcpFilestoreCsiDriverConfig|null|undefined} gcpFilestoreCsiDriverConfig
                     * @memberof google.container.v1.AddonsConfig
                     * @instance
                     */
                    AddonsConfig.prototype.gcpFilestoreCsiDriverConfig = null;
    
                    /**
                     * AddonsConfig gkeBackupAgentConfig.
                     * @member {google.container.v1.IGkeBackupAgentConfig|null|undefined} gkeBackupAgentConfig
                     * @memberof google.container.v1.AddonsConfig
                     * @instance
                     */
                    AddonsConfig.prototype.gkeBackupAgentConfig = null;
    
                    /**
                     * Creates a new AddonsConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.AddonsConfig
                     * @static
                     * @param {google.container.v1.IAddonsConfig=} [properties] Properties to set
                     * @returns {google.container.v1.AddonsConfig} AddonsConfig instance
                     */
                    AddonsConfig.create = function create(properties) {
                        return new AddonsConfig(properties);
                    };
    
                    /**
                     * Encodes the specified AddonsConfig message. Does not implicitly {@link google.container.v1.AddonsConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.AddonsConfig
                     * @static
                     * @param {google.container.v1.IAddonsConfig} message AddonsConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AddonsConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.httpLoadBalancing != null && Object.hasOwnProperty.call(message, "httpLoadBalancing"))
                            $root.google.container.v1.HttpLoadBalancing.encode(message.httpLoadBalancing, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.horizontalPodAutoscaling != null && Object.hasOwnProperty.call(message, "horizontalPodAutoscaling"))
                            $root.google.container.v1.HorizontalPodAutoscaling.encode(message.horizontalPodAutoscaling, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.kubernetesDashboard != null && Object.hasOwnProperty.call(message, "kubernetesDashboard"))
                            $root.google.container.v1.KubernetesDashboard.encode(message.kubernetesDashboard, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.networkPolicyConfig != null && Object.hasOwnProperty.call(message, "networkPolicyConfig"))
                            $root.google.container.v1.NetworkPolicyConfig.encode(message.networkPolicyConfig, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.cloudRunConfig != null && Object.hasOwnProperty.call(message, "cloudRunConfig"))
                            $root.google.container.v1.CloudRunConfig.encode(message.cloudRunConfig, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                        if (message.dnsCacheConfig != null && Object.hasOwnProperty.call(message, "dnsCacheConfig"))
                            $root.google.container.v1.DnsCacheConfig.encode(message.dnsCacheConfig, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                        if (message.configConnectorConfig != null && Object.hasOwnProperty.call(message, "configConnectorConfig"))
                            $root.google.container.v1.ConfigConnectorConfig.encode(message.configConnectorConfig, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                        if (message.gcePersistentDiskCsiDriverConfig != null && Object.hasOwnProperty.call(message, "gcePersistentDiskCsiDriverConfig"))
                            $root.google.container.v1.GcePersistentDiskCsiDriverConfig.encode(message.gcePersistentDiskCsiDriverConfig, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                        if (message.gcpFilestoreCsiDriverConfig != null && Object.hasOwnProperty.call(message, "gcpFilestoreCsiDriverConfig"))
                            $root.google.container.v1.GcpFilestoreCsiDriverConfig.encode(message.gcpFilestoreCsiDriverConfig, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                        if (message.gkeBackupAgentConfig != null && Object.hasOwnProperty.call(message, "gkeBackupAgentConfig"))
                            $root.google.container.v1.GkeBackupAgentConfig.encode(message.gkeBackupAgentConfig, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified AddonsConfig message, length delimited. Does not implicitly {@link google.container.v1.AddonsConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.AddonsConfig
                     * @static
                     * @param {google.container.v1.IAddonsConfig} message AddonsConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AddonsConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an AddonsConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.AddonsConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.AddonsConfig} AddonsConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AddonsConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.AddonsConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.httpLoadBalancing = $root.google.container.v1.HttpLoadBalancing.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.horizontalPodAutoscaling = $root.google.container.v1.HorizontalPodAutoscaling.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.kubernetesDashboard = $root.google.container.v1.KubernetesDashboard.decode(reader, reader.uint32());
                                    break;
                                }
                            case 4: {
                                    message.networkPolicyConfig = $root.google.container.v1.NetworkPolicyConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 7: {
                                    message.cloudRunConfig = $root.google.container.v1.CloudRunConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 8: {
                                    message.dnsCacheConfig = $root.google.container.v1.DnsCacheConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 10: {
                                    message.configConnectorConfig = $root.google.container.v1.ConfigConnectorConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 11: {
                                    message.gcePersistentDiskCsiDriverConfig = $root.google.container.v1.GcePersistentDiskCsiDriverConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 14: {
                                    message.gcpFilestoreCsiDriverConfig = $root.google.container.v1.GcpFilestoreCsiDriverConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 16: {
                                    message.gkeBackupAgentConfig = $root.google.container.v1.GkeBackupAgentConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an AddonsConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.AddonsConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.AddonsConfig} AddonsConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AddonsConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an AddonsConfig message.
                     * @function verify
                     * @memberof google.container.v1.AddonsConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    AddonsConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.httpLoadBalancing != null && message.hasOwnProperty("httpLoadBalancing")) {
                            var error = $root.google.container.v1.HttpLoadBalancing.verify(message.httpLoadBalancing);
                            if (error)
                                return "httpLoadBalancing." + error;
                        }
                        if (message.horizontalPodAutoscaling != null && message.hasOwnProperty("horizontalPodAutoscaling")) {
                            var error = $root.google.container.v1.HorizontalPodAutoscaling.verify(message.horizontalPodAutoscaling);
                            if (error)
                                return "horizontalPodAutoscaling." + error;
                        }
                        if (message.kubernetesDashboard != null && message.hasOwnProperty("kubernetesDashboard")) {
                            var error = $root.google.container.v1.KubernetesDashboard.verify(message.kubernetesDashboard);
                            if (error)
                                return "kubernetesDashboard." + error;
                        }
                        if (message.networkPolicyConfig != null && message.hasOwnProperty("networkPolicyConfig")) {
                            var error = $root.google.container.v1.NetworkPolicyConfig.verify(message.networkPolicyConfig);
                            if (error)
                                return "networkPolicyConfig." + error;
                        }
                        if (message.cloudRunConfig != null && message.hasOwnProperty("cloudRunConfig")) {
                            var error = $root.google.container.v1.CloudRunConfig.verify(message.cloudRunConfig);
                            if (error)
                                return "cloudRunConfig." + error;
                        }
                        if (message.dnsCacheConfig != null && message.hasOwnProperty("dnsCacheConfig")) {
                            var error = $root.google.container.v1.DnsCacheConfig.verify(message.dnsCacheConfig);
                            if (error)
                                return "dnsCacheConfig." + error;
                        }
                        if (message.configConnectorConfig != null && message.hasOwnProperty("configConnectorConfig")) {
                            var error = $root.google.container.v1.ConfigConnectorConfig.verify(message.configConnectorConfig);
                            if (error)
                                return "configConnectorConfig." + error;
                        }
                        if (message.gcePersistentDiskCsiDriverConfig != null && message.hasOwnProperty("gcePersistentDiskCsiDriverConfig")) {
                            var error = $root.google.container.v1.GcePersistentDiskCsiDriverConfig.verify(message.gcePersistentDiskCsiDriverConfig);
                            if (error)
                                return "gcePersistentDiskCsiDriverConfig." + error;
                        }
                        if (message.gcpFilestoreCsiDriverConfig != null && message.hasOwnProperty("gcpFilestoreCsiDriverConfig")) {
                            var error = $root.google.container.v1.GcpFilestoreCsiDriverConfig.verify(message.gcpFilestoreCsiDriverConfig);
                            if (error)
                                return "gcpFilestoreCsiDriverConfig." + error;
                        }
                        if (message.gkeBackupAgentConfig != null && message.hasOwnProperty("gkeBackupAgentConfig")) {
                            var error = $root.google.container.v1.GkeBackupAgentConfig.verify(message.gkeBackupAgentConfig);
                            if (error)
                                return "gkeBackupAgentConfig." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an AddonsConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.AddonsConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.AddonsConfig} AddonsConfig
                     */
                    AddonsConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.AddonsConfig)
                            return object;
                        var message = new $root.google.container.v1.AddonsConfig();
                        if (object.httpLoadBalancing != null) {
                            if (typeof object.httpLoadBalancing !== "object")
                                throw TypeError(".google.container.v1.AddonsConfig.httpLoadBalancing: object expected");
                            message.httpLoadBalancing = $root.google.container.v1.HttpLoadBalancing.fromObject(object.httpLoadBalancing);
                        }
                        if (object.horizontalPodAutoscaling != null) {
                            if (typeof object.horizontalPodAutoscaling !== "object")
                                throw TypeError(".google.container.v1.AddonsConfig.horizontalPodAutoscaling: object expected");
                            message.horizontalPodAutoscaling = $root.google.container.v1.HorizontalPodAutoscaling.fromObject(object.horizontalPodAutoscaling);
                        }
                        if (object.kubernetesDashboard != null) {
                            if (typeof object.kubernetesDashboard !== "object")
                                throw TypeError(".google.container.v1.AddonsConfig.kubernetesDashboard: object expected");
                            message.kubernetesDashboard = $root.google.container.v1.KubernetesDashboard.fromObject(object.kubernetesDashboard);
                        }
                        if (object.networkPolicyConfig != null) {
                            if (typeof object.networkPolicyConfig !== "object")
                                throw TypeError(".google.container.v1.AddonsConfig.networkPolicyConfig: object expected");
                            message.networkPolicyConfig = $root.google.container.v1.NetworkPolicyConfig.fromObject(object.networkPolicyConfig);
                        }
                        if (object.cloudRunConfig != null) {
                            if (typeof object.cloudRunConfig !== "object")
                                throw TypeError(".google.container.v1.AddonsConfig.cloudRunConfig: object expected");
                            message.cloudRunConfig = $root.google.container.v1.CloudRunConfig.fromObject(object.cloudRunConfig);
                        }
                        if (object.dnsCacheConfig != null) {
                            if (typeof object.dnsCacheConfig !== "object")
                                throw TypeError(".google.container.v1.AddonsConfig.dnsCacheConfig: object expected");
                            message.dnsCacheConfig = $root.google.container.v1.DnsCacheConfig.fromObject(object.dnsCacheConfig);
                        }
                        if (object.configConnectorConfig != null) {
                            if (typeof object.configConnectorConfig !== "object")
                                throw TypeError(".google.container.v1.AddonsConfig.configConnectorConfig: object expected");
                            message.configConnectorConfig = $root.google.container.v1.ConfigConnectorConfig.fromObject(object.configConnectorConfig);
                        }
                        if (object.gcePersistentDiskCsiDriverConfig != null) {
                            if (typeof object.gcePersistentDiskCsiDriverConfig !== "object")
                                throw TypeError(".google.container.v1.AddonsConfig.gcePersistentDiskCsiDriverConfig: object expected");
                            message.gcePersistentDiskCsiDriverConfig = $root.google.container.v1.GcePersistentDiskCsiDriverConfig.fromObject(object.gcePersistentDiskCsiDriverConfig);
                        }
                        if (object.gcpFilestoreCsiDriverConfig != null) {
                            if (typeof object.gcpFilestoreCsiDriverConfig !== "object")
                                throw TypeError(".google.container.v1.AddonsConfig.gcpFilestoreCsiDriverConfig: object expected");
                            message.gcpFilestoreCsiDriverConfig = $root.google.container.v1.GcpFilestoreCsiDriverConfig.fromObject(object.gcpFilestoreCsiDriverConfig);
                        }
                        if (object.gkeBackupAgentConfig != null) {
                            if (typeof object.gkeBackupAgentConfig !== "object")
                                throw TypeError(".google.container.v1.AddonsConfig.gkeBackupAgentConfig: object expected");
                            message.gkeBackupAgentConfig = $root.google.container.v1.GkeBackupAgentConfig.fromObject(object.gkeBackupAgentConfig);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an AddonsConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.AddonsConfig
                     * @static
                     * @param {google.container.v1.AddonsConfig} message AddonsConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    AddonsConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.httpLoadBalancing = null;
                            object.horizontalPodAutoscaling = null;
                            object.kubernetesDashboard = null;
                            object.networkPolicyConfig = null;
                            object.cloudRunConfig = null;
                            object.dnsCacheConfig = null;
                            object.configConnectorConfig = null;
                            object.gcePersistentDiskCsiDriverConfig = null;
                            object.gcpFilestoreCsiDriverConfig = null;
                            object.gkeBackupAgentConfig = null;
                        }
                        if (message.httpLoadBalancing != null && message.hasOwnProperty("httpLoadBalancing"))
                            object.httpLoadBalancing = $root.google.container.v1.HttpLoadBalancing.toObject(message.httpLoadBalancing, options);
                        if (message.horizontalPodAutoscaling != null && message.hasOwnProperty("horizontalPodAutoscaling"))
                            object.horizontalPodAutoscaling = $root.google.container.v1.HorizontalPodAutoscaling.toObject(message.horizontalPodAutoscaling, options);
                        if (message.kubernetesDashboard != null && message.hasOwnProperty("kubernetesDashboard"))
                            object.kubernetesDashboard = $root.google.container.v1.KubernetesDashboard.toObject(message.kubernetesDashboard, options);
                        if (message.networkPolicyConfig != null && message.hasOwnProperty("networkPolicyConfig"))
                            object.networkPolicyConfig = $root.google.container.v1.NetworkPolicyConfig.toObject(message.networkPolicyConfig, options);
                        if (message.cloudRunConfig != null && message.hasOwnProperty("cloudRunConfig"))
                            object.cloudRunConfig = $root.google.container.v1.CloudRunConfig.toObject(message.cloudRunConfig, options);
                        if (message.dnsCacheConfig != null && message.hasOwnProperty("dnsCacheConfig"))
                            object.dnsCacheConfig = $root.google.container.v1.DnsCacheConfig.toObject(message.dnsCacheConfig, options);
                        if (message.configConnectorConfig != null && message.hasOwnProperty("configConnectorConfig"))
                            object.configConnectorConfig = $root.google.container.v1.ConfigConnectorConfig.toObject(message.configConnectorConfig, options);
                        if (message.gcePersistentDiskCsiDriverConfig != null && message.hasOwnProperty("gcePersistentDiskCsiDriverConfig"))
                            object.gcePersistentDiskCsiDriverConfig = $root.google.container.v1.GcePersistentDiskCsiDriverConfig.toObject(message.gcePersistentDiskCsiDriverConfig, options);
                        if (message.gcpFilestoreCsiDriverConfig != null && message.hasOwnProperty("gcpFilestoreCsiDriverConfig"))
                            object.gcpFilestoreCsiDriverConfig = $root.google.container.v1.GcpFilestoreCsiDriverConfig.toObject(message.gcpFilestoreCsiDriverConfig, options);
                        if (message.gkeBackupAgentConfig != null && message.hasOwnProperty("gkeBackupAgentConfig"))
                            object.gkeBackupAgentConfig = $root.google.container.v1.GkeBackupAgentConfig.toObject(message.gkeBackupAgentConfig, options);
                        return object;
                    };
    
                    /**
                     * Converts this AddonsConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.AddonsConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    AddonsConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for AddonsConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.AddonsConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    AddonsConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.AddonsConfig";
                    };
    
                    return AddonsConfig;
                })();
    
                v1.HttpLoadBalancing = (function() {
    
                    /**
                     * Properties of a HttpLoadBalancing.
                     * @memberof google.container.v1
                     * @interface IHttpLoadBalancing
                     * @property {boolean|null} [disabled] HttpLoadBalancing disabled
                     */
    
                    /**
                     * Constructs a new HttpLoadBalancing.
                     * @memberof google.container.v1
                     * @classdesc Represents a HttpLoadBalancing.
                     * @implements IHttpLoadBalancing
                     * @constructor
                     * @param {google.container.v1.IHttpLoadBalancing=} [properties] Properties to set
                     */
                    function HttpLoadBalancing(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * HttpLoadBalancing disabled.
                     * @member {boolean} disabled
                     * @memberof google.container.v1.HttpLoadBalancing
                     * @instance
                     */
                    HttpLoadBalancing.prototype.disabled = false;
    
                    /**
                     * Creates a new HttpLoadBalancing instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.HttpLoadBalancing
                     * @static
                     * @param {google.container.v1.IHttpLoadBalancing=} [properties] Properties to set
                     * @returns {google.container.v1.HttpLoadBalancing} HttpLoadBalancing instance
                     */
                    HttpLoadBalancing.create = function create(properties) {
                        return new HttpLoadBalancing(properties);
                    };
    
                    /**
                     * Encodes the specified HttpLoadBalancing message. Does not implicitly {@link google.container.v1.HttpLoadBalancing.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.HttpLoadBalancing
                     * @static
                     * @param {google.container.v1.IHttpLoadBalancing} message HttpLoadBalancing message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    HttpLoadBalancing.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.disabled != null && Object.hasOwnProperty.call(message, "disabled"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.disabled);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified HttpLoadBalancing message, length delimited. Does not implicitly {@link google.container.v1.HttpLoadBalancing.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.HttpLoadBalancing
                     * @static
                     * @param {google.container.v1.IHttpLoadBalancing} message HttpLoadBalancing message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    HttpLoadBalancing.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a HttpLoadBalancing message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.HttpLoadBalancing
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.HttpLoadBalancing} HttpLoadBalancing
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    HttpLoadBalancing.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.HttpLoadBalancing();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.disabled = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a HttpLoadBalancing message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.HttpLoadBalancing
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.HttpLoadBalancing} HttpLoadBalancing
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    HttpLoadBalancing.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a HttpLoadBalancing message.
                     * @function verify
                     * @memberof google.container.v1.HttpLoadBalancing
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    HttpLoadBalancing.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.disabled != null && message.hasOwnProperty("disabled"))
                            if (typeof message.disabled !== "boolean")
                                return "disabled: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a HttpLoadBalancing message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.HttpLoadBalancing
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.HttpLoadBalancing} HttpLoadBalancing
                     */
                    HttpLoadBalancing.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.HttpLoadBalancing)
                            return object;
                        var message = new $root.google.container.v1.HttpLoadBalancing();
                        if (object.disabled != null)
                            message.disabled = Boolean(object.disabled);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a HttpLoadBalancing message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.HttpLoadBalancing
                     * @static
                     * @param {google.container.v1.HttpLoadBalancing} message HttpLoadBalancing
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    HttpLoadBalancing.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.disabled = false;
                        if (message.disabled != null && message.hasOwnProperty("disabled"))
                            object.disabled = message.disabled;
                        return object;
                    };
    
                    /**
                     * Converts this HttpLoadBalancing to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.HttpLoadBalancing
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    HttpLoadBalancing.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for HttpLoadBalancing
                     * @function getTypeUrl
                     * @memberof google.container.v1.HttpLoadBalancing
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    HttpLoadBalancing.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.HttpLoadBalancing";
                    };
    
                    return HttpLoadBalancing;
                })();
    
                v1.HorizontalPodAutoscaling = (function() {
    
                    /**
                     * Properties of a HorizontalPodAutoscaling.
                     * @memberof google.container.v1
                     * @interface IHorizontalPodAutoscaling
                     * @property {boolean|null} [disabled] HorizontalPodAutoscaling disabled
                     */
    
                    /**
                     * Constructs a new HorizontalPodAutoscaling.
                     * @memberof google.container.v1
                     * @classdesc Represents a HorizontalPodAutoscaling.
                     * @implements IHorizontalPodAutoscaling
                     * @constructor
                     * @param {google.container.v1.IHorizontalPodAutoscaling=} [properties] Properties to set
                     */
                    function HorizontalPodAutoscaling(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * HorizontalPodAutoscaling disabled.
                     * @member {boolean} disabled
                     * @memberof google.container.v1.HorizontalPodAutoscaling
                     * @instance
                     */
                    HorizontalPodAutoscaling.prototype.disabled = false;
    
                    /**
                     * Creates a new HorizontalPodAutoscaling instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.HorizontalPodAutoscaling
                     * @static
                     * @param {google.container.v1.IHorizontalPodAutoscaling=} [properties] Properties to set
                     * @returns {google.container.v1.HorizontalPodAutoscaling} HorizontalPodAutoscaling instance
                     */
                    HorizontalPodAutoscaling.create = function create(properties) {
                        return new HorizontalPodAutoscaling(properties);
                    };
    
                    /**
                     * Encodes the specified HorizontalPodAutoscaling message. Does not implicitly {@link google.container.v1.HorizontalPodAutoscaling.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.HorizontalPodAutoscaling
                     * @static
                     * @param {google.container.v1.IHorizontalPodAutoscaling} message HorizontalPodAutoscaling message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    HorizontalPodAutoscaling.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.disabled != null && Object.hasOwnProperty.call(message, "disabled"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.disabled);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified HorizontalPodAutoscaling message, length delimited. Does not implicitly {@link google.container.v1.HorizontalPodAutoscaling.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.HorizontalPodAutoscaling
                     * @static
                     * @param {google.container.v1.IHorizontalPodAutoscaling} message HorizontalPodAutoscaling message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    HorizontalPodAutoscaling.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a HorizontalPodAutoscaling message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.HorizontalPodAutoscaling
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.HorizontalPodAutoscaling} HorizontalPodAutoscaling
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    HorizontalPodAutoscaling.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.HorizontalPodAutoscaling();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.disabled = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a HorizontalPodAutoscaling message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.HorizontalPodAutoscaling
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.HorizontalPodAutoscaling} HorizontalPodAutoscaling
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    HorizontalPodAutoscaling.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a HorizontalPodAutoscaling message.
                     * @function verify
                     * @memberof google.container.v1.HorizontalPodAutoscaling
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    HorizontalPodAutoscaling.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.disabled != null && message.hasOwnProperty("disabled"))
                            if (typeof message.disabled !== "boolean")
                                return "disabled: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a HorizontalPodAutoscaling message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.HorizontalPodAutoscaling
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.HorizontalPodAutoscaling} HorizontalPodAutoscaling
                     */
                    HorizontalPodAutoscaling.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.HorizontalPodAutoscaling)
                            return object;
                        var message = new $root.google.container.v1.HorizontalPodAutoscaling();
                        if (object.disabled != null)
                            message.disabled = Boolean(object.disabled);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a HorizontalPodAutoscaling message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.HorizontalPodAutoscaling
                     * @static
                     * @param {google.container.v1.HorizontalPodAutoscaling} message HorizontalPodAutoscaling
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    HorizontalPodAutoscaling.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.disabled = false;
                        if (message.disabled != null && message.hasOwnProperty("disabled"))
                            object.disabled = message.disabled;
                        return object;
                    };
    
                    /**
                     * Converts this HorizontalPodAutoscaling to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.HorizontalPodAutoscaling
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    HorizontalPodAutoscaling.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for HorizontalPodAutoscaling
                     * @function getTypeUrl
                     * @memberof google.container.v1.HorizontalPodAutoscaling
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    HorizontalPodAutoscaling.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.HorizontalPodAutoscaling";
                    };
    
                    return HorizontalPodAutoscaling;
                })();
    
                v1.KubernetesDashboard = (function() {
    
                    /**
                     * Properties of a KubernetesDashboard.
                     * @memberof google.container.v1
                     * @interface IKubernetesDashboard
                     * @property {boolean|null} [disabled] KubernetesDashboard disabled
                     */
    
                    /**
                     * Constructs a new KubernetesDashboard.
                     * @memberof google.container.v1
                     * @classdesc Represents a KubernetesDashboard.
                     * @implements IKubernetesDashboard
                     * @constructor
                     * @param {google.container.v1.IKubernetesDashboard=} [properties] Properties to set
                     */
                    function KubernetesDashboard(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * KubernetesDashboard disabled.
                     * @member {boolean} disabled
                     * @memberof google.container.v1.KubernetesDashboard
                     * @instance
                     */
                    KubernetesDashboard.prototype.disabled = false;
    
                    /**
                     * Creates a new KubernetesDashboard instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.KubernetesDashboard
                     * @static
                     * @param {google.container.v1.IKubernetesDashboard=} [properties] Properties to set
                     * @returns {google.container.v1.KubernetesDashboard} KubernetesDashboard instance
                     */
                    KubernetesDashboard.create = function create(properties) {
                        return new KubernetesDashboard(properties);
                    };
    
                    /**
                     * Encodes the specified KubernetesDashboard message. Does not implicitly {@link google.container.v1.KubernetesDashboard.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.KubernetesDashboard
                     * @static
                     * @param {google.container.v1.IKubernetesDashboard} message KubernetesDashboard message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    KubernetesDashboard.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.disabled != null && Object.hasOwnProperty.call(message, "disabled"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.disabled);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified KubernetesDashboard message, length delimited. Does not implicitly {@link google.container.v1.KubernetesDashboard.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.KubernetesDashboard
                     * @static
                     * @param {google.container.v1.IKubernetesDashboard} message KubernetesDashboard message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    KubernetesDashboard.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a KubernetesDashboard message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.KubernetesDashboard
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.KubernetesDashboard} KubernetesDashboard
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    KubernetesDashboard.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.KubernetesDashboard();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.disabled = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a KubernetesDashboard message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.KubernetesDashboard
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.KubernetesDashboard} KubernetesDashboard
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    KubernetesDashboard.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a KubernetesDashboard message.
                     * @function verify
                     * @memberof google.container.v1.KubernetesDashboard
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    KubernetesDashboard.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.disabled != null && message.hasOwnProperty("disabled"))
                            if (typeof message.disabled !== "boolean")
                                return "disabled: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a KubernetesDashboard message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.KubernetesDashboard
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.KubernetesDashboard} KubernetesDashboard
                     */
                    KubernetesDashboard.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.KubernetesDashboard)
                            return object;
                        var message = new $root.google.container.v1.KubernetesDashboard();
                        if (object.disabled != null)
                            message.disabled = Boolean(object.disabled);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a KubernetesDashboard message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.KubernetesDashboard
                     * @static
                     * @param {google.container.v1.KubernetesDashboard} message KubernetesDashboard
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    KubernetesDashboard.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.disabled = false;
                        if (message.disabled != null && message.hasOwnProperty("disabled"))
                            object.disabled = message.disabled;
                        return object;
                    };
    
                    /**
                     * Converts this KubernetesDashboard to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.KubernetesDashboard
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    KubernetesDashboard.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for KubernetesDashboard
                     * @function getTypeUrl
                     * @memberof google.container.v1.KubernetesDashboard
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    KubernetesDashboard.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.KubernetesDashboard";
                    };
    
                    return KubernetesDashboard;
                })();
    
                v1.NetworkPolicyConfig = (function() {
    
                    /**
                     * Properties of a NetworkPolicyConfig.
                     * @memberof google.container.v1
                     * @interface INetworkPolicyConfig
                     * @property {boolean|null} [disabled] NetworkPolicyConfig disabled
                     */
    
                    /**
                     * Constructs a new NetworkPolicyConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a NetworkPolicyConfig.
                     * @implements INetworkPolicyConfig
                     * @constructor
                     * @param {google.container.v1.INetworkPolicyConfig=} [properties] Properties to set
                     */
                    function NetworkPolicyConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NetworkPolicyConfig disabled.
                     * @member {boolean} disabled
                     * @memberof google.container.v1.NetworkPolicyConfig
                     * @instance
                     */
                    NetworkPolicyConfig.prototype.disabled = false;
    
                    /**
                     * Creates a new NetworkPolicyConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.NetworkPolicyConfig
                     * @static
                     * @param {google.container.v1.INetworkPolicyConfig=} [properties] Properties to set
                     * @returns {google.container.v1.NetworkPolicyConfig} NetworkPolicyConfig instance
                     */
                    NetworkPolicyConfig.create = function create(properties) {
                        return new NetworkPolicyConfig(properties);
                    };
    
                    /**
                     * Encodes the specified NetworkPolicyConfig message. Does not implicitly {@link google.container.v1.NetworkPolicyConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.NetworkPolicyConfig
                     * @static
                     * @param {google.container.v1.INetworkPolicyConfig} message NetworkPolicyConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NetworkPolicyConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.disabled != null && Object.hasOwnProperty.call(message, "disabled"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.disabled);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NetworkPolicyConfig message, length delimited. Does not implicitly {@link google.container.v1.NetworkPolicyConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.NetworkPolicyConfig
                     * @static
                     * @param {google.container.v1.INetworkPolicyConfig} message NetworkPolicyConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NetworkPolicyConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NetworkPolicyConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.NetworkPolicyConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.NetworkPolicyConfig} NetworkPolicyConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NetworkPolicyConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.NetworkPolicyConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.disabled = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a NetworkPolicyConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.NetworkPolicyConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.NetworkPolicyConfig} NetworkPolicyConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NetworkPolicyConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NetworkPolicyConfig message.
                     * @function verify
                     * @memberof google.container.v1.NetworkPolicyConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NetworkPolicyConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.disabled != null && message.hasOwnProperty("disabled"))
                            if (typeof message.disabled !== "boolean")
                                return "disabled: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NetworkPolicyConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.NetworkPolicyConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.NetworkPolicyConfig} NetworkPolicyConfig
                     */
                    NetworkPolicyConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.NetworkPolicyConfig)
                            return object;
                        var message = new $root.google.container.v1.NetworkPolicyConfig();
                        if (object.disabled != null)
                            message.disabled = Boolean(object.disabled);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NetworkPolicyConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.NetworkPolicyConfig
                     * @static
                     * @param {google.container.v1.NetworkPolicyConfig} message NetworkPolicyConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NetworkPolicyConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.disabled = false;
                        if (message.disabled != null && message.hasOwnProperty("disabled"))
                            object.disabled = message.disabled;
                        return object;
                    };
    
                    /**
                     * Converts this NetworkPolicyConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.NetworkPolicyConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NetworkPolicyConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NetworkPolicyConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.NetworkPolicyConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NetworkPolicyConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.NetworkPolicyConfig";
                    };
    
                    return NetworkPolicyConfig;
                })();
    
                v1.DnsCacheConfig = (function() {
    
                    /**
                     * Properties of a DnsCacheConfig.
                     * @memberof google.container.v1
                     * @interface IDnsCacheConfig
                     * @property {boolean|null} [enabled] DnsCacheConfig enabled
                     */
    
                    /**
                     * Constructs a new DnsCacheConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a DnsCacheConfig.
                     * @implements IDnsCacheConfig
                     * @constructor
                     * @param {google.container.v1.IDnsCacheConfig=} [properties] Properties to set
                     */
                    function DnsCacheConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * DnsCacheConfig enabled.
                     * @member {boolean} enabled
                     * @memberof google.container.v1.DnsCacheConfig
                     * @instance
                     */
                    DnsCacheConfig.prototype.enabled = false;
    
                    /**
                     * Creates a new DnsCacheConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.DnsCacheConfig
                     * @static
                     * @param {google.container.v1.IDnsCacheConfig=} [properties] Properties to set
                     * @returns {google.container.v1.DnsCacheConfig} DnsCacheConfig instance
                     */
                    DnsCacheConfig.create = function create(properties) {
                        return new DnsCacheConfig(properties);
                    };
    
                    /**
                     * Encodes the specified DnsCacheConfig message. Does not implicitly {@link google.container.v1.DnsCacheConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.DnsCacheConfig
                     * @static
                     * @param {google.container.v1.IDnsCacheConfig} message DnsCacheConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DnsCacheConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified DnsCacheConfig message, length delimited. Does not implicitly {@link google.container.v1.DnsCacheConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.DnsCacheConfig
                     * @static
                     * @param {google.container.v1.IDnsCacheConfig} message DnsCacheConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DnsCacheConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a DnsCacheConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.DnsCacheConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.DnsCacheConfig} DnsCacheConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DnsCacheConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.DnsCacheConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.enabled = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a DnsCacheConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.DnsCacheConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.DnsCacheConfig} DnsCacheConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DnsCacheConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a DnsCacheConfig message.
                     * @function verify
                     * @memberof google.container.v1.DnsCacheConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    DnsCacheConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            if (typeof message.enabled !== "boolean")
                                return "enabled: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a DnsCacheConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.DnsCacheConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.DnsCacheConfig} DnsCacheConfig
                     */
                    DnsCacheConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.DnsCacheConfig)
                            return object;
                        var message = new $root.google.container.v1.DnsCacheConfig();
                        if (object.enabled != null)
                            message.enabled = Boolean(object.enabled);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a DnsCacheConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.DnsCacheConfig
                     * @static
                     * @param {google.container.v1.DnsCacheConfig} message DnsCacheConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    DnsCacheConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.enabled = false;
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            object.enabled = message.enabled;
                        return object;
                    };
    
                    /**
                     * Converts this DnsCacheConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.DnsCacheConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    DnsCacheConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for DnsCacheConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.DnsCacheConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    DnsCacheConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.DnsCacheConfig";
                    };
    
                    return DnsCacheConfig;
                })();
    
                v1.PrivateClusterMasterGlobalAccessConfig = (function() {
    
                    /**
                     * Properties of a PrivateClusterMasterGlobalAccessConfig.
                     * @memberof google.container.v1
                     * @interface IPrivateClusterMasterGlobalAccessConfig
                     * @property {boolean|null} [enabled] PrivateClusterMasterGlobalAccessConfig enabled
                     */
    
                    /**
                     * Constructs a new PrivateClusterMasterGlobalAccessConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a PrivateClusterMasterGlobalAccessConfig.
                     * @implements IPrivateClusterMasterGlobalAccessConfig
                     * @constructor
                     * @param {google.container.v1.IPrivateClusterMasterGlobalAccessConfig=} [properties] Properties to set
                     */
                    function PrivateClusterMasterGlobalAccessConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * PrivateClusterMasterGlobalAccessConfig enabled.
                     * @member {boolean} enabled
                     * @memberof google.container.v1.PrivateClusterMasterGlobalAccessConfig
                     * @instance
                     */
                    PrivateClusterMasterGlobalAccessConfig.prototype.enabled = false;
    
                    /**
                     * Creates a new PrivateClusterMasterGlobalAccessConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.PrivateClusterMasterGlobalAccessConfig
                     * @static
                     * @param {google.container.v1.IPrivateClusterMasterGlobalAccessConfig=} [properties] Properties to set
                     * @returns {google.container.v1.PrivateClusterMasterGlobalAccessConfig} PrivateClusterMasterGlobalAccessConfig instance
                     */
                    PrivateClusterMasterGlobalAccessConfig.create = function create(properties) {
                        return new PrivateClusterMasterGlobalAccessConfig(properties);
                    };
    
                    /**
                     * Encodes the specified PrivateClusterMasterGlobalAccessConfig message. Does not implicitly {@link google.container.v1.PrivateClusterMasterGlobalAccessConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.PrivateClusterMasterGlobalAccessConfig
                     * @static
                     * @param {google.container.v1.IPrivateClusterMasterGlobalAccessConfig} message PrivateClusterMasterGlobalAccessConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    PrivateClusterMasterGlobalAccessConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified PrivateClusterMasterGlobalAccessConfig message, length delimited. Does not implicitly {@link google.container.v1.PrivateClusterMasterGlobalAccessConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.PrivateClusterMasterGlobalAccessConfig
                     * @static
                     * @param {google.container.v1.IPrivateClusterMasterGlobalAccessConfig} message PrivateClusterMasterGlobalAccessConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    PrivateClusterMasterGlobalAccessConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a PrivateClusterMasterGlobalAccessConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.PrivateClusterMasterGlobalAccessConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.PrivateClusterMasterGlobalAccessConfig} PrivateClusterMasterGlobalAccessConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    PrivateClusterMasterGlobalAccessConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.PrivateClusterMasterGlobalAccessConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.enabled = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a PrivateClusterMasterGlobalAccessConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.PrivateClusterMasterGlobalAccessConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.PrivateClusterMasterGlobalAccessConfig} PrivateClusterMasterGlobalAccessConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    PrivateClusterMasterGlobalAccessConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a PrivateClusterMasterGlobalAccessConfig message.
                     * @function verify
                     * @memberof google.container.v1.PrivateClusterMasterGlobalAccessConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    PrivateClusterMasterGlobalAccessConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            if (typeof message.enabled !== "boolean")
                                return "enabled: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a PrivateClusterMasterGlobalAccessConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.PrivateClusterMasterGlobalAccessConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.PrivateClusterMasterGlobalAccessConfig} PrivateClusterMasterGlobalAccessConfig
                     */
                    PrivateClusterMasterGlobalAccessConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.PrivateClusterMasterGlobalAccessConfig)
                            return object;
                        var message = new $root.google.container.v1.PrivateClusterMasterGlobalAccessConfig();
                        if (object.enabled != null)
                            message.enabled = Boolean(object.enabled);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a PrivateClusterMasterGlobalAccessConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.PrivateClusterMasterGlobalAccessConfig
                     * @static
                     * @param {google.container.v1.PrivateClusterMasterGlobalAccessConfig} message PrivateClusterMasterGlobalAccessConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    PrivateClusterMasterGlobalAccessConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.enabled = false;
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            object.enabled = message.enabled;
                        return object;
                    };
    
                    /**
                     * Converts this PrivateClusterMasterGlobalAccessConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.PrivateClusterMasterGlobalAccessConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    PrivateClusterMasterGlobalAccessConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for PrivateClusterMasterGlobalAccessConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.PrivateClusterMasterGlobalAccessConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    PrivateClusterMasterGlobalAccessConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.PrivateClusterMasterGlobalAccessConfig";
                    };
    
                    return PrivateClusterMasterGlobalAccessConfig;
                })();
    
                v1.PrivateClusterConfig = (function() {
    
                    /**
                     * Properties of a PrivateClusterConfig.
                     * @memberof google.container.v1
                     * @interface IPrivateClusterConfig
                     * @property {boolean|null} [enablePrivateNodes] PrivateClusterConfig enablePrivateNodes
                     * @property {boolean|null} [enablePrivateEndpoint] PrivateClusterConfig enablePrivateEndpoint
                     * @property {string|null} [masterIpv4CidrBlock] PrivateClusterConfig masterIpv4CidrBlock
                     * @property {string|null} [privateEndpoint] PrivateClusterConfig privateEndpoint
                     * @property {string|null} [publicEndpoint] PrivateClusterConfig publicEndpoint
                     * @property {string|null} [peeringName] PrivateClusterConfig peeringName
                     * @property {google.container.v1.IPrivateClusterMasterGlobalAccessConfig|null} [masterGlobalAccessConfig] PrivateClusterConfig masterGlobalAccessConfig
                     * @property {string|null} [privateEndpointSubnetwork] PrivateClusterConfig privateEndpointSubnetwork
                     */
    
                    /**
                     * Constructs a new PrivateClusterConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a PrivateClusterConfig.
                     * @implements IPrivateClusterConfig
                     * @constructor
                     * @param {google.container.v1.IPrivateClusterConfig=} [properties] Properties to set
                     */
                    function PrivateClusterConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * PrivateClusterConfig enablePrivateNodes.
                     * @member {boolean} enablePrivateNodes
                     * @memberof google.container.v1.PrivateClusterConfig
                     * @instance
                     */
                    PrivateClusterConfig.prototype.enablePrivateNodes = false;
    
                    /**
                     * PrivateClusterConfig enablePrivateEndpoint.
                     * @member {boolean} enablePrivateEndpoint
                     * @memberof google.container.v1.PrivateClusterConfig
                     * @instance
                     */
                    PrivateClusterConfig.prototype.enablePrivateEndpoint = false;
    
                    /**
                     * PrivateClusterConfig masterIpv4CidrBlock.
                     * @member {string} masterIpv4CidrBlock
                     * @memberof google.container.v1.PrivateClusterConfig
                     * @instance
                     */
                    PrivateClusterConfig.prototype.masterIpv4CidrBlock = "";
    
                    /**
                     * PrivateClusterConfig privateEndpoint.
                     * @member {string} privateEndpoint
                     * @memberof google.container.v1.PrivateClusterConfig
                     * @instance
                     */
                    PrivateClusterConfig.prototype.privateEndpoint = "";
    
                    /**
                     * PrivateClusterConfig publicEndpoint.
                     * @member {string} publicEndpoint
                     * @memberof google.container.v1.PrivateClusterConfig
                     * @instance
                     */
                    PrivateClusterConfig.prototype.publicEndpoint = "";
    
                    /**
                     * PrivateClusterConfig peeringName.
                     * @member {string} peeringName
                     * @memberof google.container.v1.PrivateClusterConfig
                     * @instance
                     */
                    PrivateClusterConfig.prototype.peeringName = "";
    
                    /**
                     * PrivateClusterConfig masterGlobalAccessConfig.
                     * @member {google.container.v1.IPrivateClusterMasterGlobalAccessConfig|null|undefined} masterGlobalAccessConfig
                     * @memberof google.container.v1.PrivateClusterConfig
                     * @instance
                     */
                    PrivateClusterConfig.prototype.masterGlobalAccessConfig = null;
    
                    /**
                     * PrivateClusterConfig privateEndpointSubnetwork.
                     * @member {string} privateEndpointSubnetwork
                     * @memberof google.container.v1.PrivateClusterConfig
                     * @instance
                     */
                    PrivateClusterConfig.prototype.privateEndpointSubnetwork = "";
    
                    /**
                     * Creates a new PrivateClusterConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.PrivateClusterConfig
                     * @static
                     * @param {google.container.v1.IPrivateClusterConfig=} [properties] Properties to set
                     * @returns {google.container.v1.PrivateClusterConfig} PrivateClusterConfig instance
                     */
                    PrivateClusterConfig.create = function create(properties) {
                        return new PrivateClusterConfig(properties);
                    };
    
                    /**
                     * Encodes the specified PrivateClusterConfig message. Does not implicitly {@link google.container.v1.PrivateClusterConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.PrivateClusterConfig
                     * @static
                     * @param {google.container.v1.IPrivateClusterConfig} message PrivateClusterConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    PrivateClusterConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.enablePrivateNodes != null && Object.hasOwnProperty.call(message, "enablePrivateNodes"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enablePrivateNodes);
                        if (message.enablePrivateEndpoint != null && Object.hasOwnProperty.call(message, "enablePrivateEndpoint"))
                            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.enablePrivateEndpoint);
                        if (message.masterIpv4CidrBlock != null && Object.hasOwnProperty.call(message, "masterIpv4CidrBlock"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.masterIpv4CidrBlock);
                        if (message.privateEndpoint != null && Object.hasOwnProperty.call(message, "privateEndpoint"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.privateEndpoint);
                        if (message.publicEndpoint != null && Object.hasOwnProperty.call(message, "publicEndpoint"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.publicEndpoint);
                        if (message.peeringName != null && Object.hasOwnProperty.call(message, "peeringName"))
                            writer.uint32(/* id 7, wireType 2 =*/58).string(message.peeringName);
                        if (message.masterGlobalAccessConfig != null && Object.hasOwnProperty.call(message, "masterGlobalAccessConfig"))
                            $root.google.container.v1.PrivateClusterMasterGlobalAccessConfig.encode(message.masterGlobalAccessConfig, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                        if (message.privateEndpointSubnetwork != null && Object.hasOwnProperty.call(message, "privateEndpointSubnetwork"))
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.privateEndpointSubnetwork);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified PrivateClusterConfig message, length delimited. Does not implicitly {@link google.container.v1.PrivateClusterConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.PrivateClusterConfig
                     * @static
                     * @param {google.container.v1.IPrivateClusterConfig} message PrivateClusterConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    PrivateClusterConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a PrivateClusterConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.PrivateClusterConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.PrivateClusterConfig} PrivateClusterConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    PrivateClusterConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.PrivateClusterConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.enablePrivateNodes = reader.bool();
                                    break;
                                }
                            case 2: {
                                    message.enablePrivateEndpoint = reader.bool();
                                    break;
                                }
                            case 3: {
                                    message.masterIpv4CidrBlock = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.privateEndpoint = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.publicEndpoint = reader.string();
                                    break;
                                }
                            case 7: {
                                    message.peeringName = reader.string();
                                    break;
                                }
                            case 8: {
                                    message.masterGlobalAccessConfig = $root.google.container.v1.PrivateClusterMasterGlobalAccessConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 10: {
                                    message.privateEndpointSubnetwork = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a PrivateClusterConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.PrivateClusterConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.PrivateClusterConfig} PrivateClusterConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    PrivateClusterConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a PrivateClusterConfig message.
                     * @function verify
                     * @memberof google.container.v1.PrivateClusterConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    PrivateClusterConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.enablePrivateNodes != null && message.hasOwnProperty("enablePrivateNodes"))
                            if (typeof message.enablePrivateNodes !== "boolean")
                                return "enablePrivateNodes: boolean expected";
                        if (message.enablePrivateEndpoint != null && message.hasOwnProperty("enablePrivateEndpoint"))
                            if (typeof message.enablePrivateEndpoint !== "boolean")
                                return "enablePrivateEndpoint: boolean expected";
                        if (message.masterIpv4CidrBlock != null && message.hasOwnProperty("masterIpv4CidrBlock"))
                            if (!$util.isString(message.masterIpv4CidrBlock))
                                return "masterIpv4CidrBlock: string expected";
                        if (message.privateEndpoint != null && message.hasOwnProperty("privateEndpoint"))
                            if (!$util.isString(message.privateEndpoint))
                                return "privateEndpoint: string expected";
                        if (message.publicEndpoint != null && message.hasOwnProperty("publicEndpoint"))
                            if (!$util.isString(message.publicEndpoint))
                                return "publicEndpoint: string expected";
                        if (message.peeringName != null && message.hasOwnProperty("peeringName"))
                            if (!$util.isString(message.peeringName))
                                return "peeringName: string expected";
                        if (message.masterGlobalAccessConfig != null && message.hasOwnProperty("masterGlobalAccessConfig")) {
                            var error = $root.google.container.v1.PrivateClusterMasterGlobalAccessConfig.verify(message.masterGlobalAccessConfig);
                            if (error)
                                return "masterGlobalAccessConfig." + error;
                        }
                        if (message.privateEndpointSubnetwork != null && message.hasOwnProperty("privateEndpointSubnetwork"))
                            if (!$util.isString(message.privateEndpointSubnetwork))
                                return "privateEndpointSubnetwork: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a PrivateClusterConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.PrivateClusterConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.PrivateClusterConfig} PrivateClusterConfig
                     */
                    PrivateClusterConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.PrivateClusterConfig)
                            return object;
                        var message = new $root.google.container.v1.PrivateClusterConfig();
                        if (object.enablePrivateNodes != null)
                            message.enablePrivateNodes = Boolean(object.enablePrivateNodes);
                        if (object.enablePrivateEndpoint != null)
                            message.enablePrivateEndpoint = Boolean(object.enablePrivateEndpoint);
                        if (object.masterIpv4CidrBlock != null)
                            message.masterIpv4CidrBlock = String(object.masterIpv4CidrBlock);
                        if (object.privateEndpoint != null)
                            message.privateEndpoint = String(object.privateEndpoint);
                        if (object.publicEndpoint != null)
                            message.publicEndpoint = String(object.publicEndpoint);
                        if (object.peeringName != null)
                            message.peeringName = String(object.peeringName);
                        if (object.masterGlobalAccessConfig != null) {
                            if (typeof object.masterGlobalAccessConfig !== "object")
                                throw TypeError(".google.container.v1.PrivateClusterConfig.masterGlobalAccessConfig: object expected");
                            message.masterGlobalAccessConfig = $root.google.container.v1.PrivateClusterMasterGlobalAccessConfig.fromObject(object.masterGlobalAccessConfig);
                        }
                        if (object.privateEndpointSubnetwork != null)
                            message.privateEndpointSubnetwork = String(object.privateEndpointSubnetwork);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a PrivateClusterConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.PrivateClusterConfig
                     * @static
                     * @param {google.container.v1.PrivateClusterConfig} message PrivateClusterConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    PrivateClusterConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.enablePrivateNodes = false;
                            object.enablePrivateEndpoint = false;
                            object.masterIpv4CidrBlock = "";
                            object.privateEndpoint = "";
                            object.publicEndpoint = "";
                            object.peeringName = "";
                            object.masterGlobalAccessConfig = null;
                            object.privateEndpointSubnetwork = "";
                        }
                        if (message.enablePrivateNodes != null && message.hasOwnProperty("enablePrivateNodes"))
                            object.enablePrivateNodes = message.enablePrivateNodes;
                        if (message.enablePrivateEndpoint != null && message.hasOwnProperty("enablePrivateEndpoint"))
                            object.enablePrivateEndpoint = message.enablePrivateEndpoint;
                        if (message.masterIpv4CidrBlock != null && message.hasOwnProperty("masterIpv4CidrBlock"))
                            object.masterIpv4CidrBlock = message.masterIpv4CidrBlock;
                        if (message.privateEndpoint != null && message.hasOwnProperty("privateEndpoint"))
                            object.privateEndpoint = message.privateEndpoint;
                        if (message.publicEndpoint != null && message.hasOwnProperty("publicEndpoint"))
                            object.publicEndpoint = message.publicEndpoint;
                        if (message.peeringName != null && message.hasOwnProperty("peeringName"))
                            object.peeringName = message.peeringName;
                        if (message.masterGlobalAccessConfig != null && message.hasOwnProperty("masterGlobalAccessConfig"))
                            object.masterGlobalAccessConfig = $root.google.container.v1.PrivateClusterMasterGlobalAccessConfig.toObject(message.masterGlobalAccessConfig, options);
                        if (message.privateEndpointSubnetwork != null && message.hasOwnProperty("privateEndpointSubnetwork"))
                            object.privateEndpointSubnetwork = message.privateEndpointSubnetwork;
                        return object;
                    };
    
                    /**
                     * Converts this PrivateClusterConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.PrivateClusterConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    PrivateClusterConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for PrivateClusterConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.PrivateClusterConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    PrivateClusterConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.PrivateClusterConfig";
                    };
    
                    return PrivateClusterConfig;
                })();
    
                v1.AuthenticatorGroupsConfig = (function() {
    
                    /**
                     * Properties of an AuthenticatorGroupsConfig.
                     * @memberof google.container.v1
                     * @interface IAuthenticatorGroupsConfig
                     * @property {boolean|null} [enabled] AuthenticatorGroupsConfig enabled
                     * @property {string|null} [securityGroup] AuthenticatorGroupsConfig securityGroup
                     */
    
                    /**
                     * Constructs a new AuthenticatorGroupsConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents an AuthenticatorGroupsConfig.
                     * @implements IAuthenticatorGroupsConfig
                     * @constructor
                     * @param {google.container.v1.IAuthenticatorGroupsConfig=} [properties] Properties to set
                     */
                    function AuthenticatorGroupsConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * AuthenticatorGroupsConfig enabled.
                     * @member {boolean} enabled
                     * @memberof google.container.v1.AuthenticatorGroupsConfig
                     * @instance
                     */
                    AuthenticatorGroupsConfig.prototype.enabled = false;
    
                    /**
                     * AuthenticatorGroupsConfig securityGroup.
                     * @member {string} securityGroup
                     * @memberof google.container.v1.AuthenticatorGroupsConfig
                     * @instance
                     */
                    AuthenticatorGroupsConfig.prototype.securityGroup = "";
    
                    /**
                     * Creates a new AuthenticatorGroupsConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.AuthenticatorGroupsConfig
                     * @static
                     * @param {google.container.v1.IAuthenticatorGroupsConfig=} [properties] Properties to set
                     * @returns {google.container.v1.AuthenticatorGroupsConfig} AuthenticatorGroupsConfig instance
                     */
                    AuthenticatorGroupsConfig.create = function create(properties) {
                        return new AuthenticatorGroupsConfig(properties);
                    };
    
                    /**
                     * Encodes the specified AuthenticatorGroupsConfig message. Does not implicitly {@link google.container.v1.AuthenticatorGroupsConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.AuthenticatorGroupsConfig
                     * @static
                     * @param {google.container.v1.IAuthenticatorGroupsConfig} message AuthenticatorGroupsConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AuthenticatorGroupsConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                        if (message.securityGroup != null && Object.hasOwnProperty.call(message, "securityGroup"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.securityGroup);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified AuthenticatorGroupsConfig message, length delimited. Does not implicitly {@link google.container.v1.AuthenticatorGroupsConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.AuthenticatorGroupsConfig
                     * @static
                     * @param {google.container.v1.IAuthenticatorGroupsConfig} message AuthenticatorGroupsConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AuthenticatorGroupsConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an AuthenticatorGroupsConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.AuthenticatorGroupsConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.AuthenticatorGroupsConfig} AuthenticatorGroupsConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AuthenticatorGroupsConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.AuthenticatorGroupsConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.enabled = reader.bool();
                                    break;
                                }
                            case 2: {
                                    message.securityGroup = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an AuthenticatorGroupsConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.AuthenticatorGroupsConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.AuthenticatorGroupsConfig} AuthenticatorGroupsConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AuthenticatorGroupsConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an AuthenticatorGroupsConfig message.
                     * @function verify
                     * @memberof google.container.v1.AuthenticatorGroupsConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    AuthenticatorGroupsConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            if (typeof message.enabled !== "boolean")
                                return "enabled: boolean expected";
                        if (message.securityGroup != null && message.hasOwnProperty("securityGroup"))
                            if (!$util.isString(message.securityGroup))
                                return "securityGroup: string expected";
                        return null;
                    };
    
                    /**
                     * Creates an AuthenticatorGroupsConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.AuthenticatorGroupsConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.AuthenticatorGroupsConfig} AuthenticatorGroupsConfig
                     */
                    AuthenticatorGroupsConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.AuthenticatorGroupsConfig)
                            return object;
                        var message = new $root.google.container.v1.AuthenticatorGroupsConfig();
                        if (object.enabled != null)
                            message.enabled = Boolean(object.enabled);
                        if (object.securityGroup != null)
                            message.securityGroup = String(object.securityGroup);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an AuthenticatorGroupsConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.AuthenticatorGroupsConfig
                     * @static
                     * @param {google.container.v1.AuthenticatorGroupsConfig} message AuthenticatorGroupsConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    AuthenticatorGroupsConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.enabled = false;
                            object.securityGroup = "";
                        }
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            object.enabled = message.enabled;
                        if (message.securityGroup != null && message.hasOwnProperty("securityGroup"))
                            object.securityGroup = message.securityGroup;
                        return object;
                    };
    
                    /**
                     * Converts this AuthenticatorGroupsConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.AuthenticatorGroupsConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    AuthenticatorGroupsConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for AuthenticatorGroupsConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.AuthenticatorGroupsConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    AuthenticatorGroupsConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.AuthenticatorGroupsConfig";
                    };
    
                    return AuthenticatorGroupsConfig;
                })();
    
                v1.CloudRunConfig = (function() {
    
                    /**
                     * Properties of a CloudRunConfig.
                     * @memberof google.container.v1
                     * @interface ICloudRunConfig
                     * @property {boolean|null} [disabled] CloudRunConfig disabled
                     * @property {google.container.v1.CloudRunConfig.LoadBalancerType|null} [loadBalancerType] CloudRunConfig loadBalancerType
                     */
    
                    /**
                     * Constructs a new CloudRunConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a CloudRunConfig.
                     * @implements ICloudRunConfig
                     * @constructor
                     * @param {google.container.v1.ICloudRunConfig=} [properties] Properties to set
                     */
                    function CloudRunConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * CloudRunConfig disabled.
                     * @member {boolean} disabled
                     * @memberof google.container.v1.CloudRunConfig
                     * @instance
                     */
                    CloudRunConfig.prototype.disabled = false;
    
                    /**
                     * CloudRunConfig loadBalancerType.
                     * @member {google.container.v1.CloudRunConfig.LoadBalancerType} loadBalancerType
                     * @memberof google.container.v1.CloudRunConfig
                     * @instance
                     */
                    CloudRunConfig.prototype.loadBalancerType = 0;
    
                    /**
                     * Creates a new CloudRunConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.CloudRunConfig
                     * @static
                     * @param {google.container.v1.ICloudRunConfig=} [properties] Properties to set
                     * @returns {google.container.v1.CloudRunConfig} CloudRunConfig instance
                     */
                    CloudRunConfig.create = function create(properties) {
                        return new CloudRunConfig(properties);
                    };
    
                    /**
                     * Encodes the specified CloudRunConfig message. Does not implicitly {@link google.container.v1.CloudRunConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.CloudRunConfig
                     * @static
                     * @param {google.container.v1.ICloudRunConfig} message CloudRunConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CloudRunConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.disabled != null && Object.hasOwnProperty.call(message, "disabled"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.disabled);
                        if (message.loadBalancerType != null && Object.hasOwnProperty.call(message, "loadBalancerType"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.loadBalancerType);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified CloudRunConfig message, length delimited. Does not implicitly {@link google.container.v1.CloudRunConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.CloudRunConfig
                     * @static
                     * @param {google.container.v1.ICloudRunConfig} message CloudRunConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CloudRunConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a CloudRunConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.CloudRunConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.CloudRunConfig} CloudRunConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CloudRunConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.CloudRunConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.disabled = reader.bool();
                                    break;
                                }
                            case 3: {
                                    message.loadBalancerType = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a CloudRunConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.CloudRunConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.CloudRunConfig} CloudRunConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CloudRunConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a CloudRunConfig message.
                     * @function verify
                     * @memberof google.container.v1.CloudRunConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    CloudRunConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.disabled != null && message.hasOwnProperty("disabled"))
                            if (typeof message.disabled !== "boolean")
                                return "disabled: boolean expected";
                        if (message.loadBalancerType != null && message.hasOwnProperty("loadBalancerType"))
                            switch (message.loadBalancerType) {
                            default:
                                return "loadBalancerType: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates a CloudRunConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.CloudRunConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.CloudRunConfig} CloudRunConfig
                     */
                    CloudRunConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.CloudRunConfig)
                            return object;
                        var message = new $root.google.container.v1.CloudRunConfig();
                        if (object.disabled != null)
                            message.disabled = Boolean(object.disabled);
                        switch (object.loadBalancerType) {
                        default:
                            if (typeof object.loadBalancerType === "number") {
                                message.loadBalancerType = object.loadBalancerType;
                                break;
                            }
                            break;
                        case "LOAD_BALANCER_TYPE_UNSPECIFIED":
                        case 0:
                            message.loadBalancerType = 0;
                            break;
                        case "LOAD_BALANCER_TYPE_EXTERNAL":
                        case 1:
                            message.loadBalancerType = 1;
                            break;
                        case "LOAD_BALANCER_TYPE_INTERNAL":
                        case 2:
                            message.loadBalancerType = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a CloudRunConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.CloudRunConfig
                     * @static
                     * @param {google.container.v1.CloudRunConfig} message CloudRunConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    CloudRunConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.disabled = false;
                            object.loadBalancerType = options.enums === String ? "LOAD_BALANCER_TYPE_UNSPECIFIED" : 0;
                        }
                        if (message.disabled != null && message.hasOwnProperty("disabled"))
                            object.disabled = message.disabled;
                        if (message.loadBalancerType != null && message.hasOwnProperty("loadBalancerType"))
                            object.loadBalancerType = options.enums === String ? $root.google.container.v1.CloudRunConfig.LoadBalancerType[message.loadBalancerType] === undefined ? message.loadBalancerType : $root.google.container.v1.CloudRunConfig.LoadBalancerType[message.loadBalancerType] : message.loadBalancerType;
                        return object;
                    };
    
                    /**
                     * Converts this CloudRunConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.CloudRunConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    CloudRunConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for CloudRunConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.CloudRunConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    CloudRunConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.CloudRunConfig";
                    };
    
                    /**
                     * LoadBalancerType enum.
                     * @name google.container.v1.CloudRunConfig.LoadBalancerType
                     * @enum {number}
                     * @property {number} LOAD_BALANCER_TYPE_UNSPECIFIED=0 LOAD_BALANCER_TYPE_UNSPECIFIED value
                     * @property {number} LOAD_BALANCER_TYPE_EXTERNAL=1 LOAD_BALANCER_TYPE_EXTERNAL value
                     * @property {number} LOAD_BALANCER_TYPE_INTERNAL=2 LOAD_BALANCER_TYPE_INTERNAL value
                     */
                    CloudRunConfig.LoadBalancerType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "LOAD_BALANCER_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "LOAD_BALANCER_TYPE_EXTERNAL"] = 1;
                        values[valuesById[2] = "LOAD_BALANCER_TYPE_INTERNAL"] = 2;
                        return values;
                    })();
    
                    return CloudRunConfig;
                })();
    
                v1.ConfigConnectorConfig = (function() {
    
                    /**
                     * Properties of a ConfigConnectorConfig.
                     * @memberof google.container.v1
                     * @interface IConfigConnectorConfig
                     * @property {boolean|null} [enabled] ConfigConnectorConfig enabled
                     */
    
                    /**
                     * Constructs a new ConfigConnectorConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a ConfigConnectorConfig.
                     * @implements IConfigConnectorConfig
                     * @constructor
                     * @param {google.container.v1.IConfigConnectorConfig=} [properties] Properties to set
                     */
                    function ConfigConnectorConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ConfigConnectorConfig enabled.
                     * @member {boolean} enabled
                     * @memberof google.container.v1.ConfigConnectorConfig
                     * @instance
                     */
                    ConfigConnectorConfig.prototype.enabled = false;
    
                    /**
                     * Creates a new ConfigConnectorConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.ConfigConnectorConfig
                     * @static
                     * @param {google.container.v1.IConfigConnectorConfig=} [properties] Properties to set
                     * @returns {google.container.v1.ConfigConnectorConfig} ConfigConnectorConfig instance
                     */
                    ConfigConnectorConfig.create = function create(properties) {
                        return new ConfigConnectorConfig(properties);
                    };
    
                    /**
                     * Encodes the specified ConfigConnectorConfig message. Does not implicitly {@link google.container.v1.ConfigConnectorConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.ConfigConnectorConfig
                     * @static
                     * @param {google.container.v1.IConfigConnectorConfig} message ConfigConnectorConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ConfigConnectorConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ConfigConnectorConfig message, length delimited. Does not implicitly {@link google.container.v1.ConfigConnectorConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.ConfigConnectorConfig
                     * @static
                     * @param {google.container.v1.IConfigConnectorConfig} message ConfigConnectorConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ConfigConnectorConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ConfigConnectorConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.ConfigConnectorConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.ConfigConnectorConfig} ConfigConnectorConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ConfigConnectorConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.ConfigConnectorConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.enabled = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ConfigConnectorConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.ConfigConnectorConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.ConfigConnectorConfig} ConfigConnectorConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ConfigConnectorConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ConfigConnectorConfig message.
                     * @function verify
                     * @memberof google.container.v1.ConfigConnectorConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ConfigConnectorConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            if (typeof message.enabled !== "boolean")
                                return "enabled: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a ConfigConnectorConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.ConfigConnectorConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.ConfigConnectorConfig} ConfigConnectorConfig
                     */
                    ConfigConnectorConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.ConfigConnectorConfig)
                            return object;
                        var message = new $root.google.container.v1.ConfigConnectorConfig();
                        if (object.enabled != null)
                            message.enabled = Boolean(object.enabled);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ConfigConnectorConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.ConfigConnectorConfig
                     * @static
                     * @param {google.container.v1.ConfigConnectorConfig} message ConfigConnectorConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ConfigConnectorConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.enabled = false;
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            object.enabled = message.enabled;
                        return object;
                    };
    
                    /**
                     * Converts this ConfigConnectorConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.ConfigConnectorConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ConfigConnectorConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ConfigConnectorConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.ConfigConnectorConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ConfigConnectorConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.ConfigConnectorConfig";
                    };
    
                    return ConfigConnectorConfig;
                })();
    
                v1.GcePersistentDiskCsiDriverConfig = (function() {
    
                    /**
                     * Properties of a GcePersistentDiskCsiDriverConfig.
                     * @memberof google.container.v1
                     * @interface IGcePersistentDiskCsiDriverConfig
                     * @property {boolean|null} [enabled] GcePersistentDiskCsiDriverConfig enabled
                     */
    
                    /**
                     * Constructs a new GcePersistentDiskCsiDriverConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a GcePersistentDiskCsiDriverConfig.
                     * @implements IGcePersistentDiskCsiDriverConfig
                     * @constructor
                     * @param {google.container.v1.IGcePersistentDiskCsiDriverConfig=} [properties] Properties to set
                     */
                    function GcePersistentDiskCsiDriverConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GcePersistentDiskCsiDriverConfig enabled.
                     * @member {boolean} enabled
                     * @memberof google.container.v1.GcePersistentDiskCsiDriverConfig
                     * @instance
                     */
                    GcePersistentDiskCsiDriverConfig.prototype.enabled = false;
    
                    /**
                     * Creates a new GcePersistentDiskCsiDriverConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.GcePersistentDiskCsiDriverConfig
                     * @static
                     * @param {google.container.v1.IGcePersistentDiskCsiDriverConfig=} [properties] Properties to set
                     * @returns {google.container.v1.GcePersistentDiskCsiDriverConfig} GcePersistentDiskCsiDriverConfig instance
                     */
                    GcePersistentDiskCsiDriverConfig.create = function create(properties) {
                        return new GcePersistentDiskCsiDriverConfig(properties);
                    };
    
                    /**
                     * Encodes the specified GcePersistentDiskCsiDriverConfig message. Does not implicitly {@link google.container.v1.GcePersistentDiskCsiDriverConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.GcePersistentDiskCsiDriverConfig
                     * @static
                     * @param {google.container.v1.IGcePersistentDiskCsiDriverConfig} message GcePersistentDiskCsiDriverConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GcePersistentDiskCsiDriverConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GcePersistentDiskCsiDriverConfig message, length delimited. Does not implicitly {@link google.container.v1.GcePersistentDiskCsiDriverConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.GcePersistentDiskCsiDriverConfig
                     * @static
                     * @param {google.container.v1.IGcePersistentDiskCsiDriverConfig} message GcePersistentDiskCsiDriverConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GcePersistentDiskCsiDriverConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GcePersistentDiskCsiDriverConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.GcePersistentDiskCsiDriverConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.GcePersistentDiskCsiDriverConfig} GcePersistentDiskCsiDriverConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GcePersistentDiskCsiDriverConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.GcePersistentDiskCsiDriverConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.enabled = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GcePersistentDiskCsiDriverConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.GcePersistentDiskCsiDriverConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.GcePersistentDiskCsiDriverConfig} GcePersistentDiskCsiDriverConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GcePersistentDiskCsiDriverConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GcePersistentDiskCsiDriverConfig message.
                     * @function verify
                     * @memberof google.container.v1.GcePersistentDiskCsiDriverConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GcePersistentDiskCsiDriverConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            if (typeof message.enabled !== "boolean")
                                return "enabled: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a GcePersistentDiskCsiDriverConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.GcePersistentDiskCsiDriverConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.GcePersistentDiskCsiDriverConfig} GcePersistentDiskCsiDriverConfig
                     */
                    GcePersistentDiskCsiDriverConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.GcePersistentDiskCsiDriverConfig)
                            return object;
                        var message = new $root.google.container.v1.GcePersistentDiskCsiDriverConfig();
                        if (object.enabled != null)
                            message.enabled = Boolean(object.enabled);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GcePersistentDiskCsiDriverConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.GcePersistentDiskCsiDriverConfig
                     * @static
                     * @param {google.container.v1.GcePersistentDiskCsiDriverConfig} message GcePersistentDiskCsiDriverConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GcePersistentDiskCsiDriverConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.enabled = false;
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            object.enabled = message.enabled;
                        return object;
                    };
    
                    /**
                     * Converts this GcePersistentDiskCsiDriverConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.GcePersistentDiskCsiDriverConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GcePersistentDiskCsiDriverConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GcePersistentDiskCsiDriverConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.GcePersistentDiskCsiDriverConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GcePersistentDiskCsiDriverConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.GcePersistentDiskCsiDriverConfig";
                    };
    
                    return GcePersistentDiskCsiDriverConfig;
                })();
    
                v1.GcpFilestoreCsiDriverConfig = (function() {
    
                    /**
                     * Properties of a GcpFilestoreCsiDriverConfig.
                     * @memberof google.container.v1
                     * @interface IGcpFilestoreCsiDriverConfig
                     * @property {boolean|null} [enabled] GcpFilestoreCsiDriverConfig enabled
                     */
    
                    /**
                     * Constructs a new GcpFilestoreCsiDriverConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a GcpFilestoreCsiDriverConfig.
                     * @implements IGcpFilestoreCsiDriverConfig
                     * @constructor
                     * @param {google.container.v1.IGcpFilestoreCsiDriverConfig=} [properties] Properties to set
                     */
                    function GcpFilestoreCsiDriverConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GcpFilestoreCsiDriverConfig enabled.
                     * @member {boolean} enabled
                     * @memberof google.container.v1.GcpFilestoreCsiDriverConfig
                     * @instance
                     */
                    GcpFilestoreCsiDriverConfig.prototype.enabled = false;
    
                    /**
                     * Creates a new GcpFilestoreCsiDriverConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.GcpFilestoreCsiDriverConfig
                     * @static
                     * @param {google.container.v1.IGcpFilestoreCsiDriverConfig=} [properties] Properties to set
                     * @returns {google.container.v1.GcpFilestoreCsiDriverConfig} GcpFilestoreCsiDriverConfig instance
                     */
                    GcpFilestoreCsiDriverConfig.create = function create(properties) {
                        return new GcpFilestoreCsiDriverConfig(properties);
                    };
    
                    /**
                     * Encodes the specified GcpFilestoreCsiDriverConfig message. Does not implicitly {@link google.container.v1.GcpFilestoreCsiDriverConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.GcpFilestoreCsiDriverConfig
                     * @static
                     * @param {google.container.v1.IGcpFilestoreCsiDriverConfig} message GcpFilestoreCsiDriverConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GcpFilestoreCsiDriverConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GcpFilestoreCsiDriverConfig message, length delimited. Does not implicitly {@link google.container.v1.GcpFilestoreCsiDriverConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.GcpFilestoreCsiDriverConfig
                     * @static
                     * @param {google.container.v1.IGcpFilestoreCsiDriverConfig} message GcpFilestoreCsiDriverConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GcpFilestoreCsiDriverConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GcpFilestoreCsiDriverConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.GcpFilestoreCsiDriverConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.GcpFilestoreCsiDriverConfig} GcpFilestoreCsiDriverConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GcpFilestoreCsiDriverConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.GcpFilestoreCsiDriverConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.enabled = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GcpFilestoreCsiDriverConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.GcpFilestoreCsiDriverConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.GcpFilestoreCsiDriverConfig} GcpFilestoreCsiDriverConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GcpFilestoreCsiDriverConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GcpFilestoreCsiDriverConfig message.
                     * @function verify
                     * @memberof google.container.v1.GcpFilestoreCsiDriverConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GcpFilestoreCsiDriverConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            if (typeof message.enabled !== "boolean")
                                return "enabled: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a GcpFilestoreCsiDriverConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.GcpFilestoreCsiDriverConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.GcpFilestoreCsiDriverConfig} GcpFilestoreCsiDriverConfig
                     */
                    GcpFilestoreCsiDriverConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.GcpFilestoreCsiDriverConfig)
                            return object;
                        var message = new $root.google.container.v1.GcpFilestoreCsiDriverConfig();
                        if (object.enabled != null)
                            message.enabled = Boolean(object.enabled);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GcpFilestoreCsiDriverConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.GcpFilestoreCsiDriverConfig
                     * @static
                     * @param {google.container.v1.GcpFilestoreCsiDriverConfig} message GcpFilestoreCsiDriverConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GcpFilestoreCsiDriverConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.enabled = false;
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            object.enabled = message.enabled;
                        return object;
                    };
    
                    /**
                     * Converts this GcpFilestoreCsiDriverConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.GcpFilestoreCsiDriverConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GcpFilestoreCsiDriverConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GcpFilestoreCsiDriverConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.GcpFilestoreCsiDriverConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GcpFilestoreCsiDriverConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.GcpFilestoreCsiDriverConfig";
                    };
    
                    return GcpFilestoreCsiDriverConfig;
                })();
    
                v1.GkeBackupAgentConfig = (function() {
    
                    /**
                     * Properties of a GkeBackupAgentConfig.
                     * @memberof google.container.v1
                     * @interface IGkeBackupAgentConfig
                     * @property {boolean|null} [enabled] GkeBackupAgentConfig enabled
                     */
    
                    /**
                     * Constructs a new GkeBackupAgentConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a GkeBackupAgentConfig.
                     * @implements IGkeBackupAgentConfig
                     * @constructor
                     * @param {google.container.v1.IGkeBackupAgentConfig=} [properties] Properties to set
                     */
                    function GkeBackupAgentConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GkeBackupAgentConfig enabled.
                     * @member {boolean} enabled
                     * @memberof google.container.v1.GkeBackupAgentConfig
                     * @instance
                     */
                    GkeBackupAgentConfig.prototype.enabled = false;
    
                    /**
                     * Creates a new GkeBackupAgentConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.GkeBackupAgentConfig
                     * @static
                     * @param {google.container.v1.IGkeBackupAgentConfig=} [properties] Properties to set
                     * @returns {google.container.v1.GkeBackupAgentConfig} GkeBackupAgentConfig instance
                     */
                    GkeBackupAgentConfig.create = function create(properties) {
                        return new GkeBackupAgentConfig(properties);
                    };
    
                    /**
                     * Encodes the specified GkeBackupAgentConfig message. Does not implicitly {@link google.container.v1.GkeBackupAgentConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.GkeBackupAgentConfig
                     * @static
                     * @param {google.container.v1.IGkeBackupAgentConfig} message GkeBackupAgentConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GkeBackupAgentConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GkeBackupAgentConfig message, length delimited. Does not implicitly {@link google.container.v1.GkeBackupAgentConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.GkeBackupAgentConfig
                     * @static
                     * @param {google.container.v1.IGkeBackupAgentConfig} message GkeBackupAgentConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GkeBackupAgentConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GkeBackupAgentConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.GkeBackupAgentConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.GkeBackupAgentConfig} GkeBackupAgentConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GkeBackupAgentConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.GkeBackupAgentConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.enabled = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GkeBackupAgentConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.GkeBackupAgentConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.GkeBackupAgentConfig} GkeBackupAgentConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GkeBackupAgentConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GkeBackupAgentConfig message.
                     * @function verify
                     * @memberof google.container.v1.GkeBackupAgentConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GkeBackupAgentConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            if (typeof message.enabled !== "boolean")
                                return "enabled: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a GkeBackupAgentConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.GkeBackupAgentConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.GkeBackupAgentConfig} GkeBackupAgentConfig
                     */
                    GkeBackupAgentConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.GkeBackupAgentConfig)
                            return object;
                        var message = new $root.google.container.v1.GkeBackupAgentConfig();
                        if (object.enabled != null)
                            message.enabled = Boolean(object.enabled);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GkeBackupAgentConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.GkeBackupAgentConfig
                     * @static
                     * @param {google.container.v1.GkeBackupAgentConfig} message GkeBackupAgentConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GkeBackupAgentConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.enabled = false;
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            object.enabled = message.enabled;
                        return object;
                    };
    
                    /**
                     * Converts this GkeBackupAgentConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.GkeBackupAgentConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GkeBackupAgentConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GkeBackupAgentConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.GkeBackupAgentConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GkeBackupAgentConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.GkeBackupAgentConfig";
                    };
    
                    return GkeBackupAgentConfig;
                })();
    
                v1.MasterAuthorizedNetworksConfig = (function() {
    
                    /**
                     * Properties of a MasterAuthorizedNetworksConfig.
                     * @memberof google.container.v1
                     * @interface IMasterAuthorizedNetworksConfig
                     * @property {boolean|null} [enabled] MasterAuthorizedNetworksConfig enabled
                     * @property {Array.<google.container.v1.MasterAuthorizedNetworksConfig.ICidrBlock>|null} [cidrBlocks] MasterAuthorizedNetworksConfig cidrBlocks
                     * @property {boolean|null} [gcpPublicCidrsAccessEnabled] MasterAuthorizedNetworksConfig gcpPublicCidrsAccessEnabled
                     */
    
                    /**
                     * Constructs a new MasterAuthorizedNetworksConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a MasterAuthorizedNetworksConfig.
                     * @implements IMasterAuthorizedNetworksConfig
                     * @constructor
                     * @param {google.container.v1.IMasterAuthorizedNetworksConfig=} [properties] Properties to set
                     */
                    function MasterAuthorizedNetworksConfig(properties) {
                        this.cidrBlocks = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * MasterAuthorizedNetworksConfig enabled.
                     * @member {boolean} enabled
                     * @memberof google.container.v1.MasterAuthorizedNetworksConfig
                     * @instance
                     */
                    MasterAuthorizedNetworksConfig.prototype.enabled = false;
    
                    /**
                     * MasterAuthorizedNetworksConfig cidrBlocks.
                     * @member {Array.<google.container.v1.MasterAuthorizedNetworksConfig.ICidrBlock>} cidrBlocks
                     * @memberof google.container.v1.MasterAuthorizedNetworksConfig
                     * @instance
                     */
                    MasterAuthorizedNetworksConfig.prototype.cidrBlocks = $util.emptyArray;
    
                    /**
                     * MasterAuthorizedNetworksConfig gcpPublicCidrsAccessEnabled.
                     * @member {boolean|null|undefined} gcpPublicCidrsAccessEnabled
                     * @memberof google.container.v1.MasterAuthorizedNetworksConfig
                     * @instance
                     */
                    MasterAuthorizedNetworksConfig.prototype.gcpPublicCidrsAccessEnabled = null;
    
                    // OneOf field names bound to virtual getters and setters
                    var $oneOfFields;
    
                    /**
                     * MasterAuthorizedNetworksConfig _gcpPublicCidrsAccessEnabled.
                     * @member {"gcpPublicCidrsAccessEnabled"|undefined} _gcpPublicCidrsAccessEnabled
                     * @memberof google.container.v1.MasterAuthorizedNetworksConfig
                     * @instance
                     */
                    Object.defineProperty(MasterAuthorizedNetworksConfig.prototype, "_gcpPublicCidrsAccessEnabled", {
                        get: $util.oneOfGetter($oneOfFields = ["gcpPublicCidrsAccessEnabled"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });
    
                    /**
                     * Creates a new MasterAuthorizedNetworksConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.MasterAuthorizedNetworksConfig
                     * @static
                     * @param {google.container.v1.IMasterAuthorizedNetworksConfig=} [properties] Properties to set
                     * @returns {google.container.v1.MasterAuthorizedNetworksConfig} MasterAuthorizedNetworksConfig instance
                     */
                    MasterAuthorizedNetworksConfig.create = function create(properties) {
                        return new MasterAuthorizedNetworksConfig(properties);
                    };
    
                    /**
                     * Encodes the specified MasterAuthorizedNetworksConfig message. Does not implicitly {@link google.container.v1.MasterAuthorizedNetworksConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.MasterAuthorizedNetworksConfig
                     * @static
                     * @param {google.container.v1.IMasterAuthorizedNetworksConfig} message MasterAuthorizedNetworksConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MasterAuthorizedNetworksConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                        if (message.cidrBlocks != null && message.cidrBlocks.length)
                            for (var i = 0; i < message.cidrBlocks.length; ++i)
                                $root.google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock.encode(message.cidrBlocks[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.gcpPublicCidrsAccessEnabled != null && Object.hasOwnProperty.call(message, "gcpPublicCidrsAccessEnabled"))
                            writer.uint32(/* id 3, wireType 0 =*/24).bool(message.gcpPublicCidrsAccessEnabled);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified MasterAuthorizedNetworksConfig message, length delimited. Does not implicitly {@link google.container.v1.MasterAuthorizedNetworksConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.MasterAuthorizedNetworksConfig
                     * @static
                     * @param {google.container.v1.IMasterAuthorizedNetworksConfig} message MasterAuthorizedNetworksConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MasterAuthorizedNetworksConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a MasterAuthorizedNetworksConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.MasterAuthorizedNetworksConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.MasterAuthorizedNetworksConfig} MasterAuthorizedNetworksConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MasterAuthorizedNetworksConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.MasterAuthorizedNetworksConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.enabled = reader.bool();
                                    break;
                                }
                            case 2: {
                                    if (!(message.cidrBlocks && message.cidrBlocks.length))
                                        message.cidrBlocks = [];
                                    message.cidrBlocks.push($root.google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 3: {
                                    message.gcpPublicCidrsAccessEnabled = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a MasterAuthorizedNetworksConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.MasterAuthorizedNetworksConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.MasterAuthorizedNetworksConfig} MasterAuthorizedNetworksConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MasterAuthorizedNetworksConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a MasterAuthorizedNetworksConfig message.
                     * @function verify
                     * @memberof google.container.v1.MasterAuthorizedNetworksConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    MasterAuthorizedNetworksConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        var properties = {};
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            if (typeof message.enabled !== "boolean")
                                return "enabled: boolean expected";
                        if (message.cidrBlocks != null && message.hasOwnProperty("cidrBlocks")) {
                            if (!Array.isArray(message.cidrBlocks))
                                return "cidrBlocks: array expected";
                            for (var i = 0; i < message.cidrBlocks.length; ++i) {
                                var error = $root.google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock.verify(message.cidrBlocks[i]);
                                if (error)
                                    return "cidrBlocks." + error;
                            }
                        }
                        if (message.gcpPublicCidrsAccessEnabled != null && message.hasOwnProperty("gcpPublicCidrsAccessEnabled")) {
                            properties._gcpPublicCidrsAccessEnabled = 1;
                            if (typeof message.gcpPublicCidrsAccessEnabled !== "boolean")
                                return "gcpPublicCidrsAccessEnabled: boolean expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a MasterAuthorizedNetworksConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.MasterAuthorizedNetworksConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.MasterAuthorizedNetworksConfig} MasterAuthorizedNetworksConfig
                     */
                    MasterAuthorizedNetworksConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.MasterAuthorizedNetworksConfig)
                            return object;
                        var message = new $root.google.container.v1.MasterAuthorizedNetworksConfig();
                        if (object.enabled != null)
                            message.enabled = Boolean(object.enabled);
                        if (object.cidrBlocks) {
                            if (!Array.isArray(object.cidrBlocks))
                                throw TypeError(".google.container.v1.MasterAuthorizedNetworksConfig.cidrBlocks: array expected");
                            message.cidrBlocks = [];
                            for (var i = 0; i < object.cidrBlocks.length; ++i) {
                                if (typeof object.cidrBlocks[i] !== "object")
                                    throw TypeError(".google.container.v1.MasterAuthorizedNetworksConfig.cidrBlocks: object expected");
                                message.cidrBlocks[i] = $root.google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock.fromObject(object.cidrBlocks[i]);
                            }
                        }
                        if (object.gcpPublicCidrsAccessEnabled != null)
                            message.gcpPublicCidrsAccessEnabled = Boolean(object.gcpPublicCidrsAccessEnabled);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a MasterAuthorizedNetworksConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.MasterAuthorizedNetworksConfig
                     * @static
                     * @param {google.container.v1.MasterAuthorizedNetworksConfig} message MasterAuthorizedNetworksConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    MasterAuthorizedNetworksConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.cidrBlocks = [];
                        if (options.defaults)
                            object.enabled = false;
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            object.enabled = message.enabled;
                        if (message.cidrBlocks && message.cidrBlocks.length) {
                            object.cidrBlocks = [];
                            for (var j = 0; j < message.cidrBlocks.length; ++j)
                                object.cidrBlocks[j] = $root.google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock.toObject(message.cidrBlocks[j], options);
                        }
                        if (message.gcpPublicCidrsAccessEnabled != null && message.hasOwnProperty("gcpPublicCidrsAccessEnabled")) {
                            object.gcpPublicCidrsAccessEnabled = message.gcpPublicCidrsAccessEnabled;
                            if (options.oneofs)
                                object._gcpPublicCidrsAccessEnabled = "gcpPublicCidrsAccessEnabled";
                        }
                        return object;
                    };
    
                    /**
                     * Converts this MasterAuthorizedNetworksConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.MasterAuthorizedNetworksConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    MasterAuthorizedNetworksConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for MasterAuthorizedNetworksConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.MasterAuthorizedNetworksConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    MasterAuthorizedNetworksConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.MasterAuthorizedNetworksConfig";
                    };
    
                    MasterAuthorizedNetworksConfig.CidrBlock = (function() {
    
                        /**
                         * Properties of a CidrBlock.
                         * @memberof google.container.v1.MasterAuthorizedNetworksConfig
                         * @interface ICidrBlock
                         * @property {string|null} [displayName] CidrBlock displayName
                         * @property {string|null} [cidrBlock] CidrBlock cidrBlock
                         */
    
                        /**
                         * Constructs a new CidrBlock.
                         * @memberof google.container.v1.MasterAuthorizedNetworksConfig
                         * @classdesc Represents a CidrBlock.
                         * @implements ICidrBlock
                         * @constructor
                         * @param {google.container.v1.MasterAuthorizedNetworksConfig.ICidrBlock=} [properties] Properties to set
                         */
                        function CidrBlock(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CidrBlock displayName.
                         * @member {string} displayName
                         * @memberof google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock
                         * @instance
                         */
                        CidrBlock.prototype.displayName = "";
    
                        /**
                         * CidrBlock cidrBlock.
                         * @member {string} cidrBlock
                         * @memberof google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock
                         * @instance
                         */
                        CidrBlock.prototype.cidrBlock = "";
    
                        /**
                         * Creates a new CidrBlock instance using the specified properties.
                         * @function create
                         * @memberof google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock
                         * @static
                         * @param {google.container.v1.MasterAuthorizedNetworksConfig.ICidrBlock=} [properties] Properties to set
                         * @returns {google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock} CidrBlock instance
                         */
                        CidrBlock.create = function create(properties) {
                            return new CidrBlock(properties);
                        };
    
                        /**
                         * Encodes the specified CidrBlock message. Does not implicitly {@link google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock.verify|verify} messages.
                         * @function encode
                         * @memberof google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock
                         * @static
                         * @param {google.container.v1.MasterAuthorizedNetworksConfig.ICidrBlock} message CidrBlock message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CidrBlock.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.displayName);
                            if (message.cidrBlock != null && Object.hasOwnProperty.call(message, "cidrBlock"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.cidrBlock);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CidrBlock message, length delimited. Does not implicitly {@link google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock
                         * @static
                         * @param {google.container.v1.MasterAuthorizedNetworksConfig.ICidrBlock} message CidrBlock message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CidrBlock.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CidrBlock message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock} CidrBlock
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CidrBlock.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.cidrBlock = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CidrBlock message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock} CidrBlock
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CidrBlock.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CidrBlock message.
                         * @function verify
                         * @memberof google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CidrBlock.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.cidrBlock != null && message.hasOwnProperty("cidrBlock"))
                                if (!$util.isString(message.cidrBlock))
                                    return "cidrBlock: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CidrBlock message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock} CidrBlock
                         */
                        CidrBlock.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
                                return object;
                            var message = new $root.google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock();
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.cidrBlock != null)
                                message.cidrBlock = String(object.cidrBlock);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CidrBlock message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock
                         * @static
                         * @param {google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock} message CidrBlock
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CidrBlock.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.displayName = "";
                                object.cidrBlock = "";
                            }
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.cidrBlock != null && message.hasOwnProperty("cidrBlock"))
                                object.cidrBlock = message.cidrBlock;
                            return object;
                        };
    
                        /**
                         * Converts this CidrBlock to JSON.
                         * @function toJSON
                         * @memberof google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CidrBlock.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CidrBlock
                         * @function getTypeUrl
                         * @memberof google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CidrBlock.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock";
                        };
    
                        return CidrBlock;
                    })();
    
                    return MasterAuthorizedNetworksConfig;
                })();
    
                v1.LegacyAbac = (function() {
    
                    /**
                     * Properties of a LegacyAbac.
                     * @memberof google.container.v1
                     * @interface ILegacyAbac
                     * @property {boolean|null} [enabled] LegacyAbac enabled
                     */
    
                    /**
                     * Constructs a new LegacyAbac.
                     * @memberof google.container.v1
                     * @classdesc Represents a LegacyAbac.
                     * @implements ILegacyAbac
                     * @constructor
                     * @param {google.container.v1.ILegacyAbac=} [properties] Properties to set
                     */
                    function LegacyAbac(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * LegacyAbac enabled.
                     * @member {boolean} enabled
                     * @memberof google.container.v1.LegacyAbac
                     * @instance
                     */
                    LegacyAbac.prototype.enabled = false;
    
                    /**
                     * Creates a new LegacyAbac instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.LegacyAbac
                     * @static
                     * @param {google.container.v1.ILegacyAbac=} [properties] Properties to set
                     * @returns {google.container.v1.LegacyAbac} LegacyAbac instance
                     */
                    LegacyAbac.create = function create(properties) {
                        return new LegacyAbac(properties);
                    };
    
                    /**
                     * Encodes the specified LegacyAbac message. Does not implicitly {@link google.container.v1.LegacyAbac.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.LegacyAbac
                     * @static
                     * @param {google.container.v1.ILegacyAbac} message LegacyAbac message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LegacyAbac.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified LegacyAbac message, length delimited. Does not implicitly {@link google.container.v1.LegacyAbac.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.LegacyAbac
                     * @static
                     * @param {google.container.v1.ILegacyAbac} message LegacyAbac message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LegacyAbac.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a LegacyAbac message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.LegacyAbac
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.LegacyAbac} LegacyAbac
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LegacyAbac.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.LegacyAbac();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.enabled = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a LegacyAbac message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.LegacyAbac
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.LegacyAbac} LegacyAbac
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LegacyAbac.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a LegacyAbac message.
                     * @function verify
                     * @memberof google.container.v1.LegacyAbac
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    LegacyAbac.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            if (typeof message.enabled !== "boolean")
                                return "enabled: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a LegacyAbac message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.LegacyAbac
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.LegacyAbac} LegacyAbac
                     */
                    LegacyAbac.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.LegacyAbac)
                            return object;
                        var message = new $root.google.container.v1.LegacyAbac();
                        if (object.enabled != null)
                            message.enabled = Boolean(object.enabled);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a LegacyAbac message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.LegacyAbac
                     * @static
                     * @param {google.container.v1.LegacyAbac} message LegacyAbac
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    LegacyAbac.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.enabled = false;
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            object.enabled = message.enabled;
                        return object;
                    };
    
                    /**
                     * Converts this LegacyAbac to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.LegacyAbac
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    LegacyAbac.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for LegacyAbac
                     * @function getTypeUrl
                     * @memberof google.container.v1.LegacyAbac
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    LegacyAbac.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.LegacyAbac";
                    };
    
                    return LegacyAbac;
                })();
    
                v1.NetworkPolicy = (function() {
    
                    /**
                     * Properties of a NetworkPolicy.
                     * @memberof google.container.v1
                     * @interface INetworkPolicy
                     * @property {google.container.v1.NetworkPolicy.Provider|null} [provider] NetworkPolicy provider
                     * @property {boolean|null} [enabled] NetworkPolicy enabled
                     */
    
                    /**
                     * Constructs a new NetworkPolicy.
                     * @memberof google.container.v1
                     * @classdesc Represents a NetworkPolicy.
                     * @implements INetworkPolicy
                     * @constructor
                     * @param {google.container.v1.INetworkPolicy=} [properties] Properties to set
                     */
                    function NetworkPolicy(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NetworkPolicy provider.
                     * @member {google.container.v1.NetworkPolicy.Provider} provider
                     * @memberof google.container.v1.NetworkPolicy
                     * @instance
                     */
                    NetworkPolicy.prototype.provider = 0;
    
                    /**
                     * NetworkPolicy enabled.
                     * @member {boolean} enabled
                     * @memberof google.container.v1.NetworkPolicy
                     * @instance
                     */
                    NetworkPolicy.prototype.enabled = false;
    
                    /**
                     * Creates a new NetworkPolicy instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.NetworkPolicy
                     * @static
                     * @param {google.container.v1.INetworkPolicy=} [properties] Properties to set
                     * @returns {google.container.v1.NetworkPolicy} NetworkPolicy instance
                     */
                    NetworkPolicy.create = function create(properties) {
                        return new NetworkPolicy(properties);
                    };
    
                    /**
                     * Encodes the specified NetworkPolicy message. Does not implicitly {@link google.container.v1.NetworkPolicy.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.NetworkPolicy
                     * @static
                     * @param {google.container.v1.INetworkPolicy} message NetworkPolicy message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NetworkPolicy.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.provider != null && Object.hasOwnProperty.call(message, "provider"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.provider);
                        if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.enabled);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NetworkPolicy message, length delimited. Does not implicitly {@link google.container.v1.NetworkPolicy.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.NetworkPolicy
                     * @static
                     * @param {google.container.v1.INetworkPolicy} message NetworkPolicy message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NetworkPolicy.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NetworkPolicy message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.NetworkPolicy
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.NetworkPolicy} NetworkPolicy
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NetworkPolicy.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.NetworkPolicy();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.provider = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.enabled = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a NetworkPolicy message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.NetworkPolicy
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.NetworkPolicy} NetworkPolicy
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NetworkPolicy.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NetworkPolicy message.
                     * @function verify
                     * @memberof google.container.v1.NetworkPolicy
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NetworkPolicy.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.provider != null && message.hasOwnProperty("provider"))
                            switch (message.provider) {
                            default:
                                return "provider: enum value expected";
                            case 0:
                            case 1:
                                break;
                            }
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            if (typeof message.enabled !== "boolean")
                                return "enabled: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NetworkPolicy message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.NetworkPolicy
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.NetworkPolicy} NetworkPolicy
                     */
                    NetworkPolicy.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.NetworkPolicy)
                            return object;
                        var message = new $root.google.container.v1.NetworkPolicy();
                        switch (object.provider) {
                        default:
                            if (typeof object.provider === "number") {
                                message.provider = object.provider;
                                break;
                            }
                            break;
                        case "PROVIDER_UNSPECIFIED":
                        case 0:
                            message.provider = 0;
                            break;
                        case "CALICO":
                        case 1:
                            message.provider = 1;
                            break;
                        }
                        if (object.enabled != null)
                            message.enabled = Boolean(object.enabled);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NetworkPolicy message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.NetworkPolicy
                     * @static
                     * @param {google.container.v1.NetworkPolicy} message NetworkPolicy
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NetworkPolicy.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.provider = options.enums === String ? "PROVIDER_UNSPECIFIED" : 0;
                            object.enabled = false;
                        }
                        if (message.provider != null && message.hasOwnProperty("provider"))
                            object.provider = options.enums === String ? $root.google.container.v1.NetworkPolicy.Provider[message.provider] === undefined ? message.provider : $root.google.container.v1.NetworkPolicy.Provider[message.provider] : message.provider;
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            object.enabled = message.enabled;
                        return object;
                    };
    
                    /**
                     * Converts this NetworkPolicy to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.NetworkPolicy
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NetworkPolicy.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NetworkPolicy
                     * @function getTypeUrl
                     * @memberof google.container.v1.NetworkPolicy
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NetworkPolicy.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.NetworkPolicy";
                    };
    
                    /**
                     * Provider enum.
                     * @name google.container.v1.NetworkPolicy.Provider
                     * @enum {number}
                     * @property {number} PROVIDER_UNSPECIFIED=0 PROVIDER_UNSPECIFIED value
                     * @property {number} CALICO=1 CALICO value
                     */
                    NetworkPolicy.Provider = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "PROVIDER_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "CALICO"] = 1;
                        return values;
                    })();
    
                    return NetworkPolicy;
                })();
    
                v1.BinaryAuthorization = (function() {
    
                    /**
                     * Properties of a BinaryAuthorization.
                     * @memberof google.container.v1
                     * @interface IBinaryAuthorization
                     * @property {boolean|null} [enabled] BinaryAuthorization enabled
                     * @property {google.container.v1.BinaryAuthorization.EvaluationMode|null} [evaluationMode] BinaryAuthorization evaluationMode
                     */
    
                    /**
                     * Constructs a new BinaryAuthorization.
                     * @memberof google.container.v1
                     * @classdesc Represents a BinaryAuthorization.
                     * @implements IBinaryAuthorization
                     * @constructor
                     * @param {google.container.v1.IBinaryAuthorization=} [properties] Properties to set
                     */
                    function BinaryAuthorization(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * BinaryAuthorization enabled.
                     * @member {boolean} enabled
                     * @memberof google.container.v1.BinaryAuthorization
                     * @instance
                     */
                    BinaryAuthorization.prototype.enabled = false;
    
                    /**
                     * BinaryAuthorization evaluationMode.
                     * @member {google.container.v1.BinaryAuthorization.EvaluationMode} evaluationMode
                     * @memberof google.container.v1.BinaryAuthorization
                     * @instance
                     */
                    BinaryAuthorization.prototype.evaluationMode = 0;
    
                    /**
                     * Creates a new BinaryAuthorization instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.BinaryAuthorization
                     * @static
                     * @param {google.container.v1.IBinaryAuthorization=} [properties] Properties to set
                     * @returns {google.container.v1.BinaryAuthorization} BinaryAuthorization instance
                     */
                    BinaryAuthorization.create = function create(properties) {
                        return new BinaryAuthorization(properties);
                    };
    
                    /**
                     * Encodes the specified BinaryAuthorization message. Does not implicitly {@link google.container.v1.BinaryAuthorization.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.BinaryAuthorization
                     * @static
                     * @param {google.container.v1.IBinaryAuthorization} message BinaryAuthorization message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    BinaryAuthorization.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                        if (message.evaluationMode != null && Object.hasOwnProperty.call(message, "evaluationMode"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.evaluationMode);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified BinaryAuthorization message, length delimited. Does not implicitly {@link google.container.v1.BinaryAuthorization.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.BinaryAuthorization
                     * @static
                     * @param {google.container.v1.IBinaryAuthorization} message BinaryAuthorization message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    BinaryAuthorization.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a BinaryAuthorization message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.BinaryAuthorization
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.BinaryAuthorization} BinaryAuthorization
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    BinaryAuthorization.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.BinaryAuthorization();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.enabled = reader.bool();
                                    break;
                                }
                            case 2: {
                                    message.evaluationMode = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a BinaryAuthorization message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.BinaryAuthorization
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.BinaryAuthorization} BinaryAuthorization
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    BinaryAuthorization.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a BinaryAuthorization message.
                     * @function verify
                     * @memberof google.container.v1.BinaryAuthorization
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    BinaryAuthorization.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            if (typeof message.enabled !== "boolean")
                                return "enabled: boolean expected";
                        if (message.evaluationMode != null && message.hasOwnProperty("evaluationMode"))
                            switch (message.evaluationMode) {
                            default:
                                return "evaluationMode: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates a BinaryAuthorization message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.BinaryAuthorization
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.BinaryAuthorization} BinaryAuthorization
                     */
                    BinaryAuthorization.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.BinaryAuthorization)
                            return object;
                        var message = new $root.google.container.v1.BinaryAuthorization();
                        if (object.enabled != null)
                            message.enabled = Boolean(object.enabled);
                        switch (object.evaluationMode) {
                        default:
                            if (typeof object.evaluationMode === "number") {
                                message.evaluationMode = object.evaluationMode;
                                break;
                            }
                            break;
                        case "EVALUATION_MODE_UNSPECIFIED":
                        case 0:
                            message.evaluationMode = 0;
                            break;
                        case "DISABLED":
                        case 1:
                            message.evaluationMode = 1;
                            break;
                        case "PROJECT_SINGLETON_POLICY_ENFORCE":
                        case 2:
                            message.evaluationMode = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a BinaryAuthorization message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.BinaryAuthorization
                     * @static
                     * @param {google.container.v1.BinaryAuthorization} message BinaryAuthorization
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    BinaryAuthorization.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.enabled = false;
                            object.evaluationMode = options.enums === String ? "EVALUATION_MODE_UNSPECIFIED" : 0;
                        }
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            object.enabled = message.enabled;
                        if (message.evaluationMode != null && message.hasOwnProperty("evaluationMode"))
                            object.evaluationMode = options.enums === String ? $root.google.container.v1.BinaryAuthorization.EvaluationMode[message.evaluationMode] === undefined ? message.evaluationMode : $root.google.container.v1.BinaryAuthorization.EvaluationMode[message.evaluationMode] : message.evaluationMode;
                        return object;
                    };
    
                    /**
                     * Converts this BinaryAuthorization to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.BinaryAuthorization
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    BinaryAuthorization.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for BinaryAuthorization
                     * @function getTypeUrl
                     * @memberof google.container.v1.BinaryAuthorization
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    BinaryAuthorization.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.BinaryAuthorization";
                    };
    
                    /**
                     * EvaluationMode enum.
                     * @name google.container.v1.BinaryAuthorization.EvaluationMode
                     * @enum {number}
                     * @property {number} EVALUATION_MODE_UNSPECIFIED=0 EVALUATION_MODE_UNSPECIFIED value
                     * @property {number} DISABLED=1 DISABLED value
                     * @property {number} PROJECT_SINGLETON_POLICY_ENFORCE=2 PROJECT_SINGLETON_POLICY_ENFORCE value
                     */
                    BinaryAuthorization.EvaluationMode = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "EVALUATION_MODE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "DISABLED"] = 1;
                        values[valuesById[2] = "PROJECT_SINGLETON_POLICY_ENFORCE"] = 2;
                        return values;
                    })();
    
                    return BinaryAuthorization;
                })();
    
                v1.IPAllocationPolicy = (function() {
    
                    /**
                     * Properties of a IPAllocationPolicy.
                     * @memberof google.container.v1
                     * @interface IIPAllocationPolicy
                     * @property {boolean|null} [useIpAliases] IPAllocationPolicy useIpAliases
                     * @property {boolean|null} [createSubnetwork] IPAllocationPolicy createSubnetwork
                     * @property {string|null} [subnetworkName] IPAllocationPolicy subnetworkName
                     * @property {string|null} [clusterIpv4Cidr] IPAllocationPolicy clusterIpv4Cidr
                     * @property {string|null} [nodeIpv4Cidr] IPAllocationPolicy nodeIpv4Cidr
                     * @property {string|null} [servicesIpv4Cidr] IPAllocationPolicy servicesIpv4Cidr
                     * @property {string|null} [clusterSecondaryRangeName] IPAllocationPolicy clusterSecondaryRangeName
                     * @property {string|null} [servicesSecondaryRangeName] IPAllocationPolicy servicesSecondaryRangeName
                     * @property {string|null} [clusterIpv4CidrBlock] IPAllocationPolicy clusterIpv4CidrBlock
                     * @property {string|null} [nodeIpv4CidrBlock] IPAllocationPolicy nodeIpv4CidrBlock
                     * @property {string|null} [servicesIpv4CidrBlock] IPAllocationPolicy servicesIpv4CidrBlock
                     * @property {string|null} [tpuIpv4CidrBlock] IPAllocationPolicy tpuIpv4CidrBlock
                     * @property {boolean|null} [useRoutes] IPAllocationPolicy useRoutes
                     * @property {google.container.v1.StackType|null} [stackType] IPAllocationPolicy stackType
                     * @property {google.container.v1.IPv6AccessType|null} [ipv6AccessType] IPAllocationPolicy ipv6AccessType
                     */
    
                    /**
                     * Constructs a new IPAllocationPolicy.
                     * @memberof google.container.v1
                     * @classdesc Represents a IPAllocationPolicy.
                     * @implements IIPAllocationPolicy
                     * @constructor
                     * @param {google.container.v1.IIPAllocationPolicy=} [properties] Properties to set
                     */
                    function IPAllocationPolicy(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * IPAllocationPolicy useIpAliases.
                     * @member {boolean} useIpAliases
                     * @memberof google.container.v1.IPAllocationPolicy
                     * @instance
                     */
                    IPAllocationPolicy.prototype.useIpAliases = false;
    
                    /**
                     * IPAllocationPolicy createSubnetwork.
                     * @member {boolean} createSubnetwork
                     * @memberof google.container.v1.IPAllocationPolicy
                     * @instance
                     */
                    IPAllocationPolicy.prototype.createSubnetwork = false;
    
                    /**
                     * IPAllocationPolicy subnetworkName.
                     * @member {string} subnetworkName
                     * @memberof google.container.v1.IPAllocationPolicy
                     * @instance
                     */
                    IPAllocationPolicy.prototype.subnetworkName = "";
    
                    /**
                     * IPAllocationPolicy clusterIpv4Cidr.
                     * @member {string} clusterIpv4Cidr
                     * @memberof google.container.v1.IPAllocationPolicy
                     * @instance
                     */
                    IPAllocationPolicy.prototype.clusterIpv4Cidr = "";
    
                    /**
                     * IPAllocationPolicy nodeIpv4Cidr.
                     * @member {string} nodeIpv4Cidr
                     * @memberof google.container.v1.IPAllocationPolicy
                     * @instance
                     */
                    IPAllocationPolicy.prototype.nodeIpv4Cidr = "";
    
                    /**
                     * IPAllocationPolicy servicesIpv4Cidr.
                     * @member {string} servicesIpv4Cidr
                     * @memberof google.container.v1.IPAllocationPolicy
                     * @instance
                     */
                    IPAllocationPolicy.prototype.servicesIpv4Cidr = "";
    
                    /**
                     * IPAllocationPolicy clusterSecondaryRangeName.
                     * @member {string} clusterSecondaryRangeName
                     * @memberof google.container.v1.IPAllocationPolicy
                     * @instance
                     */
                    IPAllocationPolicy.prototype.clusterSecondaryRangeName = "";
    
                    /**
                     * IPAllocationPolicy servicesSecondaryRangeName.
                     * @member {string} servicesSecondaryRangeName
                     * @memberof google.container.v1.IPAllocationPolicy
                     * @instance
                     */
                    IPAllocationPolicy.prototype.servicesSecondaryRangeName = "";
    
                    /**
                     * IPAllocationPolicy clusterIpv4CidrBlock.
                     * @member {string} clusterIpv4CidrBlock
                     * @memberof google.container.v1.IPAllocationPolicy
                     * @instance
                     */
                    IPAllocationPolicy.prototype.clusterIpv4CidrBlock = "";
    
                    /**
                     * IPAllocationPolicy nodeIpv4CidrBlock.
                     * @member {string} nodeIpv4CidrBlock
                     * @memberof google.container.v1.IPAllocationPolicy
                     * @instance
                     */
                    IPAllocationPolicy.prototype.nodeIpv4CidrBlock = "";
    
                    /**
                     * IPAllocationPolicy servicesIpv4CidrBlock.
                     * @member {string} servicesIpv4CidrBlock
                     * @memberof google.container.v1.IPAllocationPolicy
                     * @instance
                     */
                    IPAllocationPolicy.prototype.servicesIpv4CidrBlock = "";
    
                    /**
                     * IPAllocationPolicy tpuIpv4CidrBlock.
                     * @member {string} tpuIpv4CidrBlock
                     * @memberof google.container.v1.IPAllocationPolicy
                     * @instance
                     */
                    IPAllocationPolicy.prototype.tpuIpv4CidrBlock = "";
    
                    /**
                     * IPAllocationPolicy useRoutes.
                     * @member {boolean} useRoutes
                     * @memberof google.container.v1.IPAllocationPolicy
                     * @instance
                     */
                    IPAllocationPolicy.prototype.useRoutes = false;
    
                    /**
                     * IPAllocationPolicy stackType.
                     * @member {google.container.v1.StackType} stackType
                     * @memberof google.container.v1.IPAllocationPolicy
                     * @instance
                     */
                    IPAllocationPolicy.prototype.stackType = 0;
    
                    /**
                     * IPAllocationPolicy ipv6AccessType.
                     * @member {google.container.v1.IPv6AccessType} ipv6AccessType
                     * @memberof google.container.v1.IPAllocationPolicy
                     * @instance
                     */
                    IPAllocationPolicy.prototype.ipv6AccessType = 0;
    
                    /**
                     * Creates a new IPAllocationPolicy instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.IPAllocationPolicy
                     * @static
                     * @param {google.container.v1.IIPAllocationPolicy=} [properties] Properties to set
                     * @returns {google.container.v1.IPAllocationPolicy} IPAllocationPolicy instance
                     */
                    IPAllocationPolicy.create = function create(properties) {
                        return new IPAllocationPolicy(properties);
                    };
    
                    /**
                     * Encodes the specified IPAllocationPolicy message. Does not implicitly {@link google.container.v1.IPAllocationPolicy.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.IPAllocationPolicy
                     * @static
                     * @param {google.container.v1.IIPAllocationPolicy} message IPAllocationPolicy message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    IPAllocationPolicy.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.useIpAliases != null && Object.hasOwnProperty.call(message, "useIpAliases"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.useIpAliases);
                        if (message.createSubnetwork != null && Object.hasOwnProperty.call(message, "createSubnetwork"))
                            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.createSubnetwork);
                        if (message.subnetworkName != null && Object.hasOwnProperty.call(message, "subnetworkName"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.subnetworkName);
                        if (message.clusterIpv4Cidr != null && Object.hasOwnProperty.call(message, "clusterIpv4Cidr"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.clusterIpv4Cidr);
                        if (message.nodeIpv4Cidr != null && Object.hasOwnProperty.call(message, "nodeIpv4Cidr"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.nodeIpv4Cidr);
                        if (message.servicesIpv4Cidr != null && Object.hasOwnProperty.call(message, "servicesIpv4Cidr"))
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.servicesIpv4Cidr);
                        if (message.clusterSecondaryRangeName != null && Object.hasOwnProperty.call(message, "clusterSecondaryRangeName"))
                            writer.uint32(/* id 7, wireType 2 =*/58).string(message.clusterSecondaryRangeName);
                        if (message.servicesSecondaryRangeName != null && Object.hasOwnProperty.call(message, "servicesSecondaryRangeName"))
                            writer.uint32(/* id 8, wireType 2 =*/66).string(message.servicesSecondaryRangeName);
                        if (message.clusterIpv4CidrBlock != null && Object.hasOwnProperty.call(message, "clusterIpv4CidrBlock"))
                            writer.uint32(/* id 9, wireType 2 =*/74).string(message.clusterIpv4CidrBlock);
                        if (message.nodeIpv4CidrBlock != null && Object.hasOwnProperty.call(message, "nodeIpv4CidrBlock"))
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.nodeIpv4CidrBlock);
                        if (message.servicesIpv4CidrBlock != null && Object.hasOwnProperty.call(message, "servicesIpv4CidrBlock"))
                            writer.uint32(/* id 11, wireType 2 =*/90).string(message.servicesIpv4CidrBlock);
                        if (message.tpuIpv4CidrBlock != null && Object.hasOwnProperty.call(message, "tpuIpv4CidrBlock"))
                            writer.uint32(/* id 13, wireType 2 =*/106).string(message.tpuIpv4CidrBlock);
                        if (message.useRoutes != null && Object.hasOwnProperty.call(message, "useRoutes"))
                            writer.uint32(/* id 15, wireType 0 =*/120).bool(message.useRoutes);
                        if (message.stackType != null && Object.hasOwnProperty.call(message, "stackType"))
                            writer.uint32(/* id 16, wireType 0 =*/128).int32(message.stackType);
                        if (message.ipv6AccessType != null && Object.hasOwnProperty.call(message, "ipv6AccessType"))
                            writer.uint32(/* id 17, wireType 0 =*/136).int32(message.ipv6AccessType);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified IPAllocationPolicy message, length delimited. Does not implicitly {@link google.container.v1.IPAllocationPolicy.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.IPAllocationPolicy
                     * @static
                     * @param {google.container.v1.IIPAllocationPolicy} message IPAllocationPolicy message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    IPAllocationPolicy.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a IPAllocationPolicy message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.IPAllocationPolicy
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.IPAllocationPolicy} IPAllocationPolicy
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    IPAllocationPolicy.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.IPAllocationPolicy();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.useIpAliases = reader.bool();
                                    break;
                                }
                            case 2: {
                                    message.createSubnetwork = reader.bool();
                                    break;
                                }
                            case 3: {
                                    message.subnetworkName = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.clusterIpv4Cidr = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.nodeIpv4Cidr = reader.string();
                                    break;
                                }
                            case 6: {
                                    message.servicesIpv4Cidr = reader.string();
                                    break;
                                }
                            case 7: {
                                    message.clusterSecondaryRangeName = reader.string();
                                    break;
                                }
                            case 8: {
                                    message.servicesSecondaryRangeName = reader.string();
                                    break;
                                }
                            case 9: {
                                    message.clusterIpv4CidrBlock = reader.string();
                                    break;
                                }
                            case 10: {
                                    message.nodeIpv4CidrBlock = reader.string();
                                    break;
                                }
                            case 11: {
                                    message.servicesIpv4CidrBlock = reader.string();
                                    break;
                                }
                            case 13: {
                                    message.tpuIpv4CidrBlock = reader.string();
                                    break;
                                }
                            case 15: {
                                    message.useRoutes = reader.bool();
                                    break;
                                }
                            case 16: {
                                    message.stackType = reader.int32();
                                    break;
                                }
                            case 17: {
                                    message.ipv6AccessType = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a IPAllocationPolicy message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.IPAllocationPolicy
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.IPAllocationPolicy} IPAllocationPolicy
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    IPAllocationPolicy.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a IPAllocationPolicy message.
                     * @function verify
                     * @memberof google.container.v1.IPAllocationPolicy
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    IPAllocationPolicy.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.useIpAliases != null && message.hasOwnProperty("useIpAliases"))
                            if (typeof message.useIpAliases !== "boolean")
                                return "useIpAliases: boolean expected";
                        if (message.createSubnetwork != null && message.hasOwnProperty("createSubnetwork"))
                            if (typeof message.createSubnetwork !== "boolean")
                                return "createSubnetwork: boolean expected";
                        if (message.subnetworkName != null && message.hasOwnProperty("subnetworkName"))
                            if (!$util.isString(message.subnetworkName))
                                return "subnetworkName: string expected";
                        if (message.clusterIpv4Cidr != null && message.hasOwnProperty("clusterIpv4Cidr"))
                            if (!$util.isString(message.clusterIpv4Cidr))
                                return "clusterIpv4Cidr: string expected";
                        if (message.nodeIpv4Cidr != null && message.hasOwnProperty("nodeIpv4Cidr"))
                            if (!$util.isString(message.nodeIpv4Cidr))
                                return "nodeIpv4Cidr: string expected";
                        if (message.servicesIpv4Cidr != null && message.hasOwnProperty("servicesIpv4Cidr"))
                            if (!$util.isString(message.servicesIpv4Cidr))
                                return "servicesIpv4Cidr: string expected";
                        if (message.clusterSecondaryRangeName != null && message.hasOwnProperty("clusterSecondaryRangeName"))
                            if (!$util.isString(message.clusterSecondaryRangeName))
                                return "clusterSecondaryRangeName: string expected";
                        if (message.servicesSecondaryRangeName != null && message.hasOwnProperty("servicesSecondaryRangeName"))
                            if (!$util.isString(message.servicesSecondaryRangeName))
                                return "servicesSecondaryRangeName: string expected";
                        if (message.clusterIpv4CidrBlock != null && message.hasOwnProperty("clusterIpv4CidrBlock"))
                            if (!$util.isString(message.clusterIpv4CidrBlock))
                                return "clusterIpv4CidrBlock: string expected";
                        if (message.nodeIpv4CidrBlock != null && message.hasOwnProperty("nodeIpv4CidrBlock"))
                            if (!$util.isString(message.nodeIpv4CidrBlock))
                                return "nodeIpv4CidrBlock: string expected";
                        if (message.servicesIpv4CidrBlock != null && message.hasOwnProperty("servicesIpv4CidrBlock"))
                            if (!$util.isString(message.servicesIpv4CidrBlock))
                                return "servicesIpv4CidrBlock: string expected";
                        if (message.tpuIpv4CidrBlock != null && message.hasOwnProperty("tpuIpv4CidrBlock"))
                            if (!$util.isString(message.tpuIpv4CidrBlock))
                                return "tpuIpv4CidrBlock: string expected";
                        if (message.useRoutes != null && message.hasOwnProperty("useRoutes"))
                            if (typeof message.useRoutes !== "boolean")
                                return "useRoutes: boolean expected";
                        if (message.stackType != null && message.hasOwnProperty("stackType"))
                            switch (message.stackType) {
                            default:
                                return "stackType: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        if (message.ipv6AccessType != null && message.hasOwnProperty("ipv6AccessType"))
                            switch (message.ipv6AccessType) {
                            default:
                                return "ipv6AccessType: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates a IPAllocationPolicy message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.IPAllocationPolicy
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.IPAllocationPolicy} IPAllocationPolicy
                     */
                    IPAllocationPolicy.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.IPAllocationPolicy)
                            return object;
                        var message = new $root.google.container.v1.IPAllocationPolicy();
                        if (object.useIpAliases != null)
                            message.useIpAliases = Boolean(object.useIpAliases);
                        if (object.createSubnetwork != null)
                            message.createSubnetwork = Boolean(object.createSubnetwork);
                        if (object.subnetworkName != null)
                            message.subnetworkName = String(object.subnetworkName);
                        if (object.clusterIpv4Cidr != null)
                            message.clusterIpv4Cidr = String(object.clusterIpv4Cidr);
                        if (object.nodeIpv4Cidr != null)
                            message.nodeIpv4Cidr = String(object.nodeIpv4Cidr);
                        if (object.servicesIpv4Cidr != null)
                            message.servicesIpv4Cidr = String(object.servicesIpv4Cidr);
                        if (object.clusterSecondaryRangeName != null)
                            message.clusterSecondaryRangeName = String(object.clusterSecondaryRangeName);
                        if (object.servicesSecondaryRangeName != null)
                            message.servicesSecondaryRangeName = String(object.servicesSecondaryRangeName);
                        if (object.clusterIpv4CidrBlock != null)
                            message.clusterIpv4CidrBlock = String(object.clusterIpv4CidrBlock);
                        if (object.nodeIpv4CidrBlock != null)
                            message.nodeIpv4CidrBlock = String(object.nodeIpv4CidrBlock);
                        if (object.servicesIpv4CidrBlock != null)
                            message.servicesIpv4CidrBlock = String(object.servicesIpv4CidrBlock);
                        if (object.tpuIpv4CidrBlock != null)
                            message.tpuIpv4CidrBlock = String(object.tpuIpv4CidrBlock);
                        if (object.useRoutes != null)
                            message.useRoutes = Boolean(object.useRoutes);
                        switch (object.stackType) {
                        default:
                            if (typeof object.stackType === "number") {
                                message.stackType = object.stackType;
                                break;
                            }
                            break;
                        case "STACK_TYPE_UNSPECIFIED":
                        case 0:
                            message.stackType = 0;
                            break;
                        case "IPV4":
                        case 1:
                            message.stackType = 1;
                            break;
                        case "IPV4_IPV6":
                        case 2:
                            message.stackType = 2;
                            break;
                        }
                        switch (object.ipv6AccessType) {
                        default:
                            if (typeof object.ipv6AccessType === "number") {
                                message.ipv6AccessType = object.ipv6AccessType;
                                break;
                            }
                            break;
                        case "IPV6_ACCESS_TYPE_UNSPECIFIED":
                        case 0:
                            message.ipv6AccessType = 0;
                            break;
                        case "INTERNAL":
                        case 1:
                            message.ipv6AccessType = 1;
                            break;
                        case "EXTERNAL":
                        case 2:
                            message.ipv6AccessType = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a IPAllocationPolicy message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.IPAllocationPolicy
                     * @static
                     * @param {google.container.v1.IPAllocationPolicy} message IPAllocationPolicy
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    IPAllocationPolicy.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.useIpAliases = false;
                            object.createSubnetwork = false;
                            object.subnetworkName = "";
                            object.clusterIpv4Cidr = "";
                            object.nodeIpv4Cidr = "";
                            object.servicesIpv4Cidr = "";
                            object.clusterSecondaryRangeName = "";
                            object.servicesSecondaryRangeName = "";
                            object.clusterIpv4CidrBlock = "";
                            object.nodeIpv4CidrBlock = "";
                            object.servicesIpv4CidrBlock = "";
                            object.tpuIpv4CidrBlock = "";
                            object.useRoutes = false;
                            object.stackType = options.enums === String ? "STACK_TYPE_UNSPECIFIED" : 0;
                            object.ipv6AccessType = options.enums === String ? "IPV6_ACCESS_TYPE_UNSPECIFIED" : 0;
                        }
                        if (message.useIpAliases != null && message.hasOwnProperty("useIpAliases"))
                            object.useIpAliases = message.useIpAliases;
                        if (message.createSubnetwork != null && message.hasOwnProperty("createSubnetwork"))
                            object.createSubnetwork = message.createSubnetwork;
                        if (message.subnetworkName != null && message.hasOwnProperty("subnetworkName"))
                            object.subnetworkName = message.subnetworkName;
                        if (message.clusterIpv4Cidr != null && message.hasOwnProperty("clusterIpv4Cidr"))
                            object.clusterIpv4Cidr = message.clusterIpv4Cidr;
                        if (message.nodeIpv4Cidr != null && message.hasOwnProperty("nodeIpv4Cidr"))
                            object.nodeIpv4Cidr = message.nodeIpv4Cidr;
                        if (message.servicesIpv4Cidr != null && message.hasOwnProperty("servicesIpv4Cidr"))
                            object.servicesIpv4Cidr = message.servicesIpv4Cidr;
                        if (message.clusterSecondaryRangeName != null && message.hasOwnProperty("clusterSecondaryRangeName"))
                            object.clusterSecondaryRangeName = message.clusterSecondaryRangeName;
                        if (message.servicesSecondaryRangeName != null && message.hasOwnProperty("servicesSecondaryRangeName"))
                            object.servicesSecondaryRangeName = message.servicesSecondaryRangeName;
                        if (message.clusterIpv4CidrBlock != null && message.hasOwnProperty("clusterIpv4CidrBlock"))
                            object.clusterIpv4CidrBlock = message.clusterIpv4CidrBlock;
                        if (message.nodeIpv4CidrBlock != null && message.hasOwnProperty("nodeIpv4CidrBlock"))
                            object.nodeIpv4CidrBlock = message.nodeIpv4CidrBlock;
                        if (message.servicesIpv4CidrBlock != null && message.hasOwnProperty("servicesIpv4CidrBlock"))
                            object.servicesIpv4CidrBlock = message.servicesIpv4CidrBlock;
                        if (message.tpuIpv4CidrBlock != null && message.hasOwnProperty("tpuIpv4CidrBlock"))
                            object.tpuIpv4CidrBlock = message.tpuIpv4CidrBlock;
                        if (message.useRoutes != null && message.hasOwnProperty("useRoutes"))
                            object.useRoutes = message.useRoutes;
                        if (message.stackType != null && message.hasOwnProperty("stackType"))
                            object.stackType = options.enums === String ? $root.google.container.v1.StackType[message.stackType] === undefined ? message.stackType : $root.google.container.v1.StackType[message.stackType] : message.stackType;
                        if (message.ipv6AccessType != null && message.hasOwnProperty("ipv6AccessType"))
                            object.ipv6AccessType = options.enums === String ? $root.google.container.v1.IPv6AccessType[message.ipv6AccessType] === undefined ? message.ipv6AccessType : $root.google.container.v1.IPv6AccessType[message.ipv6AccessType] : message.ipv6AccessType;
                        return object;
                    };
    
                    /**
                     * Converts this IPAllocationPolicy to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.IPAllocationPolicy
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    IPAllocationPolicy.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for IPAllocationPolicy
                     * @function getTypeUrl
                     * @memberof google.container.v1.IPAllocationPolicy
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    IPAllocationPolicy.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.IPAllocationPolicy";
                    };
    
                    return IPAllocationPolicy;
                })();
    
                v1.Cluster = (function() {
    
                    /**
                     * Properties of a Cluster.
                     * @memberof google.container.v1
                     * @interface ICluster
                     * @property {string|null} [name] Cluster name
                     * @property {string|null} [description] Cluster description
                     * @property {number|null} [initialNodeCount] Cluster initialNodeCount
                     * @property {google.container.v1.INodeConfig|null} [nodeConfig] Cluster nodeConfig
                     * @property {google.container.v1.IMasterAuth|null} [masterAuth] Cluster masterAuth
                     * @property {string|null} [loggingService] Cluster loggingService
                     * @property {string|null} [monitoringService] Cluster monitoringService
                     * @property {string|null} [network] Cluster network
                     * @property {string|null} [clusterIpv4Cidr] Cluster clusterIpv4Cidr
                     * @property {google.container.v1.IAddonsConfig|null} [addonsConfig] Cluster addonsConfig
                     * @property {string|null} [subnetwork] Cluster subnetwork
                     * @property {Array.<google.container.v1.INodePool>|null} [nodePools] Cluster nodePools
                     * @property {Array.<string>|null} [locations] Cluster locations
                     * @property {boolean|null} [enableKubernetesAlpha] Cluster enableKubernetesAlpha
                     * @property {Object.<string,string>|null} [resourceLabels] Cluster resourceLabels
                     * @property {string|null} [labelFingerprint] Cluster labelFingerprint
                     * @property {google.container.v1.ILegacyAbac|null} [legacyAbac] Cluster legacyAbac
                     * @property {google.container.v1.INetworkPolicy|null} [networkPolicy] Cluster networkPolicy
                     * @property {google.container.v1.IIPAllocationPolicy|null} [ipAllocationPolicy] Cluster ipAllocationPolicy
                     * @property {google.container.v1.IMasterAuthorizedNetworksConfig|null} [masterAuthorizedNetworksConfig] Cluster masterAuthorizedNetworksConfig
                     * @property {google.container.v1.IMaintenancePolicy|null} [maintenancePolicy] Cluster maintenancePolicy
                     * @property {google.container.v1.IBinaryAuthorization|null} [binaryAuthorization] Cluster binaryAuthorization
                     * @property {google.container.v1.IClusterAutoscaling|null} [autoscaling] Cluster autoscaling
                     * @property {google.container.v1.INetworkConfig|null} [networkConfig] Cluster networkConfig
                     * @property {google.container.v1.IMaxPodsConstraint|null} [defaultMaxPodsConstraint] Cluster defaultMaxPodsConstraint
                     * @property {google.container.v1.IResourceUsageExportConfig|null} [resourceUsageExportConfig] Cluster resourceUsageExportConfig
                     * @property {google.container.v1.IAuthenticatorGroupsConfig|null} [authenticatorGroupsConfig] Cluster authenticatorGroupsConfig
                     * @property {google.container.v1.IPrivateClusterConfig|null} [privateClusterConfig] Cluster privateClusterConfig
                     * @property {google.container.v1.IDatabaseEncryption|null} [databaseEncryption] Cluster databaseEncryption
                     * @property {google.container.v1.IVerticalPodAutoscaling|null} [verticalPodAutoscaling] Cluster verticalPodAutoscaling
                     * @property {google.container.v1.IShieldedNodes|null} [shieldedNodes] Cluster shieldedNodes
                     * @property {google.container.v1.IReleaseChannel|null} [releaseChannel] Cluster releaseChannel
                     * @property {google.container.v1.IWorkloadIdentityConfig|null} [workloadIdentityConfig] Cluster workloadIdentityConfig
                     * @property {google.container.v1.IMeshCertificates|null} [meshCertificates] Cluster meshCertificates
                     * @property {google.container.v1.ICostManagementConfig|null} [costManagementConfig] Cluster costManagementConfig
                     * @property {google.container.v1.INotificationConfig|null} [notificationConfig] Cluster notificationConfig
                     * @property {google.container.v1.IConfidentialNodes|null} [confidentialNodes] Cluster confidentialNodes
                     * @property {google.container.v1.IIdentityServiceConfig|null} [identityServiceConfig] Cluster identityServiceConfig
                     * @property {string|null} [selfLink] Cluster selfLink
                     * @property {string|null} [zone] Cluster zone
                     * @property {string|null} [endpoint] Cluster endpoint
                     * @property {string|null} [initialClusterVersion] Cluster initialClusterVersion
                     * @property {string|null} [currentMasterVersion] Cluster currentMasterVersion
                     * @property {string|null} [currentNodeVersion] Cluster currentNodeVersion
                     * @property {string|null} [createTime] Cluster createTime
                     * @property {google.container.v1.Cluster.Status|null} [status] Cluster status
                     * @property {string|null} [statusMessage] Cluster statusMessage
                     * @property {number|null} [nodeIpv4CidrSize] Cluster nodeIpv4CidrSize
                     * @property {string|null} [servicesIpv4Cidr] Cluster servicesIpv4Cidr
                     * @property {Array.<string>|null} [instanceGroupUrls] Cluster instanceGroupUrls
                     * @property {number|null} [currentNodeCount] Cluster currentNodeCount
                     * @property {string|null} [expireTime] Cluster expireTime
                     * @property {string|null} [location] Cluster location
                     * @property {boolean|null} [enableTpu] Cluster enableTpu
                     * @property {string|null} [tpuIpv4CidrBlock] Cluster tpuIpv4CidrBlock
                     * @property {Array.<google.container.v1.IStatusCondition>|null} [conditions] Cluster conditions
                     * @property {google.container.v1.IAutopilot|null} [autopilot] Cluster autopilot
                     * @property {string|null} [id] Cluster id
                     * @property {google.container.v1.INodePoolDefaults|null} [nodePoolDefaults] Cluster nodePoolDefaults
                     * @property {google.container.v1.ILoggingConfig|null} [loggingConfig] Cluster loggingConfig
                     * @property {google.container.v1.IMonitoringConfig|null} [monitoringConfig] Cluster monitoringConfig
                     * @property {google.container.v1.INodePoolAutoConfig|null} [nodePoolAutoConfig] Cluster nodePoolAutoConfig
                     */
    
                    /**
                     * Constructs a new Cluster.
                     * @memberof google.container.v1
                     * @classdesc Represents a Cluster.
                     * @implements ICluster
                     * @constructor
                     * @param {google.container.v1.ICluster=} [properties] Properties to set
                     */
                    function Cluster(properties) {
                        this.nodePools = [];
                        this.locations = [];
                        this.resourceLabels = {};
                        this.instanceGroupUrls = [];
                        this.conditions = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Cluster name.
                     * @member {string} name
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.name = "";
    
                    /**
                     * Cluster description.
                     * @member {string} description
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.description = "";
    
                    /**
                     * Cluster initialNodeCount.
                     * @member {number} initialNodeCount
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.initialNodeCount = 0;
    
                    /**
                     * Cluster nodeConfig.
                     * @member {google.container.v1.INodeConfig|null|undefined} nodeConfig
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.nodeConfig = null;
    
                    /**
                     * Cluster masterAuth.
                     * @member {google.container.v1.IMasterAuth|null|undefined} masterAuth
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.masterAuth = null;
    
                    /**
                     * Cluster loggingService.
                     * @member {string} loggingService
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.loggingService = "";
    
                    /**
                     * Cluster monitoringService.
                     * @member {string} monitoringService
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.monitoringService = "";
    
                    /**
                     * Cluster network.
                     * @member {string} network
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.network = "";
    
                    /**
                     * Cluster clusterIpv4Cidr.
                     * @member {string} clusterIpv4Cidr
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.clusterIpv4Cidr = "";
    
                    /**
                     * Cluster addonsConfig.
                     * @member {google.container.v1.IAddonsConfig|null|undefined} addonsConfig
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.addonsConfig = null;
    
                    /**
                     * Cluster subnetwork.
                     * @member {string} subnetwork
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.subnetwork = "";
    
                    /**
                     * Cluster nodePools.
                     * @member {Array.<google.container.v1.INodePool>} nodePools
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.nodePools = $util.emptyArray;
    
                    /**
                     * Cluster locations.
                     * @member {Array.<string>} locations
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.locations = $util.emptyArray;
    
                    /**
                     * Cluster enableKubernetesAlpha.
                     * @member {boolean} enableKubernetesAlpha
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.enableKubernetesAlpha = false;
    
                    /**
                     * Cluster resourceLabels.
                     * @member {Object.<string,string>} resourceLabels
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.resourceLabels = $util.emptyObject;
    
                    /**
                     * Cluster labelFingerprint.
                     * @member {string} labelFingerprint
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.labelFingerprint = "";
    
                    /**
                     * Cluster legacyAbac.
                     * @member {google.container.v1.ILegacyAbac|null|undefined} legacyAbac
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.legacyAbac = null;
    
                    /**
                     * Cluster networkPolicy.
                     * @member {google.container.v1.INetworkPolicy|null|undefined} networkPolicy
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.networkPolicy = null;
    
                    /**
                     * Cluster ipAllocationPolicy.
                     * @member {google.container.v1.IIPAllocationPolicy|null|undefined} ipAllocationPolicy
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.ipAllocationPolicy = null;
    
                    /**
                     * Cluster masterAuthorizedNetworksConfig.
                     * @member {google.container.v1.IMasterAuthorizedNetworksConfig|null|undefined} masterAuthorizedNetworksConfig
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.masterAuthorizedNetworksConfig = null;
    
                    /**
                     * Cluster maintenancePolicy.
                     * @member {google.container.v1.IMaintenancePolicy|null|undefined} maintenancePolicy
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.maintenancePolicy = null;
    
                    /**
                     * Cluster binaryAuthorization.
                     * @member {google.container.v1.IBinaryAuthorization|null|undefined} binaryAuthorization
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.binaryAuthorization = null;
    
                    /**
                     * Cluster autoscaling.
                     * @member {google.container.v1.IClusterAutoscaling|null|undefined} autoscaling
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.autoscaling = null;
    
                    /**
                     * Cluster networkConfig.
                     * @member {google.container.v1.INetworkConfig|null|undefined} networkConfig
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.networkConfig = null;
    
                    /**
                     * Cluster defaultMaxPodsConstraint.
                     * @member {google.container.v1.IMaxPodsConstraint|null|undefined} defaultMaxPodsConstraint
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.defaultMaxPodsConstraint = null;
    
                    /**
                     * Cluster resourceUsageExportConfig.
                     * @member {google.container.v1.IResourceUsageExportConfig|null|undefined} resourceUsageExportConfig
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.resourceUsageExportConfig = null;
    
                    /**
                     * Cluster authenticatorGroupsConfig.
                     * @member {google.container.v1.IAuthenticatorGroupsConfig|null|undefined} authenticatorGroupsConfig
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.authenticatorGroupsConfig = null;
    
                    /**
                     * Cluster privateClusterConfig.
                     * @member {google.container.v1.IPrivateClusterConfig|null|undefined} privateClusterConfig
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.privateClusterConfig = null;
    
                    /**
                     * Cluster databaseEncryption.
                     * @member {google.container.v1.IDatabaseEncryption|null|undefined} databaseEncryption
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.databaseEncryption = null;
    
                    /**
                     * Cluster verticalPodAutoscaling.
                     * @member {google.container.v1.IVerticalPodAutoscaling|null|undefined} verticalPodAutoscaling
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.verticalPodAutoscaling = null;
    
                    /**
                     * Cluster shieldedNodes.
                     * @member {google.container.v1.IShieldedNodes|null|undefined} shieldedNodes
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.shieldedNodes = null;
    
                    /**
                     * Cluster releaseChannel.
                     * @member {google.container.v1.IReleaseChannel|null|undefined} releaseChannel
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.releaseChannel = null;
    
                    /**
                     * Cluster workloadIdentityConfig.
                     * @member {google.container.v1.IWorkloadIdentityConfig|null|undefined} workloadIdentityConfig
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.workloadIdentityConfig = null;
    
                    /**
                     * Cluster meshCertificates.
                     * @member {google.container.v1.IMeshCertificates|null|undefined} meshCertificates
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.meshCertificates = null;
    
                    /**
                     * Cluster costManagementConfig.
                     * @member {google.container.v1.ICostManagementConfig|null|undefined} costManagementConfig
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.costManagementConfig = null;
    
                    /**
                     * Cluster notificationConfig.
                     * @member {google.container.v1.INotificationConfig|null|undefined} notificationConfig
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.notificationConfig = null;
    
                    /**
                     * Cluster confidentialNodes.
                     * @member {google.container.v1.IConfidentialNodes|null|undefined} confidentialNodes
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.confidentialNodes = null;
    
                    /**
                     * Cluster identityServiceConfig.
                     * @member {google.container.v1.IIdentityServiceConfig|null|undefined} identityServiceConfig
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.identityServiceConfig = null;
    
                    /**
                     * Cluster selfLink.
                     * @member {string} selfLink
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.selfLink = "";
    
                    /**
                     * Cluster zone.
                     * @member {string} zone
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.zone = "";
    
                    /**
                     * Cluster endpoint.
                     * @member {string} endpoint
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.endpoint = "";
    
                    /**
                     * Cluster initialClusterVersion.
                     * @member {string} initialClusterVersion
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.initialClusterVersion = "";
    
                    /**
                     * Cluster currentMasterVersion.
                     * @member {string} currentMasterVersion
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.currentMasterVersion = "";
    
                    /**
                     * Cluster currentNodeVersion.
                     * @member {string} currentNodeVersion
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.currentNodeVersion = "";
    
                    /**
                     * Cluster createTime.
                     * @member {string} createTime
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.createTime = "";
    
                    /**
                     * Cluster status.
                     * @member {google.container.v1.Cluster.Status} status
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.status = 0;
    
                    /**
                     * Cluster statusMessage.
                     * @member {string} statusMessage
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.statusMessage = "";
    
                    /**
                     * Cluster nodeIpv4CidrSize.
                     * @member {number} nodeIpv4CidrSize
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.nodeIpv4CidrSize = 0;
    
                    /**
                     * Cluster servicesIpv4Cidr.
                     * @member {string} servicesIpv4Cidr
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.servicesIpv4Cidr = "";
    
                    /**
                     * Cluster instanceGroupUrls.
                     * @member {Array.<string>} instanceGroupUrls
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.instanceGroupUrls = $util.emptyArray;
    
                    /**
                     * Cluster currentNodeCount.
                     * @member {number} currentNodeCount
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.currentNodeCount = 0;
    
                    /**
                     * Cluster expireTime.
                     * @member {string} expireTime
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.expireTime = "";
    
                    /**
                     * Cluster location.
                     * @member {string} location
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.location = "";
    
                    /**
                     * Cluster enableTpu.
                     * @member {boolean} enableTpu
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.enableTpu = false;
    
                    /**
                     * Cluster tpuIpv4CidrBlock.
                     * @member {string} tpuIpv4CidrBlock
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.tpuIpv4CidrBlock = "";
    
                    /**
                     * Cluster conditions.
                     * @member {Array.<google.container.v1.IStatusCondition>} conditions
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.conditions = $util.emptyArray;
    
                    /**
                     * Cluster autopilot.
                     * @member {google.container.v1.IAutopilot|null|undefined} autopilot
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.autopilot = null;
    
                    /**
                     * Cluster id.
                     * @member {string} id
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.id = "";
    
                    /**
                     * Cluster nodePoolDefaults.
                     * @member {google.container.v1.INodePoolDefaults|null|undefined} nodePoolDefaults
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.nodePoolDefaults = null;
    
                    /**
                     * Cluster loggingConfig.
                     * @member {google.container.v1.ILoggingConfig|null|undefined} loggingConfig
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.loggingConfig = null;
    
                    /**
                     * Cluster monitoringConfig.
                     * @member {google.container.v1.IMonitoringConfig|null|undefined} monitoringConfig
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.monitoringConfig = null;
    
                    /**
                     * Cluster nodePoolAutoConfig.
                     * @member {google.container.v1.INodePoolAutoConfig|null|undefined} nodePoolAutoConfig
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Cluster.prototype.nodePoolAutoConfig = null;
    
                    // OneOf field names bound to virtual getters and setters
                    var $oneOfFields;
    
                    /**
                     * Cluster _nodePoolDefaults.
                     * @member {"nodePoolDefaults"|undefined} _nodePoolDefaults
                     * @memberof google.container.v1.Cluster
                     * @instance
                     */
                    Object.defineProperty(Cluster.prototype, "_nodePoolDefaults", {
                        get: $util.oneOfGetter($oneOfFields = ["nodePoolDefaults"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });
    
                    /**
                     * Creates a new Cluster instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.Cluster
                     * @static
                     * @param {google.container.v1.ICluster=} [properties] Properties to set
                     * @returns {google.container.v1.Cluster} Cluster instance
                     */
                    Cluster.create = function create(properties) {
                        return new Cluster(properties);
                    };
    
                    /**
                     * Encodes the specified Cluster message. Does not implicitly {@link google.container.v1.Cluster.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.Cluster
                     * @static
                     * @param {google.container.v1.ICluster} message Cluster message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Cluster.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                        if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                        if (message.initialNodeCount != null && Object.hasOwnProperty.call(message, "initialNodeCount"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.initialNodeCount);
                        if (message.nodeConfig != null && Object.hasOwnProperty.call(message, "nodeConfig"))
                            $root.google.container.v1.NodeConfig.encode(message.nodeConfig, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.masterAuth != null && Object.hasOwnProperty.call(message, "masterAuth"))
                            $root.google.container.v1.MasterAuth.encode(message.masterAuth, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                        if (message.loggingService != null && Object.hasOwnProperty.call(message, "loggingService"))
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.loggingService);
                        if (message.monitoringService != null && Object.hasOwnProperty.call(message, "monitoringService"))
                            writer.uint32(/* id 7, wireType 2 =*/58).string(message.monitoringService);
                        if (message.network != null && Object.hasOwnProperty.call(message, "network"))
                            writer.uint32(/* id 8, wireType 2 =*/66).string(message.network);
                        if (message.clusterIpv4Cidr != null && Object.hasOwnProperty.call(message, "clusterIpv4Cidr"))
                            writer.uint32(/* id 9, wireType 2 =*/74).string(message.clusterIpv4Cidr);
                        if (message.addonsConfig != null && Object.hasOwnProperty.call(message, "addonsConfig"))
                            $root.google.container.v1.AddonsConfig.encode(message.addonsConfig, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                        if (message.subnetwork != null && Object.hasOwnProperty.call(message, "subnetwork"))
                            writer.uint32(/* id 11, wireType 2 =*/90).string(message.subnetwork);
                        if (message.nodePools != null && message.nodePools.length)
                            for (var i = 0; i < message.nodePools.length; ++i)
                                $root.google.container.v1.NodePool.encode(message.nodePools[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                        if (message.locations != null && message.locations.length)
                            for (var i = 0; i < message.locations.length; ++i)
                                writer.uint32(/* id 13, wireType 2 =*/106).string(message.locations[i]);
                        if (message.enableKubernetesAlpha != null && Object.hasOwnProperty.call(message, "enableKubernetesAlpha"))
                            writer.uint32(/* id 14, wireType 0 =*/112).bool(message.enableKubernetesAlpha);
                        if (message.resourceLabels != null && Object.hasOwnProperty.call(message, "resourceLabels"))
                            for (var keys = Object.keys(message.resourceLabels), i = 0; i < keys.length; ++i)
                                writer.uint32(/* id 15, wireType 2 =*/122).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.resourceLabels[keys[i]]).ldelim();
                        if (message.labelFingerprint != null && Object.hasOwnProperty.call(message, "labelFingerprint"))
                            writer.uint32(/* id 16, wireType 2 =*/130).string(message.labelFingerprint);
                        if (message.legacyAbac != null && Object.hasOwnProperty.call(message, "legacyAbac"))
                            $root.google.container.v1.LegacyAbac.encode(message.legacyAbac, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();
                        if (message.networkPolicy != null && Object.hasOwnProperty.call(message, "networkPolicy"))
                            $root.google.container.v1.NetworkPolicy.encode(message.networkPolicy, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();
                        if (message.ipAllocationPolicy != null && Object.hasOwnProperty.call(message, "ipAllocationPolicy"))
                            $root.google.container.v1.IPAllocationPolicy.encode(message.ipAllocationPolicy, writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();
                        if (message.masterAuthorizedNetworksConfig != null && Object.hasOwnProperty.call(message, "masterAuthorizedNetworksConfig"))
                            $root.google.container.v1.MasterAuthorizedNetworksConfig.encode(message.masterAuthorizedNetworksConfig, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
                        if (message.maintenancePolicy != null && Object.hasOwnProperty.call(message, "maintenancePolicy"))
                            $root.google.container.v1.MaintenancePolicy.encode(message.maintenancePolicy, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                        if (message.binaryAuthorization != null && Object.hasOwnProperty.call(message, "binaryAuthorization"))
                            $root.google.container.v1.BinaryAuthorization.encode(message.binaryAuthorization, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();
                        if (message.autoscaling != null && Object.hasOwnProperty.call(message, "autoscaling"))
                            $root.google.container.v1.ClusterAutoscaling.encode(message.autoscaling, writer.uint32(/* id 26, wireType 2 =*/210).fork()).ldelim();
                        if (message.networkConfig != null && Object.hasOwnProperty.call(message, "networkConfig"))
                            $root.google.container.v1.NetworkConfig.encode(message.networkConfig, writer.uint32(/* id 27, wireType 2 =*/218).fork()).ldelim();
                        if (message.defaultMaxPodsConstraint != null && Object.hasOwnProperty.call(message, "defaultMaxPodsConstraint"))
                            $root.google.container.v1.MaxPodsConstraint.encode(message.defaultMaxPodsConstraint, writer.uint32(/* id 30, wireType 2 =*/242).fork()).ldelim();
                        if (message.resourceUsageExportConfig != null && Object.hasOwnProperty.call(message, "resourceUsageExportConfig"))
                            $root.google.container.v1.ResourceUsageExportConfig.encode(message.resourceUsageExportConfig, writer.uint32(/* id 33, wireType 2 =*/266).fork()).ldelim();
                        if (message.authenticatorGroupsConfig != null && Object.hasOwnProperty.call(message, "authenticatorGroupsConfig"))
                            $root.google.container.v1.AuthenticatorGroupsConfig.encode(message.authenticatorGroupsConfig, writer.uint32(/* id 34, wireType 2 =*/274).fork()).ldelim();
                        if (message.privateClusterConfig != null && Object.hasOwnProperty.call(message, "privateClusterConfig"))
                            $root.google.container.v1.PrivateClusterConfig.encode(message.privateClusterConfig, writer.uint32(/* id 37, wireType 2 =*/298).fork()).ldelim();
                        if (message.databaseEncryption != null && Object.hasOwnProperty.call(message, "databaseEncryption"))
                            $root.google.container.v1.DatabaseEncryption.encode(message.databaseEncryption, writer.uint32(/* id 38, wireType 2 =*/306).fork()).ldelim();
                        if (message.verticalPodAutoscaling != null && Object.hasOwnProperty.call(message, "verticalPodAutoscaling"))
                            $root.google.container.v1.VerticalPodAutoscaling.encode(message.verticalPodAutoscaling, writer.uint32(/* id 39, wireType 2 =*/314).fork()).ldelim();
                        if (message.shieldedNodes != null && Object.hasOwnProperty.call(message, "shieldedNodes"))
                            $root.google.container.v1.ShieldedNodes.encode(message.shieldedNodes, writer.uint32(/* id 40, wireType 2 =*/322).fork()).ldelim();
                        if (message.releaseChannel != null && Object.hasOwnProperty.call(message, "releaseChannel"))
                            $root.google.container.v1.ReleaseChannel.encode(message.releaseChannel, writer.uint32(/* id 41, wireType 2 =*/330).fork()).ldelim();
                        if (message.workloadIdentityConfig != null && Object.hasOwnProperty.call(message, "workloadIdentityConfig"))
                            $root.google.container.v1.WorkloadIdentityConfig.encode(message.workloadIdentityConfig, writer.uint32(/* id 43, wireType 2 =*/346).fork()).ldelim();
                        if (message.costManagementConfig != null && Object.hasOwnProperty.call(message, "costManagementConfig"))
                            $root.google.container.v1.CostManagementConfig.encode(message.costManagementConfig, writer.uint32(/* id 45, wireType 2 =*/362).fork()).ldelim();
                        if (message.notificationConfig != null && Object.hasOwnProperty.call(message, "notificationConfig"))
                            $root.google.container.v1.NotificationConfig.encode(message.notificationConfig, writer.uint32(/* id 49, wireType 2 =*/394).fork()).ldelim();
                        if (message.confidentialNodes != null && Object.hasOwnProperty.call(message, "confidentialNodes"))
                            $root.google.container.v1.ConfidentialNodes.encode(message.confidentialNodes, writer.uint32(/* id 50, wireType 2 =*/402).fork()).ldelim();
                        if (message.identityServiceConfig != null && Object.hasOwnProperty.call(message, "identityServiceConfig"))
                            $root.google.container.v1.IdentityServiceConfig.encode(message.identityServiceConfig, writer.uint32(/* id 54, wireType 2 =*/434).fork()).ldelim();
                        if (message.meshCertificates != null && Object.hasOwnProperty.call(message, "meshCertificates"))
                            $root.google.container.v1.MeshCertificates.encode(message.meshCertificates, writer.uint32(/* id 67, wireType 2 =*/538).fork()).ldelim();
                        if (message.selfLink != null && Object.hasOwnProperty.call(message, "selfLink"))
                            writer.uint32(/* id 100, wireType 2 =*/802).string(message.selfLink);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 101, wireType 2 =*/810).string(message.zone);
                        if (message.endpoint != null && Object.hasOwnProperty.call(message, "endpoint"))
                            writer.uint32(/* id 102, wireType 2 =*/818).string(message.endpoint);
                        if (message.initialClusterVersion != null && Object.hasOwnProperty.call(message, "initialClusterVersion"))
                            writer.uint32(/* id 103, wireType 2 =*/826).string(message.initialClusterVersion);
                        if (message.currentMasterVersion != null && Object.hasOwnProperty.call(message, "currentMasterVersion"))
                            writer.uint32(/* id 104, wireType 2 =*/834).string(message.currentMasterVersion);
                        if (message.currentNodeVersion != null && Object.hasOwnProperty.call(message, "currentNodeVersion"))
                            writer.uint32(/* id 105, wireType 2 =*/842).string(message.currentNodeVersion);
                        if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                            writer.uint32(/* id 106, wireType 2 =*/850).string(message.createTime);
                        if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                            writer.uint32(/* id 107, wireType 0 =*/856).int32(message.status);
                        if (message.statusMessage != null && Object.hasOwnProperty.call(message, "statusMessage"))
                            writer.uint32(/* id 108, wireType 2 =*/866).string(message.statusMessage);
                        if (message.nodeIpv4CidrSize != null && Object.hasOwnProperty.call(message, "nodeIpv4CidrSize"))
                            writer.uint32(/* id 109, wireType 0 =*/872).int32(message.nodeIpv4CidrSize);
                        if (message.servicesIpv4Cidr != null && Object.hasOwnProperty.call(message, "servicesIpv4Cidr"))
                            writer.uint32(/* id 110, wireType 2 =*/882).string(message.servicesIpv4Cidr);
                        if (message.instanceGroupUrls != null && message.instanceGroupUrls.length)
                            for (var i = 0; i < message.instanceGroupUrls.length; ++i)
                                writer.uint32(/* id 111, wireType 2 =*/890).string(message.instanceGroupUrls[i]);
                        if (message.currentNodeCount != null && Object.hasOwnProperty.call(message, "currentNodeCount"))
                            writer.uint32(/* id 112, wireType 0 =*/896).int32(message.currentNodeCount);
                        if (message.expireTime != null && Object.hasOwnProperty.call(message, "expireTime"))
                            writer.uint32(/* id 113, wireType 2 =*/906).string(message.expireTime);
                        if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                            writer.uint32(/* id 114, wireType 2 =*/914).string(message.location);
                        if (message.enableTpu != null && Object.hasOwnProperty.call(message, "enableTpu"))
                            writer.uint32(/* id 115, wireType 0 =*/920).bool(message.enableTpu);
                        if (message.tpuIpv4CidrBlock != null && Object.hasOwnProperty.call(message, "tpuIpv4CidrBlock"))
                            writer.uint32(/* id 116, wireType 2 =*/930).string(message.tpuIpv4CidrBlock);
                        if (message.conditions != null && message.conditions.length)
                            for (var i = 0; i < message.conditions.length; ++i)
                                $root.google.container.v1.StatusCondition.encode(message.conditions[i], writer.uint32(/* id 118, wireType 2 =*/946).fork()).ldelim();
                        if (message.autopilot != null && Object.hasOwnProperty.call(message, "autopilot"))
                            $root.google.container.v1.Autopilot.encode(message.autopilot, writer.uint32(/* id 128, wireType 2 =*/1026).fork()).ldelim();
                        if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                            writer.uint32(/* id 129, wireType 2 =*/1034).string(message.id);
                        if (message.nodePoolDefaults != null && Object.hasOwnProperty.call(message, "nodePoolDefaults"))
                            $root.google.container.v1.NodePoolDefaults.encode(message.nodePoolDefaults, writer.uint32(/* id 131, wireType 2 =*/1050).fork()).ldelim();
                        if (message.loggingConfig != null && Object.hasOwnProperty.call(message, "loggingConfig"))
                            $root.google.container.v1.LoggingConfig.encode(message.loggingConfig, writer.uint32(/* id 132, wireType 2 =*/1058).fork()).ldelim();
                        if (message.monitoringConfig != null && Object.hasOwnProperty.call(message, "monitoringConfig"))
                            $root.google.container.v1.MonitoringConfig.encode(message.monitoringConfig, writer.uint32(/* id 133, wireType 2 =*/1066).fork()).ldelim();
                        if (message.nodePoolAutoConfig != null && Object.hasOwnProperty.call(message, "nodePoolAutoConfig"))
                            $root.google.container.v1.NodePoolAutoConfig.encode(message.nodePoolAutoConfig, writer.uint32(/* id 136, wireType 2 =*/1090).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Cluster message, length delimited. Does not implicitly {@link google.container.v1.Cluster.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.Cluster
                     * @static
                     * @param {google.container.v1.ICluster} message Cluster message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Cluster.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Cluster message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.Cluster
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.Cluster} Cluster
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Cluster.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.Cluster(), key, value;
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.description = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.initialNodeCount = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.nodeConfig = $root.google.container.v1.NodeConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 5: {
                                    message.masterAuth = $root.google.container.v1.MasterAuth.decode(reader, reader.uint32());
                                    break;
                                }
                            case 6: {
                                    message.loggingService = reader.string();
                                    break;
                                }
                            case 7: {
                                    message.monitoringService = reader.string();
                                    break;
                                }
                            case 8: {
                                    message.network = reader.string();
                                    break;
                                }
                            case 9: {
                                    message.clusterIpv4Cidr = reader.string();
                                    break;
                                }
                            case 10: {
                                    message.addonsConfig = $root.google.container.v1.AddonsConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 11: {
                                    message.subnetwork = reader.string();
                                    break;
                                }
                            case 12: {
                                    if (!(message.nodePools && message.nodePools.length))
                                        message.nodePools = [];
                                    message.nodePools.push($root.google.container.v1.NodePool.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 13: {
                                    if (!(message.locations && message.locations.length))
                                        message.locations = [];
                                    message.locations.push(reader.string());
                                    break;
                                }
                            case 14: {
                                    message.enableKubernetesAlpha = reader.bool();
                                    break;
                                }
                            case 15: {
                                    if (message.resourceLabels === $util.emptyObject)
                                        message.resourceLabels = {};
                                    var end2 = reader.uint32() + reader.pos;
                                    key = "";
                                    value = "";
                                    while (reader.pos < end2) {
                                        var tag2 = reader.uint32();
                                        switch (tag2 >>> 3) {
                                        case 1:
                                            key = reader.string();
                                            break;
                                        case 2:
                                            value = reader.string();
                                            break;
                                        default:
                                            reader.skipType(tag2 & 7);
                                            break;
                                        }
                                    }
                                    message.resourceLabels[key] = value;
                                    break;
                                }
                            case 16: {
                                    message.labelFingerprint = reader.string();
                                    break;
                                }
                            case 18: {
                                    message.legacyAbac = $root.google.container.v1.LegacyAbac.decode(reader, reader.uint32());
                                    break;
                                }
                            case 19: {
                                    message.networkPolicy = $root.google.container.v1.NetworkPolicy.decode(reader, reader.uint32());
                                    break;
                                }
                            case 20: {
                                    message.ipAllocationPolicy = $root.google.container.v1.IPAllocationPolicy.decode(reader, reader.uint32());
                                    break;
                                }
                            case 22: {
                                    message.masterAuthorizedNetworksConfig = $root.google.container.v1.MasterAuthorizedNetworksConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 23: {
                                    message.maintenancePolicy = $root.google.container.v1.MaintenancePolicy.decode(reader, reader.uint32());
                                    break;
                                }
                            case 24: {
                                    message.binaryAuthorization = $root.google.container.v1.BinaryAuthorization.decode(reader, reader.uint32());
                                    break;
                                }
                            case 26: {
                                    message.autoscaling = $root.google.container.v1.ClusterAutoscaling.decode(reader, reader.uint32());
                                    break;
                                }
                            case 27: {
                                    message.networkConfig = $root.google.container.v1.NetworkConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 30: {
                                    message.defaultMaxPodsConstraint = $root.google.container.v1.MaxPodsConstraint.decode(reader, reader.uint32());
                                    break;
                                }
                            case 33: {
                                    message.resourceUsageExportConfig = $root.google.container.v1.ResourceUsageExportConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 34: {
                                    message.authenticatorGroupsConfig = $root.google.container.v1.AuthenticatorGroupsConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 37: {
                                    message.privateClusterConfig = $root.google.container.v1.PrivateClusterConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 38: {
                                    message.databaseEncryption = $root.google.container.v1.DatabaseEncryption.decode(reader, reader.uint32());
                                    break;
                                }
                            case 39: {
                                    message.verticalPodAutoscaling = $root.google.container.v1.VerticalPodAutoscaling.decode(reader, reader.uint32());
                                    break;
                                }
                            case 40: {
                                    message.shieldedNodes = $root.google.container.v1.ShieldedNodes.decode(reader, reader.uint32());
                                    break;
                                }
                            case 41: {
                                    message.releaseChannel = $root.google.container.v1.ReleaseChannel.decode(reader, reader.uint32());
                                    break;
                                }
                            case 43: {
                                    message.workloadIdentityConfig = $root.google.container.v1.WorkloadIdentityConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 67: {
                                    message.meshCertificates = $root.google.container.v1.MeshCertificates.decode(reader, reader.uint32());
                                    break;
                                }
                            case 45: {
                                    message.costManagementConfig = $root.google.container.v1.CostManagementConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 49: {
                                    message.notificationConfig = $root.google.container.v1.NotificationConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 50: {
                                    message.confidentialNodes = $root.google.container.v1.ConfidentialNodes.decode(reader, reader.uint32());
                                    break;
                                }
                            case 54: {
                                    message.identityServiceConfig = $root.google.container.v1.IdentityServiceConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 100: {
                                    message.selfLink = reader.string();
                                    break;
                                }
                            case 101: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 102: {
                                    message.endpoint = reader.string();
                                    break;
                                }
                            case 103: {
                                    message.initialClusterVersion = reader.string();
                                    break;
                                }
                            case 104: {
                                    message.currentMasterVersion = reader.string();
                                    break;
                                }
                            case 105: {
                                    message.currentNodeVersion = reader.string();
                                    break;
                                }
                            case 106: {
                                    message.createTime = reader.string();
                                    break;
                                }
                            case 107: {
                                    message.status = reader.int32();
                                    break;
                                }
                            case 108: {
                                    message.statusMessage = reader.string();
                                    break;
                                }
                            case 109: {
                                    message.nodeIpv4CidrSize = reader.int32();
                                    break;
                                }
                            case 110: {
                                    message.servicesIpv4Cidr = reader.string();
                                    break;
                                }
                            case 111: {
                                    if (!(message.instanceGroupUrls && message.instanceGroupUrls.length))
                                        message.instanceGroupUrls = [];
                                    message.instanceGroupUrls.push(reader.string());
                                    break;
                                }
                            case 112: {
                                    message.currentNodeCount = reader.int32();
                                    break;
                                }
                            case 113: {
                                    message.expireTime = reader.string();
                                    break;
                                }
                            case 114: {
                                    message.location = reader.string();
                                    break;
                                }
                            case 115: {
                                    message.enableTpu = reader.bool();
                                    break;
                                }
                            case 116: {
                                    message.tpuIpv4CidrBlock = reader.string();
                                    break;
                                }
                            case 118: {
                                    if (!(message.conditions && message.conditions.length))
                                        message.conditions = [];
                                    message.conditions.push($root.google.container.v1.StatusCondition.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 128: {
                                    message.autopilot = $root.google.container.v1.Autopilot.decode(reader, reader.uint32());
                                    break;
                                }
                            case 129: {
                                    message.id = reader.string();
                                    break;
                                }
                            case 131: {
                                    message.nodePoolDefaults = $root.google.container.v1.NodePoolDefaults.decode(reader, reader.uint32());
                                    break;
                                }
                            case 132: {
                                    message.loggingConfig = $root.google.container.v1.LoggingConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 133: {
                                    message.monitoringConfig = $root.google.container.v1.MonitoringConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 136: {
                                    message.nodePoolAutoConfig = $root.google.container.v1.NodePoolAutoConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Cluster message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.Cluster
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.Cluster} Cluster
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Cluster.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Cluster message.
                     * @function verify
                     * @memberof google.container.v1.Cluster
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Cluster.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        var properties = {};
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.description != null && message.hasOwnProperty("description"))
                            if (!$util.isString(message.description))
                                return "description: string expected";
                        if (message.initialNodeCount != null && message.hasOwnProperty("initialNodeCount"))
                            if (!$util.isInteger(message.initialNodeCount))
                                return "initialNodeCount: integer expected";
                        if (message.nodeConfig != null && message.hasOwnProperty("nodeConfig")) {
                            var error = $root.google.container.v1.NodeConfig.verify(message.nodeConfig);
                            if (error)
                                return "nodeConfig." + error;
                        }
                        if (message.masterAuth != null && message.hasOwnProperty("masterAuth")) {
                            var error = $root.google.container.v1.MasterAuth.verify(message.masterAuth);
                            if (error)
                                return "masterAuth." + error;
                        }
                        if (message.loggingService != null && message.hasOwnProperty("loggingService"))
                            if (!$util.isString(message.loggingService))
                                return "loggingService: string expected";
                        if (message.monitoringService != null && message.hasOwnProperty("monitoringService"))
                            if (!$util.isString(message.monitoringService))
                                return "monitoringService: string expected";
                        if (message.network != null && message.hasOwnProperty("network"))
                            if (!$util.isString(message.network))
                                return "network: string expected";
                        if (message.clusterIpv4Cidr != null && message.hasOwnProperty("clusterIpv4Cidr"))
                            if (!$util.isString(message.clusterIpv4Cidr))
                                return "clusterIpv4Cidr: string expected";
                        if (message.addonsConfig != null && message.hasOwnProperty("addonsConfig")) {
                            var error = $root.google.container.v1.AddonsConfig.verify(message.addonsConfig);
                            if (error)
                                return "addonsConfig." + error;
                        }
                        if (message.subnetwork != null && message.hasOwnProperty("subnetwork"))
                            if (!$util.isString(message.subnetwork))
                                return "subnetwork: string expected";
                        if (message.nodePools != null && message.hasOwnProperty("nodePools")) {
                            if (!Array.isArray(message.nodePools))
                                return "nodePools: array expected";
                            for (var i = 0; i < message.nodePools.length; ++i) {
                                var error = $root.google.container.v1.NodePool.verify(message.nodePools[i]);
                                if (error)
                                    return "nodePools." + error;
                            }
                        }
                        if (message.locations != null && message.hasOwnProperty("locations")) {
                            if (!Array.isArray(message.locations))
                                return "locations: array expected";
                            for (var i = 0; i < message.locations.length; ++i)
                                if (!$util.isString(message.locations[i]))
                                    return "locations: string[] expected";
                        }
                        if (message.enableKubernetesAlpha != null && message.hasOwnProperty("enableKubernetesAlpha"))
                            if (typeof message.enableKubernetesAlpha !== "boolean")
                                return "enableKubernetesAlpha: boolean expected";
                        if (message.resourceLabels != null && message.hasOwnProperty("resourceLabels")) {
                            if (!$util.isObject(message.resourceLabels))
                                return "resourceLabels: object expected";
                            var key = Object.keys(message.resourceLabels);
                            for (var i = 0; i < key.length; ++i)
                                if (!$util.isString(message.resourceLabels[key[i]]))
                                    return "resourceLabels: string{k:string} expected";
                        }
                        if (message.labelFingerprint != null && message.hasOwnProperty("labelFingerprint"))
                            if (!$util.isString(message.labelFingerprint))
                                return "labelFingerprint: string expected";
                        if (message.legacyAbac != null && message.hasOwnProperty("legacyAbac")) {
                            var error = $root.google.container.v1.LegacyAbac.verify(message.legacyAbac);
                            if (error)
                                return "legacyAbac." + error;
                        }
                        if (message.networkPolicy != null && message.hasOwnProperty("networkPolicy")) {
                            var error = $root.google.container.v1.NetworkPolicy.verify(message.networkPolicy);
                            if (error)
                                return "networkPolicy." + error;
                        }
                        if (message.ipAllocationPolicy != null && message.hasOwnProperty("ipAllocationPolicy")) {
                            var error = $root.google.container.v1.IPAllocationPolicy.verify(message.ipAllocationPolicy);
                            if (error)
                                return "ipAllocationPolicy." + error;
                        }
                        if (message.masterAuthorizedNetworksConfig != null && message.hasOwnProperty("masterAuthorizedNetworksConfig")) {
                            var error = $root.google.container.v1.MasterAuthorizedNetworksConfig.verify(message.masterAuthorizedNetworksConfig);
                            if (error)
                                return "masterAuthorizedNetworksConfig." + error;
                        }
                        if (message.maintenancePolicy != null && message.hasOwnProperty("maintenancePolicy")) {
                            var error = $root.google.container.v1.MaintenancePolicy.verify(message.maintenancePolicy);
                            if (error)
                                return "maintenancePolicy." + error;
                        }
                        if (message.binaryAuthorization != null && message.hasOwnProperty("binaryAuthorization")) {
                            var error = $root.google.container.v1.BinaryAuthorization.verify(message.binaryAuthorization);
                            if (error)
                                return "binaryAuthorization." + error;
                        }
                        if (message.autoscaling != null && message.hasOwnProperty("autoscaling")) {
                            var error = $root.google.container.v1.ClusterAutoscaling.verify(message.autoscaling);
                            if (error)
                                return "autoscaling." + error;
                        }
                        if (message.networkConfig != null && message.hasOwnProperty("networkConfig")) {
                            var error = $root.google.container.v1.NetworkConfig.verify(message.networkConfig);
                            if (error)
                                return "networkConfig." + error;
                        }
                        if (message.defaultMaxPodsConstraint != null && message.hasOwnProperty("defaultMaxPodsConstraint")) {
                            var error = $root.google.container.v1.MaxPodsConstraint.verify(message.defaultMaxPodsConstraint);
                            if (error)
                                return "defaultMaxPodsConstraint." + error;
                        }
                        if (message.resourceUsageExportConfig != null && message.hasOwnProperty("resourceUsageExportConfig")) {
                            var error = $root.google.container.v1.ResourceUsageExportConfig.verify(message.resourceUsageExportConfig);
                            if (error)
                                return "resourceUsageExportConfig." + error;
                        }
                        if (message.authenticatorGroupsConfig != null && message.hasOwnProperty("authenticatorGroupsConfig")) {
                            var error = $root.google.container.v1.AuthenticatorGroupsConfig.verify(message.authenticatorGroupsConfig);
                            if (error)
                                return "authenticatorGroupsConfig." + error;
                        }
                        if (message.privateClusterConfig != null && message.hasOwnProperty("privateClusterConfig")) {
                            var error = $root.google.container.v1.PrivateClusterConfig.verify(message.privateClusterConfig);
                            if (error)
                                return "privateClusterConfig." + error;
                        }
                        if (message.databaseEncryption != null && message.hasOwnProperty("databaseEncryption")) {
                            var error = $root.google.container.v1.DatabaseEncryption.verify(message.databaseEncryption);
                            if (error)
                                return "databaseEncryption." + error;
                        }
                        if (message.verticalPodAutoscaling != null && message.hasOwnProperty("verticalPodAutoscaling")) {
                            var error = $root.google.container.v1.VerticalPodAutoscaling.verify(message.verticalPodAutoscaling);
                            if (error)
                                return "verticalPodAutoscaling." + error;
                        }
                        if (message.shieldedNodes != null && message.hasOwnProperty("shieldedNodes")) {
                            var error = $root.google.container.v1.ShieldedNodes.verify(message.shieldedNodes);
                            if (error)
                                return "shieldedNodes." + error;
                        }
                        if (message.releaseChannel != null && message.hasOwnProperty("releaseChannel")) {
                            var error = $root.google.container.v1.ReleaseChannel.verify(message.releaseChannel);
                            if (error)
                                return "releaseChannel." + error;
                        }
                        if (message.workloadIdentityConfig != null && message.hasOwnProperty("workloadIdentityConfig")) {
                            var error = $root.google.container.v1.WorkloadIdentityConfig.verify(message.workloadIdentityConfig);
                            if (error)
                                return "workloadIdentityConfig." + error;
                        }
                        if (message.meshCertificates != null && message.hasOwnProperty("meshCertificates")) {
                            var error = $root.google.container.v1.MeshCertificates.verify(message.meshCertificates);
                            if (error)
                                return "meshCertificates." + error;
                        }
                        if (message.costManagementConfig != null && message.hasOwnProperty("costManagementConfig")) {
                            var error = $root.google.container.v1.CostManagementConfig.verify(message.costManagementConfig);
                            if (error)
                                return "costManagementConfig." + error;
                        }
                        if (message.notificationConfig != null && message.hasOwnProperty("notificationConfig")) {
                            var error = $root.google.container.v1.NotificationConfig.verify(message.notificationConfig);
                            if (error)
                                return "notificationConfig." + error;
                        }
                        if (message.confidentialNodes != null && message.hasOwnProperty("confidentialNodes")) {
                            var error = $root.google.container.v1.ConfidentialNodes.verify(message.confidentialNodes);
                            if (error)
                                return "confidentialNodes." + error;
                        }
                        if (message.identityServiceConfig != null && message.hasOwnProperty("identityServiceConfig")) {
                            var error = $root.google.container.v1.IdentityServiceConfig.verify(message.identityServiceConfig);
                            if (error)
                                return "identityServiceConfig." + error;
                        }
                        if (message.selfLink != null && message.hasOwnProperty("selfLink"))
                            if (!$util.isString(message.selfLink))
                                return "selfLink: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.endpoint != null && message.hasOwnProperty("endpoint"))
                            if (!$util.isString(message.endpoint))
                                return "endpoint: string expected";
                        if (message.initialClusterVersion != null && message.hasOwnProperty("initialClusterVersion"))
                            if (!$util.isString(message.initialClusterVersion))
                                return "initialClusterVersion: string expected";
                        if (message.currentMasterVersion != null && message.hasOwnProperty("currentMasterVersion"))
                            if (!$util.isString(message.currentMasterVersion))
                                return "currentMasterVersion: string expected";
                        if (message.currentNodeVersion != null && message.hasOwnProperty("currentNodeVersion"))
                            if (!$util.isString(message.currentNodeVersion))
                                return "currentNodeVersion: string expected";
                        if (message.createTime != null && message.hasOwnProperty("createTime"))
                            if (!$util.isString(message.createTime))
                                return "createTime: string expected";
                        if (message.status != null && message.hasOwnProperty("status"))
                            switch (message.status) {
                            default:
                                return "status: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                                break;
                            }
                        if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                            if (!$util.isString(message.statusMessage))
                                return "statusMessage: string expected";
                        if (message.nodeIpv4CidrSize != null && message.hasOwnProperty("nodeIpv4CidrSize"))
                            if (!$util.isInteger(message.nodeIpv4CidrSize))
                                return "nodeIpv4CidrSize: integer expected";
                        if (message.servicesIpv4Cidr != null && message.hasOwnProperty("servicesIpv4Cidr"))
                            if (!$util.isString(message.servicesIpv4Cidr))
                                return "servicesIpv4Cidr: string expected";
                        if (message.instanceGroupUrls != null && message.hasOwnProperty("instanceGroupUrls")) {
                            if (!Array.isArray(message.instanceGroupUrls))
                                return "instanceGroupUrls: array expected";
                            for (var i = 0; i < message.instanceGroupUrls.length; ++i)
                                if (!$util.isString(message.instanceGroupUrls[i]))
                                    return "instanceGroupUrls: string[] expected";
                        }
                        if (message.currentNodeCount != null && message.hasOwnProperty("currentNodeCount"))
                            if (!$util.isInteger(message.currentNodeCount))
                                return "currentNodeCount: integer expected";
                        if (message.expireTime != null && message.hasOwnProperty("expireTime"))
                            if (!$util.isString(message.expireTime))
                                return "expireTime: string expected";
                        if (message.location != null && message.hasOwnProperty("location"))
                            if (!$util.isString(message.location))
                                return "location: string expected";
                        if (message.enableTpu != null && message.hasOwnProperty("enableTpu"))
                            if (typeof message.enableTpu !== "boolean")
                                return "enableTpu: boolean expected";
                        if (message.tpuIpv4CidrBlock != null && message.hasOwnProperty("tpuIpv4CidrBlock"))
                            if (!$util.isString(message.tpuIpv4CidrBlock))
                                return "tpuIpv4CidrBlock: string expected";
                        if (message.conditions != null && message.hasOwnProperty("conditions")) {
                            if (!Array.isArray(message.conditions))
                                return "conditions: array expected";
                            for (var i = 0; i < message.conditions.length; ++i) {
                                var error = $root.google.container.v1.StatusCondition.verify(message.conditions[i]);
                                if (error)
                                    return "conditions." + error;
                            }
                        }
                        if (message.autopilot != null && message.hasOwnProperty("autopilot")) {
                            var error = $root.google.container.v1.Autopilot.verify(message.autopilot);
                            if (error)
                                return "autopilot." + error;
                        }
                        if (message.id != null && message.hasOwnProperty("id"))
                            if (!$util.isString(message.id))
                                return "id: string expected";
                        if (message.nodePoolDefaults != null && message.hasOwnProperty("nodePoolDefaults")) {
                            properties._nodePoolDefaults = 1;
                            {
                                var error = $root.google.container.v1.NodePoolDefaults.verify(message.nodePoolDefaults);
                                if (error)
                                    return "nodePoolDefaults." + error;
                            }
                        }
                        if (message.loggingConfig != null && message.hasOwnProperty("loggingConfig")) {
                            var error = $root.google.container.v1.LoggingConfig.verify(message.loggingConfig);
                            if (error)
                                return "loggingConfig." + error;
                        }
                        if (message.monitoringConfig != null && message.hasOwnProperty("monitoringConfig")) {
                            var error = $root.google.container.v1.MonitoringConfig.verify(message.monitoringConfig);
                            if (error)
                                return "monitoringConfig." + error;
                        }
                        if (message.nodePoolAutoConfig != null && message.hasOwnProperty("nodePoolAutoConfig")) {
                            var error = $root.google.container.v1.NodePoolAutoConfig.verify(message.nodePoolAutoConfig);
                            if (error)
                                return "nodePoolAutoConfig." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Cluster message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.Cluster
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.Cluster} Cluster
                     */
                    Cluster.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.Cluster)
                            return object;
                        var message = new $root.google.container.v1.Cluster();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.description != null)
                            message.description = String(object.description);
                        if (object.initialNodeCount != null)
                            message.initialNodeCount = object.initialNodeCount | 0;
                        if (object.nodeConfig != null) {
                            if (typeof object.nodeConfig !== "object")
                                throw TypeError(".google.container.v1.Cluster.nodeConfig: object expected");
                            message.nodeConfig = $root.google.container.v1.NodeConfig.fromObject(object.nodeConfig);
                        }
                        if (object.masterAuth != null) {
                            if (typeof object.masterAuth !== "object")
                                throw TypeError(".google.container.v1.Cluster.masterAuth: object expected");
                            message.masterAuth = $root.google.container.v1.MasterAuth.fromObject(object.masterAuth);
                        }
                        if (object.loggingService != null)
                            message.loggingService = String(object.loggingService);
                        if (object.monitoringService != null)
                            message.monitoringService = String(object.monitoringService);
                        if (object.network != null)
                            message.network = String(object.network);
                        if (object.clusterIpv4Cidr != null)
                            message.clusterIpv4Cidr = String(object.clusterIpv4Cidr);
                        if (object.addonsConfig != null) {
                            if (typeof object.addonsConfig !== "object")
                                throw TypeError(".google.container.v1.Cluster.addonsConfig: object expected");
                            message.addonsConfig = $root.google.container.v1.AddonsConfig.fromObject(object.addonsConfig);
                        }
                        if (object.subnetwork != null)
                            message.subnetwork = String(object.subnetwork);
                        if (object.nodePools) {
                            if (!Array.isArray(object.nodePools))
                                throw TypeError(".google.container.v1.Cluster.nodePools: array expected");
                            message.nodePools = [];
                            for (var i = 0; i < object.nodePools.length; ++i) {
                                if (typeof object.nodePools[i] !== "object")
                                    throw TypeError(".google.container.v1.Cluster.nodePools: object expected");
                                message.nodePools[i] = $root.google.container.v1.NodePool.fromObject(object.nodePools[i]);
                            }
                        }
                        if (object.locations) {
                            if (!Array.isArray(object.locations))
                                throw TypeError(".google.container.v1.Cluster.locations: array expected");
                            message.locations = [];
                            for (var i = 0; i < object.locations.length; ++i)
                                message.locations[i] = String(object.locations[i]);
                        }
                        if (object.enableKubernetesAlpha != null)
                            message.enableKubernetesAlpha = Boolean(object.enableKubernetesAlpha);
                        if (object.resourceLabels) {
                            if (typeof object.resourceLabels !== "object")
                                throw TypeError(".google.container.v1.Cluster.resourceLabels: object expected");
                            message.resourceLabels = {};
                            for (var keys = Object.keys(object.resourceLabels), i = 0; i < keys.length; ++i)
                                message.resourceLabels[keys[i]] = String(object.resourceLabels[keys[i]]);
                        }
                        if (object.labelFingerprint != null)
                            message.labelFingerprint = String(object.labelFingerprint);
                        if (object.legacyAbac != null) {
                            if (typeof object.legacyAbac !== "object")
                                throw TypeError(".google.container.v1.Cluster.legacyAbac: object expected");
                            message.legacyAbac = $root.google.container.v1.LegacyAbac.fromObject(object.legacyAbac);
                        }
                        if (object.networkPolicy != null) {
                            if (typeof object.networkPolicy !== "object")
                                throw TypeError(".google.container.v1.Cluster.networkPolicy: object expected");
                            message.networkPolicy = $root.google.container.v1.NetworkPolicy.fromObject(object.networkPolicy);
                        }
                        if (object.ipAllocationPolicy != null) {
                            if (typeof object.ipAllocationPolicy !== "object")
                                throw TypeError(".google.container.v1.Cluster.ipAllocationPolicy: object expected");
                            message.ipAllocationPolicy = $root.google.container.v1.IPAllocationPolicy.fromObject(object.ipAllocationPolicy);
                        }
                        if (object.masterAuthorizedNetworksConfig != null) {
                            if (typeof object.masterAuthorizedNetworksConfig !== "object")
                                throw TypeError(".google.container.v1.Cluster.masterAuthorizedNetworksConfig: object expected");
                            message.masterAuthorizedNetworksConfig = $root.google.container.v1.MasterAuthorizedNetworksConfig.fromObject(object.masterAuthorizedNetworksConfig);
                        }
                        if (object.maintenancePolicy != null) {
                            if (typeof object.maintenancePolicy !== "object")
                                throw TypeError(".google.container.v1.Cluster.maintenancePolicy: object expected");
                            message.maintenancePolicy = $root.google.container.v1.MaintenancePolicy.fromObject(object.maintenancePolicy);
                        }
                        if (object.binaryAuthorization != null) {
                            if (typeof object.binaryAuthorization !== "object")
                                throw TypeError(".google.container.v1.Cluster.binaryAuthorization: object expected");
                            message.binaryAuthorization = $root.google.container.v1.BinaryAuthorization.fromObject(object.binaryAuthorization);
                        }
                        if (object.autoscaling != null) {
                            if (typeof object.autoscaling !== "object")
                                throw TypeError(".google.container.v1.Cluster.autoscaling: object expected");
                            message.autoscaling = $root.google.container.v1.ClusterAutoscaling.fromObject(object.autoscaling);
                        }
                        if (object.networkConfig != null) {
                            if (typeof object.networkConfig !== "object")
                                throw TypeError(".google.container.v1.Cluster.networkConfig: object expected");
                            message.networkConfig = $root.google.container.v1.NetworkConfig.fromObject(object.networkConfig);
                        }
                        if (object.defaultMaxPodsConstraint != null) {
                            if (typeof object.defaultMaxPodsConstraint !== "object")
                                throw TypeError(".google.container.v1.Cluster.defaultMaxPodsConstraint: object expected");
                            message.defaultMaxPodsConstraint = $root.google.container.v1.MaxPodsConstraint.fromObject(object.defaultMaxPodsConstraint);
                        }
                        if (object.resourceUsageExportConfig != null) {
                            if (typeof object.resourceUsageExportConfig !== "object")
                                throw TypeError(".google.container.v1.Cluster.resourceUsageExportConfig: object expected");
                            message.resourceUsageExportConfig = $root.google.container.v1.ResourceUsageExportConfig.fromObject(object.resourceUsageExportConfig);
                        }
                        if (object.authenticatorGroupsConfig != null) {
                            if (typeof object.authenticatorGroupsConfig !== "object")
                                throw TypeError(".google.container.v1.Cluster.authenticatorGroupsConfig: object expected");
                            message.authenticatorGroupsConfig = $root.google.container.v1.AuthenticatorGroupsConfig.fromObject(object.authenticatorGroupsConfig);
                        }
                        if (object.privateClusterConfig != null) {
                            if (typeof object.privateClusterConfig !== "object")
                                throw TypeError(".google.container.v1.Cluster.privateClusterConfig: object expected");
                            message.privateClusterConfig = $root.google.container.v1.PrivateClusterConfig.fromObject(object.privateClusterConfig);
                        }
                        if (object.databaseEncryption != null) {
                            if (typeof object.databaseEncryption !== "object")
                                throw TypeError(".google.container.v1.Cluster.databaseEncryption: object expected");
                            message.databaseEncryption = $root.google.container.v1.DatabaseEncryption.fromObject(object.databaseEncryption);
                        }
                        if (object.verticalPodAutoscaling != null) {
                            if (typeof object.verticalPodAutoscaling !== "object")
                                throw TypeError(".google.container.v1.Cluster.verticalPodAutoscaling: object expected");
                            message.verticalPodAutoscaling = $root.google.container.v1.VerticalPodAutoscaling.fromObject(object.verticalPodAutoscaling);
                        }
                        if (object.shieldedNodes != null) {
                            if (typeof object.shieldedNodes !== "object")
                                throw TypeError(".google.container.v1.Cluster.shieldedNodes: object expected");
                            message.shieldedNodes = $root.google.container.v1.ShieldedNodes.fromObject(object.shieldedNodes);
                        }
                        if (object.releaseChannel != null) {
                            if (typeof object.releaseChannel !== "object")
                                throw TypeError(".google.container.v1.Cluster.releaseChannel: object expected");
                            message.releaseChannel = $root.google.container.v1.ReleaseChannel.fromObject(object.releaseChannel);
                        }
                        if (object.workloadIdentityConfig != null) {
                            if (typeof object.workloadIdentityConfig !== "object")
                                throw TypeError(".google.container.v1.Cluster.workloadIdentityConfig: object expected");
                            message.workloadIdentityConfig = $root.google.container.v1.WorkloadIdentityConfig.fromObject(object.workloadIdentityConfig);
                        }
                        if (object.meshCertificates != null) {
                            if (typeof object.meshCertificates !== "object")
                                throw TypeError(".google.container.v1.Cluster.meshCertificates: object expected");
                            message.meshCertificates = $root.google.container.v1.MeshCertificates.fromObject(object.meshCertificates);
                        }
                        if (object.costManagementConfig != null) {
                            if (typeof object.costManagementConfig !== "object")
                                throw TypeError(".google.container.v1.Cluster.costManagementConfig: object expected");
                            message.costManagementConfig = $root.google.container.v1.CostManagementConfig.fromObject(object.costManagementConfig);
                        }
                        if (object.notificationConfig != null) {
                            if (typeof object.notificationConfig !== "object")
                                throw TypeError(".google.container.v1.Cluster.notificationConfig: object expected");
                            message.notificationConfig = $root.google.container.v1.NotificationConfig.fromObject(object.notificationConfig);
                        }
                        if (object.confidentialNodes != null) {
                            if (typeof object.confidentialNodes !== "object")
                                throw TypeError(".google.container.v1.Cluster.confidentialNodes: object expected");
                            message.confidentialNodes = $root.google.container.v1.ConfidentialNodes.fromObject(object.confidentialNodes);
                        }
                        if (object.identityServiceConfig != null) {
                            if (typeof object.identityServiceConfig !== "object")
                                throw TypeError(".google.container.v1.Cluster.identityServiceConfig: object expected");
                            message.identityServiceConfig = $root.google.container.v1.IdentityServiceConfig.fromObject(object.identityServiceConfig);
                        }
                        if (object.selfLink != null)
                            message.selfLink = String(object.selfLink);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.endpoint != null)
                            message.endpoint = String(object.endpoint);
                        if (object.initialClusterVersion != null)
                            message.initialClusterVersion = String(object.initialClusterVersion);
                        if (object.currentMasterVersion != null)
                            message.currentMasterVersion = String(object.currentMasterVersion);
                        if (object.currentNodeVersion != null)
                            message.currentNodeVersion = String(object.currentNodeVersion);
                        if (object.createTime != null)
                            message.createTime = String(object.createTime);
                        switch (object.status) {
                        default:
                            if (typeof object.status === "number") {
                                message.status = object.status;
                                break;
                            }
                            break;
                        case "STATUS_UNSPECIFIED":
                        case 0:
                            message.status = 0;
                            break;
                        case "PROVISIONING":
                        case 1:
                            message.status = 1;
                            break;
                        case "RUNNING":
                        case 2:
                            message.status = 2;
                            break;
                        case "RECONCILING":
                        case 3:
                            message.status = 3;
                            break;
                        case "STOPPING":
                        case 4:
                            message.status = 4;
                            break;
                        case "ERROR":
                        case 5:
                            message.status = 5;
                            break;
                        case "DEGRADED":
                        case 6:
                            message.status = 6;
                            break;
                        }
                        if (object.statusMessage != null)
                            message.statusMessage = String(object.statusMessage);
                        if (object.nodeIpv4CidrSize != null)
                            message.nodeIpv4CidrSize = object.nodeIpv4CidrSize | 0;
                        if (object.servicesIpv4Cidr != null)
                            message.servicesIpv4Cidr = String(object.servicesIpv4Cidr);
                        if (object.instanceGroupUrls) {
                            if (!Array.isArray(object.instanceGroupUrls))
                                throw TypeError(".google.container.v1.Cluster.instanceGroupUrls: array expected");
                            message.instanceGroupUrls = [];
                            for (var i = 0; i < object.instanceGroupUrls.length; ++i)
                                message.instanceGroupUrls[i] = String(object.instanceGroupUrls[i]);
                        }
                        if (object.currentNodeCount != null)
                            message.currentNodeCount = object.currentNodeCount | 0;
                        if (object.expireTime != null)
                            message.expireTime = String(object.expireTime);
                        if (object.location != null)
                            message.location = String(object.location);
                        if (object.enableTpu != null)
                            message.enableTpu = Boolean(object.enableTpu);
                        if (object.tpuIpv4CidrBlock != null)
                            message.tpuIpv4CidrBlock = String(object.tpuIpv4CidrBlock);
                        if (object.conditions) {
                            if (!Array.isArray(object.conditions))
                                throw TypeError(".google.container.v1.Cluster.conditions: array expected");
                            message.conditions = [];
                            for (var i = 0; i < object.conditions.length; ++i) {
                                if (typeof object.conditions[i] !== "object")
                                    throw TypeError(".google.container.v1.Cluster.conditions: object expected");
                                message.conditions[i] = $root.google.container.v1.StatusCondition.fromObject(object.conditions[i]);
                            }
                        }
                        if (object.autopilot != null) {
                            if (typeof object.autopilot !== "object")
                                throw TypeError(".google.container.v1.Cluster.autopilot: object expected");
                            message.autopilot = $root.google.container.v1.Autopilot.fromObject(object.autopilot);
                        }
                        if (object.id != null)
                            message.id = String(object.id);
                        if (object.nodePoolDefaults != null) {
                            if (typeof object.nodePoolDefaults !== "object")
                                throw TypeError(".google.container.v1.Cluster.nodePoolDefaults: object expected");
                            message.nodePoolDefaults = $root.google.container.v1.NodePoolDefaults.fromObject(object.nodePoolDefaults);
                        }
                        if (object.loggingConfig != null) {
                            if (typeof object.loggingConfig !== "object")
                                throw TypeError(".google.container.v1.Cluster.loggingConfig: object expected");
                            message.loggingConfig = $root.google.container.v1.LoggingConfig.fromObject(object.loggingConfig);
                        }
                        if (object.monitoringConfig != null) {
                            if (typeof object.monitoringConfig !== "object")
                                throw TypeError(".google.container.v1.Cluster.monitoringConfig: object expected");
                            message.monitoringConfig = $root.google.container.v1.MonitoringConfig.fromObject(object.monitoringConfig);
                        }
                        if (object.nodePoolAutoConfig != null) {
                            if (typeof object.nodePoolAutoConfig !== "object")
                                throw TypeError(".google.container.v1.Cluster.nodePoolAutoConfig: object expected");
                            message.nodePoolAutoConfig = $root.google.container.v1.NodePoolAutoConfig.fromObject(object.nodePoolAutoConfig);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Cluster message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.Cluster
                     * @static
                     * @param {google.container.v1.Cluster} message Cluster
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Cluster.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.nodePools = [];
                            object.locations = [];
                            object.instanceGroupUrls = [];
                            object.conditions = [];
                        }
                        if (options.objects || options.defaults)
                            object.resourceLabels = {};
                        if (options.defaults) {
                            object.name = "";
                            object.description = "";
                            object.initialNodeCount = 0;
                            object.nodeConfig = null;
                            object.masterAuth = null;
                            object.loggingService = "";
                            object.monitoringService = "";
                            object.network = "";
                            object.clusterIpv4Cidr = "";
                            object.addonsConfig = null;
                            object.subnetwork = "";
                            object.enableKubernetesAlpha = false;
                            object.labelFingerprint = "";
                            object.legacyAbac = null;
                            object.networkPolicy = null;
                            object.ipAllocationPolicy = null;
                            object.masterAuthorizedNetworksConfig = null;
                            object.maintenancePolicy = null;
                            object.binaryAuthorization = null;
                            object.autoscaling = null;
                            object.networkConfig = null;
                            object.defaultMaxPodsConstraint = null;
                            object.resourceUsageExportConfig = null;
                            object.authenticatorGroupsConfig = null;
                            object.privateClusterConfig = null;
                            object.databaseEncryption = null;
                            object.verticalPodAutoscaling = null;
                            object.shieldedNodes = null;
                            object.releaseChannel = null;
                            object.workloadIdentityConfig = null;
                            object.costManagementConfig = null;
                            object.notificationConfig = null;
                            object.confidentialNodes = null;
                            object.identityServiceConfig = null;
                            object.meshCertificates = null;
                            object.selfLink = "";
                            object.zone = "";
                            object.endpoint = "";
                            object.initialClusterVersion = "";
                            object.currentMasterVersion = "";
                            object.currentNodeVersion = "";
                            object.createTime = "";
                            object.status = options.enums === String ? "STATUS_UNSPECIFIED" : 0;
                            object.statusMessage = "";
                            object.nodeIpv4CidrSize = 0;
                            object.servicesIpv4Cidr = "";
                            object.currentNodeCount = 0;
                            object.expireTime = "";
                            object.location = "";
                            object.enableTpu = false;
                            object.tpuIpv4CidrBlock = "";
                            object.autopilot = null;
                            object.id = "";
                            object.loggingConfig = null;
                            object.monitoringConfig = null;
                            object.nodePoolAutoConfig = null;
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.description != null && message.hasOwnProperty("description"))
                            object.description = message.description;
                        if (message.initialNodeCount != null && message.hasOwnProperty("initialNodeCount"))
                            object.initialNodeCount = message.initialNodeCount;
                        if (message.nodeConfig != null && message.hasOwnProperty("nodeConfig"))
                            object.nodeConfig = $root.google.container.v1.NodeConfig.toObject(message.nodeConfig, options);
                        if (message.masterAuth != null && message.hasOwnProperty("masterAuth"))
                            object.masterAuth = $root.google.container.v1.MasterAuth.toObject(message.masterAuth, options);
                        if (message.loggingService != null && message.hasOwnProperty("loggingService"))
                            object.loggingService = message.loggingService;
                        if (message.monitoringService != null && message.hasOwnProperty("monitoringService"))
                            object.monitoringService = message.monitoringService;
                        if (message.network != null && message.hasOwnProperty("network"))
                            object.network = message.network;
                        if (message.clusterIpv4Cidr != null && message.hasOwnProperty("clusterIpv4Cidr"))
                            object.clusterIpv4Cidr = message.clusterIpv4Cidr;
                        if (message.addonsConfig != null && message.hasOwnProperty("addonsConfig"))
                            object.addonsConfig = $root.google.container.v1.AddonsConfig.toObject(message.addonsConfig, options);
                        if (message.subnetwork != null && message.hasOwnProperty("subnetwork"))
                            object.subnetwork = message.subnetwork;
                        if (message.nodePools && message.nodePools.length) {
                            object.nodePools = [];
                            for (var j = 0; j < message.nodePools.length; ++j)
                                object.nodePools[j] = $root.google.container.v1.NodePool.toObject(message.nodePools[j], options);
                        }
                        if (message.locations && message.locations.length) {
                            object.locations = [];
                            for (var j = 0; j < message.locations.length; ++j)
                                object.locations[j] = message.locations[j];
                        }
                        if (message.enableKubernetesAlpha != null && message.hasOwnProperty("enableKubernetesAlpha"))
                            object.enableKubernetesAlpha = message.enableKubernetesAlpha;
                        var keys2;
                        if (message.resourceLabels && (keys2 = Object.keys(message.resourceLabels)).length) {
                            object.resourceLabels = {};
                            for (var j = 0; j < keys2.length; ++j)
                                object.resourceLabels[keys2[j]] = message.resourceLabels[keys2[j]];
                        }
                        if (message.labelFingerprint != null && message.hasOwnProperty("labelFingerprint"))
                            object.labelFingerprint = message.labelFingerprint;
                        if (message.legacyAbac != null && message.hasOwnProperty("legacyAbac"))
                            object.legacyAbac = $root.google.container.v1.LegacyAbac.toObject(message.legacyAbac, options);
                        if (message.networkPolicy != null && message.hasOwnProperty("networkPolicy"))
                            object.networkPolicy = $root.google.container.v1.NetworkPolicy.toObject(message.networkPolicy, options);
                        if (message.ipAllocationPolicy != null && message.hasOwnProperty("ipAllocationPolicy"))
                            object.ipAllocationPolicy = $root.google.container.v1.IPAllocationPolicy.toObject(message.ipAllocationPolicy, options);
                        if (message.masterAuthorizedNetworksConfig != null && message.hasOwnProperty("masterAuthorizedNetworksConfig"))
                            object.masterAuthorizedNetworksConfig = $root.google.container.v1.MasterAuthorizedNetworksConfig.toObject(message.masterAuthorizedNetworksConfig, options);
                        if (message.maintenancePolicy != null && message.hasOwnProperty("maintenancePolicy"))
                            object.maintenancePolicy = $root.google.container.v1.MaintenancePolicy.toObject(message.maintenancePolicy, options);
                        if (message.binaryAuthorization != null && message.hasOwnProperty("binaryAuthorization"))
                            object.binaryAuthorization = $root.google.container.v1.BinaryAuthorization.toObject(message.binaryAuthorization, options);
                        if (message.autoscaling != null && message.hasOwnProperty("autoscaling"))
                            object.autoscaling = $root.google.container.v1.ClusterAutoscaling.toObject(message.autoscaling, options);
                        if (message.networkConfig != null && message.hasOwnProperty("networkConfig"))
                            object.networkConfig = $root.google.container.v1.NetworkConfig.toObject(message.networkConfig, options);
                        if (message.defaultMaxPodsConstraint != null && message.hasOwnProperty("defaultMaxPodsConstraint"))
                            object.defaultMaxPodsConstraint = $root.google.container.v1.MaxPodsConstraint.toObject(message.defaultMaxPodsConstraint, options);
                        if (message.resourceUsageExportConfig != null && message.hasOwnProperty("resourceUsageExportConfig"))
                            object.resourceUsageExportConfig = $root.google.container.v1.ResourceUsageExportConfig.toObject(message.resourceUsageExportConfig, options);
                        if (message.authenticatorGroupsConfig != null && message.hasOwnProperty("authenticatorGroupsConfig"))
                            object.authenticatorGroupsConfig = $root.google.container.v1.AuthenticatorGroupsConfig.toObject(message.authenticatorGroupsConfig, options);
                        if (message.privateClusterConfig != null && message.hasOwnProperty("privateClusterConfig"))
                            object.privateClusterConfig = $root.google.container.v1.PrivateClusterConfig.toObject(message.privateClusterConfig, options);
                        if (message.databaseEncryption != null && message.hasOwnProperty("databaseEncryption"))
                            object.databaseEncryption = $root.google.container.v1.DatabaseEncryption.toObject(message.databaseEncryption, options);
                        if (message.verticalPodAutoscaling != null && message.hasOwnProperty("verticalPodAutoscaling"))
                            object.verticalPodAutoscaling = $root.google.container.v1.VerticalPodAutoscaling.toObject(message.verticalPodAutoscaling, options);
                        if (message.shieldedNodes != null && message.hasOwnProperty("shieldedNodes"))
                            object.shieldedNodes = $root.google.container.v1.ShieldedNodes.toObject(message.shieldedNodes, options);
                        if (message.releaseChannel != null && message.hasOwnProperty("releaseChannel"))
                            object.releaseChannel = $root.google.container.v1.ReleaseChannel.toObject(message.releaseChannel, options);
                        if (message.workloadIdentityConfig != null && message.hasOwnProperty("workloadIdentityConfig"))
                            object.workloadIdentityConfig = $root.google.container.v1.WorkloadIdentityConfig.toObject(message.workloadIdentityConfig, options);
                        if (message.costManagementConfig != null && message.hasOwnProperty("costManagementConfig"))
                            object.costManagementConfig = $root.google.container.v1.CostManagementConfig.toObject(message.costManagementConfig, options);
                        if (message.notificationConfig != null && message.hasOwnProperty("notificationConfig"))
                            object.notificationConfig = $root.google.container.v1.NotificationConfig.toObject(message.notificationConfig, options);
                        if (message.confidentialNodes != null && message.hasOwnProperty("confidentialNodes"))
                            object.confidentialNodes = $root.google.container.v1.ConfidentialNodes.toObject(message.confidentialNodes, options);
                        if (message.identityServiceConfig != null && message.hasOwnProperty("identityServiceConfig"))
                            object.identityServiceConfig = $root.google.container.v1.IdentityServiceConfig.toObject(message.identityServiceConfig, options);
                        if (message.meshCertificates != null && message.hasOwnProperty("meshCertificates"))
                            object.meshCertificates = $root.google.container.v1.MeshCertificates.toObject(message.meshCertificates, options);
                        if (message.selfLink != null && message.hasOwnProperty("selfLink"))
                            object.selfLink = message.selfLink;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.endpoint != null && message.hasOwnProperty("endpoint"))
                            object.endpoint = message.endpoint;
                        if (message.initialClusterVersion != null && message.hasOwnProperty("initialClusterVersion"))
                            object.initialClusterVersion = message.initialClusterVersion;
                        if (message.currentMasterVersion != null && message.hasOwnProperty("currentMasterVersion"))
                            object.currentMasterVersion = message.currentMasterVersion;
                        if (message.currentNodeVersion != null && message.hasOwnProperty("currentNodeVersion"))
                            object.currentNodeVersion = message.currentNodeVersion;
                        if (message.createTime != null && message.hasOwnProperty("createTime"))
                            object.createTime = message.createTime;
                        if (message.status != null && message.hasOwnProperty("status"))
                            object.status = options.enums === String ? $root.google.container.v1.Cluster.Status[message.status] === undefined ? message.status : $root.google.container.v1.Cluster.Status[message.status] : message.status;
                        if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                            object.statusMessage = message.statusMessage;
                        if (message.nodeIpv4CidrSize != null && message.hasOwnProperty("nodeIpv4CidrSize"))
                            object.nodeIpv4CidrSize = message.nodeIpv4CidrSize;
                        if (message.servicesIpv4Cidr != null && message.hasOwnProperty("servicesIpv4Cidr"))
                            object.servicesIpv4Cidr = message.servicesIpv4Cidr;
                        if (message.instanceGroupUrls && message.instanceGroupUrls.length) {
                            object.instanceGroupUrls = [];
                            for (var j = 0; j < message.instanceGroupUrls.length; ++j)
                                object.instanceGroupUrls[j] = message.instanceGroupUrls[j];
                        }
                        if (message.currentNodeCount != null && message.hasOwnProperty("currentNodeCount"))
                            object.currentNodeCount = message.currentNodeCount;
                        if (message.expireTime != null && message.hasOwnProperty("expireTime"))
                            object.expireTime = message.expireTime;
                        if (message.location != null && message.hasOwnProperty("location"))
                            object.location = message.location;
                        if (message.enableTpu != null && message.hasOwnProperty("enableTpu"))
                            object.enableTpu = message.enableTpu;
                        if (message.tpuIpv4CidrBlock != null && message.hasOwnProperty("tpuIpv4CidrBlock"))
                            object.tpuIpv4CidrBlock = message.tpuIpv4CidrBlock;
                        if (message.conditions && message.conditions.length) {
                            object.conditions = [];
                            for (var j = 0; j < message.conditions.length; ++j)
                                object.conditions[j] = $root.google.container.v1.StatusCondition.toObject(message.conditions[j], options);
                        }
                        if (message.autopilot != null && message.hasOwnProperty("autopilot"))
                            object.autopilot = $root.google.container.v1.Autopilot.toObject(message.autopilot, options);
                        if (message.id != null && message.hasOwnProperty("id"))
                            object.id = message.id;
                        if (message.nodePoolDefaults != null && message.hasOwnProperty("nodePoolDefaults")) {
                            object.nodePoolDefaults = $root.google.container.v1.NodePoolDefaults.toObject(message.nodePoolDefaults, options);
                            if (options.oneofs)
                                object._nodePoolDefaults = "nodePoolDefaults";
                        }
                        if (message.loggingConfig != null && message.hasOwnProperty("loggingConfig"))
                            object.loggingConfig = $root.google.container.v1.LoggingConfig.toObject(message.loggingConfig, options);
                        if (message.monitoringConfig != null && message.hasOwnProperty("monitoringConfig"))
                            object.monitoringConfig = $root.google.container.v1.MonitoringConfig.toObject(message.monitoringConfig, options);
                        if (message.nodePoolAutoConfig != null && message.hasOwnProperty("nodePoolAutoConfig"))
                            object.nodePoolAutoConfig = $root.google.container.v1.NodePoolAutoConfig.toObject(message.nodePoolAutoConfig, options);
                        return object;
                    };
    
                    /**
                     * Converts this Cluster to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.Cluster
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Cluster.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Cluster
                     * @function getTypeUrl
                     * @memberof google.container.v1.Cluster
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Cluster.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.Cluster";
                    };
    
                    /**
                     * Status enum.
                     * @name google.container.v1.Cluster.Status
                     * @enum {number}
                     * @property {number} STATUS_UNSPECIFIED=0 STATUS_UNSPECIFIED value
                     * @property {number} PROVISIONING=1 PROVISIONING value
                     * @property {number} RUNNING=2 RUNNING value
                     * @property {number} RECONCILING=3 RECONCILING value
                     * @property {number} STOPPING=4 STOPPING value
                     * @property {number} ERROR=5 ERROR value
                     * @property {number} DEGRADED=6 DEGRADED value
                     */
                    Cluster.Status = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "STATUS_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "PROVISIONING"] = 1;
                        values[valuesById[2] = "RUNNING"] = 2;
                        values[valuesById[3] = "RECONCILING"] = 3;
                        values[valuesById[4] = "STOPPING"] = 4;
                        values[valuesById[5] = "ERROR"] = 5;
                        values[valuesById[6] = "DEGRADED"] = 6;
                        return values;
                    })();
    
                    return Cluster;
                })();
    
                v1.NodePoolAutoConfig = (function() {
    
                    /**
                     * Properties of a NodePoolAutoConfig.
                     * @memberof google.container.v1
                     * @interface INodePoolAutoConfig
                     * @property {google.container.v1.INetworkTags|null} [networkTags] NodePoolAutoConfig networkTags
                     */
    
                    /**
                     * Constructs a new NodePoolAutoConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a NodePoolAutoConfig.
                     * @implements INodePoolAutoConfig
                     * @constructor
                     * @param {google.container.v1.INodePoolAutoConfig=} [properties] Properties to set
                     */
                    function NodePoolAutoConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NodePoolAutoConfig networkTags.
                     * @member {google.container.v1.INetworkTags|null|undefined} networkTags
                     * @memberof google.container.v1.NodePoolAutoConfig
                     * @instance
                     */
                    NodePoolAutoConfig.prototype.networkTags = null;
    
                    /**
                     * Creates a new NodePoolAutoConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.NodePoolAutoConfig
                     * @static
                     * @param {google.container.v1.INodePoolAutoConfig=} [properties] Properties to set
                     * @returns {google.container.v1.NodePoolAutoConfig} NodePoolAutoConfig instance
                     */
                    NodePoolAutoConfig.create = function create(properties) {
                        return new NodePoolAutoConfig(properties);
                    };
    
                    /**
                     * Encodes the specified NodePoolAutoConfig message. Does not implicitly {@link google.container.v1.NodePoolAutoConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.NodePoolAutoConfig
                     * @static
                     * @param {google.container.v1.INodePoolAutoConfig} message NodePoolAutoConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NodePoolAutoConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.networkTags != null && Object.hasOwnProperty.call(message, "networkTags"))
                            $root.google.container.v1.NetworkTags.encode(message.networkTags, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NodePoolAutoConfig message, length delimited. Does not implicitly {@link google.container.v1.NodePoolAutoConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.NodePoolAutoConfig
                     * @static
                     * @param {google.container.v1.INodePoolAutoConfig} message NodePoolAutoConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NodePoolAutoConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NodePoolAutoConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.NodePoolAutoConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.NodePoolAutoConfig} NodePoolAutoConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NodePoolAutoConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.NodePoolAutoConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.networkTags = $root.google.container.v1.NetworkTags.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a NodePoolAutoConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.NodePoolAutoConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.NodePoolAutoConfig} NodePoolAutoConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NodePoolAutoConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NodePoolAutoConfig message.
                     * @function verify
                     * @memberof google.container.v1.NodePoolAutoConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NodePoolAutoConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.networkTags != null && message.hasOwnProperty("networkTags")) {
                            var error = $root.google.container.v1.NetworkTags.verify(message.networkTags);
                            if (error)
                                return "networkTags." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a NodePoolAutoConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.NodePoolAutoConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.NodePoolAutoConfig} NodePoolAutoConfig
                     */
                    NodePoolAutoConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.NodePoolAutoConfig)
                            return object;
                        var message = new $root.google.container.v1.NodePoolAutoConfig();
                        if (object.networkTags != null) {
                            if (typeof object.networkTags !== "object")
                                throw TypeError(".google.container.v1.NodePoolAutoConfig.networkTags: object expected");
                            message.networkTags = $root.google.container.v1.NetworkTags.fromObject(object.networkTags);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NodePoolAutoConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.NodePoolAutoConfig
                     * @static
                     * @param {google.container.v1.NodePoolAutoConfig} message NodePoolAutoConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NodePoolAutoConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.networkTags = null;
                        if (message.networkTags != null && message.hasOwnProperty("networkTags"))
                            object.networkTags = $root.google.container.v1.NetworkTags.toObject(message.networkTags, options);
                        return object;
                    };
    
                    /**
                     * Converts this NodePoolAutoConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.NodePoolAutoConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NodePoolAutoConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NodePoolAutoConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.NodePoolAutoConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NodePoolAutoConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.NodePoolAutoConfig";
                    };
    
                    return NodePoolAutoConfig;
                })();
    
                v1.NodePoolDefaults = (function() {
    
                    /**
                     * Properties of a NodePoolDefaults.
                     * @memberof google.container.v1
                     * @interface INodePoolDefaults
                     * @property {google.container.v1.INodeConfigDefaults|null} [nodeConfigDefaults] NodePoolDefaults nodeConfigDefaults
                     */
    
                    /**
                     * Constructs a new NodePoolDefaults.
                     * @memberof google.container.v1
                     * @classdesc Represents a NodePoolDefaults.
                     * @implements INodePoolDefaults
                     * @constructor
                     * @param {google.container.v1.INodePoolDefaults=} [properties] Properties to set
                     */
                    function NodePoolDefaults(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NodePoolDefaults nodeConfigDefaults.
                     * @member {google.container.v1.INodeConfigDefaults|null|undefined} nodeConfigDefaults
                     * @memberof google.container.v1.NodePoolDefaults
                     * @instance
                     */
                    NodePoolDefaults.prototype.nodeConfigDefaults = null;
    
                    /**
                     * Creates a new NodePoolDefaults instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.NodePoolDefaults
                     * @static
                     * @param {google.container.v1.INodePoolDefaults=} [properties] Properties to set
                     * @returns {google.container.v1.NodePoolDefaults} NodePoolDefaults instance
                     */
                    NodePoolDefaults.create = function create(properties) {
                        return new NodePoolDefaults(properties);
                    };
    
                    /**
                     * Encodes the specified NodePoolDefaults message. Does not implicitly {@link google.container.v1.NodePoolDefaults.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.NodePoolDefaults
                     * @static
                     * @param {google.container.v1.INodePoolDefaults} message NodePoolDefaults message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NodePoolDefaults.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.nodeConfigDefaults != null && Object.hasOwnProperty.call(message, "nodeConfigDefaults"))
                            $root.google.container.v1.NodeConfigDefaults.encode(message.nodeConfigDefaults, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NodePoolDefaults message, length delimited. Does not implicitly {@link google.container.v1.NodePoolDefaults.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.NodePoolDefaults
                     * @static
                     * @param {google.container.v1.INodePoolDefaults} message NodePoolDefaults message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NodePoolDefaults.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NodePoolDefaults message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.NodePoolDefaults
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.NodePoolDefaults} NodePoolDefaults
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NodePoolDefaults.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.NodePoolDefaults();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.nodeConfigDefaults = $root.google.container.v1.NodeConfigDefaults.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a NodePoolDefaults message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.NodePoolDefaults
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.NodePoolDefaults} NodePoolDefaults
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NodePoolDefaults.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NodePoolDefaults message.
                     * @function verify
                     * @memberof google.container.v1.NodePoolDefaults
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NodePoolDefaults.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.nodeConfigDefaults != null && message.hasOwnProperty("nodeConfigDefaults")) {
                            var error = $root.google.container.v1.NodeConfigDefaults.verify(message.nodeConfigDefaults);
                            if (error)
                                return "nodeConfigDefaults." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a NodePoolDefaults message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.NodePoolDefaults
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.NodePoolDefaults} NodePoolDefaults
                     */
                    NodePoolDefaults.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.NodePoolDefaults)
                            return object;
                        var message = new $root.google.container.v1.NodePoolDefaults();
                        if (object.nodeConfigDefaults != null) {
                            if (typeof object.nodeConfigDefaults !== "object")
                                throw TypeError(".google.container.v1.NodePoolDefaults.nodeConfigDefaults: object expected");
                            message.nodeConfigDefaults = $root.google.container.v1.NodeConfigDefaults.fromObject(object.nodeConfigDefaults);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NodePoolDefaults message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.NodePoolDefaults
                     * @static
                     * @param {google.container.v1.NodePoolDefaults} message NodePoolDefaults
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NodePoolDefaults.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.nodeConfigDefaults = null;
                        if (message.nodeConfigDefaults != null && message.hasOwnProperty("nodeConfigDefaults"))
                            object.nodeConfigDefaults = $root.google.container.v1.NodeConfigDefaults.toObject(message.nodeConfigDefaults, options);
                        return object;
                    };
    
                    /**
                     * Converts this NodePoolDefaults to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.NodePoolDefaults
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NodePoolDefaults.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NodePoolDefaults
                     * @function getTypeUrl
                     * @memberof google.container.v1.NodePoolDefaults
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NodePoolDefaults.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.NodePoolDefaults";
                    };
    
                    return NodePoolDefaults;
                })();
    
                v1.NodeConfigDefaults = (function() {
    
                    /**
                     * Properties of a NodeConfigDefaults.
                     * @memberof google.container.v1
                     * @interface INodeConfigDefaults
                     * @property {google.container.v1.IGcfsConfig|null} [gcfsConfig] NodeConfigDefaults gcfsConfig
                     * @property {google.container.v1.INodePoolLoggingConfig|null} [loggingConfig] NodeConfigDefaults loggingConfig
                     */
    
                    /**
                     * Constructs a new NodeConfigDefaults.
                     * @memberof google.container.v1
                     * @classdesc Represents a NodeConfigDefaults.
                     * @implements INodeConfigDefaults
                     * @constructor
                     * @param {google.container.v1.INodeConfigDefaults=} [properties] Properties to set
                     */
                    function NodeConfigDefaults(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NodeConfigDefaults gcfsConfig.
                     * @member {google.container.v1.IGcfsConfig|null|undefined} gcfsConfig
                     * @memberof google.container.v1.NodeConfigDefaults
                     * @instance
                     */
                    NodeConfigDefaults.prototype.gcfsConfig = null;
    
                    /**
                     * NodeConfigDefaults loggingConfig.
                     * @member {google.container.v1.INodePoolLoggingConfig|null|undefined} loggingConfig
                     * @memberof google.container.v1.NodeConfigDefaults
                     * @instance
                     */
                    NodeConfigDefaults.prototype.loggingConfig = null;
    
                    /**
                     * Creates a new NodeConfigDefaults instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.NodeConfigDefaults
                     * @static
                     * @param {google.container.v1.INodeConfigDefaults=} [properties] Properties to set
                     * @returns {google.container.v1.NodeConfigDefaults} NodeConfigDefaults instance
                     */
                    NodeConfigDefaults.create = function create(properties) {
                        return new NodeConfigDefaults(properties);
                    };
    
                    /**
                     * Encodes the specified NodeConfigDefaults message. Does not implicitly {@link google.container.v1.NodeConfigDefaults.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.NodeConfigDefaults
                     * @static
                     * @param {google.container.v1.INodeConfigDefaults} message NodeConfigDefaults message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NodeConfigDefaults.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.gcfsConfig != null && Object.hasOwnProperty.call(message, "gcfsConfig"))
                            $root.google.container.v1.GcfsConfig.encode(message.gcfsConfig, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.loggingConfig != null && Object.hasOwnProperty.call(message, "loggingConfig"))
                            $root.google.container.v1.NodePoolLoggingConfig.encode(message.loggingConfig, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NodeConfigDefaults message, length delimited. Does not implicitly {@link google.container.v1.NodeConfigDefaults.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.NodeConfigDefaults
                     * @static
                     * @param {google.container.v1.INodeConfigDefaults} message NodeConfigDefaults message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NodeConfigDefaults.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NodeConfigDefaults message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.NodeConfigDefaults
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.NodeConfigDefaults} NodeConfigDefaults
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NodeConfigDefaults.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.NodeConfigDefaults();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.gcfsConfig = $root.google.container.v1.GcfsConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.loggingConfig = $root.google.container.v1.NodePoolLoggingConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a NodeConfigDefaults message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.NodeConfigDefaults
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.NodeConfigDefaults} NodeConfigDefaults
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NodeConfigDefaults.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NodeConfigDefaults message.
                     * @function verify
                     * @memberof google.container.v1.NodeConfigDefaults
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NodeConfigDefaults.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.gcfsConfig != null && message.hasOwnProperty("gcfsConfig")) {
                            var error = $root.google.container.v1.GcfsConfig.verify(message.gcfsConfig);
                            if (error)
                                return "gcfsConfig." + error;
                        }
                        if (message.loggingConfig != null && message.hasOwnProperty("loggingConfig")) {
                            var error = $root.google.container.v1.NodePoolLoggingConfig.verify(message.loggingConfig);
                            if (error)
                                return "loggingConfig." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a NodeConfigDefaults message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.NodeConfigDefaults
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.NodeConfigDefaults} NodeConfigDefaults
                     */
                    NodeConfigDefaults.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.NodeConfigDefaults)
                            return object;
                        var message = new $root.google.container.v1.NodeConfigDefaults();
                        if (object.gcfsConfig != null) {
                            if (typeof object.gcfsConfig !== "object")
                                throw TypeError(".google.container.v1.NodeConfigDefaults.gcfsConfig: object expected");
                            message.gcfsConfig = $root.google.container.v1.GcfsConfig.fromObject(object.gcfsConfig);
                        }
                        if (object.loggingConfig != null) {
                            if (typeof object.loggingConfig !== "object")
                                throw TypeError(".google.container.v1.NodeConfigDefaults.loggingConfig: object expected");
                            message.loggingConfig = $root.google.container.v1.NodePoolLoggingConfig.fromObject(object.loggingConfig);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NodeConfigDefaults message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.NodeConfigDefaults
                     * @static
                     * @param {google.container.v1.NodeConfigDefaults} message NodeConfigDefaults
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NodeConfigDefaults.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.gcfsConfig = null;
                            object.loggingConfig = null;
                        }
                        if (message.gcfsConfig != null && message.hasOwnProperty("gcfsConfig"))
                            object.gcfsConfig = $root.google.container.v1.GcfsConfig.toObject(message.gcfsConfig, options);
                        if (message.loggingConfig != null && message.hasOwnProperty("loggingConfig"))
                            object.loggingConfig = $root.google.container.v1.NodePoolLoggingConfig.toObject(message.loggingConfig, options);
                        return object;
                    };
    
                    /**
                     * Converts this NodeConfigDefaults to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.NodeConfigDefaults
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NodeConfigDefaults.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NodeConfigDefaults
                     * @function getTypeUrl
                     * @memberof google.container.v1.NodeConfigDefaults
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NodeConfigDefaults.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.NodeConfigDefaults";
                    };
    
                    return NodeConfigDefaults;
                })();
    
                v1.ClusterUpdate = (function() {
    
                    /**
                     * Properties of a ClusterUpdate.
                     * @memberof google.container.v1
                     * @interface IClusterUpdate
                     * @property {string|null} [desiredNodeVersion] ClusterUpdate desiredNodeVersion
                     * @property {string|null} [desiredMonitoringService] ClusterUpdate desiredMonitoringService
                     * @property {google.container.v1.IAddonsConfig|null} [desiredAddonsConfig] ClusterUpdate desiredAddonsConfig
                     * @property {string|null} [desiredNodePoolId] ClusterUpdate desiredNodePoolId
                     * @property {string|null} [desiredImageType] ClusterUpdate desiredImageType
                     * @property {google.container.v1.IDatabaseEncryption|null} [desiredDatabaseEncryption] ClusterUpdate desiredDatabaseEncryption
                     * @property {google.container.v1.IWorkloadIdentityConfig|null} [desiredWorkloadIdentityConfig] ClusterUpdate desiredWorkloadIdentityConfig
                     * @property {google.container.v1.IMeshCertificates|null} [desiredMeshCertificates] ClusterUpdate desiredMeshCertificates
                     * @property {google.container.v1.IShieldedNodes|null} [desiredShieldedNodes] ClusterUpdate desiredShieldedNodes
                     * @property {google.container.v1.ICostManagementConfig|null} [desiredCostManagementConfig] ClusterUpdate desiredCostManagementConfig
                     * @property {google.container.v1.IDNSConfig|null} [desiredDnsConfig] ClusterUpdate desiredDnsConfig
                     * @property {google.container.v1.INodePoolAutoscaling|null} [desiredNodePoolAutoscaling] ClusterUpdate desiredNodePoolAutoscaling
                     * @property {Array.<string>|null} [desiredLocations] ClusterUpdate desiredLocations
                     * @property {google.container.v1.IMasterAuthorizedNetworksConfig|null} [desiredMasterAuthorizedNetworksConfig] ClusterUpdate desiredMasterAuthorizedNetworksConfig
                     * @property {google.container.v1.IClusterAutoscaling|null} [desiredClusterAutoscaling] ClusterUpdate desiredClusterAutoscaling
                     * @property {google.container.v1.IBinaryAuthorization|null} [desiredBinaryAuthorization] ClusterUpdate desiredBinaryAuthorization
                     * @property {string|null} [desiredLoggingService] ClusterUpdate desiredLoggingService
                     * @property {google.container.v1.IResourceUsageExportConfig|null} [desiredResourceUsageExportConfig] ClusterUpdate desiredResourceUsageExportConfig
                     * @property {google.container.v1.IVerticalPodAutoscaling|null} [desiredVerticalPodAutoscaling] ClusterUpdate desiredVerticalPodAutoscaling
                     * @property {google.container.v1.IPrivateClusterConfig|null} [desiredPrivateClusterConfig] ClusterUpdate desiredPrivateClusterConfig
                     * @property {google.container.v1.IIntraNodeVisibilityConfig|null} [desiredIntraNodeVisibilityConfig] ClusterUpdate desiredIntraNodeVisibilityConfig
                     * @property {google.container.v1.IDefaultSnatStatus|null} [desiredDefaultSnatStatus] ClusterUpdate desiredDefaultSnatStatus
                     * @property {google.container.v1.IReleaseChannel|null} [desiredReleaseChannel] ClusterUpdate desiredReleaseChannel
                     * @property {google.container.v1.IILBSubsettingConfig|null} [desiredL4ilbSubsettingConfig] ClusterUpdate desiredL4ilbSubsettingConfig
                     * @property {google.container.v1.DatapathProvider|null} [desiredDatapathProvider] ClusterUpdate desiredDatapathProvider
                     * @property {google.container.v1.PrivateIPv6GoogleAccess|null} [desiredPrivateIpv6GoogleAccess] ClusterUpdate desiredPrivateIpv6GoogleAccess
                     * @property {google.container.v1.INotificationConfig|null} [desiredNotificationConfig] ClusterUpdate desiredNotificationConfig
                     * @property {google.container.v1.IAuthenticatorGroupsConfig|null} [desiredAuthenticatorGroupsConfig] ClusterUpdate desiredAuthenticatorGroupsConfig
                     * @property {google.container.v1.ILoggingConfig|null} [desiredLoggingConfig] ClusterUpdate desiredLoggingConfig
                     * @property {google.container.v1.IMonitoringConfig|null} [desiredMonitoringConfig] ClusterUpdate desiredMonitoringConfig
                     * @property {google.container.v1.IIdentityServiceConfig|null} [desiredIdentityServiceConfig] ClusterUpdate desiredIdentityServiceConfig
                     * @property {google.container.v1.IServiceExternalIPsConfig|null} [desiredServiceExternalIpsConfig] ClusterUpdate desiredServiceExternalIpsConfig
                     * @property {boolean|null} [desiredEnablePrivateEndpoint] ClusterUpdate desiredEnablePrivateEndpoint
                     * @property {string|null} [desiredMasterVersion] ClusterUpdate desiredMasterVersion
                     * @property {google.container.v1.IGcfsConfig|null} [desiredGcfsConfig] ClusterUpdate desiredGcfsConfig
                     * @property {google.container.v1.INetworkTags|null} [desiredNodePoolAutoConfigNetworkTags] ClusterUpdate desiredNodePoolAutoConfigNetworkTags
                     * @property {google.container.v1.IGatewayAPIConfig|null} [desiredGatewayApiConfig] ClusterUpdate desiredGatewayApiConfig
                     * @property {google.container.v1.INodePoolLoggingConfig|null} [desiredNodePoolLoggingConfig] ClusterUpdate desiredNodePoolLoggingConfig
                     */
    
                    /**
                     * Constructs a new ClusterUpdate.
                     * @memberof google.container.v1
                     * @classdesc Represents a ClusterUpdate.
                     * @implements IClusterUpdate
                     * @constructor
                     * @param {google.container.v1.IClusterUpdate=} [properties] Properties to set
                     */
                    function ClusterUpdate(properties) {
                        this.desiredLocations = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ClusterUpdate desiredNodeVersion.
                     * @member {string} desiredNodeVersion
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredNodeVersion = "";
    
                    /**
                     * ClusterUpdate desiredMonitoringService.
                     * @member {string} desiredMonitoringService
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredMonitoringService = "";
    
                    /**
                     * ClusterUpdate desiredAddonsConfig.
                     * @member {google.container.v1.IAddonsConfig|null|undefined} desiredAddonsConfig
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredAddonsConfig = null;
    
                    /**
                     * ClusterUpdate desiredNodePoolId.
                     * @member {string} desiredNodePoolId
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredNodePoolId = "";
    
                    /**
                     * ClusterUpdate desiredImageType.
                     * @member {string} desiredImageType
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredImageType = "";
    
                    /**
                     * ClusterUpdate desiredDatabaseEncryption.
                     * @member {google.container.v1.IDatabaseEncryption|null|undefined} desiredDatabaseEncryption
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredDatabaseEncryption = null;
    
                    /**
                     * ClusterUpdate desiredWorkloadIdentityConfig.
                     * @member {google.container.v1.IWorkloadIdentityConfig|null|undefined} desiredWorkloadIdentityConfig
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredWorkloadIdentityConfig = null;
    
                    /**
                     * ClusterUpdate desiredMeshCertificates.
                     * @member {google.container.v1.IMeshCertificates|null|undefined} desiredMeshCertificates
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredMeshCertificates = null;
    
                    /**
                     * ClusterUpdate desiredShieldedNodes.
                     * @member {google.container.v1.IShieldedNodes|null|undefined} desiredShieldedNodes
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredShieldedNodes = null;
    
                    /**
                     * ClusterUpdate desiredCostManagementConfig.
                     * @member {google.container.v1.ICostManagementConfig|null|undefined} desiredCostManagementConfig
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredCostManagementConfig = null;
    
                    /**
                     * ClusterUpdate desiredDnsConfig.
                     * @member {google.container.v1.IDNSConfig|null|undefined} desiredDnsConfig
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredDnsConfig = null;
    
                    /**
                     * ClusterUpdate desiredNodePoolAutoscaling.
                     * @member {google.container.v1.INodePoolAutoscaling|null|undefined} desiredNodePoolAutoscaling
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredNodePoolAutoscaling = null;
    
                    /**
                     * ClusterUpdate desiredLocations.
                     * @member {Array.<string>} desiredLocations
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredLocations = $util.emptyArray;
    
                    /**
                     * ClusterUpdate desiredMasterAuthorizedNetworksConfig.
                     * @member {google.container.v1.IMasterAuthorizedNetworksConfig|null|undefined} desiredMasterAuthorizedNetworksConfig
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredMasterAuthorizedNetworksConfig = null;
    
                    /**
                     * ClusterUpdate desiredClusterAutoscaling.
                     * @member {google.container.v1.IClusterAutoscaling|null|undefined} desiredClusterAutoscaling
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredClusterAutoscaling = null;
    
                    /**
                     * ClusterUpdate desiredBinaryAuthorization.
                     * @member {google.container.v1.IBinaryAuthorization|null|undefined} desiredBinaryAuthorization
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredBinaryAuthorization = null;
    
                    /**
                     * ClusterUpdate desiredLoggingService.
                     * @member {string} desiredLoggingService
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredLoggingService = "";
    
                    /**
                     * ClusterUpdate desiredResourceUsageExportConfig.
                     * @member {google.container.v1.IResourceUsageExportConfig|null|undefined} desiredResourceUsageExportConfig
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredResourceUsageExportConfig = null;
    
                    /**
                     * ClusterUpdate desiredVerticalPodAutoscaling.
                     * @member {google.container.v1.IVerticalPodAutoscaling|null|undefined} desiredVerticalPodAutoscaling
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredVerticalPodAutoscaling = null;
    
                    /**
                     * ClusterUpdate desiredPrivateClusterConfig.
                     * @member {google.container.v1.IPrivateClusterConfig|null|undefined} desiredPrivateClusterConfig
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredPrivateClusterConfig = null;
    
                    /**
                     * ClusterUpdate desiredIntraNodeVisibilityConfig.
                     * @member {google.container.v1.IIntraNodeVisibilityConfig|null|undefined} desiredIntraNodeVisibilityConfig
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredIntraNodeVisibilityConfig = null;
    
                    /**
                     * ClusterUpdate desiredDefaultSnatStatus.
                     * @member {google.container.v1.IDefaultSnatStatus|null|undefined} desiredDefaultSnatStatus
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredDefaultSnatStatus = null;
    
                    /**
                     * ClusterUpdate desiredReleaseChannel.
                     * @member {google.container.v1.IReleaseChannel|null|undefined} desiredReleaseChannel
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredReleaseChannel = null;
    
                    /**
                     * ClusterUpdate desiredL4ilbSubsettingConfig.
                     * @member {google.container.v1.IILBSubsettingConfig|null|undefined} desiredL4ilbSubsettingConfig
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredL4ilbSubsettingConfig = null;
    
                    /**
                     * ClusterUpdate desiredDatapathProvider.
                     * @member {google.container.v1.DatapathProvider} desiredDatapathProvider
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredDatapathProvider = 0;
    
                    /**
                     * ClusterUpdate desiredPrivateIpv6GoogleAccess.
                     * @member {google.container.v1.PrivateIPv6GoogleAccess} desiredPrivateIpv6GoogleAccess
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredPrivateIpv6GoogleAccess = 0;
    
                    /**
                     * ClusterUpdate desiredNotificationConfig.
                     * @member {google.container.v1.INotificationConfig|null|undefined} desiredNotificationConfig
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredNotificationConfig = null;
    
                    /**
                     * ClusterUpdate desiredAuthenticatorGroupsConfig.
                     * @member {google.container.v1.IAuthenticatorGroupsConfig|null|undefined} desiredAuthenticatorGroupsConfig
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredAuthenticatorGroupsConfig = null;
    
                    /**
                     * ClusterUpdate desiredLoggingConfig.
                     * @member {google.container.v1.ILoggingConfig|null|undefined} desiredLoggingConfig
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredLoggingConfig = null;
    
                    /**
                     * ClusterUpdate desiredMonitoringConfig.
                     * @member {google.container.v1.IMonitoringConfig|null|undefined} desiredMonitoringConfig
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredMonitoringConfig = null;
    
                    /**
                     * ClusterUpdate desiredIdentityServiceConfig.
                     * @member {google.container.v1.IIdentityServiceConfig|null|undefined} desiredIdentityServiceConfig
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredIdentityServiceConfig = null;
    
                    /**
                     * ClusterUpdate desiredServiceExternalIpsConfig.
                     * @member {google.container.v1.IServiceExternalIPsConfig|null|undefined} desiredServiceExternalIpsConfig
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredServiceExternalIpsConfig = null;
    
                    /**
                     * ClusterUpdate desiredEnablePrivateEndpoint.
                     * @member {boolean|null|undefined} desiredEnablePrivateEndpoint
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredEnablePrivateEndpoint = null;
    
                    /**
                     * ClusterUpdate desiredMasterVersion.
                     * @member {string} desiredMasterVersion
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredMasterVersion = "";
    
                    /**
                     * ClusterUpdate desiredGcfsConfig.
                     * @member {google.container.v1.IGcfsConfig|null|undefined} desiredGcfsConfig
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredGcfsConfig = null;
    
                    /**
                     * ClusterUpdate desiredNodePoolAutoConfigNetworkTags.
                     * @member {google.container.v1.INetworkTags|null|undefined} desiredNodePoolAutoConfigNetworkTags
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredNodePoolAutoConfigNetworkTags = null;
    
                    /**
                     * ClusterUpdate desiredGatewayApiConfig.
                     * @member {google.container.v1.IGatewayAPIConfig|null|undefined} desiredGatewayApiConfig
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredGatewayApiConfig = null;
    
                    /**
                     * ClusterUpdate desiredNodePoolLoggingConfig.
                     * @member {google.container.v1.INodePoolLoggingConfig|null|undefined} desiredNodePoolLoggingConfig
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    ClusterUpdate.prototype.desiredNodePoolLoggingConfig = null;
    
                    // OneOf field names bound to virtual getters and setters
                    var $oneOfFields;
    
                    /**
                     * ClusterUpdate _desiredEnablePrivateEndpoint.
                     * @member {"desiredEnablePrivateEndpoint"|undefined} _desiredEnablePrivateEndpoint
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     */
                    Object.defineProperty(ClusterUpdate.prototype, "_desiredEnablePrivateEndpoint", {
                        get: $util.oneOfGetter($oneOfFields = ["desiredEnablePrivateEndpoint"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });
    
                    /**
                     * Creates a new ClusterUpdate instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.ClusterUpdate
                     * @static
                     * @param {google.container.v1.IClusterUpdate=} [properties] Properties to set
                     * @returns {google.container.v1.ClusterUpdate} ClusterUpdate instance
                     */
                    ClusterUpdate.create = function create(properties) {
                        return new ClusterUpdate(properties);
                    };
    
                    /**
                     * Encodes the specified ClusterUpdate message. Does not implicitly {@link google.container.v1.ClusterUpdate.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.ClusterUpdate
                     * @static
                     * @param {google.container.v1.IClusterUpdate} message ClusterUpdate message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ClusterUpdate.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.desiredNodeVersion != null && Object.hasOwnProperty.call(message, "desiredNodeVersion"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.desiredNodeVersion);
                        if (message.desiredMonitoringService != null && Object.hasOwnProperty.call(message, "desiredMonitoringService"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.desiredMonitoringService);
                        if (message.desiredAddonsConfig != null && Object.hasOwnProperty.call(message, "desiredAddonsConfig"))
                            $root.google.container.v1.AddonsConfig.encode(message.desiredAddonsConfig, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                        if (message.desiredNodePoolId != null && Object.hasOwnProperty.call(message, "desiredNodePoolId"))
                            writer.uint32(/* id 7, wireType 2 =*/58).string(message.desiredNodePoolId);
                        if (message.desiredImageType != null && Object.hasOwnProperty.call(message, "desiredImageType"))
                            writer.uint32(/* id 8, wireType 2 =*/66).string(message.desiredImageType);
                        if (message.desiredNodePoolAutoscaling != null && Object.hasOwnProperty.call(message, "desiredNodePoolAutoscaling"))
                            $root.google.container.v1.NodePoolAutoscaling.encode(message.desiredNodePoolAutoscaling, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                        if (message.desiredLocations != null && message.desiredLocations.length)
                            for (var i = 0; i < message.desiredLocations.length; ++i)
                                writer.uint32(/* id 10, wireType 2 =*/82).string(message.desiredLocations[i]);
                        if (message.desiredMasterAuthorizedNetworksConfig != null && Object.hasOwnProperty.call(message, "desiredMasterAuthorizedNetworksConfig"))
                            $root.google.container.v1.MasterAuthorizedNetworksConfig.encode(message.desiredMasterAuthorizedNetworksConfig, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                        if (message.desiredClusterAutoscaling != null && Object.hasOwnProperty.call(message, "desiredClusterAutoscaling"))
                            $root.google.container.v1.ClusterAutoscaling.encode(message.desiredClusterAutoscaling, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                        if (message.desiredBinaryAuthorization != null && Object.hasOwnProperty.call(message, "desiredBinaryAuthorization"))
                            $root.google.container.v1.BinaryAuthorization.encode(message.desiredBinaryAuthorization, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();
                        if (message.desiredLoggingService != null && Object.hasOwnProperty.call(message, "desiredLoggingService"))
                            writer.uint32(/* id 19, wireType 2 =*/154).string(message.desiredLoggingService);
                        if (message.desiredResourceUsageExportConfig != null && Object.hasOwnProperty.call(message, "desiredResourceUsageExportConfig"))
                            $root.google.container.v1.ResourceUsageExportConfig.encode(message.desiredResourceUsageExportConfig, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                        if (message.desiredVerticalPodAutoscaling != null && Object.hasOwnProperty.call(message, "desiredVerticalPodAutoscaling"))
                            $root.google.container.v1.VerticalPodAutoscaling.encode(message.desiredVerticalPodAutoscaling, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
                        if (message.desiredPrivateClusterConfig != null && Object.hasOwnProperty.call(message, "desiredPrivateClusterConfig"))
                            $root.google.container.v1.PrivateClusterConfig.encode(message.desiredPrivateClusterConfig, writer.uint32(/* id 25, wireType 2 =*/202).fork()).ldelim();
                        if (message.desiredIntraNodeVisibilityConfig != null && Object.hasOwnProperty.call(message, "desiredIntraNodeVisibilityConfig"))
                            $root.google.container.v1.IntraNodeVisibilityConfig.encode(message.desiredIntraNodeVisibilityConfig, writer.uint32(/* id 26, wireType 2 =*/210).fork()).ldelim();
                        if (message.desiredDefaultSnatStatus != null && Object.hasOwnProperty.call(message, "desiredDefaultSnatStatus"))
                            $root.google.container.v1.DefaultSnatStatus.encode(message.desiredDefaultSnatStatus, writer.uint32(/* id 28, wireType 2 =*/226).fork()).ldelim();
                        if (message.desiredReleaseChannel != null && Object.hasOwnProperty.call(message, "desiredReleaseChannel"))
                            $root.google.container.v1.ReleaseChannel.encode(message.desiredReleaseChannel, writer.uint32(/* id 31, wireType 2 =*/250).fork()).ldelim();
                        if (message.desiredL4ilbSubsettingConfig != null && Object.hasOwnProperty.call(message, "desiredL4ilbSubsettingConfig"))
                            $root.google.container.v1.ILBSubsettingConfig.encode(message.desiredL4ilbSubsettingConfig, writer.uint32(/* id 39, wireType 2 =*/314).fork()).ldelim();
                        if (message.desiredDatabaseEncryption != null && Object.hasOwnProperty.call(message, "desiredDatabaseEncryption"))
                            $root.google.container.v1.DatabaseEncryption.encode(message.desiredDatabaseEncryption, writer.uint32(/* id 46, wireType 2 =*/370).fork()).ldelim();
                        if (message.desiredWorkloadIdentityConfig != null && Object.hasOwnProperty.call(message, "desiredWorkloadIdentityConfig"))
                            $root.google.container.v1.WorkloadIdentityConfig.encode(message.desiredWorkloadIdentityConfig, writer.uint32(/* id 47, wireType 2 =*/378).fork()).ldelim();
                        if (message.desiredShieldedNodes != null && Object.hasOwnProperty.call(message, "desiredShieldedNodes"))
                            $root.google.container.v1.ShieldedNodes.encode(message.desiredShieldedNodes, writer.uint32(/* id 48, wireType 2 =*/386).fork()).ldelim();
                        if (message.desiredCostManagementConfig != null && Object.hasOwnProperty.call(message, "desiredCostManagementConfig"))
                            $root.google.container.v1.CostManagementConfig.encode(message.desiredCostManagementConfig, writer.uint32(/* id 49, wireType 2 =*/394).fork()).ldelim();
                        if (message.desiredDatapathProvider != null && Object.hasOwnProperty.call(message, "desiredDatapathProvider"))
                            writer.uint32(/* id 50, wireType 0 =*/400).int32(message.desiredDatapathProvider);
                        if (message.desiredPrivateIpv6GoogleAccess != null && Object.hasOwnProperty.call(message, "desiredPrivateIpv6GoogleAccess"))
                            writer.uint32(/* id 51, wireType 0 =*/408).int32(message.desiredPrivateIpv6GoogleAccess);
                        if (message.desiredDnsConfig != null && Object.hasOwnProperty.call(message, "desiredDnsConfig"))
                            $root.google.container.v1.DNSConfig.encode(message.desiredDnsConfig, writer.uint32(/* id 53, wireType 2 =*/426).fork()).ldelim();
                        if (message.desiredNotificationConfig != null && Object.hasOwnProperty.call(message, "desiredNotificationConfig"))
                            $root.google.container.v1.NotificationConfig.encode(message.desiredNotificationConfig, writer.uint32(/* id 55, wireType 2 =*/442).fork()).ldelim();
                        if (message.desiredServiceExternalIpsConfig != null && Object.hasOwnProperty.call(message, "desiredServiceExternalIpsConfig"))
                            $root.google.container.v1.ServiceExternalIPsConfig.encode(message.desiredServiceExternalIpsConfig, writer.uint32(/* id 60, wireType 2 =*/482).fork()).ldelim();
                        if (message.desiredAuthenticatorGroupsConfig != null && Object.hasOwnProperty.call(message, "desiredAuthenticatorGroupsConfig"))
                            $root.google.container.v1.AuthenticatorGroupsConfig.encode(message.desiredAuthenticatorGroupsConfig, writer.uint32(/* id 63, wireType 2 =*/506).fork()).ldelim();
                        if (message.desiredLoggingConfig != null && Object.hasOwnProperty.call(message, "desiredLoggingConfig"))
                            $root.google.container.v1.LoggingConfig.encode(message.desiredLoggingConfig, writer.uint32(/* id 64, wireType 2 =*/514).fork()).ldelim();
                        if (message.desiredMonitoringConfig != null && Object.hasOwnProperty.call(message, "desiredMonitoringConfig"))
                            $root.google.container.v1.MonitoringConfig.encode(message.desiredMonitoringConfig, writer.uint32(/* id 65, wireType 2 =*/522).fork()).ldelim();
                        if (message.desiredIdentityServiceConfig != null && Object.hasOwnProperty.call(message, "desiredIdentityServiceConfig"))
                            $root.google.container.v1.IdentityServiceConfig.encode(message.desiredIdentityServiceConfig, writer.uint32(/* id 66, wireType 2 =*/530).fork()).ldelim();
                        if (message.desiredMeshCertificates != null && Object.hasOwnProperty.call(message, "desiredMeshCertificates"))
                            $root.google.container.v1.MeshCertificates.encode(message.desiredMeshCertificates, writer.uint32(/* id 67, wireType 2 =*/538).fork()).ldelim();
                        if (message.desiredEnablePrivateEndpoint != null && Object.hasOwnProperty.call(message, "desiredEnablePrivateEndpoint"))
                            writer.uint32(/* id 71, wireType 0 =*/568).bool(message.desiredEnablePrivateEndpoint);
                        if (message.desiredMasterVersion != null && Object.hasOwnProperty.call(message, "desiredMasterVersion"))
                            writer.uint32(/* id 100, wireType 2 =*/802).string(message.desiredMasterVersion);
                        if (message.desiredGcfsConfig != null && Object.hasOwnProperty.call(message, "desiredGcfsConfig"))
                            $root.google.container.v1.GcfsConfig.encode(message.desiredGcfsConfig, writer.uint32(/* id 109, wireType 2 =*/874).fork()).ldelim();
                        if (message.desiredNodePoolAutoConfigNetworkTags != null && Object.hasOwnProperty.call(message, "desiredNodePoolAutoConfigNetworkTags"))
                            $root.google.container.v1.NetworkTags.encode(message.desiredNodePoolAutoConfigNetworkTags, writer.uint32(/* id 110, wireType 2 =*/882).fork()).ldelim();
                        if (message.desiredGatewayApiConfig != null && Object.hasOwnProperty.call(message, "desiredGatewayApiConfig"))
                            $root.google.container.v1.GatewayAPIConfig.encode(message.desiredGatewayApiConfig, writer.uint32(/* id 114, wireType 2 =*/914).fork()).ldelim();
                        if (message.desiredNodePoolLoggingConfig != null && Object.hasOwnProperty.call(message, "desiredNodePoolLoggingConfig"))
                            $root.google.container.v1.NodePoolLoggingConfig.encode(message.desiredNodePoolLoggingConfig, writer.uint32(/* id 116, wireType 2 =*/930).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ClusterUpdate message, length delimited. Does not implicitly {@link google.container.v1.ClusterUpdate.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.ClusterUpdate
                     * @static
                     * @param {google.container.v1.IClusterUpdate} message ClusterUpdate message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ClusterUpdate.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ClusterUpdate message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.ClusterUpdate
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.ClusterUpdate} ClusterUpdate
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ClusterUpdate.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.ClusterUpdate();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 4: {
                                    message.desiredNodeVersion = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.desiredMonitoringService = reader.string();
                                    break;
                                }
                            case 6: {
                                    message.desiredAddonsConfig = $root.google.container.v1.AddonsConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 7: {
                                    message.desiredNodePoolId = reader.string();
                                    break;
                                }
                            case 8: {
                                    message.desiredImageType = reader.string();
                                    break;
                                }
                            case 46: {
                                    message.desiredDatabaseEncryption = $root.google.container.v1.DatabaseEncryption.decode(reader, reader.uint32());
                                    break;
                                }
                            case 47: {
                                    message.desiredWorkloadIdentityConfig = $root.google.container.v1.WorkloadIdentityConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 67: {
                                    message.desiredMeshCertificates = $root.google.container.v1.MeshCertificates.decode(reader, reader.uint32());
                                    break;
                                }
                            case 48: {
                                    message.desiredShieldedNodes = $root.google.container.v1.ShieldedNodes.decode(reader, reader.uint32());
                                    break;
                                }
                            case 49: {
                                    message.desiredCostManagementConfig = $root.google.container.v1.CostManagementConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 53: {
                                    message.desiredDnsConfig = $root.google.container.v1.DNSConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 9: {
                                    message.desiredNodePoolAutoscaling = $root.google.container.v1.NodePoolAutoscaling.decode(reader, reader.uint32());
                                    break;
                                }
                            case 10: {
                                    if (!(message.desiredLocations && message.desiredLocations.length))
                                        message.desiredLocations = [];
                                    message.desiredLocations.push(reader.string());
                                    break;
                                }
                            case 12: {
                                    message.desiredMasterAuthorizedNetworksConfig = $root.google.container.v1.MasterAuthorizedNetworksConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 15: {
                                    message.desiredClusterAutoscaling = $root.google.container.v1.ClusterAutoscaling.decode(reader, reader.uint32());
                                    break;
                                }
                            case 16: {
                                    message.desiredBinaryAuthorization = $root.google.container.v1.BinaryAuthorization.decode(reader, reader.uint32());
                                    break;
                                }
                            case 19: {
                                    message.desiredLoggingService = reader.string();
                                    break;
                                }
                            case 21: {
                                    message.desiredResourceUsageExportConfig = $root.google.container.v1.ResourceUsageExportConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 22: {
                                    message.desiredVerticalPodAutoscaling = $root.google.container.v1.VerticalPodAutoscaling.decode(reader, reader.uint32());
                                    break;
                                }
                            case 25: {
                                    message.desiredPrivateClusterConfig = $root.google.container.v1.PrivateClusterConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 26: {
                                    message.desiredIntraNodeVisibilityConfig = $root.google.container.v1.IntraNodeVisibilityConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 28: {
                                    message.desiredDefaultSnatStatus = $root.google.container.v1.DefaultSnatStatus.decode(reader, reader.uint32());
                                    break;
                                }
                            case 31: {
                                    message.desiredReleaseChannel = $root.google.container.v1.ReleaseChannel.decode(reader, reader.uint32());
                                    break;
                                }
                            case 39: {
                                    message.desiredL4ilbSubsettingConfig = $root.google.container.v1.ILBSubsettingConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 50: {
                                    message.desiredDatapathProvider = reader.int32();
                                    break;
                                }
                            case 51: {
                                    message.desiredPrivateIpv6GoogleAccess = reader.int32();
                                    break;
                                }
                            case 55: {
                                    message.desiredNotificationConfig = $root.google.container.v1.NotificationConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 63: {
                                    message.desiredAuthenticatorGroupsConfig = $root.google.container.v1.AuthenticatorGroupsConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 64: {
                                    message.desiredLoggingConfig = $root.google.container.v1.LoggingConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 65: {
                                    message.desiredMonitoringConfig = $root.google.container.v1.MonitoringConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 66: {
                                    message.desiredIdentityServiceConfig = $root.google.container.v1.IdentityServiceConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 60: {
                                    message.desiredServiceExternalIpsConfig = $root.google.container.v1.ServiceExternalIPsConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 71: {
                                    message.desiredEnablePrivateEndpoint = reader.bool();
                                    break;
                                }
                            case 100: {
                                    message.desiredMasterVersion = reader.string();
                                    break;
                                }
                            case 109: {
                                    message.desiredGcfsConfig = $root.google.container.v1.GcfsConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 110: {
                                    message.desiredNodePoolAutoConfigNetworkTags = $root.google.container.v1.NetworkTags.decode(reader, reader.uint32());
                                    break;
                                }
                            case 114: {
                                    message.desiredGatewayApiConfig = $root.google.container.v1.GatewayAPIConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 116: {
                                    message.desiredNodePoolLoggingConfig = $root.google.container.v1.NodePoolLoggingConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ClusterUpdate message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.ClusterUpdate
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.ClusterUpdate} ClusterUpdate
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ClusterUpdate.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ClusterUpdate message.
                     * @function verify
                     * @memberof google.container.v1.ClusterUpdate
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ClusterUpdate.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        var properties = {};
                        if (message.desiredNodeVersion != null && message.hasOwnProperty("desiredNodeVersion"))
                            if (!$util.isString(message.desiredNodeVersion))
                                return "desiredNodeVersion: string expected";
                        if (message.desiredMonitoringService != null && message.hasOwnProperty("desiredMonitoringService"))
                            if (!$util.isString(message.desiredMonitoringService))
                                return "desiredMonitoringService: string expected";
                        if (message.desiredAddonsConfig != null && message.hasOwnProperty("desiredAddonsConfig")) {
                            var error = $root.google.container.v1.AddonsConfig.verify(message.desiredAddonsConfig);
                            if (error)
                                return "desiredAddonsConfig." + error;
                        }
                        if (message.desiredNodePoolId != null && message.hasOwnProperty("desiredNodePoolId"))
                            if (!$util.isString(message.desiredNodePoolId))
                                return "desiredNodePoolId: string expected";
                        if (message.desiredImageType != null && message.hasOwnProperty("desiredImageType"))
                            if (!$util.isString(message.desiredImageType))
                                return "desiredImageType: string expected";
                        if (message.desiredDatabaseEncryption != null && message.hasOwnProperty("desiredDatabaseEncryption")) {
                            var error = $root.google.container.v1.DatabaseEncryption.verify(message.desiredDatabaseEncryption);
                            if (error)
                                return "desiredDatabaseEncryption." + error;
                        }
                        if (message.desiredWorkloadIdentityConfig != null && message.hasOwnProperty("desiredWorkloadIdentityConfig")) {
                            var error = $root.google.container.v1.WorkloadIdentityConfig.verify(message.desiredWorkloadIdentityConfig);
                            if (error)
                                return "desiredWorkloadIdentityConfig." + error;
                        }
                        if (message.desiredMeshCertificates != null && message.hasOwnProperty("desiredMeshCertificates")) {
                            var error = $root.google.container.v1.MeshCertificates.verify(message.desiredMeshCertificates);
                            if (error)
                                return "desiredMeshCertificates." + error;
                        }
                        if (message.desiredShieldedNodes != null && message.hasOwnProperty("desiredShieldedNodes")) {
                            var error = $root.google.container.v1.ShieldedNodes.verify(message.desiredShieldedNodes);
                            if (error)
                                return "desiredShieldedNodes." + error;
                        }
                        if (message.desiredCostManagementConfig != null && message.hasOwnProperty("desiredCostManagementConfig")) {
                            var error = $root.google.container.v1.CostManagementConfig.verify(message.desiredCostManagementConfig);
                            if (error)
                                return "desiredCostManagementConfig." + error;
                        }
                        if (message.desiredDnsConfig != null && message.hasOwnProperty("desiredDnsConfig")) {
                            var error = $root.google.container.v1.DNSConfig.verify(message.desiredDnsConfig);
                            if (error)
                                return "desiredDnsConfig." + error;
                        }
                        if (message.desiredNodePoolAutoscaling != null && message.hasOwnProperty("desiredNodePoolAutoscaling")) {
                            var error = $root.google.container.v1.NodePoolAutoscaling.verify(message.desiredNodePoolAutoscaling);
                            if (error)
                                return "desiredNodePoolAutoscaling." + error;
                        }
                        if (message.desiredLocations != null && message.hasOwnProperty("desiredLocations")) {
                            if (!Array.isArray(message.desiredLocations))
                                return "desiredLocations: array expected";
                            for (var i = 0; i < message.desiredLocations.length; ++i)
                                if (!$util.isString(message.desiredLocations[i]))
                                    return "desiredLocations: string[] expected";
                        }
                        if (message.desiredMasterAuthorizedNetworksConfig != null && message.hasOwnProperty("desiredMasterAuthorizedNetworksConfig")) {
                            var error = $root.google.container.v1.MasterAuthorizedNetworksConfig.verify(message.desiredMasterAuthorizedNetworksConfig);
                            if (error)
                                return "desiredMasterAuthorizedNetworksConfig." + error;
                        }
                        if (message.desiredClusterAutoscaling != null && message.hasOwnProperty("desiredClusterAutoscaling")) {
                            var error = $root.google.container.v1.ClusterAutoscaling.verify(message.desiredClusterAutoscaling);
                            if (error)
                                return "desiredClusterAutoscaling." + error;
                        }
                        if (message.desiredBinaryAuthorization != null && message.hasOwnProperty("desiredBinaryAuthorization")) {
                            var error = $root.google.container.v1.BinaryAuthorization.verify(message.desiredBinaryAuthorization);
                            if (error)
                                return "desiredBinaryAuthorization." + error;
                        }
                        if (message.desiredLoggingService != null && message.hasOwnProperty("desiredLoggingService"))
                            if (!$util.isString(message.desiredLoggingService))
                                return "desiredLoggingService: string expected";
                        if (message.desiredResourceUsageExportConfig != null && message.hasOwnProperty("desiredResourceUsageExportConfig")) {
                            var error = $root.google.container.v1.ResourceUsageExportConfig.verify(message.desiredResourceUsageExportConfig);
                            if (error)
                                return "desiredResourceUsageExportConfig." + error;
                        }
                        if (message.desiredVerticalPodAutoscaling != null && message.hasOwnProperty("desiredVerticalPodAutoscaling")) {
                            var error = $root.google.container.v1.VerticalPodAutoscaling.verify(message.desiredVerticalPodAutoscaling);
                            if (error)
                                return "desiredVerticalPodAutoscaling." + error;
                        }
                        if (message.desiredPrivateClusterConfig != null && message.hasOwnProperty("desiredPrivateClusterConfig")) {
                            var error = $root.google.container.v1.PrivateClusterConfig.verify(message.desiredPrivateClusterConfig);
                            if (error)
                                return "desiredPrivateClusterConfig." + error;
                        }
                        if (message.desiredIntraNodeVisibilityConfig != null && message.hasOwnProperty("desiredIntraNodeVisibilityConfig")) {
                            var error = $root.google.container.v1.IntraNodeVisibilityConfig.verify(message.desiredIntraNodeVisibilityConfig);
                            if (error)
                                return "desiredIntraNodeVisibilityConfig." + error;
                        }
                        if (message.desiredDefaultSnatStatus != null && message.hasOwnProperty("desiredDefaultSnatStatus")) {
                            var error = $root.google.container.v1.DefaultSnatStatus.verify(message.desiredDefaultSnatStatus);
                            if (error)
                                return "desiredDefaultSnatStatus." + error;
                        }
                        if (message.desiredReleaseChannel != null && message.hasOwnProperty("desiredReleaseChannel")) {
                            var error = $root.google.container.v1.ReleaseChannel.verify(message.desiredReleaseChannel);
                            if (error)
                                return "desiredReleaseChannel." + error;
                        }
                        if (message.desiredL4ilbSubsettingConfig != null && message.hasOwnProperty("desiredL4ilbSubsettingConfig")) {
                            var error = $root.google.container.v1.ILBSubsettingConfig.verify(message.desiredL4ilbSubsettingConfig);
                            if (error)
                                return "desiredL4ilbSubsettingConfig." + error;
                        }
                        if (message.desiredDatapathProvider != null && message.hasOwnProperty("desiredDatapathProvider"))
                            switch (message.desiredDatapathProvider) {
                            default:
                                return "desiredDatapathProvider: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        if (message.desiredPrivateIpv6GoogleAccess != null && message.hasOwnProperty("desiredPrivateIpv6GoogleAccess"))
                            switch (message.desiredPrivateIpv6GoogleAccess) {
                            default:
                                return "desiredPrivateIpv6GoogleAccess: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                                break;
                            }
                        if (message.desiredNotificationConfig != null && message.hasOwnProperty("desiredNotificationConfig")) {
                            var error = $root.google.container.v1.NotificationConfig.verify(message.desiredNotificationConfig);
                            if (error)
                                return "desiredNotificationConfig." + error;
                        }
                        if (message.desiredAuthenticatorGroupsConfig != null && message.hasOwnProperty("desiredAuthenticatorGroupsConfig")) {
                            var error = $root.google.container.v1.AuthenticatorGroupsConfig.verify(message.desiredAuthenticatorGroupsConfig);
                            if (error)
                                return "desiredAuthenticatorGroupsConfig." + error;
                        }
                        if (message.desiredLoggingConfig != null && message.hasOwnProperty("desiredLoggingConfig")) {
                            var error = $root.google.container.v1.LoggingConfig.verify(message.desiredLoggingConfig);
                            if (error)
                                return "desiredLoggingConfig." + error;
                        }
                        if (message.desiredMonitoringConfig != null && message.hasOwnProperty("desiredMonitoringConfig")) {
                            var error = $root.google.container.v1.MonitoringConfig.verify(message.desiredMonitoringConfig);
                            if (error)
                                return "desiredMonitoringConfig." + error;
                        }
                        if (message.desiredIdentityServiceConfig != null && message.hasOwnProperty("desiredIdentityServiceConfig")) {
                            var error = $root.google.container.v1.IdentityServiceConfig.verify(message.desiredIdentityServiceConfig);
                            if (error)
                                return "desiredIdentityServiceConfig." + error;
                        }
                        if (message.desiredServiceExternalIpsConfig != null && message.hasOwnProperty("desiredServiceExternalIpsConfig")) {
                            var error = $root.google.container.v1.ServiceExternalIPsConfig.verify(message.desiredServiceExternalIpsConfig);
                            if (error)
                                return "desiredServiceExternalIpsConfig." + error;
                        }
                        if (message.desiredEnablePrivateEndpoint != null && message.hasOwnProperty("desiredEnablePrivateEndpoint")) {
                            properties._desiredEnablePrivateEndpoint = 1;
                            if (typeof message.desiredEnablePrivateEndpoint !== "boolean")
                                return "desiredEnablePrivateEndpoint: boolean expected";
                        }
                        if (message.desiredMasterVersion != null && message.hasOwnProperty("desiredMasterVersion"))
                            if (!$util.isString(message.desiredMasterVersion))
                                return "desiredMasterVersion: string expected";
                        if (message.desiredGcfsConfig != null && message.hasOwnProperty("desiredGcfsConfig")) {
                            var error = $root.google.container.v1.GcfsConfig.verify(message.desiredGcfsConfig);
                            if (error)
                                return "desiredGcfsConfig." + error;
                        }
                        if (message.desiredNodePoolAutoConfigNetworkTags != null && message.hasOwnProperty("desiredNodePoolAutoConfigNetworkTags")) {
                            var error = $root.google.container.v1.NetworkTags.verify(message.desiredNodePoolAutoConfigNetworkTags);
                            if (error)
                                return "desiredNodePoolAutoConfigNetworkTags." + error;
                        }
                        if (message.desiredGatewayApiConfig != null && message.hasOwnProperty("desiredGatewayApiConfig")) {
                            var error = $root.google.container.v1.GatewayAPIConfig.verify(message.desiredGatewayApiConfig);
                            if (error)
                                return "desiredGatewayApiConfig." + error;
                        }
                        if (message.desiredNodePoolLoggingConfig != null && message.hasOwnProperty("desiredNodePoolLoggingConfig")) {
                            var error = $root.google.container.v1.NodePoolLoggingConfig.verify(message.desiredNodePoolLoggingConfig);
                            if (error)
                                return "desiredNodePoolLoggingConfig." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a ClusterUpdate message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.ClusterUpdate
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.ClusterUpdate} ClusterUpdate
                     */
                    ClusterUpdate.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.ClusterUpdate)
                            return object;
                        var message = new $root.google.container.v1.ClusterUpdate();
                        if (object.desiredNodeVersion != null)
                            message.desiredNodeVersion = String(object.desiredNodeVersion);
                        if (object.desiredMonitoringService != null)
                            message.desiredMonitoringService = String(object.desiredMonitoringService);
                        if (object.desiredAddonsConfig != null) {
                            if (typeof object.desiredAddonsConfig !== "object")
                                throw TypeError(".google.container.v1.ClusterUpdate.desiredAddonsConfig: object expected");
                            message.desiredAddonsConfig = $root.google.container.v1.AddonsConfig.fromObject(object.desiredAddonsConfig);
                        }
                        if (object.desiredNodePoolId != null)
                            message.desiredNodePoolId = String(object.desiredNodePoolId);
                        if (object.desiredImageType != null)
                            message.desiredImageType = String(object.desiredImageType);
                        if (object.desiredDatabaseEncryption != null) {
                            if (typeof object.desiredDatabaseEncryption !== "object")
                                throw TypeError(".google.container.v1.ClusterUpdate.desiredDatabaseEncryption: object expected");
                            message.desiredDatabaseEncryption = $root.google.container.v1.DatabaseEncryption.fromObject(object.desiredDatabaseEncryption);
                        }
                        if (object.desiredWorkloadIdentityConfig != null) {
                            if (typeof object.desiredWorkloadIdentityConfig !== "object")
                                throw TypeError(".google.container.v1.ClusterUpdate.desiredWorkloadIdentityConfig: object expected");
                            message.desiredWorkloadIdentityConfig = $root.google.container.v1.WorkloadIdentityConfig.fromObject(object.desiredWorkloadIdentityConfig);
                        }
                        if (object.desiredMeshCertificates != null) {
                            if (typeof object.desiredMeshCertificates !== "object")
                                throw TypeError(".google.container.v1.ClusterUpdate.desiredMeshCertificates: object expected");
                            message.desiredMeshCertificates = $root.google.container.v1.MeshCertificates.fromObject(object.desiredMeshCertificates);
                        }
                        if (object.desiredShieldedNodes != null) {
                            if (typeof object.desiredShieldedNodes !== "object")
                                throw TypeError(".google.container.v1.ClusterUpdate.desiredShieldedNodes: object expected");
                            message.desiredShieldedNodes = $root.google.container.v1.ShieldedNodes.fromObject(object.desiredShieldedNodes);
                        }
                        if (object.desiredCostManagementConfig != null) {
                            if (typeof object.desiredCostManagementConfig !== "object")
                                throw TypeError(".google.container.v1.ClusterUpdate.desiredCostManagementConfig: object expected");
                            message.desiredCostManagementConfig = $root.google.container.v1.CostManagementConfig.fromObject(object.desiredCostManagementConfig);
                        }
                        if (object.desiredDnsConfig != null) {
                            if (typeof object.desiredDnsConfig !== "object")
                                throw TypeError(".google.container.v1.ClusterUpdate.desiredDnsConfig: object expected");
                            message.desiredDnsConfig = $root.google.container.v1.DNSConfig.fromObject(object.desiredDnsConfig);
                        }
                        if (object.desiredNodePoolAutoscaling != null) {
                            if (typeof object.desiredNodePoolAutoscaling !== "object")
                                throw TypeError(".google.container.v1.ClusterUpdate.desiredNodePoolAutoscaling: object expected");
                            message.desiredNodePoolAutoscaling = $root.google.container.v1.NodePoolAutoscaling.fromObject(object.desiredNodePoolAutoscaling);
                        }
                        if (object.desiredLocations) {
                            if (!Array.isArray(object.desiredLocations))
                                throw TypeError(".google.container.v1.ClusterUpdate.desiredLocations: array expected");
                            message.desiredLocations = [];
                            for (var i = 0; i < object.desiredLocations.length; ++i)
                                message.desiredLocations[i] = String(object.desiredLocations[i]);
                        }
                        if (object.desiredMasterAuthorizedNetworksConfig != null) {
                            if (typeof object.desiredMasterAuthorizedNetworksConfig !== "object")
                                throw TypeError(".google.container.v1.ClusterUpdate.desiredMasterAuthorizedNetworksConfig: object expected");
                            message.desiredMasterAuthorizedNetworksConfig = $root.google.container.v1.MasterAuthorizedNetworksConfig.fromObject(object.desiredMasterAuthorizedNetworksConfig);
                        }
                        if (object.desiredClusterAutoscaling != null) {
                            if (typeof object.desiredClusterAutoscaling !== "object")
                                throw TypeError(".google.container.v1.ClusterUpdate.desiredClusterAutoscaling: object expected");
                            message.desiredClusterAutoscaling = $root.google.container.v1.ClusterAutoscaling.fromObject(object.desiredClusterAutoscaling);
                        }
                        if (object.desiredBinaryAuthorization != null) {
                            if (typeof object.desiredBinaryAuthorization !== "object")
                                throw TypeError(".google.container.v1.ClusterUpdate.desiredBinaryAuthorization: object expected");
                            message.desiredBinaryAuthorization = $root.google.container.v1.BinaryAuthorization.fromObject(object.desiredBinaryAuthorization);
                        }
                        if (object.desiredLoggingService != null)
                            message.desiredLoggingService = String(object.desiredLoggingService);
                        if (object.desiredResourceUsageExportConfig != null) {
                            if (typeof object.desiredResourceUsageExportConfig !== "object")
                                throw TypeError(".google.container.v1.ClusterUpdate.desiredResourceUsageExportConfig: object expected");
                            message.desiredResourceUsageExportConfig = $root.google.container.v1.ResourceUsageExportConfig.fromObject(object.desiredResourceUsageExportConfig);
                        }
                        if (object.desiredVerticalPodAutoscaling != null) {
                            if (typeof object.desiredVerticalPodAutoscaling !== "object")
                                throw TypeError(".google.container.v1.ClusterUpdate.desiredVerticalPodAutoscaling: object expected");
                            message.desiredVerticalPodAutoscaling = $root.google.container.v1.VerticalPodAutoscaling.fromObject(object.desiredVerticalPodAutoscaling);
                        }
                        if (object.desiredPrivateClusterConfig != null) {
                            if (typeof object.desiredPrivateClusterConfig !== "object")
                                throw TypeError(".google.container.v1.ClusterUpdate.desiredPrivateClusterConfig: object expected");
                            message.desiredPrivateClusterConfig = $root.google.container.v1.PrivateClusterConfig.fromObject(object.desiredPrivateClusterConfig);
                        }
                        if (object.desiredIntraNodeVisibilityConfig != null) {
                            if (typeof object.desiredIntraNodeVisibilityConfig !== "object")
                                throw TypeError(".google.container.v1.ClusterUpdate.desiredIntraNodeVisibilityConfig: object expected");
                            message.desiredIntraNodeVisibilityConfig = $root.google.container.v1.IntraNodeVisibilityConfig.fromObject(object.desiredIntraNodeVisibilityConfig);
                        }
                        if (object.desiredDefaultSnatStatus != null) {
                            if (typeof object.desiredDefaultSnatStatus !== "object")
                                throw TypeError(".google.container.v1.ClusterUpdate.desiredDefaultSnatStatus: object expected");
                            message.desiredDefaultSnatStatus = $root.google.container.v1.DefaultSnatStatus.fromObject(object.desiredDefaultSnatStatus);
                        }
                        if (object.desiredReleaseChannel != null) {
                            if (typeof object.desiredReleaseChannel !== "object")
                                throw TypeError(".google.container.v1.ClusterUpdate.desiredReleaseChannel: object expected");
                            message.desiredReleaseChannel = $root.google.container.v1.ReleaseChannel.fromObject(object.desiredReleaseChannel);
                        }
                        if (object.desiredL4ilbSubsettingConfig != null) {
                            if (typeof object.desiredL4ilbSubsettingConfig !== "object")
                                throw TypeError(".google.container.v1.ClusterUpdate.desiredL4ilbSubsettingConfig: object expected");
                            message.desiredL4ilbSubsettingConfig = $root.google.container.v1.ILBSubsettingConfig.fromObject(object.desiredL4ilbSubsettingConfig);
                        }
                        switch (object.desiredDatapathProvider) {
                        default:
                            if (typeof object.desiredDatapathProvider === "number") {
                                message.desiredDatapathProvider = object.desiredDatapathProvider;
                                break;
                            }
                            break;
                        case "DATAPATH_PROVIDER_UNSPECIFIED":
                        case 0:
                            message.desiredDatapathProvider = 0;
                            break;
                        case "LEGACY_DATAPATH":
                        case 1:
                            message.desiredDatapathProvider = 1;
                            break;
                        case "ADVANCED_DATAPATH":
                        case 2:
                            message.desiredDatapathProvider = 2;
                            break;
                        }
                        switch (object.desiredPrivateIpv6GoogleAccess) {
                        default:
                            if (typeof object.desiredPrivateIpv6GoogleAccess === "number") {
                                message.desiredPrivateIpv6GoogleAccess = object.desiredPrivateIpv6GoogleAccess;
                                break;
                            }
                            break;
                        case "PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED":
                        case 0:
                            message.desiredPrivateIpv6GoogleAccess = 0;
                            break;
                        case "PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED":
                        case 1:
                            message.desiredPrivateIpv6GoogleAccess = 1;
                            break;
                        case "PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE":
                        case 2:
                            message.desiredPrivateIpv6GoogleAccess = 2;
                            break;
                        case "PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL":
                        case 3:
                            message.desiredPrivateIpv6GoogleAccess = 3;
                            break;
                        }
                        if (object.desiredNotificationConfig != null) {
                            if (typeof object.desiredNotificationConfig !== "object")
                                throw TypeError(".google.container.v1.ClusterUpdate.desiredNotificationConfig: object expected");
                            message.desiredNotificationConfig = $root.google.container.v1.NotificationConfig.fromObject(object.desiredNotificationConfig);
                        }
                        if (object.desiredAuthenticatorGroupsConfig != null) {
                            if (typeof object.desiredAuthenticatorGroupsConfig !== "object")
                                throw TypeError(".google.container.v1.ClusterUpdate.desiredAuthenticatorGroupsConfig: object expected");
                            message.desiredAuthenticatorGroupsConfig = $root.google.container.v1.AuthenticatorGroupsConfig.fromObject(object.desiredAuthenticatorGroupsConfig);
                        }
                        if (object.desiredLoggingConfig != null) {
                            if (typeof object.desiredLoggingConfig !== "object")
                                throw TypeError(".google.container.v1.ClusterUpdate.desiredLoggingConfig: object expected");
                            message.desiredLoggingConfig = $root.google.container.v1.LoggingConfig.fromObject(object.desiredLoggingConfig);
                        }
                        if (object.desiredMonitoringConfig != null) {
                            if (typeof object.desiredMonitoringConfig !== "object")
                                throw TypeError(".google.container.v1.ClusterUpdate.desiredMonitoringConfig: object expected");
                            message.desiredMonitoringConfig = $root.google.container.v1.MonitoringConfig.fromObject(object.desiredMonitoringConfig);
                        }
                        if (object.desiredIdentityServiceConfig != null) {
                            if (typeof object.desiredIdentityServiceConfig !== "object")
                                throw TypeError(".google.container.v1.ClusterUpdate.desiredIdentityServiceConfig: object expected");
                            message.desiredIdentityServiceConfig = $root.google.container.v1.IdentityServiceConfig.fromObject(object.desiredIdentityServiceConfig);
                        }
                        if (object.desiredServiceExternalIpsConfig != null) {
                            if (typeof object.desiredServiceExternalIpsConfig !== "object")
                                throw TypeError(".google.container.v1.ClusterUpdate.desiredServiceExternalIpsConfig: object expected");
                            message.desiredServiceExternalIpsConfig = $root.google.container.v1.ServiceExternalIPsConfig.fromObject(object.desiredServiceExternalIpsConfig);
                        }
                        if (object.desiredEnablePrivateEndpoint != null)
                            message.desiredEnablePrivateEndpoint = Boolean(object.desiredEnablePrivateEndpoint);
                        if (object.desiredMasterVersion != null)
                            message.desiredMasterVersion = String(object.desiredMasterVersion);
                        if (object.desiredGcfsConfig != null) {
                            if (typeof object.desiredGcfsConfig !== "object")
                                throw TypeError(".google.container.v1.ClusterUpdate.desiredGcfsConfig: object expected");
                            message.desiredGcfsConfig = $root.google.container.v1.GcfsConfig.fromObject(object.desiredGcfsConfig);
                        }
                        if (object.desiredNodePoolAutoConfigNetworkTags != null) {
                            if (typeof object.desiredNodePoolAutoConfigNetworkTags !== "object")
                                throw TypeError(".google.container.v1.ClusterUpdate.desiredNodePoolAutoConfigNetworkTags: object expected");
                            message.desiredNodePoolAutoConfigNetworkTags = $root.google.container.v1.NetworkTags.fromObject(object.desiredNodePoolAutoConfigNetworkTags);
                        }
                        if (object.desiredGatewayApiConfig != null) {
                            if (typeof object.desiredGatewayApiConfig !== "object")
                                throw TypeError(".google.container.v1.ClusterUpdate.desiredGatewayApiConfig: object expected");
                            message.desiredGatewayApiConfig = $root.google.container.v1.GatewayAPIConfig.fromObject(object.desiredGatewayApiConfig);
                        }
                        if (object.desiredNodePoolLoggingConfig != null) {
                            if (typeof object.desiredNodePoolLoggingConfig !== "object")
                                throw TypeError(".google.container.v1.ClusterUpdate.desiredNodePoolLoggingConfig: object expected");
                            message.desiredNodePoolLoggingConfig = $root.google.container.v1.NodePoolLoggingConfig.fromObject(object.desiredNodePoolLoggingConfig);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ClusterUpdate message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.ClusterUpdate
                     * @static
                     * @param {google.container.v1.ClusterUpdate} message ClusterUpdate
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ClusterUpdate.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.desiredLocations = [];
                        if (options.defaults) {
                            object.desiredNodeVersion = "";
                            object.desiredMonitoringService = "";
                            object.desiredAddonsConfig = null;
                            object.desiredNodePoolId = "";
                            object.desiredImageType = "";
                            object.desiredNodePoolAutoscaling = null;
                            object.desiredMasterAuthorizedNetworksConfig = null;
                            object.desiredClusterAutoscaling = null;
                            object.desiredBinaryAuthorization = null;
                            object.desiredLoggingService = "";
                            object.desiredResourceUsageExportConfig = null;
                            object.desiredVerticalPodAutoscaling = null;
                            object.desiredPrivateClusterConfig = null;
                            object.desiredIntraNodeVisibilityConfig = null;
                            object.desiredDefaultSnatStatus = null;
                            object.desiredReleaseChannel = null;
                            object.desiredL4ilbSubsettingConfig = null;
                            object.desiredDatabaseEncryption = null;
                            object.desiredWorkloadIdentityConfig = null;
                            object.desiredShieldedNodes = null;
                            object.desiredCostManagementConfig = null;
                            object.desiredDatapathProvider = options.enums === String ? "DATAPATH_PROVIDER_UNSPECIFIED" : 0;
                            object.desiredPrivateIpv6GoogleAccess = options.enums === String ? "PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED" : 0;
                            object.desiredDnsConfig = null;
                            object.desiredNotificationConfig = null;
                            object.desiredServiceExternalIpsConfig = null;
                            object.desiredAuthenticatorGroupsConfig = null;
                            object.desiredLoggingConfig = null;
                            object.desiredMonitoringConfig = null;
                            object.desiredIdentityServiceConfig = null;
                            object.desiredMeshCertificates = null;
                            object.desiredMasterVersion = "";
                            object.desiredGcfsConfig = null;
                            object.desiredNodePoolAutoConfigNetworkTags = null;
                            object.desiredGatewayApiConfig = null;
                            object.desiredNodePoolLoggingConfig = null;
                        }
                        if (message.desiredNodeVersion != null && message.hasOwnProperty("desiredNodeVersion"))
                            object.desiredNodeVersion = message.desiredNodeVersion;
                        if (message.desiredMonitoringService != null && message.hasOwnProperty("desiredMonitoringService"))
                            object.desiredMonitoringService = message.desiredMonitoringService;
                        if (message.desiredAddonsConfig != null && message.hasOwnProperty("desiredAddonsConfig"))
                            object.desiredAddonsConfig = $root.google.container.v1.AddonsConfig.toObject(message.desiredAddonsConfig, options);
                        if (message.desiredNodePoolId != null && message.hasOwnProperty("desiredNodePoolId"))
                            object.desiredNodePoolId = message.desiredNodePoolId;
                        if (message.desiredImageType != null && message.hasOwnProperty("desiredImageType"))
                            object.desiredImageType = message.desiredImageType;
                        if (message.desiredNodePoolAutoscaling != null && message.hasOwnProperty("desiredNodePoolAutoscaling"))
                            object.desiredNodePoolAutoscaling = $root.google.container.v1.NodePoolAutoscaling.toObject(message.desiredNodePoolAutoscaling, options);
                        if (message.desiredLocations && message.desiredLocations.length) {
                            object.desiredLocations = [];
                            for (var j = 0; j < message.desiredLocations.length; ++j)
                                object.desiredLocations[j] = message.desiredLocations[j];
                        }
                        if (message.desiredMasterAuthorizedNetworksConfig != null && message.hasOwnProperty("desiredMasterAuthorizedNetworksConfig"))
                            object.desiredMasterAuthorizedNetworksConfig = $root.google.container.v1.MasterAuthorizedNetworksConfig.toObject(message.desiredMasterAuthorizedNetworksConfig, options);
                        if (message.desiredClusterAutoscaling != null && message.hasOwnProperty("desiredClusterAutoscaling"))
                            object.desiredClusterAutoscaling = $root.google.container.v1.ClusterAutoscaling.toObject(message.desiredClusterAutoscaling, options);
                        if (message.desiredBinaryAuthorization != null && message.hasOwnProperty("desiredBinaryAuthorization"))
                            object.desiredBinaryAuthorization = $root.google.container.v1.BinaryAuthorization.toObject(message.desiredBinaryAuthorization, options);
                        if (message.desiredLoggingService != null && message.hasOwnProperty("desiredLoggingService"))
                            object.desiredLoggingService = message.desiredLoggingService;
                        if (message.desiredResourceUsageExportConfig != null && message.hasOwnProperty("desiredResourceUsageExportConfig"))
                            object.desiredResourceUsageExportConfig = $root.google.container.v1.ResourceUsageExportConfig.toObject(message.desiredResourceUsageExportConfig, options);
                        if (message.desiredVerticalPodAutoscaling != null && message.hasOwnProperty("desiredVerticalPodAutoscaling"))
                            object.desiredVerticalPodAutoscaling = $root.google.container.v1.VerticalPodAutoscaling.toObject(message.desiredVerticalPodAutoscaling, options);
                        if (message.desiredPrivateClusterConfig != null && message.hasOwnProperty("desiredPrivateClusterConfig"))
                            object.desiredPrivateClusterConfig = $root.google.container.v1.PrivateClusterConfig.toObject(message.desiredPrivateClusterConfig, options);
                        if (message.desiredIntraNodeVisibilityConfig != null && message.hasOwnProperty("desiredIntraNodeVisibilityConfig"))
                            object.desiredIntraNodeVisibilityConfig = $root.google.container.v1.IntraNodeVisibilityConfig.toObject(message.desiredIntraNodeVisibilityConfig, options);
                        if (message.desiredDefaultSnatStatus != null && message.hasOwnProperty("desiredDefaultSnatStatus"))
                            object.desiredDefaultSnatStatus = $root.google.container.v1.DefaultSnatStatus.toObject(message.desiredDefaultSnatStatus, options);
                        if (message.desiredReleaseChannel != null && message.hasOwnProperty("desiredReleaseChannel"))
                            object.desiredReleaseChannel = $root.google.container.v1.ReleaseChannel.toObject(message.desiredReleaseChannel, options);
                        if (message.desiredL4ilbSubsettingConfig != null && message.hasOwnProperty("desiredL4ilbSubsettingConfig"))
                            object.desiredL4ilbSubsettingConfig = $root.google.container.v1.ILBSubsettingConfig.toObject(message.desiredL4ilbSubsettingConfig, options);
                        if (message.desiredDatabaseEncryption != null && message.hasOwnProperty("desiredDatabaseEncryption"))
                            object.desiredDatabaseEncryption = $root.google.container.v1.DatabaseEncryption.toObject(message.desiredDatabaseEncryption, options);
                        if (message.desiredWorkloadIdentityConfig != null && message.hasOwnProperty("desiredWorkloadIdentityConfig"))
                            object.desiredWorkloadIdentityConfig = $root.google.container.v1.WorkloadIdentityConfig.toObject(message.desiredWorkloadIdentityConfig, options);
                        if (message.desiredShieldedNodes != null && message.hasOwnProperty("desiredShieldedNodes"))
                            object.desiredShieldedNodes = $root.google.container.v1.ShieldedNodes.toObject(message.desiredShieldedNodes, options);
                        if (message.desiredCostManagementConfig != null && message.hasOwnProperty("desiredCostManagementConfig"))
                            object.desiredCostManagementConfig = $root.google.container.v1.CostManagementConfig.toObject(message.desiredCostManagementConfig, options);
                        if (message.desiredDatapathProvider != null && message.hasOwnProperty("desiredDatapathProvider"))
                            object.desiredDatapathProvider = options.enums === String ? $root.google.container.v1.DatapathProvider[message.desiredDatapathProvider] === undefined ? message.desiredDatapathProvider : $root.google.container.v1.DatapathProvider[message.desiredDatapathProvider] : message.desiredDatapathProvider;
                        if (message.desiredPrivateIpv6GoogleAccess != null && message.hasOwnProperty("desiredPrivateIpv6GoogleAccess"))
                            object.desiredPrivateIpv6GoogleAccess = options.enums === String ? $root.google.container.v1.PrivateIPv6GoogleAccess[message.desiredPrivateIpv6GoogleAccess] === undefined ? message.desiredPrivateIpv6GoogleAccess : $root.google.container.v1.PrivateIPv6GoogleAccess[message.desiredPrivateIpv6GoogleAccess] : message.desiredPrivateIpv6GoogleAccess;
                        if (message.desiredDnsConfig != null && message.hasOwnProperty("desiredDnsConfig"))
                            object.desiredDnsConfig = $root.google.container.v1.DNSConfig.toObject(message.desiredDnsConfig, options);
                        if (message.desiredNotificationConfig != null && message.hasOwnProperty("desiredNotificationConfig"))
                            object.desiredNotificationConfig = $root.google.container.v1.NotificationConfig.toObject(message.desiredNotificationConfig, options);
                        if (message.desiredServiceExternalIpsConfig != null && message.hasOwnProperty("desiredServiceExternalIpsConfig"))
                            object.desiredServiceExternalIpsConfig = $root.google.container.v1.ServiceExternalIPsConfig.toObject(message.desiredServiceExternalIpsConfig, options);
                        if (message.desiredAuthenticatorGroupsConfig != null && message.hasOwnProperty("desiredAuthenticatorGroupsConfig"))
                            object.desiredAuthenticatorGroupsConfig = $root.google.container.v1.AuthenticatorGroupsConfig.toObject(message.desiredAuthenticatorGroupsConfig, options);
                        if (message.desiredLoggingConfig != null && message.hasOwnProperty("desiredLoggingConfig"))
                            object.desiredLoggingConfig = $root.google.container.v1.LoggingConfig.toObject(message.desiredLoggingConfig, options);
                        if (message.desiredMonitoringConfig != null && message.hasOwnProperty("desiredMonitoringConfig"))
                            object.desiredMonitoringConfig = $root.google.container.v1.MonitoringConfig.toObject(message.desiredMonitoringConfig, options);
                        if (message.desiredIdentityServiceConfig != null && message.hasOwnProperty("desiredIdentityServiceConfig"))
                            object.desiredIdentityServiceConfig = $root.google.container.v1.IdentityServiceConfig.toObject(message.desiredIdentityServiceConfig, options);
                        if (message.desiredMeshCertificates != null && message.hasOwnProperty("desiredMeshCertificates"))
                            object.desiredMeshCertificates = $root.google.container.v1.MeshCertificates.toObject(message.desiredMeshCertificates, options);
                        if (message.desiredEnablePrivateEndpoint != null && message.hasOwnProperty("desiredEnablePrivateEndpoint")) {
                            object.desiredEnablePrivateEndpoint = message.desiredEnablePrivateEndpoint;
                            if (options.oneofs)
                                object._desiredEnablePrivateEndpoint = "desiredEnablePrivateEndpoint";
                        }
                        if (message.desiredMasterVersion != null && message.hasOwnProperty("desiredMasterVersion"))
                            object.desiredMasterVersion = message.desiredMasterVersion;
                        if (message.desiredGcfsConfig != null && message.hasOwnProperty("desiredGcfsConfig"))
                            object.desiredGcfsConfig = $root.google.container.v1.GcfsConfig.toObject(message.desiredGcfsConfig, options);
                        if (message.desiredNodePoolAutoConfigNetworkTags != null && message.hasOwnProperty("desiredNodePoolAutoConfigNetworkTags"))
                            object.desiredNodePoolAutoConfigNetworkTags = $root.google.container.v1.NetworkTags.toObject(message.desiredNodePoolAutoConfigNetworkTags, options);
                        if (message.desiredGatewayApiConfig != null && message.hasOwnProperty("desiredGatewayApiConfig"))
                            object.desiredGatewayApiConfig = $root.google.container.v1.GatewayAPIConfig.toObject(message.desiredGatewayApiConfig, options);
                        if (message.desiredNodePoolLoggingConfig != null && message.hasOwnProperty("desiredNodePoolLoggingConfig"))
                            object.desiredNodePoolLoggingConfig = $root.google.container.v1.NodePoolLoggingConfig.toObject(message.desiredNodePoolLoggingConfig, options);
                        return object;
                    };
    
                    /**
                     * Converts this ClusterUpdate to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.ClusterUpdate
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ClusterUpdate.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ClusterUpdate
                     * @function getTypeUrl
                     * @memberof google.container.v1.ClusterUpdate
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ClusterUpdate.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.ClusterUpdate";
                    };
    
                    return ClusterUpdate;
                })();
    
                v1.Operation = (function() {
    
                    /**
                     * Properties of an Operation.
                     * @memberof google.container.v1
                     * @interface IOperation
                     * @property {string|null} [name] Operation name
                     * @property {string|null} [zone] Operation zone
                     * @property {google.container.v1.Operation.Type|null} [operationType] Operation operationType
                     * @property {google.container.v1.Operation.Status|null} [status] Operation status
                     * @property {string|null} [detail] Operation detail
                     * @property {string|null} [statusMessage] Operation statusMessage
                     * @property {string|null} [selfLink] Operation selfLink
                     * @property {string|null} [targetLink] Operation targetLink
                     * @property {string|null} [location] Operation location
                     * @property {string|null} [startTime] Operation startTime
                     * @property {string|null} [endTime] Operation endTime
                     * @property {google.container.v1.IOperationProgress|null} [progress] Operation progress
                     * @property {Array.<google.container.v1.IStatusCondition>|null} [clusterConditions] Operation clusterConditions
                     * @property {Array.<google.container.v1.IStatusCondition>|null} [nodepoolConditions] Operation nodepoolConditions
                     * @property {google.rpc.IStatus|null} [error] Operation error
                     */
    
                    /**
                     * Constructs a new Operation.
                     * @memberof google.container.v1
                     * @classdesc Represents an Operation.
                     * @implements IOperation
                     * @constructor
                     * @param {google.container.v1.IOperation=} [properties] Properties to set
                     */
                    function Operation(properties) {
                        this.clusterConditions = [];
                        this.nodepoolConditions = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Operation name.
                     * @member {string} name
                     * @memberof google.container.v1.Operation
                     * @instance
                     */
                    Operation.prototype.name = "";
    
                    /**
                     * Operation zone.
                     * @member {string} zone
                     * @memberof google.container.v1.Operation
                     * @instance
                     */
                    Operation.prototype.zone = "";
    
                    /**
                     * Operation operationType.
                     * @member {google.container.v1.Operation.Type} operationType
                     * @memberof google.container.v1.Operation
                     * @instance
                     */
                    Operation.prototype.operationType = 0;
    
                    /**
                     * Operation status.
                     * @member {google.container.v1.Operation.Status} status
                     * @memberof google.container.v1.Operation
                     * @instance
                     */
                    Operation.prototype.status = 0;
    
                    /**
                     * Operation detail.
                     * @member {string} detail
                     * @memberof google.container.v1.Operation
                     * @instance
                     */
                    Operation.prototype.detail = "";
    
                    /**
                     * Operation statusMessage.
                     * @member {string} statusMessage
                     * @memberof google.container.v1.Operation
                     * @instance
                     */
                    Operation.prototype.statusMessage = "";
    
                    /**
                     * Operation selfLink.
                     * @member {string} selfLink
                     * @memberof google.container.v1.Operation
                     * @instance
                     */
                    Operation.prototype.selfLink = "";
    
                    /**
                     * Operation targetLink.
                     * @member {string} targetLink
                     * @memberof google.container.v1.Operation
                     * @instance
                     */
                    Operation.prototype.targetLink = "";
    
                    /**
                     * Operation location.
                     * @member {string} location
                     * @memberof google.container.v1.Operation
                     * @instance
                     */
                    Operation.prototype.location = "";
    
                    /**
                     * Operation startTime.
                     * @member {string} startTime
                     * @memberof google.container.v1.Operation
                     * @instance
                     */
                    Operation.prototype.startTime = "";
    
                    /**
                     * Operation endTime.
                     * @member {string} endTime
                     * @memberof google.container.v1.Operation
                     * @instance
                     */
                    Operation.prototype.endTime = "";
    
                    /**
                     * Operation progress.
                     * @member {google.container.v1.IOperationProgress|null|undefined} progress
                     * @memberof google.container.v1.Operation
                     * @instance
                     */
                    Operation.prototype.progress = null;
    
                    /**
                     * Operation clusterConditions.
                     * @member {Array.<google.container.v1.IStatusCondition>} clusterConditions
                     * @memberof google.container.v1.Operation
                     * @instance
                     */
                    Operation.prototype.clusterConditions = $util.emptyArray;
    
                    /**
                     * Operation nodepoolConditions.
                     * @member {Array.<google.container.v1.IStatusCondition>} nodepoolConditions
                     * @memberof google.container.v1.Operation
                     * @instance
                     */
                    Operation.prototype.nodepoolConditions = $util.emptyArray;
    
                    /**
                     * Operation error.
                     * @member {google.rpc.IStatus|null|undefined} error
                     * @memberof google.container.v1.Operation
                     * @instance
                     */
                    Operation.prototype.error = null;
    
                    /**
                     * Creates a new Operation instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.Operation
                     * @static
                     * @param {google.container.v1.IOperation=} [properties] Properties to set
                     * @returns {google.container.v1.Operation} Operation instance
                     */
                    Operation.create = function create(properties) {
                        return new Operation(properties);
                    };
    
                    /**
                     * Encodes the specified Operation message. Does not implicitly {@link google.container.v1.Operation.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.Operation
                     * @static
                     * @param {google.container.v1.IOperation} message Operation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Operation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.operationType != null && Object.hasOwnProperty.call(message, "operationType"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.operationType);
                        if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.status);
                        if (message.statusMessage != null && Object.hasOwnProperty.call(message, "statusMessage"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.statusMessage);
                        if (message.selfLink != null && Object.hasOwnProperty.call(message, "selfLink"))
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.selfLink);
                        if (message.targetLink != null && Object.hasOwnProperty.call(message, "targetLink"))
                            writer.uint32(/* id 7, wireType 2 =*/58).string(message.targetLink);
                        if (message.detail != null && Object.hasOwnProperty.call(message, "detail"))
                            writer.uint32(/* id 8, wireType 2 =*/66).string(message.detail);
                        if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                            writer.uint32(/* id 9, wireType 2 =*/74).string(message.location);
                        if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.startTime);
                        if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                            writer.uint32(/* id 11, wireType 2 =*/90).string(message.endTime);
                        if (message.progress != null && Object.hasOwnProperty.call(message, "progress"))
                            $root.google.container.v1.OperationProgress.encode(message.progress, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                        if (message.clusterConditions != null && message.clusterConditions.length)
                            for (var i = 0; i < message.clusterConditions.length; ++i)
                                $root.google.container.v1.StatusCondition.encode(message.clusterConditions[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                        if (message.nodepoolConditions != null && message.nodepoolConditions.length)
                            for (var i = 0; i < message.nodepoolConditions.length; ++i)
                                $root.google.container.v1.StatusCondition.encode(message.nodepoolConditions[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                        if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                            $root.google.rpc.Status.encode(message.error, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Operation message, length delimited. Does not implicitly {@link google.container.v1.Operation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.Operation
                     * @static
                     * @param {google.container.v1.IOperation} message Operation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Operation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Operation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.Operation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.Operation} Operation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Operation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.Operation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.operationType = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.status = reader.int32();
                                    break;
                                }
                            case 8: {
                                    message.detail = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.statusMessage = reader.string();
                                    break;
                                }
                            case 6: {
                                    message.selfLink = reader.string();
                                    break;
                                }
                            case 7: {
                                    message.targetLink = reader.string();
                                    break;
                                }
                            case 9: {
                                    message.location = reader.string();
                                    break;
                                }
                            case 10: {
                                    message.startTime = reader.string();
                                    break;
                                }
                            case 11: {
                                    message.endTime = reader.string();
                                    break;
                                }
                            case 12: {
                                    message.progress = $root.google.container.v1.OperationProgress.decode(reader, reader.uint32());
                                    break;
                                }
                            case 13: {
                                    if (!(message.clusterConditions && message.clusterConditions.length))
                                        message.clusterConditions = [];
                                    message.clusterConditions.push($root.google.container.v1.StatusCondition.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 14: {
                                    if (!(message.nodepoolConditions && message.nodepoolConditions.length))
                                        message.nodepoolConditions = [];
                                    message.nodepoolConditions.push($root.google.container.v1.StatusCondition.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 15: {
                                    message.error = $root.google.rpc.Status.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Operation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.Operation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.Operation} Operation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Operation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Operation message.
                     * @function verify
                     * @memberof google.container.v1.Operation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Operation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.operationType != null && message.hasOwnProperty("operationType"))
                            switch (message.operationType) {
                            default:
                                return "operationType: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                            case 8:
                            case 9:
                            case 10:
                            case 11:
                            case 12:
                            case 13:
                            case 14:
                            case 15:
                            case 16:
                                break;
                            }
                        if (message.status != null && message.hasOwnProperty("status"))
                            switch (message.status) {
                            default:
                                return "status: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                                break;
                            }
                        if (message.detail != null && message.hasOwnProperty("detail"))
                            if (!$util.isString(message.detail))
                                return "detail: string expected";
                        if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                            if (!$util.isString(message.statusMessage))
                                return "statusMessage: string expected";
                        if (message.selfLink != null && message.hasOwnProperty("selfLink"))
                            if (!$util.isString(message.selfLink))
                                return "selfLink: string expected";
                        if (message.targetLink != null && message.hasOwnProperty("targetLink"))
                            if (!$util.isString(message.targetLink))
                                return "targetLink: string expected";
                        if (message.location != null && message.hasOwnProperty("location"))
                            if (!$util.isString(message.location))
                                return "location: string expected";
                        if (message.startTime != null && message.hasOwnProperty("startTime"))
                            if (!$util.isString(message.startTime))
                                return "startTime: string expected";
                        if (message.endTime != null && message.hasOwnProperty("endTime"))
                            if (!$util.isString(message.endTime))
                                return "endTime: string expected";
                        if (message.progress != null && message.hasOwnProperty("progress")) {
                            var error = $root.google.container.v1.OperationProgress.verify(message.progress);
                            if (error)
                                return "progress." + error;
                        }
                        if (message.clusterConditions != null && message.hasOwnProperty("clusterConditions")) {
                            if (!Array.isArray(message.clusterConditions))
                                return "clusterConditions: array expected";
                            for (var i = 0; i < message.clusterConditions.length; ++i) {
                                var error = $root.google.container.v1.StatusCondition.verify(message.clusterConditions[i]);
                                if (error)
                                    return "clusterConditions." + error;
                            }
                        }
                        if (message.nodepoolConditions != null && message.hasOwnProperty("nodepoolConditions")) {
                            if (!Array.isArray(message.nodepoolConditions))
                                return "nodepoolConditions: array expected";
                            for (var i = 0; i < message.nodepoolConditions.length; ++i) {
                                var error = $root.google.container.v1.StatusCondition.verify(message.nodepoolConditions[i]);
                                if (error)
                                    return "nodepoolConditions." + error;
                            }
                        }
                        if (message.error != null && message.hasOwnProperty("error")) {
                            var error = $root.google.rpc.Status.verify(message.error);
                            if (error)
                                return "error." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an Operation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.Operation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.Operation} Operation
                     */
                    Operation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.Operation)
                            return object;
                        var message = new $root.google.container.v1.Operation();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        switch (object.operationType) {
                        default:
                            if (typeof object.operationType === "number") {
                                message.operationType = object.operationType;
                                break;
                            }
                            break;
                        case "TYPE_UNSPECIFIED":
                        case 0:
                            message.operationType = 0;
                            break;
                        case "CREATE_CLUSTER":
                        case 1:
                            message.operationType = 1;
                            break;
                        case "DELETE_CLUSTER":
                        case 2:
                            message.operationType = 2;
                            break;
                        case "UPGRADE_MASTER":
                        case 3:
                            message.operationType = 3;
                            break;
                        case "UPGRADE_NODES":
                        case 4:
                            message.operationType = 4;
                            break;
                        case "REPAIR_CLUSTER":
                        case 5:
                            message.operationType = 5;
                            break;
                        case "UPDATE_CLUSTER":
                        case 6:
                            message.operationType = 6;
                            break;
                        case "CREATE_NODE_POOL":
                        case 7:
                            message.operationType = 7;
                            break;
                        case "DELETE_NODE_POOL":
                        case 8:
                            message.operationType = 8;
                            break;
                        case "SET_NODE_POOL_MANAGEMENT":
                        case 9:
                            message.operationType = 9;
                            break;
                        case "AUTO_REPAIR_NODES":
                        case 10:
                            message.operationType = 10;
                            break;
                        case "AUTO_UPGRADE_NODES":
                        case 11:
                            message.operationType = 11;
                            break;
                        case "SET_LABELS":
                        case 12:
                            message.operationType = 12;
                            break;
                        case "SET_MASTER_AUTH":
                        case 13:
                            message.operationType = 13;
                            break;
                        case "SET_NODE_POOL_SIZE":
                        case 14:
                            message.operationType = 14;
                            break;
                        case "SET_NETWORK_POLICY":
                        case 15:
                            message.operationType = 15;
                            break;
                        case "SET_MAINTENANCE_POLICY":
                        case 16:
                            message.operationType = 16;
                            break;
                        }
                        switch (object.status) {
                        default:
                            if (typeof object.status === "number") {
                                message.status = object.status;
                                break;
                            }
                            break;
                        case "STATUS_UNSPECIFIED":
                        case 0:
                            message.status = 0;
                            break;
                        case "PENDING":
                        case 1:
                            message.status = 1;
                            break;
                        case "RUNNING":
                        case 2:
                            message.status = 2;
                            break;
                        case "DONE":
                        case 3:
                            message.status = 3;
                            break;
                        case "ABORTING":
                        case 4:
                            message.status = 4;
                            break;
                        }
                        if (object.detail != null)
                            message.detail = String(object.detail);
                        if (object.statusMessage != null)
                            message.statusMessage = String(object.statusMessage);
                        if (object.selfLink != null)
                            message.selfLink = String(object.selfLink);
                        if (object.targetLink != null)
                            message.targetLink = String(object.targetLink);
                        if (object.location != null)
                            message.location = String(object.location);
                        if (object.startTime != null)
                            message.startTime = String(object.startTime);
                        if (object.endTime != null)
                            message.endTime = String(object.endTime);
                        if (object.progress != null) {
                            if (typeof object.progress !== "object")
                                throw TypeError(".google.container.v1.Operation.progress: object expected");
                            message.progress = $root.google.container.v1.OperationProgress.fromObject(object.progress);
                        }
                        if (object.clusterConditions) {
                            if (!Array.isArray(object.clusterConditions))
                                throw TypeError(".google.container.v1.Operation.clusterConditions: array expected");
                            message.clusterConditions = [];
                            for (var i = 0; i < object.clusterConditions.length; ++i) {
                                if (typeof object.clusterConditions[i] !== "object")
                                    throw TypeError(".google.container.v1.Operation.clusterConditions: object expected");
                                message.clusterConditions[i] = $root.google.container.v1.StatusCondition.fromObject(object.clusterConditions[i]);
                            }
                        }
                        if (object.nodepoolConditions) {
                            if (!Array.isArray(object.nodepoolConditions))
                                throw TypeError(".google.container.v1.Operation.nodepoolConditions: array expected");
                            message.nodepoolConditions = [];
                            for (var i = 0; i < object.nodepoolConditions.length; ++i) {
                                if (typeof object.nodepoolConditions[i] !== "object")
                                    throw TypeError(".google.container.v1.Operation.nodepoolConditions: object expected");
                                message.nodepoolConditions[i] = $root.google.container.v1.StatusCondition.fromObject(object.nodepoolConditions[i]);
                            }
                        }
                        if (object.error != null) {
                            if (typeof object.error !== "object")
                                throw TypeError(".google.container.v1.Operation.error: object expected");
                            message.error = $root.google.rpc.Status.fromObject(object.error);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Operation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.Operation
                     * @static
                     * @param {google.container.v1.Operation} message Operation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Operation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.clusterConditions = [];
                            object.nodepoolConditions = [];
                        }
                        if (options.defaults) {
                            object.name = "";
                            object.zone = "";
                            object.operationType = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                            object.status = options.enums === String ? "STATUS_UNSPECIFIED" : 0;
                            object.statusMessage = "";
                            object.selfLink = "";
                            object.targetLink = "";
                            object.detail = "";
                            object.location = "";
                            object.startTime = "";
                            object.endTime = "";
                            object.progress = null;
                            object.error = null;
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.operationType != null && message.hasOwnProperty("operationType"))
                            object.operationType = options.enums === String ? $root.google.container.v1.Operation.Type[message.operationType] === undefined ? message.operationType : $root.google.container.v1.Operation.Type[message.operationType] : message.operationType;
                        if (message.status != null && message.hasOwnProperty("status"))
                            object.status = options.enums === String ? $root.google.container.v1.Operation.Status[message.status] === undefined ? message.status : $root.google.container.v1.Operation.Status[message.status] : message.status;
                        if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                            object.statusMessage = message.statusMessage;
                        if (message.selfLink != null && message.hasOwnProperty("selfLink"))
                            object.selfLink = message.selfLink;
                        if (message.targetLink != null && message.hasOwnProperty("targetLink"))
                            object.targetLink = message.targetLink;
                        if (message.detail != null && message.hasOwnProperty("detail"))
                            object.detail = message.detail;
                        if (message.location != null && message.hasOwnProperty("location"))
                            object.location = message.location;
                        if (message.startTime != null && message.hasOwnProperty("startTime"))
                            object.startTime = message.startTime;
                        if (message.endTime != null && message.hasOwnProperty("endTime"))
                            object.endTime = message.endTime;
                        if (message.progress != null && message.hasOwnProperty("progress"))
                            object.progress = $root.google.container.v1.OperationProgress.toObject(message.progress, options);
                        if (message.clusterConditions && message.clusterConditions.length) {
                            object.clusterConditions = [];
                            for (var j = 0; j < message.clusterConditions.length; ++j)
                                object.clusterConditions[j] = $root.google.container.v1.StatusCondition.toObject(message.clusterConditions[j], options);
                        }
                        if (message.nodepoolConditions && message.nodepoolConditions.length) {
                            object.nodepoolConditions = [];
                            for (var j = 0; j < message.nodepoolConditions.length; ++j)
                                object.nodepoolConditions[j] = $root.google.container.v1.StatusCondition.toObject(message.nodepoolConditions[j], options);
                        }
                        if (message.error != null && message.hasOwnProperty("error"))
                            object.error = $root.google.rpc.Status.toObject(message.error, options);
                        return object;
                    };
    
                    /**
                     * Converts this Operation to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.Operation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Operation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Operation
                     * @function getTypeUrl
                     * @memberof google.container.v1.Operation
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Operation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.Operation";
                    };
    
                    /**
                     * Status enum.
                     * @name google.container.v1.Operation.Status
                     * @enum {number}
                     * @property {number} STATUS_UNSPECIFIED=0 STATUS_UNSPECIFIED value
                     * @property {number} PENDING=1 PENDING value
                     * @property {number} RUNNING=2 RUNNING value
                     * @property {number} DONE=3 DONE value
                     * @property {number} ABORTING=4 ABORTING value
                     */
                    Operation.Status = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "STATUS_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "PENDING"] = 1;
                        values[valuesById[2] = "RUNNING"] = 2;
                        values[valuesById[3] = "DONE"] = 3;
                        values[valuesById[4] = "ABORTING"] = 4;
                        return values;
                    })();
    
                    /**
                     * Type enum.
                     * @name google.container.v1.Operation.Type
                     * @enum {number}
                     * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value
                     * @property {number} CREATE_CLUSTER=1 CREATE_CLUSTER value
                     * @property {number} DELETE_CLUSTER=2 DELETE_CLUSTER value
                     * @property {number} UPGRADE_MASTER=3 UPGRADE_MASTER value
                     * @property {number} UPGRADE_NODES=4 UPGRADE_NODES value
                     * @property {number} REPAIR_CLUSTER=5 REPAIR_CLUSTER value
                     * @property {number} UPDATE_CLUSTER=6 UPDATE_CLUSTER value
                     * @property {number} CREATE_NODE_POOL=7 CREATE_NODE_POOL value
                     * @property {number} DELETE_NODE_POOL=8 DELETE_NODE_POOL value
                     * @property {number} SET_NODE_POOL_MANAGEMENT=9 SET_NODE_POOL_MANAGEMENT value
                     * @property {number} AUTO_REPAIR_NODES=10 AUTO_REPAIR_NODES value
                     * @property {number} AUTO_UPGRADE_NODES=11 AUTO_UPGRADE_NODES value
                     * @property {number} SET_LABELS=12 SET_LABELS value
                     * @property {number} SET_MASTER_AUTH=13 SET_MASTER_AUTH value
                     * @property {number} SET_NODE_POOL_SIZE=14 SET_NODE_POOL_SIZE value
                     * @property {number} SET_NETWORK_POLICY=15 SET_NETWORK_POLICY value
                     * @property {number} SET_MAINTENANCE_POLICY=16 SET_MAINTENANCE_POLICY value
                     */
                    Operation.Type = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "CREATE_CLUSTER"] = 1;
                        values[valuesById[2] = "DELETE_CLUSTER"] = 2;
                        values[valuesById[3] = "UPGRADE_MASTER"] = 3;
                        values[valuesById[4] = "UPGRADE_NODES"] = 4;
                        values[valuesById[5] = "REPAIR_CLUSTER"] = 5;
                        values[valuesById[6] = "UPDATE_CLUSTER"] = 6;
                        values[valuesById[7] = "CREATE_NODE_POOL"] = 7;
                        values[valuesById[8] = "DELETE_NODE_POOL"] = 8;
                        values[valuesById[9] = "SET_NODE_POOL_MANAGEMENT"] = 9;
                        values[valuesById[10] = "AUTO_REPAIR_NODES"] = 10;
                        values[valuesById[11] = "AUTO_UPGRADE_NODES"] = 11;
                        values[valuesById[12] = "SET_LABELS"] = 12;
                        values[valuesById[13] = "SET_MASTER_AUTH"] = 13;
                        values[valuesById[14] = "SET_NODE_POOL_SIZE"] = 14;
                        values[valuesById[15] = "SET_NETWORK_POLICY"] = 15;
                        values[valuesById[16] = "SET_MAINTENANCE_POLICY"] = 16;
                        return values;
                    })();
    
                    return Operation;
                })();
    
                v1.OperationProgress = (function() {
    
                    /**
                     * Properties of an OperationProgress.
                     * @memberof google.container.v1
                     * @interface IOperationProgress
                     * @property {string|null} [name] OperationProgress name
                     * @property {google.container.v1.Operation.Status|null} [status] OperationProgress status
                     * @property {Array.<google.container.v1.OperationProgress.IMetric>|null} [metrics] OperationProgress metrics
                     * @property {Array.<google.container.v1.IOperationProgress>|null} [stages] OperationProgress stages
                     */
    
                    /**
                     * Constructs a new OperationProgress.
                     * @memberof google.container.v1
                     * @classdesc Represents an OperationProgress.
                     * @implements IOperationProgress
                     * @constructor
                     * @param {google.container.v1.IOperationProgress=} [properties] Properties to set
                     */
                    function OperationProgress(properties) {
                        this.metrics = [];
                        this.stages = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * OperationProgress name.
                     * @member {string} name
                     * @memberof google.container.v1.OperationProgress
                     * @instance
                     */
                    OperationProgress.prototype.name = "";
    
                    /**
                     * OperationProgress status.
                     * @member {google.container.v1.Operation.Status} status
                     * @memberof google.container.v1.OperationProgress
                     * @instance
                     */
                    OperationProgress.prototype.status = 0;
    
                    /**
                     * OperationProgress metrics.
                     * @member {Array.<google.container.v1.OperationProgress.IMetric>} metrics
                     * @memberof google.container.v1.OperationProgress
                     * @instance
                     */
                    OperationProgress.prototype.metrics = $util.emptyArray;
    
                    /**
                     * OperationProgress stages.
                     * @member {Array.<google.container.v1.IOperationProgress>} stages
                     * @memberof google.container.v1.OperationProgress
                     * @instance
                     */
                    OperationProgress.prototype.stages = $util.emptyArray;
    
                    /**
                     * Creates a new OperationProgress instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.OperationProgress
                     * @static
                     * @param {google.container.v1.IOperationProgress=} [properties] Properties to set
                     * @returns {google.container.v1.OperationProgress} OperationProgress instance
                     */
                    OperationProgress.create = function create(properties) {
                        return new OperationProgress(properties);
                    };
    
                    /**
                     * Encodes the specified OperationProgress message. Does not implicitly {@link google.container.v1.OperationProgress.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.OperationProgress
                     * @static
                     * @param {google.container.v1.IOperationProgress} message OperationProgress message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    OperationProgress.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                        if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.status);
                        if (message.metrics != null && message.metrics.length)
                            for (var i = 0; i < message.metrics.length; ++i)
                                $root.google.container.v1.OperationProgress.Metric.encode(message.metrics[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.stages != null && message.stages.length)
                            for (var i = 0; i < message.stages.length; ++i)
                                $root.google.container.v1.OperationProgress.encode(message.stages[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified OperationProgress message, length delimited. Does not implicitly {@link google.container.v1.OperationProgress.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.OperationProgress
                     * @static
                     * @param {google.container.v1.IOperationProgress} message OperationProgress message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    OperationProgress.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an OperationProgress message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.OperationProgress
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.OperationProgress} OperationProgress
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    OperationProgress.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.OperationProgress();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.status = reader.int32();
                                    break;
                                }
                            case 3: {
                                    if (!(message.metrics && message.metrics.length))
                                        message.metrics = [];
                                    message.metrics.push($root.google.container.v1.OperationProgress.Metric.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 4: {
                                    if (!(message.stages && message.stages.length))
                                        message.stages = [];
                                    message.stages.push($root.google.container.v1.OperationProgress.decode(reader, reader.uint32()));
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an OperationProgress message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.OperationProgress
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.OperationProgress} OperationProgress
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    OperationProgress.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an OperationProgress message.
                     * @function verify
                     * @memberof google.container.v1.OperationProgress
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    OperationProgress.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.status != null && message.hasOwnProperty("status"))
                            switch (message.status) {
                            default:
                                return "status: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                                break;
                            }
                        if (message.metrics != null && message.hasOwnProperty("metrics")) {
                            if (!Array.isArray(message.metrics))
                                return "metrics: array expected";
                            for (var i = 0; i < message.metrics.length; ++i) {
                                var error = $root.google.container.v1.OperationProgress.Metric.verify(message.metrics[i]);
                                if (error)
                                    return "metrics." + error;
                            }
                        }
                        if (message.stages != null && message.hasOwnProperty("stages")) {
                            if (!Array.isArray(message.stages))
                                return "stages: array expected";
                            for (var i = 0; i < message.stages.length; ++i) {
                                var error = $root.google.container.v1.OperationProgress.verify(message.stages[i]);
                                if (error)
                                    return "stages." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates an OperationProgress message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.OperationProgress
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.OperationProgress} OperationProgress
                     */
                    OperationProgress.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.OperationProgress)
                            return object;
                        var message = new $root.google.container.v1.OperationProgress();
                        if (object.name != null)
                            message.name = String(object.name);
                        switch (object.status) {
                        default:
                            if (typeof object.status === "number") {
                                message.status = object.status;
                                break;
                            }
                            break;
                        case "STATUS_UNSPECIFIED":
                        case 0:
                            message.status = 0;
                            break;
                        case "PENDING":
                        case 1:
                            message.status = 1;
                            break;
                        case "RUNNING":
                        case 2:
                            message.status = 2;
                            break;
                        case "DONE":
                        case 3:
                            message.status = 3;
                            break;
                        case "ABORTING":
                        case 4:
                            message.status = 4;
                            break;
                        }
                        if (object.metrics) {
                            if (!Array.isArray(object.metrics))
                                throw TypeError(".google.container.v1.OperationProgress.metrics: array expected");
                            message.metrics = [];
                            for (var i = 0; i < object.metrics.length; ++i) {
                                if (typeof object.metrics[i] !== "object")
                                    throw TypeError(".google.container.v1.OperationProgress.metrics: object expected");
                                message.metrics[i] = $root.google.container.v1.OperationProgress.Metric.fromObject(object.metrics[i]);
                            }
                        }
                        if (object.stages) {
                            if (!Array.isArray(object.stages))
                                throw TypeError(".google.container.v1.OperationProgress.stages: array expected");
                            message.stages = [];
                            for (var i = 0; i < object.stages.length; ++i) {
                                if (typeof object.stages[i] !== "object")
                                    throw TypeError(".google.container.v1.OperationProgress.stages: object expected");
                                message.stages[i] = $root.google.container.v1.OperationProgress.fromObject(object.stages[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an OperationProgress message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.OperationProgress
                     * @static
                     * @param {google.container.v1.OperationProgress} message OperationProgress
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    OperationProgress.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.metrics = [];
                            object.stages = [];
                        }
                        if (options.defaults) {
                            object.name = "";
                            object.status = options.enums === String ? "STATUS_UNSPECIFIED" : 0;
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.status != null && message.hasOwnProperty("status"))
                            object.status = options.enums === String ? $root.google.container.v1.Operation.Status[message.status] === undefined ? message.status : $root.google.container.v1.Operation.Status[message.status] : message.status;
                        if (message.metrics && message.metrics.length) {
                            object.metrics = [];
                            for (var j = 0; j < message.metrics.length; ++j)
                                object.metrics[j] = $root.google.container.v1.OperationProgress.Metric.toObject(message.metrics[j], options);
                        }
                        if (message.stages && message.stages.length) {
                            object.stages = [];
                            for (var j = 0; j < message.stages.length; ++j)
                                object.stages[j] = $root.google.container.v1.OperationProgress.toObject(message.stages[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this OperationProgress to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.OperationProgress
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    OperationProgress.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for OperationProgress
                     * @function getTypeUrl
                     * @memberof google.container.v1.OperationProgress
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    OperationProgress.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.OperationProgress";
                    };
    
                    OperationProgress.Metric = (function() {
    
                        /**
                         * Properties of a Metric.
                         * @memberof google.container.v1.OperationProgress
                         * @interface IMetric
                         * @property {string|null} [name] Metric name
                         * @property {number|Long|null} [intValue] Metric intValue
                         * @property {number|null} [doubleValue] Metric doubleValue
                         * @property {string|null} [stringValue] Metric stringValue
                         */
    
                        /**
                         * Constructs a new Metric.
                         * @memberof google.container.v1.OperationProgress
                         * @classdesc Represents a Metric.
                         * @implements IMetric
                         * @constructor
                         * @param {google.container.v1.OperationProgress.IMetric=} [properties] Properties to set
                         */
                        function Metric(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Metric name.
                         * @member {string} name
                         * @memberof google.container.v1.OperationProgress.Metric
                         * @instance
                         */
                        Metric.prototype.name = "";
    
                        /**
                         * Metric intValue.
                         * @member {number|Long|null|undefined} intValue
                         * @memberof google.container.v1.OperationProgress.Metric
                         * @instance
                         */
                        Metric.prototype.intValue = null;
    
                        /**
                         * Metric doubleValue.
                         * @member {number|null|undefined} doubleValue
                         * @memberof google.container.v1.OperationProgress.Metric
                         * @instance
                         */
                        Metric.prototype.doubleValue = null;
    
                        /**
                         * Metric stringValue.
                         * @member {string|null|undefined} stringValue
                         * @memberof google.container.v1.OperationProgress.Metric
                         * @instance
                         */
                        Metric.prototype.stringValue = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Metric value.
                         * @member {"intValue"|"doubleValue"|"stringValue"|undefined} value
                         * @memberof google.container.v1.OperationProgress.Metric
                         * @instance
                         */
                        Object.defineProperty(Metric.prototype, "value", {
                            get: $util.oneOfGetter($oneOfFields = ["intValue", "doubleValue", "stringValue"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Metric instance using the specified properties.
                         * @function create
                         * @memberof google.container.v1.OperationProgress.Metric
                         * @static
                         * @param {google.container.v1.OperationProgress.IMetric=} [properties] Properties to set
                         * @returns {google.container.v1.OperationProgress.Metric} Metric instance
                         */
                        Metric.create = function create(properties) {
                            return new Metric(properties);
                        };
    
                        /**
                         * Encodes the specified Metric message. Does not implicitly {@link google.container.v1.OperationProgress.Metric.verify|verify} messages.
                         * @function encode
                         * @memberof google.container.v1.OperationProgress.Metric
                         * @static
                         * @param {google.container.v1.OperationProgress.IMetric} message Metric message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Metric.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.intValue != null && Object.hasOwnProperty.call(message, "intValue"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.intValue);
                            if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                                writer.uint32(/* id 3, wireType 1 =*/25).double(message.doubleValue);
                            if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.stringValue);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Metric message, length delimited. Does not implicitly {@link google.container.v1.OperationProgress.Metric.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.container.v1.OperationProgress.Metric
                         * @static
                         * @param {google.container.v1.OperationProgress.IMetric} message Metric message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Metric.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Metric message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.container.v1.OperationProgress.Metric
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.container.v1.OperationProgress.Metric} Metric
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Metric.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.OperationProgress.Metric();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.intValue = reader.int64();
                                        break;
                                    }
                                case 3: {
                                        message.doubleValue = reader.double();
                                        break;
                                    }
                                case 4: {
                                        message.stringValue = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Metric message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.container.v1.OperationProgress.Metric
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.container.v1.OperationProgress.Metric} Metric
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Metric.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Metric message.
                         * @function verify
                         * @memberof google.container.v1.OperationProgress.Metric
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Metric.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.intValue != null && message.hasOwnProperty("intValue")) {
                                properties.value = 1;
                                if (!$util.isInteger(message.intValue) && !(message.intValue && $util.isInteger(message.intValue.low) && $util.isInteger(message.intValue.high)))
                                    return "intValue: integer|Long expected";
                            }
                            if (message.doubleValue != null && message.hasOwnProperty("doubleValue")) {
                                if (properties.value === 1)
                                    return "value: multiple values";
                                properties.value = 1;
                                if (typeof message.doubleValue !== "number")
                                    return "doubleValue: number expected";
                            }
                            if (message.stringValue != null && message.hasOwnProperty("stringValue")) {
                                if (properties.value === 1)
                                    return "value: multiple values";
                                properties.value = 1;
                                if (!$util.isString(message.stringValue))
                                    return "stringValue: string expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Metric message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.container.v1.OperationProgress.Metric
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.container.v1.OperationProgress.Metric} Metric
                         */
                        Metric.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.container.v1.OperationProgress.Metric)
                                return object;
                            var message = new $root.google.container.v1.OperationProgress.Metric();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.intValue != null)
                                if ($util.Long)
                                    (message.intValue = $util.Long.fromValue(object.intValue)).unsigned = false;
                                else if (typeof object.intValue === "string")
                                    message.intValue = parseInt(object.intValue, 10);
                                else if (typeof object.intValue === "number")
                                    message.intValue = object.intValue;
                                else if (typeof object.intValue === "object")
                                    message.intValue = new $util.LongBits(object.intValue.low >>> 0, object.intValue.high >>> 0).toNumber();
                            if (object.doubleValue != null)
                                message.doubleValue = Number(object.doubleValue);
                            if (object.stringValue != null)
                                message.stringValue = String(object.stringValue);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Metric message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.container.v1.OperationProgress.Metric
                         * @static
                         * @param {google.container.v1.OperationProgress.Metric} message Metric
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Metric.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.intValue != null && message.hasOwnProperty("intValue")) {
                                if (typeof message.intValue === "number")
                                    object.intValue = options.longs === String ? String(message.intValue) : message.intValue;
                                else
                                    object.intValue = options.longs === String ? $util.Long.prototype.toString.call(message.intValue) : options.longs === Number ? new $util.LongBits(message.intValue.low >>> 0, message.intValue.high >>> 0).toNumber() : message.intValue;
                                if (options.oneofs)
                                    object.value = "intValue";
                            }
                            if (message.doubleValue != null && message.hasOwnProperty("doubleValue")) {
                                object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                                if (options.oneofs)
                                    object.value = "doubleValue";
                            }
                            if (message.stringValue != null && message.hasOwnProperty("stringValue")) {
                                object.stringValue = message.stringValue;
                                if (options.oneofs)
                                    object.value = "stringValue";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Metric to JSON.
                         * @function toJSON
                         * @memberof google.container.v1.OperationProgress.Metric
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Metric.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Metric
                         * @function getTypeUrl
                         * @memberof google.container.v1.OperationProgress.Metric
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Metric.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.container.v1.OperationProgress.Metric";
                        };
    
                        return Metric;
                    })();
    
                    return OperationProgress;
                })();
    
                v1.CreateClusterRequest = (function() {
    
                    /**
                     * Properties of a CreateClusterRequest.
                     * @memberof google.container.v1
                     * @interface ICreateClusterRequest
                     * @property {string|null} [projectId] CreateClusterRequest projectId
                     * @property {string|null} [zone] CreateClusterRequest zone
                     * @property {google.container.v1.ICluster|null} [cluster] CreateClusterRequest cluster
                     * @property {string|null} [parent] CreateClusterRequest parent
                     */
    
                    /**
                     * Constructs a new CreateClusterRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a CreateClusterRequest.
                     * @implements ICreateClusterRequest
                     * @constructor
                     * @param {google.container.v1.ICreateClusterRequest=} [properties] Properties to set
                     */
                    function CreateClusterRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * CreateClusterRequest projectId.
                     * @member {string} projectId
                     * @memberof google.container.v1.CreateClusterRequest
                     * @instance
                     */
                    CreateClusterRequest.prototype.projectId = "";
    
                    /**
                     * CreateClusterRequest zone.
                     * @member {string} zone
                     * @memberof google.container.v1.CreateClusterRequest
                     * @instance
                     */
                    CreateClusterRequest.prototype.zone = "";
    
                    /**
                     * CreateClusterRequest cluster.
                     * @member {google.container.v1.ICluster|null|undefined} cluster
                     * @memberof google.container.v1.CreateClusterRequest
                     * @instance
                     */
                    CreateClusterRequest.prototype.cluster = null;
    
                    /**
                     * CreateClusterRequest parent.
                     * @member {string} parent
                     * @memberof google.container.v1.CreateClusterRequest
                     * @instance
                     */
                    CreateClusterRequest.prototype.parent = "";
    
                    /**
                     * Creates a new CreateClusterRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.CreateClusterRequest
                     * @static
                     * @param {google.container.v1.ICreateClusterRequest=} [properties] Properties to set
                     * @returns {google.container.v1.CreateClusterRequest} CreateClusterRequest instance
                     */
                    CreateClusterRequest.create = function create(properties) {
                        return new CreateClusterRequest(properties);
                    };
    
                    /**
                     * Encodes the specified CreateClusterRequest message. Does not implicitly {@link google.container.v1.CreateClusterRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.CreateClusterRequest
                     * @static
                     * @param {google.container.v1.ICreateClusterRequest} message CreateClusterRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CreateClusterRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.cluster != null && Object.hasOwnProperty.call(message, "cluster"))
                            $root.google.container.v1.Cluster.encode(message.cluster, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.parent);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified CreateClusterRequest message, length delimited. Does not implicitly {@link google.container.v1.CreateClusterRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.CreateClusterRequest
                     * @static
                     * @param {google.container.v1.ICreateClusterRequest} message CreateClusterRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CreateClusterRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a CreateClusterRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.CreateClusterRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.CreateClusterRequest} CreateClusterRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CreateClusterRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.CreateClusterRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.projectId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.cluster = $root.google.container.v1.Cluster.decode(reader, reader.uint32());
                                    break;
                                }
                            case 5: {
                                    message.parent = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a CreateClusterRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.CreateClusterRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.CreateClusterRequest} CreateClusterRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CreateClusterRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a CreateClusterRequest message.
                     * @function verify
                     * @memberof google.container.v1.CreateClusterRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    CreateClusterRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            if (!$util.isString(message.projectId))
                                return "projectId: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.cluster != null && message.hasOwnProperty("cluster")) {
                            var error = $root.google.container.v1.Cluster.verify(message.cluster);
                            if (error)
                                return "cluster." + error;
                        }
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            if (!$util.isString(message.parent))
                                return "parent: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a CreateClusterRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.CreateClusterRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.CreateClusterRequest} CreateClusterRequest
                     */
                    CreateClusterRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.CreateClusterRequest)
                            return object;
                        var message = new $root.google.container.v1.CreateClusterRequest();
                        if (object.projectId != null)
                            message.projectId = String(object.projectId);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.cluster != null) {
                            if (typeof object.cluster !== "object")
                                throw TypeError(".google.container.v1.CreateClusterRequest.cluster: object expected");
                            message.cluster = $root.google.container.v1.Cluster.fromObject(object.cluster);
                        }
                        if (object.parent != null)
                            message.parent = String(object.parent);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a CreateClusterRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.CreateClusterRequest
                     * @static
                     * @param {google.container.v1.CreateClusterRequest} message CreateClusterRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    CreateClusterRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.projectId = "";
                            object.zone = "";
                            object.cluster = null;
                            object.parent = "";
                        }
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            object.projectId = message.projectId;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.cluster != null && message.hasOwnProperty("cluster"))
                            object.cluster = $root.google.container.v1.Cluster.toObject(message.cluster, options);
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            object.parent = message.parent;
                        return object;
                    };
    
                    /**
                     * Converts this CreateClusterRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.CreateClusterRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    CreateClusterRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for CreateClusterRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.CreateClusterRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    CreateClusterRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.CreateClusterRequest";
                    };
    
                    return CreateClusterRequest;
                })();
    
                v1.GetClusterRequest = (function() {
    
                    /**
                     * Properties of a GetClusterRequest.
                     * @memberof google.container.v1
                     * @interface IGetClusterRequest
                     * @property {string|null} [projectId] GetClusterRequest projectId
                     * @property {string|null} [zone] GetClusterRequest zone
                     * @property {string|null} [clusterId] GetClusterRequest clusterId
                     * @property {string|null} [name] GetClusterRequest name
                     */
    
                    /**
                     * Constructs a new GetClusterRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a GetClusterRequest.
                     * @implements IGetClusterRequest
                     * @constructor
                     * @param {google.container.v1.IGetClusterRequest=} [properties] Properties to set
                     */
                    function GetClusterRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GetClusterRequest projectId.
                     * @member {string} projectId
                     * @memberof google.container.v1.GetClusterRequest
                     * @instance
                     */
                    GetClusterRequest.prototype.projectId = "";
    
                    /**
                     * GetClusterRequest zone.
                     * @member {string} zone
                     * @memberof google.container.v1.GetClusterRequest
                     * @instance
                     */
                    GetClusterRequest.prototype.zone = "";
    
                    /**
                     * GetClusterRequest clusterId.
                     * @member {string} clusterId
                     * @memberof google.container.v1.GetClusterRequest
                     * @instance
                     */
                    GetClusterRequest.prototype.clusterId = "";
    
                    /**
                     * GetClusterRequest name.
                     * @member {string} name
                     * @memberof google.container.v1.GetClusterRequest
                     * @instance
                     */
                    GetClusterRequest.prototype.name = "";
    
                    /**
                     * Creates a new GetClusterRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.GetClusterRequest
                     * @static
                     * @param {google.container.v1.IGetClusterRequest=} [properties] Properties to set
                     * @returns {google.container.v1.GetClusterRequest} GetClusterRequest instance
                     */
                    GetClusterRequest.create = function create(properties) {
                        return new GetClusterRequest(properties);
                    };
    
                    /**
                     * Encodes the specified GetClusterRequest message. Does not implicitly {@link google.container.v1.GetClusterRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.GetClusterRequest
                     * @static
                     * @param {google.container.v1.IGetClusterRequest} message GetClusterRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetClusterRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.clusterId != null && Object.hasOwnProperty.call(message, "clusterId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.clusterId);
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GetClusterRequest message, length delimited. Does not implicitly {@link google.container.v1.GetClusterRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.GetClusterRequest
                     * @static
                     * @param {google.container.v1.IGetClusterRequest} message GetClusterRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetClusterRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GetClusterRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.GetClusterRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.GetClusterRequest} GetClusterRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetClusterRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.GetClusterRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.projectId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.clusterId = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GetClusterRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.GetClusterRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.GetClusterRequest} GetClusterRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetClusterRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GetClusterRequest message.
                     * @function verify
                     * @memberof google.container.v1.GetClusterRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GetClusterRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            if (!$util.isString(message.projectId))
                                return "projectId: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            if (!$util.isString(message.clusterId))
                                return "clusterId: string expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a GetClusterRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.GetClusterRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.GetClusterRequest} GetClusterRequest
                     */
                    GetClusterRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.GetClusterRequest)
                            return object;
                        var message = new $root.google.container.v1.GetClusterRequest();
                        if (object.projectId != null)
                            message.projectId = String(object.projectId);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.clusterId != null)
                            message.clusterId = String(object.clusterId);
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GetClusterRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.GetClusterRequest
                     * @static
                     * @param {google.container.v1.GetClusterRequest} message GetClusterRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GetClusterRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.projectId = "";
                            object.zone = "";
                            object.clusterId = "";
                            object.name = "";
                        }
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            object.projectId = message.projectId;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            object.clusterId = message.clusterId;
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this GetClusterRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.GetClusterRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GetClusterRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GetClusterRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.GetClusterRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GetClusterRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.GetClusterRequest";
                    };
    
                    return GetClusterRequest;
                })();
    
                v1.UpdateClusterRequest = (function() {
    
                    /**
                     * Properties of an UpdateClusterRequest.
                     * @memberof google.container.v1
                     * @interface IUpdateClusterRequest
                     * @property {string|null} [projectId] UpdateClusterRequest projectId
                     * @property {string|null} [zone] UpdateClusterRequest zone
                     * @property {string|null} [clusterId] UpdateClusterRequest clusterId
                     * @property {google.container.v1.IClusterUpdate|null} [update] UpdateClusterRequest update
                     * @property {string|null} [name] UpdateClusterRequest name
                     */
    
                    /**
                     * Constructs a new UpdateClusterRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents an UpdateClusterRequest.
                     * @implements IUpdateClusterRequest
                     * @constructor
                     * @param {google.container.v1.IUpdateClusterRequest=} [properties] Properties to set
                     */
                    function UpdateClusterRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * UpdateClusterRequest projectId.
                     * @member {string} projectId
                     * @memberof google.container.v1.UpdateClusterRequest
                     * @instance
                     */
                    UpdateClusterRequest.prototype.projectId = "";
    
                    /**
                     * UpdateClusterRequest zone.
                     * @member {string} zone
                     * @memberof google.container.v1.UpdateClusterRequest
                     * @instance
                     */
                    UpdateClusterRequest.prototype.zone = "";
    
                    /**
                     * UpdateClusterRequest clusterId.
                     * @member {string} clusterId
                     * @memberof google.container.v1.UpdateClusterRequest
                     * @instance
                     */
                    UpdateClusterRequest.prototype.clusterId = "";
    
                    /**
                     * UpdateClusterRequest update.
                     * @member {google.container.v1.IClusterUpdate|null|undefined} update
                     * @memberof google.container.v1.UpdateClusterRequest
                     * @instance
                     */
                    UpdateClusterRequest.prototype.update = null;
    
                    /**
                     * UpdateClusterRequest name.
                     * @member {string} name
                     * @memberof google.container.v1.UpdateClusterRequest
                     * @instance
                     */
                    UpdateClusterRequest.prototype.name = "";
    
                    /**
                     * Creates a new UpdateClusterRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.UpdateClusterRequest
                     * @static
                     * @param {google.container.v1.IUpdateClusterRequest=} [properties] Properties to set
                     * @returns {google.container.v1.UpdateClusterRequest} UpdateClusterRequest instance
                     */
                    UpdateClusterRequest.create = function create(properties) {
                        return new UpdateClusterRequest(properties);
                    };
    
                    /**
                     * Encodes the specified UpdateClusterRequest message. Does not implicitly {@link google.container.v1.UpdateClusterRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.UpdateClusterRequest
                     * @static
                     * @param {google.container.v1.IUpdateClusterRequest} message UpdateClusterRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateClusterRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.clusterId != null && Object.hasOwnProperty.call(message, "clusterId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.clusterId);
                        if (message.update != null && Object.hasOwnProperty.call(message, "update"))
                            $root.google.container.v1.ClusterUpdate.encode(message.update, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified UpdateClusterRequest message, length delimited. Does not implicitly {@link google.container.v1.UpdateClusterRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.UpdateClusterRequest
                     * @static
                     * @param {google.container.v1.IUpdateClusterRequest} message UpdateClusterRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateClusterRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an UpdateClusterRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.UpdateClusterRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.UpdateClusterRequest} UpdateClusterRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateClusterRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.UpdateClusterRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.projectId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.clusterId = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.update = $root.google.container.v1.ClusterUpdate.decode(reader, reader.uint32());
                                    break;
                                }
                            case 5: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an UpdateClusterRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.UpdateClusterRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.UpdateClusterRequest} UpdateClusterRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateClusterRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an UpdateClusterRequest message.
                     * @function verify
                     * @memberof google.container.v1.UpdateClusterRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    UpdateClusterRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            if (!$util.isString(message.projectId))
                                return "projectId: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            if (!$util.isString(message.clusterId))
                                return "clusterId: string expected";
                        if (message.update != null && message.hasOwnProperty("update")) {
                            var error = $root.google.container.v1.ClusterUpdate.verify(message.update);
                            if (error)
                                return "update." + error;
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates an UpdateClusterRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.UpdateClusterRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.UpdateClusterRequest} UpdateClusterRequest
                     */
                    UpdateClusterRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.UpdateClusterRequest)
                            return object;
                        var message = new $root.google.container.v1.UpdateClusterRequest();
                        if (object.projectId != null)
                            message.projectId = String(object.projectId);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.clusterId != null)
                            message.clusterId = String(object.clusterId);
                        if (object.update != null) {
                            if (typeof object.update !== "object")
                                throw TypeError(".google.container.v1.UpdateClusterRequest.update: object expected");
                            message.update = $root.google.container.v1.ClusterUpdate.fromObject(object.update);
                        }
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an UpdateClusterRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.UpdateClusterRequest
                     * @static
                     * @param {google.container.v1.UpdateClusterRequest} message UpdateClusterRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    UpdateClusterRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.projectId = "";
                            object.zone = "";
                            object.clusterId = "";
                            object.update = null;
                            object.name = "";
                        }
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            object.projectId = message.projectId;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            object.clusterId = message.clusterId;
                        if (message.update != null && message.hasOwnProperty("update"))
                            object.update = $root.google.container.v1.ClusterUpdate.toObject(message.update, options);
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this UpdateClusterRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.UpdateClusterRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    UpdateClusterRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for UpdateClusterRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.UpdateClusterRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    UpdateClusterRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.UpdateClusterRequest";
                    };
    
                    return UpdateClusterRequest;
                })();
    
                v1.UpdateNodePoolRequest = (function() {
    
                    /**
                     * Properties of an UpdateNodePoolRequest.
                     * @memberof google.container.v1
                     * @interface IUpdateNodePoolRequest
                     * @property {string|null} [projectId] UpdateNodePoolRequest projectId
                     * @property {string|null} [zone] UpdateNodePoolRequest zone
                     * @property {string|null} [clusterId] UpdateNodePoolRequest clusterId
                     * @property {string|null} [nodePoolId] UpdateNodePoolRequest nodePoolId
                     * @property {string|null} [nodeVersion] UpdateNodePoolRequest nodeVersion
                     * @property {string|null} [imageType] UpdateNodePoolRequest imageType
                     * @property {string|null} [name] UpdateNodePoolRequest name
                     * @property {Array.<string>|null} [locations] UpdateNodePoolRequest locations
                     * @property {google.container.v1.IWorkloadMetadataConfig|null} [workloadMetadataConfig] UpdateNodePoolRequest workloadMetadataConfig
                     * @property {google.container.v1.NodePool.IUpgradeSettings|null} [upgradeSettings] UpdateNodePoolRequest upgradeSettings
                     * @property {google.container.v1.INetworkTags|null} [tags] UpdateNodePoolRequest tags
                     * @property {google.container.v1.INodeTaints|null} [taints] UpdateNodePoolRequest taints
                     * @property {google.container.v1.INodeLabels|null} [labels] UpdateNodePoolRequest labels
                     * @property {google.container.v1.ILinuxNodeConfig|null} [linuxNodeConfig] UpdateNodePoolRequest linuxNodeConfig
                     * @property {google.container.v1.INodeKubeletConfig|null} [kubeletConfig] UpdateNodePoolRequest kubeletConfig
                     * @property {google.container.v1.INodeNetworkConfig|null} [nodeNetworkConfig] UpdateNodePoolRequest nodeNetworkConfig
                     * @property {google.container.v1.IGcfsConfig|null} [gcfsConfig] UpdateNodePoolRequest gcfsConfig
                     * @property {google.container.v1.IConfidentialNodes|null} [confidentialNodes] UpdateNodePoolRequest confidentialNodes
                     * @property {google.container.v1.IVirtualNIC|null} [gvnic] UpdateNodePoolRequest gvnic
                     * @property {google.container.v1.INodePoolLoggingConfig|null} [loggingConfig] UpdateNodePoolRequest loggingConfig
                     * @property {google.container.v1.IResourceLabels|null} [resourceLabels] UpdateNodePoolRequest resourceLabels
                     */
    
                    /**
                     * Constructs a new UpdateNodePoolRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents an UpdateNodePoolRequest.
                     * @implements IUpdateNodePoolRequest
                     * @constructor
                     * @param {google.container.v1.IUpdateNodePoolRequest=} [properties] Properties to set
                     */
                    function UpdateNodePoolRequest(properties) {
                        this.locations = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * UpdateNodePoolRequest projectId.
                     * @member {string} projectId
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @instance
                     */
                    UpdateNodePoolRequest.prototype.projectId = "";
    
                    /**
                     * UpdateNodePoolRequest zone.
                     * @member {string} zone
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @instance
                     */
                    UpdateNodePoolRequest.prototype.zone = "";
    
                    /**
                     * UpdateNodePoolRequest clusterId.
                     * @member {string} clusterId
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @instance
                     */
                    UpdateNodePoolRequest.prototype.clusterId = "";
    
                    /**
                     * UpdateNodePoolRequest nodePoolId.
                     * @member {string} nodePoolId
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @instance
                     */
                    UpdateNodePoolRequest.prototype.nodePoolId = "";
    
                    /**
                     * UpdateNodePoolRequest nodeVersion.
                     * @member {string} nodeVersion
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @instance
                     */
                    UpdateNodePoolRequest.prototype.nodeVersion = "";
    
                    /**
                     * UpdateNodePoolRequest imageType.
                     * @member {string} imageType
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @instance
                     */
                    UpdateNodePoolRequest.prototype.imageType = "";
    
                    /**
                     * UpdateNodePoolRequest name.
                     * @member {string} name
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @instance
                     */
                    UpdateNodePoolRequest.prototype.name = "";
    
                    /**
                     * UpdateNodePoolRequest locations.
                     * @member {Array.<string>} locations
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @instance
                     */
                    UpdateNodePoolRequest.prototype.locations = $util.emptyArray;
    
                    /**
                     * UpdateNodePoolRequest workloadMetadataConfig.
                     * @member {google.container.v1.IWorkloadMetadataConfig|null|undefined} workloadMetadataConfig
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @instance
                     */
                    UpdateNodePoolRequest.prototype.workloadMetadataConfig = null;
    
                    /**
                     * UpdateNodePoolRequest upgradeSettings.
                     * @member {google.container.v1.NodePool.IUpgradeSettings|null|undefined} upgradeSettings
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @instance
                     */
                    UpdateNodePoolRequest.prototype.upgradeSettings = null;
    
                    /**
                     * UpdateNodePoolRequest tags.
                     * @member {google.container.v1.INetworkTags|null|undefined} tags
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @instance
                     */
                    UpdateNodePoolRequest.prototype.tags = null;
    
                    /**
                     * UpdateNodePoolRequest taints.
                     * @member {google.container.v1.INodeTaints|null|undefined} taints
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @instance
                     */
                    UpdateNodePoolRequest.prototype.taints = null;
    
                    /**
                     * UpdateNodePoolRequest labels.
                     * @member {google.container.v1.INodeLabels|null|undefined} labels
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @instance
                     */
                    UpdateNodePoolRequest.prototype.labels = null;
    
                    /**
                     * UpdateNodePoolRequest linuxNodeConfig.
                     * @member {google.container.v1.ILinuxNodeConfig|null|undefined} linuxNodeConfig
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @instance
                     */
                    UpdateNodePoolRequest.prototype.linuxNodeConfig = null;
    
                    /**
                     * UpdateNodePoolRequest kubeletConfig.
                     * @member {google.container.v1.INodeKubeletConfig|null|undefined} kubeletConfig
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @instance
                     */
                    UpdateNodePoolRequest.prototype.kubeletConfig = null;
    
                    /**
                     * UpdateNodePoolRequest nodeNetworkConfig.
                     * @member {google.container.v1.INodeNetworkConfig|null|undefined} nodeNetworkConfig
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @instance
                     */
                    UpdateNodePoolRequest.prototype.nodeNetworkConfig = null;
    
                    /**
                     * UpdateNodePoolRequest gcfsConfig.
                     * @member {google.container.v1.IGcfsConfig|null|undefined} gcfsConfig
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @instance
                     */
                    UpdateNodePoolRequest.prototype.gcfsConfig = null;
    
                    /**
                     * UpdateNodePoolRequest confidentialNodes.
                     * @member {google.container.v1.IConfidentialNodes|null|undefined} confidentialNodes
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @instance
                     */
                    UpdateNodePoolRequest.prototype.confidentialNodes = null;
    
                    /**
                     * UpdateNodePoolRequest gvnic.
                     * @member {google.container.v1.IVirtualNIC|null|undefined} gvnic
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @instance
                     */
                    UpdateNodePoolRequest.prototype.gvnic = null;
    
                    /**
                     * UpdateNodePoolRequest loggingConfig.
                     * @member {google.container.v1.INodePoolLoggingConfig|null|undefined} loggingConfig
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @instance
                     */
                    UpdateNodePoolRequest.prototype.loggingConfig = null;
    
                    /**
                     * UpdateNodePoolRequest resourceLabels.
                     * @member {google.container.v1.IResourceLabels|null|undefined} resourceLabels
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @instance
                     */
                    UpdateNodePoolRequest.prototype.resourceLabels = null;
    
                    /**
                     * Creates a new UpdateNodePoolRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @static
                     * @param {google.container.v1.IUpdateNodePoolRequest=} [properties] Properties to set
                     * @returns {google.container.v1.UpdateNodePoolRequest} UpdateNodePoolRequest instance
                     */
                    UpdateNodePoolRequest.create = function create(properties) {
                        return new UpdateNodePoolRequest(properties);
                    };
    
                    /**
                     * Encodes the specified UpdateNodePoolRequest message. Does not implicitly {@link google.container.v1.UpdateNodePoolRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @static
                     * @param {google.container.v1.IUpdateNodePoolRequest} message UpdateNodePoolRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateNodePoolRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.clusterId != null && Object.hasOwnProperty.call(message, "clusterId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.clusterId);
                        if (message.nodePoolId != null && Object.hasOwnProperty.call(message, "nodePoolId"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.nodePoolId);
                        if (message.nodeVersion != null && Object.hasOwnProperty.call(message, "nodeVersion"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.nodeVersion);
                        if (message.imageType != null && Object.hasOwnProperty.call(message, "imageType"))
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.imageType);
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 8, wireType 2 =*/66).string(message.name);
                        if (message.locations != null && message.locations.length)
                            for (var i = 0; i < message.locations.length; ++i)
                                writer.uint32(/* id 13, wireType 2 =*/106).string(message.locations[i]);
                        if (message.workloadMetadataConfig != null && Object.hasOwnProperty.call(message, "workloadMetadataConfig"))
                            $root.google.container.v1.WorkloadMetadataConfig.encode(message.workloadMetadataConfig, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                        if (message.upgradeSettings != null && Object.hasOwnProperty.call(message, "upgradeSettings"))
                            $root.google.container.v1.NodePool.UpgradeSettings.encode(message.upgradeSettings, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                        if (message.tags != null && Object.hasOwnProperty.call(message, "tags"))
                            $root.google.container.v1.NetworkTags.encode(message.tags, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();
                        if (message.taints != null && Object.hasOwnProperty.call(message, "taints"))
                            $root.google.container.v1.NodeTaints.encode(message.taints, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                        if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                            $root.google.container.v1.NodeLabels.encode(message.labels, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();
                        if (message.linuxNodeConfig != null && Object.hasOwnProperty.call(message, "linuxNodeConfig"))
                            $root.google.container.v1.LinuxNodeConfig.encode(message.linuxNodeConfig, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();
                        if (message.kubeletConfig != null && Object.hasOwnProperty.call(message, "kubeletConfig"))
                            $root.google.container.v1.NodeKubeletConfig.encode(message.kubeletConfig, writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();
                        if (message.nodeNetworkConfig != null && Object.hasOwnProperty.call(message, "nodeNetworkConfig"))
                            $root.google.container.v1.NodeNetworkConfig.encode(message.nodeNetworkConfig, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                        if (message.gcfsConfig != null && Object.hasOwnProperty.call(message, "gcfsConfig"))
                            $root.google.container.v1.GcfsConfig.encode(message.gcfsConfig, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
                        if (message.confidentialNodes != null && Object.hasOwnProperty.call(message, "confidentialNodes"))
                            $root.google.container.v1.ConfidentialNodes.encode(message.confidentialNodes, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                        if (message.gvnic != null && Object.hasOwnProperty.call(message, "gvnic"))
                            $root.google.container.v1.VirtualNIC.encode(message.gvnic, writer.uint32(/* id 29, wireType 2 =*/234).fork()).ldelim();
                        if (message.loggingConfig != null && Object.hasOwnProperty.call(message, "loggingConfig"))
                            $root.google.container.v1.NodePoolLoggingConfig.encode(message.loggingConfig, writer.uint32(/* id 32, wireType 2 =*/258).fork()).ldelim();
                        if (message.resourceLabels != null && Object.hasOwnProperty.call(message, "resourceLabels"))
                            $root.google.container.v1.ResourceLabels.encode(message.resourceLabels, writer.uint32(/* id 33, wireType 2 =*/266).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified UpdateNodePoolRequest message, length delimited. Does not implicitly {@link google.container.v1.UpdateNodePoolRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @static
                     * @param {google.container.v1.IUpdateNodePoolRequest} message UpdateNodePoolRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateNodePoolRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an UpdateNodePoolRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.UpdateNodePoolRequest} UpdateNodePoolRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateNodePoolRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.UpdateNodePoolRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.projectId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.clusterId = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.nodePoolId = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.nodeVersion = reader.string();
                                    break;
                                }
                            case 6: {
                                    message.imageType = reader.string();
                                    break;
                                }
                            case 8: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 13: {
                                    if (!(message.locations && message.locations.length))
                                        message.locations = [];
                                    message.locations.push(reader.string());
                                    break;
                                }
                            case 14: {
                                    message.workloadMetadataConfig = $root.google.container.v1.WorkloadMetadataConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 15: {
                                    message.upgradeSettings = $root.google.container.v1.NodePool.UpgradeSettings.decode(reader, reader.uint32());
                                    break;
                                }
                            case 16: {
                                    message.tags = $root.google.container.v1.NetworkTags.decode(reader, reader.uint32());
                                    break;
                                }
                            case 17: {
                                    message.taints = $root.google.container.v1.NodeTaints.decode(reader, reader.uint32());
                                    break;
                                }
                            case 18: {
                                    message.labels = $root.google.container.v1.NodeLabels.decode(reader, reader.uint32());
                                    break;
                                }
                            case 19: {
                                    message.linuxNodeConfig = $root.google.container.v1.LinuxNodeConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 20: {
                                    message.kubeletConfig = $root.google.container.v1.NodeKubeletConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 21: {
                                    message.nodeNetworkConfig = $root.google.container.v1.NodeNetworkConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 22: {
                                    message.gcfsConfig = $root.google.container.v1.GcfsConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 23: {
                                    message.confidentialNodes = $root.google.container.v1.ConfidentialNodes.decode(reader, reader.uint32());
                                    break;
                                }
                            case 29: {
                                    message.gvnic = $root.google.container.v1.VirtualNIC.decode(reader, reader.uint32());
                                    break;
                                }
                            case 32: {
                                    message.loggingConfig = $root.google.container.v1.NodePoolLoggingConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 33: {
                                    message.resourceLabels = $root.google.container.v1.ResourceLabels.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an UpdateNodePoolRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.UpdateNodePoolRequest} UpdateNodePoolRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateNodePoolRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an UpdateNodePoolRequest message.
                     * @function verify
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    UpdateNodePoolRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            if (!$util.isString(message.projectId))
                                return "projectId: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            if (!$util.isString(message.clusterId))
                                return "clusterId: string expected";
                        if (message.nodePoolId != null && message.hasOwnProperty("nodePoolId"))
                            if (!$util.isString(message.nodePoolId))
                                return "nodePoolId: string expected";
                        if (message.nodeVersion != null && message.hasOwnProperty("nodeVersion"))
                            if (!$util.isString(message.nodeVersion))
                                return "nodeVersion: string expected";
                        if (message.imageType != null && message.hasOwnProperty("imageType"))
                            if (!$util.isString(message.imageType))
                                return "imageType: string expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.locations != null && message.hasOwnProperty("locations")) {
                            if (!Array.isArray(message.locations))
                                return "locations: array expected";
                            for (var i = 0; i < message.locations.length; ++i)
                                if (!$util.isString(message.locations[i]))
                                    return "locations: string[] expected";
                        }
                        if (message.workloadMetadataConfig != null && message.hasOwnProperty("workloadMetadataConfig")) {
                            var error = $root.google.container.v1.WorkloadMetadataConfig.verify(message.workloadMetadataConfig);
                            if (error)
                                return "workloadMetadataConfig." + error;
                        }
                        if (message.upgradeSettings != null && message.hasOwnProperty("upgradeSettings")) {
                            var error = $root.google.container.v1.NodePool.UpgradeSettings.verify(message.upgradeSettings);
                            if (error)
                                return "upgradeSettings." + error;
                        }
                        if (message.tags != null && message.hasOwnProperty("tags")) {
                            var error = $root.google.container.v1.NetworkTags.verify(message.tags);
                            if (error)
                                return "tags." + error;
                        }
                        if (message.taints != null && message.hasOwnProperty("taints")) {
                            var error = $root.google.container.v1.NodeTaints.verify(message.taints);
                            if (error)
                                return "taints." + error;
                        }
                        if (message.labels != null && message.hasOwnProperty("labels")) {
                            var error = $root.google.container.v1.NodeLabels.verify(message.labels);
                            if (error)
                                return "labels." + error;
                        }
                        if (message.linuxNodeConfig != null && message.hasOwnProperty("linuxNodeConfig")) {
                            var error = $root.google.container.v1.LinuxNodeConfig.verify(message.linuxNodeConfig);
                            if (error)
                                return "linuxNodeConfig." + error;
                        }
                        if (message.kubeletConfig != null && message.hasOwnProperty("kubeletConfig")) {
                            var error = $root.google.container.v1.NodeKubeletConfig.verify(message.kubeletConfig);
                            if (error)
                                return "kubeletConfig." + error;
                        }
                        if (message.nodeNetworkConfig != null && message.hasOwnProperty("nodeNetworkConfig")) {
                            var error = $root.google.container.v1.NodeNetworkConfig.verify(message.nodeNetworkConfig);
                            if (error)
                                return "nodeNetworkConfig." + error;
                        }
                        if (message.gcfsConfig != null && message.hasOwnProperty("gcfsConfig")) {
                            var error = $root.google.container.v1.GcfsConfig.verify(message.gcfsConfig);
                            if (error)
                                return "gcfsConfig." + error;
                        }
                        if (message.confidentialNodes != null && message.hasOwnProperty("confidentialNodes")) {
                            var error = $root.google.container.v1.ConfidentialNodes.verify(message.confidentialNodes);
                            if (error)
                                return "confidentialNodes." + error;
                        }
                        if (message.gvnic != null && message.hasOwnProperty("gvnic")) {
                            var error = $root.google.container.v1.VirtualNIC.verify(message.gvnic);
                            if (error)
                                return "gvnic." + error;
                        }
                        if (message.loggingConfig != null && message.hasOwnProperty("loggingConfig")) {
                            var error = $root.google.container.v1.NodePoolLoggingConfig.verify(message.loggingConfig);
                            if (error)
                                return "loggingConfig." + error;
                        }
                        if (message.resourceLabels != null && message.hasOwnProperty("resourceLabels")) {
                            var error = $root.google.container.v1.ResourceLabels.verify(message.resourceLabels);
                            if (error)
                                return "resourceLabels." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an UpdateNodePoolRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.UpdateNodePoolRequest} UpdateNodePoolRequest
                     */
                    UpdateNodePoolRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.UpdateNodePoolRequest)
                            return object;
                        var message = new $root.google.container.v1.UpdateNodePoolRequest();
                        if (object.projectId != null)
                            message.projectId = String(object.projectId);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.clusterId != null)
                            message.clusterId = String(object.clusterId);
                        if (object.nodePoolId != null)
                            message.nodePoolId = String(object.nodePoolId);
                        if (object.nodeVersion != null)
                            message.nodeVersion = String(object.nodeVersion);
                        if (object.imageType != null)
                            message.imageType = String(object.imageType);
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.locations) {
                            if (!Array.isArray(object.locations))
                                throw TypeError(".google.container.v1.UpdateNodePoolRequest.locations: array expected");
                            message.locations = [];
                            for (var i = 0; i < object.locations.length; ++i)
                                message.locations[i] = String(object.locations[i]);
                        }
                        if (object.workloadMetadataConfig != null) {
                            if (typeof object.workloadMetadataConfig !== "object")
                                throw TypeError(".google.container.v1.UpdateNodePoolRequest.workloadMetadataConfig: object expected");
                            message.workloadMetadataConfig = $root.google.container.v1.WorkloadMetadataConfig.fromObject(object.workloadMetadataConfig);
                        }
                        if (object.upgradeSettings != null) {
                            if (typeof object.upgradeSettings !== "object")
                                throw TypeError(".google.container.v1.UpdateNodePoolRequest.upgradeSettings: object expected");
                            message.upgradeSettings = $root.google.container.v1.NodePool.UpgradeSettings.fromObject(object.upgradeSettings);
                        }
                        if (object.tags != null) {
                            if (typeof object.tags !== "object")
                                throw TypeError(".google.container.v1.UpdateNodePoolRequest.tags: object expected");
                            message.tags = $root.google.container.v1.NetworkTags.fromObject(object.tags);
                        }
                        if (object.taints != null) {
                            if (typeof object.taints !== "object")
                                throw TypeError(".google.container.v1.UpdateNodePoolRequest.taints: object expected");
                            message.taints = $root.google.container.v1.NodeTaints.fromObject(object.taints);
                        }
                        if (object.labels != null) {
                            if (typeof object.labels !== "object")
                                throw TypeError(".google.container.v1.UpdateNodePoolRequest.labels: object expected");
                            message.labels = $root.google.container.v1.NodeLabels.fromObject(object.labels);
                        }
                        if (object.linuxNodeConfig != null) {
                            if (typeof object.linuxNodeConfig !== "object")
                                throw TypeError(".google.container.v1.UpdateNodePoolRequest.linuxNodeConfig: object expected");
                            message.linuxNodeConfig = $root.google.container.v1.LinuxNodeConfig.fromObject(object.linuxNodeConfig);
                        }
                        if (object.kubeletConfig != null) {
                            if (typeof object.kubeletConfig !== "object")
                                throw TypeError(".google.container.v1.UpdateNodePoolRequest.kubeletConfig: object expected");
                            message.kubeletConfig = $root.google.container.v1.NodeKubeletConfig.fromObject(object.kubeletConfig);
                        }
                        if (object.nodeNetworkConfig != null) {
                            if (typeof object.nodeNetworkConfig !== "object")
                                throw TypeError(".google.container.v1.UpdateNodePoolRequest.nodeNetworkConfig: object expected");
                            message.nodeNetworkConfig = $root.google.container.v1.NodeNetworkConfig.fromObject(object.nodeNetworkConfig);
                        }
                        if (object.gcfsConfig != null) {
                            if (typeof object.gcfsConfig !== "object")
                                throw TypeError(".google.container.v1.UpdateNodePoolRequest.gcfsConfig: object expected");
                            message.gcfsConfig = $root.google.container.v1.GcfsConfig.fromObject(object.gcfsConfig);
                        }
                        if (object.confidentialNodes != null) {
                            if (typeof object.confidentialNodes !== "object")
                                throw TypeError(".google.container.v1.UpdateNodePoolRequest.confidentialNodes: object expected");
                            message.confidentialNodes = $root.google.container.v1.ConfidentialNodes.fromObject(object.confidentialNodes);
                        }
                        if (object.gvnic != null) {
                            if (typeof object.gvnic !== "object")
                                throw TypeError(".google.container.v1.UpdateNodePoolRequest.gvnic: object expected");
                            message.gvnic = $root.google.container.v1.VirtualNIC.fromObject(object.gvnic);
                        }
                        if (object.loggingConfig != null) {
                            if (typeof object.loggingConfig !== "object")
                                throw TypeError(".google.container.v1.UpdateNodePoolRequest.loggingConfig: object expected");
                            message.loggingConfig = $root.google.container.v1.NodePoolLoggingConfig.fromObject(object.loggingConfig);
                        }
                        if (object.resourceLabels != null) {
                            if (typeof object.resourceLabels !== "object")
                                throw TypeError(".google.container.v1.UpdateNodePoolRequest.resourceLabels: object expected");
                            message.resourceLabels = $root.google.container.v1.ResourceLabels.fromObject(object.resourceLabels);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an UpdateNodePoolRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @static
                     * @param {google.container.v1.UpdateNodePoolRequest} message UpdateNodePoolRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    UpdateNodePoolRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.locations = [];
                        if (options.defaults) {
                            object.projectId = "";
                            object.zone = "";
                            object.clusterId = "";
                            object.nodePoolId = "";
                            object.nodeVersion = "";
                            object.imageType = "";
                            object.name = "";
                            object.workloadMetadataConfig = null;
                            object.upgradeSettings = null;
                            object.tags = null;
                            object.taints = null;
                            object.labels = null;
                            object.linuxNodeConfig = null;
                            object.kubeletConfig = null;
                            object.nodeNetworkConfig = null;
                            object.gcfsConfig = null;
                            object.confidentialNodes = null;
                            object.gvnic = null;
                            object.loggingConfig = null;
                            object.resourceLabels = null;
                        }
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            object.projectId = message.projectId;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            object.clusterId = message.clusterId;
                        if (message.nodePoolId != null && message.hasOwnProperty("nodePoolId"))
                            object.nodePoolId = message.nodePoolId;
                        if (message.nodeVersion != null && message.hasOwnProperty("nodeVersion"))
                            object.nodeVersion = message.nodeVersion;
                        if (message.imageType != null && message.hasOwnProperty("imageType"))
                            object.imageType = message.imageType;
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.locations && message.locations.length) {
                            object.locations = [];
                            for (var j = 0; j < message.locations.length; ++j)
                                object.locations[j] = message.locations[j];
                        }
                        if (message.workloadMetadataConfig != null && message.hasOwnProperty("workloadMetadataConfig"))
                            object.workloadMetadataConfig = $root.google.container.v1.WorkloadMetadataConfig.toObject(message.workloadMetadataConfig, options);
                        if (message.upgradeSettings != null && message.hasOwnProperty("upgradeSettings"))
                            object.upgradeSettings = $root.google.container.v1.NodePool.UpgradeSettings.toObject(message.upgradeSettings, options);
                        if (message.tags != null && message.hasOwnProperty("tags"))
                            object.tags = $root.google.container.v1.NetworkTags.toObject(message.tags, options);
                        if (message.taints != null && message.hasOwnProperty("taints"))
                            object.taints = $root.google.container.v1.NodeTaints.toObject(message.taints, options);
                        if (message.labels != null && message.hasOwnProperty("labels"))
                            object.labels = $root.google.container.v1.NodeLabels.toObject(message.labels, options);
                        if (message.linuxNodeConfig != null && message.hasOwnProperty("linuxNodeConfig"))
                            object.linuxNodeConfig = $root.google.container.v1.LinuxNodeConfig.toObject(message.linuxNodeConfig, options);
                        if (message.kubeletConfig != null && message.hasOwnProperty("kubeletConfig"))
                            object.kubeletConfig = $root.google.container.v1.NodeKubeletConfig.toObject(message.kubeletConfig, options);
                        if (message.nodeNetworkConfig != null && message.hasOwnProperty("nodeNetworkConfig"))
                            object.nodeNetworkConfig = $root.google.container.v1.NodeNetworkConfig.toObject(message.nodeNetworkConfig, options);
                        if (message.gcfsConfig != null && message.hasOwnProperty("gcfsConfig"))
                            object.gcfsConfig = $root.google.container.v1.GcfsConfig.toObject(message.gcfsConfig, options);
                        if (message.confidentialNodes != null && message.hasOwnProperty("confidentialNodes"))
                            object.confidentialNodes = $root.google.container.v1.ConfidentialNodes.toObject(message.confidentialNodes, options);
                        if (message.gvnic != null && message.hasOwnProperty("gvnic"))
                            object.gvnic = $root.google.container.v1.VirtualNIC.toObject(message.gvnic, options);
                        if (message.loggingConfig != null && message.hasOwnProperty("loggingConfig"))
                            object.loggingConfig = $root.google.container.v1.NodePoolLoggingConfig.toObject(message.loggingConfig, options);
                        if (message.resourceLabels != null && message.hasOwnProperty("resourceLabels"))
                            object.resourceLabels = $root.google.container.v1.ResourceLabels.toObject(message.resourceLabels, options);
                        return object;
                    };
    
                    /**
                     * Converts this UpdateNodePoolRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    UpdateNodePoolRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for UpdateNodePoolRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.UpdateNodePoolRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    UpdateNodePoolRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.UpdateNodePoolRequest";
                    };
    
                    return UpdateNodePoolRequest;
                })();
    
                v1.SetNodePoolAutoscalingRequest = (function() {
    
                    /**
                     * Properties of a SetNodePoolAutoscalingRequest.
                     * @memberof google.container.v1
                     * @interface ISetNodePoolAutoscalingRequest
                     * @property {string|null} [projectId] SetNodePoolAutoscalingRequest projectId
                     * @property {string|null} [zone] SetNodePoolAutoscalingRequest zone
                     * @property {string|null} [clusterId] SetNodePoolAutoscalingRequest clusterId
                     * @property {string|null} [nodePoolId] SetNodePoolAutoscalingRequest nodePoolId
                     * @property {google.container.v1.INodePoolAutoscaling|null} [autoscaling] SetNodePoolAutoscalingRequest autoscaling
                     * @property {string|null} [name] SetNodePoolAutoscalingRequest name
                     */
    
                    /**
                     * Constructs a new SetNodePoolAutoscalingRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a SetNodePoolAutoscalingRequest.
                     * @implements ISetNodePoolAutoscalingRequest
                     * @constructor
                     * @param {google.container.v1.ISetNodePoolAutoscalingRequest=} [properties] Properties to set
                     */
                    function SetNodePoolAutoscalingRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * SetNodePoolAutoscalingRequest projectId.
                     * @member {string} projectId
                     * @memberof google.container.v1.SetNodePoolAutoscalingRequest
                     * @instance
                     */
                    SetNodePoolAutoscalingRequest.prototype.projectId = "";
    
                    /**
                     * SetNodePoolAutoscalingRequest zone.
                     * @member {string} zone
                     * @memberof google.container.v1.SetNodePoolAutoscalingRequest
                     * @instance
                     */
                    SetNodePoolAutoscalingRequest.prototype.zone = "";
    
                    /**
                     * SetNodePoolAutoscalingRequest clusterId.
                     * @member {string} clusterId
                     * @memberof google.container.v1.SetNodePoolAutoscalingRequest
                     * @instance
                     */
                    SetNodePoolAutoscalingRequest.prototype.clusterId = "";
    
                    /**
                     * SetNodePoolAutoscalingRequest nodePoolId.
                     * @member {string} nodePoolId
                     * @memberof google.container.v1.SetNodePoolAutoscalingRequest
                     * @instance
                     */
                    SetNodePoolAutoscalingRequest.prototype.nodePoolId = "";
    
                    /**
                     * SetNodePoolAutoscalingRequest autoscaling.
                     * @member {google.container.v1.INodePoolAutoscaling|null|undefined} autoscaling
                     * @memberof google.container.v1.SetNodePoolAutoscalingRequest
                     * @instance
                     */
                    SetNodePoolAutoscalingRequest.prototype.autoscaling = null;
    
                    /**
                     * SetNodePoolAutoscalingRequest name.
                     * @member {string} name
                     * @memberof google.container.v1.SetNodePoolAutoscalingRequest
                     * @instance
                     */
                    SetNodePoolAutoscalingRequest.prototype.name = "";
    
                    /**
                     * Creates a new SetNodePoolAutoscalingRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.SetNodePoolAutoscalingRequest
                     * @static
                     * @param {google.container.v1.ISetNodePoolAutoscalingRequest=} [properties] Properties to set
                     * @returns {google.container.v1.SetNodePoolAutoscalingRequest} SetNodePoolAutoscalingRequest instance
                     */
                    SetNodePoolAutoscalingRequest.create = function create(properties) {
                        return new SetNodePoolAutoscalingRequest(properties);
                    };
    
                    /**
                     * Encodes the specified SetNodePoolAutoscalingRequest message. Does not implicitly {@link google.container.v1.SetNodePoolAutoscalingRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.SetNodePoolAutoscalingRequest
                     * @static
                     * @param {google.container.v1.ISetNodePoolAutoscalingRequest} message SetNodePoolAutoscalingRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SetNodePoolAutoscalingRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.clusterId != null && Object.hasOwnProperty.call(message, "clusterId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.clusterId);
                        if (message.nodePoolId != null && Object.hasOwnProperty.call(message, "nodePoolId"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.nodePoolId);
                        if (message.autoscaling != null && Object.hasOwnProperty.call(message, "autoscaling"))
                            $root.google.container.v1.NodePoolAutoscaling.encode(message.autoscaling, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified SetNodePoolAutoscalingRequest message, length delimited. Does not implicitly {@link google.container.v1.SetNodePoolAutoscalingRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.SetNodePoolAutoscalingRequest
                     * @static
                     * @param {google.container.v1.ISetNodePoolAutoscalingRequest} message SetNodePoolAutoscalingRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SetNodePoolAutoscalingRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a SetNodePoolAutoscalingRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.SetNodePoolAutoscalingRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.SetNodePoolAutoscalingRequest} SetNodePoolAutoscalingRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SetNodePoolAutoscalingRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.SetNodePoolAutoscalingRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.projectId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.clusterId = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.nodePoolId = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.autoscaling = $root.google.container.v1.NodePoolAutoscaling.decode(reader, reader.uint32());
                                    break;
                                }
                            case 6: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a SetNodePoolAutoscalingRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.SetNodePoolAutoscalingRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.SetNodePoolAutoscalingRequest} SetNodePoolAutoscalingRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SetNodePoolAutoscalingRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a SetNodePoolAutoscalingRequest message.
                     * @function verify
                     * @memberof google.container.v1.SetNodePoolAutoscalingRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    SetNodePoolAutoscalingRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            if (!$util.isString(message.projectId))
                                return "projectId: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            if (!$util.isString(message.clusterId))
                                return "clusterId: string expected";
                        if (message.nodePoolId != null && message.hasOwnProperty("nodePoolId"))
                            if (!$util.isString(message.nodePoolId))
                                return "nodePoolId: string expected";
                        if (message.autoscaling != null && message.hasOwnProperty("autoscaling")) {
                            var error = $root.google.container.v1.NodePoolAutoscaling.verify(message.autoscaling);
                            if (error)
                                return "autoscaling." + error;
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a SetNodePoolAutoscalingRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.SetNodePoolAutoscalingRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.SetNodePoolAutoscalingRequest} SetNodePoolAutoscalingRequest
                     */
                    SetNodePoolAutoscalingRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.SetNodePoolAutoscalingRequest)
                            return object;
                        var message = new $root.google.container.v1.SetNodePoolAutoscalingRequest();
                        if (object.projectId != null)
                            message.projectId = String(object.projectId);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.clusterId != null)
                            message.clusterId = String(object.clusterId);
                        if (object.nodePoolId != null)
                            message.nodePoolId = String(object.nodePoolId);
                        if (object.autoscaling != null) {
                            if (typeof object.autoscaling !== "object")
                                throw TypeError(".google.container.v1.SetNodePoolAutoscalingRequest.autoscaling: object expected");
                            message.autoscaling = $root.google.container.v1.NodePoolAutoscaling.fromObject(object.autoscaling);
                        }
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a SetNodePoolAutoscalingRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.SetNodePoolAutoscalingRequest
                     * @static
                     * @param {google.container.v1.SetNodePoolAutoscalingRequest} message SetNodePoolAutoscalingRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    SetNodePoolAutoscalingRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.projectId = "";
                            object.zone = "";
                            object.clusterId = "";
                            object.nodePoolId = "";
                            object.autoscaling = null;
                            object.name = "";
                        }
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            object.projectId = message.projectId;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            object.clusterId = message.clusterId;
                        if (message.nodePoolId != null && message.hasOwnProperty("nodePoolId"))
                            object.nodePoolId = message.nodePoolId;
                        if (message.autoscaling != null && message.hasOwnProperty("autoscaling"))
                            object.autoscaling = $root.google.container.v1.NodePoolAutoscaling.toObject(message.autoscaling, options);
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this SetNodePoolAutoscalingRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.SetNodePoolAutoscalingRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    SetNodePoolAutoscalingRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for SetNodePoolAutoscalingRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.SetNodePoolAutoscalingRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    SetNodePoolAutoscalingRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.SetNodePoolAutoscalingRequest";
                    };
    
                    return SetNodePoolAutoscalingRequest;
                })();
    
                v1.SetLoggingServiceRequest = (function() {
    
                    /**
                     * Properties of a SetLoggingServiceRequest.
                     * @memberof google.container.v1
                     * @interface ISetLoggingServiceRequest
                     * @property {string|null} [projectId] SetLoggingServiceRequest projectId
                     * @property {string|null} [zone] SetLoggingServiceRequest zone
                     * @property {string|null} [clusterId] SetLoggingServiceRequest clusterId
                     * @property {string|null} [loggingService] SetLoggingServiceRequest loggingService
                     * @property {string|null} [name] SetLoggingServiceRequest name
                     */
    
                    /**
                     * Constructs a new SetLoggingServiceRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a SetLoggingServiceRequest.
                     * @implements ISetLoggingServiceRequest
                     * @constructor
                     * @param {google.container.v1.ISetLoggingServiceRequest=} [properties] Properties to set
                     */
                    function SetLoggingServiceRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * SetLoggingServiceRequest projectId.
                     * @member {string} projectId
                     * @memberof google.container.v1.SetLoggingServiceRequest
                     * @instance
                     */
                    SetLoggingServiceRequest.prototype.projectId = "";
    
                    /**
                     * SetLoggingServiceRequest zone.
                     * @member {string} zone
                     * @memberof google.container.v1.SetLoggingServiceRequest
                     * @instance
                     */
                    SetLoggingServiceRequest.prototype.zone = "";
    
                    /**
                     * SetLoggingServiceRequest clusterId.
                     * @member {string} clusterId
                     * @memberof google.container.v1.SetLoggingServiceRequest
                     * @instance
                     */
                    SetLoggingServiceRequest.prototype.clusterId = "";
    
                    /**
                     * SetLoggingServiceRequest loggingService.
                     * @member {string} loggingService
                     * @memberof google.container.v1.SetLoggingServiceRequest
                     * @instance
                     */
                    SetLoggingServiceRequest.prototype.loggingService = "";
    
                    /**
                     * SetLoggingServiceRequest name.
                     * @member {string} name
                     * @memberof google.container.v1.SetLoggingServiceRequest
                     * @instance
                     */
                    SetLoggingServiceRequest.prototype.name = "";
    
                    /**
                     * Creates a new SetLoggingServiceRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.SetLoggingServiceRequest
                     * @static
                     * @param {google.container.v1.ISetLoggingServiceRequest=} [properties] Properties to set
                     * @returns {google.container.v1.SetLoggingServiceRequest} SetLoggingServiceRequest instance
                     */
                    SetLoggingServiceRequest.create = function create(properties) {
                        return new SetLoggingServiceRequest(properties);
                    };
    
                    /**
                     * Encodes the specified SetLoggingServiceRequest message. Does not implicitly {@link google.container.v1.SetLoggingServiceRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.SetLoggingServiceRequest
                     * @static
                     * @param {google.container.v1.ISetLoggingServiceRequest} message SetLoggingServiceRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SetLoggingServiceRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.clusterId != null && Object.hasOwnProperty.call(message, "clusterId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.clusterId);
                        if (message.loggingService != null && Object.hasOwnProperty.call(message, "loggingService"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.loggingService);
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified SetLoggingServiceRequest message, length delimited. Does not implicitly {@link google.container.v1.SetLoggingServiceRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.SetLoggingServiceRequest
                     * @static
                     * @param {google.container.v1.ISetLoggingServiceRequest} message SetLoggingServiceRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SetLoggingServiceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a SetLoggingServiceRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.SetLoggingServiceRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.SetLoggingServiceRequest} SetLoggingServiceRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SetLoggingServiceRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.SetLoggingServiceRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.projectId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.clusterId = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.loggingService = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a SetLoggingServiceRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.SetLoggingServiceRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.SetLoggingServiceRequest} SetLoggingServiceRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SetLoggingServiceRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a SetLoggingServiceRequest message.
                     * @function verify
                     * @memberof google.container.v1.SetLoggingServiceRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    SetLoggingServiceRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            if (!$util.isString(message.projectId))
                                return "projectId: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            if (!$util.isString(message.clusterId))
                                return "clusterId: string expected";
                        if (message.loggingService != null && message.hasOwnProperty("loggingService"))
                            if (!$util.isString(message.loggingService))
                                return "loggingService: string expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a SetLoggingServiceRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.SetLoggingServiceRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.SetLoggingServiceRequest} SetLoggingServiceRequest
                     */
                    SetLoggingServiceRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.SetLoggingServiceRequest)
                            return object;
                        var message = new $root.google.container.v1.SetLoggingServiceRequest();
                        if (object.projectId != null)
                            message.projectId = String(object.projectId);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.clusterId != null)
                            message.clusterId = String(object.clusterId);
                        if (object.loggingService != null)
                            message.loggingService = String(object.loggingService);
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a SetLoggingServiceRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.SetLoggingServiceRequest
                     * @static
                     * @param {google.container.v1.SetLoggingServiceRequest} message SetLoggingServiceRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    SetLoggingServiceRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.projectId = "";
                            object.zone = "";
                            object.clusterId = "";
                            object.loggingService = "";
                            object.name = "";
                        }
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            object.projectId = message.projectId;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            object.clusterId = message.clusterId;
                        if (message.loggingService != null && message.hasOwnProperty("loggingService"))
                            object.loggingService = message.loggingService;
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this SetLoggingServiceRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.SetLoggingServiceRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    SetLoggingServiceRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for SetLoggingServiceRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.SetLoggingServiceRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    SetLoggingServiceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.SetLoggingServiceRequest";
                    };
    
                    return SetLoggingServiceRequest;
                })();
    
                v1.SetMonitoringServiceRequest = (function() {
    
                    /**
                     * Properties of a SetMonitoringServiceRequest.
                     * @memberof google.container.v1
                     * @interface ISetMonitoringServiceRequest
                     * @property {string|null} [projectId] SetMonitoringServiceRequest projectId
                     * @property {string|null} [zone] SetMonitoringServiceRequest zone
                     * @property {string|null} [clusterId] SetMonitoringServiceRequest clusterId
                     * @property {string|null} [monitoringService] SetMonitoringServiceRequest monitoringService
                     * @property {string|null} [name] SetMonitoringServiceRequest name
                     */
    
                    /**
                     * Constructs a new SetMonitoringServiceRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a SetMonitoringServiceRequest.
                     * @implements ISetMonitoringServiceRequest
                     * @constructor
                     * @param {google.container.v1.ISetMonitoringServiceRequest=} [properties] Properties to set
                     */
                    function SetMonitoringServiceRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * SetMonitoringServiceRequest projectId.
                     * @member {string} projectId
                     * @memberof google.container.v1.SetMonitoringServiceRequest
                     * @instance
                     */
                    SetMonitoringServiceRequest.prototype.projectId = "";
    
                    /**
                     * SetMonitoringServiceRequest zone.
                     * @member {string} zone
                     * @memberof google.container.v1.SetMonitoringServiceRequest
                     * @instance
                     */
                    SetMonitoringServiceRequest.prototype.zone = "";
    
                    /**
                     * SetMonitoringServiceRequest clusterId.
                     * @member {string} clusterId
                     * @memberof google.container.v1.SetMonitoringServiceRequest
                     * @instance
                     */
                    SetMonitoringServiceRequest.prototype.clusterId = "";
    
                    /**
                     * SetMonitoringServiceRequest monitoringService.
                     * @member {string} monitoringService
                     * @memberof google.container.v1.SetMonitoringServiceRequest
                     * @instance
                     */
                    SetMonitoringServiceRequest.prototype.monitoringService = "";
    
                    /**
                     * SetMonitoringServiceRequest name.
                     * @member {string} name
                     * @memberof google.container.v1.SetMonitoringServiceRequest
                     * @instance
                     */
                    SetMonitoringServiceRequest.prototype.name = "";
    
                    /**
                     * Creates a new SetMonitoringServiceRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.SetMonitoringServiceRequest
                     * @static
                     * @param {google.container.v1.ISetMonitoringServiceRequest=} [properties] Properties to set
                     * @returns {google.container.v1.SetMonitoringServiceRequest} SetMonitoringServiceRequest instance
                     */
                    SetMonitoringServiceRequest.create = function create(properties) {
                        return new SetMonitoringServiceRequest(properties);
                    };
    
                    /**
                     * Encodes the specified SetMonitoringServiceRequest message. Does not implicitly {@link google.container.v1.SetMonitoringServiceRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.SetMonitoringServiceRequest
                     * @static
                     * @param {google.container.v1.ISetMonitoringServiceRequest} message SetMonitoringServiceRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SetMonitoringServiceRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.clusterId != null && Object.hasOwnProperty.call(message, "clusterId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.clusterId);
                        if (message.monitoringService != null && Object.hasOwnProperty.call(message, "monitoringService"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.monitoringService);
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified SetMonitoringServiceRequest message, length delimited. Does not implicitly {@link google.container.v1.SetMonitoringServiceRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.SetMonitoringServiceRequest
                     * @static
                     * @param {google.container.v1.ISetMonitoringServiceRequest} message SetMonitoringServiceRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SetMonitoringServiceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a SetMonitoringServiceRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.SetMonitoringServiceRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.SetMonitoringServiceRequest} SetMonitoringServiceRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SetMonitoringServiceRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.SetMonitoringServiceRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.projectId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.clusterId = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.monitoringService = reader.string();
                                    break;
                                }
                            case 6: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a SetMonitoringServiceRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.SetMonitoringServiceRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.SetMonitoringServiceRequest} SetMonitoringServiceRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SetMonitoringServiceRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a SetMonitoringServiceRequest message.
                     * @function verify
                     * @memberof google.container.v1.SetMonitoringServiceRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    SetMonitoringServiceRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            if (!$util.isString(message.projectId))
                                return "projectId: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            if (!$util.isString(message.clusterId))
                                return "clusterId: string expected";
                        if (message.monitoringService != null && message.hasOwnProperty("monitoringService"))
                            if (!$util.isString(message.monitoringService))
                                return "monitoringService: string expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a SetMonitoringServiceRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.SetMonitoringServiceRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.SetMonitoringServiceRequest} SetMonitoringServiceRequest
                     */
                    SetMonitoringServiceRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.SetMonitoringServiceRequest)
                            return object;
                        var message = new $root.google.container.v1.SetMonitoringServiceRequest();
                        if (object.projectId != null)
                            message.projectId = String(object.projectId);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.clusterId != null)
                            message.clusterId = String(object.clusterId);
                        if (object.monitoringService != null)
                            message.monitoringService = String(object.monitoringService);
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a SetMonitoringServiceRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.SetMonitoringServiceRequest
                     * @static
                     * @param {google.container.v1.SetMonitoringServiceRequest} message SetMonitoringServiceRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    SetMonitoringServiceRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.projectId = "";
                            object.zone = "";
                            object.clusterId = "";
                            object.monitoringService = "";
                            object.name = "";
                        }
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            object.projectId = message.projectId;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            object.clusterId = message.clusterId;
                        if (message.monitoringService != null && message.hasOwnProperty("monitoringService"))
                            object.monitoringService = message.monitoringService;
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this SetMonitoringServiceRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.SetMonitoringServiceRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    SetMonitoringServiceRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for SetMonitoringServiceRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.SetMonitoringServiceRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    SetMonitoringServiceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.SetMonitoringServiceRequest";
                    };
    
                    return SetMonitoringServiceRequest;
                })();
    
                v1.SetAddonsConfigRequest = (function() {
    
                    /**
                     * Properties of a SetAddonsConfigRequest.
                     * @memberof google.container.v1
                     * @interface ISetAddonsConfigRequest
                     * @property {string|null} [projectId] SetAddonsConfigRequest projectId
                     * @property {string|null} [zone] SetAddonsConfigRequest zone
                     * @property {string|null} [clusterId] SetAddonsConfigRequest clusterId
                     * @property {google.container.v1.IAddonsConfig|null} [addonsConfig] SetAddonsConfigRequest addonsConfig
                     * @property {string|null} [name] SetAddonsConfigRequest name
                     */
    
                    /**
                     * Constructs a new SetAddonsConfigRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a SetAddonsConfigRequest.
                     * @implements ISetAddonsConfigRequest
                     * @constructor
                     * @param {google.container.v1.ISetAddonsConfigRequest=} [properties] Properties to set
                     */
                    function SetAddonsConfigRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * SetAddonsConfigRequest projectId.
                     * @member {string} projectId
                     * @memberof google.container.v1.SetAddonsConfigRequest
                     * @instance
                     */
                    SetAddonsConfigRequest.prototype.projectId = "";
    
                    /**
                     * SetAddonsConfigRequest zone.
                     * @member {string} zone
                     * @memberof google.container.v1.SetAddonsConfigRequest
                     * @instance
                     */
                    SetAddonsConfigRequest.prototype.zone = "";
    
                    /**
                     * SetAddonsConfigRequest clusterId.
                     * @member {string} clusterId
                     * @memberof google.container.v1.SetAddonsConfigRequest
                     * @instance
                     */
                    SetAddonsConfigRequest.prototype.clusterId = "";
    
                    /**
                     * SetAddonsConfigRequest addonsConfig.
                     * @member {google.container.v1.IAddonsConfig|null|undefined} addonsConfig
                     * @memberof google.container.v1.SetAddonsConfigRequest
                     * @instance
                     */
                    SetAddonsConfigRequest.prototype.addonsConfig = null;
    
                    /**
                     * SetAddonsConfigRequest name.
                     * @member {string} name
                     * @memberof google.container.v1.SetAddonsConfigRequest
                     * @instance
                     */
                    SetAddonsConfigRequest.prototype.name = "";
    
                    /**
                     * Creates a new SetAddonsConfigRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.SetAddonsConfigRequest
                     * @static
                     * @param {google.container.v1.ISetAddonsConfigRequest=} [properties] Properties to set
                     * @returns {google.container.v1.SetAddonsConfigRequest} SetAddonsConfigRequest instance
                     */
                    SetAddonsConfigRequest.create = function create(properties) {
                        return new SetAddonsConfigRequest(properties);
                    };
    
                    /**
                     * Encodes the specified SetAddonsConfigRequest message. Does not implicitly {@link google.container.v1.SetAddonsConfigRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.SetAddonsConfigRequest
                     * @static
                     * @param {google.container.v1.ISetAddonsConfigRequest} message SetAddonsConfigRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SetAddonsConfigRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.clusterId != null && Object.hasOwnProperty.call(message, "clusterId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.clusterId);
                        if (message.addonsConfig != null && Object.hasOwnProperty.call(message, "addonsConfig"))
                            $root.google.container.v1.AddonsConfig.encode(message.addonsConfig, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified SetAddonsConfigRequest message, length delimited. Does not implicitly {@link google.container.v1.SetAddonsConfigRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.SetAddonsConfigRequest
                     * @static
                     * @param {google.container.v1.ISetAddonsConfigRequest} message SetAddonsConfigRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SetAddonsConfigRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a SetAddonsConfigRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.SetAddonsConfigRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.SetAddonsConfigRequest} SetAddonsConfigRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SetAddonsConfigRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.SetAddonsConfigRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.projectId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.clusterId = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.addonsConfig = $root.google.container.v1.AddonsConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 6: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a SetAddonsConfigRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.SetAddonsConfigRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.SetAddonsConfigRequest} SetAddonsConfigRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SetAddonsConfigRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a SetAddonsConfigRequest message.
                     * @function verify
                     * @memberof google.container.v1.SetAddonsConfigRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    SetAddonsConfigRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            if (!$util.isString(message.projectId))
                                return "projectId: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            if (!$util.isString(message.clusterId))
                                return "clusterId: string expected";
                        if (message.addonsConfig != null && message.hasOwnProperty("addonsConfig")) {
                            var error = $root.google.container.v1.AddonsConfig.verify(message.addonsConfig);
                            if (error)
                                return "addonsConfig." + error;
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a SetAddonsConfigRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.SetAddonsConfigRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.SetAddonsConfigRequest} SetAddonsConfigRequest
                     */
                    SetAddonsConfigRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.SetAddonsConfigRequest)
                            return object;
                        var message = new $root.google.container.v1.SetAddonsConfigRequest();
                        if (object.projectId != null)
                            message.projectId = String(object.projectId);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.clusterId != null)
                            message.clusterId = String(object.clusterId);
                        if (object.addonsConfig != null) {
                            if (typeof object.addonsConfig !== "object")
                                throw TypeError(".google.container.v1.SetAddonsConfigRequest.addonsConfig: object expected");
                            message.addonsConfig = $root.google.container.v1.AddonsConfig.fromObject(object.addonsConfig);
                        }
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a SetAddonsConfigRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.SetAddonsConfigRequest
                     * @static
                     * @param {google.container.v1.SetAddonsConfigRequest} message SetAddonsConfigRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    SetAddonsConfigRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.projectId = "";
                            object.zone = "";
                            object.clusterId = "";
                            object.addonsConfig = null;
                            object.name = "";
                        }
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            object.projectId = message.projectId;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            object.clusterId = message.clusterId;
                        if (message.addonsConfig != null && message.hasOwnProperty("addonsConfig"))
                            object.addonsConfig = $root.google.container.v1.AddonsConfig.toObject(message.addonsConfig, options);
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this SetAddonsConfigRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.SetAddonsConfigRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    SetAddonsConfigRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for SetAddonsConfigRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.SetAddonsConfigRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    SetAddonsConfigRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.SetAddonsConfigRequest";
                    };
    
                    return SetAddonsConfigRequest;
                })();
    
                v1.SetLocationsRequest = (function() {
    
                    /**
                     * Properties of a SetLocationsRequest.
                     * @memberof google.container.v1
                     * @interface ISetLocationsRequest
                     * @property {string|null} [projectId] SetLocationsRequest projectId
                     * @property {string|null} [zone] SetLocationsRequest zone
                     * @property {string|null} [clusterId] SetLocationsRequest clusterId
                     * @property {Array.<string>|null} [locations] SetLocationsRequest locations
                     * @property {string|null} [name] SetLocationsRequest name
                     */
    
                    /**
                     * Constructs a new SetLocationsRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a SetLocationsRequest.
                     * @implements ISetLocationsRequest
                     * @constructor
                     * @param {google.container.v1.ISetLocationsRequest=} [properties] Properties to set
                     */
                    function SetLocationsRequest(properties) {
                        this.locations = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * SetLocationsRequest projectId.
                     * @member {string} projectId
                     * @memberof google.container.v1.SetLocationsRequest
                     * @instance
                     */
                    SetLocationsRequest.prototype.projectId = "";
    
                    /**
                     * SetLocationsRequest zone.
                     * @member {string} zone
                     * @memberof google.container.v1.SetLocationsRequest
                     * @instance
                     */
                    SetLocationsRequest.prototype.zone = "";
    
                    /**
                     * SetLocationsRequest clusterId.
                     * @member {string} clusterId
                     * @memberof google.container.v1.SetLocationsRequest
                     * @instance
                     */
                    SetLocationsRequest.prototype.clusterId = "";
    
                    /**
                     * SetLocationsRequest locations.
                     * @member {Array.<string>} locations
                     * @memberof google.container.v1.SetLocationsRequest
                     * @instance
                     */
                    SetLocationsRequest.prototype.locations = $util.emptyArray;
    
                    /**
                     * SetLocationsRequest name.
                     * @member {string} name
                     * @memberof google.container.v1.SetLocationsRequest
                     * @instance
                     */
                    SetLocationsRequest.prototype.name = "";
    
                    /**
                     * Creates a new SetLocationsRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.SetLocationsRequest
                     * @static
                     * @param {google.container.v1.ISetLocationsRequest=} [properties] Properties to set
                     * @returns {google.container.v1.SetLocationsRequest} SetLocationsRequest instance
                     */
                    SetLocationsRequest.create = function create(properties) {
                        return new SetLocationsRequest(properties);
                    };
    
                    /**
                     * Encodes the specified SetLocationsRequest message. Does not implicitly {@link google.container.v1.SetLocationsRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.SetLocationsRequest
                     * @static
                     * @param {google.container.v1.ISetLocationsRequest} message SetLocationsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SetLocationsRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.clusterId != null && Object.hasOwnProperty.call(message, "clusterId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.clusterId);
                        if (message.locations != null && message.locations.length)
                            for (var i = 0; i < message.locations.length; ++i)
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.locations[i]);
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified SetLocationsRequest message, length delimited. Does not implicitly {@link google.container.v1.SetLocationsRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.SetLocationsRequest
                     * @static
                     * @param {google.container.v1.ISetLocationsRequest} message SetLocationsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SetLocationsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a SetLocationsRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.SetLocationsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.SetLocationsRequest} SetLocationsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SetLocationsRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.SetLocationsRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.projectId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.clusterId = reader.string();
                                    break;
                                }
                            case 4: {
                                    if (!(message.locations && message.locations.length))
                                        message.locations = [];
                                    message.locations.push(reader.string());
                                    break;
                                }
                            case 6: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a SetLocationsRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.SetLocationsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.SetLocationsRequest} SetLocationsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SetLocationsRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a SetLocationsRequest message.
                     * @function verify
                     * @memberof google.container.v1.SetLocationsRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    SetLocationsRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            if (!$util.isString(message.projectId))
                                return "projectId: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            if (!$util.isString(message.clusterId))
                                return "clusterId: string expected";
                        if (message.locations != null && message.hasOwnProperty("locations")) {
                            if (!Array.isArray(message.locations))
                                return "locations: array expected";
                            for (var i = 0; i < message.locations.length; ++i)
                                if (!$util.isString(message.locations[i]))
                                    return "locations: string[] expected";
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a SetLocationsRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.SetLocationsRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.SetLocationsRequest} SetLocationsRequest
                     */
                    SetLocationsRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.SetLocationsRequest)
                            return object;
                        var message = new $root.google.container.v1.SetLocationsRequest();
                        if (object.projectId != null)
                            message.projectId = String(object.projectId);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.clusterId != null)
                            message.clusterId = String(object.clusterId);
                        if (object.locations) {
                            if (!Array.isArray(object.locations))
                                throw TypeError(".google.container.v1.SetLocationsRequest.locations: array expected");
                            message.locations = [];
                            for (var i = 0; i < object.locations.length; ++i)
                                message.locations[i] = String(object.locations[i]);
                        }
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a SetLocationsRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.SetLocationsRequest
                     * @static
                     * @param {google.container.v1.SetLocationsRequest} message SetLocationsRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    SetLocationsRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.locations = [];
                        if (options.defaults) {
                            object.projectId = "";
                            object.zone = "";
                            object.clusterId = "";
                            object.name = "";
                        }
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            object.projectId = message.projectId;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            object.clusterId = message.clusterId;
                        if (message.locations && message.locations.length) {
                            object.locations = [];
                            for (var j = 0; j < message.locations.length; ++j)
                                object.locations[j] = message.locations[j];
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this SetLocationsRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.SetLocationsRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    SetLocationsRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for SetLocationsRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.SetLocationsRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    SetLocationsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.SetLocationsRequest";
                    };
    
                    return SetLocationsRequest;
                })();
    
                v1.UpdateMasterRequest = (function() {
    
                    /**
                     * Properties of an UpdateMasterRequest.
                     * @memberof google.container.v1
                     * @interface IUpdateMasterRequest
                     * @property {string|null} [projectId] UpdateMasterRequest projectId
                     * @property {string|null} [zone] UpdateMasterRequest zone
                     * @property {string|null} [clusterId] UpdateMasterRequest clusterId
                     * @property {string|null} [masterVersion] UpdateMasterRequest masterVersion
                     * @property {string|null} [name] UpdateMasterRequest name
                     */
    
                    /**
                     * Constructs a new UpdateMasterRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents an UpdateMasterRequest.
                     * @implements IUpdateMasterRequest
                     * @constructor
                     * @param {google.container.v1.IUpdateMasterRequest=} [properties] Properties to set
                     */
                    function UpdateMasterRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * UpdateMasterRequest projectId.
                     * @member {string} projectId
                     * @memberof google.container.v1.UpdateMasterRequest
                     * @instance
                     */
                    UpdateMasterRequest.prototype.projectId = "";
    
                    /**
                     * UpdateMasterRequest zone.
                     * @member {string} zone
                     * @memberof google.container.v1.UpdateMasterRequest
                     * @instance
                     */
                    UpdateMasterRequest.prototype.zone = "";
    
                    /**
                     * UpdateMasterRequest clusterId.
                     * @member {string} clusterId
                     * @memberof google.container.v1.UpdateMasterRequest
                     * @instance
                     */
                    UpdateMasterRequest.prototype.clusterId = "";
    
                    /**
                     * UpdateMasterRequest masterVersion.
                     * @member {string} masterVersion
                     * @memberof google.container.v1.UpdateMasterRequest
                     * @instance
                     */
                    UpdateMasterRequest.prototype.masterVersion = "";
    
                    /**
                     * UpdateMasterRequest name.
                     * @member {string} name
                     * @memberof google.container.v1.UpdateMasterRequest
                     * @instance
                     */
                    UpdateMasterRequest.prototype.name = "";
    
                    /**
                     * Creates a new UpdateMasterRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.UpdateMasterRequest
                     * @static
                     * @param {google.container.v1.IUpdateMasterRequest=} [properties] Properties to set
                     * @returns {google.container.v1.UpdateMasterRequest} UpdateMasterRequest instance
                     */
                    UpdateMasterRequest.create = function create(properties) {
                        return new UpdateMasterRequest(properties);
                    };
    
                    /**
                     * Encodes the specified UpdateMasterRequest message. Does not implicitly {@link google.container.v1.UpdateMasterRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.UpdateMasterRequest
                     * @static
                     * @param {google.container.v1.IUpdateMasterRequest} message UpdateMasterRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateMasterRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.clusterId != null && Object.hasOwnProperty.call(message, "clusterId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.clusterId);
                        if (message.masterVersion != null && Object.hasOwnProperty.call(message, "masterVersion"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.masterVersion);
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 7, wireType 2 =*/58).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified UpdateMasterRequest message, length delimited. Does not implicitly {@link google.container.v1.UpdateMasterRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.UpdateMasterRequest
                     * @static
                     * @param {google.container.v1.IUpdateMasterRequest} message UpdateMasterRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateMasterRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an UpdateMasterRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.UpdateMasterRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.UpdateMasterRequest} UpdateMasterRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateMasterRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.UpdateMasterRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.projectId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.clusterId = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.masterVersion = reader.string();
                                    break;
                                }
                            case 7: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an UpdateMasterRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.UpdateMasterRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.UpdateMasterRequest} UpdateMasterRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateMasterRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an UpdateMasterRequest message.
                     * @function verify
                     * @memberof google.container.v1.UpdateMasterRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    UpdateMasterRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            if (!$util.isString(message.projectId))
                                return "projectId: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            if (!$util.isString(message.clusterId))
                                return "clusterId: string expected";
                        if (message.masterVersion != null && message.hasOwnProperty("masterVersion"))
                            if (!$util.isString(message.masterVersion))
                                return "masterVersion: string expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates an UpdateMasterRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.UpdateMasterRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.UpdateMasterRequest} UpdateMasterRequest
                     */
                    UpdateMasterRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.UpdateMasterRequest)
                            return object;
                        var message = new $root.google.container.v1.UpdateMasterRequest();
                        if (object.projectId != null)
                            message.projectId = String(object.projectId);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.clusterId != null)
                            message.clusterId = String(object.clusterId);
                        if (object.masterVersion != null)
                            message.masterVersion = String(object.masterVersion);
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an UpdateMasterRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.UpdateMasterRequest
                     * @static
                     * @param {google.container.v1.UpdateMasterRequest} message UpdateMasterRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    UpdateMasterRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.projectId = "";
                            object.zone = "";
                            object.clusterId = "";
                            object.masterVersion = "";
                            object.name = "";
                        }
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            object.projectId = message.projectId;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            object.clusterId = message.clusterId;
                        if (message.masterVersion != null && message.hasOwnProperty("masterVersion"))
                            object.masterVersion = message.masterVersion;
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this UpdateMasterRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.UpdateMasterRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    UpdateMasterRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for UpdateMasterRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.UpdateMasterRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    UpdateMasterRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.UpdateMasterRequest";
                    };
    
                    return UpdateMasterRequest;
                })();
    
                v1.SetMasterAuthRequest = (function() {
    
                    /**
                     * Properties of a SetMasterAuthRequest.
                     * @memberof google.container.v1
                     * @interface ISetMasterAuthRequest
                     * @property {string|null} [projectId] SetMasterAuthRequest projectId
                     * @property {string|null} [zone] SetMasterAuthRequest zone
                     * @property {string|null} [clusterId] SetMasterAuthRequest clusterId
                     * @property {google.container.v1.SetMasterAuthRequest.Action|null} [action] SetMasterAuthRequest action
                     * @property {google.container.v1.IMasterAuth|null} [update] SetMasterAuthRequest update
                     * @property {string|null} [name] SetMasterAuthRequest name
                     */
    
                    /**
                     * Constructs a new SetMasterAuthRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a SetMasterAuthRequest.
                     * @implements ISetMasterAuthRequest
                     * @constructor
                     * @param {google.container.v1.ISetMasterAuthRequest=} [properties] Properties to set
                     */
                    function SetMasterAuthRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * SetMasterAuthRequest projectId.
                     * @member {string} projectId
                     * @memberof google.container.v1.SetMasterAuthRequest
                     * @instance
                     */
                    SetMasterAuthRequest.prototype.projectId = "";
    
                    /**
                     * SetMasterAuthRequest zone.
                     * @member {string} zone
                     * @memberof google.container.v1.SetMasterAuthRequest
                     * @instance
                     */
                    SetMasterAuthRequest.prototype.zone = "";
    
                    /**
                     * SetMasterAuthRequest clusterId.
                     * @member {string} clusterId
                     * @memberof google.container.v1.SetMasterAuthRequest
                     * @instance
                     */
                    SetMasterAuthRequest.prototype.clusterId = "";
    
                    /**
                     * SetMasterAuthRequest action.
                     * @member {google.container.v1.SetMasterAuthRequest.Action} action
                     * @memberof google.container.v1.SetMasterAuthRequest
                     * @instance
                     */
                    SetMasterAuthRequest.prototype.action = 0;
    
                    /**
                     * SetMasterAuthRequest update.
                     * @member {google.container.v1.IMasterAuth|null|undefined} update
                     * @memberof google.container.v1.SetMasterAuthRequest
                     * @instance
                     */
                    SetMasterAuthRequest.prototype.update = null;
    
                    /**
                     * SetMasterAuthRequest name.
                     * @member {string} name
                     * @memberof google.container.v1.SetMasterAuthRequest
                     * @instance
                     */
                    SetMasterAuthRequest.prototype.name = "";
    
                    /**
                     * Creates a new SetMasterAuthRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.SetMasterAuthRequest
                     * @static
                     * @param {google.container.v1.ISetMasterAuthRequest=} [properties] Properties to set
                     * @returns {google.container.v1.SetMasterAuthRequest} SetMasterAuthRequest instance
                     */
                    SetMasterAuthRequest.create = function create(properties) {
                        return new SetMasterAuthRequest(properties);
                    };
    
                    /**
                     * Encodes the specified SetMasterAuthRequest message. Does not implicitly {@link google.container.v1.SetMasterAuthRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.SetMasterAuthRequest
                     * @static
                     * @param {google.container.v1.ISetMasterAuthRequest} message SetMasterAuthRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SetMasterAuthRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.clusterId != null && Object.hasOwnProperty.call(message, "clusterId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.clusterId);
                        if (message.action != null && Object.hasOwnProperty.call(message, "action"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.action);
                        if (message.update != null && Object.hasOwnProperty.call(message, "update"))
                            $root.google.container.v1.MasterAuth.encode(message.update, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 7, wireType 2 =*/58).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified SetMasterAuthRequest message, length delimited. Does not implicitly {@link google.container.v1.SetMasterAuthRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.SetMasterAuthRequest
                     * @static
                     * @param {google.container.v1.ISetMasterAuthRequest} message SetMasterAuthRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SetMasterAuthRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a SetMasterAuthRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.SetMasterAuthRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.SetMasterAuthRequest} SetMasterAuthRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SetMasterAuthRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.SetMasterAuthRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.projectId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.clusterId = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.action = reader.int32();
                                    break;
                                }
                            case 5: {
                                    message.update = $root.google.container.v1.MasterAuth.decode(reader, reader.uint32());
                                    break;
                                }
                            case 7: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a SetMasterAuthRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.SetMasterAuthRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.SetMasterAuthRequest} SetMasterAuthRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SetMasterAuthRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a SetMasterAuthRequest message.
                     * @function verify
                     * @memberof google.container.v1.SetMasterAuthRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    SetMasterAuthRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            if (!$util.isString(message.projectId))
                                return "projectId: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            if (!$util.isString(message.clusterId))
                                return "clusterId: string expected";
                        if (message.action != null && message.hasOwnProperty("action"))
                            switch (message.action) {
                            default:
                                return "action: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                                break;
                            }
                        if (message.update != null && message.hasOwnProperty("update")) {
                            var error = $root.google.container.v1.MasterAuth.verify(message.update);
                            if (error)
                                return "update." + error;
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a SetMasterAuthRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.SetMasterAuthRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.SetMasterAuthRequest} SetMasterAuthRequest
                     */
                    SetMasterAuthRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.SetMasterAuthRequest)
                            return object;
                        var message = new $root.google.container.v1.SetMasterAuthRequest();
                        if (object.projectId != null)
                            message.projectId = String(object.projectId);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.clusterId != null)
                            message.clusterId = String(object.clusterId);
                        switch (object.action) {
                        default:
                            if (typeof object.action === "number") {
                                message.action = object.action;
                                break;
                            }
                            break;
                        case "UNKNOWN":
                        case 0:
                            message.action = 0;
                            break;
                        case "SET_PASSWORD":
                        case 1:
                            message.action = 1;
                            break;
                        case "GENERATE_PASSWORD":
                        case 2:
                            message.action = 2;
                            break;
                        case "SET_USERNAME":
                        case 3:
                            message.action = 3;
                            break;
                        }
                        if (object.update != null) {
                            if (typeof object.update !== "object")
                                throw TypeError(".google.container.v1.SetMasterAuthRequest.update: object expected");
                            message.update = $root.google.container.v1.MasterAuth.fromObject(object.update);
                        }
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a SetMasterAuthRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.SetMasterAuthRequest
                     * @static
                     * @param {google.container.v1.SetMasterAuthRequest} message SetMasterAuthRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    SetMasterAuthRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.projectId = "";
                            object.zone = "";
                            object.clusterId = "";
                            object.action = options.enums === String ? "UNKNOWN" : 0;
                            object.update = null;
                            object.name = "";
                        }
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            object.projectId = message.projectId;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            object.clusterId = message.clusterId;
                        if (message.action != null && message.hasOwnProperty("action"))
                            object.action = options.enums === String ? $root.google.container.v1.SetMasterAuthRequest.Action[message.action] === undefined ? message.action : $root.google.container.v1.SetMasterAuthRequest.Action[message.action] : message.action;
                        if (message.update != null && message.hasOwnProperty("update"))
                            object.update = $root.google.container.v1.MasterAuth.toObject(message.update, options);
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this SetMasterAuthRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.SetMasterAuthRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    SetMasterAuthRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for SetMasterAuthRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.SetMasterAuthRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    SetMasterAuthRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.SetMasterAuthRequest";
                    };
    
                    /**
                     * Action enum.
                     * @name google.container.v1.SetMasterAuthRequest.Action
                     * @enum {number}
                     * @property {number} UNKNOWN=0 UNKNOWN value
                     * @property {number} SET_PASSWORD=1 SET_PASSWORD value
                     * @property {number} GENERATE_PASSWORD=2 GENERATE_PASSWORD value
                     * @property {number} SET_USERNAME=3 SET_USERNAME value
                     */
                    SetMasterAuthRequest.Action = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "UNKNOWN"] = 0;
                        values[valuesById[1] = "SET_PASSWORD"] = 1;
                        values[valuesById[2] = "GENERATE_PASSWORD"] = 2;
                        values[valuesById[3] = "SET_USERNAME"] = 3;
                        return values;
                    })();
    
                    return SetMasterAuthRequest;
                })();
    
                v1.DeleteClusterRequest = (function() {
    
                    /**
                     * Properties of a DeleteClusterRequest.
                     * @memberof google.container.v1
                     * @interface IDeleteClusterRequest
                     * @property {string|null} [projectId] DeleteClusterRequest projectId
                     * @property {string|null} [zone] DeleteClusterRequest zone
                     * @property {string|null} [clusterId] DeleteClusterRequest clusterId
                     * @property {string|null} [name] DeleteClusterRequest name
                     */
    
                    /**
                     * Constructs a new DeleteClusterRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a DeleteClusterRequest.
                     * @implements IDeleteClusterRequest
                     * @constructor
                     * @param {google.container.v1.IDeleteClusterRequest=} [properties] Properties to set
                     */
                    function DeleteClusterRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * DeleteClusterRequest projectId.
                     * @member {string} projectId
                     * @memberof google.container.v1.DeleteClusterRequest
                     * @instance
                     */
                    DeleteClusterRequest.prototype.projectId = "";
    
                    /**
                     * DeleteClusterRequest zone.
                     * @member {string} zone
                     * @memberof google.container.v1.DeleteClusterRequest
                     * @instance
                     */
                    DeleteClusterRequest.prototype.zone = "";
    
                    /**
                     * DeleteClusterRequest clusterId.
                     * @member {string} clusterId
                     * @memberof google.container.v1.DeleteClusterRequest
                     * @instance
                     */
                    DeleteClusterRequest.prototype.clusterId = "";
    
                    /**
                     * DeleteClusterRequest name.
                     * @member {string} name
                     * @memberof google.container.v1.DeleteClusterRequest
                     * @instance
                     */
                    DeleteClusterRequest.prototype.name = "";
    
                    /**
                     * Creates a new DeleteClusterRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.DeleteClusterRequest
                     * @static
                     * @param {google.container.v1.IDeleteClusterRequest=} [properties] Properties to set
                     * @returns {google.container.v1.DeleteClusterRequest} DeleteClusterRequest instance
                     */
                    DeleteClusterRequest.create = function create(properties) {
                        return new DeleteClusterRequest(properties);
                    };
    
                    /**
                     * Encodes the specified DeleteClusterRequest message. Does not implicitly {@link google.container.v1.DeleteClusterRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.DeleteClusterRequest
                     * @static
                     * @param {google.container.v1.IDeleteClusterRequest} message DeleteClusterRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DeleteClusterRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.clusterId != null && Object.hasOwnProperty.call(message, "clusterId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.clusterId);
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified DeleteClusterRequest message, length delimited. Does not implicitly {@link google.container.v1.DeleteClusterRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.DeleteClusterRequest
                     * @static
                     * @param {google.container.v1.IDeleteClusterRequest} message DeleteClusterRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DeleteClusterRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a DeleteClusterRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.DeleteClusterRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.DeleteClusterRequest} DeleteClusterRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DeleteClusterRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.DeleteClusterRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.projectId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.clusterId = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a DeleteClusterRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.DeleteClusterRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.DeleteClusterRequest} DeleteClusterRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DeleteClusterRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a DeleteClusterRequest message.
                     * @function verify
                     * @memberof google.container.v1.DeleteClusterRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    DeleteClusterRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            if (!$util.isString(message.projectId))
                                return "projectId: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            if (!$util.isString(message.clusterId))
                                return "clusterId: string expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a DeleteClusterRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.DeleteClusterRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.DeleteClusterRequest} DeleteClusterRequest
                     */
                    DeleteClusterRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.DeleteClusterRequest)
                            return object;
                        var message = new $root.google.container.v1.DeleteClusterRequest();
                        if (object.projectId != null)
                            message.projectId = String(object.projectId);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.clusterId != null)
                            message.clusterId = String(object.clusterId);
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a DeleteClusterRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.DeleteClusterRequest
                     * @static
                     * @param {google.container.v1.DeleteClusterRequest} message DeleteClusterRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    DeleteClusterRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.projectId = "";
                            object.zone = "";
                            object.clusterId = "";
                            object.name = "";
                        }
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            object.projectId = message.projectId;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            object.clusterId = message.clusterId;
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this DeleteClusterRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.DeleteClusterRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    DeleteClusterRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for DeleteClusterRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.DeleteClusterRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    DeleteClusterRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.DeleteClusterRequest";
                    };
    
                    return DeleteClusterRequest;
                })();
    
                v1.ListClustersRequest = (function() {
    
                    /**
                     * Properties of a ListClustersRequest.
                     * @memberof google.container.v1
                     * @interface IListClustersRequest
                     * @property {string|null} [projectId] ListClustersRequest projectId
                     * @property {string|null} [zone] ListClustersRequest zone
                     * @property {string|null} [parent] ListClustersRequest parent
                     */
    
                    /**
                     * Constructs a new ListClustersRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a ListClustersRequest.
                     * @implements IListClustersRequest
                     * @constructor
                     * @param {google.container.v1.IListClustersRequest=} [properties] Properties to set
                     */
                    function ListClustersRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListClustersRequest projectId.
                     * @member {string} projectId
                     * @memberof google.container.v1.ListClustersRequest
                     * @instance
                     */
                    ListClustersRequest.prototype.projectId = "";
    
                    /**
                     * ListClustersRequest zone.
                     * @member {string} zone
                     * @memberof google.container.v1.ListClustersRequest
                     * @instance
                     */
                    ListClustersRequest.prototype.zone = "";
    
                    /**
                     * ListClustersRequest parent.
                     * @member {string} parent
                     * @memberof google.container.v1.ListClustersRequest
                     * @instance
                     */
                    ListClustersRequest.prototype.parent = "";
    
                    /**
                     * Creates a new ListClustersRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.ListClustersRequest
                     * @static
                     * @param {google.container.v1.IListClustersRequest=} [properties] Properties to set
                     * @returns {google.container.v1.ListClustersRequest} ListClustersRequest instance
                     */
                    ListClustersRequest.create = function create(properties) {
                        return new ListClustersRequest(properties);
                    };
    
                    /**
                     * Encodes the specified ListClustersRequest message. Does not implicitly {@link google.container.v1.ListClustersRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.ListClustersRequest
                     * @static
                     * @param {google.container.v1.IListClustersRequest} message ListClustersRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListClustersRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.parent);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListClustersRequest message, length delimited. Does not implicitly {@link google.container.v1.ListClustersRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.ListClustersRequest
                     * @static
                     * @param {google.container.v1.IListClustersRequest} message ListClustersRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListClustersRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListClustersRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.ListClustersRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.ListClustersRequest} ListClustersRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListClustersRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.ListClustersRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.projectId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.parent = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListClustersRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.ListClustersRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.ListClustersRequest} ListClustersRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListClustersRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListClustersRequest message.
                     * @function verify
                     * @memberof google.container.v1.ListClustersRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListClustersRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            if (!$util.isString(message.projectId))
                                return "projectId: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            if (!$util.isString(message.parent))
                                return "parent: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListClustersRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.ListClustersRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.ListClustersRequest} ListClustersRequest
                     */
                    ListClustersRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.ListClustersRequest)
                            return object;
                        var message = new $root.google.container.v1.ListClustersRequest();
                        if (object.projectId != null)
                            message.projectId = String(object.projectId);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.parent != null)
                            message.parent = String(object.parent);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListClustersRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.ListClustersRequest
                     * @static
                     * @param {google.container.v1.ListClustersRequest} message ListClustersRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListClustersRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.projectId = "";
                            object.zone = "";
                            object.parent = "";
                        }
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            object.projectId = message.projectId;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            object.parent = message.parent;
                        return object;
                    };
    
                    /**
                     * Converts this ListClustersRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.ListClustersRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListClustersRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListClustersRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.ListClustersRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListClustersRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.ListClustersRequest";
                    };
    
                    return ListClustersRequest;
                })();
    
                v1.ListClustersResponse = (function() {
    
                    /**
                     * Properties of a ListClustersResponse.
                     * @memberof google.container.v1
                     * @interface IListClustersResponse
                     * @property {Array.<google.container.v1.ICluster>|null} [clusters] ListClustersResponse clusters
                     * @property {Array.<string>|null} [missingZones] ListClustersResponse missingZones
                     */
    
                    /**
                     * Constructs a new ListClustersResponse.
                     * @memberof google.container.v1
                     * @classdesc Represents a ListClustersResponse.
                     * @implements IListClustersResponse
                     * @constructor
                     * @param {google.container.v1.IListClustersResponse=} [properties] Properties to set
                     */
                    function ListClustersResponse(properties) {
                        this.clusters = [];
                        this.missingZones = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListClustersResponse clusters.
                     * @member {Array.<google.container.v1.ICluster>} clusters
                     * @memberof google.container.v1.ListClustersResponse
                     * @instance
                     */
                    ListClustersResponse.prototype.clusters = $util.emptyArray;
    
                    /**
                     * ListClustersResponse missingZones.
                     * @member {Array.<string>} missingZones
                     * @memberof google.container.v1.ListClustersResponse
                     * @instance
                     */
                    ListClustersResponse.prototype.missingZones = $util.emptyArray;
    
                    /**
                     * Creates a new ListClustersResponse instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.ListClustersResponse
                     * @static
                     * @param {google.container.v1.IListClustersResponse=} [properties] Properties to set
                     * @returns {google.container.v1.ListClustersResponse} ListClustersResponse instance
                     */
                    ListClustersResponse.create = function create(properties) {
                        return new ListClustersResponse(properties);
                    };
    
                    /**
                     * Encodes the specified ListClustersResponse message. Does not implicitly {@link google.container.v1.ListClustersResponse.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.ListClustersResponse
                     * @static
                     * @param {google.container.v1.IListClustersResponse} message ListClustersResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListClustersResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.clusters != null && message.clusters.length)
                            for (var i = 0; i < message.clusters.length; ++i)
                                $root.google.container.v1.Cluster.encode(message.clusters[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.missingZones != null && message.missingZones.length)
                            for (var i = 0; i < message.missingZones.length; ++i)
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.missingZones[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListClustersResponse message, length delimited. Does not implicitly {@link google.container.v1.ListClustersResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.ListClustersResponse
                     * @static
                     * @param {google.container.v1.IListClustersResponse} message ListClustersResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListClustersResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListClustersResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.ListClustersResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.ListClustersResponse} ListClustersResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListClustersResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.ListClustersResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.clusters && message.clusters.length))
                                        message.clusters = [];
                                    message.clusters.push($root.google.container.v1.Cluster.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 2: {
                                    if (!(message.missingZones && message.missingZones.length))
                                        message.missingZones = [];
                                    message.missingZones.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListClustersResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.ListClustersResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.ListClustersResponse} ListClustersResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListClustersResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListClustersResponse message.
                     * @function verify
                     * @memberof google.container.v1.ListClustersResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListClustersResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.clusters != null && message.hasOwnProperty("clusters")) {
                            if (!Array.isArray(message.clusters))
                                return "clusters: array expected";
                            for (var i = 0; i < message.clusters.length; ++i) {
                                var error = $root.google.container.v1.Cluster.verify(message.clusters[i]);
                                if (error)
                                    return "clusters." + error;
                            }
                        }
                        if (message.missingZones != null && message.hasOwnProperty("missingZones")) {
                            if (!Array.isArray(message.missingZones))
                                return "missingZones: array expected";
                            for (var i = 0; i < message.missingZones.length; ++i)
                                if (!$util.isString(message.missingZones[i]))
                                    return "missingZones: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a ListClustersResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.ListClustersResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.ListClustersResponse} ListClustersResponse
                     */
                    ListClustersResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.ListClustersResponse)
                            return object;
                        var message = new $root.google.container.v1.ListClustersResponse();
                        if (object.clusters) {
                            if (!Array.isArray(object.clusters))
                                throw TypeError(".google.container.v1.ListClustersResponse.clusters: array expected");
                            message.clusters = [];
                            for (var i = 0; i < object.clusters.length; ++i) {
                                if (typeof object.clusters[i] !== "object")
                                    throw TypeError(".google.container.v1.ListClustersResponse.clusters: object expected");
                                message.clusters[i] = $root.google.container.v1.Cluster.fromObject(object.clusters[i]);
                            }
                        }
                        if (object.missingZones) {
                            if (!Array.isArray(object.missingZones))
                                throw TypeError(".google.container.v1.ListClustersResponse.missingZones: array expected");
                            message.missingZones = [];
                            for (var i = 0; i < object.missingZones.length; ++i)
                                message.missingZones[i] = String(object.missingZones[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListClustersResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.ListClustersResponse
                     * @static
                     * @param {google.container.v1.ListClustersResponse} message ListClustersResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListClustersResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.clusters = [];
                            object.missingZones = [];
                        }
                        if (message.clusters && message.clusters.length) {
                            object.clusters = [];
                            for (var j = 0; j < message.clusters.length; ++j)
                                object.clusters[j] = $root.google.container.v1.Cluster.toObject(message.clusters[j], options);
                        }
                        if (message.missingZones && message.missingZones.length) {
                            object.missingZones = [];
                            for (var j = 0; j < message.missingZones.length; ++j)
                                object.missingZones[j] = message.missingZones[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this ListClustersResponse to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.ListClustersResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListClustersResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListClustersResponse
                     * @function getTypeUrl
                     * @memberof google.container.v1.ListClustersResponse
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListClustersResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.ListClustersResponse";
                    };
    
                    return ListClustersResponse;
                })();
    
                v1.GetOperationRequest = (function() {
    
                    /**
                     * Properties of a GetOperationRequest.
                     * @memberof google.container.v1
                     * @interface IGetOperationRequest
                     * @property {string|null} [projectId] GetOperationRequest projectId
                     * @property {string|null} [zone] GetOperationRequest zone
                     * @property {string|null} [operationId] GetOperationRequest operationId
                     * @property {string|null} [name] GetOperationRequest name
                     */
    
                    /**
                     * Constructs a new GetOperationRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a GetOperationRequest.
                     * @implements IGetOperationRequest
                     * @constructor
                     * @param {google.container.v1.IGetOperationRequest=} [properties] Properties to set
                     */
                    function GetOperationRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GetOperationRequest projectId.
                     * @member {string} projectId
                     * @memberof google.container.v1.GetOperationRequest
                     * @instance
                     */
                    GetOperationRequest.prototype.projectId = "";
    
                    /**
                     * GetOperationRequest zone.
                     * @member {string} zone
                     * @memberof google.container.v1.GetOperationRequest
                     * @instance
                     */
                    GetOperationRequest.prototype.zone = "";
    
                    /**
                     * GetOperationRequest operationId.
                     * @member {string} operationId
                     * @memberof google.container.v1.GetOperationRequest
                     * @instance
                     */
                    GetOperationRequest.prototype.operationId = "";
    
                    /**
                     * GetOperationRequest name.
                     * @member {string} name
                     * @memberof google.container.v1.GetOperationRequest
                     * @instance
                     */
                    GetOperationRequest.prototype.name = "";
    
                    /**
                     * Creates a new GetOperationRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.GetOperationRequest
                     * @static
                     * @param {google.container.v1.IGetOperationRequest=} [properties] Properties to set
                     * @returns {google.container.v1.GetOperationRequest} GetOperationRequest instance
                     */
                    GetOperationRequest.create = function create(properties) {
                        return new GetOperationRequest(properties);
                    };
    
                    /**
                     * Encodes the specified GetOperationRequest message. Does not implicitly {@link google.container.v1.GetOperationRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.GetOperationRequest
                     * @static
                     * @param {google.container.v1.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetOperationRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.operationId != null && Object.hasOwnProperty.call(message, "operationId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.operationId);
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GetOperationRequest message, length delimited. Does not implicitly {@link google.container.v1.GetOperationRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.GetOperationRequest
                     * @static
                     * @param {google.container.v1.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GetOperationRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.GetOperationRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.GetOperationRequest} GetOperationRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetOperationRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.GetOperationRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.projectId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.operationId = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GetOperationRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.GetOperationRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.GetOperationRequest} GetOperationRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GetOperationRequest message.
                     * @function verify
                     * @memberof google.container.v1.GetOperationRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GetOperationRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            if (!$util.isString(message.projectId))
                                return "projectId: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.operationId != null && message.hasOwnProperty("operationId"))
                            if (!$util.isString(message.operationId))
                                return "operationId: string expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a GetOperationRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.GetOperationRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.GetOperationRequest} GetOperationRequest
                     */
                    GetOperationRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.GetOperationRequest)
                            return object;
                        var message = new $root.google.container.v1.GetOperationRequest();
                        if (object.projectId != null)
                            message.projectId = String(object.projectId);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.operationId != null)
                            message.operationId = String(object.operationId);
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GetOperationRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.GetOperationRequest
                     * @static
                     * @param {google.container.v1.GetOperationRequest} message GetOperationRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GetOperationRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.projectId = "";
                            object.zone = "";
                            object.operationId = "";
                            object.name = "";
                        }
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            object.projectId = message.projectId;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.operationId != null && message.hasOwnProperty("operationId"))
                            object.operationId = message.operationId;
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this GetOperationRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.GetOperationRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GetOperationRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GetOperationRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.GetOperationRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GetOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.GetOperationRequest";
                    };
    
                    return GetOperationRequest;
                })();
    
                v1.ListOperationsRequest = (function() {
    
                    /**
                     * Properties of a ListOperationsRequest.
                     * @memberof google.container.v1
                     * @interface IListOperationsRequest
                     * @property {string|null} [projectId] ListOperationsRequest projectId
                     * @property {string|null} [zone] ListOperationsRequest zone
                     * @property {string|null} [parent] ListOperationsRequest parent
                     */
    
                    /**
                     * Constructs a new ListOperationsRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a ListOperationsRequest.
                     * @implements IListOperationsRequest
                     * @constructor
                     * @param {google.container.v1.IListOperationsRequest=} [properties] Properties to set
                     */
                    function ListOperationsRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListOperationsRequest projectId.
                     * @member {string} projectId
                     * @memberof google.container.v1.ListOperationsRequest
                     * @instance
                     */
                    ListOperationsRequest.prototype.projectId = "";
    
                    /**
                     * ListOperationsRequest zone.
                     * @member {string} zone
                     * @memberof google.container.v1.ListOperationsRequest
                     * @instance
                     */
                    ListOperationsRequest.prototype.zone = "";
    
                    /**
                     * ListOperationsRequest parent.
                     * @member {string} parent
                     * @memberof google.container.v1.ListOperationsRequest
                     * @instance
                     */
                    ListOperationsRequest.prototype.parent = "";
    
                    /**
                     * Creates a new ListOperationsRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.ListOperationsRequest
                     * @static
                     * @param {google.container.v1.IListOperationsRequest=} [properties] Properties to set
                     * @returns {google.container.v1.ListOperationsRequest} ListOperationsRequest instance
                     */
                    ListOperationsRequest.create = function create(properties) {
                        return new ListOperationsRequest(properties);
                    };
    
                    /**
                     * Encodes the specified ListOperationsRequest message. Does not implicitly {@link google.container.v1.ListOperationsRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.ListOperationsRequest
                     * @static
                     * @param {google.container.v1.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListOperationsRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.parent);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListOperationsRequest message, length delimited. Does not implicitly {@link google.container.v1.ListOperationsRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.ListOperationsRequest
                     * @static
                     * @param {google.container.v1.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListOperationsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListOperationsRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.ListOperationsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.ListOperationsRequest} ListOperationsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListOperationsRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.ListOperationsRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.projectId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.parent = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListOperationsRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.ListOperationsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.ListOperationsRequest} ListOperationsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListOperationsRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListOperationsRequest message.
                     * @function verify
                     * @memberof google.container.v1.ListOperationsRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListOperationsRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            if (!$util.isString(message.projectId))
                                return "projectId: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            if (!$util.isString(message.parent))
                                return "parent: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListOperationsRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.ListOperationsRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.ListOperationsRequest} ListOperationsRequest
                     */
                    ListOperationsRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.ListOperationsRequest)
                            return object;
                        var message = new $root.google.container.v1.ListOperationsRequest();
                        if (object.projectId != null)
                            message.projectId = String(object.projectId);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.parent != null)
                            message.parent = String(object.parent);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListOperationsRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.ListOperationsRequest
                     * @static
                     * @param {google.container.v1.ListOperationsRequest} message ListOperationsRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListOperationsRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.projectId = "";
                            object.zone = "";
                            object.parent = "";
                        }
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            object.projectId = message.projectId;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            object.parent = message.parent;
                        return object;
                    };
    
                    /**
                     * Converts this ListOperationsRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.ListOperationsRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListOperationsRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListOperationsRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.ListOperationsRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListOperationsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.ListOperationsRequest";
                    };
    
                    return ListOperationsRequest;
                })();
    
                v1.CancelOperationRequest = (function() {
    
                    /**
                     * Properties of a CancelOperationRequest.
                     * @memberof google.container.v1
                     * @interface ICancelOperationRequest
                     * @property {string|null} [projectId] CancelOperationRequest projectId
                     * @property {string|null} [zone] CancelOperationRequest zone
                     * @property {string|null} [operationId] CancelOperationRequest operationId
                     * @property {string|null} [name] CancelOperationRequest name
                     */
    
                    /**
                     * Constructs a new CancelOperationRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a CancelOperationRequest.
                     * @implements ICancelOperationRequest
                     * @constructor
                     * @param {google.container.v1.ICancelOperationRequest=} [properties] Properties to set
                     */
                    function CancelOperationRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * CancelOperationRequest projectId.
                     * @member {string} projectId
                     * @memberof google.container.v1.CancelOperationRequest
                     * @instance
                     */
                    CancelOperationRequest.prototype.projectId = "";
    
                    /**
                     * CancelOperationRequest zone.
                     * @member {string} zone
                     * @memberof google.container.v1.CancelOperationRequest
                     * @instance
                     */
                    CancelOperationRequest.prototype.zone = "";
    
                    /**
                     * CancelOperationRequest operationId.
                     * @member {string} operationId
                     * @memberof google.container.v1.CancelOperationRequest
                     * @instance
                     */
                    CancelOperationRequest.prototype.operationId = "";
    
                    /**
                     * CancelOperationRequest name.
                     * @member {string} name
                     * @memberof google.container.v1.CancelOperationRequest
                     * @instance
                     */
                    CancelOperationRequest.prototype.name = "";
    
                    /**
                     * Creates a new CancelOperationRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.CancelOperationRequest
                     * @static
                     * @param {google.container.v1.ICancelOperationRequest=} [properties] Properties to set
                     * @returns {google.container.v1.CancelOperationRequest} CancelOperationRequest instance
                     */
                    CancelOperationRequest.create = function create(properties) {
                        return new CancelOperationRequest(properties);
                    };
    
                    /**
                     * Encodes the specified CancelOperationRequest message. Does not implicitly {@link google.container.v1.CancelOperationRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.CancelOperationRequest
                     * @static
                     * @param {google.container.v1.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CancelOperationRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.operationId != null && Object.hasOwnProperty.call(message, "operationId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.operationId);
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified CancelOperationRequest message, length delimited. Does not implicitly {@link google.container.v1.CancelOperationRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.CancelOperationRequest
                     * @static
                     * @param {google.container.v1.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CancelOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a CancelOperationRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.CancelOperationRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.CancelOperationRequest} CancelOperationRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CancelOperationRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.CancelOperationRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.projectId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.operationId = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a CancelOperationRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.CancelOperationRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.CancelOperationRequest} CancelOperationRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CancelOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a CancelOperationRequest message.
                     * @function verify
                     * @memberof google.container.v1.CancelOperationRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    CancelOperationRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            if (!$util.isString(message.projectId))
                                return "projectId: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.operationId != null && message.hasOwnProperty("operationId"))
                            if (!$util.isString(message.operationId))
                                return "operationId: string expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a CancelOperationRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.CancelOperationRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.CancelOperationRequest} CancelOperationRequest
                     */
                    CancelOperationRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.CancelOperationRequest)
                            return object;
                        var message = new $root.google.container.v1.CancelOperationRequest();
                        if (object.projectId != null)
                            message.projectId = String(object.projectId);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.operationId != null)
                            message.operationId = String(object.operationId);
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a CancelOperationRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.CancelOperationRequest
                     * @static
                     * @param {google.container.v1.CancelOperationRequest} message CancelOperationRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    CancelOperationRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.projectId = "";
                            object.zone = "";
                            object.operationId = "";
                            object.name = "";
                        }
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            object.projectId = message.projectId;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.operationId != null && message.hasOwnProperty("operationId"))
                            object.operationId = message.operationId;
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this CancelOperationRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.CancelOperationRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    CancelOperationRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for CancelOperationRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.CancelOperationRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    CancelOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.CancelOperationRequest";
                    };
    
                    return CancelOperationRequest;
                })();
    
                v1.ListOperationsResponse = (function() {
    
                    /**
                     * Properties of a ListOperationsResponse.
                     * @memberof google.container.v1
                     * @interface IListOperationsResponse
                     * @property {Array.<google.container.v1.IOperation>|null} [operations] ListOperationsResponse operations
                     * @property {Array.<string>|null} [missingZones] ListOperationsResponse missingZones
                     */
    
                    /**
                     * Constructs a new ListOperationsResponse.
                     * @memberof google.container.v1
                     * @classdesc Represents a ListOperationsResponse.
                     * @implements IListOperationsResponse
                     * @constructor
                     * @param {google.container.v1.IListOperationsResponse=} [properties] Properties to set
                     */
                    function ListOperationsResponse(properties) {
                        this.operations = [];
                        this.missingZones = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListOperationsResponse operations.
                     * @member {Array.<google.container.v1.IOperation>} operations
                     * @memberof google.container.v1.ListOperationsResponse
                     * @instance
                     */
                    ListOperationsResponse.prototype.operations = $util.emptyArray;
    
                    /**
                     * ListOperationsResponse missingZones.
                     * @member {Array.<string>} missingZones
                     * @memberof google.container.v1.ListOperationsResponse
                     * @instance
                     */
                    ListOperationsResponse.prototype.missingZones = $util.emptyArray;
    
                    /**
                     * Creates a new ListOperationsResponse instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.ListOperationsResponse
                     * @static
                     * @param {google.container.v1.IListOperationsResponse=} [properties] Properties to set
                     * @returns {google.container.v1.ListOperationsResponse} ListOperationsResponse instance
                     */
                    ListOperationsResponse.create = function create(properties) {
                        return new ListOperationsResponse(properties);
                    };
    
                    /**
                     * Encodes the specified ListOperationsResponse message. Does not implicitly {@link google.container.v1.ListOperationsResponse.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.ListOperationsResponse
                     * @static
                     * @param {google.container.v1.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListOperationsResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.operations != null && message.operations.length)
                            for (var i = 0; i < message.operations.length; ++i)
                                $root.google.container.v1.Operation.encode(message.operations[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.missingZones != null && message.missingZones.length)
                            for (var i = 0; i < message.missingZones.length; ++i)
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.missingZones[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListOperationsResponse message, length delimited. Does not implicitly {@link google.container.v1.ListOperationsResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.ListOperationsResponse
                     * @static
                     * @param {google.container.v1.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListOperationsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListOperationsResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.ListOperationsResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.ListOperationsResponse} ListOperationsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListOperationsResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.ListOperationsResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.operations && message.operations.length))
                                        message.operations = [];
                                    message.operations.push($root.google.container.v1.Operation.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 2: {
                                    if (!(message.missingZones && message.missingZones.length))
                                        message.missingZones = [];
                                    message.missingZones.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListOperationsResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.ListOperationsResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.ListOperationsResponse} ListOperationsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListOperationsResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListOperationsResponse message.
                     * @function verify
                     * @memberof google.container.v1.ListOperationsResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListOperationsResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.operations != null && message.hasOwnProperty("operations")) {
                            if (!Array.isArray(message.operations))
                                return "operations: array expected";
                            for (var i = 0; i < message.operations.length; ++i) {
                                var error = $root.google.container.v1.Operation.verify(message.operations[i]);
                                if (error)
                                    return "operations." + error;
                            }
                        }
                        if (message.missingZones != null && message.hasOwnProperty("missingZones")) {
                            if (!Array.isArray(message.missingZones))
                                return "missingZones: array expected";
                            for (var i = 0; i < message.missingZones.length; ++i)
                                if (!$util.isString(message.missingZones[i]))
                                    return "missingZones: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a ListOperationsResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.ListOperationsResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.ListOperationsResponse} ListOperationsResponse
                     */
                    ListOperationsResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.ListOperationsResponse)
                            return object;
                        var message = new $root.google.container.v1.ListOperationsResponse();
                        if (object.operations) {
                            if (!Array.isArray(object.operations))
                                throw TypeError(".google.container.v1.ListOperationsResponse.operations: array expected");
                            message.operations = [];
                            for (var i = 0; i < object.operations.length; ++i) {
                                if (typeof object.operations[i] !== "object")
                                    throw TypeError(".google.container.v1.ListOperationsResponse.operations: object expected");
                                message.operations[i] = $root.google.container.v1.Operation.fromObject(object.operations[i]);
                            }
                        }
                        if (object.missingZones) {
                            if (!Array.isArray(object.missingZones))
                                throw TypeError(".google.container.v1.ListOperationsResponse.missingZones: array expected");
                            message.missingZones = [];
                            for (var i = 0; i < object.missingZones.length; ++i)
                                message.missingZones[i] = String(object.missingZones[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListOperationsResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.ListOperationsResponse
                     * @static
                     * @param {google.container.v1.ListOperationsResponse} message ListOperationsResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListOperationsResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.operations = [];
                            object.missingZones = [];
                        }
                        if (message.operations && message.operations.length) {
                            object.operations = [];
                            for (var j = 0; j < message.operations.length; ++j)
                                object.operations[j] = $root.google.container.v1.Operation.toObject(message.operations[j], options);
                        }
                        if (message.missingZones && message.missingZones.length) {
                            object.missingZones = [];
                            for (var j = 0; j < message.missingZones.length; ++j)
                                object.missingZones[j] = message.missingZones[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this ListOperationsResponse to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.ListOperationsResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListOperationsResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListOperationsResponse
                     * @function getTypeUrl
                     * @memberof google.container.v1.ListOperationsResponse
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListOperationsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.ListOperationsResponse";
                    };
    
                    return ListOperationsResponse;
                })();
    
                v1.GetServerConfigRequest = (function() {
    
                    /**
                     * Properties of a GetServerConfigRequest.
                     * @memberof google.container.v1
                     * @interface IGetServerConfigRequest
                     * @property {string|null} [projectId] GetServerConfigRequest projectId
                     * @property {string|null} [zone] GetServerConfigRequest zone
                     * @property {string|null} [name] GetServerConfigRequest name
                     */
    
                    /**
                     * Constructs a new GetServerConfigRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a GetServerConfigRequest.
                     * @implements IGetServerConfigRequest
                     * @constructor
                     * @param {google.container.v1.IGetServerConfigRequest=} [properties] Properties to set
                     */
                    function GetServerConfigRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GetServerConfigRequest projectId.
                     * @member {string} projectId
                     * @memberof google.container.v1.GetServerConfigRequest
                     * @instance
                     */
                    GetServerConfigRequest.prototype.projectId = "";
    
                    /**
                     * GetServerConfigRequest zone.
                     * @member {string} zone
                     * @memberof google.container.v1.GetServerConfigRequest
                     * @instance
                     */
                    GetServerConfigRequest.prototype.zone = "";
    
                    /**
                     * GetServerConfigRequest name.
                     * @member {string} name
                     * @memberof google.container.v1.GetServerConfigRequest
                     * @instance
                     */
                    GetServerConfigRequest.prototype.name = "";
    
                    /**
                     * Creates a new GetServerConfigRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.GetServerConfigRequest
                     * @static
                     * @param {google.container.v1.IGetServerConfigRequest=} [properties] Properties to set
                     * @returns {google.container.v1.GetServerConfigRequest} GetServerConfigRequest instance
                     */
                    GetServerConfigRequest.create = function create(properties) {
                        return new GetServerConfigRequest(properties);
                    };
    
                    /**
                     * Encodes the specified GetServerConfigRequest message. Does not implicitly {@link google.container.v1.GetServerConfigRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.GetServerConfigRequest
                     * @static
                     * @param {google.container.v1.IGetServerConfigRequest} message GetServerConfigRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetServerConfigRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GetServerConfigRequest message, length delimited. Does not implicitly {@link google.container.v1.GetServerConfigRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.GetServerConfigRequest
                     * @static
                     * @param {google.container.v1.IGetServerConfigRequest} message GetServerConfigRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetServerConfigRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GetServerConfigRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.GetServerConfigRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.GetServerConfigRequest} GetServerConfigRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetServerConfigRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.GetServerConfigRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.projectId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GetServerConfigRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.GetServerConfigRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.GetServerConfigRequest} GetServerConfigRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetServerConfigRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GetServerConfigRequest message.
                     * @function verify
                     * @memberof google.container.v1.GetServerConfigRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GetServerConfigRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            if (!$util.isString(message.projectId))
                                return "projectId: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a GetServerConfigRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.GetServerConfigRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.GetServerConfigRequest} GetServerConfigRequest
                     */
                    GetServerConfigRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.GetServerConfigRequest)
                            return object;
                        var message = new $root.google.container.v1.GetServerConfigRequest();
                        if (object.projectId != null)
                            message.projectId = String(object.projectId);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GetServerConfigRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.GetServerConfigRequest
                     * @static
                     * @param {google.container.v1.GetServerConfigRequest} message GetServerConfigRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GetServerConfigRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.projectId = "";
                            object.zone = "";
                            object.name = "";
                        }
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            object.projectId = message.projectId;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this GetServerConfigRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.GetServerConfigRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GetServerConfigRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GetServerConfigRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.GetServerConfigRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GetServerConfigRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.GetServerConfigRequest";
                    };
    
                    return GetServerConfigRequest;
                })();
    
                v1.ServerConfig = (function() {
    
                    /**
                     * Properties of a ServerConfig.
                     * @memberof google.container.v1
                     * @interface IServerConfig
                     * @property {string|null} [defaultClusterVersion] ServerConfig defaultClusterVersion
                     * @property {Array.<string>|null} [validNodeVersions] ServerConfig validNodeVersions
                     * @property {string|null} [defaultImageType] ServerConfig defaultImageType
                     * @property {Array.<string>|null} [validImageTypes] ServerConfig validImageTypes
                     * @property {Array.<string>|null} [validMasterVersions] ServerConfig validMasterVersions
                     * @property {Array.<google.container.v1.ServerConfig.IReleaseChannelConfig>|null} [channels] ServerConfig channels
                     */
    
                    /**
                     * Constructs a new ServerConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a ServerConfig.
                     * @implements IServerConfig
                     * @constructor
                     * @param {google.container.v1.IServerConfig=} [properties] Properties to set
                     */
                    function ServerConfig(properties) {
                        this.validNodeVersions = [];
                        this.validImageTypes = [];
                        this.validMasterVersions = [];
                        this.channels = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ServerConfig defaultClusterVersion.
                     * @member {string} defaultClusterVersion
                     * @memberof google.container.v1.ServerConfig
                     * @instance
                     */
                    ServerConfig.prototype.defaultClusterVersion = "";
    
                    /**
                     * ServerConfig validNodeVersions.
                     * @member {Array.<string>} validNodeVersions
                     * @memberof google.container.v1.ServerConfig
                     * @instance
                     */
                    ServerConfig.prototype.validNodeVersions = $util.emptyArray;
    
                    /**
                     * ServerConfig defaultImageType.
                     * @member {string} defaultImageType
                     * @memberof google.container.v1.ServerConfig
                     * @instance
                     */
                    ServerConfig.prototype.defaultImageType = "";
    
                    /**
                     * ServerConfig validImageTypes.
                     * @member {Array.<string>} validImageTypes
                     * @memberof google.container.v1.ServerConfig
                     * @instance
                     */
                    ServerConfig.prototype.validImageTypes = $util.emptyArray;
    
                    /**
                     * ServerConfig validMasterVersions.
                     * @member {Array.<string>} validMasterVersions
                     * @memberof google.container.v1.ServerConfig
                     * @instance
                     */
                    ServerConfig.prototype.validMasterVersions = $util.emptyArray;
    
                    /**
                     * ServerConfig channels.
                     * @member {Array.<google.container.v1.ServerConfig.IReleaseChannelConfig>} channels
                     * @memberof google.container.v1.ServerConfig
                     * @instance
                     */
                    ServerConfig.prototype.channels = $util.emptyArray;
    
                    /**
                     * Creates a new ServerConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.ServerConfig
                     * @static
                     * @param {google.container.v1.IServerConfig=} [properties] Properties to set
                     * @returns {google.container.v1.ServerConfig} ServerConfig instance
                     */
                    ServerConfig.create = function create(properties) {
                        return new ServerConfig(properties);
                    };
    
                    /**
                     * Encodes the specified ServerConfig message. Does not implicitly {@link google.container.v1.ServerConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.ServerConfig
                     * @static
                     * @param {google.container.v1.IServerConfig} message ServerConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ServerConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.defaultClusterVersion != null && Object.hasOwnProperty.call(message, "defaultClusterVersion"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.defaultClusterVersion);
                        if (message.validNodeVersions != null && message.validNodeVersions.length)
                            for (var i = 0; i < message.validNodeVersions.length; ++i)
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.validNodeVersions[i]);
                        if (message.defaultImageType != null && Object.hasOwnProperty.call(message, "defaultImageType"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.defaultImageType);
                        if (message.validImageTypes != null && message.validImageTypes.length)
                            for (var i = 0; i < message.validImageTypes.length; ++i)
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.validImageTypes[i]);
                        if (message.validMasterVersions != null && message.validMasterVersions.length)
                            for (var i = 0; i < message.validMasterVersions.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.validMasterVersions[i]);
                        if (message.channels != null && message.channels.length)
                            for (var i = 0; i < message.channels.length; ++i)
                                $root.google.container.v1.ServerConfig.ReleaseChannelConfig.encode(message.channels[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ServerConfig message, length delimited. Does not implicitly {@link google.container.v1.ServerConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.ServerConfig
                     * @static
                     * @param {google.container.v1.IServerConfig} message ServerConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ServerConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ServerConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.ServerConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.ServerConfig} ServerConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ServerConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.ServerConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.defaultClusterVersion = reader.string();
                                    break;
                                }
                            case 3: {
                                    if (!(message.validNodeVersions && message.validNodeVersions.length))
                                        message.validNodeVersions = [];
                                    message.validNodeVersions.push(reader.string());
                                    break;
                                }
                            case 4: {
                                    message.defaultImageType = reader.string();
                                    break;
                                }
                            case 5: {
                                    if (!(message.validImageTypes && message.validImageTypes.length))
                                        message.validImageTypes = [];
                                    message.validImageTypes.push(reader.string());
                                    break;
                                }
                            case 6: {
                                    if (!(message.validMasterVersions && message.validMasterVersions.length))
                                        message.validMasterVersions = [];
                                    message.validMasterVersions.push(reader.string());
                                    break;
                                }
                            case 9: {
                                    if (!(message.channels && message.channels.length))
                                        message.channels = [];
                                    message.channels.push($root.google.container.v1.ServerConfig.ReleaseChannelConfig.decode(reader, reader.uint32()));
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ServerConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.ServerConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.ServerConfig} ServerConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ServerConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ServerConfig message.
                     * @function verify
                     * @memberof google.container.v1.ServerConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ServerConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.defaultClusterVersion != null && message.hasOwnProperty("defaultClusterVersion"))
                            if (!$util.isString(message.defaultClusterVersion))
                                return "defaultClusterVersion: string expected";
                        if (message.validNodeVersions != null && message.hasOwnProperty("validNodeVersions")) {
                            if (!Array.isArray(message.validNodeVersions))
                                return "validNodeVersions: array expected";
                            for (var i = 0; i < message.validNodeVersions.length; ++i)
                                if (!$util.isString(message.validNodeVersions[i]))
                                    return "validNodeVersions: string[] expected";
                        }
                        if (message.defaultImageType != null && message.hasOwnProperty("defaultImageType"))
                            if (!$util.isString(message.defaultImageType))
                                return "defaultImageType: string expected";
                        if (message.validImageTypes != null && message.hasOwnProperty("validImageTypes")) {
                            if (!Array.isArray(message.validImageTypes))
                                return "validImageTypes: array expected";
                            for (var i = 0; i < message.validImageTypes.length; ++i)
                                if (!$util.isString(message.validImageTypes[i]))
                                    return "validImageTypes: string[] expected";
                        }
                        if (message.validMasterVersions != null && message.hasOwnProperty("validMasterVersions")) {
                            if (!Array.isArray(message.validMasterVersions))
                                return "validMasterVersions: array expected";
                            for (var i = 0; i < message.validMasterVersions.length; ++i)
                                if (!$util.isString(message.validMasterVersions[i]))
                                    return "validMasterVersions: string[] expected";
                        }
                        if (message.channels != null && message.hasOwnProperty("channels")) {
                            if (!Array.isArray(message.channels))
                                return "channels: array expected";
                            for (var i = 0; i < message.channels.length; ++i) {
                                var error = $root.google.container.v1.ServerConfig.ReleaseChannelConfig.verify(message.channels[i]);
                                if (error)
                                    return "channels." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a ServerConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.ServerConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.ServerConfig} ServerConfig
                     */
                    ServerConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.ServerConfig)
                            return object;
                        var message = new $root.google.container.v1.ServerConfig();
                        if (object.defaultClusterVersion != null)
                            message.defaultClusterVersion = String(object.defaultClusterVersion);
                        if (object.validNodeVersions) {
                            if (!Array.isArray(object.validNodeVersions))
                                throw TypeError(".google.container.v1.ServerConfig.validNodeVersions: array expected");
                            message.validNodeVersions = [];
                            for (var i = 0; i < object.validNodeVersions.length; ++i)
                                message.validNodeVersions[i] = String(object.validNodeVersions[i]);
                        }
                        if (object.defaultImageType != null)
                            message.defaultImageType = String(object.defaultImageType);
                        if (object.validImageTypes) {
                            if (!Array.isArray(object.validImageTypes))
                                throw TypeError(".google.container.v1.ServerConfig.validImageTypes: array expected");
                            message.validImageTypes = [];
                            for (var i = 0; i < object.validImageTypes.length; ++i)
                                message.validImageTypes[i] = String(object.validImageTypes[i]);
                        }
                        if (object.validMasterVersions) {
                            if (!Array.isArray(object.validMasterVersions))
                                throw TypeError(".google.container.v1.ServerConfig.validMasterVersions: array expected");
                            message.validMasterVersions = [];
                            for (var i = 0; i < object.validMasterVersions.length; ++i)
                                message.validMasterVersions[i] = String(object.validMasterVersions[i]);
                        }
                        if (object.channels) {
                            if (!Array.isArray(object.channels))
                                throw TypeError(".google.container.v1.ServerConfig.channels: array expected");
                            message.channels = [];
                            for (var i = 0; i < object.channels.length; ++i) {
                                if (typeof object.channels[i] !== "object")
                                    throw TypeError(".google.container.v1.ServerConfig.channels: object expected");
                                message.channels[i] = $root.google.container.v1.ServerConfig.ReleaseChannelConfig.fromObject(object.channels[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ServerConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.ServerConfig
                     * @static
                     * @param {google.container.v1.ServerConfig} message ServerConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ServerConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.validNodeVersions = [];
                            object.validImageTypes = [];
                            object.validMasterVersions = [];
                            object.channels = [];
                        }
                        if (options.defaults) {
                            object.defaultClusterVersion = "";
                            object.defaultImageType = "";
                        }
                        if (message.defaultClusterVersion != null && message.hasOwnProperty("defaultClusterVersion"))
                            object.defaultClusterVersion = message.defaultClusterVersion;
                        if (message.validNodeVersions && message.validNodeVersions.length) {
                            object.validNodeVersions = [];
                            for (var j = 0; j < message.validNodeVersions.length; ++j)
                                object.validNodeVersions[j] = message.validNodeVersions[j];
                        }
                        if (message.defaultImageType != null && message.hasOwnProperty("defaultImageType"))
                            object.defaultImageType = message.defaultImageType;
                        if (message.validImageTypes && message.validImageTypes.length) {
                            object.validImageTypes = [];
                            for (var j = 0; j < message.validImageTypes.length; ++j)
                                object.validImageTypes[j] = message.validImageTypes[j];
                        }
                        if (message.validMasterVersions && message.validMasterVersions.length) {
                            object.validMasterVersions = [];
                            for (var j = 0; j < message.validMasterVersions.length; ++j)
                                object.validMasterVersions[j] = message.validMasterVersions[j];
                        }
                        if (message.channels && message.channels.length) {
                            object.channels = [];
                            for (var j = 0; j < message.channels.length; ++j)
                                object.channels[j] = $root.google.container.v1.ServerConfig.ReleaseChannelConfig.toObject(message.channels[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this ServerConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.ServerConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ServerConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ServerConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.ServerConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ServerConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.ServerConfig";
                    };
    
                    ServerConfig.ReleaseChannelConfig = (function() {
    
                        /**
                         * Properties of a ReleaseChannelConfig.
                         * @memberof google.container.v1.ServerConfig
                         * @interface IReleaseChannelConfig
                         * @property {google.container.v1.ReleaseChannel.Channel|null} [channel] ReleaseChannelConfig channel
                         * @property {string|null} [defaultVersion] ReleaseChannelConfig defaultVersion
                         * @property {Array.<string>|null} [validVersions] ReleaseChannelConfig validVersions
                         */
    
                        /**
                         * Constructs a new ReleaseChannelConfig.
                         * @memberof google.container.v1.ServerConfig
                         * @classdesc Represents a ReleaseChannelConfig.
                         * @implements IReleaseChannelConfig
                         * @constructor
                         * @param {google.container.v1.ServerConfig.IReleaseChannelConfig=} [properties] Properties to set
                         */
                        function ReleaseChannelConfig(properties) {
                            this.validVersions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ReleaseChannelConfig channel.
                         * @member {google.container.v1.ReleaseChannel.Channel} channel
                         * @memberof google.container.v1.ServerConfig.ReleaseChannelConfig
                         * @instance
                         */
                        ReleaseChannelConfig.prototype.channel = 0;
    
                        /**
                         * ReleaseChannelConfig defaultVersion.
                         * @member {string} defaultVersion
                         * @memberof google.container.v1.ServerConfig.ReleaseChannelConfig
                         * @instance
                         */
                        ReleaseChannelConfig.prototype.defaultVersion = "";
    
                        /**
                         * ReleaseChannelConfig validVersions.
                         * @member {Array.<string>} validVersions
                         * @memberof google.container.v1.ServerConfig.ReleaseChannelConfig
                         * @instance
                         */
                        ReleaseChannelConfig.prototype.validVersions = $util.emptyArray;
    
                        /**
                         * Creates a new ReleaseChannelConfig instance using the specified properties.
                         * @function create
                         * @memberof google.container.v1.ServerConfig.ReleaseChannelConfig
                         * @static
                         * @param {google.container.v1.ServerConfig.IReleaseChannelConfig=} [properties] Properties to set
                         * @returns {google.container.v1.ServerConfig.ReleaseChannelConfig} ReleaseChannelConfig instance
                         */
                        ReleaseChannelConfig.create = function create(properties) {
                            return new ReleaseChannelConfig(properties);
                        };
    
                        /**
                         * Encodes the specified ReleaseChannelConfig message. Does not implicitly {@link google.container.v1.ServerConfig.ReleaseChannelConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.container.v1.ServerConfig.ReleaseChannelConfig
                         * @static
                         * @param {google.container.v1.ServerConfig.IReleaseChannelConfig} message ReleaseChannelConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReleaseChannelConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.channel != null && Object.hasOwnProperty.call(message, "channel"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.channel);
                            if (message.defaultVersion != null && Object.hasOwnProperty.call(message, "defaultVersion"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.defaultVersion);
                            if (message.validVersions != null && message.validVersions.length)
                                for (var i = 0; i < message.validVersions.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.validVersions[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ReleaseChannelConfig message, length delimited. Does not implicitly {@link google.container.v1.ServerConfig.ReleaseChannelConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.container.v1.ServerConfig.ReleaseChannelConfig
                         * @static
                         * @param {google.container.v1.ServerConfig.IReleaseChannelConfig} message ReleaseChannelConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReleaseChannelConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ReleaseChannelConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.container.v1.ServerConfig.ReleaseChannelConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.container.v1.ServerConfig.ReleaseChannelConfig} ReleaseChannelConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReleaseChannelConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.ServerConfig.ReleaseChannelConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.channel = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.defaultVersion = reader.string();
                                        break;
                                    }
                                case 4: {
                                        if (!(message.validVersions && message.validVersions.length))
                                            message.validVersions = [];
                                        message.validVersions.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ReleaseChannelConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.container.v1.ServerConfig.ReleaseChannelConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.container.v1.ServerConfig.ReleaseChannelConfig} ReleaseChannelConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReleaseChannelConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ReleaseChannelConfig message.
                         * @function verify
                         * @memberof google.container.v1.ServerConfig.ReleaseChannelConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ReleaseChannelConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.channel != null && message.hasOwnProperty("channel"))
                                switch (message.channel) {
                                default:
                                    return "channel: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.defaultVersion != null && message.hasOwnProperty("defaultVersion"))
                                if (!$util.isString(message.defaultVersion))
                                    return "defaultVersion: string expected";
                            if (message.validVersions != null && message.hasOwnProperty("validVersions")) {
                                if (!Array.isArray(message.validVersions))
                                    return "validVersions: array expected";
                                for (var i = 0; i < message.validVersions.length; ++i)
                                    if (!$util.isString(message.validVersions[i]))
                                        return "validVersions: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ReleaseChannelConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.container.v1.ServerConfig.ReleaseChannelConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.container.v1.ServerConfig.ReleaseChannelConfig} ReleaseChannelConfig
                         */
                        ReleaseChannelConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.container.v1.ServerConfig.ReleaseChannelConfig)
                                return object;
                            var message = new $root.google.container.v1.ServerConfig.ReleaseChannelConfig();
                            switch (object.channel) {
                            default:
                                if (typeof object.channel === "number") {
                                    message.channel = object.channel;
                                    break;
                                }
                                break;
                            case "UNSPECIFIED":
                            case 0:
                                message.channel = 0;
                                break;
                            case "RAPID":
                            case 1:
                                message.channel = 1;
                                break;
                            case "REGULAR":
                            case 2:
                                message.channel = 2;
                                break;
                            case "STABLE":
                            case 3:
                                message.channel = 3;
                                break;
                            }
                            if (object.defaultVersion != null)
                                message.defaultVersion = String(object.defaultVersion);
                            if (object.validVersions) {
                                if (!Array.isArray(object.validVersions))
                                    throw TypeError(".google.container.v1.ServerConfig.ReleaseChannelConfig.validVersions: array expected");
                                message.validVersions = [];
                                for (var i = 0; i < object.validVersions.length; ++i)
                                    message.validVersions[i] = String(object.validVersions[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ReleaseChannelConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.container.v1.ServerConfig.ReleaseChannelConfig
                         * @static
                         * @param {google.container.v1.ServerConfig.ReleaseChannelConfig} message ReleaseChannelConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ReleaseChannelConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.validVersions = [];
                            if (options.defaults) {
                                object.channel = options.enums === String ? "UNSPECIFIED" : 0;
                                object.defaultVersion = "";
                            }
                            if (message.channel != null && message.hasOwnProperty("channel"))
                                object.channel = options.enums === String ? $root.google.container.v1.ReleaseChannel.Channel[message.channel] === undefined ? message.channel : $root.google.container.v1.ReleaseChannel.Channel[message.channel] : message.channel;
                            if (message.defaultVersion != null && message.hasOwnProperty("defaultVersion"))
                                object.defaultVersion = message.defaultVersion;
                            if (message.validVersions && message.validVersions.length) {
                                object.validVersions = [];
                                for (var j = 0; j < message.validVersions.length; ++j)
                                    object.validVersions[j] = message.validVersions[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ReleaseChannelConfig to JSON.
                         * @function toJSON
                         * @memberof google.container.v1.ServerConfig.ReleaseChannelConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ReleaseChannelConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ReleaseChannelConfig
                         * @function getTypeUrl
                         * @memberof google.container.v1.ServerConfig.ReleaseChannelConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ReleaseChannelConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.container.v1.ServerConfig.ReleaseChannelConfig";
                        };
    
                        return ReleaseChannelConfig;
                    })();
    
                    return ServerConfig;
                })();
    
                v1.CreateNodePoolRequest = (function() {
    
                    /**
                     * Properties of a CreateNodePoolRequest.
                     * @memberof google.container.v1
                     * @interface ICreateNodePoolRequest
                     * @property {string|null} [projectId] CreateNodePoolRequest projectId
                     * @property {string|null} [zone] CreateNodePoolRequest zone
                     * @property {string|null} [clusterId] CreateNodePoolRequest clusterId
                     * @property {google.container.v1.INodePool|null} [nodePool] CreateNodePoolRequest nodePool
                     * @property {string|null} [parent] CreateNodePoolRequest parent
                     */
    
                    /**
                     * Constructs a new CreateNodePoolRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a CreateNodePoolRequest.
                     * @implements ICreateNodePoolRequest
                     * @constructor
                     * @param {google.container.v1.ICreateNodePoolRequest=} [properties] Properties to set
                     */
                    function CreateNodePoolRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * CreateNodePoolRequest projectId.
                     * @member {string} projectId
                     * @memberof google.container.v1.CreateNodePoolRequest
                     * @instance
                     */
                    CreateNodePoolRequest.prototype.projectId = "";
    
                    /**
                     * CreateNodePoolRequest zone.
                     * @member {string} zone
                     * @memberof google.container.v1.CreateNodePoolRequest
                     * @instance
                     */
                    CreateNodePoolRequest.prototype.zone = "";
    
                    /**
                     * CreateNodePoolRequest clusterId.
                     * @member {string} clusterId
                     * @memberof google.container.v1.CreateNodePoolRequest
                     * @instance
                     */
                    CreateNodePoolRequest.prototype.clusterId = "";
    
                    /**
                     * CreateNodePoolRequest nodePool.
                     * @member {google.container.v1.INodePool|null|undefined} nodePool
                     * @memberof google.container.v1.CreateNodePoolRequest
                     * @instance
                     */
                    CreateNodePoolRequest.prototype.nodePool = null;
    
                    /**
                     * CreateNodePoolRequest parent.
                     * @member {string} parent
                     * @memberof google.container.v1.CreateNodePoolRequest
                     * @instance
                     */
                    CreateNodePoolRequest.prototype.parent = "";
    
                    /**
                     * Creates a new CreateNodePoolRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.CreateNodePoolRequest
                     * @static
                     * @param {google.container.v1.ICreateNodePoolRequest=} [properties] Properties to set
                     * @returns {google.container.v1.CreateNodePoolRequest} CreateNodePoolRequest instance
                     */
                    CreateNodePoolRequest.create = function create(properties) {
                        return new CreateNodePoolRequest(properties);
                    };
    
                    /**
                     * Encodes the specified CreateNodePoolRequest message. Does not implicitly {@link google.container.v1.CreateNodePoolRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.CreateNodePoolRequest
                     * @static
                     * @param {google.container.v1.ICreateNodePoolRequest} message CreateNodePoolRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CreateNodePoolRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.clusterId != null && Object.hasOwnProperty.call(message, "clusterId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.clusterId);
                        if (message.nodePool != null && Object.hasOwnProperty.call(message, "nodePool"))
                            $root.google.container.v1.NodePool.encode(message.nodePool, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.parent);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified CreateNodePoolRequest message, length delimited. Does not implicitly {@link google.container.v1.CreateNodePoolRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.CreateNodePoolRequest
                     * @static
                     * @param {google.container.v1.ICreateNodePoolRequest} message CreateNodePoolRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CreateNodePoolRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a CreateNodePoolRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.CreateNodePoolRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.CreateNodePoolRequest} CreateNodePoolRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CreateNodePoolRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.CreateNodePoolRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.projectId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.clusterId = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.nodePool = $root.google.container.v1.NodePool.decode(reader, reader.uint32());
                                    break;
                                }
                            case 6: {
                                    message.parent = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a CreateNodePoolRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.CreateNodePoolRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.CreateNodePoolRequest} CreateNodePoolRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CreateNodePoolRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a CreateNodePoolRequest message.
                     * @function verify
                     * @memberof google.container.v1.CreateNodePoolRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    CreateNodePoolRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            if (!$util.isString(message.projectId))
                                return "projectId: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            if (!$util.isString(message.clusterId))
                                return "clusterId: string expected";
                        if (message.nodePool != null && message.hasOwnProperty("nodePool")) {
                            var error = $root.google.container.v1.NodePool.verify(message.nodePool);
                            if (error)
                                return "nodePool." + error;
                        }
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            if (!$util.isString(message.parent))
                                return "parent: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a CreateNodePoolRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.CreateNodePoolRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.CreateNodePoolRequest} CreateNodePoolRequest
                     */
                    CreateNodePoolRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.CreateNodePoolRequest)
                            return object;
                        var message = new $root.google.container.v1.CreateNodePoolRequest();
                        if (object.projectId != null)
                            message.projectId = String(object.projectId);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.clusterId != null)
                            message.clusterId = String(object.clusterId);
                        if (object.nodePool != null) {
                            if (typeof object.nodePool !== "object")
                                throw TypeError(".google.container.v1.CreateNodePoolRequest.nodePool: object expected");
                            message.nodePool = $root.google.container.v1.NodePool.fromObject(object.nodePool);
                        }
                        if (object.parent != null)
                            message.parent = String(object.parent);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a CreateNodePoolRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.CreateNodePoolRequest
                     * @static
                     * @param {google.container.v1.CreateNodePoolRequest} message CreateNodePoolRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    CreateNodePoolRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.projectId = "";
                            object.zone = "";
                            object.clusterId = "";
                            object.nodePool = null;
                            object.parent = "";
                        }
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            object.projectId = message.projectId;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            object.clusterId = message.clusterId;
                        if (message.nodePool != null && message.hasOwnProperty("nodePool"))
                            object.nodePool = $root.google.container.v1.NodePool.toObject(message.nodePool, options);
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            object.parent = message.parent;
                        return object;
                    };
    
                    /**
                     * Converts this CreateNodePoolRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.CreateNodePoolRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    CreateNodePoolRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for CreateNodePoolRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.CreateNodePoolRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    CreateNodePoolRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.CreateNodePoolRequest";
                    };
    
                    return CreateNodePoolRequest;
                })();
    
                v1.DeleteNodePoolRequest = (function() {
    
                    /**
                     * Properties of a DeleteNodePoolRequest.
                     * @memberof google.container.v1
                     * @interface IDeleteNodePoolRequest
                     * @property {string|null} [projectId] DeleteNodePoolRequest projectId
                     * @property {string|null} [zone] DeleteNodePoolRequest zone
                     * @property {string|null} [clusterId] DeleteNodePoolRequest clusterId
                     * @property {string|null} [nodePoolId] DeleteNodePoolRequest nodePoolId
                     * @property {string|null} [name] DeleteNodePoolRequest name
                     */
    
                    /**
                     * Constructs a new DeleteNodePoolRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a DeleteNodePoolRequest.
                     * @implements IDeleteNodePoolRequest
                     * @constructor
                     * @param {google.container.v1.IDeleteNodePoolRequest=} [properties] Properties to set
                     */
                    function DeleteNodePoolRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * DeleteNodePoolRequest projectId.
                     * @member {string} projectId
                     * @memberof google.container.v1.DeleteNodePoolRequest
                     * @instance
                     */
                    DeleteNodePoolRequest.prototype.projectId = "";
    
                    /**
                     * DeleteNodePoolRequest zone.
                     * @member {string} zone
                     * @memberof google.container.v1.DeleteNodePoolRequest
                     * @instance
                     */
                    DeleteNodePoolRequest.prototype.zone = "";
    
                    /**
                     * DeleteNodePoolRequest clusterId.
                     * @member {string} clusterId
                     * @memberof google.container.v1.DeleteNodePoolRequest
                     * @instance
                     */
                    DeleteNodePoolRequest.prototype.clusterId = "";
    
                    /**
                     * DeleteNodePoolRequest nodePoolId.
                     * @member {string} nodePoolId
                     * @memberof google.container.v1.DeleteNodePoolRequest
                     * @instance
                     */
                    DeleteNodePoolRequest.prototype.nodePoolId = "";
    
                    /**
                     * DeleteNodePoolRequest name.
                     * @member {string} name
                     * @memberof google.container.v1.DeleteNodePoolRequest
                     * @instance
                     */
                    DeleteNodePoolRequest.prototype.name = "";
    
                    /**
                     * Creates a new DeleteNodePoolRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.DeleteNodePoolRequest
                     * @static
                     * @param {google.container.v1.IDeleteNodePoolRequest=} [properties] Properties to set
                     * @returns {google.container.v1.DeleteNodePoolRequest} DeleteNodePoolRequest instance
                     */
                    DeleteNodePoolRequest.create = function create(properties) {
                        return new DeleteNodePoolRequest(properties);
                    };
    
                    /**
                     * Encodes the specified DeleteNodePoolRequest message. Does not implicitly {@link google.container.v1.DeleteNodePoolRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.DeleteNodePoolRequest
                     * @static
                     * @param {google.container.v1.IDeleteNodePoolRequest} message DeleteNodePoolRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DeleteNodePoolRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.clusterId != null && Object.hasOwnProperty.call(message, "clusterId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.clusterId);
                        if (message.nodePoolId != null && Object.hasOwnProperty.call(message, "nodePoolId"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.nodePoolId);
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified DeleteNodePoolRequest message, length delimited. Does not implicitly {@link google.container.v1.DeleteNodePoolRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.DeleteNodePoolRequest
                     * @static
                     * @param {google.container.v1.IDeleteNodePoolRequest} message DeleteNodePoolRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DeleteNodePoolRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a DeleteNodePoolRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.DeleteNodePoolRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.DeleteNodePoolRequest} DeleteNodePoolRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DeleteNodePoolRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.DeleteNodePoolRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.projectId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.clusterId = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.nodePoolId = reader.string();
                                    break;
                                }
                            case 6: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a DeleteNodePoolRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.DeleteNodePoolRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.DeleteNodePoolRequest} DeleteNodePoolRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DeleteNodePoolRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a DeleteNodePoolRequest message.
                     * @function verify
                     * @memberof google.container.v1.DeleteNodePoolRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    DeleteNodePoolRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            if (!$util.isString(message.projectId))
                                return "projectId: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            if (!$util.isString(message.clusterId))
                                return "clusterId: string expected";
                        if (message.nodePoolId != null && message.hasOwnProperty("nodePoolId"))
                            if (!$util.isString(message.nodePoolId))
                                return "nodePoolId: string expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a DeleteNodePoolRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.DeleteNodePoolRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.DeleteNodePoolRequest} DeleteNodePoolRequest
                     */
                    DeleteNodePoolRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.DeleteNodePoolRequest)
                            return object;
                        var message = new $root.google.container.v1.DeleteNodePoolRequest();
                        if (object.projectId != null)
                            message.projectId = String(object.projectId);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.clusterId != null)
                            message.clusterId = String(object.clusterId);
                        if (object.nodePoolId != null)
                            message.nodePoolId = String(object.nodePoolId);
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a DeleteNodePoolRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.DeleteNodePoolRequest
                     * @static
                     * @param {google.container.v1.DeleteNodePoolRequest} message DeleteNodePoolRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    DeleteNodePoolRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.projectId = "";
                            object.zone = "";
                            object.clusterId = "";
                            object.nodePoolId = "";
                            object.name = "";
                        }
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            object.projectId = message.projectId;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            object.clusterId = message.clusterId;
                        if (message.nodePoolId != null && message.hasOwnProperty("nodePoolId"))
                            object.nodePoolId = message.nodePoolId;
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this DeleteNodePoolRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.DeleteNodePoolRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    DeleteNodePoolRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for DeleteNodePoolRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.DeleteNodePoolRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    DeleteNodePoolRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.DeleteNodePoolRequest";
                    };
    
                    return DeleteNodePoolRequest;
                })();
    
                v1.ListNodePoolsRequest = (function() {
    
                    /**
                     * Properties of a ListNodePoolsRequest.
                     * @memberof google.container.v1
                     * @interface IListNodePoolsRequest
                     * @property {string|null} [projectId] ListNodePoolsRequest projectId
                     * @property {string|null} [zone] ListNodePoolsRequest zone
                     * @property {string|null} [clusterId] ListNodePoolsRequest clusterId
                     * @property {string|null} [parent] ListNodePoolsRequest parent
                     */
    
                    /**
                     * Constructs a new ListNodePoolsRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a ListNodePoolsRequest.
                     * @implements IListNodePoolsRequest
                     * @constructor
                     * @param {google.container.v1.IListNodePoolsRequest=} [properties] Properties to set
                     */
                    function ListNodePoolsRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListNodePoolsRequest projectId.
                     * @member {string} projectId
                     * @memberof google.container.v1.ListNodePoolsRequest
                     * @instance
                     */
                    ListNodePoolsRequest.prototype.projectId = "";
    
                    /**
                     * ListNodePoolsRequest zone.
                     * @member {string} zone
                     * @memberof google.container.v1.ListNodePoolsRequest
                     * @instance
                     */
                    ListNodePoolsRequest.prototype.zone = "";
    
                    /**
                     * ListNodePoolsRequest clusterId.
                     * @member {string} clusterId
                     * @memberof google.container.v1.ListNodePoolsRequest
                     * @instance
                     */
                    ListNodePoolsRequest.prototype.clusterId = "";
    
                    /**
                     * ListNodePoolsRequest parent.
                     * @member {string} parent
                     * @memberof google.container.v1.ListNodePoolsRequest
                     * @instance
                     */
                    ListNodePoolsRequest.prototype.parent = "";
    
                    /**
                     * Creates a new ListNodePoolsRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.ListNodePoolsRequest
                     * @static
                     * @param {google.container.v1.IListNodePoolsRequest=} [properties] Properties to set
                     * @returns {google.container.v1.ListNodePoolsRequest} ListNodePoolsRequest instance
                     */
                    ListNodePoolsRequest.create = function create(properties) {
                        return new ListNodePoolsRequest(properties);
                    };
    
                    /**
                     * Encodes the specified ListNodePoolsRequest message. Does not implicitly {@link google.container.v1.ListNodePoolsRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.ListNodePoolsRequest
                     * @static
                     * @param {google.container.v1.IListNodePoolsRequest} message ListNodePoolsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListNodePoolsRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.clusterId != null && Object.hasOwnProperty.call(message, "clusterId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.clusterId);
                        if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.parent);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListNodePoolsRequest message, length delimited. Does not implicitly {@link google.container.v1.ListNodePoolsRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.ListNodePoolsRequest
                     * @static
                     * @param {google.container.v1.IListNodePoolsRequest} message ListNodePoolsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListNodePoolsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListNodePoolsRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.ListNodePoolsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.ListNodePoolsRequest} ListNodePoolsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListNodePoolsRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.ListNodePoolsRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.projectId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.clusterId = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.parent = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListNodePoolsRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.ListNodePoolsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.ListNodePoolsRequest} ListNodePoolsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListNodePoolsRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListNodePoolsRequest message.
                     * @function verify
                     * @memberof google.container.v1.ListNodePoolsRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListNodePoolsRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            if (!$util.isString(message.projectId))
                                return "projectId: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            if (!$util.isString(message.clusterId))
                                return "clusterId: string expected";
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            if (!$util.isString(message.parent))
                                return "parent: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListNodePoolsRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.ListNodePoolsRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.ListNodePoolsRequest} ListNodePoolsRequest
                     */
                    ListNodePoolsRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.ListNodePoolsRequest)
                            return object;
                        var message = new $root.google.container.v1.ListNodePoolsRequest();
                        if (object.projectId != null)
                            message.projectId = String(object.projectId);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.clusterId != null)
                            message.clusterId = String(object.clusterId);
                        if (object.parent != null)
                            message.parent = String(object.parent);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListNodePoolsRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.ListNodePoolsRequest
                     * @static
                     * @param {google.container.v1.ListNodePoolsRequest} message ListNodePoolsRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListNodePoolsRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.projectId = "";
                            object.zone = "";
                            object.clusterId = "";
                            object.parent = "";
                        }
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            object.projectId = message.projectId;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            object.clusterId = message.clusterId;
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            object.parent = message.parent;
                        return object;
                    };
    
                    /**
                     * Converts this ListNodePoolsRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.ListNodePoolsRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListNodePoolsRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListNodePoolsRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.ListNodePoolsRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListNodePoolsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.ListNodePoolsRequest";
                    };
    
                    return ListNodePoolsRequest;
                })();
    
                v1.GetNodePoolRequest = (function() {
    
                    /**
                     * Properties of a GetNodePoolRequest.
                     * @memberof google.container.v1
                     * @interface IGetNodePoolRequest
                     * @property {string|null} [projectId] GetNodePoolRequest projectId
                     * @property {string|null} [zone] GetNodePoolRequest zone
                     * @property {string|null} [clusterId] GetNodePoolRequest clusterId
                     * @property {string|null} [nodePoolId] GetNodePoolRequest nodePoolId
                     * @property {string|null} [name] GetNodePoolRequest name
                     */
    
                    /**
                     * Constructs a new GetNodePoolRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a GetNodePoolRequest.
                     * @implements IGetNodePoolRequest
                     * @constructor
                     * @param {google.container.v1.IGetNodePoolRequest=} [properties] Properties to set
                     */
                    function GetNodePoolRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GetNodePoolRequest projectId.
                     * @member {string} projectId
                     * @memberof google.container.v1.GetNodePoolRequest
                     * @instance
                     */
                    GetNodePoolRequest.prototype.projectId = "";
    
                    /**
                     * GetNodePoolRequest zone.
                     * @member {string} zone
                     * @memberof google.container.v1.GetNodePoolRequest
                     * @instance
                     */
                    GetNodePoolRequest.prototype.zone = "";
    
                    /**
                     * GetNodePoolRequest clusterId.
                     * @member {string} clusterId
                     * @memberof google.container.v1.GetNodePoolRequest
                     * @instance
                     */
                    GetNodePoolRequest.prototype.clusterId = "";
    
                    /**
                     * GetNodePoolRequest nodePoolId.
                     * @member {string} nodePoolId
                     * @memberof google.container.v1.GetNodePoolRequest
                     * @instance
                     */
                    GetNodePoolRequest.prototype.nodePoolId = "";
    
                    /**
                     * GetNodePoolRequest name.
                     * @member {string} name
                     * @memberof google.container.v1.GetNodePoolRequest
                     * @instance
                     */
                    GetNodePoolRequest.prototype.name = "";
    
                    /**
                     * Creates a new GetNodePoolRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.GetNodePoolRequest
                     * @static
                     * @param {google.container.v1.IGetNodePoolRequest=} [properties] Properties to set
                     * @returns {google.container.v1.GetNodePoolRequest} GetNodePoolRequest instance
                     */
                    GetNodePoolRequest.create = function create(properties) {
                        return new GetNodePoolRequest(properties);
                    };
    
                    /**
                     * Encodes the specified GetNodePoolRequest message. Does not implicitly {@link google.container.v1.GetNodePoolRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.GetNodePoolRequest
                     * @static
                     * @param {google.container.v1.IGetNodePoolRequest} message GetNodePoolRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetNodePoolRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.clusterId != null && Object.hasOwnProperty.call(message, "clusterId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.clusterId);
                        if (message.nodePoolId != null && Object.hasOwnProperty.call(message, "nodePoolId"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.nodePoolId);
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GetNodePoolRequest message, length delimited. Does not implicitly {@link google.container.v1.GetNodePoolRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.GetNodePoolRequest
                     * @static
                     * @param {google.container.v1.IGetNodePoolRequest} message GetNodePoolRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetNodePoolRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GetNodePoolRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.GetNodePoolRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.GetNodePoolRequest} GetNodePoolRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetNodePoolRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.GetNodePoolRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.projectId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.clusterId = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.nodePoolId = reader.string();
                                    break;
                                }
                            case 6: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GetNodePoolRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.GetNodePoolRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.GetNodePoolRequest} GetNodePoolRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetNodePoolRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GetNodePoolRequest message.
                     * @function verify
                     * @memberof google.container.v1.GetNodePoolRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GetNodePoolRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            if (!$util.isString(message.projectId))
                                return "projectId: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            if (!$util.isString(message.clusterId))
                                return "clusterId: string expected";
                        if (message.nodePoolId != null && message.hasOwnProperty("nodePoolId"))
                            if (!$util.isString(message.nodePoolId))
                                return "nodePoolId: string expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a GetNodePoolRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.GetNodePoolRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.GetNodePoolRequest} GetNodePoolRequest
                     */
                    GetNodePoolRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.GetNodePoolRequest)
                            return object;
                        var message = new $root.google.container.v1.GetNodePoolRequest();
                        if (object.projectId != null)
                            message.projectId = String(object.projectId);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.clusterId != null)
                            message.clusterId = String(object.clusterId);
                        if (object.nodePoolId != null)
                            message.nodePoolId = String(object.nodePoolId);
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GetNodePoolRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.GetNodePoolRequest
                     * @static
                     * @param {google.container.v1.GetNodePoolRequest} message GetNodePoolRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GetNodePoolRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.projectId = "";
                            object.zone = "";
                            object.clusterId = "";
                            object.nodePoolId = "";
                            object.name = "";
                        }
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            object.projectId = message.projectId;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            object.clusterId = message.clusterId;
                        if (message.nodePoolId != null && message.hasOwnProperty("nodePoolId"))
                            object.nodePoolId = message.nodePoolId;
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this GetNodePoolRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.GetNodePoolRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GetNodePoolRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GetNodePoolRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.GetNodePoolRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GetNodePoolRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.GetNodePoolRequest";
                    };
    
                    return GetNodePoolRequest;
                })();
    
                v1.BlueGreenSettings = (function() {
    
                    /**
                     * Properties of a BlueGreenSettings.
                     * @memberof google.container.v1
                     * @interface IBlueGreenSettings
                     * @property {google.container.v1.BlueGreenSettings.IStandardRolloutPolicy|null} [standardRolloutPolicy] BlueGreenSettings standardRolloutPolicy
                     * @property {google.protobuf.IDuration|null} [nodePoolSoakDuration] BlueGreenSettings nodePoolSoakDuration
                     */
    
                    /**
                     * Constructs a new BlueGreenSettings.
                     * @memberof google.container.v1
                     * @classdesc Represents a BlueGreenSettings.
                     * @implements IBlueGreenSettings
                     * @constructor
                     * @param {google.container.v1.IBlueGreenSettings=} [properties] Properties to set
                     */
                    function BlueGreenSettings(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * BlueGreenSettings standardRolloutPolicy.
                     * @member {google.container.v1.BlueGreenSettings.IStandardRolloutPolicy|null|undefined} standardRolloutPolicy
                     * @memberof google.container.v1.BlueGreenSettings
                     * @instance
                     */
                    BlueGreenSettings.prototype.standardRolloutPolicy = null;
    
                    /**
                     * BlueGreenSettings nodePoolSoakDuration.
                     * @member {google.protobuf.IDuration|null|undefined} nodePoolSoakDuration
                     * @memberof google.container.v1.BlueGreenSettings
                     * @instance
                     */
                    BlueGreenSettings.prototype.nodePoolSoakDuration = null;
    
                    // OneOf field names bound to virtual getters and setters
                    var $oneOfFields;
    
                    /**
                     * BlueGreenSettings rolloutPolicy.
                     * @member {"standardRolloutPolicy"|undefined} rolloutPolicy
                     * @memberof google.container.v1.BlueGreenSettings
                     * @instance
                     */
                    Object.defineProperty(BlueGreenSettings.prototype, "rolloutPolicy", {
                        get: $util.oneOfGetter($oneOfFields = ["standardRolloutPolicy"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });
    
                    /**
                     * BlueGreenSettings _nodePoolSoakDuration.
                     * @member {"nodePoolSoakDuration"|undefined} _nodePoolSoakDuration
                     * @memberof google.container.v1.BlueGreenSettings
                     * @instance
                     */
                    Object.defineProperty(BlueGreenSettings.prototype, "_nodePoolSoakDuration", {
                        get: $util.oneOfGetter($oneOfFields = ["nodePoolSoakDuration"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });
    
                    /**
                     * Creates a new BlueGreenSettings instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.BlueGreenSettings
                     * @static
                     * @param {google.container.v1.IBlueGreenSettings=} [properties] Properties to set
                     * @returns {google.container.v1.BlueGreenSettings} BlueGreenSettings instance
                     */
                    BlueGreenSettings.create = function create(properties) {
                        return new BlueGreenSettings(properties);
                    };
    
                    /**
                     * Encodes the specified BlueGreenSettings message. Does not implicitly {@link google.container.v1.BlueGreenSettings.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.BlueGreenSettings
                     * @static
                     * @param {google.container.v1.IBlueGreenSettings} message BlueGreenSettings message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    BlueGreenSettings.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.standardRolloutPolicy != null && Object.hasOwnProperty.call(message, "standardRolloutPolicy"))
                            $root.google.container.v1.BlueGreenSettings.StandardRolloutPolicy.encode(message.standardRolloutPolicy, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.nodePoolSoakDuration != null && Object.hasOwnProperty.call(message, "nodePoolSoakDuration"))
                            $root.google.protobuf.Duration.encode(message.nodePoolSoakDuration, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified BlueGreenSettings message, length delimited. Does not implicitly {@link google.container.v1.BlueGreenSettings.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.BlueGreenSettings
                     * @static
                     * @param {google.container.v1.IBlueGreenSettings} message BlueGreenSettings message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    BlueGreenSettings.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a BlueGreenSettings message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.BlueGreenSettings
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.BlueGreenSettings} BlueGreenSettings
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    BlueGreenSettings.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.BlueGreenSettings();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.standardRolloutPolicy = $root.google.container.v1.BlueGreenSettings.StandardRolloutPolicy.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.nodePoolSoakDuration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a BlueGreenSettings message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.BlueGreenSettings
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.BlueGreenSettings} BlueGreenSettings
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    BlueGreenSettings.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a BlueGreenSettings message.
                     * @function verify
                     * @memberof google.container.v1.BlueGreenSettings
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    BlueGreenSettings.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        var properties = {};
                        if (message.standardRolloutPolicy != null && message.hasOwnProperty("standardRolloutPolicy")) {
                            properties.rolloutPolicy = 1;
                            {
                                var error = $root.google.container.v1.BlueGreenSettings.StandardRolloutPolicy.verify(message.standardRolloutPolicy);
                                if (error)
                                    return "standardRolloutPolicy." + error;
                            }
                        }
                        if (message.nodePoolSoakDuration != null && message.hasOwnProperty("nodePoolSoakDuration")) {
                            properties._nodePoolSoakDuration = 1;
                            {
                                var error = $root.google.protobuf.Duration.verify(message.nodePoolSoakDuration);
                                if (error)
                                    return "nodePoolSoakDuration." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a BlueGreenSettings message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.BlueGreenSettings
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.BlueGreenSettings} BlueGreenSettings
                     */
                    BlueGreenSettings.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.BlueGreenSettings)
                            return object;
                        var message = new $root.google.container.v1.BlueGreenSettings();
                        if (object.standardRolloutPolicy != null) {
                            if (typeof object.standardRolloutPolicy !== "object")
                                throw TypeError(".google.container.v1.BlueGreenSettings.standardRolloutPolicy: object expected");
                            message.standardRolloutPolicy = $root.google.container.v1.BlueGreenSettings.StandardRolloutPolicy.fromObject(object.standardRolloutPolicy);
                        }
                        if (object.nodePoolSoakDuration != null) {
                            if (typeof object.nodePoolSoakDuration !== "object")
                                throw TypeError(".google.container.v1.BlueGreenSettings.nodePoolSoakDuration: object expected");
                            message.nodePoolSoakDuration = $root.google.protobuf.Duration.fromObject(object.nodePoolSoakDuration);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a BlueGreenSettings message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.BlueGreenSettings
                     * @static
                     * @param {google.container.v1.BlueGreenSettings} message BlueGreenSettings
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    BlueGreenSettings.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (message.standardRolloutPolicy != null && message.hasOwnProperty("standardRolloutPolicy")) {
                            object.standardRolloutPolicy = $root.google.container.v1.BlueGreenSettings.StandardRolloutPolicy.toObject(message.standardRolloutPolicy, options);
                            if (options.oneofs)
                                object.rolloutPolicy = "standardRolloutPolicy";
                        }
                        if (message.nodePoolSoakDuration != null && message.hasOwnProperty("nodePoolSoakDuration")) {
                            object.nodePoolSoakDuration = $root.google.protobuf.Duration.toObject(message.nodePoolSoakDuration, options);
                            if (options.oneofs)
                                object._nodePoolSoakDuration = "nodePoolSoakDuration";
                        }
                        return object;
                    };
    
                    /**
                     * Converts this BlueGreenSettings to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.BlueGreenSettings
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    BlueGreenSettings.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for BlueGreenSettings
                     * @function getTypeUrl
                     * @memberof google.container.v1.BlueGreenSettings
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    BlueGreenSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.BlueGreenSettings";
                    };
    
                    BlueGreenSettings.StandardRolloutPolicy = (function() {
    
                        /**
                         * Properties of a StandardRolloutPolicy.
                         * @memberof google.container.v1.BlueGreenSettings
                         * @interface IStandardRolloutPolicy
                         * @property {number|null} [batchPercentage] StandardRolloutPolicy batchPercentage
                         * @property {number|null} [batchNodeCount] StandardRolloutPolicy batchNodeCount
                         * @property {google.protobuf.IDuration|null} [batchSoakDuration] StandardRolloutPolicy batchSoakDuration
                         */
    
                        /**
                         * Constructs a new StandardRolloutPolicy.
                         * @memberof google.container.v1.BlueGreenSettings
                         * @classdesc Represents a StandardRolloutPolicy.
                         * @implements IStandardRolloutPolicy
                         * @constructor
                         * @param {google.container.v1.BlueGreenSettings.IStandardRolloutPolicy=} [properties] Properties to set
                         */
                        function StandardRolloutPolicy(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StandardRolloutPolicy batchPercentage.
                         * @member {number|null|undefined} batchPercentage
                         * @memberof google.container.v1.BlueGreenSettings.StandardRolloutPolicy
                         * @instance
                         */
                        StandardRolloutPolicy.prototype.batchPercentage = null;
    
                        /**
                         * StandardRolloutPolicy batchNodeCount.
                         * @member {number|null|undefined} batchNodeCount
                         * @memberof google.container.v1.BlueGreenSettings.StandardRolloutPolicy
                         * @instance
                         */
                        StandardRolloutPolicy.prototype.batchNodeCount = null;
    
                        /**
                         * StandardRolloutPolicy batchSoakDuration.
                         * @member {google.protobuf.IDuration|null|undefined} batchSoakDuration
                         * @memberof google.container.v1.BlueGreenSettings.StandardRolloutPolicy
                         * @instance
                         */
                        StandardRolloutPolicy.prototype.batchSoakDuration = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * StandardRolloutPolicy updateBatchSize.
                         * @member {"batchPercentage"|"batchNodeCount"|undefined} updateBatchSize
                         * @memberof google.container.v1.BlueGreenSettings.StandardRolloutPolicy
                         * @instance
                         */
                        Object.defineProperty(StandardRolloutPolicy.prototype, "updateBatchSize", {
                            get: $util.oneOfGetter($oneOfFields = ["batchPercentage", "batchNodeCount"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * StandardRolloutPolicy _batchSoakDuration.
                         * @member {"batchSoakDuration"|undefined} _batchSoakDuration
                         * @memberof google.container.v1.BlueGreenSettings.StandardRolloutPolicy
                         * @instance
                         */
                        Object.defineProperty(StandardRolloutPolicy.prototype, "_batchSoakDuration", {
                            get: $util.oneOfGetter($oneOfFields = ["batchSoakDuration"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new StandardRolloutPolicy instance using the specified properties.
                         * @function create
                         * @memberof google.container.v1.BlueGreenSettings.StandardRolloutPolicy
                         * @static
                         * @param {google.container.v1.BlueGreenSettings.IStandardRolloutPolicy=} [properties] Properties to set
                         * @returns {google.container.v1.BlueGreenSettings.StandardRolloutPolicy} StandardRolloutPolicy instance
                         */
                        StandardRolloutPolicy.create = function create(properties) {
                            return new StandardRolloutPolicy(properties);
                        };
    
                        /**
                         * Encodes the specified StandardRolloutPolicy message. Does not implicitly {@link google.container.v1.BlueGreenSettings.StandardRolloutPolicy.verify|verify} messages.
                         * @function encode
                         * @memberof google.container.v1.BlueGreenSettings.StandardRolloutPolicy
                         * @static
                         * @param {google.container.v1.BlueGreenSettings.IStandardRolloutPolicy} message StandardRolloutPolicy message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StandardRolloutPolicy.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.batchPercentage != null && Object.hasOwnProperty.call(message, "batchPercentage"))
                                writer.uint32(/* id 1, wireType 5 =*/13).float(message.batchPercentage);
                            if (message.batchNodeCount != null && Object.hasOwnProperty.call(message, "batchNodeCount"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.batchNodeCount);
                            if (message.batchSoakDuration != null && Object.hasOwnProperty.call(message, "batchSoakDuration"))
                                $root.google.protobuf.Duration.encode(message.batchSoakDuration, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StandardRolloutPolicy message, length delimited. Does not implicitly {@link google.container.v1.BlueGreenSettings.StandardRolloutPolicy.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.container.v1.BlueGreenSettings.StandardRolloutPolicy
                         * @static
                         * @param {google.container.v1.BlueGreenSettings.IStandardRolloutPolicy} message StandardRolloutPolicy message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StandardRolloutPolicy.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StandardRolloutPolicy message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.container.v1.BlueGreenSettings.StandardRolloutPolicy
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.container.v1.BlueGreenSettings.StandardRolloutPolicy} StandardRolloutPolicy
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StandardRolloutPolicy.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.BlueGreenSettings.StandardRolloutPolicy();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.batchPercentage = reader.float();
                                        break;
                                    }
                                case 2: {
                                        message.batchNodeCount = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.batchSoakDuration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StandardRolloutPolicy message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.container.v1.BlueGreenSettings.StandardRolloutPolicy
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.container.v1.BlueGreenSettings.StandardRolloutPolicy} StandardRolloutPolicy
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StandardRolloutPolicy.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StandardRolloutPolicy message.
                         * @function verify
                         * @memberof google.container.v1.BlueGreenSettings.StandardRolloutPolicy
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StandardRolloutPolicy.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.batchPercentage != null && message.hasOwnProperty("batchPercentage")) {
                                properties.updateBatchSize = 1;
                                if (typeof message.batchPercentage !== "number")
                                    return "batchPercentage: number expected";
                            }
                            if (message.batchNodeCount != null && message.hasOwnProperty("batchNodeCount")) {
                                if (properties.updateBatchSize === 1)
                                    return "updateBatchSize: multiple values";
                                properties.updateBatchSize = 1;
                                if (!$util.isInteger(message.batchNodeCount))
                                    return "batchNodeCount: integer expected";
                            }
                            if (message.batchSoakDuration != null && message.hasOwnProperty("batchSoakDuration")) {
                                properties._batchSoakDuration = 1;
                                {
                                    var error = $root.google.protobuf.Duration.verify(message.batchSoakDuration);
                                    if (error)
                                        return "batchSoakDuration." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a StandardRolloutPolicy message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.container.v1.BlueGreenSettings.StandardRolloutPolicy
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.container.v1.BlueGreenSettings.StandardRolloutPolicy} StandardRolloutPolicy
                         */
                        StandardRolloutPolicy.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.container.v1.BlueGreenSettings.StandardRolloutPolicy)
                                return object;
                            var message = new $root.google.container.v1.BlueGreenSettings.StandardRolloutPolicy();
                            if (object.batchPercentage != null)
                                message.batchPercentage = Number(object.batchPercentage);
                            if (object.batchNodeCount != null)
                                message.batchNodeCount = object.batchNodeCount | 0;
                            if (object.batchSoakDuration != null) {
                                if (typeof object.batchSoakDuration !== "object")
                                    throw TypeError(".google.container.v1.BlueGreenSettings.StandardRolloutPolicy.batchSoakDuration: object expected");
                                message.batchSoakDuration = $root.google.protobuf.Duration.fromObject(object.batchSoakDuration);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StandardRolloutPolicy message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.container.v1.BlueGreenSettings.StandardRolloutPolicy
                         * @static
                         * @param {google.container.v1.BlueGreenSettings.StandardRolloutPolicy} message StandardRolloutPolicy
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StandardRolloutPolicy.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.batchPercentage != null && message.hasOwnProperty("batchPercentage")) {
                                object.batchPercentage = options.json && !isFinite(message.batchPercentage) ? String(message.batchPercentage) : message.batchPercentage;
                                if (options.oneofs)
                                    object.updateBatchSize = "batchPercentage";
                            }
                            if (message.batchNodeCount != null && message.hasOwnProperty("batchNodeCount")) {
                                object.batchNodeCount = message.batchNodeCount;
                                if (options.oneofs)
                                    object.updateBatchSize = "batchNodeCount";
                            }
                            if (message.batchSoakDuration != null && message.hasOwnProperty("batchSoakDuration")) {
                                object.batchSoakDuration = $root.google.protobuf.Duration.toObject(message.batchSoakDuration, options);
                                if (options.oneofs)
                                    object._batchSoakDuration = "batchSoakDuration";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this StandardRolloutPolicy to JSON.
                         * @function toJSON
                         * @memberof google.container.v1.BlueGreenSettings.StandardRolloutPolicy
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StandardRolloutPolicy.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StandardRolloutPolicy
                         * @function getTypeUrl
                         * @memberof google.container.v1.BlueGreenSettings.StandardRolloutPolicy
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StandardRolloutPolicy.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.container.v1.BlueGreenSettings.StandardRolloutPolicy";
                        };
    
                        return StandardRolloutPolicy;
                    })();
    
                    return BlueGreenSettings;
                })();
    
                v1.NodePool = (function() {
    
                    /**
                     * Properties of a NodePool.
                     * @memberof google.container.v1
                     * @interface INodePool
                     * @property {string|null} [name] NodePool name
                     * @property {google.container.v1.INodeConfig|null} [config] NodePool config
                     * @property {number|null} [initialNodeCount] NodePool initialNodeCount
                     * @property {Array.<string>|null} [locations] NodePool locations
                     * @property {google.container.v1.INodeNetworkConfig|null} [networkConfig] NodePool networkConfig
                     * @property {string|null} [selfLink] NodePool selfLink
                     * @property {string|null} [version] NodePool version
                     * @property {Array.<string>|null} [instanceGroupUrls] NodePool instanceGroupUrls
                     * @property {google.container.v1.NodePool.Status|null} [status] NodePool status
                     * @property {string|null} [statusMessage] NodePool statusMessage
                     * @property {google.container.v1.INodePoolAutoscaling|null} [autoscaling] NodePool autoscaling
                     * @property {google.container.v1.INodeManagement|null} [management] NodePool management
                     * @property {google.container.v1.IMaxPodsConstraint|null} [maxPodsConstraint] NodePool maxPodsConstraint
                     * @property {Array.<google.container.v1.IStatusCondition>|null} [conditions] NodePool conditions
                     * @property {number|null} [podIpv4CidrSize] NodePool podIpv4CidrSize
                     * @property {google.container.v1.NodePool.IUpgradeSettings|null} [upgradeSettings] NodePool upgradeSettings
                     * @property {google.container.v1.NodePool.IUpdateInfo|null} [updateInfo] NodePool updateInfo
                     */
    
                    /**
                     * Constructs a new NodePool.
                     * @memberof google.container.v1
                     * @classdesc Represents a NodePool.
                     * @implements INodePool
                     * @constructor
                     * @param {google.container.v1.INodePool=} [properties] Properties to set
                     */
                    function NodePool(properties) {
                        this.locations = [];
                        this.instanceGroupUrls = [];
                        this.conditions = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NodePool name.
                     * @member {string} name
                     * @memberof google.container.v1.NodePool
                     * @instance
                     */
                    NodePool.prototype.name = "";
    
                    /**
                     * NodePool config.
                     * @member {google.container.v1.INodeConfig|null|undefined} config
                     * @memberof google.container.v1.NodePool
                     * @instance
                     */
                    NodePool.prototype.config = null;
    
                    /**
                     * NodePool initialNodeCount.
                     * @member {number} initialNodeCount
                     * @memberof google.container.v1.NodePool
                     * @instance
                     */
                    NodePool.prototype.initialNodeCount = 0;
    
                    /**
                     * NodePool locations.
                     * @member {Array.<string>} locations
                     * @memberof google.container.v1.NodePool
                     * @instance
                     */
                    NodePool.prototype.locations = $util.emptyArray;
    
                    /**
                     * NodePool networkConfig.
                     * @member {google.container.v1.INodeNetworkConfig|null|undefined} networkConfig
                     * @memberof google.container.v1.NodePool
                     * @instance
                     */
                    NodePool.prototype.networkConfig = null;
    
                    /**
                     * NodePool selfLink.
                     * @member {string} selfLink
                     * @memberof google.container.v1.NodePool
                     * @instance
                     */
                    NodePool.prototype.selfLink = "";
    
                    /**
                     * NodePool version.
                     * @member {string} version
                     * @memberof google.container.v1.NodePool
                     * @instance
                     */
                    NodePool.prototype.version = "";
    
                    /**
                     * NodePool instanceGroupUrls.
                     * @member {Array.<string>} instanceGroupUrls
                     * @memberof google.container.v1.NodePool
                     * @instance
                     */
                    NodePool.prototype.instanceGroupUrls = $util.emptyArray;
    
                    /**
                     * NodePool status.
                     * @member {google.container.v1.NodePool.Status} status
                     * @memberof google.container.v1.NodePool
                     * @instance
                     */
                    NodePool.prototype.status = 0;
    
                    /**
                     * NodePool statusMessage.
                     * @member {string} statusMessage
                     * @memberof google.container.v1.NodePool
                     * @instance
                     */
                    NodePool.prototype.statusMessage = "";
    
                    /**
                     * NodePool autoscaling.
                     * @member {google.container.v1.INodePoolAutoscaling|null|undefined} autoscaling
                     * @memberof google.container.v1.NodePool
                     * @instance
                     */
                    NodePool.prototype.autoscaling = null;
    
                    /**
                     * NodePool management.
                     * @member {google.container.v1.INodeManagement|null|undefined} management
                     * @memberof google.container.v1.NodePool
                     * @instance
                     */
                    NodePool.prototype.management = null;
    
                    /**
                     * NodePool maxPodsConstraint.
                     * @member {google.container.v1.IMaxPodsConstraint|null|undefined} maxPodsConstraint
                     * @memberof google.container.v1.NodePool
                     * @instance
                     */
                    NodePool.prototype.maxPodsConstraint = null;
    
                    /**
                     * NodePool conditions.
                     * @member {Array.<google.container.v1.IStatusCondition>} conditions
                     * @memberof google.container.v1.NodePool
                     * @instance
                     */
                    NodePool.prototype.conditions = $util.emptyArray;
    
                    /**
                     * NodePool podIpv4CidrSize.
                     * @member {number} podIpv4CidrSize
                     * @memberof google.container.v1.NodePool
                     * @instance
                     */
                    NodePool.prototype.podIpv4CidrSize = 0;
    
                    /**
                     * NodePool upgradeSettings.
                     * @member {google.container.v1.NodePool.IUpgradeSettings|null|undefined} upgradeSettings
                     * @memberof google.container.v1.NodePool
                     * @instance
                     */
                    NodePool.prototype.upgradeSettings = null;
    
                    /**
                     * NodePool updateInfo.
                     * @member {google.container.v1.NodePool.IUpdateInfo|null|undefined} updateInfo
                     * @memberof google.container.v1.NodePool
                     * @instance
                     */
                    NodePool.prototype.updateInfo = null;
    
                    /**
                     * Creates a new NodePool instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.NodePool
                     * @static
                     * @param {google.container.v1.INodePool=} [properties] Properties to set
                     * @returns {google.container.v1.NodePool} NodePool instance
                     */
                    NodePool.create = function create(properties) {
                        return new NodePool(properties);
                    };
    
                    /**
                     * Encodes the specified NodePool message. Does not implicitly {@link google.container.v1.NodePool.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.NodePool
                     * @static
                     * @param {google.container.v1.INodePool} message NodePool message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NodePool.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                        if (message.config != null && Object.hasOwnProperty.call(message, "config"))
                            $root.google.container.v1.NodeConfig.encode(message.config, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.initialNodeCount != null && Object.hasOwnProperty.call(message, "initialNodeCount"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.initialNodeCount);
                        if (message.autoscaling != null && Object.hasOwnProperty.call(message, "autoscaling"))
                            $root.google.container.v1.NodePoolAutoscaling.encode(message.autoscaling, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.management != null && Object.hasOwnProperty.call(message, "management"))
                            $root.google.container.v1.NodeManagement.encode(message.management, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                        if (message.maxPodsConstraint != null && Object.hasOwnProperty.call(message, "maxPodsConstraint"))
                            $root.google.container.v1.MaxPodsConstraint.encode(message.maxPodsConstraint, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                        if (message.podIpv4CidrSize != null && Object.hasOwnProperty.call(message, "podIpv4CidrSize"))
                            writer.uint32(/* id 7, wireType 0 =*/56).int32(message.podIpv4CidrSize);
                        if (message.locations != null && message.locations.length)
                            for (var i = 0; i < message.locations.length; ++i)
                                writer.uint32(/* id 13, wireType 2 =*/106).string(message.locations[i]);
                        if (message.networkConfig != null && Object.hasOwnProperty.call(message, "networkConfig"))
                            $root.google.container.v1.NodeNetworkConfig.encode(message.networkConfig, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                        if (message.selfLink != null && Object.hasOwnProperty.call(message, "selfLink"))
                            writer.uint32(/* id 100, wireType 2 =*/802).string(message.selfLink);
                        if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                            writer.uint32(/* id 101, wireType 2 =*/810).string(message.version);
                        if (message.instanceGroupUrls != null && message.instanceGroupUrls.length)
                            for (var i = 0; i < message.instanceGroupUrls.length; ++i)
                                writer.uint32(/* id 102, wireType 2 =*/818).string(message.instanceGroupUrls[i]);
                        if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                            writer.uint32(/* id 103, wireType 0 =*/824).int32(message.status);
                        if (message.statusMessage != null && Object.hasOwnProperty.call(message, "statusMessage"))
                            writer.uint32(/* id 104, wireType 2 =*/834).string(message.statusMessage);
                        if (message.conditions != null && message.conditions.length)
                            for (var i = 0; i < message.conditions.length; ++i)
                                $root.google.container.v1.StatusCondition.encode(message.conditions[i], writer.uint32(/* id 105, wireType 2 =*/842).fork()).ldelim();
                        if (message.upgradeSettings != null && Object.hasOwnProperty.call(message, "upgradeSettings"))
                            $root.google.container.v1.NodePool.UpgradeSettings.encode(message.upgradeSettings, writer.uint32(/* id 107, wireType 2 =*/858).fork()).ldelim();
                        if (message.updateInfo != null && Object.hasOwnProperty.call(message, "updateInfo"))
                            $root.google.container.v1.NodePool.UpdateInfo.encode(message.updateInfo, writer.uint32(/* id 109, wireType 2 =*/874).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NodePool message, length delimited. Does not implicitly {@link google.container.v1.NodePool.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.NodePool
                     * @static
                     * @param {google.container.v1.INodePool} message NodePool message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NodePool.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NodePool message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.NodePool
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.NodePool} NodePool
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NodePool.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.NodePool();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.config = $root.google.container.v1.NodeConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.initialNodeCount = reader.int32();
                                    break;
                                }
                            case 13: {
                                    if (!(message.locations && message.locations.length))
                                        message.locations = [];
                                    message.locations.push(reader.string());
                                    break;
                                }
                            case 14: {
                                    message.networkConfig = $root.google.container.v1.NodeNetworkConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 100: {
                                    message.selfLink = reader.string();
                                    break;
                                }
                            case 101: {
                                    message.version = reader.string();
                                    break;
                                }
                            case 102: {
                                    if (!(message.instanceGroupUrls && message.instanceGroupUrls.length))
                                        message.instanceGroupUrls = [];
                                    message.instanceGroupUrls.push(reader.string());
                                    break;
                                }
                            case 103: {
                                    message.status = reader.int32();
                                    break;
                                }
                            case 104: {
                                    message.statusMessage = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.autoscaling = $root.google.container.v1.NodePoolAutoscaling.decode(reader, reader.uint32());
                                    break;
                                }
                            case 5: {
                                    message.management = $root.google.container.v1.NodeManagement.decode(reader, reader.uint32());
                                    break;
                                }
                            case 6: {
                                    message.maxPodsConstraint = $root.google.container.v1.MaxPodsConstraint.decode(reader, reader.uint32());
                                    break;
                                }
                            case 105: {
                                    if (!(message.conditions && message.conditions.length))
                                        message.conditions = [];
                                    message.conditions.push($root.google.container.v1.StatusCondition.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 7: {
                                    message.podIpv4CidrSize = reader.int32();
                                    break;
                                }
                            case 107: {
                                    message.upgradeSettings = $root.google.container.v1.NodePool.UpgradeSettings.decode(reader, reader.uint32());
                                    break;
                                }
                            case 109: {
                                    message.updateInfo = $root.google.container.v1.NodePool.UpdateInfo.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a NodePool message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.NodePool
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.NodePool} NodePool
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NodePool.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NodePool message.
                     * @function verify
                     * @memberof google.container.v1.NodePool
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NodePool.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.config != null && message.hasOwnProperty("config")) {
                            var error = $root.google.container.v1.NodeConfig.verify(message.config);
                            if (error)
                                return "config." + error;
                        }
                        if (message.initialNodeCount != null && message.hasOwnProperty("initialNodeCount"))
                            if (!$util.isInteger(message.initialNodeCount))
                                return "initialNodeCount: integer expected";
                        if (message.locations != null && message.hasOwnProperty("locations")) {
                            if (!Array.isArray(message.locations))
                                return "locations: array expected";
                            for (var i = 0; i < message.locations.length; ++i)
                                if (!$util.isString(message.locations[i]))
                                    return "locations: string[] expected";
                        }
                        if (message.networkConfig != null && message.hasOwnProperty("networkConfig")) {
                            var error = $root.google.container.v1.NodeNetworkConfig.verify(message.networkConfig);
                            if (error)
                                return "networkConfig." + error;
                        }
                        if (message.selfLink != null && message.hasOwnProperty("selfLink"))
                            if (!$util.isString(message.selfLink))
                                return "selfLink: string expected";
                        if (message.version != null && message.hasOwnProperty("version"))
                            if (!$util.isString(message.version))
                                return "version: string expected";
                        if (message.instanceGroupUrls != null && message.hasOwnProperty("instanceGroupUrls")) {
                            if (!Array.isArray(message.instanceGroupUrls))
                                return "instanceGroupUrls: array expected";
                            for (var i = 0; i < message.instanceGroupUrls.length; ++i)
                                if (!$util.isString(message.instanceGroupUrls[i]))
                                    return "instanceGroupUrls: string[] expected";
                        }
                        if (message.status != null && message.hasOwnProperty("status"))
                            switch (message.status) {
                            default:
                                return "status: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                                break;
                            }
                        if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                            if (!$util.isString(message.statusMessage))
                                return "statusMessage: string expected";
                        if (message.autoscaling != null && message.hasOwnProperty("autoscaling")) {
                            var error = $root.google.container.v1.NodePoolAutoscaling.verify(message.autoscaling);
                            if (error)
                                return "autoscaling." + error;
                        }
                        if (message.management != null && message.hasOwnProperty("management")) {
                            var error = $root.google.container.v1.NodeManagement.verify(message.management);
                            if (error)
                                return "management." + error;
                        }
                        if (message.maxPodsConstraint != null && message.hasOwnProperty("maxPodsConstraint")) {
                            var error = $root.google.container.v1.MaxPodsConstraint.verify(message.maxPodsConstraint);
                            if (error)
                                return "maxPodsConstraint." + error;
                        }
                        if (message.conditions != null && message.hasOwnProperty("conditions")) {
                            if (!Array.isArray(message.conditions))
                                return "conditions: array expected";
                            for (var i = 0; i < message.conditions.length; ++i) {
                                var error = $root.google.container.v1.StatusCondition.verify(message.conditions[i]);
                                if (error)
                                    return "conditions." + error;
                            }
                        }
                        if (message.podIpv4CidrSize != null && message.hasOwnProperty("podIpv4CidrSize"))
                            if (!$util.isInteger(message.podIpv4CidrSize))
                                return "podIpv4CidrSize: integer expected";
                        if (message.upgradeSettings != null && message.hasOwnProperty("upgradeSettings")) {
                            var error = $root.google.container.v1.NodePool.UpgradeSettings.verify(message.upgradeSettings);
                            if (error)
                                return "upgradeSettings." + error;
                        }
                        if (message.updateInfo != null && message.hasOwnProperty("updateInfo")) {
                            var error = $root.google.container.v1.NodePool.UpdateInfo.verify(message.updateInfo);
                            if (error)
                                return "updateInfo." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a NodePool message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.NodePool
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.NodePool} NodePool
                     */
                    NodePool.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.NodePool)
                            return object;
                        var message = new $root.google.container.v1.NodePool();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.config != null) {
                            if (typeof object.config !== "object")
                                throw TypeError(".google.container.v1.NodePool.config: object expected");
                            message.config = $root.google.container.v1.NodeConfig.fromObject(object.config);
                        }
                        if (object.initialNodeCount != null)
                            message.initialNodeCount = object.initialNodeCount | 0;
                        if (object.locations) {
                            if (!Array.isArray(object.locations))
                                throw TypeError(".google.container.v1.NodePool.locations: array expected");
                            message.locations = [];
                            for (var i = 0; i < object.locations.length; ++i)
                                message.locations[i] = String(object.locations[i]);
                        }
                        if (object.networkConfig != null) {
                            if (typeof object.networkConfig !== "object")
                                throw TypeError(".google.container.v1.NodePool.networkConfig: object expected");
                            message.networkConfig = $root.google.container.v1.NodeNetworkConfig.fromObject(object.networkConfig);
                        }
                        if (object.selfLink != null)
                            message.selfLink = String(object.selfLink);
                        if (object.version != null)
                            message.version = String(object.version);
                        if (object.instanceGroupUrls) {
                            if (!Array.isArray(object.instanceGroupUrls))
                                throw TypeError(".google.container.v1.NodePool.instanceGroupUrls: array expected");
                            message.instanceGroupUrls = [];
                            for (var i = 0; i < object.instanceGroupUrls.length; ++i)
                                message.instanceGroupUrls[i] = String(object.instanceGroupUrls[i]);
                        }
                        switch (object.status) {
                        default:
                            if (typeof object.status === "number") {
                                message.status = object.status;
                                break;
                            }
                            break;
                        case "STATUS_UNSPECIFIED":
                        case 0:
                            message.status = 0;
                            break;
                        case "PROVISIONING":
                        case 1:
                            message.status = 1;
                            break;
                        case "RUNNING":
                        case 2:
                            message.status = 2;
                            break;
                        case "RUNNING_WITH_ERROR":
                        case 3:
                            message.status = 3;
                            break;
                        case "RECONCILING":
                        case 4:
                            message.status = 4;
                            break;
                        case "STOPPING":
                        case 5:
                            message.status = 5;
                            break;
                        case "ERROR":
                        case 6:
                            message.status = 6;
                            break;
                        }
                        if (object.statusMessage != null)
                            message.statusMessage = String(object.statusMessage);
                        if (object.autoscaling != null) {
                            if (typeof object.autoscaling !== "object")
                                throw TypeError(".google.container.v1.NodePool.autoscaling: object expected");
                            message.autoscaling = $root.google.container.v1.NodePoolAutoscaling.fromObject(object.autoscaling);
                        }
                        if (object.management != null) {
                            if (typeof object.management !== "object")
                                throw TypeError(".google.container.v1.NodePool.management: object expected");
                            message.management = $root.google.container.v1.NodeManagement.fromObject(object.management);
                        }
                        if (object.maxPodsConstraint != null) {
                            if (typeof object.maxPodsConstraint !== "object")
                                throw TypeError(".google.container.v1.NodePool.maxPodsConstraint: object expected");
                            message.maxPodsConstraint = $root.google.container.v1.MaxPodsConstraint.fromObject(object.maxPodsConstraint);
                        }
                        if (object.conditions) {
                            if (!Array.isArray(object.conditions))
                                throw TypeError(".google.container.v1.NodePool.conditions: array expected");
                            message.conditions = [];
                            for (var i = 0; i < object.conditions.length; ++i) {
                                if (typeof object.conditions[i] !== "object")
                                    throw TypeError(".google.container.v1.NodePool.conditions: object expected");
                                message.conditions[i] = $root.google.container.v1.StatusCondition.fromObject(object.conditions[i]);
                            }
                        }
                        if (object.podIpv4CidrSize != null)
                            message.podIpv4CidrSize = object.podIpv4CidrSize | 0;
                        if (object.upgradeSettings != null) {
                            if (typeof object.upgradeSettings !== "object")
                                throw TypeError(".google.container.v1.NodePool.upgradeSettings: object expected");
                            message.upgradeSettings = $root.google.container.v1.NodePool.UpgradeSettings.fromObject(object.upgradeSettings);
                        }
                        if (object.updateInfo != null) {
                            if (typeof object.updateInfo !== "object")
                                throw TypeError(".google.container.v1.NodePool.updateInfo: object expected");
                            message.updateInfo = $root.google.container.v1.NodePool.UpdateInfo.fromObject(object.updateInfo);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NodePool message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.NodePool
                     * @static
                     * @param {google.container.v1.NodePool} message NodePool
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NodePool.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.locations = [];
                            object.instanceGroupUrls = [];
                            object.conditions = [];
                        }
                        if (options.defaults) {
                            object.name = "";
                            object.config = null;
                            object.initialNodeCount = 0;
                            object.autoscaling = null;
                            object.management = null;
                            object.maxPodsConstraint = null;
                            object.podIpv4CidrSize = 0;
                            object.networkConfig = null;
                            object.selfLink = "";
                            object.version = "";
                            object.status = options.enums === String ? "STATUS_UNSPECIFIED" : 0;
                            object.statusMessage = "";
                            object.upgradeSettings = null;
                            object.updateInfo = null;
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.config != null && message.hasOwnProperty("config"))
                            object.config = $root.google.container.v1.NodeConfig.toObject(message.config, options);
                        if (message.initialNodeCount != null && message.hasOwnProperty("initialNodeCount"))
                            object.initialNodeCount = message.initialNodeCount;
                        if (message.autoscaling != null && message.hasOwnProperty("autoscaling"))
                            object.autoscaling = $root.google.container.v1.NodePoolAutoscaling.toObject(message.autoscaling, options);
                        if (message.management != null && message.hasOwnProperty("management"))
                            object.management = $root.google.container.v1.NodeManagement.toObject(message.management, options);
                        if (message.maxPodsConstraint != null && message.hasOwnProperty("maxPodsConstraint"))
                            object.maxPodsConstraint = $root.google.container.v1.MaxPodsConstraint.toObject(message.maxPodsConstraint, options);
                        if (message.podIpv4CidrSize != null && message.hasOwnProperty("podIpv4CidrSize"))
                            object.podIpv4CidrSize = message.podIpv4CidrSize;
                        if (message.locations && message.locations.length) {
                            object.locations = [];
                            for (var j = 0; j < message.locations.length; ++j)
                                object.locations[j] = message.locations[j];
                        }
                        if (message.networkConfig != null && message.hasOwnProperty("networkConfig"))
                            object.networkConfig = $root.google.container.v1.NodeNetworkConfig.toObject(message.networkConfig, options);
                        if (message.selfLink != null && message.hasOwnProperty("selfLink"))
                            object.selfLink = message.selfLink;
                        if (message.version != null && message.hasOwnProperty("version"))
                            object.version = message.version;
                        if (message.instanceGroupUrls && message.instanceGroupUrls.length) {
                            object.instanceGroupUrls = [];
                            for (var j = 0; j < message.instanceGroupUrls.length; ++j)
                                object.instanceGroupUrls[j] = message.instanceGroupUrls[j];
                        }
                        if (message.status != null && message.hasOwnProperty("status"))
                            object.status = options.enums === String ? $root.google.container.v1.NodePool.Status[message.status] === undefined ? message.status : $root.google.container.v1.NodePool.Status[message.status] : message.status;
                        if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                            object.statusMessage = message.statusMessage;
                        if (message.conditions && message.conditions.length) {
                            object.conditions = [];
                            for (var j = 0; j < message.conditions.length; ++j)
                                object.conditions[j] = $root.google.container.v1.StatusCondition.toObject(message.conditions[j], options);
                        }
                        if (message.upgradeSettings != null && message.hasOwnProperty("upgradeSettings"))
                            object.upgradeSettings = $root.google.container.v1.NodePool.UpgradeSettings.toObject(message.upgradeSettings, options);
                        if (message.updateInfo != null && message.hasOwnProperty("updateInfo"))
                            object.updateInfo = $root.google.container.v1.NodePool.UpdateInfo.toObject(message.updateInfo, options);
                        return object;
                    };
    
                    /**
                     * Converts this NodePool to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.NodePool
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NodePool.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NodePool
                     * @function getTypeUrl
                     * @memberof google.container.v1.NodePool
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NodePool.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.NodePool";
                    };
    
                    NodePool.UpgradeSettings = (function() {
    
                        /**
                         * Properties of an UpgradeSettings.
                         * @memberof google.container.v1.NodePool
                         * @interface IUpgradeSettings
                         * @property {number|null} [maxSurge] UpgradeSettings maxSurge
                         * @property {number|null} [maxUnavailable] UpgradeSettings maxUnavailable
                         * @property {google.container.v1.NodePoolUpdateStrategy|null} [strategy] UpgradeSettings strategy
                         * @property {google.container.v1.IBlueGreenSettings|null} [blueGreenSettings] UpgradeSettings blueGreenSettings
                         */
    
                        /**
                         * Constructs a new UpgradeSettings.
                         * @memberof google.container.v1.NodePool
                         * @classdesc Represents an UpgradeSettings.
                         * @implements IUpgradeSettings
                         * @constructor
                         * @param {google.container.v1.NodePool.IUpgradeSettings=} [properties] Properties to set
                         */
                        function UpgradeSettings(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpgradeSettings maxSurge.
                         * @member {number} maxSurge
                         * @memberof google.container.v1.NodePool.UpgradeSettings
                         * @instance
                         */
                        UpgradeSettings.prototype.maxSurge = 0;
    
                        /**
                         * UpgradeSettings maxUnavailable.
                         * @member {number} maxUnavailable
                         * @memberof google.container.v1.NodePool.UpgradeSettings
                         * @instance
                         */
                        UpgradeSettings.prototype.maxUnavailable = 0;
    
                        /**
                         * UpgradeSettings strategy.
                         * @member {google.container.v1.NodePoolUpdateStrategy|null|undefined} strategy
                         * @memberof google.container.v1.NodePool.UpgradeSettings
                         * @instance
                         */
                        UpgradeSettings.prototype.strategy = null;
    
                        /**
                         * UpgradeSettings blueGreenSettings.
                         * @member {google.container.v1.IBlueGreenSettings|null|undefined} blueGreenSettings
                         * @memberof google.container.v1.NodePool.UpgradeSettings
                         * @instance
                         */
                        UpgradeSettings.prototype.blueGreenSettings = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * UpgradeSettings _strategy.
                         * @member {"strategy"|undefined} _strategy
                         * @memberof google.container.v1.NodePool.UpgradeSettings
                         * @instance
                         */
                        Object.defineProperty(UpgradeSettings.prototype, "_strategy", {
                            get: $util.oneOfGetter($oneOfFields = ["strategy"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * UpgradeSettings _blueGreenSettings.
                         * @member {"blueGreenSettings"|undefined} _blueGreenSettings
                         * @memberof google.container.v1.NodePool.UpgradeSettings
                         * @instance
                         */
                        Object.defineProperty(UpgradeSettings.prototype, "_blueGreenSettings", {
                            get: $util.oneOfGetter($oneOfFields = ["blueGreenSettings"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new UpgradeSettings instance using the specified properties.
                         * @function create
                         * @memberof google.container.v1.NodePool.UpgradeSettings
                         * @static
                         * @param {google.container.v1.NodePool.IUpgradeSettings=} [properties] Properties to set
                         * @returns {google.container.v1.NodePool.UpgradeSettings} UpgradeSettings instance
                         */
                        UpgradeSettings.create = function create(properties) {
                            return new UpgradeSettings(properties);
                        };
    
                        /**
                         * Encodes the specified UpgradeSettings message. Does not implicitly {@link google.container.v1.NodePool.UpgradeSettings.verify|verify} messages.
                         * @function encode
                         * @memberof google.container.v1.NodePool.UpgradeSettings
                         * @static
                         * @param {google.container.v1.NodePool.IUpgradeSettings} message UpgradeSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpgradeSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.maxSurge != null && Object.hasOwnProperty.call(message, "maxSurge"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.maxSurge);
                            if (message.maxUnavailable != null && Object.hasOwnProperty.call(message, "maxUnavailable"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.maxUnavailable);
                            if (message.strategy != null && Object.hasOwnProperty.call(message, "strategy"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.strategy);
                            if (message.blueGreenSettings != null && Object.hasOwnProperty.call(message, "blueGreenSettings"))
                                $root.google.container.v1.BlueGreenSettings.encode(message.blueGreenSettings, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpgradeSettings message, length delimited. Does not implicitly {@link google.container.v1.NodePool.UpgradeSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.container.v1.NodePool.UpgradeSettings
                         * @static
                         * @param {google.container.v1.NodePool.IUpgradeSettings} message UpgradeSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpgradeSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpgradeSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.container.v1.NodePool.UpgradeSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.container.v1.NodePool.UpgradeSettings} UpgradeSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpgradeSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.NodePool.UpgradeSettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.maxSurge = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.maxUnavailable = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.strategy = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.blueGreenSettings = $root.google.container.v1.BlueGreenSettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpgradeSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.container.v1.NodePool.UpgradeSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.container.v1.NodePool.UpgradeSettings} UpgradeSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpgradeSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpgradeSettings message.
                         * @function verify
                         * @memberof google.container.v1.NodePool.UpgradeSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpgradeSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.maxSurge != null && message.hasOwnProperty("maxSurge"))
                                if (!$util.isInteger(message.maxSurge))
                                    return "maxSurge: integer expected";
                            if (message.maxUnavailable != null && message.hasOwnProperty("maxUnavailable"))
                                if (!$util.isInteger(message.maxUnavailable))
                                    return "maxUnavailable: integer expected";
                            if (message.strategy != null && message.hasOwnProperty("strategy")) {
                                properties._strategy = 1;
                                switch (message.strategy) {
                                default:
                                    return "strategy: enum value expected";
                                case 0:
                                case 2:
                                case 3:
                                    break;
                                }
                            }
                            if (message.blueGreenSettings != null && message.hasOwnProperty("blueGreenSettings")) {
                                properties._blueGreenSettings = 1;
                                {
                                    var error = $root.google.container.v1.BlueGreenSettings.verify(message.blueGreenSettings);
                                    if (error)
                                        return "blueGreenSettings." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpgradeSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.container.v1.NodePool.UpgradeSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.container.v1.NodePool.UpgradeSettings} UpgradeSettings
                         */
                        UpgradeSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.container.v1.NodePool.UpgradeSettings)
                                return object;
                            var message = new $root.google.container.v1.NodePool.UpgradeSettings();
                            if (object.maxSurge != null)
                                message.maxSurge = object.maxSurge | 0;
                            if (object.maxUnavailable != null)
                                message.maxUnavailable = object.maxUnavailable | 0;
                            switch (object.strategy) {
                            default:
                                if (typeof object.strategy === "number") {
                                    message.strategy = object.strategy;
                                    break;
                                }
                                break;
                            case "NODE_POOL_UPDATE_STRATEGY_UNSPECIFIED":
                            case 0:
                                message.strategy = 0;
                                break;
                            case "BLUE_GREEN":
                            case 2:
                                message.strategy = 2;
                                break;
                            case "SURGE":
                            case 3:
                                message.strategy = 3;
                                break;
                            }
                            if (object.blueGreenSettings != null) {
                                if (typeof object.blueGreenSettings !== "object")
                                    throw TypeError(".google.container.v1.NodePool.UpgradeSettings.blueGreenSettings: object expected");
                                message.blueGreenSettings = $root.google.container.v1.BlueGreenSettings.fromObject(object.blueGreenSettings);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpgradeSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.container.v1.NodePool.UpgradeSettings
                         * @static
                         * @param {google.container.v1.NodePool.UpgradeSettings} message UpgradeSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpgradeSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.maxSurge = 0;
                                object.maxUnavailable = 0;
                            }
                            if (message.maxSurge != null && message.hasOwnProperty("maxSurge"))
                                object.maxSurge = message.maxSurge;
                            if (message.maxUnavailable != null && message.hasOwnProperty("maxUnavailable"))
                                object.maxUnavailable = message.maxUnavailable;
                            if (message.strategy != null && message.hasOwnProperty("strategy")) {
                                object.strategy = options.enums === String ? $root.google.container.v1.NodePoolUpdateStrategy[message.strategy] === undefined ? message.strategy : $root.google.container.v1.NodePoolUpdateStrategy[message.strategy] : message.strategy;
                                if (options.oneofs)
                                    object._strategy = "strategy";
                            }
                            if (message.blueGreenSettings != null && message.hasOwnProperty("blueGreenSettings")) {
                                object.blueGreenSettings = $root.google.container.v1.BlueGreenSettings.toObject(message.blueGreenSettings, options);
                                if (options.oneofs)
                                    object._blueGreenSettings = "blueGreenSettings";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this UpgradeSettings to JSON.
                         * @function toJSON
                         * @memberof google.container.v1.NodePool.UpgradeSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpgradeSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpgradeSettings
                         * @function getTypeUrl
                         * @memberof google.container.v1.NodePool.UpgradeSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpgradeSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.container.v1.NodePool.UpgradeSettings";
                        };
    
                        return UpgradeSettings;
                    })();
    
                    NodePool.UpdateInfo = (function() {
    
                        /**
                         * Properties of an UpdateInfo.
                         * @memberof google.container.v1.NodePool
                         * @interface IUpdateInfo
                         * @property {google.container.v1.NodePool.UpdateInfo.IBlueGreenInfo|null} [blueGreenInfo] UpdateInfo blueGreenInfo
                         */
    
                        /**
                         * Constructs a new UpdateInfo.
                         * @memberof google.container.v1.NodePool
                         * @classdesc Represents an UpdateInfo.
                         * @implements IUpdateInfo
                         * @constructor
                         * @param {google.container.v1.NodePool.IUpdateInfo=} [properties] Properties to set
                         */
                        function UpdateInfo(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateInfo blueGreenInfo.
                         * @member {google.container.v1.NodePool.UpdateInfo.IBlueGreenInfo|null|undefined} blueGreenInfo
                         * @memberof google.container.v1.NodePool.UpdateInfo
                         * @instance
                         */
                        UpdateInfo.prototype.blueGreenInfo = null;
    
                        /**
                         * Creates a new UpdateInfo instance using the specified properties.
                         * @function create
                         * @memberof google.container.v1.NodePool.UpdateInfo
                         * @static
                         * @param {google.container.v1.NodePool.IUpdateInfo=} [properties] Properties to set
                         * @returns {google.container.v1.NodePool.UpdateInfo} UpdateInfo instance
                         */
                        UpdateInfo.create = function create(properties) {
                            return new UpdateInfo(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateInfo message. Does not implicitly {@link google.container.v1.NodePool.UpdateInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.container.v1.NodePool.UpdateInfo
                         * @static
                         * @param {google.container.v1.NodePool.IUpdateInfo} message UpdateInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.blueGreenInfo != null && Object.hasOwnProperty.call(message, "blueGreenInfo"))
                                $root.google.container.v1.NodePool.UpdateInfo.BlueGreenInfo.encode(message.blueGreenInfo, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateInfo message, length delimited. Does not implicitly {@link google.container.v1.NodePool.UpdateInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.container.v1.NodePool.UpdateInfo
                         * @static
                         * @param {google.container.v1.NodePool.IUpdateInfo} message UpdateInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.container.v1.NodePool.UpdateInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.container.v1.NodePool.UpdateInfo} UpdateInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateInfo.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.NodePool.UpdateInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.blueGreenInfo = $root.google.container.v1.NodePool.UpdateInfo.BlueGreenInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.container.v1.NodePool.UpdateInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.container.v1.NodePool.UpdateInfo} UpdateInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateInfo message.
                         * @function verify
                         * @memberof google.container.v1.NodePool.UpdateInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.blueGreenInfo != null && message.hasOwnProperty("blueGreenInfo")) {
                                var error = $root.google.container.v1.NodePool.UpdateInfo.BlueGreenInfo.verify(message.blueGreenInfo);
                                if (error)
                                    return "blueGreenInfo." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.container.v1.NodePool.UpdateInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.container.v1.NodePool.UpdateInfo} UpdateInfo
                         */
                        UpdateInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.container.v1.NodePool.UpdateInfo)
                                return object;
                            var message = new $root.google.container.v1.NodePool.UpdateInfo();
                            if (object.blueGreenInfo != null) {
                                if (typeof object.blueGreenInfo !== "object")
                                    throw TypeError(".google.container.v1.NodePool.UpdateInfo.blueGreenInfo: object expected");
                                message.blueGreenInfo = $root.google.container.v1.NodePool.UpdateInfo.BlueGreenInfo.fromObject(object.blueGreenInfo);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.container.v1.NodePool.UpdateInfo
                         * @static
                         * @param {google.container.v1.NodePool.UpdateInfo} message UpdateInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.blueGreenInfo = null;
                            if (message.blueGreenInfo != null && message.hasOwnProperty("blueGreenInfo"))
                                object.blueGreenInfo = $root.google.container.v1.NodePool.UpdateInfo.BlueGreenInfo.toObject(message.blueGreenInfo, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateInfo to JSON.
                         * @function toJSON
                         * @memberof google.container.v1.NodePool.UpdateInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateInfo
                         * @function getTypeUrl
                         * @memberof google.container.v1.NodePool.UpdateInfo
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.container.v1.NodePool.UpdateInfo";
                        };
    
                        UpdateInfo.BlueGreenInfo = (function() {
    
                            /**
                             * Properties of a BlueGreenInfo.
                             * @memberof google.container.v1.NodePool.UpdateInfo
                             * @interface IBlueGreenInfo
                             * @property {google.container.v1.NodePool.UpdateInfo.BlueGreenInfo.Phase|null} [phase] BlueGreenInfo phase
                             * @property {Array.<string>|null} [blueInstanceGroupUrls] BlueGreenInfo blueInstanceGroupUrls
                             * @property {Array.<string>|null} [greenInstanceGroupUrls] BlueGreenInfo greenInstanceGroupUrls
                             * @property {string|null} [bluePoolDeletionStartTime] BlueGreenInfo bluePoolDeletionStartTime
                             * @property {string|null} [greenPoolVersion] BlueGreenInfo greenPoolVersion
                             */
    
                            /**
                             * Constructs a new BlueGreenInfo.
                             * @memberof google.container.v1.NodePool.UpdateInfo
                             * @classdesc Represents a BlueGreenInfo.
                             * @implements IBlueGreenInfo
                             * @constructor
                             * @param {google.container.v1.NodePool.UpdateInfo.IBlueGreenInfo=} [properties] Properties to set
                             */
                            function BlueGreenInfo(properties) {
                                this.blueInstanceGroupUrls = [];
                                this.greenInstanceGroupUrls = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * BlueGreenInfo phase.
                             * @member {google.container.v1.NodePool.UpdateInfo.BlueGreenInfo.Phase} phase
                             * @memberof google.container.v1.NodePool.UpdateInfo.BlueGreenInfo
                             * @instance
                             */
                            BlueGreenInfo.prototype.phase = 0;
    
                            /**
                             * BlueGreenInfo blueInstanceGroupUrls.
                             * @member {Array.<string>} blueInstanceGroupUrls
                             * @memberof google.container.v1.NodePool.UpdateInfo.BlueGreenInfo
                             * @instance
                             */
                            BlueGreenInfo.prototype.blueInstanceGroupUrls = $util.emptyArray;
    
                            /**
                             * BlueGreenInfo greenInstanceGroupUrls.
                             * @member {Array.<string>} greenInstanceGroupUrls
                             * @memberof google.container.v1.NodePool.UpdateInfo.BlueGreenInfo
                             * @instance
                             */
                            BlueGreenInfo.prototype.greenInstanceGroupUrls = $util.emptyArray;
    
                            /**
                             * BlueGreenInfo bluePoolDeletionStartTime.
                             * @member {string} bluePoolDeletionStartTime
                             * @memberof google.container.v1.NodePool.UpdateInfo.BlueGreenInfo
                             * @instance
                             */
                            BlueGreenInfo.prototype.bluePoolDeletionStartTime = "";
    
                            /**
                             * BlueGreenInfo greenPoolVersion.
                             * @member {string} greenPoolVersion
                             * @memberof google.container.v1.NodePool.UpdateInfo.BlueGreenInfo
                             * @instance
                             */
                            BlueGreenInfo.prototype.greenPoolVersion = "";
    
                            /**
                             * Creates a new BlueGreenInfo instance using the specified properties.
                             * @function create
                             * @memberof google.container.v1.NodePool.UpdateInfo.BlueGreenInfo
                             * @static
                             * @param {google.container.v1.NodePool.UpdateInfo.IBlueGreenInfo=} [properties] Properties to set
                             * @returns {google.container.v1.NodePool.UpdateInfo.BlueGreenInfo} BlueGreenInfo instance
                             */
                            BlueGreenInfo.create = function create(properties) {
                                return new BlueGreenInfo(properties);
                            };
    
                            /**
                             * Encodes the specified BlueGreenInfo message. Does not implicitly {@link google.container.v1.NodePool.UpdateInfo.BlueGreenInfo.verify|verify} messages.
                             * @function encode
                             * @memberof google.container.v1.NodePool.UpdateInfo.BlueGreenInfo
                             * @static
                             * @param {google.container.v1.NodePool.UpdateInfo.IBlueGreenInfo} message BlueGreenInfo message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BlueGreenInfo.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.phase != null && Object.hasOwnProperty.call(message, "phase"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.phase);
                                if (message.blueInstanceGroupUrls != null && message.blueInstanceGroupUrls.length)
                                    for (var i = 0; i < message.blueInstanceGroupUrls.length; ++i)
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.blueInstanceGroupUrls[i]);
                                if (message.greenInstanceGroupUrls != null && message.greenInstanceGroupUrls.length)
                                    for (var i = 0; i < message.greenInstanceGroupUrls.length; ++i)
                                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.greenInstanceGroupUrls[i]);
                                if (message.bluePoolDeletionStartTime != null && Object.hasOwnProperty.call(message, "bluePoolDeletionStartTime"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.bluePoolDeletionStartTime);
                                if (message.greenPoolVersion != null && Object.hasOwnProperty.call(message, "greenPoolVersion"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.greenPoolVersion);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified BlueGreenInfo message, length delimited. Does not implicitly {@link google.container.v1.NodePool.UpdateInfo.BlueGreenInfo.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.container.v1.NodePool.UpdateInfo.BlueGreenInfo
                             * @static
                             * @param {google.container.v1.NodePool.UpdateInfo.IBlueGreenInfo} message BlueGreenInfo message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BlueGreenInfo.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a BlueGreenInfo message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.container.v1.NodePool.UpdateInfo.BlueGreenInfo
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.container.v1.NodePool.UpdateInfo.BlueGreenInfo} BlueGreenInfo
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BlueGreenInfo.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.NodePool.UpdateInfo.BlueGreenInfo();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.phase = reader.int32();
                                            break;
                                        }
                                    case 2: {
                                            if (!(message.blueInstanceGroupUrls && message.blueInstanceGroupUrls.length))
                                                message.blueInstanceGroupUrls = [];
                                            message.blueInstanceGroupUrls.push(reader.string());
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.greenInstanceGroupUrls && message.greenInstanceGroupUrls.length))
                                                message.greenInstanceGroupUrls = [];
                                            message.greenInstanceGroupUrls.push(reader.string());
                                            break;
                                        }
                                    case 4: {
                                            message.bluePoolDeletionStartTime = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.greenPoolVersion = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a BlueGreenInfo message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.container.v1.NodePool.UpdateInfo.BlueGreenInfo
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.container.v1.NodePool.UpdateInfo.BlueGreenInfo} BlueGreenInfo
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BlueGreenInfo.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a BlueGreenInfo message.
                             * @function verify
                             * @memberof google.container.v1.NodePool.UpdateInfo.BlueGreenInfo
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            BlueGreenInfo.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.phase != null && message.hasOwnProperty("phase"))
                                    switch (message.phase) {
                                    default:
                                        return "phase: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                    case 7:
                                        break;
                                    }
                                if (message.blueInstanceGroupUrls != null && message.hasOwnProperty("blueInstanceGroupUrls")) {
                                    if (!Array.isArray(message.blueInstanceGroupUrls))
                                        return "blueInstanceGroupUrls: array expected";
                                    for (var i = 0; i < message.blueInstanceGroupUrls.length; ++i)
                                        if (!$util.isString(message.blueInstanceGroupUrls[i]))
                                            return "blueInstanceGroupUrls: string[] expected";
                                }
                                if (message.greenInstanceGroupUrls != null && message.hasOwnProperty("greenInstanceGroupUrls")) {
                                    if (!Array.isArray(message.greenInstanceGroupUrls))
                                        return "greenInstanceGroupUrls: array expected";
                                    for (var i = 0; i < message.greenInstanceGroupUrls.length; ++i)
                                        if (!$util.isString(message.greenInstanceGroupUrls[i]))
                                            return "greenInstanceGroupUrls: string[] expected";
                                }
                                if (message.bluePoolDeletionStartTime != null && message.hasOwnProperty("bluePoolDeletionStartTime"))
                                    if (!$util.isString(message.bluePoolDeletionStartTime))
                                        return "bluePoolDeletionStartTime: string expected";
                                if (message.greenPoolVersion != null && message.hasOwnProperty("greenPoolVersion"))
                                    if (!$util.isString(message.greenPoolVersion))
                                        return "greenPoolVersion: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a BlueGreenInfo message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.container.v1.NodePool.UpdateInfo.BlueGreenInfo
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.container.v1.NodePool.UpdateInfo.BlueGreenInfo} BlueGreenInfo
                             */
                            BlueGreenInfo.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.container.v1.NodePool.UpdateInfo.BlueGreenInfo)
                                    return object;
                                var message = new $root.google.container.v1.NodePool.UpdateInfo.BlueGreenInfo();
                                switch (object.phase) {
                                default:
                                    if (typeof object.phase === "number") {
                                        message.phase = object.phase;
                                        break;
                                    }
                                    break;
                                case "PHASE_UNSPECIFIED":
                                case 0:
                                    message.phase = 0;
                                    break;
                                case "UPDATE_STARTED":
                                case 1:
                                    message.phase = 1;
                                    break;
                                case "CREATING_GREEN_POOL":
                                case 2:
                                    message.phase = 2;
                                    break;
                                case "CORDONING_BLUE_POOL":
                                case 3:
                                    message.phase = 3;
                                    break;
                                case "DRAINING_BLUE_POOL":
                                case 4:
                                    message.phase = 4;
                                    break;
                                case "NODE_POOL_SOAKING":
                                case 5:
                                    message.phase = 5;
                                    break;
                                case "DELETING_BLUE_POOL":
                                case 6:
                                    message.phase = 6;
                                    break;
                                case "ROLLBACK_STARTED":
                                case 7:
                                    message.phase = 7;
                                    break;
                                }
                                if (object.blueInstanceGroupUrls) {
                                    if (!Array.isArray(object.blueInstanceGroupUrls))
                                        throw TypeError(".google.container.v1.NodePool.UpdateInfo.BlueGreenInfo.blueInstanceGroupUrls: array expected");
                                    message.blueInstanceGroupUrls = [];
                                    for (var i = 0; i < object.blueInstanceGroupUrls.length; ++i)
                                        message.blueInstanceGroupUrls[i] = String(object.blueInstanceGroupUrls[i]);
                                }
                                if (object.greenInstanceGroupUrls) {
                                    if (!Array.isArray(object.greenInstanceGroupUrls))
                                        throw TypeError(".google.container.v1.NodePool.UpdateInfo.BlueGreenInfo.greenInstanceGroupUrls: array expected");
                                    message.greenInstanceGroupUrls = [];
                                    for (var i = 0; i < object.greenInstanceGroupUrls.length; ++i)
                                        message.greenInstanceGroupUrls[i] = String(object.greenInstanceGroupUrls[i]);
                                }
                                if (object.bluePoolDeletionStartTime != null)
                                    message.bluePoolDeletionStartTime = String(object.bluePoolDeletionStartTime);
                                if (object.greenPoolVersion != null)
                                    message.greenPoolVersion = String(object.greenPoolVersion);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a BlueGreenInfo message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.container.v1.NodePool.UpdateInfo.BlueGreenInfo
                             * @static
                             * @param {google.container.v1.NodePool.UpdateInfo.BlueGreenInfo} message BlueGreenInfo
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            BlueGreenInfo.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.blueInstanceGroupUrls = [];
                                    object.greenInstanceGroupUrls = [];
                                }
                                if (options.defaults) {
                                    object.phase = options.enums === String ? "PHASE_UNSPECIFIED" : 0;
                                    object.bluePoolDeletionStartTime = "";
                                    object.greenPoolVersion = "";
                                }
                                if (message.phase != null && message.hasOwnProperty("phase"))
                                    object.phase = options.enums === String ? $root.google.container.v1.NodePool.UpdateInfo.BlueGreenInfo.Phase[message.phase] === undefined ? message.phase : $root.google.container.v1.NodePool.UpdateInfo.BlueGreenInfo.Phase[message.phase] : message.phase;
                                if (message.blueInstanceGroupUrls && message.blueInstanceGroupUrls.length) {
                                    object.blueInstanceGroupUrls = [];
                                    for (var j = 0; j < message.blueInstanceGroupUrls.length; ++j)
                                        object.blueInstanceGroupUrls[j] = message.blueInstanceGroupUrls[j];
                                }
                                if (message.greenInstanceGroupUrls && message.greenInstanceGroupUrls.length) {
                                    object.greenInstanceGroupUrls = [];
                                    for (var j = 0; j < message.greenInstanceGroupUrls.length; ++j)
                                        object.greenInstanceGroupUrls[j] = message.greenInstanceGroupUrls[j];
                                }
                                if (message.bluePoolDeletionStartTime != null && message.hasOwnProperty("bluePoolDeletionStartTime"))
                                    object.bluePoolDeletionStartTime = message.bluePoolDeletionStartTime;
                                if (message.greenPoolVersion != null && message.hasOwnProperty("greenPoolVersion"))
                                    object.greenPoolVersion = message.greenPoolVersion;
                                return object;
                            };
    
                            /**
                             * Converts this BlueGreenInfo to JSON.
                             * @function toJSON
                             * @memberof google.container.v1.NodePool.UpdateInfo.BlueGreenInfo
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            BlueGreenInfo.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for BlueGreenInfo
                             * @function getTypeUrl
                             * @memberof google.container.v1.NodePool.UpdateInfo.BlueGreenInfo
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            BlueGreenInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.container.v1.NodePool.UpdateInfo.BlueGreenInfo";
                            };
    
                            /**
                             * Phase enum.
                             * @name google.container.v1.NodePool.UpdateInfo.BlueGreenInfo.Phase
                             * @enum {number}
                             * @property {number} PHASE_UNSPECIFIED=0 PHASE_UNSPECIFIED value
                             * @property {number} UPDATE_STARTED=1 UPDATE_STARTED value
                             * @property {number} CREATING_GREEN_POOL=2 CREATING_GREEN_POOL value
                             * @property {number} CORDONING_BLUE_POOL=3 CORDONING_BLUE_POOL value
                             * @property {number} DRAINING_BLUE_POOL=4 DRAINING_BLUE_POOL value
                             * @property {number} NODE_POOL_SOAKING=5 NODE_POOL_SOAKING value
                             * @property {number} DELETING_BLUE_POOL=6 DELETING_BLUE_POOL value
                             * @property {number} ROLLBACK_STARTED=7 ROLLBACK_STARTED value
                             */
                            BlueGreenInfo.Phase = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "PHASE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "UPDATE_STARTED"] = 1;
                                values[valuesById[2] = "CREATING_GREEN_POOL"] = 2;
                                values[valuesById[3] = "CORDONING_BLUE_POOL"] = 3;
                                values[valuesById[4] = "DRAINING_BLUE_POOL"] = 4;
                                values[valuesById[5] = "NODE_POOL_SOAKING"] = 5;
                                values[valuesById[6] = "DELETING_BLUE_POOL"] = 6;
                                values[valuesById[7] = "ROLLBACK_STARTED"] = 7;
                                return values;
                            })();
    
                            return BlueGreenInfo;
                        })();
    
                        return UpdateInfo;
                    })();
    
                    /**
                     * Status enum.
                     * @name google.container.v1.NodePool.Status
                     * @enum {number}
                     * @property {number} STATUS_UNSPECIFIED=0 STATUS_UNSPECIFIED value
                     * @property {number} PROVISIONING=1 PROVISIONING value
                     * @property {number} RUNNING=2 RUNNING value
                     * @property {number} RUNNING_WITH_ERROR=3 RUNNING_WITH_ERROR value
                     * @property {number} RECONCILING=4 RECONCILING value
                     * @property {number} STOPPING=5 STOPPING value
                     * @property {number} ERROR=6 ERROR value
                     */
                    NodePool.Status = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "STATUS_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "PROVISIONING"] = 1;
                        values[valuesById[2] = "RUNNING"] = 2;
                        values[valuesById[3] = "RUNNING_WITH_ERROR"] = 3;
                        values[valuesById[4] = "RECONCILING"] = 4;
                        values[valuesById[5] = "STOPPING"] = 5;
                        values[valuesById[6] = "ERROR"] = 6;
                        return values;
                    })();
    
                    return NodePool;
                })();
    
                v1.NodeManagement = (function() {
    
                    /**
                     * Properties of a NodeManagement.
                     * @memberof google.container.v1
                     * @interface INodeManagement
                     * @property {boolean|null} [autoUpgrade] NodeManagement autoUpgrade
                     * @property {boolean|null} [autoRepair] NodeManagement autoRepair
                     * @property {google.container.v1.IAutoUpgradeOptions|null} [upgradeOptions] NodeManagement upgradeOptions
                     */
    
                    /**
                     * Constructs a new NodeManagement.
                     * @memberof google.container.v1
                     * @classdesc Represents a NodeManagement.
                     * @implements INodeManagement
                     * @constructor
                     * @param {google.container.v1.INodeManagement=} [properties] Properties to set
                     */
                    function NodeManagement(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NodeManagement autoUpgrade.
                     * @member {boolean} autoUpgrade
                     * @memberof google.container.v1.NodeManagement
                     * @instance
                     */
                    NodeManagement.prototype.autoUpgrade = false;
    
                    /**
                     * NodeManagement autoRepair.
                     * @member {boolean} autoRepair
                     * @memberof google.container.v1.NodeManagement
                     * @instance
                     */
                    NodeManagement.prototype.autoRepair = false;
    
                    /**
                     * NodeManagement upgradeOptions.
                     * @member {google.container.v1.IAutoUpgradeOptions|null|undefined} upgradeOptions
                     * @memberof google.container.v1.NodeManagement
                     * @instance
                     */
                    NodeManagement.prototype.upgradeOptions = null;
    
                    /**
                     * Creates a new NodeManagement instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.NodeManagement
                     * @static
                     * @param {google.container.v1.INodeManagement=} [properties] Properties to set
                     * @returns {google.container.v1.NodeManagement} NodeManagement instance
                     */
                    NodeManagement.create = function create(properties) {
                        return new NodeManagement(properties);
                    };
    
                    /**
                     * Encodes the specified NodeManagement message. Does not implicitly {@link google.container.v1.NodeManagement.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.NodeManagement
                     * @static
                     * @param {google.container.v1.INodeManagement} message NodeManagement message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NodeManagement.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.autoUpgrade != null && Object.hasOwnProperty.call(message, "autoUpgrade"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.autoUpgrade);
                        if (message.autoRepair != null && Object.hasOwnProperty.call(message, "autoRepair"))
                            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.autoRepair);
                        if (message.upgradeOptions != null && Object.hasOwnProperty.call(message, "upgradeOptions"))
                            $root.google.container.v1.AutoUpgradeOptions.encode(message.upgradeOptions, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NodeManagement message, length delimited. Does not implicitly {@link google.container.v1.NodeManagement.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.NodeManagement
                     * @static
                     * @param {google.container.v1.INodeManagement} message NodeManagement message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NodeManagement.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NodeManagement message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.NodeManagement
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.NodeManagement} NodeManagement
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NodeManagement.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.NodeManagement();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.autoUpgrade = reader.bool();
                                    break;
                                }
                            case 2: {
                                    message.autoRepair = reader.bool();
                                    break;
                                }
                            case 10: {
                                    message.upgradeOptions = $root.google.container.v1.AutoUpgradeOptions.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a NodeManagement message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.NodeManagement
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.NodeManagement} NodeManagement
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NodeManagement.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NodeManagement message.
                     * @function verify
                     * @memberof google.container.v1.NodeManagement
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NodeManagement.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.autoUpgrade != null && message.hasOwnProperty("autoUpgrade"))
                            if (typeof message.autoUpgrade !== "boolean")
                                return "autoUpgrade: boolean expected";
                        if (message.autoRepair != null && message.hasOwnProperty("autoRepair"))
                            if (typeof message.autoRepair !== "boolean")
                                return "autoRepair: boolean expected";
                        if (message.upgradeOptions != null && message.hasOwnProperty("upgradeOptions")) {
                            var error = $root.google.container.v1.AutoUpgradeOptions.verify(message.upgradeOptions);
                            if (error)
                                return "upgradeOptions." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a NodeManagement message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.NodeManagement
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.NodeManagement} NodeManagement
                     */
                    NodeManagement.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.NodeManagement)
                            return object;
                        var message = new $root.google.container.v1.NodeManagement();
                        if (object.autoUpgrade != null)
                            message.autoUpgrade = Boolean(object.autoUpgrade);
                        if (object.autoRepair != null)
                            message.autoRepair = Boolean(object.autoRepair);
                        if (object.upgradeOptions != null) {
                            if (typeof object.upgradeOptions !== "object")
                                throw TypeError(".google.container.v1.NodeManagement.upgradeOptions: object expected");
                            message.upgradeOptions = $root.google.container.v1.AutoUpgradeOptions.fromObject(object.upgradeOptions);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NodeManagement message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.NodeManagement
                     * @static
                     * @param {google.container.v1.NodeManagement} message NodeManagement
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NodeManagement.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.autoUpgrade = false;
                            object.autoRepair = false;
                            object.upgradeOptions = null;
                        }
                        if (message.autoUpgrade != null && message.hasOwnProperty("autoUpgrade"))
                            object.autoUpgrade = message.autoUpgrade;
                        if (message.autoRepair != null && message.hasOwnProperty("autoRepair"))
                            object.autoRepair = message.autoRepair;
                        if (message.upgradeOptions != null && message.hasOwnProperty("upgradeOptions"))
                            object.upgradeOptions = $root.google.container.v1.AutoUpgradeOptions.toObject(message.upgradeOptions, options);
                        return object;
                    };
    
                    /**
                     * Converts this NodeManagement to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.NodeManagement
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NodeManagement.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NodeManagement
                     * @function getTypeUrl
                     * @memberof google.container.v1.NodeManagement
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NodeManagement.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.NodeManagement";
                    };
    
                    return NodeManagement;
                })();
    
                v1.AutoUpgradeOptions = (function() {
    
                    /**
                     * Properties of an AutoUpgradeOptions.
                     * @memberof google.container.v1
                     * @interface IAutoUpgradeOptions
                     * @property {string|null} [autoUpgradeStartTime] AutoUpgradeOptions autoUpgradeStartTime
                     * @property {string|null} [description] AutoUpgradeOptions description
                     */
    
                    /**
                     * Constructs a new AutoUpgradeOptions.
                     * @memberof google.container.v1
                     * @classdesc Represents an AutoUpgradeOptions.
                     * @implements IAutoUpgradeOptions
                     * @constructor
                     * @param {google.container.v1.IAutoUpgradeOptions=} [properties] Properties to set
                     */
                    function AutoUpgradeOptions(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * AutoUpgradeOptions autoUpgradeStartTime.
                     * @member {string} autoUpgradeStartTime
                     * @memberof google.container.v1.AutoUpgradeOptions
                     * @instance
                     */
                    AutoUpgradeOptions.prototype.autoUpgradeStartTime = "";
    
                    /**
                     * AutoUpgradeOptions description.
                     * @member {string} description
                     * @memberof google.container.v1.AutoUpgradeOptions
                     * @instance
                     */
                    AutoUpgradeOptions.prototype.description = "";
    
                    /**
                     * Creates a new AutoUpgradeOptions instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.AutoUpgradeOptions
                     * @static
                     * @param {google.container.v1.IAutoUpgradeOptions=} [properties] Properties to set
                     * @returns {google.container.v1.AutoUpgradeOptions} AutoUpgradeOptions instance
                     */
                    AutoUpgradeOptions.create = function create(properties) {
                        return new AutoUpgradeOptions(properties);
                    };
    
                    /**
                     * Encodes the specified AutoUpgradeOptions message. Does not implicitly {@link google.container.v1.AutoUpgradeOptions.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.AutoUpgradeOptions
                     * @static
                     * @param {google.container.v1.IAutoUpgradeOptions} message AutoUpgradeOptions message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AutoUpgradeOptions.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.autoUpgradeStartTime != null && Object.hasOwnProperty.call(message, "autoUpgradeStartTime"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.autoUpgradeStartTime);
                        if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified AutoUpgradeOptions message, length delimited. Does not implicitly {@link google.container.v1.AutoUpgradeOptions.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.AutoUpgradeOptions
                     * @static
                     * @param {google.container.v1.IAutoUpgradeOptions} message AutoUpgradeOptions message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AutoUpgradeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an AutoUpgradeOptions message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.AutoUpgradeOptions
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.AutoUpgradeOptions} AutoUpgradeOptions
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AutoUpgradeOptions.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.AutoUpgradeOptions();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.autoUpgradeStartTime = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.description = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an AutoUpgradeOptions message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.AutoUpgradeOptions
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.AutoUpgradeOptions} AutoUpgradeOptions
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AutoUpgradeOptions.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an AutoUpgradeOptions message.
                     * @function verify
                     * @memberof google.container.v1.AutoUpgradeOptions
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    AutoUpgradeOptions.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.autoUpgradeStartTime != null && message.hasOwnProperty("autoUpgradeStartTime"))
                            if (!$util.isString(message.autoUpgradeStartTime))
                                return "autoUpgradeStartTime: string expected";
                        if (message.description != null && message.hasOwnProperty("description"))
                            if (!$util.isString(message.description))
                                return "description: string expected";
                        return null;
                    };
    
                    /**
                     * Creates an AutoUpgradeOptions message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.AutoUpgradeOptions
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.AutoUpgradeOptions} AutoUpgradeOptions
                     */
                    AutoUpgradeOptions.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.AutoUpgradeOptions)
                            return object;
                        var message = new $root.google.container.v1.AutoUpgradeOptions();
                        if (object.autoUpgradeStartTime != null)
                            message.autoUpgradeStartTime = String(object.autoUpgradeStartTime);
                        if (object.description != null)
                            message.description = String(object.description);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an AutoUpgradeOptions message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.AutoUpgradeOptions
                     * @static
                     * @param {google.container.v1.AutoUpgradeOptions} message AutoUpgradeOptions
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    AutoUpgradeOptions.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.autoUpgradeStartTime = "";
                            object.description = "";
                        }
                        if (message.autoUpgradeStartTime != null && message.hasOwnProperty("autoUpgradeStartTime"))
                            object.autoUpgradeStartTime = message.autoUpgradeStartTime;
                        if (message.description != null && message.hasOwnProperty("description"))
                            object.description = message.description;
                        return object;
                    };
    
                    /**
                     * Converts this AutoUpgradeOptions to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.AutoUpgradeOptions
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    AutoUpgradeOptions.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for AutoUpgradeOptions
                     * @function getTypeUrl
                     * @memberof google.container.v1.AutoUpgradeOptions
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    AutoUpgradeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.AutoUpgradeOptions";
                    };
    
                    return AutoUpgradeOptions;
                })();
    
                v1.MaintenancePolicy = (function() {
    
                    /**
                     * Properties of a MaintenancePolicy.
                     * @memberof google.container.v1
                     * @interface IMaintenancePolicy
                     * @property {google.container.v1.IMaintenanceWindow|null} [window] MaintenancePolicy window
                     * @property {string|null} [resourceVersion] MaintenancePolicy resourceVersion
                     */
    
                    /**
                     * Constructs a new MaintenancePolicy.
                     * @memberof google.container.v1
                     * @classdesc Represents a MaintenancePolicy.
                     * @implements IMaintenancePolicy
                     * @constructor
                     * @param {google.container.v1.IMaintenancePolicy=} [properties] Properties to set
                     */
                    function MaintenancePolicy(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * MaintenancePolicy window.
                     * @member {google.container.v1.IMaintenanceWindow|null|undefined} window
                     * @memberof google.container.v1.MaintenancePolicy
                     * @instance
                     */
                    MaintenancePolicy.prototype.window = null;
    
                    /**
                     * MaintenancePolicy resourceVersion.
                     * @member {string} resourceVersion
                     * @memberof google.container.v1.MaintenancePolicy
                     * @instance
                     */
                    MaintenancePolicy.prototype.resourceVersion = "";
    
                    /**
                     * Creates a new MaintenancePolicy instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.MaintenancePolicy
                     * @static
                     * @param {google.container.v1.IMaintenancePolicy=} [properties] Properties to set
                     * @returns {google.container.v1.MaintenancePolicy} MaintenancePolicy instance
                     */
                    MaintenancePolicy.create = function create(properties) {
                        return new MaintenancePolicy(properties);
                    };
    
                    /**
                     * Encodes the specified MaintenancePolicy message. Does not implicitly {@link google.container.v1.MaintenancePolicy.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.MaintenancePolicy
                     * @static
                     * @param {google.container.v1.IMaintenancePolicy} message MaintenancePolicy message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MaintenancePolicy.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.window != null && Object.hasOwnProperty.call(message, "window"))
                            $root.google.container.v1.MaintenanceWindow.encode(message.window, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.resourceVersion != null && Object.hasOwnProperty.call(message, "resourceVersion"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.resourceVersion);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified MaintenancePolicy message, length delimited. Does not implicitly {@link google.container.v1.MaintenancePolicy.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.MaintenancePolicy
                     * @static
                     * @param {google.container.v1.IMaintenancePolicy} message MaintenancePolicy message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MaintenancePolicy.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a MaintenancePolicy message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.MaintenancePolicy
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.MaintenancePolicy} MaintenancePolicy
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MaintenancePolicy.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.MaintenancePolicy();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.window = $root.google.container.v1.MaintenanceWindow.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.resourceVersion = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a MaintenancePolicy message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.MaintenancePolicy
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.MaintenancePolicy} MaintenancePolicy
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MaintenancePolicy.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a MaintenancePolicy message.
                     * @function verify
                     * @memberof google.container.v1.MaintenancePolicy
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    MaintenancePolicy.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.window != null && message.hasOwnProperty("window")) {
                            var error = $root.google.container.v1.MaintenanceWindow.verify(message.window);
                            if (error)
                                return "window." + error;
                        }
                        if (message.resourceVersion != null && message.hasOwnProperty("resourceVersion"))
                            if (!$util.isString(message.resourceVersion))
                                return "resourceVersion: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a MaintenancePolicy message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.MaintenancePolicy
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.MaintenancePolicy} MaintenancePolicy
                     */
                    MaintenancePolicy.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.MaintenancePolicy)
                            return object;
                        var message = new $root.google.container.v1.MaintenancePolicy();
                        if (object.window != null) {
                            if (typeof object.window !== "object")
                                throw TypeError(".google.container.v1.MaintenancePolicy.window: object expected");
                            message.window = $root.google.container.v1.MaintenanceWindow.fromObject(object.window);
                        }
                        if (object.resourceVersion != null)
                            message.resourceVersion = String(object.resourceVersion);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a MaintenancePolicy message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.MaintenancePolicy
                     * @static
                     * @param {google.container.v1.MaintenancePolicy} message MaintenancePolicy
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    MaintenancePolicy.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.window = null;
                            object.resourceVersion = "";
                        }
                        if (message.window != null && message.hasOwnProperty("window"))
                            object.window = $root.google.container.v1.MaintenanceWindow.toObject(message.window, options);
                        if (message.resourceVersion != null && message.hasOwnProperty("resourceVersion"))
                            object.resourceVersion = message.resourceVersion;
                        return object;
                    };
    
                    /**
                     * Converts this MaintenancePolicy to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.MaintenancePolicy
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    MaintenancePolicy.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for MaintenancePolicy
                     * @function getTypeUrl
                     * @memberof google.container.v1.MaintenancePolicy
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    MaintenancePolicy.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.MaintenancePolicy";
                    };
    
                    return MaintenancePolicy;
                })();
    
                v1.MaintenanceWindow = (function() {
    
                    /**
                     * Properties of a MaintenanceWindow.
                     * @memberof google.container.v1
                     * @interface IMaintenanceWindow
                     * @property {google.container.v1.IDailyMaintenanceWindow|null} [dailyMaintenanceWindow] MaintenanceWindow dailyMaintenanceWindow
                     * @property {google.container.v1.IRecurringTimeWindow|null} [recurringWindow] MaintenanceWindow recurringWindow
                     * @property {Object.<string,google.container.v1.ITimeWindow>|null} [maintenanceExclusions] MaintenanceWindow maintenanceExclusions
                     */
    
                    /**
                     * Constructs a new MaintenanceWindow.
                     * @memberof google.container.v1
                     * @classdesc Represents a MaintenanceWindow.
                     * @implements IMaintenanceWindow
                     * @constructor
                     * @param {google.container.v1.IMaintenanceWindow=} [properties] Properties to set
                     */
                    function MaintenanceWindow(properties) {
                        this.maintenanceExclusions = {};
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * MaintenanceWindow dailyMaintenanceWindow.
                     * @member {google.container.v1.IDailyMaintenanceWindow|null|undefined} dailyMaintenanceWindow
                     * @memberof google.container.v1.MaintenanceWindow
                     * @instance
                     */
                    MaintenanceWindow.prototype.dailyMaintenanceWindow = null;
    
                    /**
                     * MaintenanceWindow recurringWindow.
                     * @member {google.container.v1.IRecurringTimeWindow|null|undefined} recurringWindow
                     * @memberof google.container.v1.MaintenanceWindow
                     * @instance
                     */
                    MaintenanceWindow.prototype.recurringWindow = null;
    
                    /**
                     * MaintenanceWindow maintenanceExclusions.
                     * @member {Object.<string,google.container.v1.ITimeWindow>} maintenanceExclusions
                     * @memberof google.container.v1.MaintenanceWindow
                     * @instance
                     */
                    MaintenanceWindow.prototype.maintenanceExclusions = $util.emptyObject;
    
                    // OneOf field names bound to virtual getters and setters
                    var $oneOfFields;
    
                    /**
                     * MaintenanceWindow policy.
                     * @member {"dailyMaintenanceWindow"|"recurringWindow"|undefined} policy
                     * @memberof google.container.v1.MaintenanceWindow
                     * @instance
                     */
                    Object.defineProperty(MaintenanceWindow.prototype, "policy", {
                        get: $util.oneOfGetter($oneOfFields = ["dailyMaintenanceWindow", "recurringWindow"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });
    
                    /**
                     * Creates a new MaintenanceWindow instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.MaintenanceWindow
                     * @static
                     * @param {google.container.v1.IMaintenanceWindow=} [properties] Properties to set
                     * @returns {google.container.v1.MaintenanceWindow} MaintenanceWindow instance
                     */
                    MaintenanceWindow.create = function create(properties) {
                        return new MaintenanceWindow(properties);
                    };
    
                    /**
                     * Encodes the specified MaintenanceWindow message. Does not implicitly {@link google.container.v1.MaintenanceWindow.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.MaintenanceWindow
                     * @static
                     * @param {google.container.v1.IMaintenanceWindow} message MaintenanceWindow message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MaintenanceWindow.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.dailyMaintenanceWindow != null && Object.hasOwnProperty.call(message, "dailyMaintenanceWindow"))
                            $root.google.container.v1.DailyMaintenanceWindow.encode(message.dailyMaintenanceWindow, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.recurringWindow != null && Object.hasOwnProperty.call(message, "recurringWindow"))
                            $root.google.container.v1.RecurringTimeWindow.encode(message.recurringWindow, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.maintenanceExclusions != null && Object.hasOwnProperty.call(message, "maintenanceExclusions"))
                            for (var keys = Object.keys(message.maintenanceExclusions), i = 0; i < keys.length; ++i) {
                                writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                $root.google.container.v1.TimeWindow.encode(message.maintenanceExclusions[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                            }
                        return writer;
                    };
    
                    /**
                     * Encodes the specified MaintenanceWindow message, length delimited. Does not implicitly {@link google.container.v1.MaintenanceWindow.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.MaintenanceWindow
                     * @static
                     * @param {google.container.v1.IMaintenanceWindow} message MaintenanceWindow message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MaintenanceWindow.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a MaintenanceWindow message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.MaintenanceWindow
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.MaintenanceWindow} MaintenanceWindow
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MaintenanceWindow.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.MaintenanceWindow(), key, value;
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 2: {
                                    message.dailyMaintenanceWindow = $root.google.container.v1.DailyMaintenanceWindow.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.recurringWindow = $root.google.container.v1.RecurringTimeWindow.decode(reader, reader.uint32());
                                    break;
                                }
                            case 4: {
                                    if (message.maintenanceExclusions === $util.emptyObject)
                                        message.maintenanceExclusions = {};
                                    var end2 = reader.uint32() + reader.pos;
                                    key = "";
                                    value = null;
                                    while (reader.pos < end2) {
                                        var tag2 = reader.uint32();
                                        switch (tag2 >>> 3) {
                                        case 1:
                                            key = reader.string();
                                            break;
                                        case 2:
                                            value = $root.google.container.v1.TimeWindow.decode(reader, reader.uint32());
                                            break;
                                        default:
                                            reader.skipType(tag2 & 7);
                                            break;
                                        }
                                    }
                                    message.maintenanceExclusions[key] = value;
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a MaintenanceWindow message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.MaintenanceWindow
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.MaintenanceWindow} MaintenanceWindow
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MaintenanceWindow.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a MaintenanceWindow message.
                     * @function verify
                     * @memberof google.container.v1.MaintenanceWindow
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    MaintenanceWindow.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        var properties = {};
                        if (message.dailyMaintenanceWindow != null && message.hasOwnProperty("dailyMaintenanceWindow")) {
                            properties.policy = 1;
                            {
                                var error = $root.google.container.v1.DailyMaintenanceWindow.verify(message.dailyMaintenanceWindow);
                                if (error)
                                    return "dailyMaintenanceWindow." + error;
                            }
                        }
                        if (message.recurringWindow != null && message.hasOwnProperty("recurringWindow")) {
                            if (properties.policy === 1)
                                return "policy: multiple values";
                            properties.policy = 1;
                            {
                                var error = $root.google.container.v1.RecurringTimeWindow.verify(message.recurringWindow);
                                if (error)
                                    return "recurringWindow." + error;
                            }
                        }
                        if (message.maintenanceExclusions != null && message.hasOwnProperty("maintenanceExclusions")) {
                            if (!$util.isObject(message.maintenanceExclusions))
                                return "maintenanceExclusions: object expected";
                            var key = Object.keys(message.maintenanceExclusions);
                            for (var i = 0; i < key.length; ++i) {
                                var error = $root.google.container.v1.TimeWindow.verify(message.maintenanceExclusions[key[i]]);
                                if (error)
                                    return "maintenanceExclusions." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a MaintenanceWindow message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.MaintenanceWindow
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.MaintenanceWindow} MaintenanceWindow
                     */
                    MaintenanceWindow.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.MaintenanceWindow)
                            return object;
                        var message = new $root.google.container.v1.MaintenanceWindow();
                        if (object.dailyMaintenanceWindow != null) {
                            if (typeof object.dailyMaintenanceWindow !== "object")
                                throw TypeError(".google.container.v1.MaintenanceWindow.dailyMaintenanceWindow: object expected");
                            message.dailyMaintenanceWindow = $root.google.container.v1.DailyMaintenanceWindow.fromObject(object.dailyMaintenanceWindow);
                        }
                        if (object.recurringWindow != null) {
                            if (typeof object.recurringWindow !== "object")
                                throw TypeError(".google.container.v1.MaintenanceWindow.recurringWindow: object expected");
                            message.recurringWindow = $root.google.container.v1.RecurringTimeWindow.fromObject(object.recurringWindow);
                        }
                        if (object.maintenanceExclusions) {
                            if (typeof object.maintenanceExclusions !== "object")
                                throw TypeError(".google.container.v1.MaintenanceWindow.maintenanceExclusions: object expected");
                            message.maintenanceExclusions = {};
                            for (var keys = Object.keys(object.maintenanceExclusions), i = 0; i < keys.length; ++i) {
                                if (typeof object.maintenanceExclusions[keys[i]] !== "object")
                                    throw TypeError(".google.container.v1.MaintenanceWindow.maintenanceExclusions: object expected");
                                message.maintenanceExclusions[keys[i]] = $root.google.container.v1.TimeWindow.fromObject(object.maintenanceExclusions[keys[i]]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a MaintenanceWindow message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.MaintenanceWindow
                     * @static
                     * @param {google.container.v1.MaintenanceWindow} message MaintenanceWindow
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    MaintenanceWindow.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.objects || options.defaults)
                            object.maintenanceExclusions = {};
                        if (message.dailyMaintenanceWindow != null && message.hasOwnProperty("dailyMaintenanceWindow")) {
                            object.dailyMaintenanceWindow = $root.google.container.v1.DailyMaintenanceWindow.toObject(message.dailyMaintenanceWindow, options);
                            if (options.oneofs)
                                object.policy = "dailyMaintenanceWindow";
                        }
                        if (message.recurringWindow != null && message.hasOwnProperty("recurringWindow")) {
                            object.recurringWindow = $root.google.container.v1.RecurringTimeWindow.toObject(message.recurringWindow, options);
                            if (options.oneofs)
                                object.policy = "recurringWindow";
                        }
                        var keys2;
                        if (message.maintenanceExclusions && (keys2 = Object.keys(message.maintenanceExclusions)).length) {
                            object.maintenanceExclusions = {};
                            for (var j = 0; j < keys2.length; ++j)
                                object.maintenanceExclusions[keys2[j]] = $root.google.container.v1.TimeWindow.toObject(message.maintenanceExclusions[keys2[j]], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this MaintenanceWindow to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.MaintenanceWindow
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    MaintenanceWindow.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for MaintenanceWindow
                     * @function getTypeUrl
                     * @memberof google.container.v1.MaintenanceWindow
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    MaintenanceWindow.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.MaintenanceWindow";
                    };
    
                    return MaintenanceWindow;
                })();
    
                v1.TimeWindow = (function() {
    
                    /**
                     * Properties of a TimeWindow.
                     * @memberof google.container.v1
                     * @interface ITimeWindow
                     * @property {google.container.v1.IMaintenanceExclusionOptions|null} [maintenanceExclusionOptions] TimeWindow maintenanceExclusionOptions
                     * @property {google.protobuf.ITimestamp|null} [startTime] TimeWindow startTime
                     * @property {google.protobuf.ITimestamp|null} [endTime] TimeWindow endTime
                     */
    
                    /**
                     * Constructs a new TimeWindow.
                     * @memberof google.container.v1
                     * @classdesc Represents a TimeWindow.
                     * @implements ITimeWindow
                     * @constructor
                     * @param {google.container.v1.ITimeWindow=} [properties] Properties to set
                     */
                    function TimeWindow(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * TimeWindow maintenanceExclusionOptions.
                     * @member {google.container.v1.IMaintenanceExclusionOptions|null|undefined} maintenanceExclusionOptions
                     * @memberof google.container.v1.TimeWindow
                     * @instance
                     */
                    TimeWindow.prototype.maintenanceExclusionOptions = null;
    
                    /**
                     * TimeWindow startTime.
                     * @member {google.protobuf.ITimestamp|null|undefined} startTime
                     * @memberof google.container.v1.TimeWindow
                     * @instance
                     */
                    TimeWindow.prototype.startTime = null;
    
                    /**
                     * TimeWindow endTime.
                     * @member {google.protobuf.ITimestamp|null|undefined} endTime
                     * @memberof google.container.v1.TimeWindow
                     * @instance
                     */
                    TimeWindow.prototype.endTime = null;
    
                    // OneOf field names bound to virtual getters and setters
                    var $oneOfFields;
    
                    /**
                     * TimeWindow options.
                     * @member {"maintenanceExclusionOptions"|undefined} options
                     * @memberof google.container.v1.TimeWindow
                     * @instance
                     */
                    Object.defineProperty(TimeWindow.prototype, "options", {
                        get: $util.oneOfGetter($oneOfFields = ["maintenanceExclusionOptions"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });
    
                    /**
                     * Creates a new TimeWindow instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.TimeWindow
                     * @static
                     * @param {google.container.v1.ITimeWindow=} [properties] Properties to set
                     * @returns {google.container.v1.TimeWindow} TimeWindow instance
                     */
                    TimeWindow.create = function create(properties) {
                        return new TimeWindow(properties);
                    };
    
                    /**
                     * Encodes the specified TimeWindow message. Does not implicitly {@link google.container.v1.TimeWindow.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.TimeWindow
                     * @static
                     * @param {google.container.v1.ITimeWindow} message TimeWindow message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TimeWindow.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                            $root.google.protobuf.Timestamp.encode(message.startTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                            $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.maintenanceExclusionOptions != null && Object.hasOwnProperty.call(message, "maintenanceExclusionOptions"))
                            $root.google.container.v1.MaintenanceExclusionOptions.encode(message.maintenanceExclusionOptions, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified TimeWindow message, length delimited. Does not implicitly {@link google.container.v1.TimeWindow.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.TimeWindow
                     * @static
                     * @param {google.container.v1.ITimeWindow} message TimeWindow message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TimeWindow.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a TimeWindow message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.TimeWindow
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.TimeWindow} TimeWindow
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TimeWindow.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.TimeWindow();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 3: {
                                    message.maintenanceExclusionOptions = $root.google.container.v1.MaintenanceExclusionOptions.decode(reader, reader.uint32());
                                    break;
                                }
                            case 1: {
                                    message.startTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a TimeWindow message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.TimeWindow
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.TimeWindow} TimeWindow
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TimeWindow.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a TimeWindow message.
                     * @function verify
                     * @memberof google.container.v1.TimeWindow
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    TimeWindow.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        var properties = {};
                        if (message.maintenanceExclusionOptions != null && message.hasOwnProperty("maintenanceExclusionOptions")) {
                            properties.options = 1;
                            {
                                var error = $root.google.container.v1.MaintenanceExclusionOptions.verify(message.maintenanceExclusionOptions);
                                if (error)
                                    return "maintenanceExclusionOptions." + error;
                            }
                        }
                        if (message.startTime != null && message.hasOwnProperty("startTime")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.startTime);
                            if (error)
                                return "startTime." + error;
                        }
                        if (message.endTime != null && message.hasOwnProperty("endTime")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                            if (error)
                                return "endTime." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a TimeWindow message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.TimeWindow
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.TimeWindow} TimeWindow
                     */
                    TimeWindow.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.TimeWindow)
                            return object;
                        var message = new $root.google.container.v1.TimeWindow();
                        if (object.maintenanceExclusionOptions != null) {
                            if (typeof object.maintenanceExclusionOptions !== "object")
                                throw TypeError(".google.container.v1.TimeWindow.maintenanceExclusionOptions: object expected");
                            message.maintenanceExclusionOptions = $root.google.container.v1.MaintenanceExclusionOptions.fromObject(object.maintenanceExclusionOptions);
                        }
                        if (object.startTime != null) {
                            if (typeof object.startTime !== "object")
                                throw TypeError(".google.container.v1.TimeWindow.startTime: object expected");
                            message.startTime = $root.google.protobuf.Timestamp.fromObject(object.startTime);
                        }
                        if (object.endTime != null) {
                            if (typeof object.endTime !== "object")
                                throw TypeError(".google.container.v1.TimeWindow.endTime: object expected");
                            message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a TimeWindow message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.TimeWindow
                     * @static
                     * @param {google.container.v1.TimeWindow} message TimeWindow
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    TimeWindow.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.startTime = null;
                            object.endTime = null;
                        }
                        if (message.startTime != null && message.hasOwnProperty("startTime"))
                            object.startTime = $root.google.protobuf.Timestamp.toObject(message.startTime, options);
                        if (message.endTime != null && message.hasOwnProperty("endTime"))
                            object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                        if (message.maintenanceExclusionOptions != null && message.hasOwnProperty("maintenanceExclusionOptions")) {
                            object.maintenanceExclusionOptions = $root.google.container.v1.MaintenanceExclusionOptions.toObject(message.maintenanceExclusionOptions, options);
                            if (options.oneofs)
                                object.options = "maintenanceExclusionOptions";
                        }
                        return object;
                    };
    
                    /**
                     * Converts this TimeWindow to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.TimeWindow
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    TimeWindow.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for TimeWindow
                     * @function getTypeUrl
                     * @memberof google.container.v1.TimeWindow
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    TimeWindow.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.TimeWindow";
                    };
    
                    return TimeWindow;
                })();
    
                v1.MaintenanceExclusionOptions = (function() {
    
                    /**
                     * Properties of a MaintenanceExclusionOptions.
                     * @memberof google.container.v1
                     * @interface IMaintenanceExclusionOptions
                     * @property {google.container.v1.MaintenanceExclusionOptions.Scope|null} [scope] MaintenanceExclusionOptions scope
                     */
    
                    /**
                     * Constructs a new MaintenanceExclusionOptions.
                     * @memberof google.container.v1
                     * @classdesc Represents a MaintenanceExclusionOptions.
                     * @implements IMaintenanceExclusionOptions
                     * @constructor
                     * @param {google.container.v1.IMaintenanceExclusionOptions=} [properties] Properties to set
                     */
                    function MaintenanceExclusionOptions(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * MaintenanceExclusionOptions scope.
                     * @member {google.container.v1.MaintenanceExclusionOptions.Scope} scope
                     * @memberof google.container.v1.MaintenanceExclusionOptions
                     * @instance
                     */
                    MaintenanceExclusionOptions.prototype.scope = 0;
    
                    /**
                     * Creates a new MaintenanceExclusionOptions instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.MaintenanceExclusionOptions
                     * @static
                     * @param {google.container.v1.IMaintenanceExclusionOptions=} [properties] Properties to set
                     * @returns {google.container.v1.MaintenanceExclusionOptions} MaintenanceExclusionOptions instance
                     */
                    MaintenanceExclusionOptions.create = function create(properties) {
                        return new MaintenanceExclusionOptions(properties);
                    };
    
                    /**
                     * Encodes the specified MaintenanceExclusionOptions message. Does not implicitly {@link google.container.v1.MaintenanceExclusionOptions.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.MaintenanceExclusionOptions
                     * @static
                     * @param {google.container.v1.IMaintenanceExclusionOptions} message MaintenanceExclusionOptions message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MaintenanceExclusionOptions.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.scope != null && Object.hasOwnProperty.call(message, "scope"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.scope);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified MaintenanceExclusionOptions message, length delimited. Does not implicitly {@link google.container.v1.MaintenanceExclusionOptions.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.MaintenanceExclusionOptions
                     * @static
                     * @param {google.container.v1.IMaintenanceExclusionOptions} message MaintenanceExclusionOptions message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MaintenanceExclusionOptions.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a MaintenanceExclusionOptions message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.MaintenanceExclusionOptions
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.MaintenanceExclusionOptions} MaintenanceExclusionOptions
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MaintenanceExclusionOptions.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.MaintenanceExclusionOptions();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.scope = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a MaintenanceExclusionOptions message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.MaintenanceExclusionOptions
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.MaintenanceExclusionOptions} MaintenanceExclusionOptions
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MaintenanceExclusionOptions.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a MaintenanceExclusionOptions message.
                     * @function verify
                     * @memberof google.container.v1.MaintenanceExclusionOptions
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    MaintenanceExclusionOptions.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.scope != null && message.hasOwnProperty("scope"))
                            switch (message.scope) {
                            default:
                                return "scope: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates a MaintenanceExclusionOptions message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.MaintenanceExclusionOptions
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.MaintenanceExclusionOptions} MaintenanceExclusionOptions
                     */
                    MaintenanceExclusionOptions.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.MaintenanceExclusionOptions)
                            return object;
                        var message = new $root.google.container.v1.MaintenanceExclusionOptions();
                        switch (object.scope) {
                        default:
                            if (typeof object.scope === "number") {
                                message.scope = object.scope;
                                break;
                            }
                            break;
                        case "NO_UPGRADES":
                        case 0:
                            message.scope = 0;
                            break;
                        case "NO_MINOR_UPGRADES":
                        case 1:
                            message.scope = 1;
                            break;
                        case "NO_MINOR_OR_NODE_UPGRADES":
                        case 2:
                            message.scope = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a MaintenanceExclusionOptions message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.MaintenanceExclusionOptions
                     * @static
                     * @param {google.container.v1.MaintenanceExclusionOptions} message MaintenanceExclusionOptions
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    MaintenanceExclusionOptions.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.scope = options.enums === String ? "NO_UPGRADES" : 0;
                        if (message.scope != null && message.hasOwnProperty("scope"))
                            object.scope = options.enums === String ? $root.google.container.v1.MaintenanceExclusionOptions.Scope[message.scope] === undefined ? message.scope : $root.google.container.v1.MaintenanceExclusionOptions.Scope[message.scope] : message.scope;
                        return object;
                    };
    
                    /**
                     * Converts this MaintenanceExclusionOptions to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.MaintenanceExclusionOptions
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    MaintenanceExclusionOptions.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for MaintenanceExclusionOptions
                     * @function getTypeUrl
                     * @memberof google.container.v1.MaintenanceExclusionOptions
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    MaintenanceExclusionOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.MaintenanceExclusionOptions";
                    };
    
                    /**
                     * Scope enum.
                     * @name google.container.v1.MaintenanceExclusionOptions.Scope
                     * @enum {number}
                     * @property {number} NO_UPGRADES=0 NO_UPGRADES value
                     * @property {number} NO_MINOR_UPGRADES=1 NO_MINOR_UPGRADES value
                     * @property {number} NO_MINOR_OR_NODE_UPGRADES=2 NO_MINOR_OR_NODE_UPGRADES value
                     */
                    MaintenanceExclusionOptions.Scope = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "NO_UPGRADES"] = 0;
                        values[valuesById[1] = "NO_MINOR_UPGRADES"] = 1;
                        values[valuesById[2] = "NO_MINOR_OR_NODE_UPGRADES"] = 2;
                        return values;
                    })();
    
                    return MaintenanceExclusionOptions;
                })();
    
                v1.RecurringTimeWindow = (function() {
    
                    /**
                     * Properties of a RecurringTimeWindow.
                     * @memberof google.container.v1
                     * @interface IRecurringTimeWindow
                     * @property {google.container.v1.ITimeWindow|null} [window] RecurringTimeWindow window
                     * @property {string|null} [recurrence] RecurringTimeWindow recurrence
                     */
    
                    /**
                     * Constructs a new RecurringTimeWindow.
                     * @memberof google.container.v1
                     * @classdesc Represents a RecurringTimeWindow.
                     * @implements IRecurringTimeWindow
                     * @constructor
                     * @param {google.container.v1.IRecurringTimeWindow=} [properties] Properties to set
                     */
                    function RecurringTimeWindow(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * RecurringTimeWindow window.
                     * @member {google.container.v1.ITimeWindow|null|undefined} window
                     * @memberof google.container.v1.RecurringTimeWindow
                     * @instance
                     */
                    RecurringTimeWindow.prototype.window = null;
    
                    /**
                     * RecurringTimeWindow recurrence.
                     * @member {string} recurrence
                     * @memberof google.container.v1.RecurringTimeWindow
                     * @instance
                     */
                    RecurringTimeWindow.prototype.recurrence = "";
    
                    /**
                     * Creates a new RecurringTimeWindow instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.RecurringTimeWindow
                     * @static
                     * @param {google.container.v1.IRecurringTimeWindow=} [properties] Properties to set
                     * @returns {google.container.v1.RecurringTimeWindow} RecurringTimeWindow instance
                     */
                    RecurringTimeWindow.create = function create(properties) {
                        return new RecurringTimeWindow(properties);
                    };
    
                    /**
                     * Encodes the specified RecurringTimeWindow message. Does not implicitly {@link google.container.v1.RecurringTimeWindow.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.RecurringTimeWindow
                     * @static
                     * @param {google.container.v1.IRecurringTimeWindow} message RecurringTimeWindow message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    RecurringTimeWindow.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.window != null && Object.hasOwnProperty.call(message, "window"))
                            $root.google.container.v1.TimeWindow.encode(message.window, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.recurrence != null && Object.hasOwnProperty.call(message, "recurrence"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.recurrence);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified RecurringTimeWindow message, length delimited. Does not implicitly {@link google.container.v1.RecurringTimeWindow.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.RecurringTimeWindow
                     * @static
                     * @param {google.container.v1.IRecurringTimeWindow} message RecurringTimeWindow message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    RecurringTimeWindow.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a RecurringTimeWindow message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.RecurringTimeWindow
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.RecurringTimeWindow} RecurringTimeWindow
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    RecurringTimeWindow.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.RecurringTimeWindow();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.window = $root.google.container.v1.TimeWindow.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.recurrence = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a RecurringTimeWindow message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.RecurringTimeWindow
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.RecurringTimeWindow} RecurringTimeWindow
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    RecurringTimeWindow.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a RecurringTimeWindow message.
                     * @function verify
                     * @memberof google.container.v1.RecurringTimeWindow
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    RecurringTimeWindow.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.window != null && message.hasOwnProperty("window")) {
                            var error = $root.google.container.v1.TimeWindow.verify(message.window);
                            if (error)
                                return "window." + error;
                        }
                        if (message.recurrence != null && message.hasOwnProperty("recurrence"))
                            if (!$util.isString(message.recurrence))
                                return "recurrence: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a RecurringTimeWindow message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.RecurringTimeWindow
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.RecurringTimeWindow} RecurringTimeWindow
                     */
                    RecurringTimeWindow.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.RecurringTimeWindow)
                            return object;
                        var message = new $root.google.container.v1.RecurringTimeWindow();
                        if (object.window != null) {
                            if (typeof object.window !== "object")
                                throw TypeError(".google.container.v1.RecurringTimeWindow.window: object expected");
                            message.window = $root.google.container.v1.TimeWindow.fromObject(object.window);
                        }
                        if (object.recurrence != null)
                            message.recurrence = String(object.recurrence);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a RecurringTimeWindow message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.RecurringTimeWindow
                     * @static
                     * @param {google.container.v1.RecurringTimeWindow} message RecurringTimeWindow
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    RecurringTimeWindow.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.window = null;
                            object.recurrence = "";
                        }
                        if (message.window != null && message.hasOwnProperty("window"))
                            object.window = $root.google.container.v1.TimeWindow.toObject(message.window, options);
                        if (message.recurrence != null && message.hasOwnProperty("recurrence"))
                            object.recurrence = message.recurrence;
                        return object;
                    };
    
                    /**
                     * Converts this RecurringTimeWindow to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.RecurringTimeWindow
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    RecurringTimeWindow.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for RecurringTimeWindow
                     * @function getTypeUrl
                     * @memberof google.container.v1.RecurringTimeWindow
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    RecurringTimeWindow.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.RecurringTimeWindow";
                    };
    
                    return RecurringTimeWindow;
                })();
    
                v1.DailyMaintenanceWindow = (function() {
    
                    /**
                     * Properties of a DailyMaintenanceWindow.
                     * @memberof google.container.v1
                     * @interface IDailyMaintenanceWindow
                     * @property {string|null} [startTime] DailyMaintenanceWindow startTime
                     * @property {string|null} [duration] DailyMaintenanceWindow duration
                     */
    
                    /**
                     * Constructs a new DailyMaintenanceWindow.
                     * @memberof google.container.v1
                     * @classdesc Represents a DailyMaintenanceWindow.
                     * @implements IDailyMaintenanceWindow
                     * @constructor
                     * @param {google.container.v1.IDailyMaintenanceWindow=} [properties] Properties to set
                     */
                    function DailyMaintenanceWindow(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * DailyMaintenanceWindow startTime.
                     * @member {string} startTime
                     * @memberof google.container.v1.DailyMaintenanceWindow
                     * @instance
                     */
                    DailyMaintenanceWindow.prototype.startTime = "";
    
                    /**
                     * DailyMaintenanceWindow duration.
                     * @member {string} duration
                     * @memberof google.container.v1.DailyMaintenanceWindow
                     * @instance
                     */
                    DailyMaintenanceWindow.prototype.duration = "";
    
                    /**
                     * Creates a new DailyMaintenanceWindow instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.DailyMaintenanceWindow
                     * @static
                     * @param {google.container.v1.IDailyMaintenanceWindow=} [properties] Properties to set
                     * @returns {google.container.v1.DailyMaintenanceWindow} DailyMaintenanceWindow instance
                     */
                    DailyMaintenanceWindow.create = function create(properties) {
                        return new DailyMaintenanceWindow(properties);
                    };
    
                    /**
                     * Encodes the specified DailyMaintenanceWindow message. Does not implicitly {@link google.container.v1.DailyMaintenanceWindow.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.DailyMaintenanceWindow
                     * @static
                     * @param {google.container.v1.IDailyMaintenanceWindow} message DailyMaintenanceWindow message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DailyMaintenanceWindow.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.startTime);
                        if (message.duration != null && Object.hasOwnProperty.call(message, "duration"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.duration);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified DailyMaintenanceWindow message, length delimited. Does not implicitly {@link google.container.v1.DailyMaintenanceWindow.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.DailyMaintenanceWindow
                     * @static
                     * @param {google.container.v1.IDailyMaintenanceWindow} message DailyMaintenanceWindow message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DailyMaintenanceWindow.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a DailyMaintenanceWindow message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.DailyMaintenanceWindow
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.DailyMaintenanceWindow} DailyMaintenanceWindow
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DailyMaintenanceWindow.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.DailyMaintenanceWindow();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 2: {
                                    message.startTime = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.duration = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a DailyMaintenanceWindow message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.DailyMaintenanceWindow
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.DailyMaintenanceWindow} DailyMaintenanceWindow
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DailyMaintenanceWindow.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a DailyMaintenanceWindow message.
                     * @function verify
                     * @memberof google.container.v1.DailyMaintenanceWindow
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    DailyMaintenanceWindow.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.startTime != null && message.hasOwnProperty("startTime"))
                            if (!$util.isString(message.startTime))
                                return "startTime: string expected";
                        if (message.duration != null && message.hasOwnProperty("duration"))
                            if (!$util.isString(message.duration))
                                return "duration: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a DailyMaintenanceWindow message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.DailyMaintenanceWindow
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.DailyMaintenanceWindow} DailyMaintenanceWindow
                     */
                    DailyMaintenanceWindow.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.DailyMaintenanceWindow)
                            return object;
                        var message = new $root.google.container.v1.DailyMaintenanceWindow();
                        if (object.startTime != null)
                            message.startTime = String(object.startTime);
                        if (object.duration != null)
                            message.duration = String(object.duration);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a DailyMaintenanceWindow message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.DailyMaintenanceWindow
                     * @static
                     * @param {google.container.v1.DailyMaintenanceWindow} message DailyMaintenanceWindow
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    DailyMaintenanceWindow.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.startTime = "";
                            object.duration = "";
                        }
                        if (message.startTime != null && message.hasOwnProperty("startTime"))
                            object.startTime = message.startTime;
                        if (message.duration != null && message.hasOwnProperty("duration"))
                            object.duration = message.duration;
                        return object;
                    };
    
                    /**
                     * Converts this DailyMaintenanceWindow to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.DailyMaintenanceWindow
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    DailyMaintenanceWindow.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for DailyMaintenanceWindow
                     * @function getTypeUrl
                     * @memberof google.container.v1.DailyMaintenanceWindow
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    DailyMaintenanceWindow.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.DailyMaintenanceWindow";
                    };
    
                    return DailyMaintenanceWindow;
                })();
    
                v1.SetNodePoolManagementRequest = (function() {
    
                    /**
                     * Properties of a SetNodePoolManagementRequest.
                     * @memberof google.container.v1
                     * @interface ISetNodePoolManagementRequest
                     * @property {string|null} [projectId] SetNodePoolManagementRequest projectId
                     * @property {string|null} [zone] SetNodePoolManagementRequest zone
                     * @property {string|null} [clusterId] SetNodePoolManagementRequest clusterId
                     * @property {string|null} [nodePoolId] SetNodePoolManagementRequest nodePoolId
                     * @property {google.container.v1.INodeManagement|null} [management] SetNodePoolManagementRequest management
                     * @property {string|null} [name] SetNodePoolManagementRequest name
                     */
    
                    /**
                     * Constructs a new SetNodePoolManagementRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a SetNodePoolManagementRequest.
                     * @implements ISetNodePoolManagementRequest
                     * @constructor
                     * @param {google.container.v1.ISetNodePoolManagementRequest=} [properties] Properties to set
                     */
                    function SetNodePoolManagementRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * SetNodePoolManagementRequest projectId.
                     * @member {string} projectId
                     * @memberof google.container.v1.SetNodePoolManagementRequest
                     * @instance
                     */
                    SetNodePoolManagementRequest.prototype.projectId = "";
    
                    /**
                     * SetNodePoolManagementRequest zone.
                     * @member {string} zone
                     * @memberof google.container.v1.SetNodePoolManagementRequest
                     * @instance
                     */
                    SetNodePoolManagementRequest.prototype.zone = "";
    
                    /**
                     * SetNodePoolManagementRequest clusterId.
                     * @member {string} clusterId
                     * @memberof google.container.v1.SetNodePoolManagementRequest
                     * @instance
                     */
                    SetNodePoolManagementRequest.prototype.clusterId = "";
    
                    /**
                     * SetNodePoolManagementRequest nodePoolId.
                     * @member {string} nodePoolId
                     * @memberof google.container.v1.SetNodePoolManagementRequest
                     * @instance
                     */
                    SetNodePoolManagementRequest.prototype.nodePoolId = "";
    
                    /**
                     * SetNodePoolManagementRequest management.
                     * @member {google.container.v1.INodeManagement|null|undefined} management
                     * @memberof google.container.v1.SetNodePoolManagementRequest
                     * @instance
                     */
                    SetNodePoolManagementRequest.prototype.management = null;
    
                    /**
                     * SetNodePoolManagementRequest name.
                     * @member {string} name
                     * @memberof google.container.v1.SetNodePoolManagementRequest
                     * @instance
                     */
                    SetNodePoolManagementRequest.prototype.name = "";
    
                    /**
                     * Creates a new SetNodePoolManagementRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.SetNodePoolManagementRequest
                     * @static
                     * @param {google.container.v1.ISetNodePoolManagementRequest=} [properties] Properties to set
                     * @returns {google.container.v1.SetNodePoolManagementRequest} SetNodePoolManagementRequest instance
                     */
                    SetNodePoolManagementRequest.create = function create(properties) {
                        return new SetNodePoolManagementRequest(properties);
                    };
    
                    /**
                     * Encodes the specified SetNodePoolManagementRequest message. Does not implicitly {@link google.container.v1.SetNodePoolManagementRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.SetNodePoolManagementRequest
                     * @static
                     * @param {google.container.v1.ISetNodePoolManagementRequest} message SetNodePoolManagementRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SetNodePoolManagementRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.clusterId != null && Object.hasOwnProperty.call(message, "clusterId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.clusterId);
                        if (message.nodePoolId != null && Object.hasOwnProperty.call(message, "nodePoolId"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.nodePoolId);
                        if (message.management != null && Object.hasOwnProperty.call(message, "management"))
                            $root.google.container.v1.NodeManagement.encode(message.management, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 7, wireType 2 =*/58).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified SetNodePoolManagementRequest message, length delimited. Does not implicitly {@link google.container.v1.SetNodePoolManagementRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.SetNodePoolManagementRequest
                     * @static
                     * @param {google.container.v1.ISetNodePoolManagementRequest} message SetNodePoolManagementRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SetNodePoolManagementRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a SetNodePoolManagementRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.SetNodePoolManagementRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.SetNodePoolManagementRequest} SetNodePoolManagementRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SetNodePoolManagementRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.SetNodePoolManagementRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.projectId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.clusterId = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.nodePoolId = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.management = $root.google.container.v1.NodeManagement.decode(reader, reader.uint32());
                                    break;
                                }
                            case 7: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a SetNodePoolManagementRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.SetNodePoolManagementRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.SetNodePoolManagementRequest} SetNodePoolManagementRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SetNodePoolManagementRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a SetNodePoolManagementRequest message.
                     * @function verify
                     * @memberof google.container.v1.SetNodePoolManagementRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    SetNodePoolManagementRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            if (!$util.isString(message.projectId))
                                return "projectId: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            if (!$util.isString(message.clusterId))
                                return "clusterId: string expected";
                        if (message.nodePoolId != null && message.hasOwnProperty("nodePoolId"))
                            if (!$util.isString(message.nodePoolId))
                                return "nodePoolId: string expected";
                        if (message.management != null && message.hasOwnProperty("management")) {
                            var error = $root.google.container.v1.NodeManagement.verify(message.management);
                            if (error)
                                return "management." + error;
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a SetNodePoolManagementRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.SetNodePoolManagementRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.SetNodePoolManagementRequest} SetNodePoolManagementRequest
                     */
                    SetNodePoolManagementRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.SetNodePoolManagementRequest)
                            return object;
                        var message = new $root.google.container.v1.SetNodePoolManagementRequest();
                        if (object.projectId != null)
                            message.projectId = String(object.projectId);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.clusterId != null)
                            message.clusterId = String(object.clusterId);
                        if (object.nodePoolId != null)
                            message.nodePoolId = String(object.nodePoolId);
                        if (object.management != null) {
                            if (typeof object.management !== "object")
                                throw TypeError(".google.container.v1.SetNodePoolManagementRequest.management: object expected");
                            message.management = $root.google.container.v1.NodeManagement.fromObject(object.management);
                        }
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a SetNodePoolManagementRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.SetNodePoolManagementRequest
                     * @static
                     * @param {google.container.v1.SetNodePoolManagementRequest} message SetNodePoolManagementRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    SetNodePoolManagementRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.projectId = "";
                            object.zone = "";
                            object.clusterId = "";
                            object.nodePoolId = "";
                            object.management = null;
                            object.name = "";
                        }
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            object.projectId = message.projectId;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            object.clusterId = message.clusterId;
                        if (message.nodePoolId != null && message.hasOwnProperty("nodePoolId"))
                            object.nodePoolId = message.nodePoolId;
                        if (message.management != null && message.hasOwnProperty("management"))
                            object.management = $root.google.container.v1.NodeManagement.toObject(message.management, options);
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this SetNodePoolManagementRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.SetNodePoolManagementRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    SetNodePoolManagementRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for SetNodePoolManagementRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.SetNodePoolManagementRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    SetNodePoolManagementRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.SetNodePoolManagementRequest";
                    };
    
                    return SetNodePoolManagementRequest;
                })();
    
                v1.SetNodePoolSizeRequest = (function() {
    
                    /**
                     * Properties of a SetNodePoolSizeRequest.
                     * @memberof google.container.v1
                     * @interface ISetNodePoolSizeRequest
                     * @property {string|null} [projectId] SetNodePoolSizeRequest projectId
                     * @property {string|null} [zone] SetNodePoolSizeRequest zone
                     * @property {string|null} [clusterId] SetNodePoolSizeRequest clusterId
                     * @property {string|null} [nodePoolId] SetNodePoolSizeRequest nodePoolId
                     * @property {number|null} [nodeCount] SetNodePoolSizeRequest nodeCount
                     * @property {string|null} [name] SetNodePoolSizeRequest name
                     */
    
                    /**
                     * Constructs a new SetNodePoolSizeRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a SetNodePoolSizeRequest.
                     * @implements ISetNodePoolSizeRequest
                     * @constructor
                     * @param {google.container.v1.ISetNodePoolSizeRequest=} [properties] Properties to set
                     */
                    function SetNodePoolSizeRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * SetNodePoolSizeRequest projectId.
                     * @member {string} projectId
                     * @memberof google.container.v1.SetNodePoolSizeRequest
                     * @instance
                     */
                    SetNodePoolSizeRequest.prototype.projectId = "";
    
                    /**
                     * SetNodePoolSizeRequest zone.
                     * @member {string} zone
                     * @memberof google.container.v1.SetNodePoolSizeRequest
                     * @instance
                     */
                    SetNodePoolSizeRequest.prototype.zone = "";
    
                    /**
                     * SetNodePoolSizeRequest clusterId.
                     * @member {string} clusterId
                     * @memberof google.container.v1.SetNodePoolSizeRequest
                     * @instance
                     */
                    SetNodePoolSizeRequest.prototype.clusterId = "";
    
                    /**
                     * SetNodePoolSizeRequest nodePoolId.
                     * @member {string} nodePoolId
                     * @memberof google.container.v1.SetNodePoolSizeRequest
                     * @instance
                     */
                    SetNodePoolSizeRequest.prototype.nodePoolId = "";
    
                    /**
                     * SetNodePoolSizeRequest nodeCount.
                     * @member {number} nodeCount
                     * @memberof google.container.v1.SetNodePoolSizeRequest
                     * @instance
                     */
                    SetNodePoolSizeRequest.prototype.nodeCount = 0;
    
                    /**
                     * SetNodePoolSizeRequest name.
                     * @member {string} name
                     * @memberof google.container.v1.SetNodePoolSizeRequest
                     * @instance
                     */
                    SetNodePoolSizeRequest.prototype.name = "";
    
                    /**
                     * Creates a new SetNodePoolSizeRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.SetNodePoolSizeRequest
                     * @static
                     * @param {google.container.v1.ISetNodePoolSizeRequest=} [properties] Properties to set
                     * @returns {google.container.v1.SetNodePoolSizeRequest} SetNodePoolSizeRequest instance
                     */
                    SetNodePoolSizeRequest.create = function create(properties) {
                        return new SetNodePoolSizeRequest(properties);
                    };
    
                    /**
                     * Encodes the specified SetNodePoolSizeRequest message. Does not implicitly {@link google.container.v1.SetNodePoolSizeRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.SetNodePoolSizeRequest
                     * @static
                     * @param {google.container.v1.ISetNodePoolSizeRequest} message SetNodePoolSizeRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SetNodePoolSizeRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.clusterId != null && Object.hasOwnProperty.call(message, "clusterId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.clusterId);
                        if (message.nodePoolId != null && Object.hasOwnProperty.call(message, "nodePoolId"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.nodePoolId);
                        if (message.nodeCount != null && Object.hasOwnProperty.call(message, "nodeCount"))
                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.nodeCount);
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 7, wireType 2 =*/58).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified SetNodePoolSizeRequest message, length delimited. Does not implicitly {@link google.container.v1.SetNodePoolSizeRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.SetNodePoolSizeRequest
                     * @static
                     * @param {google.container.v1.ISetNodePoolSizeRequest} message SetNodePoolSizeRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SetNodePoolSizeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a SetNodePoolSizeRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.SetNodePoolSizeRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.SetNodePoolSizeRequest} SetNodePoolSizeRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SetNodePoolSizeRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.SetNodePoolSizeRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.projectId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.clusterId = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.nodePoolId = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.nodeCount = reader.int32();
                                    break;
                                }
                            case 7: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a SetNodePoolSizeRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.SetNodePoolSizeRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.SetNodePoolSizeRequest} SetNodePoolSizeRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SetNodePoolSizeRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a SetNodePoolSizeRequest message.
                     * @function verify
                     * @memberof google.container.v1.SetNodePoolSizeRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    SetNodePoolSizeRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            if (!$util.isString(message.projectId))
                                return "projectId: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            if (!$util.isString(message.clusterId))
                                return "clusterId: string expected";
                        if (message.nodePoolId != null && message.hasOwnProperty("nodePoolId"))
                            if (!$util.isString(message.nodePoolId))
                                return "nodePoolId: string expected";
                        if (message.nodeCount != null && message.hasOwnProperty("nodeCount"))
                            if (!$util.isInteger(message.nodeCount))
                                return "nodeCount: integer expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a SetNodePoolSizeRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.SetNodePoolSizeRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.SetNodePoolSizeRequest} SetNodePoolSizeRequest
                     */
                    SetNodePoolSizeRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.SetNodePoolSizeRequest)
                            return object;
                        var message = new $root.google.container.v1.SetNodePoolSizeRequest();
                        if (object.projectId != null)
                            message.projectId = String(object.projectId);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.clusterId != null)
                            message.clusterId = String(object.clusterId);
                        if (object.nodePoolId != null)
                            message.nodePoolId = String(object.nodePoolId);
                        if (object.nodeCount != null)
                            message.nodeCount = object.nodeCount | 0;
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a SetNodePoolSizeRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.SetNodePoolSizeRequest
                     * @static
                     * @param {google.container.v1.SetNodePoolSizeRequest} message SetNodePoolSizeRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    SetNodePoolSizeRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.projectId = "";
                            object.zone = "";
                            object.clusterId = "";
                            object.nodePoolId = "";
                            object.nodeCount = 0;
                            object.name = "";
                        }
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            object.projectId = message.projectId;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            object.clusterId = message.clusterId;
                        if (message.nodePoolId != null && message.hasOwnProperty("nodePoolId"))
                            object.nodePoolId = message.nodePoolId;
                        if (message.nodeCount != null && message.hasOwnProperty("nodeCount"))
                            object.nodeCount = message.nodeCount;
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this SetNodePoolSizeRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.SetNodePoolSizeRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    SetNodePoolSizeRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for SetNodePoolSizeRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.SetNodePoolSizeRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    SetNodePoolSizeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.SetNodePoolSizeRequest";
                    };
    
                    return SetNodePoolSizeRequest;
                })();
    
                v1.CompleteNodePoolUpgradeRequest = (function() {
    
                    /**
                     * Properties of a CompleteNodePoolUpgradeRequest.
                     * @memberof google.container.v1
                     * @interface ICompleteNodePoolUpgradeRequest
                     * @property {string|null} [name] CompleteNodePoolUpgradeRequest name
                     */
    
                    /**
                     * Constructs a new CompleteNodePoolUpgradeRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a CompleteNodePoolUpgradeRequest.
                     * @implements ICompleteNodePoolUpgradeRequest
                     * @constructor
                     * @param {google.container.v1.ICompleteNodePoolUpgradeRequest=} [properties] Properties to set
                     */
                    function CompleteNodePoolUpgradeRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * CompleteNodePoolUpgradeRequest name.
                     * @member {string} name
                     * @memberof google.container.v1.CompleteNodePoolUpgradeRequest
                     * @instance
                     */
                    CompleteNodePoolUpgradeRequest.prototype.name = "";
    
                    /**
                     * Creates a new CompleteNodePoolUpgradeRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.CompleteNodePoolUpgradeRequest
                     * @static
                     * @param {google.container.v1.ICompleteNodePoolUpgradeRequest=} [properties] Properties to set
                     * @returns {google.container.v1.CompleteNodePoolUpgradeRequest} CompleteNodePoolUpgradeRequest instance
                     */
                    CompleteNodePoolUpgradeRequest.create = function create(properties) {
                        return new CompleteNodePoolUpgradeRequest(properties);
                    };
    
                    /**
                     * Encodes the specified CompleteNodePoolUpgradeRequest message. Does not implicitly {@link google.container.v1.CompleteNodePoolUpgradeRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.CompleteNodePoolUpgradeRequest
                     * @static
                     * @param {google.container.v1.ICompleteNodePoolUpgradeRequest} message CompleteNodePoolUpgradeRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CompleteNodePoolUpgradeRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified CompleteNodePoolUpgradeRequest message, length delimited. Does not implicitly {@link google.container.v1.CompleteNodePoolUpgradeRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.CompleteNodePoolUpgradeRequest
                     * @static
                     * @param {google.container.v1.ICompleteNodePoolUpgradeRequest} message CompleteNodePoolUpgradeRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CompleteNodePoolUpgradeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a CompleteNodePoolUpgradeRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.CompleteNodePoolUpgradeRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.CompleteNodePoolUpgradeRequest} CompleteNodePoolUpgradeRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CompleteNodePoolUpgradeRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.CompleteNodePoolUpgradeRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a CompleteNodePoolUpgradeRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.CompleteNodePoolUpgradeRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.CompleteNodePoolUpgradeRequest} CompleteNodePoolUpgradeRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CompleteNodePoolUpgradeRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a CompleteNodePoolUpgradeRequest message.
                     * @function verify
                     * @memberof google.container.v1.CompleteNodePoolUpgradeRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    CompleteNodePoolUpgradeRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a CompleteNodePoolUpgradeRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.CompleteNodePoolUpgradeRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.CompleteNodePoolUpgradeRequest} CompleteNodePoolUpgradeRequest
                     */
                    CompleteNodePoolUpgradeRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.CompleteNodePoolUpgradeRequest)
                            return object;
                        var message = new $root.google.container.v1.CompleteNodePoolUpgradeRequest();
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a CompleteNodePoolUpgradeRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.CompleteNodePoolUpgradeRequest
                     * @static
                     * @param {google.container.v1.CompleteNodePoolUpgradeRequest} message CompleteNodePoolUpgradeRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    CompleteNodePoolUpgradeRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.name = "";
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this CompleteNodePoolUpgradeRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.CompleteNodePoolUpgradeRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    CompleteNodePoolUpgradeRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for CompleteNodePoolUpgradeRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.CompleteNodePoolUpgradeRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    CompleteNodePoolUpgradeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.CompleteNodePoolUpgradeRequest";
                    };
    
                    return CompleteNodePoolUpgradeRequest;
                })();
    
                v1.RollbackNodePoolUpgradeRequest = (function() {
    
                    /**
                     * Properties of a RollbackNodePoolUpgradeRequest.
                     * @memberof google.container.v1
                     * @interface IRollbackNodePoolUpgradeRequest
                     * @property {string|null} [projectId] RollbackNodePoolUpgradeRequest projectId
                     * @property {string|null} [zone] RollbackNodePoolUpgradeRequest zone
                     * @property {string|null} [clusterId] RollbackNodePoolUpgradeRequest clusterId
                     * @property {string|null} [nodePoolId] RollbackNodePoolUpgradeRequest nodePoolId
                     * @property {string|null} [name] RollbackNodePoolUpgradeRequest name
                     * @property {boolean|null} [respectPdb] RollbackNodePoolUpgradeRequest respectPdb
                     */
    
                    /**
                     * Constructs a new RollbackNodePoolUpgradeRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a RollbackNodePoolUpgradeRequest.
                     * @implements IRollbackNodePoolUpgradeRequest
                     * @constructor
                     * @param {google.container.v1.IRollbackNodePoolUpgradeRequest=} [properties] Properties to set
                     */
                    function RollbackNodePoolUpgradeRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * RollbackNodePoolUpgradeRequest projectId.
                     * @member {string} projectId
                     * @memberof google.container.v1.RollbackNodePoolUpgradeRequest
                     * @instance
                     */
                    RollbackNodePoolUpgradeRequest.prototype.projectId = "";
    
                    /**
                     * RollbackNodePoolUpgradeRequest zone.
                     * @member {string} zone
                     * @memberof google.container.v1.RollbackNodePoolUpgradeRequest
                     * @instance
                     */
                    RollbackNodePoolUpgradeRequest.prototype.zone = "";
    
                    /**
                     * RollbackNodePoolUpgradeRequest clusterId.
                     * @member {string} clusterId
                     * @memberof google.container.v1.RollbackNodePoolUpgradeRequest
                     * @instance
                     */
                    RollbackNodePoolUpgradeRequest.prototype.clusterId = "";
    
                    /**
                     * RollbackNodePoolUpgradeRequest nodePoolId.
                     * @member {string} nodePoolId
                     * @memberof google.container.v1.RollbackNodePoolUpgradeRequest
                     * @instance
                     */
                    RollbackNodePoolUpgradeRequest.prototype.nodePoolId = "";
    
                    /**
                     * RollbackNodePoolUpgradeRequest name.
                     * @member {string} name
                     * @memberof google.container.v1.RollbackNodePoolUpgradeRequest
                     * @instance
                     */
                    RollbackNodePoolUpgradeRequest.prototype.name = "";
    
                    /**
                     * RollbackNodePoolUpgradeRequest respectPdb.
                     * @member {boolean} respectPdb
                     * @memberof google.container.v1.RollbackNodePoolUpgradeRequest
                     * @instance
                     */
                    RollbackNodePoolUpgradeRequest.prototype.respectPdb = false;
    
                    /**
                     * Creates a new RollbackNodePoolUpgradeRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.RollbackNodePoolUpgradeRequest
                     * @static
                     * @param {google.container.v1.IRollbackNodePoolUpgradeRequest=} [properties] Properties to set
                     * @returns {google.container.v1.RollbackNodePoolUpgradeRequest} RollbackNodePoolUpgradeRequest instance
                     */
                    RollbackNodePoolUpgradeRequest.create = function create(properties) {
                        return new RollbackNodePoolUpgradeRequest(properties);
                    };
    
                    /**
                     * Encodes the specified RollbackNodePoolUpgradeRequest message. Does not implicitly {@link google.container.v1.RollbackNodePoolUpgradeRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.RollbackNodePoolUpgradeRequest
                     * @static
                     * @param {google.container.v1.IRollbackNodePoolUpgradeRequest} message RollbackNodePoolUpgradeRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    RollbackNodePoolUpgradeRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.clusterId != null && Object.hasOwnProperty.call(message, "clusterId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.clusterId);
                        if (message.nodePoolId != null && Object.hasOwnProperty.call(message, "nodePoolId"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.nodePoolId);
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.name);
                        if (message.respectPdb != null && Object.hasOwnProperty.call(message, "respectPdb"))
                            writer.uint32(/* id 7, wireType 0 =*/56).bool(message.respectPdb);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified RollbackNodePoolUpgradeRequest message, length delimited. Does not implicitly {@link google.container.v1.RollbackNodePoolUpgradeRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.RollbackNodePoolUpgradeRequest
                     * @static
                     * @param {google.container.v1.IRollbackNodePoolUpgradeRequest} message RollbackNodePoolUpgradeRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    RollbackNodePoolUpgradeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a RollbackNodePoolUpgradeRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.RollbackNodePoolUpgradeRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.RollbackNodePoolUpgradeRequest} RollbackNodePoolUpgradeRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    RollbackNodePoolUpgradeRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.RollbackNodePoolUpgradeRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.projectId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.clusterId = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.nodePoolId = reader.string();
                                    break;
                                }
                            case 6: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 7: {
                                    message.respectPdb = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a RollbackNodePoolUpgradeRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.RollbackNodePoolUpgradeRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.RollbackNodePoolUpgradeRequest} RollbackNodePoolUpgradeRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    RollbackNodePoolUpgradeRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a RollbackNodePoolUpgradeRequest message.
                     * @function verify
                     * @memberof google.container.v1.RollbackNodePoolUpgradeRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    RollbackNodePoolUpgradeRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            if (!$util.isString(message.projectId))
                                return "projectId: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            if (!$util.isString(message.clusterId))
                                return "clusterId: string expected";
                        if (message.nodePoolId != null && message.hasOwnProperty("nodePoolId"))
                            if (!$util.isString(message.nodePoolId))
                                return "nodePoolId: string expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.respectPdb != null && message.hasOwnProperty("respectPdb"))
                            if (typeof message.respectPdb !== "boolean")
                                return "respectPdb: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a RollbackNodePoolUpgradeRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.RollbackNodePoolUpgradeRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.RollbackNodePoolUpgradeRequest} RollbackNodePoolUpgradeRequest
                     */
                    RollbackNodePoolUpgradeRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.RollbackNodePoolUpgradeRequest)
                            return object;
                        var message = new $root.google.container.v1.RollbackNodePoolUpgradeRequest();
                        if (object.projectId != null)
                            message.projectId = String(object.projectId);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.clusterId != null)
                            message.clusterId = String(object.clusterId);
                        if (object.nodePoolId != null)
                            message.nodePoolId = String(object.nodePoolId);
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.respectPdb != null)
                            message.respectPdb = Boolean(object.respectPdb);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a RollbackNodePoolUpgradeRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.RollbackNodePoolUpgradeRequest
                     * @static
                     * @param {google.container.v1.RollbackNodePoolUpgradeRequest} message RollbackNodePoolUpgradeRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    RollbackNodePoolUpgradeRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.projectId = "";
                            object.zone = "";
                            object.clusterId = "";
                            object.nodePoolId = "";
                            object.name = "";
                            object.respectPdb = false;
                        }
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            object.projectId = message.projectId;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            object.clusterId = message.clusterId;
                        if (message.nodePoolId != null && message.hasOwnProperty("nodePoolId"))
                            object.nodePoolId = message.nodePoolId;
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.respectPdb != null && message.hasOwnProperty("respectPdb"))
                            object.respectPdb = message.respectPdb;
                        return object;
                    };
    
                    /**
                     * Converts this RollbackNodePoolUpgradeRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.RollbackNodePoolUpgradeRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    RollbackNodePoolUpgradeRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for RollbackNodePoolUpgradeRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.RollbackNodePoolUpgradeRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    RollbackNodePoolUpgradeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.RollbackNodePoolUpgradeRequest";
                    };
    
                    return RollbackNodePoolUpgradeRequest;
                })();
    
                v1.ListNodePoolsResponse = (function() {
    
                    /**
                     * Properties of a ListNodePoolsResponse.
                     * @memberof google.container.v1
                     * @interface IListNodePoolsResponse
                     * @property {Array.<google.container.v1.INodePool>|null} [nodePools] ListNodePoolsResponse nodePools
                     */
    
                    /**
                     * Constructs a new ListNodePoolsResponse.
                     * @memberof google.container.v1
                     * @classdesc Represents a ListNodePoolsResponse.
                     * @implements IListNodePoolsResponse
                     * @constructor
                     * @param {google.container.v1.IListNodePoolsResponse=} [properties] Properties to set
                     */
                    function ListNodePoolsResponse(properties) {
                        this.nodePools = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListNodePoolsResponse nodePools.
                     * @member {Array.<google.container.v1.INodePool>} nodePools
                     * @memberof google.container.v1.ListNodePoolsResponse
                     * @instance
                     */
                    ListNodePoolsResponse.prototype.nodePools = $util.emptyArray;
    
                    /**
                     * Creates a new ListNodePoolsResponse instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.ListNodePoolsResponse
                     * @static
                     * @param {google.container.v1.IListNodePoolsResponse=} [properties] Properties to set
                     * @returns {google.container.v1.ListNodePoolsResponse} ListNodePoolsResponse instance
                     */
                    ListNodePoolsResponse.create = function create(properties) {
                        return new ListNodePoolsResponse(properties);
                    };
    
                    /**
                     * Encodes the specified ListNodePoolsResponse message. Does not implicitly {@link google.container.v1.ListNodePoolsResponse.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.ListNodePoolsResponse
                     * @static
                     * @param {google.container.v1.IListNodePoolsResponse} message ListNodePoolsResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListNodePoolsResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.nodePools != null && message.nodePools.length)
                            for (var i = 0; i < message.nodePools.length; ++i)
                                $root.google.container.v1.NodePool.encode(message.nodePools[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListNodePoolsResponse message, length delimited. Does not implicitly {@link google.container.v1.ListNodePoolsResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.ListNodePoolsResponse
                     * @static
                     * @param {google.container.v1.IListNodePoolsResponse} message ListNodePoolsResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListNodePoolsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListNodePoolsResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.ListNodePoolsResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.ListNodePoolsResponse} ListNodePoolsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListNodePoolsResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.ListNodePoolsResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.nodePools && message.nodePools.length))
                                        message.nodePools = [];
                                    message.nodePools.push($root.google.container.v1.NodePool.decode(reader, reader.uint32()));
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListNodePoolsResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.ListNodePoolsResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.ListNodePoolsResponse} ListNodePoolsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListNodePoolsResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListNodePoolsResponse message.
                     * @function verify
                     * @memberof google.container.v1.ListNodePoolsResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListNodePoolsResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.nodePools != null && message.hasOwnProperty("nodePools")) {
                            if (!Array.isArray(message.nodePools))
                                return "nodePools: array expected";
                            for (var i = 0; i < message.nodePools.length; ++i) {
                                var error = $root.google.container.v1.NodePool.verify(message.nodePools[i]);
                                if (error)
                                    return "nodePools." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a ListNodePoolsResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.ListNodePoolsResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.ListNodePoolsResponse} ListNodePoolsResponse
                     */
                    ListNodePoolsResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.ListNodePoolsResponse)
                            return object;
                        var message = new $root.google.container.v1.ListNodePoolsResponse();
                        if (object.nodePools) {
                            if (!Array.isArray(object.nodePools))
                                throw TypeError(".google.container.v1.ListNodePoolsResponse.nodePools: array expected");
                            message.nodePools = [];
                            for (var i = 0; i < object.nodePools.length; ++i) {
                                if (typeof object.nodePools[i] !== "object")
                                    throw TypeError(".google.container.v1.ListNodePoolsResponse.nodePools: object expected");
                                message.nodePools[i] = $root.google.container.v1.NodePool.fromObject(object.nodePools[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListNodePoolsResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.ListNodePoolsResponse
                     * @static
                     * @param {google.container.v1.ListNodePoolsResponse} message ListNodePoolsResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListNodePoolsResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.nodePools = [];
                        if (message.nodePools && message.nodePools.length) {
                            object.nodePools = [];
                            for (var j = 0; j < message.nodePools.length; ++j)
                                object.nodePools[j] = $root.google.container.v1.NodePool.toObject(message.nodePools[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this ListNodePoolsResponse to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.ListNodePoolsResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListNodePoolsResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListNodePoolsResponse
                     * @function getTypeUrl
                     * @memberof google.container.v1.ListNodePoolsResponse
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListNodePoolsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.ListNodePoolsResponse";
                    };
    
                    return ListNodePoolsResponse;
                })();
    
                v1.ClusterAutoscaling = (function() {
    
                    /**
                     * Properties of a ClusterAutoscaling.
                     * @memberof google.container.v1
                     * @interface IClusterAutoscaling
                     * @property {boolean|null} [enableNodeAutoprovisioning] ClusterAutoscaling enableNodeAutoprovisioning
                     * @property {Array.<google.container.v1.IResourceLimit>|null} [resourceLimits] ClusterAutoscaling resourceLimits
                     * @property {google.container.v1.ClusterAutoscaling.AutoscalingProfile|null} [autoscalingProfile] ClusterAutoscaling autoscalingProfile
                     * @property {google.container.v1.IAutoprovisioningNodePoolDefaults|null} [autoprovisioningNodePoolDefaults] ClusterAutoscaling autoprovisioningNodePoolDefaults
                     * @property {Array.<string>|null} [autoprovisioningLocations] ClusterAutoscaling autoprovisioningLocations
                     */
    
                    /**
                     * Constructs a new ClusterAutoscaling.
                     * @memberof google.container.v1
                     * @classdesc Represents a ClusterAutoscaling.
                     * @implements IClusterAutoscaling
                     * @constructor
                     * @param {google.container.v1.IClusterAutoscaling=} [properties] Properties to set
                     */
                    function ClusterAutoscaling(properties) {
                        this.resourceLimits = [];
                        this.autoprovisioningLocations = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ClusterAutoscaling enableNodeAutoprovisioning.
                     * @member {boolean} enableNodeAutoprovisioning
                     * @memberof google.container.v1.ClusterAutoscaling
                     * @instance
                     */
                    ClusterAutoscaling.prototype.enableNodeAutoprovisioning = false;
    
                    /**
                     * ClusterAutoscaling resourceLimits.
                     * @member {Array.<google.container.v1.IResourceLimit>} resourceLimits
                     * @memberof google.container.v1.ClusterAutoscaling
                     * @instance
                     */
                    ClusterAutoscaling.prototype.resourceLimits = $util.emptyArray;
    
                    /**
                     * ClusterAutoscaling autoscalingProfile.
                     * @member {google.container.v1.ClusterAutoscaling.AutoscalingProfile} autoscalingProfile
                     * @memberof google.container.v1.ClusterAutoscaling
                     * @instance
                     */
                    ClusterAutoscaling.prototype.autoscalingProfile = 0;
    
                    /**
                     * ClusterAutoscaling autoprovisioningNodePoolDefaults.
                     * @member {google.container.v1.IAutoprovisioningNodePoolDefaults|null|undefined} autoprovisioningNodePoolDefaults
                     * @memberof google.container.v1.ClusterAutoscaling
                     * @instance
                     */
                    ClusterAutoscaling.prototype.autoprovisioningNodePoolDefaults = null;
    
                    /**
                     * ClusterAutoscaling autoprovisioningLocations.
                     * @member {Array.<string>} autoprovisioningLocations
                     * @memberof google.container.v1.ClusterAutoscaling
                     * @instance
                     */
                    ClusterAutoscaling.prototype.autoprovisioningLocations = $util.emptyArray;
    
                    /**
                     * Creates a new ClusterAutoscaling instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.ClusterAutoscaling
                     * @static
                     * @param {google.container.v1.IClusterAutoscaling=} [properties] Properties to set
                     * @returns {google.container.v1.ClusterAutoscaling} ClusterAutoscaling instance
                     */
                    ClusterAutoscaling.create = function create(properties) {
                        return new ClusterAutoscaling(properties);
                    };
    
                    /**
                     * Encodes the specified ClusterAutoscaling message. Does not implicitly {@link google.container.v1.ClusterAutoscaling.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.ClusterAutoscaling
                     * @static
                     * @param {google.container.v1.IClusterAutoscaling} message ClusterAutoscaling message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ClusterAutoscaling.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.enableNodeAutoprovisioning != null && Object.hasOwnProperty.call(message, "enableNodeAutoprovisioning"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enableNodeAutoprovisioning);
                        if (message.resourceLimits != null && message.resourceLimits.length)
                            for (var i = 0; i < message.resourceLimits.length; ++i)
                                $root.google.container.v1.ResourceLimit.encode(message.resourceLimits[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.autoscalingProfile != null && Object.hasOwnProperty.call(message, "autoscalingProfile"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.autoscalingProfile);
                        if (message.autoprovisioningNodePoolDefaults != null && Object.hasOwnProperty.call(message, "autoprovisioningNodePoolDefaults"))
                            $root.google.container.v1.AutoprovisioningNodePoolDefaults.encode(message.autoprovisioningNodePoolDefaults, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.autoprovisioningLocations != null && message.autoprovisioningLocations.length)
                            for (var i = 0; i < message.autoprovisioningLocations.length; ++i)
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.autoprovisioningLocations[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ClusterAutoscaling message, length delimited. Does not implicitly {@link google.container.v1.ClusterAutoscaling.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.ClusterAutoscaling
                     * @static
                     * @param {google.container.v1.IClusterAutoscaling} message ClusterAutoscaling message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ClusterAutoscaling.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ClusterAutoscaling message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.ClusterAutoscaling
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.ClusterAutoscaling} ClusterAutoscaling
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ClusterAutoscaling.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.ClusterAutoscaling();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.enableNodeAutoprovisioning = reader.bool();
                                    break;
                                }
                            case 2: {
                                    if (!(message.resourceLimits && message.resourceLimits.length))
                                        message.resourceLimits = [];
                                    message.resourceLimits.push($root.google.container.v1.ResourceLimit.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 3: {
                                    message.autoscalingProfile = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.autoprovisioningNodePoolDefaults = $root.google.container.v1.AutoprovisioningNodePoolDefaults.decode(reader, reader.uint32());
                                    break;
                                }
                            case 5: {
                                    if (!(message.autoprovisioningLocations && message.autoprovisioningLocations.length))
                                        message.autoprovisioningLocations = [];
                                    message.autoprovisioningLocations.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ClusterAutoscaling message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.ClusterAutoscaling
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.ClusterAutoscaling} ClusterAutoscaling
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ClusterAutoscaling.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ClusterAutoscaling message.
                     * @function verify
                     * @memberof google.container.v1.ClusterAutoscaling
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ClusterAutoscaling.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.enableNodeAutoprovisioning != null && message.hasOwnProperty("enableNodeAutoprovisioning"))
                            if (typeof message.enableNodeAutoprovisioning !== "boolean")
                                return "enableNodeAutoprovisioning: boolean expected";
                        if (message.resourceLimits != null && message.hasOwnProperty("resourceLimits")) {
                            if (!Array.isArray(message.resourceLimits))
                                return "resourceLimits: array expected";
                            for (var i = 0; i < message.resourceLimits.length; ++i) {
                                var error = $root.google.container.v1.ResourceLimit.verify(message.resourceLimits[i]);
                                if (error)
                                    return "resourceLimits." + error;
                            }
                        }
                        if (message.autoscalingProfile != null && message.hasOwnProperty("autoscalingProfile"))
                            switch (message.autoscalingProfile) {
                            default:
                                return "autoscalingProfile: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        if (message.autoprovisioningNodePoolDefaults != null && message.hasOwnProperty("autoprovisioningNodePoolDefaults")) {
                            var error = $root.google.container.v1.AutoprovisioningNodePoolDefaults.verify(message.autoprovisioningNodePoolDefaults);
                            if (error)
                                return "autoprovisioningNodePoolDefaults." + error;
                        }
                        if (message.autoprovisioningLocations != null && message.hasOwnProperty("autoprovisioningLocations")) {
                            if (!Array.isArray(message.autoprovisioningLocations))
                                return "autoprovisioningLocations: array expected";
                            for (var i = 0; i < message.autoprovisioningLocations.length; ++i)
                                if (!$util.isString(message.autoprovisioningLocations[i]))
                                    return "autoprovisioningLocations: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a ClusterAutoscaling message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.ClusterAutoscaling
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.ClusterAutoscaling} ClusterAutoscaling
                     */
                    ClusterAutoscaling.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.ClusterAutoscaling)
                            return object;
                        var message = new $root.google.container.v1.ClusterAutoscaling();
                        if (object.enableNodeAutoprovisioning != null)
                            message.enableNodeAutoprovisioning = Boolean(object.enableNodeAutoprovisioning);
                        if (object.resourceLimits) {
                            if (!Array.isArray(object.resourceLimits))
                                throw TypeError(".google.container.v1.ClusterAutoscaling.resourceLimits: array expected");
                            message.resourceLimits = [];
                            for (var i = 0; i < object.resourceLimits.length; ++i) {
                                if (typeof object.resourceLimits[i] !== "object")
                                    throw TypeError(".google.container.v1.ClusterAutoscaling.resourceLimits: object expected");
                                message.resourceLimits[i] = $root.google.container.v1.ResourceLimit.fromObject(object.resourceLimits[i]);
                            }
                        }
                        switch (object.autoscalingProfile) {
                        default:
                            if (typeof object.autoscalingProfile === "number") {
                                message.autoscalingProfile = object.autoscalingProfile;
                                break;
                            }
                            break;
                        case "PROFILE_UNSPECIFIED":
                        case 0:
                            message.autoscalingProfile = 0;
                            break;
                        case "OPTIMIZE_UTILIZATION":
                        case 1:
                            message.autoscalingProfile = 1;
                            break;
                        case "BALANCED":
                        case 2:
                            message.autoscalingProfile = 2;
                            break;
                        }
                        if (object.autoprovisioningNodePoolDefaults != null) {
                            if (typeof object.autoprovisioningNodePoolDefaults !== "object")
                                throw TypeError(".google.container.v1.ClusterAutoscaling.autoprovisioningNodePoolDefaults: object expected");
                            message.autoprovisioningNodePoolDefaults = $root.google.container.v1.AutoprovisioningNodePoolDefaults.fromObject(object.autoprovisioningNodePoolDefaults);
                        }
                        if (object.autoprovisioningLocations) {
                            if (!Array.isArray(object.autoprovisioningLocations))
                                throw TypeError(".google.container.v1.ClusterAutoscaling.autoprovisioningLocations: array expected");
                            message.autoprovisioningLocations = [];
                            for (var i = 0; i < object.autoprovisioningLocations.length; ++i)
                                message.autoprovisioningLocations[i] = String(object.autoprovisioningLocations[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ClusterAutoscaling message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.ClusterAutoscaling
                     * @static
                     * @param {google.container.v1.ClusterAutoscaling} message ClusterAutoscaling
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ClusterAutoscaling.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.resourceLimits = [];
                            object.autoprovisioningLocations = [];
                        }
                        if (options.defaults) {
                            object.enableNodeAutoprovisioning = false;
                            object.autoscalingProfile = options.enums === String ? "PROFILE_UNSPECIFIED" : 0;
                            object.autoprovisioningNodePoolDefaults = null;
                        }
                        if (message.enableNodeAutoprovisioning != null && message.hasOwnProperty("enableNodeAutoprovisioning"))
                            object.enableNodeAutoprovisioning = message.enableNodeAutoprovisioning;
                        if (message.resourceLimits && message.resourceLimits.length) {
                            object.resourceLimits = [];
                            for (var j = 0; j < message.resourceLimits.length; ++j)
                                object.resourceLimits[j] = $root.google.container.v1.ResourceLimit.toObject(message.resourceLimits[j], options);
                        }
                        if (message.autoscalingProfile != null && message.hasOwnProperty("autoscalingProfile"))
                            object.autoscalingProfile = options.enums === String ? $root.google.container.v1.ClusterAutoscaling.AutoscalingProfile[message.autoscalingProfile] === undefined ? message.autoscalingProfile : $root.google.container.v1.ClusterAutoscaling.AutoscalingProfile[message.autoscalingProfile] : message.autoscalingProfile;
                        if (message.autoprovisioningNodePoolDefaults != null && message.hasOwnProperty("autoprovisioningNodePoolDefaults"))
                            object.autoprovisioningNodePoolDefaults = $root.google.container.v1.AutoprovisioningNodePoolDefaults.toObject(message.autoprovisioningNodePoolDefaults, options);
                        if (message.autoprovisioningLocations && message.autoprovisioningLocations.length) {
                            object.autoprovisioningLocations = [];
                            for (var j = 0; j < message.autoprovisioningLocations.length; ++j)
                                object.autoprovisioningLocations[j] = message.autoprovisioningLocations[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this ClusterAutoscaling to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.ClusterAutoscaling
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ClusterAutoscaling.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ClusterAutoscaling
                     * @function getTypeUrl
                     * @memberof google.container.v1.ClusterAutoscaling
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ClusterAutoscaling.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.ClusterAutoscaling";
                    };
    
                    /**
                     * AutoscalingProfile enum.
                     * @name google.container.v1.ClusterAutoscaling.AutoscalingProfile
                     * @enum {number}
                     * @property {number} PROFILE_UNSPECIFIED=0 PROFILE_UNSPECIFIED value
                     * @property {number} OPTIMIZE_UTILIZATION=1 OPTIMIZE_UTILIZATION value
                     * @property {number} BALANCED=2 BALANCED value
                     */
                    ClusterAutoscaling.AutoscalingProfile = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "PROFILE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "OPTIMIZE_UTILIZATION"] = 1;
                        values[valuesById[2] = "BALANCED"] = 2;
                        return values;
                    })();
    
                    return ClusterAutoscaling;
                })();
    
                v1.AutoprovisioningNodePoolDefaults = (function() {
    
                    /**
                     * Properties of an AutoprovisioningNodePoolDefaults.
                     * @memberof google.container.v1
                     * @interface IAutoprovisioningNodePoolDefaults
                     * @property {Array.<string>|null} [oauthScopes] AutoprovisioningNodePoolDefaults oauthScopes
                     * @property {string|null} [serviceAccount] AutoprovisioningNodePoolDefaults serviceAccount
                     * @property {google.container.v1.NodePool.IUpgradeSettings|null} [upgradeSettings] AutoprovisioningNodePoolDefaults upgradeSettings
                     * @property {google.container.v1.INodeManagement|null} [management] AutoprovisioningNodePoolDefaults management
                     * @property {string|null} [minCpuPlatform] AutoprovisioningNodePoolDefaults minCpuPlatform
                     * @property {number|null} [diskSizeGb] AutoprovisioningNodePoolDefaults diskSizeGb
                     * @property {string|null} [diskType] AutoprovisioningNodePoolDefaults diskType
                     * @property {google.container.v1.IShieldedInstanceConfig|null} [shieldedInstanceConfig] AutoprovisioningNodePoolDefaults shieldedInstanceConfig
                     * @property {string|null} [bootDiskKmsKey] AutoprovisioningNodePoolDefaults bootDiskKmsKey
                     * @property {string|null} [imageType] AutoprovisioningNodePoolDefaults imageType
                     */
    
                    /**
                     * Constructs a new AutoprovisioningNodePoolDefaults.
                     * @memberof google.container.v1
                     * @classdesc Represents an AutoprovisioningNodePoolDefaults.
                     * @implements IAutoprovisioningNodePoolDefaults
                     * @constructor
                     * @param {google.container.v1.IAutoprovisioningNodePoolDefaults=} [properties] Properties to set
                     */
                    function AutoprovisioningNodePoolDefaults(properties) {
                        this.oauthScopes = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * AutoprovisioningNodePoolDefaults oauthScopes.
                     * @member {Array.<string>} oauthScopes
                     * @memberof google.container.v1.AutoprovisioningNodePoolDefaults
                     * @instance
                     */
                    AutoprovisioningNodePoolDefaults.prototype.oauthScopes = $util.emptyArray;
    
                    /**
                     * AutoprovisioningNodePoolDefaults serviceAccount.
                     * @member {string} serviceAccount
                     * @memberof google.container.v1.AutoprovisioningNodePoolDefaults
                     * @instance
                     */
                    AutoprovisioningNodePoolDefaults.prototype.serviceAccount = "";
    
                    /**
                     * AutoprovisioningNodePoolDefaults upgradeSettings.
                     * @member {google.container.v1.NodePool.IUpgradeSettings|null|undefined} upgradeSettings
                     * @memberof google.container.v1.AutoprovisioningNodePoolDefaults
                     * @instance
                     */
                    AutoprovisioningNodePoolDefaults.prototype.upgradeSettings = null;
    
                    /**
                     * AutoprovisioningNodePoolDefaults management.
                     * @member {google.container.v1.INodeManagement|null|undefined} management
                     * @memberof google.container.v1.AutoprovisioningNodePoolDefaults
                     * @instance
                     */
                    AutoprovisioningNodePoolDefaults.prototype.management = null;
    
                    /**
                     * AutoprovisioningNodePoolDefaults minCpuPlatform.
                     * @member {string} minCpuPlatform
                     * @memberof google.container.v1.AutoprovisioningNodePoolDefaults
                     * @instance
                     */
                    AutoprovisioningNodePoolDefaults.prototype.minCpuPlatform = "";
    
                    /**
                     * AutoprovisioningNodePoolDefaults diskSizeGb.
                     * @member {number} diskSizeGb
                     * @memberof google.container.v1.AutoprovisioningNodePoolDefaults
                     * @instance
                     */
                    AutoprovisioningNodePoolDefaults.prototype.diskSizeGb = 0;
    
                    /**
                     * AutoprovisioningNodePoolDefaults diskType.
                     * @member {string} diskType
                     * @memberof google.container.v1.AutoprovisioningNodePoolDefaults
                     * @instance
                     */
                    AutoprovisioningNodePoolDefaults.prototype.diskType = "";
    
                    /**
                     * AutoprovisioningNodePoolDefaults shieldedInstanceConfig.
                     * @member {google.container.v1.IShieldedInstanceConfig|null|undefined} shieldedInstanceConfig
                     * @memberof google.container.v1.AutoprovisioningNodePoolDefaults
                     * @instance
                     */
                    AutoprovisioningNodePoolDefaults.prototype.shieldedInstanceConfig = null;
    
                    /**
                     * AutoprovisioningNodePoolDefaults bootDiskKmsKey.
                     * @member {string} bootDiskKmsKey
                     * @memberof google.container.v1.AutoprovisioningNodePoolDefaults
                     * @instance
                     */
                    AutoprovisioningNodePoolDefaults.prototype.bootDiskKmsKey = "";
    
                    /**
                     * AutoprovisioningNodePoolDefaults imageType.
                     * @member {string} imageType
                     * @memberof google.container.v1.AutoprovisioningNodePoolDefaults
                     * @instance
                     */
                    AutoprovisioningNodePoolDefaults.prototype.imageType = "";
    
                    /**
                     * Creates a new AutoprovisioningNodePoolDefaults instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.AutoprovisioningNodePoolDefaults
                     * @static
                     * @param {google.container.v1.IAutoprovisioningNodePoolDefaults=} [properties] Properties to set
                     * @returns {google.container.v1.AutoprovisioningNodePoolDefaults} AutoprovisioningNodePoolDefaults instance
                     */
                    AutoprovisioningNodePoolDefaults.create = function create(properties) {
                        return new AutoprovisioningNodePoolDefaults(properties);
                    };
    
                    /**
                     * Encodes the specified AutoprovisioningNodePoolDefaults message. Does not implicitly {@link google.container.v1.AutoprovisioningNodePoolDefaults.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.AutoprovisioningNodePoolDefaults
                     * @static
                     * @param {google.container.v1.IAutoprovisioningNodePoolDefaults} message AutoprovisioningNodePoolDefaults message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AutoprovisioningNodePoolDefaults.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.oauthScopes != null && message.oauthScopes.length)
                            for (var i = 0; i < message.oauthScopes.length; ++i)
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.oauthScopes[i]);
                        if (message.serviceAccount != null && Object.hasOwnProperty.call(message, "serviceAccount"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.serviceAccount);
                        if (message.upgradeSettings != null && Object.hasOwnProperty.call(message, "upgradeSettings"))
                            $root.google.container.v1.NodePool.UpgradeSettings.encode(message.upgradeSettings, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.management != null && Object.hasOwnProperty.call(message, "management"))
                            $root.google.container.v1.NodeManagement.encode(message.management, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.minCpuPlatform != null && Object.hasOwnProperty.call(message, "minCpuPlatform"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.minCpuPlatform);
                        if (message.diskSizeGb != null && Object.hasOwnProperty.call(message, "diskSizeGb"))
                            writer.uint32(/* id 6, wireType 0 =*/48).int32(message.diskSizeGb);
                        if (message.diskType != null && Object.hasOwnProperty.call(message, "diskType"))
                            writer.uint32(/* id 7, wireType 2 =*/58).string(message.diskType);
                        if (message.shieldedInstanceConfig != null && Object.hasOwnProperty.call(message, "shieldedInstanceConfig"))
                            $root.google.container.v1.ShieldedInstanceConfig.encode(message.shieldedInstanceConfig, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                        if (message.bootDiskKmsKey != null && Object.hasOwnProperty.call(message, "bootDiskKmsKey"))
                            writer.uint32(/* id 9, wireType 2 =*/74).string(message.bootDiskKmsKey);
                        if (message.imageType != null && Object.hasOwnProperty.call(message, "imageType"))
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.imageType);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified AutoprovisioningNodePoolDefaults message, length delimited. Does not implicitly {@link google.container.v1.AutoprovisioningNodePoolDefaults.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.AutoprovisioningNodePoolDefaults
                     * @static
                     * @param {google.container.v1.IAutoprovisioningNodePoolDefaults} message AutoprovisioningNodePoolDefaults message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AutoprovisioningNodePoolDefaults.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an AutoprovisioningNodePoolDefaults message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.AutoprovisioningNodePoolDefaults
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.AutoprovisioningNodePoolDefaults} AutoprovisioningNodePoolDefaults
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AutoprovisioningNodePoolDefaults.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.AutoprovisioningNodePoolDefaults();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.oauthScopes && message.oauthScopes.length))
                                        message.oauthScopes = [];
                                    message.oauthScopes.push(reader.string());
                                    break;
                                }
                            case 2: {
                                    message.serviceAccount = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.upgradeSettings = $root.google.container.v1.NodePool.UpgradeSettings.decode(reader, reader.uint32());
                                    break;
                                }
                            case 4: {
                                    message.management = $root.google.container.v1.NodeManagement.decode(reader, reader.uint32());
                                    break;
                                }
                            case 5: {
                                    message.minCpuPlatform = reader.string();
                                    break;
                                }
                            case 6: {
                                    message.diskSizeGb = reader.int32();
                                    break;
                                }
                            case 7: {
                                    message.diskType = reader.string();
                                    break;
                                }
                            case 8: {
                                    message.shieldedInstanceConfig = $root.google.container.v1.ShieldedInstanceConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 9: {
                                    message.bootDiskKmsKey = reader.string();
                                    break;
                                }
                            case 10: {
                                    message.imageType = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an AutoprovisioningNodePoolDefaults message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.AutoprovisioningNodePoolDefaults
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.AutoprovisioningNodePoolDefaults} AutoprovisioningNodePoolDefaults
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AutoprovisioningNodePoolDefaults.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an AutoprovisioningNodePoolDefaults message.
                     * @function verify
                     * @memberof google.container.v1.AutoprovisioningNodePoolDefaults
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    AutoprovisioningNodePoolDefaults.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.oauthScopes != null && message.hasOwnProperty("oauthScopes")) {
                            if (!Array.isArray(message.oauthScopes))
                                return "oauthScopes: array expected";
                            for (var i = 0; i < message.oauthScopes.length; ++i)
                                if (!$util.isString(message.oauthScopes[i]))
                                    return "oauthScopes: string[] expected";
                        }
                        if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                            if (!$util.isString(message.serviceAccount))
                                return "serviceAccount: string expected";
                        if (message.upgradeSettings != null && message.hasOwnProperty("upgradeSettings")) {
                            var error = $root.google.container.v1.NodePool.UpgradeSettings.verify(message.upgradeSettings);
                            if (error)
                                return "upgradeSettings." + error;
                        }
                        if (message.management != null && message.hasOwnProperty("management")) {
                            var error = $root.google.container.v1.NodeManagement.verify(message.management);
                            if (error)
                                return "management." + error;
                        }
                        if (message.minCpuPlatform != null && message.hasOwnProperty("minCpuPlatform"))
                            if (!$util.isString(message.minCpuPlatform))
                                return "minCpuPlatform: string expected";
                        if (message.diskSizeGb != null && message.hasOwnProperty("diskSizeGb"))
                            if (!$util.isInteger(message.diskSizeGb))
                                return "diskSizeGb: integer expected";
                        if (message.diskType != null && message.hasOwnProperty("diskType"))
                            if (!$util.isString(message.diskType))
                                return "diskType: string expected";
                        if (message.shieldedInstanceConfig != null && message.hasOwnProperty("shieldedInstanceConfig")) {
                            var error = $root.google.container.v1.ShieldedInstanceConfig.verify(message.shieldedInstanceConfig);
                            if (error)
                                return "shieldedInstanceConfig." + error;
                        }
                        if (message.bootDiskKmsKey != null && message.hasOwnProperty("bootDiskKmsKey"))
                            if (!$util.isString(message.bootDiskKmsKey))
                                return "bootDiskKmsKey: string expected";
                        if (message.imageType != null && message.hasOwnProperty("imageType"))
                            if (!$util.isString(message.imageType))
                                return "imageType: string expected";
                        return null;
                    };
    
                    /**
                     * Creates an AutoprovisioningNodePoolDefaults message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.AutoprovisioningNodePoolDefaults
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.AutoprovisioningNodePoolDefaults} AutoprovisioningNodePoolDefaults
                     */
                    AutoprovisioningNodePoolDefaults.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.AutoprovisioningNodePoolDefaults)
                            return object;
                        var message = new $root.google.container.v1.AutoprovisioningNodePoolDefaults();
                        if (object.oauthScopes) {
                            if (!Array.isArray(object.oauthScopes))
                                throw TypeError(".google.container.v1.AutoprovisioningNodePoolDefaults.oauthScopes: array expected");
                            message.oauthScopes = [];
                            for (var i = 0; i < object.oauthScopes.length; ++i)
                                message.oauthScopes[i] = String(object.oauthScopes[i]);
                        }
                        if (object.serviceAccount != null)
                            message.serviceAccount = String(object.serviceAccount);
                        if (object.upgradeSettings != null) {
                            if (typeof object.upgradeSettings !== "object")
                                throw TypeError(".google.container.v1.AutoprovisioningNodePoolDefaults.upgradeSettings: object expected");
                            message.upgradeSettings = $root.google.container.v1.NodePool.UpgradeSettings.fromObject(object.upgradeSettings);
                        }
                        if (object.management != null) {
                            if (typeof object.management !== "object")
                                throw TypeError(".google.container.v1.AutoprovisioningNodePoolDefaults.management: object expected");
                            message.management = $root.google.container.v1.NodeManagement.fromObject(object.management);
                        }
                        if (object.minCpuPlatform != null)
                            message.minCpuPlatform = String(object.minCpuPlatform);
                        if (object.diskSizeGb != null)
                            message.diskSizeGb = object.diskSizeGb | 0;
                        if (object.diskType != null)
                            message.diskType = String(object.diskType);
                        if (object.shieldedInstanceConfig != null) {
                            if (typeof object.shieldedInstanceConfig !== "object")
                                throw TypeError(".google.container.v1.AutoprovisioningNodePoolDefaults.shieldedInstanceConfig: object expected");
                            message.shieldedInstanceConfig = $root.google.container.v1.ShieldedInstanceConfig.fromObject(object.shieldedInstanceConfig);
                        }
                        if (object.bootDiskKmsKey != null)
                            message.bootDiskKmsKey = String(object.bootDiskKmsKey);
                        if (object.imageType != null)
                            message.imageType = String(object.imageType);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an AutoprovisioningNodePoolDefaults message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.AutoprovisioningNodePoolDefaults
                     * @static
                     * @param {google.container.v1.AutoprovisioningNodePoolDefaults} message AutoprovisioningNodePoolDefaults
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    AutoprovisioningNodePoolDefaults.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.oauthScopes = [];
                        if (options.defaults) {
                            object.serviceAccount = "";
                            object.upgradeSettings = null;
                            object.management = null;
                            object.minCpuPlatform = "";
                            object.diskSizeGb = 0;
                            object.diskType = "";
                            object.shieldedInstanceConfig = null;
                            object.bootDiskKmsKey = "";
                            object.imageType = "";
                        }
                        if (message.oauthScopes && message.oauthScopes.length) {
                            object.oauthScopes = [];
                            for (var j = 0; j < message.oauthScopes.length; ++j)
                                object.oauthScopes[j] = message.oauthScopes[j];
                        }
                        if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                            object.serviceAccount = message.serviceAccount;
                        if (message.upgradeSettings != null && message.hasOwnProperty("upgradeSettings"))
                            object.upgradeSettings = $root.google.container.v1.NodePool.UpgradeSettings.toObject(message.upgradeSettings, options);
                        if (message.management != null && message.hasOwnProperty("management"))
                            object.management = $root.google.container.v1.NodeManagement.toObject(message.management, options);
                        if (message.minCpuPlatform != null && message.hasOwnProperty("minCpuPlatform"))
                            object.minCpuPlatform = message.minCpuPlatform;
                        if (message.diskSizeGb != null && message.hasOwnProperty("diskSizeGb"))
                            object.diskSizeGb = message.diskSizeGb;
                        if (message.diskType != null && message.hasOwnProperty("diskType"))
                            object.diskType = message.diskType;
                        if (message.shieldedInstanceConfig != null && message.hasOwnProperty("shieldedInstanceConfig"))
                            object.shieldedInstanceConfig = $root.google.container.v1.ShieldedInstanceConfig.toObject(message.shieldedInstanceConfig, options);
                        if (message.bootDiskKmsKey != null && message.hasOwnProperty("bootDiskKmsKey"))
                            object.bootDiskKmsKey = message.bootDiskKmsKey;
                        if (message.imageType != null && message.hasOwnProperty("imageType"))
                            object.imageType = message.imageType;
                        return object;
                    };
    
                    /**
                     * Converts this AutoprovisioningNodePoolDefaults to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.AutoprovisioningNodePoolDefaults
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    AutoprovisioningNodePoolDefaults.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for AutoprovisioningNodePoolDefaults
                     * @function getTypeUrl
                     * @memberof google.container.v1.AutoprovisioningNodePoolDefaults
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    AutoprovisioningNodePoolDefaults.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.AutoprovisioningNodePoolDefaults";
                    };
    
                    return AutoprovisioningNodePoolDefaults;
                })();
    
                v1.ResourceLimit = (function() {
    
                    /**
                     * Properties of a ResourceLimit.
                     * @memberof google.container.v1
                     * @interface IResourceLimit
                     * @property {string|null} [resourceType] ResourceLimit resourceType
                     * @property {number|Long|null} [minimum] ResourceLimit minimum
                     * @property {number|Long|null} [maximum] ResourceLimit maximum
                     */
    
                    /**
                     * Constructs a new ResourceLimit.
                     * @memberof google.container.v1
                     * @classdesc Represents a ResourceLimit.
                     * @implements IResourceLimit
                     * @constructor
                     * @param {google.container.v1.IResourceLimit=} [properties] Properties to set
                     */
                    function ResourceLimit(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ResourceLimit resourceType.
                     * @member {string} resourceType
                     * @memberof google.container.v1.ResourceLimit
                     * @instance
                     */
                    ResourceLimit.prototype.resourceType = "";
    
                    /**
                     * ResourceLimit minimum.
                     * @member {number|Long} minimum
                     * @memberof google.container.v1.ResourceLimit
                     * @instance
                     */
                    ResourceLimit.prototype.minimum = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                    /**
                     * ResourceLimit maximum.
                     * @member {number|Long} maximum
                     * @memberof google.container.v1.ResourceLimit
                     * @instance
                     */
                    ResourceLimit.prototype.maximum = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                    /**
                     * Creates a new ResourceLimit instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.ResourceLimit
                     * @static
                     * @param {google.container.v1.IResourceLimit=} [properties] Properties to set
                     * @returns {google.container.v1.ResourceLimit} ResourceLimit instance
                     */
                    ResourceLimit.create = function create(properties) {
                        return new ResourceLimit(properties);
                    };
    
                    /**
                     * Encodes the specified ResourceLimit message. Does not implicitly {@link google.container.v1.ResourceLimit.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.ResourceLimit
                     * @static
                     * @param {google.container.v1.IResourceLimit} message ResourceLimit message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ResourceLimit.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.resourceType != null && Object.hasOwnProperty.call(message, "resourceType"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.resourceType);
                        if (message.minimum != null && Object.hasOwnProperty.call(message, "minimum"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int64(message.minimum);
                        if (message.maximum != null && Object.hasOwnProperty.call(message, "maximum"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int64(message.maximum);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ResourceLimit message, length delimited. Does not implicitly {@link google.container.v1.ResourceLimit.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.ResourceLimit
                     * @static
                     * @param {google.container.v1.IResourceLimit} message ResourceLimit message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ResourceLimit.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ResourceLimit message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.ResourceLimit
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.ResourceLimit} ResourceLimit
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ResourceLimit.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.ResourceLimit();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.resourceType = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.minimum = reader.int64();
                                    break;
                                }
                            case 3: {
                                    message.maximum = reader.int64();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ResourceLimit message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.ResourceLimit
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.ResourceLimit} ResourceLimit
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ResourceLimit.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ResourceLimit message.
                     * @function verify
                     * @memberof google.container.v1.ResourceLimit
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ResourceLimit.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.resourceType != null && message.hasOwnProperty("resourceType"))
                            if (!$util.isString(message.resourceType))
                                return "resourceType: string expected";
                        if (message.minimum != null && message.hasOwnProperty("minimum"))
                            if (!$util.isInteger(message.minimum) && !(message.minimum && $util.isInteger(message.minimum.low) && $util.isInteger(message.minimum.high)))
                                return "minimum: integer|Long expected";
                        if (message.maximum != null && message.hasOwnProperty("maximum"))
                            if (!$util.isInteger(message.maximum) && !(message.maximum && $util.isInteger(message.maximum.low) && $util.isInteger(message.maximum.high)))
                                return "maximum: integer|Long expected";
                        return null;
                    };
    
                    /**
                     * Creates a ResourceLimit message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.ResourceLimit
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.ResourceLimit} ResourceLimit
                     */
                    ResourceLimit.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.ResourceLimit)
                            return object;
                        var message = new $root.google.container.v1.ResourceLimit();
                        if (object.resourceType != null)
                            message.resourceType = String(object.resourceType);
                        if (object.minimum != null)
                            if ($util.Long)
                                (message.minimum = $util.Long.fromValue(object.minimum)).unsigned = false;
                            else if (typeof object.minimum === "string")
                                message.minimum = parseInt(object.minimum, 10);
                            else if (typeof object.minimum === "number")
                                message.minimum = object.minimum;
                            else if (typeof object.minimum === "object")
                                message.minimum = new $util.LongBits(object.minimum.low >>> 0, object.minimum.high >>> 0).toNumber();
                        if (object.maximum != null)
                            if ($util.Long)
                                (message.maximum = $util.Long.fromValue(object.maximum)).unsigned = false;
                            else if (typeof object.maximum === "string")
                                message.maximum = parseInt(object.maximum, 10);
                            else if (typeof object.maximum === "number")
                                message.maximum = object.maximum;
                            else if (typeof object.maximum === "object")
                                message.maximum = new $util.LongBits(object.maximum.low >>> 0, object.maximum.high >>> 0).toNumber();
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ResourceLimit message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.ResourceLimit
                     * @static
                     * @param {google.container.v1.ResourceLimit} message ResourceLimit
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ResourceLimit.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.resourceType = "";
                            if ($util.Long) {
                                var long = new $util.Long(0, 0, false);
                                object.minimum = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                            } else
                                object.minimum = options.longs === String ? "0" : 0;
                            if ($util.Long) {
                                var long = new $util.Long(0, 0, false);
                                object.maximum = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                            } else
                                object.maximum = options.longs === String ? "0" : 0;
                        }
                        if (message.resourceType != null && message.hasOwnProperty("resourceType"))
                            object.resourceType = message.resourceType;
                        if (message.minimum != null && message.hasOwnProperty("minimum"))
                            if (typeof message.minimum === "number")
                                object.minimum = options.longs === String ? String(message.minimum) : message.minimum;
                            else
                                object.minimum = options.longs === String ? $util.Long.prototype.toString.call(message.minimum) : options.longs === Number ? new $util.LongBits(message.minimum.low >>> 0, message.minimum.high >>> 0).toNumber() : message.minimum;
                        if (message.maximum != null && message.hasOwnProperty("maximum"))
                            if (typeof message.maximum === "number")
                                object.maximum = options.longs === String ? String(message.maximum) : message.maximum;
                            else
                                object.maximum = options.longs === String ? $util.Long.prototype.toString.call(message.maximum) : options.longs === Number ? new $util.LongBits(message.maximum.low >>> 0, message.maximum.high >>> 0).toNumber() : message.maximum;
                        return object;
                    };
    
                    /**
                     * Converts this ResourceLimit to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.ResourceLimit
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ResourceLimit.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ResourceLimit
                     * @function getTypeUrl
                     * @memberof google.container.v1.ResourceLimit
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ResourceLimit.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.ResourceLimit";
                    };
    
                    return ResourceLimit;
                })();
    
                v1.NodePoolAutoscaling = (function() {
    
                    /**
                     * Properties of a NodePoolAutoscaling.
                     * @memberof google.container.v1
                     * @interface INodePoolAutoscaling
                     * @property {boolean|null} [enabled] NodePoolAutoscaling enabled
                     * @property {number|null} [minNodeCount] NodePoolAutoscaling minNodeCount
                     * @property {number|null} [maxNodeCount] NodePoolAutoscaling maxNodeCount
                     * @property {boolean|null} [autoprovisioned] NodePoolAutoscaling autoprovisioned
                     * @property {google.container.v1.NodePoolAutoscaling.LocationPolicy|null} [locationPolicy] NodePoolAutoscaling locationPolicy
                     * @property {number|null} [totalMinNodeCount] NodePoolAutoscaling totalMinNodeCount
                     * @property {number|null} [totalMaxNodeCount] NodePoolAutoscaling totalMaxNodeCount
                     */
    
                    /**
                     * Constructs a new NodePoolAutoscaling.
                     * @memberof google.container.v1
                     * @classdesc Represents a NodePoolAutoscaling.
                     * @implements INodePoolAutoscaling
                     * @constructor
                     * @param {google.container.v1.INodePoolAutoscaling=} [properties] Properties to set
                     */
                    function NodePoolAutoscaling(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NodePoolAutoscaling enabled.
                     * @member {boolean} enabled
                     * @memberof google.container.v1.NodePoolAutoscaling
                     * @instance
                     */
                    NodePoolAutoscaling.prototype.enabled = false;
    
                    /**
                     * NodePoolAutoscaling minNodeCount.
                     * @member {number} minNodeCount
                     * @memberof google.container.v1.NodePoolAutoscaling
                     * @instance
                     */
                    NodePoolAutoscaling.prototype.minNodeCount = 0;
    
                    /**
                     * NodePoolAutoscaling maxNodeCount.
                     * @member {number} maxNodeCount
                     * @memberof google.container.v1.NodePoolAutoscaling
                     * @instance
                     */
                    NodePoolAutoscaling.prototype.maxNodeCount = 0;
    
                    /**
                     * NodePoolAutoscaling autoprovisioned.
                     * @member {boolean} autoprovisioned
                     * @memberof google.container.v1.NodePoolAutoscaling
                     * @instance
                     */
                    NodePoolAutoscaling.prototype.autoprovisioned = false;
    
                    /**
                     * NodePoolAutoscaling locationPolicy.
                     * @member {google.container.v1.NodePoolAutoscaling.LocationPolicy} locationPolicy
                     * @memberof google.container.v1.NodePoolAutoscaling
                     * @instance
                     */
                    NodePoolAutoscaling.prototype.locationPolicy = 0;
    
                    /**
                     * NodePoolAutoscaling totalMinNodeCount.
                     * @member {number} totalMinNodeCount
                     * @memberof google.container.v1.NodePoolAutoscaling
                     * @instance
                     */
                    NodePoolAutoscaling.prototype.totalMinNodeCount = 0;
    
                    /**
                     * NodePoolAutoscaling totalMaxNodeCount.
                     * @member {number} totalMaxNodeCount
                     * @memberof google.container.v1.NodePoolAutoscaling
                     * @instance
                     */
                    NodePoolAutoscaling.prototype.totalMaxNodeCount = 0;
    
                    /**
                     * Creates a new NodePoolAutoscaling instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.NodePoolAutoscaling
                     * @static
                     * @param {google.container.v1.INodePoolAutoscaling=} [properties] Properties to set
                     * @returns {google.container.v1.NodePoolAutoscaling} NodePoolAutoscaling instance
                     */
                    NodePoolAutoscaling.create = function create(properties) {
                        return new NodePoolAutoscaling(properties);
                    };
    
                    /**
                     * Encodes the specified NodePoolAutoscaling message. Does not implicitly {@link google.container.v1.NodePoolAutoscaling.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.NodePoolAutoscaling
                     * @static
                     * @param {google.container.v1.INodePoolAutoscaling} message NodePoolAutoscaling message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NodePoolAutoscaling.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                        if (message.minNodeCount != null && Object.hasOwnProperty.call(message, "minNodeCount"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.minNodeCount);
                        if (message.maxNodeCount != null && Object.hasOwnProperty.call(message, "maxNodeCount"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.maxNodeCount);
                        if (message.autoprovisioned != null && Object.hasOwnProperty.call(message, "autoprovisioned"))
                            writer.uint32(/* id 4, wireType 0 =*/32).bool(message.autoprovisioned);
                        if (message.locationPolicy != null && Object.hasOwnProperty.call(message, "locationPolicy"))
                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.locationPolicy);
                        if (message.totalMinNodeCount != null && Object.hasOwnProperty.call(message, "totalMinNodeCount"))
                            writer.uint32(/* id 6, wireType 0 =*/48).int32(message.totalMinNodeCount);
                        if (message.totalMaxNodeCount != null && Object.hasOwnProperty.call(message, "totalMaxNodeCount"))
                            writer.uint32(/* id 7, wireType 0 =*/56).int32(message.totalMaxNodeCount);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NodePoolAutoscaling message, length delimited. Does not implicitly {@link google.container.v1.NodePoolAutoscaling.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.NodePoolAutoscaling
                     * @static
                     * @param {google.container.v1.INodePoolAutoscaling} message NodePoolAutoscaling message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NodePoolAutoscaling.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NodePoolAutoscaling message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.NodePoolAutoscaling
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.NodePoolAutoscaling} NodePoolAutoscaling
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NodePoolAutoscaling.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.NodePoolAutoscaling();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.enabled = reader.bool();
                                    break;
                                }
                            case 2: {
                                    message.minNodeCount = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.maxNodeCount = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.autoprovisioned = reader.bool();
                                    break;
                                }
                            case 5: {
                                    message.locationPolicy = reader.int32();
                                    break;
                                }
                            case 6: {
                                    message.totalMinNodeCount = reader.int32();
                                    break;
                                }
                            case 7: {
                                    message.totalMaxNodeCount = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a NodePoolAutoscaling message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.NodePoolAutoscaling
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.NodePoolAutoscaling} NodePoolAutoscaling
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NodePoolAutoscaling.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NodePoolAutoscaling message.
                     * @function verify
                     * @memberof google.container.v1.NodePoolAutoscaling
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NodePoolAutoscaling.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            if (typeof message.enabled !== "boolean")
                                return "enabled: boolean expected";
                        if (message.minNodeCount != null && message.hasOwnProperty("minNodeCount"))
                            if (!$util.isInteger(message.minNodeCount))
                                return "minNodeCount: integer expected";
                        if (message.maxNodeCount != null && message.hasOwnProperty("maxNodeCount"))
                            if (!$util.isInteger(message.maxNodeCount))
                                return "maxNodeCount: integer expected";
                        if (message.autoprovisioned != null && message.hasOwnProperty("autoprovisioned"))
                            if (typeof message.autoprovisioned !== "boolean")
                                return "autoprovisioned: boolean expected";
                        if (message.locationPolicy != null && message.hasOwnProperty("locationPolicy"))
                            switch (message.locationPolicy) {
                            default:
                                return "locationPolicy: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        if (message.totalMinNodeCount != null && message.hasOwnProperty("totalMinNodeCount"))
                            if (!$util.isInteger(message.totalMinNodeCount))
                                return "totalMinNodeCount: integer expected";
                        if (message.totalMaxNodeCount != null && message.hasOwnProperty("totalMaxNodeCount"))
                            if (!$util.isInteger(message.totalMaxNodeCount))
                                return "totalMaxNodeCount: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a NodePoolAutoscaling message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.NodePoolAutoscaling
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.NodePoolAutoscaling} NodePoolAutoscaling
                     */
                    NodePoolAutoscaling.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.NodePoolAutoscaling)
                            return object;
                        var message = new $root.google.container.v1.NodePoolAutoscaling();
                        if (object.enabled != null)
                            message.enabled = Boolean(object.enabled);
                        if (object.minNodeCount != null)
                            message.minNodeCount = object.minNodeCount | 0;
                        if (object.maxNodeCount != null)
                            message.maxNodeCount = object.maxNodeCount | 0;
                        if (object.autoprovisioned != null)
                            message.autoprovisioned = Boolean(object.autoprovisioned);
                        switch (object.locationPolicy) {
                        default:
                            if (typeof object.locationPolicy === "number") {
                                message.locationPolicy = object.locationPolicy;
                                break;
                            }
                            break;
                        case "LOCATION_POLICY_UNSPECIFIED":
                        case 0:
                            message.locationPolicy = 0;
                            break;
                        case "BALANCED":
                        case 1:
                            message.locationPolicy = 1;
                            break;
                        case "ANY":
                        case 2:
                            message.locationPolicy = 2;
                            break;
                        }
                        if (object.totalMinNodeCount != null)
                            message.totalMinNodeCount = object.totalMinNodeCount | 0;
                        if (object.totalMaxNodeCount != null)
                            message.totalMaxNodeCount = object.totalMaxNodeCount | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NodePoolAutoscaling message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.NodePoolAutoscaling
                     * @static
                     * @param {google.container.v1.NodePoolAutoscaling} message NodePoolAutoscaling
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NodePoolAutoscaling.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.enabled = false;
                            object.minNodeCount = 0;
                            object.maxNodeCount = 0;
                            object.autoprovisioned = false;
                            object.locationPolicy = options.enums === String ? "LOCATION_POLICY_UNSPECIFIED" : 0;
                            object.totalMinNodeCount = 0;
                            object.totalMaxNodeCount = 0;
                        }
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            object.enabled = message.enabled;
                        if (message.minNodeCount != null && message.hasOwnProperty("minNodeCount"))
                            object.minNodeCount = message.minNodeCount;
                        if (message.maxNodeCount != null && message.hasOwnProperty("maxNodeCount"))
                            object.maxNodeCount = message.maxNodeCount;
                        if (message.autoprovisioned != null && message.hasOwnProperty("autoprovisioned"))
                            object.autoprovisioned = message.autoprovisioned;
                        if (message.locationPolicy != null && message.hasOwnProperty("locationPolicy"))
                            object.locationPolicy = options.enums === String ? $root.google.container.v1.NodePoolAutoscaling.LocationPolicy[message.locationPolicy] === undefined ? message.locationPolicy : $root.google.container.v1.NodePoolAutoscaling.LocationPolicy[message.locationPolicy] : message.locationPolicy;
                        if (message.totalMinNodeCount != null && message.hasOwnProperty("totalMinNodeCount"))
                            object.totalMinNodeCount = message.totalMinNodeCount;
                        if (message.totalMaxNodeCount != null && message.hasOwnProperty("totalMaxNodeCount"))
                            object.totalMaxNodeCount = message.totalMaxNodeCount;
                        return object;
                    };
    
                    /**
                     * Converts this NodePoolAutoscaling to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.NodePoolAutoscaling
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NodePoolAutoscaling.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NodePoolAutoscaling
                     * @function getTypeUrl
                     * @memberof google.container.v1.NodePoolAutoscaling
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NodePoolAutoscaling.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.NodePoolAutoscaling";
                    };
    
                    /**
                     * LocationPolicy enum.
                     * @name google.container.v1.NodePoolAutoscaling.LocationPolicy
                     * @enum {number}
                     * @property {number} LOCATION_POLICY_UNSPECIFIED=0 LOCATION_POLICY_UNSPECIFIED value
                     * @property {number} BALANCED=1 BALANCED value
                     * @property {number} ANY=2 ANY value
                     */
                    NodePoolAutoscaling.LocationPolicy = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "LOCATION_POLICY_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "BALANCED"] = 1;
                        values[valuesById[2] = "ANY"] = 2;
                        return values;
                    })();
    
                    return NodePoolAutoscaling;
                })();
    
                v1.SetLabelsRequest = (function() {
    
                    /**
                     * Properties of a SetLabelsRequest.
                     * @memberof google.container.v1
                     * @interface ISetLabelsRequest
                     * @property {string|null} [projectId] SetLabelsRequest projectId
                     * @property {string|null} [zone] SetLabelsRequest zone
                     * @property {string|null} [clusterId] SetLabelsRequest clusterId
                     * @property {Object.<string,string>|null} [resourceLabels] SetLabelsRequest resourceLabels
                     * @property {string|null} [labelFingerprint] SetLabelsRequest labelFingerprint
                     * @property {string|null} [name] SetLabelsRequest name
                     */
    
                    /**
                     * Constructs a new SetLabelsRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a SetLabelsRequest.
                     * @implements ISetLabelsRequest
                     * @constructor
                     * @param {google.container.v1.ISetLabelsRequest=} [properties] Properties to set
                     */
                    function SetLabelsRequest(properties) {
                        this.resourceLabels = {};
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * SetLabelsRequest projectId.
                     * @member {string} projectId
                     * @memberof google.container.v1.SetLabelsRequest
                     * @instance
                     */
                    SetLabelsRequest.prototype.projectId = "";
    
                    /**
                     * SetLabelsRequest zone.
                     * @member {string} zone
                     * @memberof google.container.v1.SetLabelsRequest
                     * @instance
                     */
                    SetLabelsRequest.prototype.zone = "";
    
                    /**
                     * SetLabelsRequest clusterId.
                     * @member {string} clusterId
                     * @memberof google.container.v1.SetLabelsRequest
                     * @instance
                     */
                    SetLabelsRequest.prototype.clusterId = "";
    
                    /**
                     * SetLabelsRequest resourceLabels.
                     * @member {Object.<string,string>} resourceLabels
                     * @memberof google.container.v1.SetLabelsRequest
                     * @instance
                     */
                    SetLabelsRequest.prototype.resourceLabels = $util.emptyObject;
    
                    /**
                     * SetLabelsRequest labelFingerprint.
                     * @member {string} labelFingerprint
                     * @memberof google.container.v1.SetLabelsRequest
                     * @instance
                     */
                    SetLabelsRequest.prototype.labelFingerprint = "";
    
                    /**
                     * SetLabelsRequest name.
                     * @member {string} name
                     * @memberof google.container.v1.SetLabelsRequest
                     * @instance
                     */
                    SetLabelsRequest.prototype.name = "";
    
                    /**
                     * Creates a new SetLabelsRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.SetLabelsRequest
                     * @static
                     * @param {google.container.v1.ISetLabelsRequest=} [properties] Properties to set
                     * @returns {google.container.v1.SetLabelsRequest} SetLabelsRequest instance
                     */
                    SetLabelsRequest.create = function create(properties) {
                        return new SetLabelsRequest(properties);
                    };
    
                    /**
                     * Encodes the specified SetLabelsRequest message. Does not implicitly {@link google.container.v1.SetLabelsRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.SetLabelsRequest
                     * @static
                     * @param {google.container.v1.ISetLabelsRequest} message SetLabelsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SetLabelsRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.clusterId != null && Object.hasOwnProperty.call(message, "clusterId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.clusterId);
                        if (message.resourceLabels != null && Object.hasOwnProperty.call(message, "resourceLabels"))
                            for (var keys = Object.keys(message.resourceLabels), i = 0; i < keys.length; ++i)
                                writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.resourceLabels[keys[i]]).ldelim();
                        if (message.labelFingerprint != null && Object.hasOwnProperty.call(message, "labelFingerprint"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.labelFingerprint);
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 7, wireType 2 =*/58).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified SetLabelsRequest message, length delimited. Does not implicitly {@link google.container.v1.SetLabelsRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.SetLabelsRequest
                     * @static
                     * @param {google.container.v1.ISetLabelsRequest} message SetLabelsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SetLabelsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a SetLabelsRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.SetLabelsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.SetLabelsRequest} SetLabelsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SetLabelsRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.SetLabelsRequest(), key, value;
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.projectId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.clusterId = reader.string();
                                    break;
                                }
                            case 4: {
                                    if (message.resourceLabels === $util.emptyObject)
                                        message.resourceLabels = {};
                                    var end2 = reader.uint32() + reader.pos;
                                    key = "";
                                    value = "";
                                    while (reader.pos < end2) {
                                        var tag2 = reader.uint32();
                                        switch (tag2 >>> 3) {
                                        case 1:
                                            key = reader.string();
                                            break;
                                        case 2:
                                            value = reader.string();
                                            break;
                                        default:
                                            reader.skipType(tag2 & 7);
                                            break;
                                        }
                                    }
                                    message.resourceLabels[key] = value;
                                    break;
                                }
                            case 5: {
                                    message.labelFingerprint = reader.string();
                                    break;
                                }
                            case 7: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a SetLabelsRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.SetLabelsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.SetLabelsRequest} SetLabelsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SetLabelsRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a SetLabelsRequest message.
                     * @function verify
                     * @memberof google.container.v1.SetLabelsRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    SetLabelsRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            if (!$util.isString(message.projectId))
                                return "projectId: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            if (!$util.isString(message.clusterId))
                                return "clusterId: string expected";
                        if (message.resourceLabels != null && message.hasOwnProperty("resourceLabels")) {
                            if (!$util.isObject(message.resourceLabels))
                                return "resourceLabels: object expected";
                            var key = Object.keys(message.resourceLabels);
                            for (var i = 0; i < key.length; ++i)
                                if (!$util.isString(message.resourceLabels[key[i]]))
                                    return "resourceLabels: string{k:string} expected";
                        }
                        if (message.labelFingerprint != null && message.hasOwnProperty("labelFingerprint"))
                            if (!$util.isString(message.labelFingerprint))
                                return "labelFingerprint: string expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a SetLabelsRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.SetLabelsRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.SetLabelsRequest} SetLabelsRequest
                     */
                    SetLabelsRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.SetLabelsRequest)
                            return object;
                        var message = new $root.google.container.v1.SetLabelsRequest();
                        if (object.projectId != null)
                            message.projectId = String(object.projectId);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.clusterId != null)
                            message.clusterId = String(object.clusterId);
                        if (object.resourceLabels) {
                            if (typeof object.resourceLabels !== "object")
                                throw TypeError(".google.container.v1.SetLabelsRequest.resourceLabels: object expected");
                            message.resourceLabels = {};
                            for (var keys = Object.keys(object.resourceLabels), i = 0; i < keys.length; ++i)
                                message.resourceLabels[keys[i]] = String(object.resourceLabels[keys[i]]);
                        }
                        if (object.labelFingerprint != null)
                            message.labelFingerprint = String(object.labelFingerprint);
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a SetLabelsRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.SetLabelsRequest
                     * @static
                     * @param {google.container.v1.SetLabelsRequest} message SetLabelsRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    SetLabelsRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.objects || options.defaults)
                            object.resourceLabels = {};
                        if (options.defaults) {
                            object.projectId = "";
                            object.zone = "";
                            object.clusterId = "";
                            object.labelFingerprint = "";
                            object.name = "";
                        }
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            object.projectId = message.projectId;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            object.clusterId = message.clusterId;
                        var keys2;
                        if (message.resourceLabels && (keys2 = Object.keys(message.resourceLabels)).length) {
                            object.resourceLabels = {};
                            for (var j = 0; j < keys2.length; ++j)
                                object.resourceLabels[keys2[j]] = message.resourceLabels[keys2[j]];
                        }
                        if (message.labelFingerprint != null && message.hasOwnProperty("labelFingerprint"))
                            object.labelFingerprint = message.labelFingerprint;
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this SetLabelsRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.SetLabelsRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    SetLabelsRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for SetLabelsRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.SetLabelsRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    SetLabelsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.SetLabelsRequest";
                    };
    
                    return SetLabelsRequest;
                })();
    
                v1.SetLegacyAbacRequest = (function() {
    
                    /**
                     * Properties of a SetLegacyAbacRequest.
                     * @memberof google.container.v1
                     * @interface ISetLegacyAbacRequest
                     * @property {string|null} [projectId] SetLegacyAbacRequest projectId
                     * @property {string|null} [zone] SetLegacyAbacRequest zone
                     * @property {string|null} [clusterId] SetLegacyAbacRequest clusterId
                     * @property {boolean|null} [enabled] SetLegacyAbacRequest enabled
                     * @property {string|null} [name] SetLegacyAbacRequest name
                     */
    
                    /**
                     * Constructs a new SetLegacyAbacRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a SetLegacyAbacRequest.
                     * @implements ISetLegacyAbacRequest
                     * @constructor
                     * @param {google.container.v1.ISetLegacyAbacRequest=} [properties] Properties to set
                     */
                    function SetLegacyAbacRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * SetLegacyAbacRequest projectId.
                     * @member {string} projectId
                     * @memberof google.container.v1.SetLegacyAbacRequest
                     * @instance
                     */
                    SetLegacyAbacRequest.prototype.projectId = "";
    
                    /**
                     * SetLegacyAbacRequest zone.
                     * @member {string} zone
                     * @memberof google.container.v1.SetLegacyAbacRequest
                     * @instance
                     */
                    SetLegacyAbacRequest.prototype.zone = "";
    
                    /**
                     * SetLegacyAbacRequest clusterId.
                     * @member {string} clusterId
                     * @memberof google.container.v1.SetLegacyAbacRequest
                     * @instance
                     */
                    SetLegacyAbacRequest.prototype.clusterId = "";
    
                    /**
                     * SetLegacyAbacRequest enabled.
                     * @member {boolean} enabled
                     * @memberof google.container.v1.SetLegacyAbacRequest
                     * @instance
                     */
                    SetLegacyAbacRequest.prototype.enabled = false;
    
                    /**
                     * SetLegacyAbacRequest name.
                     * @member {string} name
                     * @memberof google.container.v1.SetLegacyAbacRequest
                     * @instance
                     */
                    SetLegacyAbacRequest.prototype.name = "";
    
                    /**
                     * Creates a new SetLegacyAbacRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.SetLegacyAbacRequest
                     * @static
                     * @param {google.container.v1.ISetLegacyAbacRequest=} [properties] Properties to set
                     * @returns {google.container.v1.SetLegacyAbacRequest} SetLegacyAbacRequest instance
                     */
                    SetLegacyAbacRequest.create = function create(properties) {
                        return new SetLegacyAbacRequest(properties);
                    };
    
                    /**
                     * Encodes the specified SetLegacyAbacRequest message. Does not implicitly {@link google.container.v1.SetLegacyAbacRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.SetLegacyAbacRequest
                     * @static
                     * @param {google.container.v1.ISetLegacyAbacRequest} message SetLegacyAbacRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SetLegacyAbacRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.clusterId != null && Object.hasOwnProperty.call(message, "clusterId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.clusterId);
                        if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                            writer.uint32(/* id 4, wireType 0 =*/32).bool(message.enabled);
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified SetLegacyAbacRequest message, length delimited. Does not implicitly {@link google.container.v1.SetLegacyAbacRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.SetLegacyAbacRequest
                     * @static
                     * @param {google.container.v1.ISetLegacyAbacRequest} message SetLegacyAbacRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SetLegacyAbacRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a SetLegacyAbacRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.SetLegacyAbacRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.SetLegacyAbacRequest} SetLegacyAbacRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SetLegacyAbacRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.SetLegacyAbacRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.projectId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.clusterId = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.enabled = reader.bool();
                                    break;
                                }
                            case 6: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a SetLegacyAbacRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.SetLegacyAbacRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.SetLegacyAbacRequest} SetLegacyAbacRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SetLegacyAbacRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a SetLegacyAbacRequest message.
                     * @function verify
                     * @memberof google.container.v1.SetLegacyAbacRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    SetLegacyAbacRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            if (!$util.isString(message.projectId))
                                return "projectId: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            if (!$util.isString(message.clusterId))
                                return "clusterId: string expected";
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            if (typeof message.enabled !== "boolean")
                                return "enabled: boolean expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a SetLegacyAbacRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.SetLegacyAbacRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.SetLegacyAbacRequest} SetLegacyAbacRequest
                     */
                    SetLegacyAbacRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.SetLegacyAbacRequest)
                            return object;
                        var message = new $root.google.container.v1.SetLegacyAbacRequest();
                        if (object.projectId != null)
                            message.projectId = String(object.projectId);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.clusterId != null)
                            message.clusterId = String(object.clusterId);
                        if (object.enabled != null)
                            message.enabled = Boolean(object.enabled);
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a SetLegacyAbacRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.SetLegacyAbacRequest
                     * @static
                     * @param {google.container.v1.SetLegacyAbacRequest} message SetLegacyAbacRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    SetLegacyAbacRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.projectId = "";
                            object.zone = "";
                            object.clusterId = "";
                            object.enabled = false;
                            object.name = "";
                        }
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            object.projectId = message.projectId;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            object.clusterId = message.clusterId;
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            object.enabled = message.enabled;
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this SetLegacyAbacRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.SetLegacyAbacRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    SetLegacyAbacRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for SetLegacyAbacRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.SetLegacyAbacRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    SetLegacyAbacRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.SetLegacyAbacRequest";
                    };
    
                    return SetLegacyAbacRequest;
                })();
    
                v1.StartIPRotationRequest = (function() {
    
                    /**
                     * Properties of a StartIPRotationRequest.
                     * @memberof google.container.v1
                     * @interface IStartIPRotationRequest
                     * @property {string|null} [projectId] StartIPRotationRequest projectId
                     * @property {string|null} [zone] StartIPRotationRequest zone
                     * @property {string|null} [clusterId] StartIPRotationRequest clusterId
                     * @property {string|null} [name] StartIPRotationRequest name
                     * @property {boolean|null} [rotateCredentials] StartIPRotationRequest rotateCredentials
                     */
    
                    /**
                     * Constructs a new StartIPRotationRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a StartIPRotationRequest.
                     * @implements IStartIPRotationRequest
                     * @constructor
                     * @param {google.container.v1.IStartIPRotationRequest=} [properties] Properties to set
                     */
                    function StartIPRotationRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * StartIPRotationRequest projectId.
                     * @member {string} projectId
                     * @memberof google.container.v1.StartIPRotationRequest
                     * @instance
                     */
                    StartIPRotationRequest.prototype.projectId = "";
    
                    /**
                     * StartIPRotationRequest zone.
                     * @member {string} zone
                     * @memberof google.container.v1.StartIPRotationRequest
                     * @instance
                     */
                    StartIPRotationRequest.prototype.zone = "";
    
                    /**
                     * StartIPRotationRequest clusterId.
                     * @member {string} clusterId
                     * @memberof google.container.v1.StartIPRotationRequest
                     * @instance
                     */
                    StartIPRotationRequest.prototype.clusterId = "";
    
                    /**
                     * StartIPRotationRequest name.
                     * @member {string} name
                     * @memberof google.container.v1.StartIPRotationRequest
                     * @instance
                     */
                    StartIPRotationRequest.prototype.name = "";
    
                    /**
                     * StartIPRotationRequest rotateCredentials.
                     * @member {boolean} rotateCredentials
                     * @memberof google.container.v1.StartIPRotationRequest
                     * @instance
                     */
                    StartIPRotationRequest.prototype.rotateCredentials = false;
    
                    /**
                     * Creates a new StartIPRotationRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.StartIPRotationRequest
                     * @static
                     * @param {google.container.v1.IStartIPRotationRequest=} [properties] Properties to set
                     * @returns {google.container.v1.StartIPRotationRequest} StartIPRotationRequest instance
                     */
                    StartIPRotationRequest.create = function create(properties) {
                        return new StartIPRotationRequest(properties);
                    };
    
                    /**
                     * Encodes the specified StartIPRotationRequest message. Does not implicitly {@link google.container.v1.StartIPRotationRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.StartIPRotationRequest
                     * @static
                     * @param {google.container.v1.IStartIPRotationRequest} message StartIPRotationRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    StartIPRotationRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.clusterId != null && Object.hasOwnProperty.call(message, "clusterId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.clusterId);
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.name);
                        if (message.rotateCredentials != null && Object.hasOwnProperty.call(message, "rotateCredentials"))
                            writer.uint32(/* id 7, wireType 0 =*/56).bool(message.rotateCredentials);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified StartIPRotationRequest message, length delimited. Does not implicitly {@link google.container.v1.StartIPRotationRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.StartIPRotationRequest
                     * @static
                     * @param {google.container.v1.IStartIPRotationRequest} message StartIPRotationRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    StartIPRotationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a StartIPRotationRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.StartIPRotationRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.StartIPRotationRequest} StartIPRotationRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    StartIPRotationRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.StartIPRotationRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.projectId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.clusterId = reader.string();
                                    break;
                                }
                            case 6: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 7: {
                                    message.rotateCredentials = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a StartIPRotationRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.StartIPRotationRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.StartIPRotationRequest} StartIPRotationRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    StartIPRotationRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a StartIPRotationRequest message.
                     * @function verify
                     * @memberof google.container.v1.StartIPRotationRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    StartIPRotationRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            if (!$util.isString(message.projectId))
                                return "projectId: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            if (!$util.isString(message.clusterId))
                                return "clusterId: string expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.rotateCredentials != null && message.hasOwnProperty("rotateCredentials"))
                            if (typeof message.rotateCredentials !== "boolean")
                                return "rotateCredentials: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a StartIPRotationRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.StartIPRotationRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.StartIPRotationRequest} StartIPRotationRequest
                     */
                    StartIPRotationRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.StartIPRotationRequest)
                            return object;
                        var message = new $root.google.container.v1.StartIPRotationRequest();
                        if (object.projectId != null)
                            message.projectId = String(object.projectId);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.clusterId != null)
                            message.clusterId = String(object.clusterId);
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.rotateCredentials != null)
                            message.rotateCredentials = Boolean(object.rotateCredentials);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a StartIPRotationRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.StartIPRotationRequest
                     * @static
                     * @param {google.container.v1.StartIPRotationRequest} message StartIPRotationRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    StartIPRotationRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.projectId = "";
                            object.zone = "";
                            object.clusterId = "";
                            object.name = "";
                            object.rotateCredentials = false;
                        }
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            object.projectId = message.projectId;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            object.clusterId = message.clusterId;
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        if (message.rotateCredentials != null && message.hasOwnProperty("rotateCredentials"))
                            object.rotateCredentials = message.rotateCredentials;
                        return object;
                    };
    
                    /**
                     * Converts this StartIPRotationRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.StartIPRotationRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    StartIPRotationRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for StartIPRotationRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.StartIPRotationRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    StartIPRotationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.StartIPRotationRequest";
                    };
    
                    return StartIPRotationRequest;
                })();
    
                v1.CompleteIPRotationRequest = (function() {
    
                    /**
                     * Properties of a CompleteIPRotationRequest.
                     * @memberof google.container.v1
                     * @interface ICompleteIPRotationRequest
                     * @property {string|null} [projectId] CompleteIPRotationRequest projectId
                     * @property {string|null} [zone] CompleteIPRotationRequest zone
                     * @property {string|null} [clusterId] CompleteIPRotationRequest clusterId
                     * @property {string|null} [name] CompleteIPRotationRequest name
                     */
    
                    /**
                     * Constructs a new CompleteIPRotationRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a CompleteIPRotationRequest.
                     * @implements ICompleteIPRotationRequest
                     * @constructor
                     * @param {google.container.v1.ICompleteIPRotationRequest=} [properties] Properties to set
                     */
                    function CompleteIPRotationRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * CompleteIPRotationRequest projectId.
                     * @member {string} projectId
                     * @memberof google.container.v1.CompleteIPRotationRequest
                     * @instance
                     */
                    CompleteIPRotationRequest.prototype.projectId = "";
    
                    /**
                     * CompleteIPRotationRequest zone.
                     * @member {string} zone
                     * @memberof google.container.v1.CompleteIPRotationRequest
                     * @instance
                     */
                    CompleteIPRotationRequest.prototype.zone = "";
    
                    /**
                     * CompleteIPRotationRequest clusterId.
                     * @member {string} clusterId
                     * @memberof google.container.v1.CompleteIPRotationRequest
                     * @instance
                     */
                    CompleteIPRotationRequest.prototype.clusterId = "";
    
                    /**
                     * CompleteIPRotationRequest name.
                     * @member {string} name
                     * @memberof google.container.v1.CompleteIPRotationRequest
                     * @instance
                     */
                    CompleteIPRotationRequest.prototype.name = "";
    
                    /**
                     * Creates a new CompleteIPRotationRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.CompleteIPRotationRequest
                     * @static
                     * @param {google.container.v1.ICompleteIPRotationRequest=} [properties] Properties to set
                     * @returns {google.container.v1.CompleteIPRotationRequest} CompleteIPRotationRequest instance
                     */
                    CompleteIPRotationRequest.create = function create(properties) {
                        return new CompleteIPRotationRequest(properties);
                    };
    
                    /**
                     * Encodes the specified CompleteIPRotationRequest message. Does not implicitly {@link google.container.v1.CompleteIPRotationRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.CompleteIPRotationRequest
                     * @static
                     * @param {google.container.v1.ICompleteIPRotationRequest} message CompleteIPRotationRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CompleteIPRotationRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.clusterId != null && Object.hasOwnProperty.call(message, "clusterId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.clusterId);
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 7, wireType 2 =*/58).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified CompleteIPRotationRequest message, length delimited. Does not implicitly {@link google.container.v1.CompleteIPRotationRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.CompleteIPRotationRequest
                     * @static
                     * @param {google.container.v1.ICompleteIPRotationRequest} message CompleteIPRotationRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CompleteIPRotationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a CompleteIPRotationRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.CompleteIPRotationRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.CompleteIPRotationRequest} CompleteIPRotationRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CompleteIPRotationRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.CompleteIPRotationRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.projectId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.clusterId = reader.string();
                                    break;
                                }
                            case 7: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a CompleteIPRotationRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.CompleteIPRotationRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.CompleteIPRotationRequest} CompleteIPRotationRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CompleteIPRotationRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a CompleteIPRotationRequest message.
                     * @function verify
                     * @memberof google.container.v1.CompleteIPRotationRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    CompleteIPRotationRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            if (!$util.isString(message.projectId))
                                return "projectId: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            if (!$util.isString(message.clusterId))
                                return "clusterId: string expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a CompleteIPRotationRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.CompleteIPRotationRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.CompleteIPRotationRequest} CompleteIPRotationRequest
                     */
                    CompleteIPRotationRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.CompleteIPRotationRequest)
                            return object;
                        var message = new $root.google.container.v1.CompleteIPRotationRequest();
                        if (object.projectId != null)
                            message.projectId = String(object.projectId);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.clusterId != null)
                            message.clusterId = String(object.clusterId);
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a CompleteIPRotationRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.CompleteIPRotationRequest
                     * @static
                     * @param {google.container.v1.CompleteIPRotationRequest} message CompleteIPRotationRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    CompleteIPRotationRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.projectId = "";
                            object.zone = "";
                            object.clusterId = "";
                            object.name = "";
                        }
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            object.projectId = message.projectId;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            object.clusterId = message.clusterId;
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this CompleteIPRotationRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.CompleteIPRotationRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    CompleteIPRotationRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for CompleteIPRotationRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.CompleteIPRotationRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    CompleteIPRotationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.CompleteIPRotationRequest";
                    };
    
                    return CompleteIPRotationRequest;
                })();
    
                v1.AcceleratorConfig = (function() {
    
                    /**
                     * Properties of an AcceleratorConfig.
                     * @memberof google.container.v1
                     * @interface IAcceleratorConfig
                     * @property {number|Long|null} [acceleratorCount] AcceleratorConfig acceleratorCount
                     * @property {string|null} [acceleratorType] AcceleratorConfig acceleratorType
                     * @property {string|null} [gpuPartitionSize] AcceleratorConfig gpuPartitionSize
                     * @property {google.container.v1.IGPUSharingConfig|null} [gpuSharingConfig] AcceleratorConfig gpuSharingConfig
                     */
    
                    /**
                     * Constructs a new AcceleratorConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents an AcceleratorConfig.
                     * @implements IAcceleratorConfig
                     * @constructor
                     * @param {google.container.v1.IAcceleratorConfig=} [properties] Properties to set
                     */
                    function AcceleratorConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * AcceleratorConfig acceleratorCount.
                     * @member {number|Long} acceleratorCount
                     * @memberof google.container.v1.AcceleratorConfig
                     * @instance
                     */
                    AcceleratorConfig.prototype.acceleratorCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                    /**
                     * AcceleratorConfig acceleratorType.
                     * @member {string} acceleratorType
                     * @memberof google.container.v1.AcceleratorConfig
                     * @instance
                     */
                    AcceleratorConfig.prototype.acceleratorType = "";
    
                    /**
                     * AcceleratorConfig gpuPartitionSize.
                     * @member {string} gpuPartitionSize
                     * @memberof google.container.v1.AcceleratorConfig
                     * @instance
                     */
                    AcceleratorConfig.prototype.gpuPartitionSize = "";
    
                    /**
                     * AcceleratorConfig gpuSharingConfig.
                     * @member {google.container.v1.IGPUSharingConfig|null|undefined} gpuSharingConfig
                     * @memberof google.container.v1.AcceleratorConfig
                     * @instance
                     */
                    AcceleratorConfig.prototype.gpuSharingConfig = null;
    
                    // OneOf field names bound to virtual getters and setters
                    var $oneOfFields;
    
                    /**
                     * AcceleratorConfig _gpuSharingConfig.
                     * @member {"gpuSharingConfig"|undefined} _gpuSharingConfig
                     * @memberof google.container.v1.AcceleratorConfig
                     * @instance
                     */
                    Object.defineProperty(AcceleratorConfig.prototype, "_gpuSharingConfig", {
                        get: $util.oneOfGetter($oneOfFields = ["gpuSharingConfig"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });
    
                    /**
                     * Creates a new AcceleratorConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.AcceleratorConfig
                     * @static
                     * @param {google.container.v1.IAcceleratorConfig=} [properties] Properties to set
                     * @returns {google.container.v1.AcceleratorConfig} AcceleratorConfig instance
                     */
                    AcceleratorConfig.create = function create(properties) {
                        return new AcceleratorConfig(properties);
                    };
    
                    /**
                     * Encodes the specified AcceleratorConfig message. Does not implicitly {@link google.container.v1.AcceleratorConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.AcceleratorConfig
                     * @static
                     * @param {google.container.v1.IAcceleratorConfig} message AcceleratorConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AcceleratorConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.acceleratorCount != null && Object.hasOwnProperty.call(message, "acceleratorCount"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int64(message.acceleratorCount);
                        if (message.acceleratorType != null && Object.hasOwnProperty.call(message, "acceleratorType"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.acceleratorType);
                        if (message.gpuPartitionSize != null && Object.hasOwnProperty.call(message, "gpuPartitionSize"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.gpuPartitionSize);
                        if (message.gpuSharingConfig != null && Object.hasOwnProperty.call(message, "gpuSharingConfig"))
                            $root.google.container.v1.GPUSharingConfig.encode(message.gpuSharingConfig, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified AcceleratorConfig message, length delimited. Does not implicitly {@link google.container.v1.AcceleratorConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.AcceleratorConfig
                     * @static
                     * @param {google.container.v1.IAcceleratorConfig} message AcceleratorConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AcceleratorConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an AcceleratorConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.AcceleratorConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.AcceleratorConfig} AcceleratorConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AcceleratorConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.AcceleratorConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.acceleratorCount = reader.int64();
                                    break;
                                }
                            case 2: {
                                    message.acceleratorType = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.gpuPartitionSize = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.gpuSharingConfig = $root.google.container.v1.GPUSharingConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an AcceleratorConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.AcceleratorConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.AcceleratorConfig} AcceleratorConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AcceleratorConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an AcceleratorConfig message.
                     * @function verify
                     * @memberof google.container.v1.AcceleratorConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    AcceleratorConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        var properties = {};
                        if (message.acceleratorCount != null && message.hasOwnProperty("acceleratorCount"))
                            if (!$util.isInteger(message.acceleratorCount) && !(message.acceleratorCount && $util.isInteger(message.acceleratorCount.low) && $util.isInteger(message.acceleratorCount.high)))
                                return "acceleratorCount: integer|Long expected";
                        if (message.acceleratorType != null && message.hasOwnProperty("acceleratorType"))
                            if (!$util.isString(message.acceleratorType))
                                return "acceleratorType: string expected";
                        if (message.gpuPartitionSize != null && message.hasOwnProperty("gpuPartitionSize"))
                            if (!$util.isString(message.gpuPartitionSize))
                                return "gpuPartitionSize: string expected";
                        if (message.gpuSharingConfig != null && message.hasOwnProperty("gpuSharingConfig")) {
                            properties._gpuSharingConfig = 1;
                            {
                                var error = $root.google.container.v1.GPUSharingConfig.verify(message.gpuSharingConfig);
                                if (error)
                                    return "gpuSharingConfig." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates an AcceleratorConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.AcceleratorConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.AcceleratorConfig} AcceleratorConfig
                     */
                    AcceleratorConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.AcceleratorConfig)
                            return object;
                        var message = new $root.google.container.v1.AcceleratorConfig();
                        if (object.acceleratorCount != null)
                            if ($util.Long)
                                (message.acceleratorCount = $util.Long.fromValue(object.acceleratorCount)).unsigned = false;
                            else if (typeof object.acceleratorCount === "string")
                                message.acceleratorCount = parseInt(object.acceleratorCount, 10);
                            else if (typeof object.acceleratorCount === "number")
                                message.acceleratorCount = object.acceleratorCount;
                            else if (typeof object.acceleratorCount === "object")
                                message.acceleratorCount = new $util.LongBits(object.acceleratorCount.low >>> 0, object.acceleratorCount.high >>> 0).toNumber();
                        if (object.acceleratorType != null)
                            message.acceleratorType = String(object.acceleratorType);
                        if (object.gpuPartitionSize != null)
                            message.gpuPartitionSize = String(object.gpuPartitionSize);
                        if (object.gpuSharingConfig != null) {
                            if (typeof object.gpuSharingConfig !== "object")
                                throw TypeError(".google.container.v1.AcceleratorConfig.gpuSharingConfig: object expected");
                            message.gpuSharingConfig = $root.google.container.v1.GPUSharingConfig.fromObject(object.gpuSharingConfig);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an AcceleratorConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.AcceleratorConfig
                     * @static
                     * @param {google.container.v1.AcceleratorConfig} message AcceleratorConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    AcceleratorConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            if ($util.Long) {
                                var long = new $util.Long(0, 0, false);
                                object.acceleratorCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                            } else
                                object.acceleratorCount = options.longs === String ? "0" : 0;
                            object.acceleratorType = "";
                            object.gpuPartitionSize = "";
                        }
                        if (message.acceleratorCount != null && message.hasOwnProperty("acceleratorCount"))
                            if (typeof message.acceleratorCount === "number")
                                object.acceleratorCount = options.longs === String ? String(message.acceleratorCount) : message.acceleratorCount;
                            else
                                object.acceleratorCount = options.longs === String ? $util.Long.prototype.toString.call(message.acceleratorCount) : options.longs === Number ? new $util.LongBits(message.acceleratorCount.low >>> 0, message.acceleratorCount.high >>> 0).toNumber() : message.acceleratorCount;
                        if (message.acceleratorType != null && message.hasOwnProperty("acceleratorType"))
                            object.acceleratorType = message.acceleratorType;
                        if (message.gpuPartitionSize != null && message.hasOwnProperty("gpuPartitionSize"))
                            object.gpuPartitionSize = message.gpuPartitionSize;
                        if (message.gpuSharingConfig != null && message.hasOwnProperty("gpuSharingConfig")) {
                            object.gpuSharingConfig = $root.google.container.v1.GPUSharingConfig.toObject(message.gpuSharingConfig, options);
                            if (options.oneofs)
                                object._gpuSharingConfig = "gpuSharingConfig";
                        }
                        return object;
                    };
    
                    /**
                     * Converts this AcceleratorConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.AcceleratorConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    AcceleratorConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for AcceleratorConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.AcceleratorConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    AcceleratorConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.AcceleratorConfig";
                    };
    
                    return AcceleratorConfig;
                })();
    
                v1.GPUSharingConfig = (function() {
    
                    /**
                     * Properties of a GPUSharingConfig.
                     * @memberof google.container.v1
                     * @interface IGPUSharingConfig
                     * @property {number|Long|null} [maxSharedClientsPerGpu] GPUSharingConfig maxSharedClientsPerGpu
                     * @property {google.container.v1.GPUSharingConfig.GPUSharingStrategy|null} [gpuSharingStrategy] GPUSharingConfig gpuSharingStrategy
                     */
    
                    /**
                     * Constructs a new GPUSharingConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a GPUSharingConfig.
                     * @implements IGPUSharingConfig
                     * @constructor
                     * @param {google.container.v1.IGPUSharingConfig=} [properties] Properties to set
                     */
                    function GPUSharingConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GPUSharingConfig maxSharedClientsPerGpu.
                     * @member {number|Long} maxSharedClientsPerGpu
                     * @memberof google.container.v1.GPUSharingConfig
                     * @instance
                     */
                    GPUSharingConfig.prototype.maxSharedClientsPerGpu = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                    /**
                     * GPUSharingConfig gpuSharingStrategy.
                     * @member {google.container.v1.GPUSharingConfig.GPUSharingStrategy|null|undefined} gpuSharingStrategy
                     * @memberof google.container.v1.GPUSharingConfig
                     * @instance
                     */
                    GPUSharingConfig.prototype.gpuSharingStrategy = null;
    
                    // OneOf field names bound to virtual getters and setters
                    var $oneOfFields;
    
                    /**
                     * GPUSharingConfig _gpuSharingStrategy.
                     * @member {"gpuSharingStrategy"|undefined} _gpuSharingStrategy
                     * @memberof google.container.v1.GPUSharingConfig
                     * @instance
                     */
                    Object.defineProperty(GPUSharingConfig.prototype, "_gpuSharingStrategy", {
                        get: $util.oneOfGetter($oneOfFields = ["gpuSharingStrategy"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });
    
                    /**
                     * Creates a new GPUSharingConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.GPUSharingConfig
                     * @static
                     * @param {google.container.v1.IGPUSharingConfig=} [properties] Properties to set
                     * @returns {google.container.v1.GPUSharingConfig} GPUSharingConfig instance
                     */
                    GPUSharingConfig.create = function create(properties) {
                        return new GPUSharingConfig(properties);
                    };
    
                    /**
                     * Encodes the specified GPUSharingConfig message. Does not implicitly {@link google.container.v1.GPUSharingConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.GPUSharingConfig
                     * @static
                     * @param {google.container.v1.IGPUSharingConfig} message GPUSharingConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GPUSharingConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.maxSharedClientsPerGpu != null && Object.hasOwnProperty.call(message, "maxSharedClientsPerGpu"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int64(message.maxSharedClientsPerGpu);
                        if (message.gpuSharingStrategy != null && Object.hasOwnProperty.call(message, "gpuSharingStrategy"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.gpuSharingStrategy);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GPUSharingConfig message, length delimited. Does not implicitly {@link google.container.v1.GPUSharingConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.GPUSharingConfig
                     * @static
                     * @param {google.container.v1.IGPUSharingConfig} message GPUSharingConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GPUSharingConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GPUSharingConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.GPUSharingConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.GPUSharingConfig} GPUSharingConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GPUSharingConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.GPUSharingConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.maxSharedClientsPerGpu = reader.int64();
                                    break;
                                }
                            case 2: {
                                    message.gpuSharingStrategy = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GPUSharingConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.GPUSharingConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.GPUSharingConfig} GPUSharingConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GPUSharingConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GPUSharingConfig message.
                     * @function verify
                     * @memberof google.container.v1.GPUSharingConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GPUSharingConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        var properties = {};
                        if (message.maxSharedClientsPerGpu != null && message.hasOwnProperty("maxSharedClientsPerGpu"))
                            if (!$util.isInteger(message.maxSharedClientsPerGpu) && !(message.maxSharedClientsPerGpu && $util.isInteger(message.maxSharedClientsPerGpu.low) && $util.isInteger(message.maxSharedClientsPerGpu.high)))
                                return "maxSharedClientsPerGpu: integer|Long expected";
                        if (message.gpuSharingStrategy != null && message.hasOwnProperty("gpuSharingStrategy")) {
                            properties._gpuSharingStrategy = 1;
                            switch (message.gpuSharingStrategy) {
                            default:
                                return "gpuSharingStrategy: enum value expected";
                            case 0:
                            case 1:
                                break;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a GPUSharingConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.GPUSharingConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.GPUSharingConfig} GPUSharingConfig
                     */
                    GPUSharingConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.GPUSharingConfig)
                            return object;
                        var message = new $root.google.container.v1.GPUSharingConfig();
                        if (object.maxSharedClientsPerGpu != null)
                            if ($util.Long)
                                (message.maxSharedClientsPerGpu = $util.Long.fromValue(object.maxSharedClientsPerGpu)).unsigned = false;
                            else if (typeof object.maxSharedClientsPerGpu === "string")
                                message.maxSharedClientsPerGpu = parseInt(object.maxSharedClientsPerGpu, 10);
                            else if (typeof object.maxSharedClientsPerGpu === "number")
                                message.maxSharedClientsPerGpu = object.maxSharedClientsPerGpu;
                            else if (typeof object.maxSharedClientsPerGpu === "object")
                                message.maxSharedClientsPerGpu = new $util.LongBits(object.maxSharedClientsPerGpu.low >>> 0, object.maxSharedClientsPerGpu.high >>> 0).toNumber();
                        switch (object.gpuSharingStrategy) {
                        default:
                            if (typeof object.gpuSharingStrategy === "number") {
                                message.gpuSharingStrategy = object.gpuSharingStrategy;
                                break;
                            }
                            break;
                        case "GPU_SHARING_STRATEGY_UNSPECIFIED":
                        case 0:
                            message.gpuSharingStrategy = 0;
                            break;
                        case "TIME_SHARING":
                        case 1:
                            message.gpuSharingStrategy = 1;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GPUSharingConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.GPUSharingConfig
                     * @static
                     * @param {google.container.v1.GPUSharingConfig} message GPUSharingConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GPUSharingConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            if ($util.Long) {
                                var long = new $util.Long(0, 0, false);
                                object.maxSharedClientsPerGpu = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                            } else
                                object.maxSharedClientsPerGpu = options.longs === String ? "0" : 0;
                        if (message.maxSharedClientsPerGpu != null && message.hasOwnProperty("maxSharedClientsPerGpu"))
                            if (typeof message.maxSharedClientsPerGpu === "number")
                                object.maxSharedClientsPerGpu = options.longs === String ? String(message.maxSharedClientsPerGpu) : message.maxSharedClientsPerGpu;
                            else
                                object.maxSharedClientsPerGpu = options.longs === String ? $util.Long.prototype.toString.call(message.maxSharedClientsPerGpu) : options.longs === Number ? new $util.LongBits(message.maxSharedClientsPerGpu.low >>> 0, message.maxSharedClientsPerGpu.high >>> 0).toNumber() : message.maxSharedClientsPerGpu;
                        if (message.gpuSharingStrategy != null && message.hasOwnProperty("gpuSharingStrategy")) {
                            object.gpuSharingStrategy = options.enums === String ? $root.google.container.v1.GPUSharingConfig.GPUSharingStrategy[message.gpuSharingStrategy] === undefined ? message.gpuSharingStrategy : $root.google.container.v1.GPUSharingConfig.GPUSharingStrategy[message.gpuSharingStrategy] : message.gpuSharingStrategy;
                            if (options.oneofs)
                                object._gpuSharingStrategy = "gpuSharingStrategy";
                        }
                        return object;
                    };
    
                    /**
                     * Converts this GPUSharingConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.GPUSharingConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GPUSharingConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GPUSharingConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.GPUSharingConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GPUSharingConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.GPUSharingConfig";
                    };
    
                    /**
                     * GPUSharingStrategy enum.
                     * @name google.container.v1.GPUSharingConfig.GPUSharingStrategy
                     * @enum {number}
                     * @property {number} GPU_SHARING_STRATEGY_UNSPECIFIED=0 GPU_SHARING_STRATEGY_UNSPECIFIED value
                     * @property {number} TIME_SHARING=1 TIME_SHARING value
                     */
                    GPUSharingConfig.GPUSharingStrategy = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "GPU_SHARING_STRATEGY_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "TIME_SHARING"] = 1;
                        return values;
                    })();
    
                    return GPUSharingConfig;
                })();
    
                v1.WorkloadMetadataConfig = (function() {
    
                    /**
                     * Properties of a WorkloadMetadataConfig.
                     * @memberof google.container.v1
                     * @interface IWorkloadMetadataConfig
                     * @property {google.container.v1.WorkloadMetadataConfig.Mode|null} [mode] WorkloadMetadataConfig mode
                     */
    
                    /**
                     * Constructs a new WorkloadMetadataConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a WorkloadMetadataConfig.
                     * @implements IWorkloadMetadataConfig
                     * @constructor
                     * @param {google.container.v1.IWorkloadMetadataConfig=} [properties] Properties to set
                     */
                    function WorkloadMetadataConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * WorkloadMetadataConfig mode.
                     * @member {google.container.v1.WorkloadMetadataConfig.Mode} mode
                     * @memberof google.container.v1.WorkloadMetadataConfig
                     * @instance
                     */
                    WorkloadMetadataConfig.prototype.mode = 0;
    
                    /**
                     * Creates a new WorkloadMetadataConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.WorkloadMetadataConfig
                     * @static
                     * @param {google.container.v1.IWorkloadMetadataConfig=} [properties] Properties to set
                     * @returns {google.container.v1.WorkloadMetadataConfig} WorkloadMetadataConfig instance
                     */
                    WorkloadMetadataConfig.create = function create(properties) {
                        return new WorkloadMetadataConfig(properties);
                    };
    
                    /**
                     * Encodes the specified WorkloadMetadataConfig message. Does not implicitly {@link google.container.v1.WorkloadMetadataConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.WorkloadMetadataConfig
                     * @static
                     * @param {google.container.v1.IWorkloadMetadataConfig} message WorkloadMetadataConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    WorkloadMetadataConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.mode != null && Object.hasOwnProperty.call(message, "mode"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.mode);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified WorkloadMetadataConfig message, length delimited. Does not implicitly {@link google.container.v1.WorkloadMetadataConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.WorkloadMetadataConfig
                     * @static
                     * @param {google.container.v1.IWorkloadMetadataConfig} message WorkloadMetadataConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    WorkloadMetadataConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a WorkloadMetadataConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.WorkloadMetadataConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.WorkloadMetadataConfig} WorkloadMetadataConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    WorkloadMetadataConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.WorkloadMetadataConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 2: {
                                    message.mode = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a WorkloadMetadataConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.WorkloadMetadataConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.WorkloadMetadataConfig} WorkloadMetadataConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    WorkloadMetadataConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a WorkloadMetadataConfig message.
                     * @function verify
                     * @memberof google.container.v1.WorkloadMetadataConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    WorkloadMetadataConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.mode != null && message.hasOwnProperty("mode"))
                            switch (message.mode) {
                            default:
                                return "mode: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates a WorkloadMetadataConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.WorkloadMetadataConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.WorkloadMetadataConfig} WorkloadMetadataConfig
                     */
                    WorkloadMetadataConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.WorkloadMetadataConfig)
                            return object;
                        var message = new $root.google.container.v1.WorkloadMetadataConfig();
                        switch (object.mode) {
                        default:
                            if (typeof object.mode === "number") {
                                message.mode = object.mode;
                                break;
                            }
                            break;
                        case "MODE_UNSPECIFIED":
                        case 0:
                            message.mode = 0;
                            break;
                        case "GCE_METADATA":
                        case 1:
                            message.mode = 1;
                            break;
                        case "GKE_METADATA":
                        case 2:
                            message.mode = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a WorkloadMetadataConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.WorkloadMetadataConfig
                     * @static
                     * @param {google.container.v1.WorkloadMetadataConfig} message WorkloadMetadataConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    WorkloadMetadataConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.mode = options.enums === String ? "MODE_UNSPECIFIED" : 0;
                        if (message.mode != null && message.hasOwnProperty("mode"))
                            object.mode = options.enums === String ? $root.google.container.v1.WorkloadMetadataConfig.Mode[message.mode] === undefined ? message.mode : $root.google.container.v1.WorkloadMetadataConfig.Mode[message.mode] : message.mode;
                        return object;
                    };
    
                    /**
                     * Converts this WorkloadMetadataConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.WorkloadMetadataConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    WorkloadMetadataConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for WorkloadMetadataConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.WorkloadMetadataConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    WorkloadMetadataConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.WorkloadMetadataConfig";
                    };
    
                    /**
                     * Mode enum.
                     * @name google.container.v1.WorkloadMetadataConfig.Mode
                     * @enum {number}
                     * @property {number} MODE_UNSPECIFIED=0 MODE_UNSPECIFIED value
                     * @property {number} GCE_METADATA=1 GCE_METADATA value
                     * @property {number} GKE_METADATA=2 GKE_METADATA value
                     */
                    WorkloadMetadataConfig.Mode = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "MODE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "GCE_METADATA"] = 1;
                        values[valuesById[2] = "GKE_METADATA"] = 2;
                        return values;
                    })();
    
                    return WorkloadMetadataConfig;
                })();
    
                v1.SetNetworkPolicyRequest = (function() {
    
                    /**
                     * Properties of a SetNetworkPolicyRequest.
                     * @memberof google.container.v1
                     * @interface ISetNetworkPolicyRequest
                     * @property {string|null} [projectId] SetNetworkPolicyRequest projectId
                     * @property {string|null} [zone] SetNetworkPolicyRequest zone
                     * @property {string|null} [clusterId] SetNetworkPolicyRequest clusterId
                     * @property {google.container.v1.INetworkPolicy|null} [networkPolicy] SetNetworkPolicyRequest networkPolicy
                     * @property {string|null} [name] SetNetworkPolicyRequest name
                     */
    
                    /**
                     * Constructs a new SetNetworkPolicyRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a SetNetworkPolicyRequest.
                     * @implements ISetNetworkPolicyRequest
                     * @constructor
                     * @param {google.container.v1.ISetNetworkPolicyRequest=} [properties] Properties to set
                     */
                    function SetNetworkPolicyRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * SetNetworkPolicyRequest projectId.
                     * @member {string} projectId
                     * @memberof google.container.v1.SetNetworkPolicyRequest
                     * @instance
                     */
                    SetNetworkPolicyRequest.prototype.projectId = "";
    
                    /**
                     * SetNetworkPolicyRequest zone.
                     * @member {string} zone
                     * @memberof google.container.v1.SetNetworkPolicyRequest
                     * @instance
                     */
                    SetNetworkPolicyRequest.prototype.zone = "";
    
                    /**
                     * SetNetworkPolicyRequest clusterId.
                     * @member {string} clusterId
                     * @memberof google.container.v1.SetNetworkPolicyRequest
                     * @instance
                     */
                    SetNetworkPolicyRequest.prototype.clusterId = "";
    
                    /**
                     * SetNetworkPolicyRequest networkPolicy.
                     * @member {google.container.v1.INetworkPolicy|null|undefined} networkPolicy
                     * @memberof google.container.v1.SetNetworkPolicyRequest
                     * @instance
                     */
                    SetNetworkPolicyRequest.prototype.networkPolicy = null;
    
                    /**
                     * SetNetworkPolicyRequest name.
                     * @member {string} name
                     * @memberof google.container.v1.SetNetworkPolicyRequest
                     * @instance
                     */
                    SetNetworkPolicyRequest.prototype.name = "";
    
                    /**
                     * Creates a new SetNetworkPolicyRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.SetNetworkPolicyRequest
                     * @static
                     * @param {google.container.v1.ISetNetworkPolicyRequest=} [properties] Properties to set
                     * @returns {google.container.v1.SetNetworkPolicyRequest} SetNetworkPolicyRequest instance
                     */
                    SetNetworkPolicyRequest.create = function create(properties) {
                        return new SetNetworkPolicyRequest(properties);
                    };
    
                    /**
                     * Encodes the specified SetNetworkPolicyRequest message. Does not implicitly {@link google.container.v1.SetNetworkPolicyRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.SetNetworkPolicyRequest
                     * @static
                     * @param {google.container.v1.ISetNetworkPolicyRequest} message SetNetworkPolicyRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SetNetworkPolicyRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.clusterId != null && Object.hasOwnProperty.call(message, "clusterId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.clusterId);
                        if (message.networkPolicy != null && Object.hasOwnProperty.call(message, "networkPolicy"))
                            $root.google.container.v1.NetworkPolicy.encode(message.networkPolicy, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified SetNetworkPolicyRequest message, length delimited. Does not implicitly {@link google.container.v1.SetNetworkPolicyRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.SetNetworkPolicyRequest
                     * @static
                     * @param {google.container.v1.ISetNetworkPolicyRequest} message SetNetworkPolicyRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SetNetworkPolicyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a SetNetworkPolicyRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.SetNetworkPolicyRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.SetNetworkPolicyRequest} SetNetworkPolicyRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SetNetworkPolicyRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.SetNetworkPolicyRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.projectId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.clusterId = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.networkPolicy = $root.google.container.v1.NetworkPolicy.decode(reader, reader.uint32());
                                    break;
                                }
                            case 6: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a SetNetworkPolicyRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.SetNetworkPolicyRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.SetNetworkPolicyRequest} SetNetworkPolicyRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SetNetworkPolicyRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a SetNetworkPolicyRequest message.
                     * @function verify
                     * @memberof google.container.v1.SetNetworkPolicyRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    SetNetworkPolicyRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            if (!$util.isString(message.projectId))
                                return "projectId: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            if (!$util.isString(message.clusterId))
                                return "clusterId: string expected";
                        if (message.networkPolicy != null && message.hasOwnProperty("networkPolicy")) {
                            var error = $root.google.container.v1.NetworkPolicy.verify(message.networkPolicy);
                            if (error)
                                return "networkPolicy." + error;
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a SetNetworkPolicyRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.SetNetworkPolicyRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.SetNetworkPolicyRequest} SetNetworkPolicyRequest
                     */
                    SetNetworkPolicyRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.SetNetworkPolicyRequest)
                            return object;
                        var message = new $root.google.container.v1.SetNetworkPolicyRequest();
                        if (object.projectId != null)
                            message.projectId = String(object.projectId);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.clusterId != null)
                            message.clusterId = String(object.clusterId);
                        if (object.networkPolicy != null) {
                            if (typeof object.networkPolicy !== "object")
                                throw TypeError(".google.container.v1.SetNetworkPolicyRequest.networkPolicy: object expected");
                            message.networkPolicy = $root.google.container.v1.NetworkPolicy.fromObject(object.networkPolicy);
                        }
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a SetNetworkPolicyRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.SetNetworkPolicyRequest
                     * @static
                     * @param {google.container.v1.SetNetworkPolicyRequest} message SetNetworkPolicyRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    SetNetworkPolicyRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.projectId = "";
                            object.zone = "";
                            object.clusterId = "";
                            object.networkPolicy = null;
                            object.name = "";
                        }
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            object.projectId = message.projectId;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            object.clusterId = message.clusterId;
                        if (message.networkPolicy != null && message.hasOwnProperty("networkPolicy"))
                            object.networkPolicy = $root.google.container.v1.NetworkPolicy.toObject(message.networkPolicy, options);
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this SetNetworkPolicyRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.SetNetworkPolicyRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    SetNetworkPolicyRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for SetNetworkPolicyRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.SetNetworkPolicyRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    SetNetworkPolicyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.SetNetworkPolicyRequest";
                    };
    
                    return SetNetworkPolicyRequest;
                })();
    
                v1.SetMaintenancePolicyRequest = (function() {
    
                    /**
                     * Properties of a SetMaintenancePolicyRequest.
                     * @memberof google.container.v1
                     * @interface ISetMaintenancePolicyRequest
                     * @property {string|null} [projectId] SetMaintenancePolicyRequest projectId
                     * @property {string|null} [zone] SetMaintenancePolicyRequest zone
                     * @property {string|null} [clusterId] SetMaintenancePolicyRequest clusterId
                     * @property {google.container.v1.IMaintenancePolicy|null} [maintenancePolicy] SetMaintenancePolicyRequest maintenancePolicy
                     * @property {string|null} [name] SetMaintenancePolicyRequest name
                     */
    
                    /**
                     * Constructs a new SetMaintenancePolicyRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a SetMaintenancePolicyRequest.
                     * @implements ISetMaintenancePolicyRequest
                     * @constructor
                     * @param {google.container.v1.ISetMaintenancePolicyRequest=} [properties] Properties to set
                     */
                    function SetMaintenancePolicyRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * SetMaintenancePolicyRequest projectId.
                     * @member {string} projectId
                     * @memberof google.container.v1.SetMaintenancePolicyRequest
                     * @instance
                     */
                    SetMaintenancePolicyRequest.prototype.projectId = "";
    
                    /**
                     * SetMaintenancePolicyRequest zone.
                     * @member {string} zone
                     * @memberof google.container.v1.SetMaintenancePolicyRequest
                     * @instance
                     */
                    SetMaintenancePolicyRequest.prototype.zone = "";
    
                    /**
                     * SetMaintenancePolicyRequest clusterId.
                     * @member {string} clusterId
                     * @memberof google.container.v1.SetMaintenancePolicyRequest
                     * @instance
                     */
                    SetMaintenancePolicyRequest.prototype.clusterId = "";
    
                    /**
                     * SetMaintenancePolicyRequest maintenancePolicy.
                     * @member {google.container.v1.IMaintenancePolicy|null|undefined} maintenancePolicy
                     * @memberof google.container.v1.SetMaintenancePolicyRequest
                     * @instance
                     */
                    SetMaintenancePolicyRequest.prototype.maintenancePolicy = null;
    
                    /**
                     * SetMaintenancePolicyRequest name.
                     * @member {string} name
                     * @memberof google.container.v1.SetMaintenancePolicyRequest
                     * @instance
                     */
                    SetMaintenancePolicyRequest.prototype.name = "";
    
                    /**
                     * Creates a new SetMaintenancePolicyRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.SetMaintenancePolicyRequest
                     * @static
                     * @param {google.container.v1.ISetMaintenancePolicyRequest=} [properties] Properties to set
                     * @returns {google.container.v1.SetMaintenancePolicyRequest} SetMaintenancePolicyRequest instance
                     */
                    SetMaintenancePolicyRequest.create = function create(properties) {
                        return new SetMaintenancePolicyRequest(properties);
                    };
    
                    /**
                     * Encodes the specified SetMaintenancePolicyRequest message. Does not implicitly {@link google.container.v1.SetMaintenancePolicyRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.SetMaintenancePolicyRequest
                     * @static
                     * @param {google.container.v1.ISetMaintenancePolicyRequest} message SetMaintenancePolicyRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SetMaintenancePolicyRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                        if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                        if (message.clusterId != null && Object.hasOwnProperty.call(message, "clusterId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.clusterId);
                        if (message.maintenancePolicy != null && Object.hasOwnProperty.call(message, "maintenancePolicy"))
                            $root.google.container.v1.MaintenancePolicy.encode(message.maintenancePolicy, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.name);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified SetMaintenancePolicyRequest message, length delimited. Does not implicitly {@link google.container.v1.SetMaintenancePolicyRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.SetMaintenancePolicyRequest
                     * @static
                     * @param {google.container.v1.ISetMaintenancePolicyRequest} message SetMaintenancePolicyRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SetMaintenancePolicyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a SetMaintenancePolicyRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.SetMaintenancePolicyRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.SetMaintenancePolicyRequest} SetMaintenancePolicyRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SetMaintenancePolicyRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.SetMaintenancePolicyRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.projectId = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.zone = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.clusterId = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.maintenancePolicy = $root.google.container.v1.MaintenancePolicy.decode(reader, reader.uint32());
                                    break;
                                }
                            case 5: {
                                    message.name = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a SetMaintenancePolicyRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.SetMaintenancePolicyRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.SetMaintenancePolicyRequest} SetMaintenancePolicyRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SetMaintenancePolicyRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a SetMaintenancePolicyRequest message.
                     * @function verify
                     * @memberof google.container.v1.SetMaintenancePolicyRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    SetMaintenancePolicyRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            if (!$util.isString(message.projectId))
                                return "projectId: string expected";
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            if (!$util.isString(message.zone))
                                return "zone: string expected";
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            if (!$util.isString(message.clusterId))
                                return "clusterId: string expected";
                        if (message.maintenancePolicy != null && message.hasOwnProperty("maintenancePolicy")) {
                            var error = $root.google.container.v1.MaintenancePolicy.verify(message.maintenancePolicy);
                            if (error)
                                return "maintenancePolicy." + error;
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a SetMaintenancePolicyRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.SetMaintenancePolicyRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.SetMaintenancePolicyRequest} SetMaintenancePolicyRequest
                     */
                    SetMaintenancePolicyRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.SetMaintenancePolicyRequest)
                            return object;
                        var message = new $root.google.container.v1.SetMaintenancePolicyRequest();
                        if (object.projectId != null)
                            message.projectId = String(object.projectId);
                        if (object.zone != null)
                            message.zone = String(object.zone);
                        if (object.clusterId != null)
                            message.clusterId = String(object.clusterId);
                        if (object.maintenancePolicy != null) {
                            if (typeof object.maintenancePolicy !== "object")
                                throw TypeError(".google.container.v1.SetMaintenancePolicyRequest.maintenancePolicy: object expected");
                            message.maintenancePolicy = $root.google.container.v1.MaintenancePolicy.fromObject(object.maintenancePolicy);
                        }
                        if (object.name != null)
                            message.name = String(object.name);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a SetMaintenancePolicyRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.SetMaintenancePolicyRequest
                     * @static
                     * @param {google.container.v1.SetMaintenancePolicyRequest} message SetMaintenancePolicyRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    SetMaintenancePolicyRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.projectId = "";
                            object.zone = "";
                            object.clusterId = "";
                            object.maintenancePolicy = null;
                            object.name = "";
                        }
                        if (message.projectId != null && message.hasOwnProperty("projectId"))
                            object.projectId = message.projectId;
                        if (message.zone != null && message.hasOwnProperty("zone"))
                            object.zone = message.zone;
                        if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                            object.clusterId = message.clusterId;
                        if (message.maintenancePolicy != null && message.hasOwnProperty("maintenancePolicy"))
                            object.maintenancePolicy = $root.google.container.v1.MaintenancePolicy.toObject(message.maintenancePolicy, options);
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        return object;
                    };
    
                    /**
                     * Converts this SetMaintenancePolicyRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.SetMaintenancePolicyRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    SetMaintenancePolicyRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for SetMaintenancePolicyRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.SetMaintenancePolicyRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    SetMaintenancePolicyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.SetMaintenancePolicyRequest";
                    };
    
                    return SetMaintenancePolicyRequest;
                })();
    
                v1.StatusCondition = (function() {
    
                    /**
                     * Properties of a StatusCondition.
                     * @memberof google.container.v1
                     * @interface IStatusCondition
                     * @property {google.container.v1.StatusCondition.Code|null} [code] StatusCondition code
                     * @property {string|null} [message] StatusCondition message
                     * @property {google.rpc.Code|null} [canonicalCode] StatusCondition canonicalCode
                     */
    
                    /**
                     * Constructs a new StatusCondition.
                     * @memberof google.container.v1
                     * @classdesc Represents a StatusCondition.
                     * @implements IStatusCondition
                     * @constructor
                     * @param {google.container.v1.IStatusCondition=} [properties] Properties to set
                     */
                    function StatusCondition(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * StatusCondition code.
                     * @member {google.container.v1.StatusCondition.Code} code
                     * @memberof google.container.v1.StatusCondition
                     * @instance
                     */
                    StatusCondition.prototype.code = 0;
    
                    /**
                     * StatusCondition message.
                     * @member {string} message
                     * @memberof google.container.v1.StatusCondition
                     * @instance
                     */
                    StatusCondition.prototype.message = "";
    
                    /**
                     * StatusCondition canonicalCode.
                     * @member {google.rpc.Code} canonicalCode
                     * @memberof google.container.v1.StatusCondition
                     * @instance
                     */
                    StatusCondition.prototype.canonicalCode = 0;
    
                    /**
                     * Creates a new StatusCondition instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.StatusCondition
                     * @static
                     * @param {google.container.v1.IStatusCondition=} [properties] Properties to set
                     * @returns {google.container.v1.StatusCondition} StatusCondition instance
                     */
                    StatusCondition.create = function create(properties) {
                        return new StatusCondition(properties);
                    };
    
                    /**
                     * Encodes the specified StatusCondition message. Does not implicitly {@link google.container.v1.StatusCondition.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.StatusCondition
                     * @static
                     * @param {google.container.v1.IStatusCondition} message StatusCondition message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    StatusCondition.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                        if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
                        if (message.canonicalCode != null && Object.hasOwnProperty.call(message, "canonicalCode"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.canonicalCode);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified StatusCondition message, length delimited. Does not implicitly {@link google.container.v1.StatusCondition.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.StatusCondition
                     * @static
                     * @param {google.container.v1.IStatusCondition} message StatusCondition message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    StatusCondition.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a StatusCondition message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.StatusCondition
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.StatusCondition} StatusCondition
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    StatusCondition.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.StatusCondition();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.code = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.message = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.canonicalCode = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a StatusCondition message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.StatusCondition
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.StatusCondition} StatusCondition
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    StatusCondition.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a StatusCondition message.
                     * @function verify
                     * @memberof google.container.v1.StatusCondition
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    StatusCondition.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.code != null && message.hasOwnProperty("code"))
                            switch (message.code) {
                            default:
                                return "code: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 7:
                            case 9:
                                break;
                            }
                        if (message.message != null && message.hasOwnProperty("message"))
                            if (!$util.isString(message.message))
                                return "message: string expected";
                        if (message.canonicalCode != null && message.hasOwnProperty("canonicalCode"))
                            switch (message.canonicalCode) {
                            default:
                                return "canonicalCode: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                            case 16:
                            case 8:
                            case 9:
                            case 10:
                            case 11:
                            case 12:
                            case 13:
                            case 14:
                            case 15:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates a StatusCondition message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.StatusCondition
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.StatusCondition} StatusCondition
                     */
                    StatusCondition.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.StatusCondition)
                            return object;
                        var message = new $root.google.container.v1.StatusCondition();
                        switch (object.code) {
                        default:
                            if (typeof object.code === "number") {
                                message.code = object.code;
                                break;
                            }
                            break;
                        case "UNKNOWN":
                        case 0:
                            message.code = 0;
                            break;
                        case "GCE_STOCKOUT":
                        case 1:
                            message.code = 1;
                            break;
                        case "GKE_SERVICE_ACCOUNT_DELETED":
                        case 2:
                            message.code = 2;
                            break;
                        case "GCE_QUOTA_EXCEEDED":
                        case 3:
                            message.code = 3;
                            break;
                        case "SET_BY_OPERATOR":
                        case 4:
                            message.code = 4;
                            break;
                        case "CLOUD_KMS_KEY_ERROR":
                        case 7:
                            message.code = 7;
                            break;
                        case "CA_EXPIRING":
                        case 9:
                            message.code = 9;
                            break;
                        }
                        if (object.message != null)
                            message.message = String(object.message);
                        switch (object.canonicalCode) {
                        default:
                            if (typeof object.canonicalCode === "number") {
                                message.canonicalCode = object.canonicalCode;
                                break;
                            }
                            break;
                        case "OK":
                        case 0:
                            message.canonicalCode = 0;
                            break;
                        case "CANCELLED":
                        case 1:
                            message.canonicalCode = 1;
                            break;
                        case "UNKNOWN":
                        case 2:
                            message.canonicalCode = 2;
                            break;
                        case "INVALID_ARGUMENT":
                        case 3:
                            message.canonicalCode = 3;
                            break;
                        case "DEADLINE_EXCEEDED":
                        case 4:
                            message.canonicalCode = 4;
                            break;
                        case "NOT_FOUND":
                        case 5:
                            message.canonicalCode = 5;
                            break;
                        case "ALREADY_EXISTS":
                        case 6:
                            message.canonicalCode = 6;
                            break;
                        case "PERMISSION_DENIED":
                        case 7:
                            message.canonicalCode = 7;
                            break;
                        case "UNAUTHENTICATED":
                        case 16:
                            message.canonicalCode = 16;
                            break;
                        case "RESOURCE_EXHAUSTED":
                        case 8:
                            message.canonicalCode = 8;
                            break;
                        case "FAILED_PRECONDITION":
                        case 9:
                            message.canonicalCode = 9;
                            break;
                        case "ABORTED":
                        case 10:
                            message.canonicalCode = 10;
                            break;
                        case "OUT_OF_RANGE":
                        case 11:
                            message.canonicalCode = 11;
                            break;
                        case "UNIMPLEMENTED":
                        case 12:
                            message.canonicalCode = 12;
                            break;
                        case "INTERNAL":
                        case 13:
                            message.canonicalCode = 13;
                            break;
                        case "UNAVAILABLE":
                        case 14:
                            message.canonicalCode = 14;
                            break;
                        case "DATA_LOSS":
                        case 15:
                            message.canonicalCode = 15;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a StatusCondition message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.StatusCondition
                     * @static
                     * @param {google.container.v1.StatusCondition} message StatusCondition
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    StatusCondition.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.code = options.enums === String ? "UNKNOWN" : 0;
                            object.message = "";
                            object.canonicalCode = options.enums === String ? "OK" : 0;
                        }
                        if (message.code != null && message.hasOwnProperty("code"))
                            object.code = options.enums === String ? $root.google.container.v1.StatusCondition.Code[message.code] === undefined ? message.code : $root.google.container.v1.StatusCondition.Code[message.code] : message.code;
                        if (message.message != null && message.hasOwnProperty("message"))
                            object.message = message.message;
                        if (message.canonicalCode != null && message.hasOwnProperty("canonicalCode"))
                            object.canonicalCode = options.enums === String ? $root.google.rpc.Code[message.canonicalCode] === undefined ? message.canonicalCode : $root.google.rpc.Code[message.canonicalCode] : message.canonicalCode;
                        return object;
                    };
    
                    /**
                     * Converts this StatusCondition to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.StatusCondition
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    StatusCondition.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for StatusCondition
                     * @function getTypeUrl
                     * @memberof google.container.v1.StatusCondition
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    StatusCondition.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.StatusCondition";
                    };
    
                    /**
                     * Code enum.
                     * @name google.container.v1.StatusCondition.Code
                     * @enum {number}
                     * @property {number} UNKNOWN=0 UNKNOWN value
                     * @property {number} GCE_STOCKOUT=1 GCE_STOCKOUT value
                     * @property {number} GKE_SERVICE_ACCOUNT_DELETED=2 GKE_SERVICE_ACCOUNT_DELETED value
                     * @property {number} GCE_QUOTA_EXCEEDED=3 GCE_QUOTA_EXCEEDED value
                     * @property {number} SET_BY_OPERATOR=4 SET_BY_OPERATOR value
                     * @property {number} CLOUD_KMS_KEY_ERROR=7 CLOUD_KMS_KEY_ERROR value
                     * @property {number} CA_EXPIRING=9 CA_EXPIRING value
                     */
                    StatusCondition.Code = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "UNKNOWN"] = 0;
                        values[valuesById[1] = "GCE_STOCKOUT"] = 1;
                        values[valuesById[2] = "GKE_SERVICE_ACCOUNT_DELETED"] = 2;
                        values[valuesById[3] = "GCE_QUOTA_EXCEEDED"] = 3;
                        values[valuesById[4] = "SET_BY_OPERATOR"] = 4;
                        values[valuesById[7] = "CLOUD_KMS_KEY_ERROR"] = 7;
                        values[valuesById[9] = "CA_EXPIRING"] = 9;
                        return values;
                    })();
    
                    return StatusCondition;
                })();
    
                v1.NetworkConfig = (function() {
    
                    /**
                     * Properties of a NetworkConfig.
                     * @memberof google.container.v1
                     * @interface INetworkConfig
                     * @property {string|null} [network] NetworkConfig network
                     * @property {string|null} [subnetwork] NetworkConfig subnetwork
                     * @property {boolean|null} [enableIntraNodeVisibility] NetworkConfig enableIntraNodeVisibility
                     * @property {google.container.v1.IDefaultSnatStatus|null} [defaultSnatStatus] NetworkConfig defaultSnatStatus
                     * @property {boolean|null} [enableL4ilbSubsetting] NetworkConfig enableL4ilbSubsetting
                     * @property {google.container.v1.DatapathProvider|null} [datapathProvider] NetworkConfig datapathProvider
                     * @property {google.container.v1.PrivateIPv6GoogleAccess|null} [privateIpv6GoogleAccess] NetworkConfig privateIpv6GoogleAccess
                     * @property {google.container.v1.IDNSConfig|null} [dnsConfig] NetworkConfig dnsConfig
                     * @property {google.container.v1.IServiceExternalIPsConfig|null} [serviceExternalIpsConfig] NetworkConfig serviceExternalIpsConfig
                     * @property {google.container.v1.IGatewayAPIConfig|null} [gatewayApiConfig] NetworkConfig gatewayApiConfig
                     */
    
                    /**
                     * Constructs a new NetworkConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a NetworkConfig.
                     * @implements INetworkConfig
                     * @constructor
                     * @param {google.container.v1.INetworkConfig=} [properties] Properties to set
                     */
                    function NetworkConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NetworkConfig network.
                     * @member {string} network
                     * @memberof google.container.v1.NetworkConfig
                     * @instance
                     */
                    NetworkConfig.prototype.network = "";
    
                    /**
                     * NetworkConfig subnetwork.
                     * @member {string} subnetwork
                     * @memberof google.container.v1.NetworkConfig
                     * @instance
                     */
                    NetworkConfig.prototype.subnetwork = "";
    
                    /**
                     * NetworkConfig enableIntraNodeVisibility.
                     * @member {boolean} enableIntraNodeVisibility
                     * @memberof google.container.v1.NetworkConfig
                     * @instance
                     */
                    NetworkConfig.prototype.enableIntraNodeVisibility = false;
    
                    /**
                     * NetworkConfig defaultSnatStatus.
                     * @member {google.container.v1.IDefaultSnatStatus|null|undefined} defaultSnatStatus
                     * @memberof google.container.v1.NetworkConfig
                     * @instance
                     */
                    NetworkConfig.prototype.defaultSnatStatus = null;
    
                    /**
                     * NetworkConfig enableL4ilbSubsetting.
                     * @member {boolean} enableL4ilbSubsetting
                     * @memberof google.container.v1.NetworkConfig
                     * @instance
                     */
                    NetworkConfig.prototype.enableL4ilbSubsetting = false;
    
                    /**
                     * NetworkConfig datapathProvider.
                     * @member {google.container.v1.DatapathProvider} datapathProvider
                     * @memberof google.container.v1.NetworkConfig
                     * @instance
                     */
                    NetworkConfig.prototype.datapathProvider = 0;
    
                    /**
                     * NetworkConfig privateIpv6GoogleAccess.
                     * @member {google.container.v1.PrivateIPv6GoogleAccess} privateIpv6GoogleAccess
                     * @memberof google.container.v1.NetworkConfig
                     * @instance
                     */
                    NetworkConfig.prototype.privateIpv6GoogleAccess = 0;
    
                    /**
                     * NetworkConfig dnsConfig.
                     * @member {google.container.v1.IDNSConfig|null|undefined} dnsConfig
                     * @memberof google.container.v1.NetworkConfig
                     * @instance
                     */
                    NetworkConfig.prototype.dnsConfig = null;
    
                    /**
                     * NetworkConfig serviceExternalIpsConfig.
                     * @member {google.container.v1.IServiceExternalIPsConfig|null|undefined} serviceExternalIpsConfig
                     * @memberof google.container.v1.NetworkConfig
                     * @instance
                     */
                    NetworkConfig.prototype.serviceExternalIpsConfig = null;
    
                    /**
                     * NetworkConfig gatewayApiConfig.
                     * @member {google.container.v1.IGatewayAPIConfig|null|undefined} gatewayApiConfig
                     * @memberof google.container.v1.NetworkConfig
                     * @instance
                     */
                    NetworkConfig.prototype.gatewayApiConfig = null;
    
                    /**
                     * Creates a new NetworkConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.NetworkConfig
                     * @static
                     * @param {google.container.v1.INetworkConfig=} [properties] Properties to set
                     * @returns {google.container.v1.NetworkConfig} NetworkConfig instance
                     */
                    NetworkConfig.create = function create(properties) {
                        return new NetworkConfig(properties);
                    };
    
                    /**
                     * Encodes the specified NetworkConfig message. Does not implicitly {@link google.container.v1.NetworkConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.NetworkConfig
                     * @static
                     * @param {google.container.v1.INetworkConfig} message NetworkConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NetworkConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.network != null && Object.hasOwnProperty.call(message, "network"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.network);
                        if (message.subnetwork != null && Object.hasOwnProperty.call(message, "subnetwork"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.subnetwork);
                        if (message.enableIntraNodeVisibility != null && Object.hasOwnProperty.call(message, "enableIntraNodeVisibility"))
                            writer.uint32(/* id 5, wireType 0 =*/40).bool(message.enableIntraNodeVisibility);
                        if (message.defaultSnatStatus != null && Object.hasOwnProperty.call(message, "defaultSnatStatus"))
                            $root.google.container.v1.DefaultSnatStatus.encode(message.defaultSnatStatus, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                        if (message.enableL4ilbSubsetting != null && Object.hasOwnProperty.call(message, "enableL4ilbSubsetting"))
                            writer.uint32(/* id 10, wireType 0 =*/80).bool(message.enableL4ilbSubsetting);
                        if (message.datapathProvider != null && Object.hasOwnProperty.call(message, "datapathProvider"))
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.datapathProvider);
                        if (message.privateIpv6GoogleAccess != null && Object.hasOwnProperty.call(message, "privateIpv6GoogleAccess"))
                            writer.uint32(/* id 12, wireType 0 =*/96).int32(message.privateIpv6GoogleAccess);
                        if (message.dnsConfig != null && Object.hasOwnProperty.call(message, "dnsConfig"))
                            $root.google.container.v1.DNSConfig.encode(message.dnsConfig, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                        if (message.serviceExternalIpsConfig != null && Object.hasOwnProperty.call(message, "serviceExternalIpsConfig"))
                            $root.google.container.v1.ServiceExternalIPsConfig.encode(message.serviceExternalIpsConfig, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                        if (message.gatewayApiConfig != null && Object.hasOwnProperty.call(message, "gatewayApiConfig"))
                            $root.google.container.v1.GatewayAPIConfig.encode(message.gatewayApiConfig, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NetworkConfig message, length delimited. Does not implicitly {@link google.container.v1.NetworkConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.NetworkConfig
                     * @static
                     * @param {google.container.v1.INetworkConfig} message NetworkConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NetworkConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NetworkConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.NetworkConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.NetworkConfig} NetworkConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NetworkConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.NetworkConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.network = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.subnetwork = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.enableIntraNodeVisibility = reader.bool();
                                    break;
                                }
                            case 7: {
                                    message.defaultSnatStatus = $root.google.container.v1.DefaultSnatStatus.decode(reader, reader.uint32());
                                    break;
                                }
                            case 10: {
                                    message.enableL4ilbSubsetting = reader.bool();
                                    break;
                                }
                            case 11: {
                                    message.datapathProvider = reader.int32();
                                    break;
                                }
                            case 12: {
                                    message.privateIpv6GoogleAccess = reader.int32();
                                    break;
                                }
                            case 13: {
                                    message.dnsConfig = $root.google.container.v1.DNSConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 15: {
                                    message.serviceExternalIpsConfig = $root.google.container.v1.ServiceExternalIPsConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 16: {
                                    message.gatewayApiConfig = $root.google.container.v1.GatewayAPIConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a NetworkConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.NetworkConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.NetworkConfig} NetworkConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NetworkConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NetworkConfig message.
                     * @function verify
                     * @memberof google.container.v1.NetworkConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NetworkConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.network != null && message.hasOwnProperty("network"))
                            if (!$util.isString(message.network))
                                return "network: string expected";
                        if (message.subnetwork != null && message.hasOwnProperty("subnetwork"))
                            if (!$util.isString(message.subnetwork))
                                return "subnetwork: string expected";
                        if (message.enableIntraNodeVisibility != null && message.hasOwnProperty("enableIntraNodeVisibility"))
                            if (typeof message.enableIntraNodeVisibility !== "boolean")
                                return "enableIntraNodeVisibility: boolean expected";
                        if (message.defaultSnatStatus != null && message.hasOwnProperty("defaultSnatStatus")) {
                            var error = $root.google.container.v1.DefaultSnatStatus.verify(message.defaultSnatStatus);
                            if (error)
                                return "defaultSnatStatus." + error;
                        }
                        if (message.enableL4ilbSubsetting != null && message.hasOwnProperty("enableL4ilbSubsetting"))
                            if (typeof message.enableL4ilbSubsetting !== "boolean")
                                return "enableL4ilbSubsetting: boolean expected";
                        if (message.datapathProvider != null && message.hasOwnProperty("datapathProvider"))
                            switch (message.datapathProvider) {
                            default:
                                return "datapathProvider: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        if (message.privateIpv6GoogleAccess != null && message.hasOwnProperty("privateIpv6GoogleAccess"))
                            switch (message.privateIpv6GoogleAccess) {
                            default:
                                return "privateIpv6GoogleAccess: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                                break;
                            }
                        if (message.dnsConfig != null && message.hasOwnProperty("dnsConfig")) {
                            var error = $root.google.container.v1.DNSConfig.verify(message.dnsConfig);
                            if (error)
                                return "dnsConfig." + error;
                        }
                        if (message.serviceExternalIpsConfig != null && message.hasOwnProperty("serviceExternalIpsConfig")) {
                            var error = $root.google.container.v1.ServiceExternalIPsConfig.verify(message.serviceExternalIpsConfig);
                            if (error)
                                return "serviceExternalIpsConfig." + error;
                        }
                        if (message.gatewayApiConfig != null && message.hasOwnProperty("gatewayApiConfig")) {
                            var error = $root.google.container.v1.GatewayAPIConfig.verify(message.gatewayApiConfig);
                            if (error)
                                return "gatewayApiConfig." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a NetworkConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.NetworkConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.NetworkConfig} NetworkConfig
                     */
                    NetworkConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.NetworkConfig)
                            return object;
                        var message = new $root.google.container.v1.NetworkConfig();
                        if (object.network != null)
                            message.network = String(object.network);
                        if (object.subnetwork != null)
                            message.subnetwork = String(object.subnetwork);
                        if (object.enableIntraNodeVisibility != null)
                            message.enableIntraNodeVisibility = Boolean(object.enableIntraNodeVisibility);
                        if (object.defaultSnatStatus != null) {
                            if (typeof object.defaultSnatStatus !== "object")
                                throw TypeError(".google.container.v1.NetworkConfig.defaultSnatStatus: object expected");
                            message.defaultSnatStatus = $root.google.container.v1.DefaultSnatStatus.fromObject(object.defaultSnatStatus);
                        }
                        if (object.enableL4ilbSubsetting != null)
                            message.enableL4ilbSubsetting = Boolean(object.enableL4ilbSubsetting);
                        switch (object.datapathProvider) {
                        default:
                            if (typeof object.datapathProvider === "number") {
                                message.datapathProvider = object.datapathProvider;
                                break;
                            }
                            break;
                        case "DATAPATH_PROVIDER_UNSPECIFIED":
                        case 0:
                            message.datapathProvider = 0;
                            break;
                        case "LEGACY_DATAPATH":
                        case 1:
                            message.datapathProvider = 1;
                            break;
                        case "ADVANCED_DATAPATH":
                        case 2:
                            message.datapathProvider = 2;
                            break;
                        }
                        switch (object.privateIpv6GoogleAccess) {
                        default:
                            if (typeof object.privateIpv6GoogleAccess === "number") {
                                message.privateIpv6GoogleAccess = object.privateIpv6GoogleAccess;
                                break;
                            }
                            break;
                        case "PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED":
                        case 0:
                            message.privateIpv6GoogleAccess = 0;
                            break;
                        case "PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED":
                        case 1:
                            message.privateIpv6GoogleAccess = 1;
                            break;
                        case "PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE":
                        case 2:
                            message.privateIpv6GoogleAccess = 2;
                            break;
                        case "PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL":
                        case 3:
                            message.privateIpv6GoogleAccess = 3;
                            break;
                        }
                        if (object.dnsConfig != null) {
                            if (typeof object.dnsConfig !== "object")
                                throw TypeError(".google.container.v1.NetworkConfig.dnsConfig: object expected");
                            message.dnsConfig = $root.google.container.v1.DNSConfig.fromObject(object.dnsConfig);
                        }
                        if (object.serviceExternalIpsConfig != null) {
                            if (typeof object.serviceExternalIpsConfig !== "object")
                                throw TypeError(".google.container.v1.NetworkConfig.serviceExternalIpsConfig: object expected");
                            message.serviceExternalIpsConfig = $root.google.container.v1.ServiceExternalIPsConfig.fromObject(object.serviceExternalIpsConfig);
                        }
                        if (object.gatewayApiConfig != null) {
                            if (typeof object.gatewayApiConfig !== "object")
                                throw TypeError(".google.container.v1.NetworkConfig.gatewayApiConfig: object expected");
                            message.gatewayApiConfig = $root.google.container.v1.GatewayAPIConfig.fromObject(object.gatewayApiConfig);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NetworkConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.NetworkConfig
                     * @static
                     * @param {google.container.v1.NetworkConfig} message NetworkConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NetworkConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.network = "";
                            object.subnetwork = "";
                            object.enableIntraNodeVisibility = false;
                            object.defaultSnatStatus = null;
                            object.enableL4ilbSubsetting = false;
                            object.datapathProvider = options.enums === String ? "DATAPATH_PROVIDER_UNSPECIFIED" : 0;
                            object.privateIpv6GoogleAccess = options.enums === String ? "PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED" : 0;
                            object.dnsConfig = null;
                            object.serviceExternalIpsConfig = null;
                            object.gatewayApiConfig = null;
                        }
                        if (message.network != null && message.hasOwnProperty("network"))
                            object.network = message.network;
                        if (message.subnetwork != null && message.hasOwnProperty("subnetwork"))
                            object.subnetwork = message.subnetwork;
                        if (message.enableIntraNodeVisibility != null && message.hasOwnProperty("enableIntraNodeVisibility"))
                            object.enableIntraNodeVisibility = message.enableIntraNodeVisibility;
                        if (message.defaultSnatStatus != null && message.hasOwnProperty("defaultSnatStatus"))
                            object.defaultSnatStatus = $root.google.container.v1.DefaultSnatStatus.toObject(message.defaultSnatStatus, options);
                        if (message.enableL4ilbSubsetting != null && message.hasOwnProperty("enableL4ilbSubsetting"))
                            object.enableL4ilbSubsetting = message.enableL4ilbSubsetting;
                        if (message.datapathProvider != null && message.hasOwnProperty("datapathProvider"))
                            object.datapathProvider = options.enums === String ? $root.google.container.v1.DatapathProvider[message.datapathProvider] === undefined ? message.datapathProvider : $root.google.container.v1.DatapathProvider[message.datapathProvider] : message.datapathProvider;
                        if (message.privateIpv6GoogleAccess != null && message.hasOwnProperty("privateIpv6GoogleAccess"))
                            object.privateIpv6GoogleAccess = options.enums === String ? $root.google.container.v1.PrivateIPv6GoogleAccess[message.privateIpv6GoogleAccess] === undefined ? message.privateIpv6GoogleAccess : $root.google.container.v1.PrivateIPv6GoogleAccess[message.privateIpv6GoogleAccess] : message.privateIpv6GoogleAccess;
                        if (message.dnsConfig != null && message.hasOwnProperty("dnsConfig"))
                            object.dnsConfig = $root.google.container.v1.DNSConfig.toObject(message.dnsConfig, options);
                        if (message.serviceExternalIpsConfig != null && message.hasOwnProperty("serviceExternalIpsConfig"))
                            object.serviceExternalIpsConfig = $root.google.container.v1.ServiceExternalIPsConfig.toObject(message.serviceExternalIpsConfig, options);
                        if (message.gatewayApiConfig != null && message.hasOwnProperty("gatewayApiConfig"))
                            object.gatewayApiConfig = $root.google.container.v1.GatewayAPIConfig.toObject(message.gatewayApiConfig, options);
                        return object;
                    };
    
                    /**
                     * Converts this NetworkConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.NetworkConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NetworkConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NetworkConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.NetworkConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NetworkConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.NetworkConfig";
                    };
    
                    return NetworkConfig;
                })();
    
                v1.GatewayAPIConfig = (function() {
    
                    /**
                     * Properties of a GatewayAPIConfig.
                     * @memberof google.container.v1
                     * @interface IGatewayAPIConfig
                     * @property {google.container.v1.GatewayAPIConfig.Channel|null} [channel] GatewayAPIConfig channel
                     */
    
                    /**
                     * Constructs a new GatewayAPIConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a GatewayAPIConfig.
                     * @implements IGatewayAPIConfig
                     * @constructor
                     * @param {google.container.v1.IGatewayAPIConfig=} [properties] Properties to set
                     */
                    function GatewayAPIConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GatewayAPIConfig channel.
                     * @member {google.container.v1.GatewayAPIConfig.Channel} channel
                     * @memberof google.container.v1.GatewayAPIConfig
                     * @instance
                     */
                    GatewayAPIConfig.prototype.channel = 0;
    
                    /**
                     * Creates a new GatewayAPIConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.GatewayAPIConfig
                     * @static
                     * @param {google.container.v1.IGatewayAPIConfig=} [properties] Properties to set
                     * @returns {google.container.v1.GatewayAPIConfig} GatewayAPIConfig instance
                     */
                    GatewayAPIConfig.create = function create(properties) {
                        return new GatewayAPIConfig(properties);
                    };
    
                    /**
                     * Encodes the specified GatewayAPIConfig message. Does not implicitly {@link google.container.v1.GatewayAPIConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.GatewayAPIConfig
                     * @static
                     * @param {google.container.v1.IGatewayAPIConfig} message GatewayAPIConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GatewayAPIConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.channel != null && Object.hasOwnProperty.call(message, "channel"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.channel);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GatewayAPIConfig message, length delimited. Does not implicitly {@link google.container.v1.GatewayAPIConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.GatewayAPIConfig
                     * @static
                     * @param {google.container.v1.IGatewayAPIConfig} message GatewayAPIConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GatewayAPIConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GatewayAPIConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.GatewayAPIConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.GatewayAPIConfig} GatewayAPIConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GatewayAPIConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.GatewayAPIConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.channel = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GatewayAPIConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.GatewayAPIConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.GatewayAPIConfig} GatewayAPIConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GatewayAPIConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GatewayAPIConfig message.
                     * @function verify
                     * @memberof google.container.v1.GatewayAPIConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GatewayAPIConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.channel != null && message.hasOwnProperty("channel"))
                            switch (message.channel) {
                            default:
                                return "channel: enum value expected";
                            case 0:
                            case 1:
                            case 3:
                            case 4:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates a GatewayAPIConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.GatewayAPIConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.GatewayAPIConfig} GatewayAPIConfig
                     */
                    GatewayAPIConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.GatewayAPIConfig)
                            return object;
                        var message = new $root.google.container.v1.GatewayAPIConfig();
                        switch (object.channel) {
                        default:
                            if (typeof object.channel === "number") {
                                message.channel = object.channel;
                                break;
                            }
                            break;
                        case "CHANNEL_UNSPECIFIED":
                        case 0:
                            message.channel = 0;
                            break;
                        case "CHANNEL_DISABLED":
                        case 1:
                            message.channel = 1;
                            break;
                        case "CHANNEL_EXPERIMENTAL":
                        case 3:
                            message.channel = 3;
                            break;
                        case "CHANNEL_STANDARD":
                        case 4:
                            message.channel = 4;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GatewayAPIConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.GatewayAPIConfig
                     * @static
                     * @param {google.container.v1.GatewayAPIConfig} message GatewayAPIConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GatewayAPIConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.channel = options.enums === String ? "CHANNEL_UNSPECIFIED" : 0;
                        if (message.channel != null && message.hasOwnProperty("channel"))
                            object.channel = options.enums === String ? $root.google.container.v1.GatewayAPIConfig.Channel[message.channel] === undefined ? message.channel : $root.google.container.v1.GatewayAPIConfig.Channel[message.channel] : message.channel;
                        return object;
                    };
    
                    /**
                     * Converts this GatewayAPIConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.GatewayAPIConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GatewayAPIConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GatewayAPIConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.GatewayAPIConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GatewayAPIConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.GatewayAPIConfig";
                    };
    
                    /**
                     * Channel enum.
                     * @name google.container.v1.GatewayAPIConfig.Channel
                     * @enum {number}
                     * @property {number} CHANNEL_UNSPECIFIED=0 CHANNEL_UNSPECIFIED value
                     * @property {number} CHANNEL_DISABLED=1 CHANNEL_DISABLED value
                     * @property {number} CHANNEL_EXPERIMENTAL=3 CHANNEL_EXPERIMENTAL value
                     * @property {number} CHANNEL_STANDARD=4 CHANNEL_STANDARD value
                     */
                    GatewayAPIConfig.Channel = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "CHANNEL_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "CHANNEL_DISABLED"] = 1;
                        values[valuesById[3] = "CHANNEL_EXPERIMENTAL"] = 3;
                        values[valuesById[4] = "CHANNEL_STANDARD"] = 4;
                        return values;
                    })();
    
                    return GatewayAPIConfig;
                })();
    
                v1.ServiceExternalIPsConfig = (function() {
    
                    /**
                     * Properties of a ServiceExternalIPsConfig.
                     * @memberof google.container.v1
                     * @interface IServiceExternalIPsConfig
                     * @property {boolean|null} [enabled] ServiceExternalIPsConfig enabled
                     */
    
                    /**
                     * Constructs a new ServiceExternalIPsConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a ServiceExternalIPsConfig.
                     * @implements IServiceExternalIPsConfig
                     * @constructor
                     * @param {google.container.v1.IServiceExternalIPsConfig=} [properties] Properties to set
                     */
                    function ServiceExternalIPsConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ServiceExternalIPsConfig enabled.
                     * @member {boolean} enabled
                     * @memberof google.container.v1.ServiceExternalIPsConfig
                     * @instance
                     */
                    ServiceExternalIPsConfig.prototype.enabled = false;
    
                    /**
                     * Creates a new ServiceExternalIPsConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.ServiceExternalIPsConfig
                     * @static
                     * @param {google.container.v1.IServiceExternalIPsConfig=} [properties] Properties to set
                     * @returns {google.container.v1.ServiceExternalIPsConfig} ServiceExternalIPsConfig instance
                     */
                    ServiceExternalIPsConfig.create = function create(properties) {
                        return new ServiceExternalIPsConfig(properties);
                    };
    
                    /**
                     * Encodes the specified ServiceExternalIPsConfig message. Does not implicitly {@link google.container.v1.ServiceExternalIPsConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.ServiceExternalIPsConfig
                     * @static
                     * @param {google.container.v1.IServiceExternalIPsConfig} message ServiceExternalIPsConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ServiceExternalIPsConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ServiceExternalIPsConfig message, length delimited. Does not implicitly {@link google.container.v1.ServiceExternalIPsConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.ServiceExternalIPsConfig
                     * @static
                     * @param {google.container.v1.IServiceExternalIPsConfig} message ServiceExternalIPsConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ServiceExternalIPsConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ServiceExternalIPsConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.ServiceExternalIPsConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.ServiceExternalIPsConfig} ServiceExternalIPsConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ServiceExternalIPsConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.ServiceExternalIPsConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.enabled = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ServiceExternalIPsConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.ServiceExternalIPsConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.ServiceExternalIPsConfig} ServiceExternalIPsConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ServiceExternalIPsConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ServiceExternalIPsConfig message.
                     * @function verify
                     * @memberof google.container.v1.ServiceExternalIPsConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ServiceExternalIPsConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            if (typeof message.enabled !== "boolean")
                                return "enabled: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a ServiceExternalIPsConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.ServiceExternalIPsConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.ServiceExternalIPsConfig} ServiceExternalIPsConfig
                     */
                    ServiceExternalIPsConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.ServiceExternalIPsConfig)
                            return object;
                        var message = new $root.google.container.v1.ServiceExternalIPsConfig();
                        if (object.enabled != null)
                            message.enabled = Boolean(object.enabled);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ServiceExternalIPsConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.ServiceExternalIPsConfig
                     * @static
                     * @param {google.container.v1.ServiceExternalIPsConfig} message ServiceExternalIPsConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ServiceExternalIPsConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.enabled = false;
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            object.enabled = message.enabled;
                        return object;
                    };
    
                    /**
                     * Converts this ServiceExternalIPsConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.ServiceExternalIPsConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ServiceExternalIPsConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ServiceExternalIPsConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.ServiceExternalIPsConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ServiceExternalIPsConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.ServiceExternalIPsConfig";
                    };
    
                    return ServiceExternalIPsConfig;
                })();
    
                v1.GetOpenIDConfigRequest = (function() {
    
                    /**
                     * Properties of a GetOpenIDConfigRequest.
                     * @memberof google.container.v1
                     * @interface IGetOpenIDConfigRequest
                     * @property {string|null} [parent] GetOpenIDConfigRequest parent
                     */
    
                    /**
                     * Constructs a new GetOpenIDConfigRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a GetOpenIDConfigRequest.
                     * @implements IGetOpenIDConfigRequest
                     * @constructor
                     * @param {google.container.v1.IGetOpenIDConfigRequest=} [properties] Properties to set
                     */
                    function GetOpenIDConfigRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GetOpenIDConfigRequest parent.
                     * @member {string} parent
                     * @memberof google.container.v1.GetOpenIDConfigRequest
                     * @instance
                     */
                    GetOpenIDConfigRequest.prototype.parent = "";
    
                    /**
                     * Creates a new GetOpenIDConfigRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.GetOpenIDConfigRequest
                     * @static
                     * @param {google.container.v1.IGetOpenIDConfigRequest=} [properties] Properties to set
                     * @returns {google.container.v1.GetOpenIDConfigRequest} GetOpenIDConfigRequest instance
                     */
                    GetOpenIDConfigRequest.create = function create(properties) {
                        return new GetOpenIDConfigRequest(properties);
                    };
    
                    /**
                     * Encodes the specified GetOpenIDConfigRequest message. Does not implicitly {@link google.container.v1.GetOpenIDConfigRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.GetOpenIDConfigRequest
                     * @static
                     * @param {google.container.v1.IGetOpenIDConfigRequest} message GetOpenIDConfigRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetOpenIDConfigRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GetOpenIDConfigRequest message, length delimited. Does not implicitly {@link google.container.v1.GetOpenIDConfigRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.GetOpenIDConfigRequest
                     * @static
                     * @param {google.container.v1.IGetOpenIDConfigRequest} message GetOpenIDConfigRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetOpenIDConfigRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GetOpenIDConfigRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.GetOpenIDConfigRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.GetOpenIDConfigRequest} GetOpenIDConfigRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetOpenIDConfigRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.GetOpenIDConfigRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.parent = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GetOpenIDConfigRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.GetOpenIDConfigRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.GetOpenIDConfigRequest} GetOpenIDConfigRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetOpenIDConfigRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GetOpenIDConfigRequest message.
                     * @function verify
                     * @memberof google.container.v1.GetOpenIDConfigRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GetOpenIDConfigRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            if (!$util.isString(message.parent))
                                return "parent: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a GetOpenIDConfigRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.GetOpenIDConfigRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.GetOpenIDConfigRequest} GetOpenIDConfigRequest
                     */
                    GetOpenIDConfigRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.GetOpenIDConfigRequest)
                            return object;
                        var message = new $root.google.container.v1.GetOpenIDConfigRequest();
                        if (object.parent != null)
                            message.parent = String(object.parent);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GetOpenIDConfigRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.GetOpenIDConfigRequest
                     * @static
                     * @param {google.container.v1.GetOpenIDConfigRequest} message GetOpenIDConfigRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GetOpenIDConfigRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.parent = "";
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            object.parent = message.parent;
                        return object;
                    };
    
                    /**
                     * Converts this GetOpenIDConfigRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.GetOpenIDConfigRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GetOpenIDConfigRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GetOpenIDConfigRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.GetOpenIDConfigRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GetOpenIDConfigRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.GetOpenIDConfigRequest";
                    };
    
                    return GetOpenIDConfigRequest;
                })();
    
                v1.GetOpenIDConfigResponse = (function() {
    
                    /**
                     * Properties of a GetOpenIDConfigResponse.
                     * @memberof google.container.v1
                     * @interface IGetOpenIDConfigResponse
                     * @property {string|null} [issuer] GetOpenIDConfigResponse issuer
                     * @property {string|null} [jwksUri] GetOpenIDConfigResponse jwksUri
                     * @property {Array.<string>|null} [responseTypesSupported] GetOpenIDConfigResponse responseTypesSupported
                     * @property {Array.<string>|null} [subjectTypesSupported] GetOpenIDConfigResponse subjectTypesSupported
                     * @property {Array.<string>|null} [idTokenSigningAlgValuesSupported] GetOpenIDConfigResponse idTokenSigningAlgValuesSupported
                     * @property {Array.<string>|null} [claimsSupported] GetOpenIDConfigResponse claimsSupported
                     * @property {Array.<string>|null} [grantTypes] GetOpenIDConfigResponse grantTypes
                     */
    
                    /**
                     * Constructs a new GetOpenIDConfigResponse.
                     * @memberof google.container.v1
                     * @classdesc Represents a GetOpenIDConfigResponse.
                     * @implements IGetOpenIDConfigResponse
                     * @constructor
                     * @param {google.container.v1.IGetOpenIDConfigResponse=} [properties] Properties to set
                     */
                    function GetOpenIDConfigResponse(properties) {
                        this.responseTypesSupported = [];
                        this.subjectTypesSupported = [];
                        this.idTokenSigningAlgValuesSupported = [];
                        this.claimsSupported = [];
                        this.grantTypes = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GetOpenIDConfigResponse issuer.
                     * @member {string} issuer
                     * @memberof google.container.v1.GetOpenIDConfigResponse
                     * @instance
                     */
                    GetOpenIDConfigResponse.prototype.issuer = "";
    
                    /**
                     * GetOpenIDConfigResponse jwksUri.
                     * @member {string} jwksUri
                     * @memberof google.container.v1.GetOpenIDConfigResponse
                     * @instance
                     */
                    GetOpenIDConfigResponse.prototype.jwksUri = "";
    
                    /**
                     * GetOpenIDConfigResponse responseTypesSupported.
                     * @member {Array.<string>} responseTypesSupported
                     * @memberof google.container.v1.GetOpenIDConfigResponse
                     * @instance
                     */
                    GetOpenIDConfigResponse.prototype.responseTypesSupported = $util.emptyArray;
    
                    /**
                     * GetOpenIDConfigResponse subjectTypesSupported.
                     * @member {Array.<string>} subjectTypesSupported
                     * @memberof google.container.v1.GetOpenIDConfigResponse
                     * @instance
                     */
                    GetOpenIDConfigResponse.prototype.subjectTypesSupported = $util.emptyArray;
    
                    /**
                     * GetOpenIDConfigResponse idTokenSigningAlgValuesSupported.
                     * @member {Array.<string>} idTokenSigningAlgValuesSupported
                     * @memberof google.container.v1.GetOpenIDConfigResponse
                     * @instance
                     */
                    GetOpenIDConfigResponse.prototype.idTokenSigningAlgValuesSupported = $util.emptyArray;
    
                    /**
                     * GetOpenIDConfigResponse claimsSupported.
                     * @member {Array.<string>} claimsSupported
                     * @memberof google.container.v1.GetOpenIDConfigResponse
                     * @instance
                     */
                    GetOpenIDConfigResponse.prototype.claimsSupported = $util.emptyArray;
    
                    /**
                     * GetOpenIDConfigResponse grantTypes.
                     * @member {Array.<string>} grantTypes
                     * @memberof google.container.v1.GetOpenIDConfigResponse
                     * @instance
                     */
                    GetOpenIDConfigResponse.prototype.grantTypes = $util.emptyArray;
    
                    /**
                     * Creates a new GetOpenIDConfigResponse instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.GetOpenIDConfigResponse
                     * @static
                     * @param {google.container.v1.IGetOpenIDConfigResponse=} [properties] Properties to set
                     * @returns {google.container.v1.GetOpenIDConfigResponse} GetOpenIDConfigResponse instance
                     */
                    GetOpenIDConfigResponse.create = function create(properties) {
                        return new GetOpenIDConfigResponse(properties);
                    };
    
                    /**
                     * Encodes the specified GetOpenIDConfigResponse message. Does not implicitly {@link google.container.v1.GetOpenIDConfigResponse.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.GetOpenIDConfigResponse
                     * @static
                     * @param {google.container.v1.IGetOpenIDConfigResponse} message GetOpenIDConfigResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetOpenIDConfigResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.issuer != null && Object.hasOwnProperty.call(message, "issuer"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.issuer);
                        if (message.jwksUri != null && Object.hasOwnProperty.call(message, "jwksUri"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.jwksUri);
                        if (message.responseTypesSupported != null && message.responseTypesSupported.length)
                            for (var i = 0; i < message.responseTypesSupported.length; ++i)
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.responseTypesSupported[i]);
                        if (message.subjectTypesSupported != null && message.subjectTypesSupported.length)
                            for (var i = 0; i < message.subjectTypesSupported.length; ++i)
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.subjectTypesSupported[i]);
                        if (message.idTokenSigningAlgValuesSupported != null && message.idTokenSigningAlgValuesSupported.length)
                            for (var i = 0; i < message.idTokenSigningAlgValuesSupported.length; ++i)
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.idTokenSigningAlgValuesSupported[i]);
                        if (message.claimsSupported != null && message.claimsSupported.length)
                            for (var i = 0; i < message.claimsSupported.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.claimsSupported[i]);
                        if (message.grantTypes != null && message.grantTypes.length)
                            for (var i = 0; i < message.grantTypes.length; ++i)
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.grantTypes[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GetOpenIDConfigResponse message, length delimited. Does not implicitly {@link google.container.v1.GetOpenIDConfigResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.GetOpenIDConfigResponse
                     * @static
                     * @param {google.container.v1.IGetOpenIDConfigResponse} message GetOpenIDConfigResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetOpenIDConfigResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GetOpenIDConfigResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.GetOpenIDConfigResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.GetOpenIDConfigResponse} GetOpenIDConfigResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetOpenIDConfigResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.GetOpenIDConfigResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.issuer = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.jwksUri = reader.string();
                                    break;
                                }
                            case 3: {
                                    if (!(message.responseTypesSupported && message.responseTypesSupported.length))
                                        message.responseTypesSupported = [];
                                    message.responseTypesSupported.push(reader.string());
                                    break;
                                }
                            case 4: {
                                    if (!(message.subjectTypesSupported && message.subjectTypesSupported.length))
                                        message.subjectTypesSupported = [];
                                    message.subjectTypesSupported.push(reader.string());
                                    break;
                                }
                            case 5: {
                                    if (!(message.idTokenSigningAlgValuesSupported && message.idTokenSigningAlgValuesSupported.length))
                                        message.idTokenSigningAlgValuesSupported = [];
                                    message.idTokenSigningAlgValuesSupported.push(reader.string());
                                    break;
                                }
                            case 6: {
                                    if (!(message.claimsSupported && message.claimsSupported.length))
                                        message.claimsSupported = [];
                                    message.claimsSupported.push(reader.string());
                                    break;
                                }
                            case 7: {
                                    if (!(message.grantTypes && message.grantTypes.length))
                                        message.grantTypes = [];
                                    message.grantTypes.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GetOpenIDConfigResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.GetOpenIDConfigResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.GetOpenIDConfigResponse} GetOpenIDConfigResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetOpenIDConfigResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GetOpenIDConfigResponse message.
                     * @function verify
                     * @memberof google.container.v1.GetOpenIDConfigResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GetOpenIDConfigResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.issuer != null && message.hasOwnProperty("issuer"))
                            if (!$util.isString(message.issuer))
                                return "issuer: string expected";
                        if (message.jwksUri != null && message.hasOwnProperty("jwksUri"))
                            if (!$util.isString(message.jwksUri))
                                return "jwksUri: string expected";
                        if (message.responseTypesSupported != null && message.hasOwnProperty("responseTypesSupported")) {
                            if (!Array.isArray(message.responseTypesSupported))
                                return "responseTypesSupported: array expected";
                            for (var i = 0; i < message.responseTypesSupported.length; ++i)
                                if (!$util.isString(message.responseTypesSupported[i]))
                                    return "responseTypesSupported: string[] expected";
                        }
                        if (message.subjectTypesSupported != null && message.hasOwnProperty("subjectTypesSupported")) {
                            if (!Array.isArray(message.subjectTypesSupported))
                                return "subjectTypesSupported: array expected";
                            for (var i = 0; i < message.subjectTypesSupported.length; ++i)
                                if (!$util.isString(message.subjectTypesSupported[i]))
                                    return "subjectTypesSupported: string[] expected";
                        }
                        if (message.idTokenSigningAlgValuesSupported != null && message.hasOwnProperty("idTokenSigningAlgValuesSupported")) {
                            if (!Array.isArray(message.idTokenSigningAlgValuesSupported))
                                return "idTokenSigningAlgValuesSupported: array expected";
                            for (var i = 0; i < message.idTokenSigningAlgValuesSupported.length; ++i)
                                if (!$util.isString(message.idTokenSigningAlgValuesSupported[i]))
                                    return "idTokenSigningAlgValuesSupported: string[] expected";
                        }
                        if (message.claimsSupported != null && message.hasOwnProperty("claimsSupported")) {
                            if (!Array.isArray(message.claimsSupported))
                                return "claimsSupported: array expected";
                            for (var i = 0; i < message.claimsSupported.length; ++i)
                                if (!$util.isString(message.claimsSupported[i]))
                                    return "claimsSupported: string[] expected";
                        }
                        if (message.grantTypes != null && message.hasOwnProperty("grantTypes")) {
                            if (!Array.isArray(message.grantTypes))
                                return "grantTypes: array expected";
                            for (var i = 0; i < message.grantTypes.length; ++i)
                                if (!$util.isString(message.grantTypes[i]))
                                    return "grantTypes: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a GetOpenIDConfigResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.GetOpenIDConfigResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.GetOpenIDConfigResponse} GetOpenIDConfigResponse
                     */
                    GetOpenIDConfigResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.GetOpenIDConfigResponse)
                            return object;
                        var message = new $root.google.container.v1.GetOpenIDConfigResponse();
                        if (object.issuer != null)
                            message.issuer = String(object.issuer);
                        if (object.jwksUri != null)
                            message.jwksUri = String(object.jwksUri);
                        if (object.responseTypesSupported) {
                            if (!Array.isArray(object.responseTypesSupported))
                                throw TypeError(".google.container.v1.GetOpenIDConfigResponse.responseTypesSupported: array expected");
                            message.responseTypesSupported = [];
                            for (var i = 0; i < object.responseTypesSupported.length; ++i)
                                message.responseTypesSupported[i] = String(object.responseTypesSupported[i]);
                        }
                        if (object.subjectTypesSupported) {
                            if (!Array.isArray(object.subjectTypesSupported))
                                throw TypeError(".google.container.v1.GetOpenIDConfigResponse.subjectTypesSupported: array expected");
                            message.subjectTypesSupported = [];
                            for (var i = 0; i < object.subjectTypesSupported.length; ++i)
                                message.subjectTypesSupported[i] = String(object.subjectTypesSupported[i]);
                        }
                        if (object.idTokenSigningAlgValuesSupported) {
                            if (!Array.isArray(object.idTokenSigningAlgValuesSupported))
                                throw TypeError(".google.container.v1.GetOpenIDConfigResponse.idTokenSigningAlgValuesSupported: array expected");
                            message.idTokenSigningAlgValuesSupported = [];
                            for (var i = 0; i < object.idTokenSigningAlgValuesSupported.length; ++i)
                                message.idTokenSigningAlgValuesSupported[i] = String(object.idTokenSigningAlgValuesSupported[i]);
                        }
                        if (object.claimsSupported) {
                            if (!Array.isArray(object.claimsSupported))
                                throw TypeError(".google.container.v1.GetOpenIDConfigResponse.claimsSupported: array expected");
                            message.claimsSupported = [];
                            for (var i = 0; i < object.claimsSupported.length; ++i)
                                message.claimsSupported[i] = String(object.claimsSupported[i]);
                        }
                        if (object.grantTypes) {
                            if (!Array.isArray(object.grantTypes))
                                throw TypeError(".google.container.v1.GetOpenIDConfigResponse.grantTypes: array expected");
                            message.grantTypes = [];
                            for (var i = 0; i < object.grantTypes.length; ++i)
                                message.grantTypes[i] = String(object.grantTypes[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GetOpenIDConfigResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.GetOpenIDConfigResponse
                     * @static
                     * @param {google.container.v1.GetOpenIDConfigResponse} message GetOpenIDConfigResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GetOpenIDConfigResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.responseTypesSupported = [];
                            object.subjectTypesSupported = [];
                            object.idTokenSigningAlgValuesSupported = [];
                            object.claimsSupported = [];
                            object.grantTypes = [];
                        }
                        if (options.defaults) {
                            object.issuer = "";
                            object.jwksUri = "";
                        }
                        if (message.issuer != null && message.hasOwnProperty("issuer"))
                            object.issuer = message.issuer;
                        if (message.jwksUri != null && message.hasOwnProperty("jwksUri"))
                            object.jwksUri = message.jwksUri;
                        if (message.responseTypesSupported && message.responseTypesSupported.length) {
                            object.responseTypesSupported = [];
                            for (var j = 0; j < message.responseTypesSupported.length; ++j)
                                object.responseTypesSupported[j] = message.responseTypesSupported[j];
                        }
                        if (message.subjectTypesSupported && message.subjectTypesSupported.length) {
                            object.subjectTypesSupported = [];
                            for (var j = 0; j < message.subjectTypesSupported.length; ++j)
                                object.subjectTypesSupported[j] = message.subjectTypesSupported[j];
                        }
                        if (message.idTokenSigningAlgValuesSupported && message.idTokenSigningAlgValuesSupported.length) {
                            object.idTokenSigningAlgValuesSupported = [];
                            for (var j = 0; j < message.idTokenSigningAlgValuesSupported.length; ++j)
                                object.idTokenSigningAlgValuesSupported[j] = message.idTokenSigningAlgValuesSupported[j];
                        }
                        if (message.claimsSupported && message.claimsSupported.length) {
                            object.claimsSupported = [];
                            for (var j = 0; j < message.claimsSupported.length; ++j)
                                object.claimsSupported[j] = message.claimsSupported[j];
                        }
                        if (message.grantTypes && message.grantTypes.length) {
                            object.grantTypes = [];
                            for (var j = 0; j < message.grantTypes.length; ++j)
                                object.grantTypes[j] = message.grantTypes[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this GetOpenIDConfigResponse to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.GetOpenIDConfigResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GetOpenIDConfigResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GetOpenIDConfigResponse
                     * @function getTypeUrl
                     * @memberof google.container.v1.GetOpenIDConfigResponse
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GetOpenIDConfigResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.GetOpenIDConfigResponse";
                    };
    
                    return GetOpenIDConfigResponse;
                })();
    
                v1.GetJSONWebKeysRequest = (function() {
    
                    /**
                     * Properties of a GetJSONWebKeysRequest.
                     * @memberof google.container.v1
                     * @interface IGetJSONWebKeysRequest
                     * @property {string|null} [parent] GetJSONWebKeysRequest parent
                     */
    
                    /**
                     * Constructs a new GetJSONWebKeysRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a GetJSONWebKeysRequest.
                     * @implements IGetJSONWebKeysRequest
                     * @constructor
                     * @param {google.container.v1.IGetJSONWebKeysRequest=} [properties] Properties to set
                     */
                    function GetJSONWebKeysRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GetJSONWebKeysRequest parent.
                     * @member {string} parent
                     * @memberof google.container.v1.GetJSONWebKeysRequest
                     * @instance
                     */
                    GetJSONWebKeysRequest.prototype.parent = "";
    
                    /**
                     * Creates a new GetJSONWebKeysRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.GetJSONWebKeysRequest
                     * @static
                     * @param {google.container.v1.IGetJSONWebKeysRequest=} [properties] Properties to set
                     * @returns {google.container.v1.GetJSONWebKeysRequest} GetJSONWebKeysRequest instance
                     */
                    GetJSONWebKeysRequest.create = function create(properties) {
                        return new GetJSONWebKeysRequest(properties);
                    };
    
                    /**
                     * Encodes the specified GetJSONWebKeysRequest message. Does not implicitly {@link google.container.v1.GetJSONWebKeysRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.GetJSONWebKeysRequest
                     * @static
                     * @param {google.container.v1.IGetJSONWebKeysRequest} message GetJSONWebKeysRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetJSONWebKeysRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GetJSONWebKeysRequest message, length delimited. Does not implicitly {@link google.container.v1.GetJSONWebKeysRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.GetJSONWebKeysRequest
                     * @static
                     * @param {google.container.v1.IGetJSONWebKeysRequest} message GetJSONWebKeysRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetJSONWebKeysRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GetJSONWebKeysRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.GetJSONWebKeysRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.GetJSONWebKeysRequest} GetJSONWebKeysRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetJSONWebKeysRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.GetJSONWebKeysRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.parent = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GetJSONWebKeysRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.GetJSONWebKeysRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.GetJSONWebKeysRequest} GetJSONWebKeysRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetJSONWebKeysRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GetJSONWebKeysRequest message.
                     * @function verify
                     * @memberof google.container.v1.GetJSONWebKeysRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GetJSONWebKeysRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            if (!$util.isString(message.parent))
                                return "parent: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a GetJSONWebKeysRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.GetJSONWebKeysRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.GetJSONWebKeysRequest} GetJSONWebKeysRequest
                     */
                    GetJSONWebKeysRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.GetJSONWebKeysRequest)
                            return object;
                        var message = new $root.google.container.v1.GetJSONWebKeysRequest();
                        if (object.parent != null)
                            message.parent = String(object.parent);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GetJSONWebKeysRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.GetJSONWebKeysRequest
                     * @static
                     * @param {google.container.v1.GetJSONWebKeysRequest} message GetJSONWebKeysRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GetJSONWebKeysRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.parent = "";
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            object.parent = message.parent;
                        return object;
                    };
    
                    /**
                     * Converts this GetJSONWebKeysRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.GetJSONWebKeysRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GetJSONWebKeysRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GetJSONWebKeysRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.GetJSONWebKeysRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GetJSONWebKeysRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.GetJSONWebKeysRequest";
                    };
    
                    return GetJSONWebKeysRequest;
                })();
    
                v1.Jwk = (function() {
    
                    /**
                     * Properties of a Jwk.
                     * @memberof google.container.v1
                     * @interface IJwk
                     * @property {string|null} [kty] Jwk kty
                     * @property {string|null} [alg] Jwk alg
                     * @property {string|null} [use] Jwk use
                     * @property {string|null} [kid] Jwk kid
                     * @property {string|null} [n] Jwk n
                     * @property {string|null} [e] Jwk e
                     * @property {string|null} [x] Jwk x
                     * @property {string|null} [y] Jwk y
                     * @property {string|null} [crv] Jwk crv
                     */
    
                    /**
                     * Constructs a new Jwk.
                     * @memberof google.container.v1
                     * @classdesc Represents a Jwk.
                     * @implements IJwk
                     * @constructor
                     * @param {google.container.v1.IJwk=} [properties] Properties to set
                     */
                    function Jwk(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Jwk kty.
                     * @member {string} kty
                     * @memberof google.container.v1.Jwk
                     * @instance
                     */
                    Jwk.prototype.kty = "";
    
                    /**
                     * Jwk alg.
                     * @member {string} alg
                     * @memberof google.container.v1.Jwk
                     * @instance
                     */
                    Jwk.prototype.alg = "";
    
                    /**
                     * Jwk use.
                     * @member {string} use
                     * @memberof google.container.v1.Jwk
                     * @instance
                     */
                    Jwk.prototype.use = "";
    
                    /**
                     * Jwk kid.
                     * @member {string} kid
                     * @memberof google.container.v1.Jwk
                     * @instance
                     */
                    Jwk.prototype.kid = "";
    
                    /**
                     * Jwk n.
                     * @member {string} n
                     * @memberof google.container.v1.Jwk
                     * @instance
                     */
                    Jwk.prototype.n = "";
    
                    /**
                     * Jwk e.
                     * @member {string} e
                     * @memberof google.container.v1.Jwk
                     * @instance
                     */
                    Jwk.prototype.e = "";
    
                    /**
                     * Jwk x.
                     * @member {string} x
                     * @memberof google.container.v1.Jwk
                     * @instance
                     */
                    Jwk.prototype.x = "";
    
                    /**
                     * Jwk y.
                     * @member {string} y
                     * @memberof google.container.v1.Jwk
                     * @instance
                     */
                    Jwk.prototype.y = "";
    
                    /**
                     * Jwk crv.
                     * @member {string} crv
                     * @memberof google.container.v1.Jwk
                     * @instance
                     */
                    Jwk.prototype.crv = "";
    
                    /**
                     * Creates a new Jwk instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.Jwk
                     * @static
                     * @param {google.container.v1.IJwk=} [properties] Properties to set
                     * @returns {google.container.v1.Jwk} Jwk instance
                     */
                    Jwk.create = function create(properties) {
                        return new Jwk(properties);
                    };
    
                    /**
                     * Encodes the specified Jwk message. Does not implicitly {@link google.container.v1.Jwk.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.Jwk
                     * @static
                     * @param {google.container.v1.IJwk} message Jwk message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Jwk.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.kty != null && Object.hasOwnProperty.call(message, "kty"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.kty);
                        if (message.alg != null && Object.hasOwnProperty.call(message, "alg"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.alg);
                        if (message.use != null && Object.hasOwnProperty.call(message, "use"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.use);
                        if (message.kid != null && Object.hasOwnProperty.call(message, "kid"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.kid);
                        if (message.n != null && Object.hasOwnProperty.call(message, "n"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.n);
                        if (message.e != null && Object.hasOwnProperty.call(message, "e"))
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.e);
                        if (message.x != null && Object.hasOwnProperty.call(message, "x"))
                            writer.uint32(/* id 7, wireType 2 =*/58).string(message.x);
                        if (message.y != null && Object.hasOwnProperty.call(message, "y"))
                            writer.uint32(/* id 8, wireType 2 =*/66).string(message.y);
                        if (message.crv != null && Object.hasOwnProperty.call(message, "crv"))
                            writer.uint32(/* id 9, wireType 2 =*/74).string(message.crv);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Jwk message, length delimited. Does not implicitly {@link google.container.v1.Jwk.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.Jwk
                     * @static
                     * @param {google.container.v1.IJwk} message Jwk message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Jwk.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Jwk message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.Jwk
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.Jwk} Jwk
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Jwk.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.Jwk();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.kty = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.alg = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.use = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.kid = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.n = reader.string();
                                    break;
                                }
                            case 6: {
                                    message.e = reader.string();
                                    break;
                                }
                            case 7: {
                                    message.x = reader.string();
                                    break;
                                }
                            case 8: {
                                    message.y = reader.string();
                                    break;
                                }
                            case 9: {
                                    message.crv = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Jwk message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.Jwk
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.Jwk} Jwk
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Jwk.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Jwk message.
                     * @function verify
                     * @memberof google.container.v1.Jwk
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Jwk.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.kty != null && message.hasOwnProperty("kty"))
                            if (!$util.isString(message.kty))
                                return "kty: string expected";
                        if (message.alg != null && message.hasOwnProperty("alg"))
                            if (!$util.isString(message.alg))
                                return "alg: string expected";
                        if (message.use != null && message.hasOwnProperty("use"))
                            if (!$util.isString(message.use))
                                return "use: string expected";
                        if (message.kid != null && message.hasOwnProperty("kid"))
                            if (!$util.isString(message.kid))
                                return "kid: string expected";
                        if (message.n != null && message.hasOwnProperty("n"))
                            if (!$util.isString(message.n))
                                return "n: string expected";
                        if (message.e != null && message.hasOwnProperty("e"))
                            if (!$util.isString(message.e))
                                return "e: string expected";
                        if (message.x != null && message.hasOwnProperty("x"))
                            if (!$util.isString(message.x))
                                return "x: string expected";
                        if (message.y != null && message.hasOwnProperty("y"))
                            if (!$util.isString(message.y))
                                return "y: string expected";
                        if (message.crv != null && message.hasOwnProperty("crv"))
                            if (!$util.isString(message.crv))
                                return "crv: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a Jwk message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.Jwk
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.Jwk} Jwk
                     */
                    Jwk.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.Jwk)
                            return object;
                        var message = new $root.google.container.v1.Jwk();
                        if (object.kty != null)
                            message.kty = String(object.kty);
                        if (object.alg != null)
                            message.alg = String(object.alg);
                        if (object.use != null)
                            message.use = String(object.use);
                        if (object.kid != null)
                            message.kid = String(object.kid);
                        if (object.n != null)
                            message.n = String(object.n);
                        if (object.e != null)
                            message.e = String(object.e);
                        if (object.x != null)
                            message.x = String(object.x);
                        if (object.y != null)
                            message.y = String(object.y);
                        if (object.crv != null)
                            message.crv = String(object.crv);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Jwk message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.Jwk
                     * @static
                     * @param {google.container.v1.Jwk} message Jwk
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Jwk.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.kty = "";
                            object.alg = "";
                            object.use = "";
                            object.kid = "";
                            object.n = "";
                            object.e = "";
                            object.x = "";
                            object.y = "";
                            object.crv = "";
                        }
                        if (message.kty != null && message.hasOwnProperty("kty"))
                            object.kty = message.kty;
                        if (message.alg != null && message.hasOwnProperty("alg"))
                            object.alg = message.alg;
                        if (message.use != null && message.hasOwnProperty("use"))
                            object.use = message.use;
                        if (message.kid != null && message.hasOwnProperty("kid"))
                            object.kid = message.kid;
                        if (message.n != null && message.hasOwnProperty("n"))
                            object.n = message.n;
                        if (message.e != null && message.hasOwnProperty("e"))
                            object.e = message.e;
                        if (message.x != null && message.hasOwnProperty("x"))
                            object.x = message.x;
                        if (message.y != null && message.hasOwnProperty("y"))
                            object.y = message.y;
                        if (message.crv != null && message.hasOwnProperty("crv"))
                            object.crv = message.crv;
                        return object;
                    };
    
                    /**
                     * Converts this Jwk to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.Jwk
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Jwk.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Jwk
                     * @function getTypeUrl
                     * @memberof google.container.v1.Jwk
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Jwk.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.Jwk";
                    };
    
                    return Jwk;
                })();
    
                v1.GetJSONWebKeysResponse = (function() {
    
                    /**
                     * Properties of a GetJSONWebKeysResponse.
                     * @memberof google.container.v1
                     * @interface IGetJSONWebKeysResponse
                     * @property {Array.<google.container.v1.IJwk>|null} [keys] GetJSONWebKeysResponse keys
                     */
    
                    /**
                     * Constructs a new GetJSONWebKeysResponse.
                     * @memberof google.container.v1
                     * @classdesc Represents a GetJSONWebKeysResponse.
                     * @implements IGetJSONWebKeysResponse
                     * @constructor
                     * @param {google.container.v1.IGetJSONWebKeysResponse=} [properties] Properties to set
                     */
                    function GetJSONWebKeysResponse(properties) {
                        this.keys = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GetJSONWebKeysResponse keys.
                     * @member {Array.<google.container.v1.IJwk>} keys
                     * @memberof google.container.v1.GetJSONWebKeysResponse
                     * @instance
                     */
                    GetJSONWebKeysResponse.prototype.keys = $util.emptyArray;
    
                    /**
                     * Creates a new GetJSONWebKeysResponse instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.GetJSONWebKeysResponse
                     * @static
                     * @param {google.container.v1.IGetJSONWebKeysResponse=} [properties] Properties to set
                     * @returns {google.container.v1.GetJSONWebKeysResponse} GetJSONWebKeysResponse instance
                     */
                    GetJSONWebKeysResponse.create = function create(properties) {
                        return new GetJSONWebKeysResponse(properties);
                    };
    
                    /**
                     * Encodes the specified GetJSONWebKeysResponse message. Does not implicitly {@link google.container.v1.GetJSONWebKeysResponse.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.GetJSONWebKeysResponse
                     * @static
                     * @param {google.container.v1.IGetJSONWebKeysResponse} message GetJSONWebKeysResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetJSONWebKeysResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.keys != null && message.keys.length)
                            for (var i = 0; i < message.keys.length; ++i)
                                $root.google.container.v1.Jwk.encode(message.keys[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GetJSONWebKeysResponse message, length delimited. Does not implicitly {@link google.container.v1.GetJSONWebKeysResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.GetJSONWebKeysResponse
                     * @static
                     * @param {google.container.v1.IGetJSONWebKeysResponse} message GetJSONWebKeysResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetJSONWebKeysResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GetJSONWebKeysResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.GetJSONWebKeysResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.GetJSONWebKeysResponse} GetJSONWebKeysResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetJSONWebKeysResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.GetJSONWebKeysResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.keys && message.keys.length))
                                        message.keys = [];
                                    message.keys.push($root.google.container.v1.Jwk.decode(reader, reader.uint32()));
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GetJSONWebKeysResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.GetJSONWebKeysResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.GetJSONWebKeysResponse} GetJSONWebKeysResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetJSONWebKeysResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GetJSONWebKeysResponse message.
                     * @function verify
                     * @memberof google.container.v1.GetJSONWebKeysResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GetJSONWebKeysResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.keys != null && message.hasOwnProperty("keys")) {
                            if (!Array.isArray(message.keys))
                                return "keys: array expected";
                            for (var i = 0; i < message.keys.length; ++i) {
                                var error = $root.google.container.v1.Jwk.verify(message.keys[i]);
                                if (error)
                                    return "keys." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a GetJSONWebKeysResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.GetJSONWebKeysResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.GetJSONWebKeysResponse} GetJSONWebKeysResponse
                     */
                    GetJSONWebKeysResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.GetJSONWebKeysResponse)
                            return object;
                        var message = new $root.google.container.v1.GetJSONWebKeysResponse();
                        if (object.keys) {
                            if (!Array.isArray(object.keys))
                                throw TypeError(".google.container.v1.GetJSONWebKeysResponse.keys: array expected");
                            message.keys = [];
                            for (var i = 0; i < object.keys.length; ++i) {
                                if (typeof object.keys[i] !== "object")
                                    throw TypeError(".google.container.v1.GetJSONWebKeysResponse.keys: object expected");
                                message.keys[i] = $root.google.container.v1.Jwk.fromObject(object.keys[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GetJSONWebKeysResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.GetJSONWebKeysResponse
                     * @static
                     * @param {google.container.v1.GetJSONWebKeysResponse} message GetJSONWebKeysResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GetJSONWebKeysResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.keys = [];
                        if (message.keys && message.keys.length) {
                            object.keys = [];
                            for (var j = 0; j < message.keys.length; ++j)
                                object.keys[j] = $root.google.container.v1.Jwk.toObject(message.keys[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this GetJSONWebKeysResponse to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.GetJSONWebKeysResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GetJSONWebKeysResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GetJSONWebKeysResponse
                     * @function getTypeUrl
                     * @memberof google.container.v1.GetJSONWebKeysResponse
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GetJSONWebKeysResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.GetJSONWebKeysResponse";
                    };
    
                    return GetJSONWebKeysResponse;
                })();
    
                v1.ReleaseChannel = (function() {
    
                    /**
                     * Properties of a ReleaseChannel.
                     * @memberof google.container.v1
                     * @interface IReleaseChannel
                     * @property {google.container.v1.ReleaseChannel.Channel|null} [channel] ReleaseChannel channel
                     */
    
                    /**
                     * Constructs a new ReleaseChannel.
                     * @memberof google.container.v1
                     * @classdesc Represents a ReleaseChannel.
                     * @implements IReleaseChannel
                     * @constructor
                     * @param {google.container.v1.IReleaseChannel=} [properties] Properties to set
                     */
                    function ReleaseChannel(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReleaseChannel channel.
                     * @member {google.container.v1.ReleaseChannel.Channel} channel
                     * @memberof google.container.v1.ReleaseChannel
                     * @instance
                     */
                    ReleaseChannel.prototype.channel = 0;
    
                    /**
                     * Creates a new ReleaseChannel instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.ReleaseChannel
                     * @static
                     * @param {google.container.v1.IReleaseChannel=} [properties] Properties to set
                     * @returns {google.container.v1.ReleaseChannel} ReleaseChannel instance
                     */
                    ReleaseChannel.create = function create(properties) {
                        return new ReleaseChannel(properties);
                    };
    
                    /**
                     * Encodes the specified ReleaseChannel message. Does not implicitly {@link google.container.v1.ReleaseChannel.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.ReleaseChannel
                     * @static
                     * @param {google.container.v1.IReleaseChannel} message ReleaseChannel message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReleaseChannel.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.channel != null && Object.hasOwnProperty.call(message, "channel"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.channel);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReleaseChannel message, length delimited. Does not implicitly {@link google.container.v1.ReleaseChannel.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.ReleaseChannel
                     * @static
                     * @param {google.container.v1.IReleaseChannel} message ReleaseChannel message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReleaseChannel.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReleaseChannel message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.ReleaseChannel
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.ReleaseChannel} ReleaseChannel
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReleaseChannel.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.ReleaseChannel();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.channel = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReleaseChannel message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.ReleaseChannel
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.ReleaseChannel} ReleaseChannel
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReleaseChannel.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReleaseChannel message.
                     * @function verify
                     * @memberof google.container.v1.ReleaseChannel
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReleaseChannel.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.channel != null && message.hasOwnProperty("channel"))
                            switch (message.channel) {
                            default:
                                return "channel: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates a ReleaseChannel message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.ReleaseChannel
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.ReleaseChannel} ReleaseChannel
                     */
                    ReleaseChannel.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.ReleaseChannel)
                            return object;
                        var message = new $root.google.container.v1.ReleaseChannel();
                        switch (object.channel) {
                        default:
                            if (typeof object.channel === "number") {
                                message.channel = object.channel;
                                break;
                            }
                            break;
                        case "UNSPECIFIED":
                        case 0:
                            message.channel = 0;
                            break;
                        case "RAPID":
                        case 1:
                            message.channel = 1;
                            break;
                        case "REGULAR":
                        case 2:
                            message.channel = 2;
                            break;
                        case "STABLE":
                        case 3:
                            message.channel = 3;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReleaseChannel message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.ReleaseChannel
                     * @static
                     * @param {google.container.v1.ReleaseChannel} message ReleaseChannel
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReleaseChannel.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.channel = options.enums === String ? "UNSPECIFIED" : 0;
                        if (message.channel != null && message.hasOwnProperty("channel"))
                            object.channel = options.enums === String ? $root.google.container.v1.ReleaseChannel.Channel[message.channel] === undefined ? message.channel : $root.google.container.v1.ReleaseChannel.Channel[message.channel] : message.channel;
                        return object;
                    };
    
                    /**
                     * Converts this ReleaseChannel to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.ReleaseChannel
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReleaseChannel.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ReleaseChannel
                     * @function getTypeUrl
                     * @memberof google.container.v1.ReleaseChannel
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ReleaseChannel.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.ReleaseChannel";
                    };
    
                    /**
                     * Channel enum.
                     * @name google.container.v1.ReleaseChannel.Channel
                     * @enum {number}
                     * @property {number} UNSPECIFIED=0 UNSPECIFIED value
                     * @property {number} RAPID=1 RAPID value
                     * @property {number} REGULAR=2 REGULAR value
                     * @property {number} STABLE=3 STABLE value
                     */
                    ReleaseChannel.Channel = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "UNSPECIFIED"] = 0;
                        values[valuesById[1] = "RAPID"] = 1;
                        values[valuesById[2] = "REGULAR"] = 2;
                        values[valuesById[3] = "STABLE"] = 3;
                        return values;
                    })();
    
                    return ReleaseChannel;
                })();
    
                v1.CostManagementConfig = (function() {
    
                    /**
                     * Properties of a CostManagementConfig.
                     * @memberof google.container.v1
                     * @interface ICostManagementConfig
                     * @property {boolean|null} [enabled] CostManagementConfig enabled
                     */
    
                    /**
                     * Constructs a new CostManagementConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a CostManagementConfig.
                     * @implements ICostManagementConfig
                     * @constructor
                     * @param {google.container.v1.ICostManagementConfig=} [properties] Properties to set
                     */
                    function CostManagementConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * CostManagementConfig enabled.
                     * @member {boolean} enabled
                     * @memberof google.container.v1.CostManagementConfig
                     * @instance
                     */
                    CostManagementConfig.prototype.enabled = false;
    
                    /**
                     * Creates a new CostManagementConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.CostManagementConfig
                     * @static
                     * @param {google.container.v1.ICostManagementConfig=} [properties] Properties to set
                     * @returns {google.container.v1.CostManagementConfig} CostManagementConfig instance
                     */
                    CostManagementConfig.create = function create(properties) {
                        return new CostManagementConfig(properties);
                    };
    
                    /**
                     * Encodes the specified CostManagementConfig message. Does not implicitly {@link google.container.v1.CostManagementConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.CostManagementConfig
                     * @static
                     * @param {google.container.v1.ICostManagementConfig} message CostManagementConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CostManagementConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified CostManagementConfig message, length delimited. Does not implicitly {@link google.container.v1.CostManagementConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.CostManagementConfig
                     * @static
                     * @param {google.container.v1.ICostManagementConfig} message CostManagementConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CostManagementConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a CostManagementConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.CostManagementConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.CostManagementConfig} CostManagementConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CostManagementConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.CostManagementConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.enabled = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a CostManagementConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.CostManagementConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.CostManagementConfig} CostManagementConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CostManagementConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a CostManagementConfig message.
                     * @function verify
                     * @memberof google.container.v1.CostManagementConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    CostManagementConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            if (typeof message.enabled !== "boolean")
                                return "enabled: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a CostManagementConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.CostManagementConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.CostManagementConfig} CostManagementConfig
                     */
                    CostManagementConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.CostManagementConfig)
                            return object;
                        var message = new $root.google.container.v1.CostManagementConfig();
                        if (object.enabled != null)
                            message.enabled = Boolean(object.enabled);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a CostManagementConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.CostManagementConfig
                     * @static
                     * @param {google.container.v1.CostManagementConfig} message CostManagementConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    CostManagementConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.enabled = false;
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            object.enabled = message.enabled;
                        return object;
                    };
    
                    /**
                     * Converts this CostManagementConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.CostManagementConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    CostManagementConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for CostManagementConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.CostManagementConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    CostManagementConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.CostManagementConfig";
                    };
    
                    return CostManagementConfig;
                })();
    
                v1.IntraNodeVisibilityConfig = (function() {
    
                    /**
                     * Properties of an IntraNodeVisibilityConfig.
                     * @memberof google.container.v1
                     * @interface IIntraNodeVisibilityConfig
                     * @property {boolean|null} [enabled] IntraNodeVisibilityConfig enabled
                     */
    
                    /**
                     * Constructs a new IntraNodeVisibilityConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents an IntraNodeVisibilityConfig.
                     * @implements IIntraNodeVisibilityConfig
                     * @constructor
                     * @param {google.container.v1.IIntraNodeVisibilityConfig=} [properties] Properties to set
                     */
                    function IntraNodeVisibilityConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * IntraNodeVisibilityConfig enabled.
                     * @member {boolean} enabled
                     * @memberof google.container.v1.IntraNodeVisibilityConfig
                     * @instance
                     */
                    IntraNodeVisibilityConfig.prototype.enabled = false;
    
                    /**
                     * Creates a new IntraNodeVisibilityConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.IntraNodeVisibilityConfig
                     * @static
                     * @param {google.container.v1.IIntraNodeVisibilityConfig=} [properties] Properties to set
                     * @returns {google.container.v1.IntraNodeVisibilityConfig} IntraNodeVisibilityConfig instance
                     */
                    IntraNodeVisibilityConfig.create = function create(properties) {
                        return new IntraNodeVisibilityConfig(properties);
                    };
    
                    /**
                     * Encodes the specified IntraNodeVisibilityConfig message. Does not implicitly {@link google.container.v1.IntraNodeVisibilityConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.IntraNodeVisibilityConfig
                     * @static
                     * @param {google.container.v1.IIntraNodeVisibilityConfig} message IntraNodeVisibilityConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    IntraNodeVisibilityConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified IntraNodeVisibilityConfig message, length delimited. Does not implicitly {@link google.container.v1.IntraNodeVisibilityConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.IntraNodeVisibilityConfig
                     * @static
                     * @param {google.container.v1.IIntraNodeVisibilityConfig} message IntraNodeVisibilityConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    IntraNodeVisibilityConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an IntraNodeVisibilityConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.IntraNodeVisibilityConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.IntraNodeVisibilityConfig} IntraNodeVisibilityConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    IntraNodeVisibilityConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.IntraNodeVisibilityConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.enabled = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an IntraNodeVisibilityConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.IntraNodeVisibilityConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.IntraNodeVisibilityConfig} IntraNodeVisibilityConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    IntraNodeVisibilityConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an IntraNodeVisibilityConfig message.
                     * @function verify
                     * @memberof google.container.v1.IntraNodeVisibilityConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    IntraNodeVisibilityConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            if (typeof message.enabled !== "boolean")
                                return "enabled: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates an IntraNodeVisibilityConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.IntraNodeVisibilityConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.IntraNodeVisibilityConfig} IntraNodeVisibilityConfig
                     */
                    IntraNodeVisibilityConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.IntraNodeVisibilityConfig)
                            return object;
                        var message = new $root.google.container.v1.IntraNodeVisibilityConfig();
                        if (object.enabled != null)
                            message.enabled = Boolean(object.enabled);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an IntraNodeVisibilityConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.IntraNodeVisibilityConfig
                     * @static
                     * @param {google.container.v1.IntraNodeVisibilityConfig} message IntraNodeVisibilityConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    IntraNodeVisibilityConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.enabled = false;
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            object.enabled = message.enabled;
                        return object;
                    };
    
                    /**
                     * Converts this IntraNodeVisibilityConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.IntraNodeVisibilityConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    IntraNodeVisibilityConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for IntraNodeVisibilityConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.IntraNodeVisibilityConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    IntraNodeVisibilityConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.IntraNodeVisibilityConfig";
                    };
    
                    return IntraNodeVisibilityConfig;
                })();
    
                v1.ILBSubsettingConfig = (function() {
    
                    /**
                     * Properties of a ILBSubsettingConfig.
                     * @memberof google.container.v1
                     * @interface IILBSubsettingConfig
                     * @property {boolean|null} [enabled] ILBSubsettingConfig enabled
                     */
    
                    /**
                     * Constructs a new ILBSubsettingConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a ILBSubsettingConfig.
                     * @implements IILBSubsettingConfig
                     * @constructor
                     * @param {google.container.v1.IILBSubsettingConfig=} [properties] Properties to set
                     */
                    function ILBSubsettingConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ILBSubsettingConfig enabled.
                     * @member {boolean} enabled
                     * @memberof google.container.v1.ILBSubsettingConfig
                     * @instance
                     */
                    ILBSubsettingConfig.prototype.enabled = false;
    
                    /**
                     * Creates a new ILBSubsettingConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.ILBSubsettingConfig
                     * @static
                     * @param {google.container.v1.IILBSubsettingConfig=} [properties] Properties to set
                     * @returns {google.container.v1.ILBSubsettingConfig} ILBSubsettingConfig instance
                     */
                    ILBSubsettingConfig.create = function create(properties) {
                        return new ILBSubsettingConfig(properties);
                    };
    
                    /**
                     * Encodes the specified ILBSubsettingConfig message. Does not implicitly {@link google.container.v1.ILBSubsettingConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.ILBSubsettingConfig
                     * @static
                     * @param {google.container.v1.IILBSubsettingConfig} message ILBSubsettingConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ILBSubsettingConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ILBSubsettingConfig message, length delimited. Does not implicitly {@link google.container.v1.ILBSubsettingConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.ILBSubsettingConfig
                     * @static
                     * @param {google.container.v1.IILBSubsettingConfig} message ILBSubsettingConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ILBSubsettingConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ILBSubsettingConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.ILBSubsettingConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.ILBSubsettingConfig} ILBSubsettingConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ILBSubsettingConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.ILBSubsettingConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.enabled = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ILBSubsettingConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.ILBSubsettingConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.ILBSubsettingConfig} ILBSubsettingConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ILBSubsettingConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ILBSubsettingConfig message.
                     * @function verify
                     * @memberof google.container.v1.ILBSubsettingConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ILBSubsettingConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            if (typeof message.enabled !== "boolean")
                                return "enabled: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a ILBSubsettingConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.ILBSubsettingConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.ILBSubsettingConfig} ILBSubsettingConfig
                     */
                    ILBSubsettingConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.ILBSubsettingConfig)
                            return object;
                        var message = new $root.google.container.v1.ILBSubsettingConfig();
                        if (object.enabled != null)
                            message.enabled = Boolean(object.enabled);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ILBSubsettingConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.ILBSubsettingConfig
                     * @static
                     * @param {google.container.v1.ILBSubsettingConfig} message ILBSubsettingConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ILBSubsettingConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.enabled = false;
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            object.enabled = message.enabled;
                        return object;
                    };
    
                    /**
                     * Converts this ILBSubsettingConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.ILBSubsettingConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ILBSubsettingConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ILBSubsettingConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.ILBSubsettingConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ILBSubsettingConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.ILBSubsettingConfig";
                    };
    
                    return ILBSubsettingConfig;
                })();
    
                v1.DNSConfig = (function() {
    
                    /**
                     * Properties of a DNSConfig.
                     * @memberof google.container.v1
                     * @interface IDNSConfig
                     * @property {google.container.v1.DNSConfig.Provider|null} [clusterDns] DNSConfig clusterDns
                     * @property {google.container.v1.DNSConfig.DNSScope|null} [clusterDnsScope] DNSConfig clusterDnsScope
                     * @property {string|null} [clusterDnsDomain] DNSConfig clusterDnsDomain
                     */
    
                    /**
                     * Constructs a new DNSConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a DNSConfig.
                     * @implements IDNSConfig
                     * @constructor
                     * @param {google.container.v1.IDNSConfig=} [properties] Properties to set
                     */
                    function DNSConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * DNSConfig clusterDns.
                     * @member {google.container.v1.DNSConfig.Provider} clusterDns
                     * @memberof google.container.v1.DNSConfig
                     * @instance
                     */
                    DNSConfig.prototype.clusterDns = 0;
    
                    /**
                     * DNSConfig clusterDnsScope.
                     * @member {google.container.v1.DNSConfig.DNSScope} clusterDnsScope
                     * @memberof google.container.v1.DNSConfig
                     * @instance
                     */
                    DNSConfig.prototype.clusterDnsScope = 0;
    
                    /**
                     * DNSConfig clusterDnsDomain.
                     * @member {string} clusterDnsDomain
                     * @memberof google.container.v1.DNSConfig
                     * @instance
                     */
                    DNSConfig.prototype.clusterDnsDomain = "";
    
                    /**
                     * Creates a new DNSConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.DNSConfig
                     * @static
                     * @param {google.container.v1.IDNSConfig=} [properties] Properties to set
                     * @returns {google.container.v1.DNSConfig} DNSConfig instance
                     */
                    DNSConfig.create = function create(properties) {
                        return new DNSConfig(properties);
                    };
    
                    /**
                     * Encodes the specified DNSConfig message. Does not implicitly {@link google.container.v1.DNSConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.DNSConfig
                     * @static
                     * @param {google.container.v1.IDNSConfig} message DNSConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DNSConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.clusterDns != null && Object.hasOwnProperty.call(message, "clusterDns"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.clusterDns);
                        if (message.clusterDnsScope != null && Object.hasOwnProperty.call(message, "clusterDnsScope"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.clusterDnsScope);
                        if (message.clusterDnsDomain != null && Object.hasOwnProperty.call(message, "clusterDnsDomain"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.clusterDnsDomain);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified DNSConfig message, length delimited. Does not implicitly {@link google.container.v1.DNSConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.DNSConfig
                     * @static
                     * @param {google.container.v1.IDNSConfig} message DNSConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DNSConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a DNSConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.DNSConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.DNSConfig} DNSConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DNSConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.DNSConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.clusterDns = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.clusterDnsScope = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.clusterDnsDomain = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a DNSConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.DNSConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.DNSConfig} DNSConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DNSConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a DNSConfig message.
                     * @function verify
                     * @memberof google.container.v1.DNSConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    DNSConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.clusterDns != null && message.hasOwnProperty("clusterDns"))
                            switch (message.clusterDns) {
                            default:
                                return "clusterDns: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        if (message.clusterDnsScope != null && message.hasOwnProperty("clusterDnsScope"))
                            switch (message.clusterDnsScope) {
                            default:
                                return "clusterDnsScope: enum value expected";
                            case 0:
                            case 2:
                                break;
                            }
                        if (message.clusterDnsDomain != null && message.hasOwnProperty("clusterDnsDomain"))
                            if (!$util.isString(message.clusterDnsDomain))
                                return "clusterDnsDomain: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a DNSConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.DNSConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.DNSConfig} DNSConfig
                     */
                    DNSConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.DNSConfig)
                            return object;
                        var message = new $root.google.container.v1.DNSConfig();
                        switch (object.clusterDns) {
                        default:
                            if (typeof object.clusterDns === "number") {
                                message.clusterDns = object.clusterDns;
                                break;
                            }
                            break;
                        case "PROVIDER_UNSPECIFIED":
                        case 0:
                            message.clusterDns = 0;
                            break;
                        case "PLATFORM_DEFAULT":
                        case 1:
                            message.clusterDns = 1;
                            break;
                        case "CLOUD_DNS":
                        case 2:
                            message.clusterDns = 2;
                            break;
                        }
                        switch (object.clusterDnsScope) {
                        default:
                            if (typeof object.clusterDnsScope === "number") {
                                message.clusterDnsScope = object.clusterDnsScope;
                                break;
                            }
                            break;
                        case "DNS_SCOPE_UNSPECIFIED":
                        case 0:
                            message.clusterDnsScope = 0;
                            break;
                        case "VPC_SCOPE":
                        case 2:
                            message.clusterDnsScope = 2;
                            break;
                        }
                        if (object.clusterDnsDomain != null)
                            message.clusterDnsDomain = String(object.clusterDnsDomain);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a DNSConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.DNSConfig
                     * @static
                     * @param {google.container.v1.DNSConfig} message DNSConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    DNSConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.clusterDns = options.enums === String ? "PROVIDER_UNSPECIFIED" : 0;
                            object.clusterDnsScope = options.enums === String ? "DNS_SCOPE_UNSPECIFIED" : 0;
                            object.clusterDnsDomain = "";
                        }
                        if (message.clusterDns != null && message.hasOwnProperty("clusterDns"))
                            object.clusterDns = options.enums === String ? $root.google.container.v1.DNSConfig.Provider[message.clusterDns] === undefined ? message.clusterDns : $root.google.container.v1.DNSConfig.Provider[message.clusterDns] : message.clusterDns;
                        if (message.clusterDnsScope != null && message.hasOwnProperty("clusterDnsScope"))
                            object.clusterDnsScope = options.enums === String ? $root.google.container.v1.DNSConfig.DNSScope[message.clusterDnsScope] === undefined ? message.clusterDnsScope : $root.google.container.v1.DNSConfig.DNSScope[message.clusterDnsScope] : message.clusterDnsScope;
                        if (message.clusterDnsDomain != null && message.hasOwnProperty("clusterDnsDomain"))
                            object.clusterDnsDomain = message.clusterDnsDomain;
                        return object;
                    };
    
                    /**
                     * Converts this DNSConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.DNSConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    DNSConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for DNSConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.DNSConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    DNSConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.DNSConfig";
                    };
    
                    /**
                     * Provider enum.
                     * @name google.container.v1.DNSConfig.Provider
                     * @enum {number}
                     * @property {number} PROVIDER_UNSPECIFIED=0 PROVIDER_UNSPECIFIED value
                     * @property {number} PLATFORM_DEFAULT=1 PLATFORM_DEFAULT value
                     * @property {number} CLOUD_DNS=2 CLOUD_DNS value
                     */
                    DNSConfig.Provider = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "PROVIDER_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "PLATFORM_DEFAULT"] = 1;
                        values[valuesById[2] = "CLOUD_DNS"] = 2;
                        return values;
                    })();
    
                    /**
                     * DNSScope enum.
                     * @name google.container.v1.DNSConfig.DNSScope
                     * @enum {number}
                     * @property {number} DNS_SCOPE_UNSPECIFIED=0 DNS_SCOPE_UNSPECIFIED value
                     * @property {number} VPC_SCOPE=2 VPC_SCOPE value
                     */
                    DNSConfig.DNSScope = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "DNS_SCOPE_UNSPECIFIED"] = 0;
                        values[valuesById[2] = "VPC_SCOPE"] = 2;
                        return values;
                    })();
    
                    return DNSConfig;
                })();
    
                v1.MaxPodsConstraint = (function() {
    
                    /**
                     * Properties of a MaxPodsConstraint.
                     * @memberof google.container.v1
                     * @interface IMaxPodsConstraint
                     * @property {number|Long|null} [maxPodsPerNode] MaxPodsConstraint maxPodsPerNode
                     */
    
                    /**
                     * Constructs a new MaxPodsConstraint.
                     * @memberof google.container.v1
                     * @classdesc Represents a MaxPodsConstraint.
                     * @implements IMaxPodsConstraint
                     * @constructor
                     * @param {google.container.v1.IMaxPodsConstraint=} [properties] Properties to set
                     */
                    function MaxPodsConstraint(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * MaxPodsConstraint maxPodsPerNode.
                     * @member {number|Long} maxPodsPerNode
                     * @memberof google.container.v1.MaxPodsConstraint
                     * @instance
                     */
                    MaxPodsConstraint.prototype.maxPodsPerNode = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                    /**
                     * Creates a new MaxPodsConstraint instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.MaxPodsConstraint
                     * @static
                     * @param {google.container.v1.IMaxPodsConstraint=} [properties] Properties to set
                     * @returns {google.container.v1.MaxPodsConstraint} MaxPodsConstraint instance
                     */
                    MaxPodsConstraint.create = function create(properties) {
                        return new MaxPodsConstraint(properties);
                    };
    
                    /**
                     * Encodes the specified MaxPodsConstraint message. Does not implicitly {@link google.container.v1.MaxPodsConstraint.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.MaxPodsConstraint
                     * @static
                     * @param {google.container.v1.IMaxPodsConstraint} message MaxPodsConstraint message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MaxPodsConstraint.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.maxPodsPerNode != null && Object.hasOwnProperty.call(message, "maxPodsPerNode"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int64(message.maxPodsPerNode);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified MaxPodsConstraint message, length delimited. Does not implicitly {@link google.container.v1.MaxPodsConstraint.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.MaxPodsConstraint
                     * @static
                     * @param {google.container.v1.IMaxPodsConstraint} message MaxPodsConstraint message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MaxPodsConstraint.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a MaxPodsConstraint message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.MaxPodsConstraint
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.MaxPodsConstraint} MaxPodsConstraint
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MaxPodsConstraint.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.MaxPodsConstraint();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.maxPodsPerNode = reader.int64();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a MaxPodsConstraint message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.MaxPodsConstraint
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.MaxPodsConstraint} MaxPodsConstraint
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MaxPodsConstraint.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a MaxPodsConstraint message.
                     * @function verify
                     * @memberof google.container.v1.MaxPodsConstraint
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    MaxPodsConstraint.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.maxPodsPerNode != null && message.hasOwnProperty("maxPodsPerNode"))
                            if (!$util.isInteger(message.maxPodsPerNode) && !(message.maxPodsPerNode && $util.isInteger(message.maxPodsPerNode.low) && $util.isInteger(message.maxPodsPerNode.high)))
                                return "maxPodsPerNode: integer|Long expected";
                        return null;
                    };
    
                    /**
                     * Creates a MaxPodsConstraint message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.MaxPodsConstraint
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.MaxPodsConstraint} MaxPodsConstraint
                     */
                    MaxPodsConstraint.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.MaxPodsConstraint)
                            return object;
                        var message = new $root.google.container.v1.MaxPodsConstraint();
                        if (object.maxPodsPerNode != null)
                            if ($util.Long)
                                (message.maxPodsPerNode = $util.Long.fromValue(object.maxPodsPerNode)).unsigned = false;
                            else if (typeof object.maxPodsPerNode === "string")
                                message.maxPodsPerNode = parseInt(object.maxPodsPerNode, 10);
                            else if (typeof object.maxPodsPerNode === "number")
                                message.maxPodsPerNode = object.maxPodsPerNode;
                            else if (typeof object.maxPodsPerNode === "object")
                                message.maxPodsPerNode = new $util.LongBits(object.maxPodsPerNode.low >>> 0, object.maxPodsPerNode.high >>> 0).toNumber();
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a MaxPodsConstraint message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.MaxPodsConstraint
                     * @static
                     * @param {google.container.v1.MaxPodsConstraint} message MaxPodsConstraint
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    MaxPodsConstraint.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            if ($util.Long) {
                                var long = new $util.Long(0, 0, false);
                                object.maxPodsPerNode = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                            } else
                                object.maxPodsPerNode = options.longs === String ? "0" : 0;
                        if (message.maxPodsPerNode != null && message.hasOwnProperty("maxPodsPerNode"))
                            if (typeof message.maxPodsPerNode === "number")
                                object.maxPodsPerNode = options.longs === String ? String(message.maxPodsPerNode) : message.maxPodsPerNode;
                            else
                                object.maxPodsPerNode = options.longs === String ? $util.Long.prototype.toString.call(message.maxPodsPerNode) : options.longs === Number ? new $util.LongBits(message.maxPodsPerNode.low >>> 0, message.maxPodsPerNode.high >>> 0).toNumber() : message.maxPodsPerNode;
                        return object;
                    };
    
                    /**
                     * Converts this MaxPodsConstraint to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.MaxPodsConstraint
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    MaxPodsConstraint.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for MaxPodsConstraint
                     * @function getTypeUrl
                     * @memberof google.container.v1.MaxPodsConstraint
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    MaxPodsConstraint.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.MaxPodsConstraint";
                    };
    
                    return MaxPodsConstraint;
                })();
    
                v1.WorkloadIdentityConfig = (function() {
    
                    /**
                     * Properties of a WorkloadIdentityConfig.
                     * @memberof google.container.v1
                     * @interface IWorkloadIdentityConfig
                     * @property {string|null} [workloadPool] WorkloadIdentityConfig workloadPool
                     */
    
                    /**
                     * Constructs a new WorkloadIdentityConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a WorkloadIdentityConfig.
                     * @implements IWorkloadIdentityConfig
                     * @constructor
                     * @param {google.container.v1.IWorkloadIdentityConfig=} [properties] Properties to set
                     */
                    function WorkloadIdentityConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * WorkloadIdentityConfig workloadPool.
                     * @member {string} workloadPool
                     * @memberof google.container.v1.WorkloadIdentityConfig
                     * @instance
                     */
                    WorkloadIdentityConfig.prototype.workloadPool = "";
    
                    /**
                     * Creates a new WorkloadIdentityConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.WorkloadIdentityConfig
                     * @static
                     * @param {google.container.v1.IWorkloadIdentityConfig=} [properties] Properties to set
                     * @returns {google.container.v1.WorkloadIdentityConfig} WorkloadIdentityConfig instance
                     */
                    WorkloadIdentityConfig.create = function create(properties) {
                        return new WorkloadIdentityConfig(properties);
                    };
    
                    /**
                     * Encodes the specified WorkloadIdentityConfig message. Does not implicitly {@link google.container.v1.WorkloadIdentityConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.WorkloadIdentityConfig
                     * @static
                     * @param {google.container.v1.IWorkloadIdentityConfig} message WorkloadIdentityConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    WorkloadIdentityConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.workloadPool != null && Object.hasOwnProperty.call(message, "workloadPool"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.workloadPool);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified WorkloadIdentityConfig message, length delimited. Does not implicitly {@link google.container.v1.WorkloadIdentityConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.WorkloadIdentityConfig
                     * @static
                     * @param {google.container.v1.IWorkloadIdentityConfig} message WorkloadIdentityConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    WorkloadIdentityConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a WorkloadIdentityConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.WorkloadIdentityConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.WorkloadIdentityConfig} WorkloadIdentityConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    WorkloadIdentityConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.WorkloadIdentityConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 2: {
                                    message.workloadPool = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a WorkloadIdentityConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.WorkloadIdentityConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.WorkloadIdentityConfig} WorkloadIdentityConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    WorkloadIdentityConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a WorkloadIdentityConfig message.
                     * @function verify
                     * @memberof google.container.v1.WorkloadIdentityConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    WorkloadIdentityConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.workloadPool != null && message.hasOwnProperty("workloadPool"))
                            if (!$util.isString(message.workloadPool))
                                return "workloadPool: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a WorkloadIdentityConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.WorkloadIdentityConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.WorkloadIdentityConfig} WorkloadIdentityConfig
                     */
                    WorkloadIdentityConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.WorkloadIdentityConfig)
                            return object;
                        var message = new $root.google.container.v1.WorkloadIdentityConfig();
                        if (object.workloadPool != null)
                            message.workloadPool = String(object.workloadPool);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a WorkloadIdentityConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.WorkloadIdentityConfig
                     * @static
                     * @param {google.container.v1.WorkloadIdentityConfig} message WorkloadIdentityConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    WorkloadIdentityConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.workloadPool = "";
                        if (message.workloadPool != null && message.hasOwnProperty("workloadPool"))
                            object.workloadPool = message.workloadPool;
                        return object;
                    };
    
                    /**
                     * Converts this WorkloadIdentityConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.WorkloadIdentityConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    WorkloadIdentityConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for WorkloadIdentityConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.WorkloadIdentityConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    WorkloadIdentityConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.WorkloadIdentityConfig";
                    };
    
                    return WorkloadIdentityConfig;
                })();
    
                v1.IdentityServiceConfig = (function() {
    
                    /**
                     * Properties of an IdentityServiceConfig.
                     * @memberof google.container.v1
                     * @interface IIdentityServiceConfig
                     * @property {boolean|null} [enabled] IdentityServiceConfig enabled
                     */
    
                    /**
                     * Constructs a new IdentityServiceConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents an IdentityServiceConfig.
                     * @implements IIdentityServiceConfig
                     * @constructor
                     * @param {google.container.v1.IIdentityServiceConfig=} [properties] Properties to set
                     */
                    function IdentityServiceConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * IdentityServiceConfig enabled.
                     * @member {boolean} enabled
                     * @memberof google.container.v1.IdentityServiceConfig
                     * @instance
                     */
                    IdentityServiceConfig.prototype.enabled = false;
    
                    /**
                     * Creates a new IdentityServiceConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.IdentityServiceConfig
                     * @static
                     * @param {google.container.v1.IIdentityServiceConfig=} [properties] Properties to set
                     * @returns {google.container.v1.IdentityServiceConfig} IdentityServiceConfig instance
                     */
                    IdentityServiceConfig.create = function create(properties) {
                        return new IdentityServiceConfig(properties);
                    };
    
                    /**
                     * Encodes the specified IdentityServiceConfig message. Does not implicitly {@link google.container.v1.IdentityServiceConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.IdentityServiceConfig
                     * @static
                     * @param {google.container.v1.IIdentityServiceConfig} message IdentityServiceConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    IdentityServiceConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified IdentityServiceConfig message, length delimited. Does not implicitly {@link google.container.v1.IdentityServiceConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.IdentityServiceConfig
                     * @static
                     * @param {google.container.v1.IIdentityServiceConfig} message IdentityServiceConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    IdentityServiceConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an IdentityServiceConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.IdentityServiceConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.IdentityServiceConfig} IdentityServiceConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    IdentityServiceConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.IdentityServiceConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.enabled = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an IdentityServiceConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.IdentityServiceConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.IdentityServiceConfig} IdentityServiceConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    IdentityServiceConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an IdentityServiceConfig message.
                     * @function verify
                     * @memberof google.container.v1.IdentityServiceConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    IdentityServiceConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            if (typeof message.enabled !== "boolean")
                                return "enabled: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates an IdentityServiceConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.IdentityServiceConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.IdentityServiceConfig} IdentityServiceConfig
                     */
                    IdentityServiceConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.IdentityServiceConfig)
                            return object;
                        var message = new $root.google.container.v1.IdentityServiceConfig();
                        if (object.enabled != null)
                            message.enabled = Boolean(object.enabled);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an IdentityServiceConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.IdentityServiceConfig
                     * @static
                     * @param {google.container.v1.IdentityServiceConfig} message IdentityServiceConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    IdentityServiceConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.enabled = false;
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            object.enabled = message.enabled;
                        return object;
                    };
    
                    /**
                     * Converts this IdentityServiceConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.IdentityServiceConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    IdentityServiceConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for IdentityServiceConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.IdentityServiceConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    IdentityServiceConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.IdentityServiceConfig";
                    };
    
                    return IdentityServiceConfig;
                })();
    
                v1.MeshCertificates = (function() {
    
                    /**
                     * Properties of a MeshCertificates.
                     * @memberof google.container.v1
                     * @interface IMeshCertificates
                     * @property {google.protobuf.IBoolValue|null} [enableCertificates] MeshCertificates enableCertificates
                     */
    
                    /**
                     * Constructs a new MeshCertificates.
                     * @memberof google.container.v1
                     * @classdesc Represents a MeshCertificates.
                     * @implements IMeshCertificates
                     * @constructor
                     * @param {google.container.v1.IMeshCertificates=} [properties] Properties to set
                     */
                    function MeshCertificates(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * MeshCertificates enableCertificates.
                     * @member {google.protobuf.IBoolValue|null|undefined} enableCertificates
                     * @memberof google.container.v1.MeshCertificates
                     * @instance
                     */
                    MeshCertificates.prototype.enableCertificates = null;
    
                    /**
                     * Creates a new MeshCertificates instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.MeshCertificates
                     * @static
                     * @param {google.container.v1.IMeshCertificates=} [properties] Properties to set
                     * @returns {google.container.v1.MeshCertificates} MeshCertificates instance
                     */
                    MeshCertificates.create = function create(properties) {
                        return new MeshCertificates(properties);
                    };
    
                    /**
                     * Encodes the specified MeshCertificates message. Does not implicitly {@link google.container.v1.MeshCertificates.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.MeshCertificates
                     * @static
                     * @param {google.container.v1.IMeshCertificates} message MeshCertificates message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MeshCertificates.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.enableCertificates != null && Object.hasOwnProperty.call(message, "enableCertificates"))
                            $root.google.protobuf.BoolValue.encode(message.enableCertificates, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified MeshCertificates message, length delimited. Does not implicitly {@link google.container.v1.MeshCertificates.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.MeshCertificates
                     * @static
                     * @param {google.container.v1.IMeshCertificates} message MeshCertificates message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MeshCertificates.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a MeshCertificates message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.MeshCertificates
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.MeshCertificates} MeshCertificates
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MeshCertificates.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.MeshCertificates();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.enableCertificates = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a MeshCertificates message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.MeshCertificates
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.MeshCertificates} MeshCertificates
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MeshCertificates.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a MeshCertificates message.
                     * @function verify
                     * @memberof google.container.v1.MeshCertificates
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    MeshCertificates.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.enableCertificates != null && message.hasOwnProperty("enableCertificates")) {
                            var error = $root.google.protobuf.BoolValue.verify(message.enableCertificates);
                            if (error)
                                return "enableCertificates." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a MeshCertificates message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.MeshCertificates
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.MeshCertificates} MeshCertificates
                     */
                    MeshCertificates.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.MeshCertificates)
                            return object;
                        var message = new $root.google.container.v1.MeshCertificates();
                        if (object.enableCertificates != null) {
                            if (typeof object.enableCertificates !== "object")
                                throw TypeError(".google.container.v1.MeshCertificates.enableCertificates: object expected");
                            message.enableCertificates = $root.google.protobuf.BoolValue.fromObject(object.enableCertificates);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a MeshCertificates message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.MeshCertificates
                     * @static
                     * @param {google.container.v1.MeshCertificates} message MeshCertificates
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    MeshCertificates.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.enableCertificates = null;
                        if (message.enableCertificates != null && message.hasOwnProperty("enableCertificates"))
                            object.enableCertificates = $root.google.protobuf.BoolValue.toObject(message.enableCertificates, options);
                        return object;
                    };
    
                    /**
                     * Converts this MeshCertificates to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.MeshCertificates
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    MeshCertificates.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for MeshCertificates
                     * @function getTypeUrl
                     * @memberof google.container.v1.MeshCertificates
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    MeshCertificates.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.MeshCertificates";
                    };
    
                    return MeshCertificates;
                })();
    
                v1.DatabaseEncryption = (function() {
    
                    /**
                     * Properties of a DatabaseEncryption.
                     * @memberof google.container.v1
                     * @interface IDatabaseEncryption
                     * @property {google.container.v1.DatabaseEncryption.State|null} [state] DatabaseEncryption state
                     * @property {string|null} [keyName] DatabaseEncryption keyName
                     */
    
                    /**
                     * Constructs a new DatabaseEncryption.
                     * @memberof google.container.v1
                     * @classdesc Represents a DatabaseEncryption.
                     * @implements IDatabaseEncryption
                     * @constructor
                     * @param {google.container.v1.IDatabaseEncryption=} [properties] Properties to set
                     */
                    function DatabaseEncryption(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * DatabaseEncryption state.
                     * @member {google.container.v1.DatabaseEncryption.State} state
                     * @memberof google.container.v1.DatabaseEncryption
                     * @instance
                     */
                    DatabaseEncryption.prototype.state = 0;
    
                    /**
                     * DatabaseEncryption keyName.
                     * @member {string} keyName
                     * @memberof google.container.v1.DatabaseEncryption
                     * @instance
                     */
                    DatabaseEncryption.prototype.keyName = "";
    
                    /**
                     * Creates a new DatabaseEncryption instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.DatabaseEncryption
                     * @static
                     * @param {google.container.v1.IDatabaseEncryption=} [properties] Properties to set
                     * @returns {google.container.v1.DatabaseEncryption} DatabaseEncryption instance
                     */
                    DatabaseEncryption.create = function create(properties) {
                        return new DatabaseEncryption(properties);
                    };
    
                    /**
                     * Encodes the specified DatabaseEncryption message. Does not implicitly {@link google.container.v1.DatabaseEncryption.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.DatabaseEncryption
                     * @static
                     * @param {google.container.v1.IDatabaseEncryption} message DatabaseEncryption message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DatabaseEncryption.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.keyName != null && Object.hasOwnProperty.call(message, "keyName"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.keyName);
                        if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.state);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified DatabaseEncryption message, length delimited. Does not implicitly {@link google.container.v1.DatabaseEncryption.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.DatabaseEncryption
                     * @static
                     * @param {google.container.v1.IDatabaseEncryption} message DatabaseEncryption message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DatabaseEncryption.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a DatabaseEncryption message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.DatabaseEncryption
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.DatabaseEncryption} DatabaseEncryption
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DatabaseEncryption.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.DatabaseEncryption();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 2: {
                                    message.state = reader.int32();
                                    break;
                                }
                            case 1: {
                                    message.keyName = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a DatabaseEncryption message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.DatabaseEncryption
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.DatabaseEncryption} DatabaseEncryption
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DatabaseEncryption.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a DatabaseEncryption message.
                     * @function verify
                     * @memberof google.container.v1.DatabaseEncryption
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    DatabaseEncryption.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.state != null && message.hasOwnProperty("state"))
                            switch (message.state) {
                            default:
                                return "state: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        if (message.keyName != null && message.hasOwnProperty("keyName"))
                            if (!$util.isString(message.keyName))
                                return "keyName: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a DatabaseEncryption message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.DatabaseEncryption
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.DatabaseEncryption} DatabaseEncryption
                     */
                    DatabaseEncryption.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.DatabaseEncryption)
                            return object;
                        var message = new $root.google.container.v1.DatabaseEncryption();
                        switch (object.state) {
                        default:
                            if (typeof object.state === "number") {
                                message.state = object.state;
                                break;
                            }
                            break;
                        case "UNKNOWN":
                        case 0:
                            message.state = 0;
                            break;
                        case "ENCRYPTED":
                        case 1:
                            message.state = 1;
                            break;
                        case "DECRYPTED":
                        case 2:
                            message.state = 2;
                            break;
                        }
                        if (object.keyName != null)
                            message.keyName = String(object.keyName);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a DatabaseEncryption message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.DatabaseEncryption
                     * @static
                     * @param {google.container.v1.DatabaseEncryption} message DatabaseEncryption
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    DatabaseEncryption.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.keyName = "";
                            object.state = options.enums === String ? "UNKNOWN" : 0;
                        }
                        if (message.keyName != null && message.hasOwnProperty("keyName"))
                            object.keyName = message.keyName;
                        if (message.state != null && message.hasOwnProperty("state"))
                            object.state = options.enums === String ? $root.google.container.v1.DatabaseEncryption.State[message.state] === undefined ? message.state : $root.google.container.v1.DatabaseEncryption.State[message.state] : message.state;
                        return object;
                    };
    
                    /**
                     * Converts this DatabaseEncryption to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.DatabaseEncryption
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    DatabaseEncryption.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for DatabaseEncryption
                     * @function getTypeUrl
                     * @memberof google.container.v1.DatabaseEncryption
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    DatabaseEncryption.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.DatabaseEncryption";
                    };
    
                    /**
                     * State enum.
                     * @name google.container.v1.DatabaseEncryption.State
                     * @enum {number}
                     * @property {number} UNKNOWN=0 UNKNOWN value
                     * @property {number} ENCRYPTED=1 ENCRYPTED value
                     * @property {number} DECRYPTED=2 DECRYPTED value
                     */
                    DatabaseEncryption.State = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "UNKNOWN"] = 0;
                        values[valuesById[1] = "ENCRYPTED"] = 1;
                        values[valuesById[2] = "DECRYPTED"] = 2;
                        return values;
                    })();
    
                    return DatabaseEncryption;
                })();
    
                v1.ListUsableSubnetworksRequest = (function() {
    
                    /**
                     * Properties of a ListUsableSubnetworksRequest.
                     * @memberof google.container.v1
                     * @interface IListUsableSubnetworksRequest
                     * @property {string|null} [parent] ListUsableSubnetworksRequest parent
                     * @property {string|null} [filter] ListUsableSubnetworksRequest filter
                     * @property {number|null} [pageSize] ListUsableSubnetworksRequest pageSize
                     * @property {string|null} [pageToken] ListUsableSubnetworksRequest pageToken
                     */
    
                    /**
                     * Constructs a new ListUsableSubnetworksRequest.
                     * @memberof google.container.v1
                     * @classdesc Represents a ListUsableSubnetworksRequest.
                     * @implements IListUsableSubnetworksRequest
                     * @constructor
                     * @param {google.container.v1.IListUsableSubnetworksRequest=} [properties] Properties to set
                     */
                    function ListUsableSubnetworksRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListUsableSubnetworksRequest parent.
                     * @member {string} parent
                     * @memberof google.container.v1.ListUsableSubnetworksRequest
                     * @instance
                     */
                    ListUsableSubnetworksRequest.prototype.parent = "";
    
                    /**
                     * ListUsableSubnetworksRequest filter.
                     * @member {string} filter
                     * @memberof google.container.v1.ListUsableSubnetworksRequest
                     * @instance
                     */
                    ListUsableSubnetworksRequest.prototype.filter = "";
    
                    /**
                     * ListUsableSubnetworksRequest pageSize.
                     * @member {number} pageSize
                     * @memberof google.container.v1.ListUsableSubnetworksRequest
                     * @instance
                     */
                    ListUsableSubnetworksRequest.prototype.pageSize = 0;
    
                    /**
                     * ListUsableSubnetworksRequest pageToken.
                     * @member {string} pageToken
                     * @memberof google.container.v1.ListUsableSubnetworksRequest
                     * @instance
                     */
                    ListUsableSubnetworksRequest.prototype.pageToken = "";
    
                    /**
                     * Creates a new ListUsableSubnetworksRequest instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.ListUsableSubnetworksRequest
                     * @static
                     * @param {google.container.v1.IListUsableSubnetworksRequest=} [properties] Properties to set
                     * @returns {google.container.v1.ListUsableSubnetworksRequest} ListUsableSubnetworksRequest instance
                     */
                    ListUsableSubnetworksRequest.create = function create(properties) {
                        return new ListUsableSubnetworksRequest(properties);
                    };
    
                    /**
                     * Encodes the specified ListUsableSubnetworksRequest message. Does not implicitly {@link google.container.v1.ListUsableSubnetworksRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.ListUsableSubnetworksRequest
                     * @static
                     * @param {google.container.v1.IListUsableSubnetworksRequest} message ListUsableSubnetworksRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListUsableSubnetworksRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                        if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.filter);
                        if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pageSize);
                        if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.pageToken);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListUsableSubnetworksRequest message, length delimited. Does not implicitly {@link google.container.v1.ListUsableSubnetworksRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.ListUsableSubnetworksRequest
                     * @static
                     * @param {google.container.v1.IListUsableSubnetworksRequest} message ListUsableSubnetworksRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListUsableSubnetworksRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListUsableSubnetworksRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.ListUsableSubnetworksRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.ListUsableSubnetworksRequest} ListUsableSubnetworksRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListUsableSubnetworksRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.ListUsableSubnetworksRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.parent = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.filter = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.pageSize = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.pageToken = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListUsableSubnetworksRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.ListUsableSubnetworksRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.ListUsableSubnetworksRequest} ListUsableSubnetworksRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListUsableSubnetworksRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListUsableSubnetworksRequest message.
                     * @function verify
                     * @memberof google.container.v1.ListUsableSubnetworksRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListUsableSubnetworksRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            if (!$util.isString(message.parent))
                                return "parent: string expected";
                        if (message.filter != null && message.hasOwnProperty("filter"))
                            if (!$util.isString(message.filter))
                                return "filter: string expected";
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            if (!$util.isInteger(message.pageSize))
                                return "pageSize: integer expected";
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            if (!$util.isString(message.pageToken))
                                return "pageToken: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListUsableSubnetworksRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.ListUsableSubnetworksRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.ListUsableSubnetworksRequest} ListUsableSubnetworksRequest
                     */
                    ListUsableSubnetworksRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.ListUsableSubnetworksRequest)
                            return object;
                        var message = new $root.google.container.v1.ListUsableSubnetworksRequest();
                        if (object.parent != null)
                            message.parent = String(object.parent);
                        if (object.filter != null)
                            message.filter = String(object.filter);
                        if (object.pageSize != null)
                            message.pageSize = object.pageSize | 0;
                        if (object.pageToken != null)
                            message.pageToken = String(object.pageToken);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListUsableSubnetworksRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.ListUsableSubnetworksRequest
                     * @static
                     * @param {google.container.v1.ListUsableSubnetworksRequest} message ListUsableSubnetworksRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListUsableSubnetworksRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.parent = "";
                            object.filter = "";
                            object.pageSize = 0;
                            object.pageToken = "";
                        }
                        if (message.parent != null && message.hasOwnProperty("parent"))
                            object.parent = message.parent;
                        if (message.filter != null && message.hasOwnProperty("filter"))
                            object.filter = message.filter;
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            object.pageSize = message.pageSize;
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            object.pageToken = message.pageToken;
                        return object;
                    };
    
                    /**
                     * Converts this ListUsableSubnetworksRequest to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.ListUsableSubnetworksRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListUsableSubnetworksRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListUsableSubnetworksRequest
                     * @function getTypeUrl
                     * @memberof google.container.v1.ListUsableSubnetworksRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListUsableSubnetworksRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.ListUsableSubnetworksRequest";
                    };
    
                    return ListUsableSubnetworksRequest;
                })();
    
                v1.ListUsableSubnetworksResponse = (function() {
    
                    /**
                     * Properties of a ListUsableSubnetworksResponse.
                     * @memberof google.container.v1
                     * @interface IListUsableSubnetworksResponse
                     * @property {Array.<google.container.v1.IUsableSubnetwork>|null} [subnetworks] ListUsableSubnetworksResponse subnetworks
                     * @property {string|null} [nextPageToken] ListUsableSubnetworksResponse nextPageToken
                     */
    
                    /**
                     * Constructs a new ListUsableSubnetworksResponse.
                     * @memberof google.container.v1
                     * @classdesc Represents a ListUsableSubnetworksResponse.
                     * @implements IListUsableSubnetworksResponse
                     * @constructor
                     * @param {google.container.v1.IListUsableSubnetworksResponse=} [properties] Properties to set
                     */
                    function ListUsableSubnetworksResponse(properties) {
                        this.subnetworks = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListUsableSubnetworksResponse subnetworks.
                     * @member {Array.<google.container.v1.IUsableSubnetwork>} subnetworks
                     * @memberof google.container.v1.ListUsableSubnetworksResponse
                     * @instance
                     */
                    ListUsableSubnetworksResponse.prototype.subnetworks = $util.emptyArray;
    
                    /**
                     * ListUsableSubnetworksResponse nextPageToken.
                     * @member {string} nextPageToken
                     * @memberof google.container.v1.ListUsableSubnetworksResponse
                     * @instance
                     */
                    ListUsableSubnetworksResponse.prototype.nextPageToken = "";
    
                    /**
                     * Creates a new ListUsableSubnetworksResponse instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.ListUsableSubnetworksResponse
                     * @static
                     * @param {google.container.v1.IListUsableSubnetworksResponse=} [properties] Properties to set
                     * @returns {google.container.v1.ListUsableSubnetworksResponse} ListUsableSubnetworksResponse instance
                     */
                    ListUsableSubnetworksResponse.create = function create(properties) {
                        return new ListUsableSubnetworksResponse(properties);
                    };
    
                    /**
                     * Encodes the specified ListUsableSubnetworksResponse message. Does not implicitly {@link google.container.v1.ListUsableSubnetworksResponse.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.ListUsableSubnetworksResponse
                     * @static
                     * @param {google.container.v1.IListUsableSubnetworksResponse} message ListUsableSubnetworksResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListUsableSubnetworksResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.subnetworks != null && message.subnetworks.length)
                            for (var i = 0; i < message.subnetworks.length; ++i)
                                $root.google.container.v1.UsableSubnetwork.encode(message.subnetworks[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListUsableSubnetworksResponse message, length delimited. Does not implicitly {@link google.container.v1.ListUsableSubnetworksResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.ListUsableSubnetworksResponse
                     * @static
                     * @param {google.container.v1.IListUsableSubnetworksResponse} message ListUsableSubnetworksResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListUsableSubnetworksResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListUsableSubnetworksResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.ListUsableSubnetworksResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.ListUsableSubnetworksResponse} ListUsableSubnetworksResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListUsableSubnetworksResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.ListUsableSubnetworksResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.subnetworks && message.subnetworks.length))
                                        message.subnetworks = [];
                                    message.subnetworks.push($root.google.container.v1.UsableSubnetwork.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 2: {
                                    message.nextPageToken = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListUsableSubnetworksResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.ListUsableSubnetworksResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.ListUsableSubnetworksResponse} ListUsableSubnetworksResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListUsableSubnetworksResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListUsableSubnetworksResponse message.
                     * @function verify
                     * @memberof google.container.v1.ListUsableSubnetworksResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListUsableSubnetworksResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.subnetworks != null && message.hasOwnProperty("subnetworks")) {
                            if (!Array.isArray(message.subnetworks))
                                return "subnetworks: array expected";
                            for (var i = 0; i < message.subnetworks.length; ++i) {
                                var error = $root.google.container.v1.UsableSubnetwork.verify(message.subnetworks[i]);
                                if (error)
                                    return "subnetworks." + error;
                            }
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            if (!$util.isString(message.nextPageToken))
                                return "nextPageToken: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListUsableSubnetworksResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.ListUsableSubnetworksResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.ListUsableSubnetworksResponse} ListUsableSubnetworksResponse
                     */
                    ListUsableSubnetworksResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.ListUsableSubnetworksResponse)
                            return object;
                        var message = new $root.google.container.v1.ListUsableSubnetworksResponse();
                        if (object.subnetworks) {
                            if (!Array.isArray(object.subnetworks))
                                throw TypeError(".google.container.v1.ListUsableSubnetworksResponse.subnetworks: array expected");
                            message.subnetworks = [];
                            for (var i = 0; i < object.subnetworks.length; ++i) {
                                if (typeof object.subnetworks[i] !== "object")
                                    throw TypeError(".google.container.v1.ListUsableSubnetworksResponse.subnetworks: object expected");
                                message.subnetworks[i] = $root.google.container.v1.UsableSubnetwork.fromObject(object.subnetworks[i]);
                            }
                        }
                        if (object.nextPageToken != null)
                            message.nextPageToken = String(object.nextPageToken);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListUsableSubnetworksResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.ListUsableSubnetworksResponse
                     * @static
                     * @param {google.container.v1.ListUsableSubnetworksResponse} message ListUsableSubnetworksResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListUsableSubnetworksResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.subnetworks = [];
                        if (options.defaults)
                            object.nextPageToken = "";
                        if (message.subnetworks && message.subnetworks.length) {
                            object.subnetworks = [];
                            for (var j = 0; j < message.subnetworks.length; ++j)
                                object.subnetworks[j] = $root.google.container.v1.UsableSubnetwork.toObject(message.subnetworks[j], options);
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            object.nextPageToken = message.nextPageToken;
                        return object;
                    };
    
                    /**
                     * Converts this ListUsableSubnetworksResponse to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.ListUsableSubnetworksResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListUsableSubnetworksResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListUsableSubnetworksResponse
                     * @function getTypeUrl
                     * @memberof google.container.v1.ListUsableSubnetworksResponse
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListUsableSubnetworksResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.ListUsableSubnetworksResponse";
                    };
    
                    return ListUsableSubnetworksResponse;
                })();
    
                v1.UsableSubnetworkSecondaryRange = (function() {
    
                    /**
                     * Properties of a UsableSubnetworkSecondaryRange.
                     * @memberof google.container.v1
                     * @interface IUsableSubnetworkSecondaryRange
                     * @property {string|null} [rangeName] UsableSubnetworkSecondaryRange rangeName
                     * @property {string|null} [ipCidrRange] UsableSubnetworkSecondaryRange ipCidrRange
                     * @property {google.container.v1.UsableSubnetworkSecondaryRange.Status|null} [status] UsableSubnetworkSecondaryRange status
                     */
    
                    /**
                     * Constructs a new UsableSubnetworkSecondaryRange.
                     * @memberof google.container.v1
                     * @classdesc Represents a UsableSubnetworkSecondaryRange.
                     * @implements IUsableSubnetworkSecondaryRange
                     * @constructor
                     * @param {google.container.v1.IUsableSubnetworkSecondaryRange=} [properties] Properties to set
                     */
                    function UsableSubnetworkSecondaryRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * UsableSubnetworkSecondaryRange rangeName.
                     * @member {string} rangeName
                     * @memberof google.container.v1.UsableSubnetworkSecondaryRange
                     * @instance
                     */
                    UsableSubnetworkSecondaryRange.prototype.rangeName = "";
    
                    /**
                     * UsableSubnetworkSecondaryRange ipCidrRange.
                     * @member {string} ipCidrRange
                     * @memberof google.container.v1.UsableSubnetworkSecondaryRange
                     * @instance
                     */
                    UsableSubnetworkSecondaryRange.prototype.ipCidrRange = "";
    
                    /**
                     * UsableSubnetworkSecondaryRange status.
                     * @member {google.container.v1.UsableSubnetworkSecondaryRange.Status} status
                     * @memberof google.container.v1.UsableSubnetworkSecondaryRange
                     * @instance
                     */
                    UsableSubnetworkSecondaryRange.prototype.status = 0;
    
                    /**
                     * Creates a new UsableSubnetworkSecondaryRange instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.UsableSubnetworkSecondaryRange
                     * @static
                     * @param {google.container.v1.IUsableSubnetworkSecondaryRange=} [properties] Properties to set
                     * @returns {google.container.v1.UsableSubnetworkSecondaryRange} UsableSubnetworkSecondaryRange instance
                     */
                    UsableSubnetworkSecondaryRange.create = function create(properties) {
                        return new UsableSubnetworkSecondaryRange(properties);
                    };
    
                    /**
                     * Encodes the specified UsableSubnetworkSecondaryRange message. Does not implicitly {@link google.container.v1.UsableSubnetworkSecondaryRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.UsableSubnetworkSecondaryRange
                     * @static
                     * @param {google.container.v1.IUsableSubnetworkSecondaryRange} message UsableSubnetworkSecondaryRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UsableSubnetworkSecondaryRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.rangeName != null && Object.hasOwnProperty.call(message, "rangeName"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.rangeName);
                        if (message.ipCidrRange != null && Object.hasOwnProperty.call(message, "ipCidrRange"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.ipCidrRange);
                        if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.status);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified UsableSubnetworkSecondaryRange message, length delimited. Does not implicitly {@link google.container.v1.UsableSubnetworkSecondaryRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.UsableSubnetworkSecondaryRange
                     * @static
                     * @param {google.container.v1.IUsableSubnetworkSecondaryRange} message UsableSubnetworkSecondaryRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UsableSubnetworkSecondaryRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a UsableSubnetworkSecondaryRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.UsableSubnetworkSecondaryRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.UsableSubnetworkSecondaryRange} UsableSubnetworkSecondaryRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UsableSubnetworkSecondaryRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.UsableSubnetworkSecondaryRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.rangeName = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.ipCidrRange = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.status = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a UsableSubnetworkSecondaryRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.UsableSubnetworkSecondaryRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.UsableSubnetworkSecondaryRange} UsableSubnetworkSecondaryRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UsableSubnetworkSecondaryRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a UsableSubnetworkSecondaryRange message.
                     * @function verify
                     * @memberof google.container.v1.UsableSubnetworkSecondaryRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    UsableSubnetworkSecondaryRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.rangeName != null && message.hasOwnProperty("rangeName"))
                            if (!$util.isString(message.rangeName))
                                return "rangeName: string expected";
                        if (message.ipCidrRange != null && message.hasOwnProperty("ipCidrRange"))
                            if (!$util.isString(message.ipCidrRange))
                                return "ipCidrRange: string expected";
                        if (message.status != null && message.hasOwnProperty("status"))
                            switch (message.status) {
                            default:
                                return "status: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates a UsableSubnetworkSecondaryRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.UsableSubnetworkSecondaryRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.UsableSubnetworkSecondaryRange} UsableSubnetworkSecondaryRange
                     */
                    UsableSubnetworkSecondaryRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.UsableSubnetworkSecondaryRange)
                            return object;
                        var message = new $root.google.container.v1.UsableSubnetworkSecondaryRange();
                        if (object.rangeName != null)
                            message.rangeName = String(object.rangeName);
                        if (object.ipCidrRange != null)
                            message.ipCidrRange = String(object.ipCidrRange);
                        switch (object.status) {
                        default:
                            if (typeof object.status === "number") {
                                message.status = object.status;
                                break;
                            }
                            break;
                        case "UNKNOWN":
                        case 0:
                            message.status = 0;
                            break;
                        case "UNUSED":
                        case 1:
                            message.status = 1;
                            break;
                        case "IN_USE_SERVICE":
                        case 2:
                            message.status = 2;
                            break;
                        case "IN_USE_SHAREABLE_POD":
                        case 3:
                            message.status = 3;
                            break;
                        case "IN_USE_MANAGED_POD":
                        case 4:
                            message.status = 4;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a UsableSubnetworkSecondaryRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.UsableSubnetworkSecondaryRange
                     * @static
                     * @param {google.container.v1.UsableSubnetworkSecondaryRange} message UsableSubnetworkSecondaryRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    UsableSubnetworkSecondaryRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.rangeName = "";
                            object.ipCidrRange = "";
                            object.status = options.enums === String ? "UNKNOWN" : 0;
                        }
                        if (message.rangeName != null && message.hasOwnProperty("rangeName"))
                            object.rangeName = message.rangeName;
                        if (message.ipCidrRange != null && message.hasOwnProperty("ipCidrRange"))
                            object.ipCidrRange = message.ipCidrRange;
                        if (message.status != null && message.hasOwnProperty("status"))
                            object.status = options.enums === String ? $root.google.container.v1.UsableSubnetworkSecondaryRange.Status[message.status] === undefined ? message.status : $root.google.container.v1.UsableSubnetworkSecondaryRange.Status[message.status] : message.status;
                        return object;
                    };
    
                    /**
                     * Converts this UsableSubnetworkSecondaryRange to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.UsableSubnetworkSecondaryRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    UsableSubnetworkSecondaryRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for UsableSubnetworkSecondaryRange
                     * @function getTypeUrl
                     * @memberof google.container.v1.UsableSubnetworkSecondaryRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    UsableSubnetworkSecondaryRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.UsableSubnetworkSecondaryRange";
                    };
    
                    /**
                     * Status enum.
                     * @name google.container.v1.UsableSubnetworkSecondaryRange.Status
                     * @enum {number}
                     * @property {number} UNKNOWN=0 UNKNOWN value
                     * @property {number} UNUSED=1 UNUSED value
                     * @property {number} IN_USE_SERVICE=2 IN_USE_SERVICE value
                     * @property {number} IN_USE_SHAREABLE_POD=3 IN_USE_SHAREABLE_POD value
                     * @property {number} IN_USE_MANAGED_POD=4 IN_USE_MANAGED_POD value
                     */
                    UsableSubnetworkSecondaryRange.Status = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "UNKNOWN"] = 0;
                        values[valuesById[1] = "UNUSED"] = 1;
                        values[valuesById[2] = "IN_USE_SERVICE"] = 2;
                        values[valuesById[3] = "IN_USE_SHAREABLE_POD"] = 3;
                        values[valuesById[4] = "IN_USE_MANAGED_POD"] = 4;
                        return values;
                    })();
    
                    return UsableSubnetworkSecondaryRange;
                })();
    
                v1.UsableSubnetwork = (function() {
    
                    /**
                     * Properties of a UsableSubnetwork.
                     * @memberof google.container.v1
                     * @interface IUsableSubnetwork
                     * @property {string|null} [subnetwork] UsableSubnetwork subnetwork
                     * @property {string|null} [network] UsableSubnetwork network
                     * @property {string|null} [ipCidrRange] UsableSubnetwork ipCidrRange
                     * @property {Array.<google.container.v1.IUsableSubnetworkSecondaryRange>|null} [secondaryIpRanges] UsableSubnetwork secondaryIpRanges
                     * @property {string|null} [statusMessage] UsableSubnetwork statusMessage
                     */
    
                    /**
                     * Constructs a new UsableSubnetwork.
                     * @memberof google.container.v1
                     * @classdesc Represents a UsableSubnetwork.
                     * @implements IUsableSubnetwork
                     * @constructor
                     * @param {google.container.v1.IUsableSubnetwork=} [properties] Properties to set
                     */
                    function UsableSubnetwork(properties) {
                        this.secondaryIpRanges = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * UsableSubnetwork subnetwork.
                     * @member {string} subnetwork
                     * @memberof google.container.v1.UsableSubnetwork
                     * @instance
                     */
                    UsableSubnetwork.prototype.subnetwork = "";
    
                    /**
                     * UsableSubnetwork network.
                     * @member {string} network
                     * @memberof google.container.v1.UsableSubnetwork
                     * @instance
                     */
                    UsableSubnetwork.prototype.network = "";
    
                    /**
                     * UsableSubnetwork ipCidrRange.
                     * @member {string} ipCidrRange
                     * @memberof google.container.v1.UsableSubnetwork
                     * @instance
                     */
                    UsableSubnetwork.prototype.ipCidrRange = "";
    
                    /**
                     * UsableSubnetwork secondaryIpRanges.
                     * @member {Array.<google.container.v1.IUsableSubnetworkSecondaryRange>} secondaryIpRanges
                     * @memberof google.container.v1.UsableSubnetwork
                     * @instance
                     */
                    UsableSubnetwork.prototype.secondaryIpRanges = $util.emptyArray;
    
                    /**
                     * UsableSubnetwork statusMessage.
                     * @member {string} statusMessage
                     * @memberof google.container.v1.UsableSubnetwork
                     * @instance
                     */
                    UsableSubnetwork.prototype.statusMessage = "";
    
                    /**
                     * Creates a new UsableSubnetwork instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.UsableSubnetwork
                     * @static
                     * @param {google.container.v1.IUsableSubnetwork=} [properties] Properties to set
                     * @returns {google.container.v1.UsableSubnetwork} UsableSubnetwork instance
                     */
                    UsableSubnetwork.create = function create(properties) {
                        return new UsableSubnetwork(properties);
                    };
    
                    /**
                     * Encodes the specified UsableSubnetwork message. Does not implicitly {@link google.container.v1.UsableSubnetwork.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.UsableSubnetwork
                     * @static
                     * @param {google.container.v1.IUsableSubnetwork} message UsableSubnetwork message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UsableSubnetwork.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.subnetwork != null && Object.hasOwnProperty.call(message, "subnetwork"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.subnetwork);
                        if (message.network != null && Object.hasOwnProperty.call(message, "network"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.network);
                        if (message.ipCidrRange != null && Object.hasOwnProperty.call(message, "ipCidrRange"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.ipCidrRange);
                        if (message.secondaryIpRanges != null && message.secondaryIpRanges.length)
                            for (var i = 0; i < message.secondaryIpRanges.length; ++i)
                                $root.google.container.v1.UsableSubnetworkSecondaryRange.encode(message.secondaryIpRanges[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.statusMessage != null && Object.hasOwnProperty.call(message, "statusMessage"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.statusMessage);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified UsableSubnetwork message, length delimited. Does not implicitly {@link google.container.v1.UsableSubnetwork.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.UsableSubnetwork
                     * @static
                     * @param {google.container.v1.IUsableSubnetwork} message UsableSubnetwork message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UsableSubnetwork.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a UsableSubnetwork message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.UsableSubnetwork
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.UsableSubnetwork} UsableSubnetwork
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UsableSubnetwork.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.UsableSubnetwork();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.subnetwork = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.network = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.ipCidrRange = reader.string();
                                    break;
                                }
                            case 4: {
                                    if (!(message.secondaryIpRanges && message.secondaryIpRanges.length))
                                        message.secondaryIpRanges = [];
                                    message.secondaryIpRanges.push($root.google.container.v1.UsableSubnetworkSecondaryRange.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 5: {
                                    message.statusMessage = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a UsableSubnetwork message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.UsableSubnetwork
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.UsableSubnetwork} UsableSubnetwork
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UsableSubnetwork.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a UsableSubnetwork message.
                     * @function verify
                     * @memberof google.container.v1.UsableSubnetwork
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    UsableSubnetwork.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.subnetwork != null && message.hasOwnProperty("subnetwork"))
                            if (!$util.isString(message.subnetwork))
                                return "subnetwork: string expected";
                        if (message.network != null && message.hasOwnProperty("network"))
                            if (!$util.isString(message.network))
                                return "network: string expected";
                        if (message.ipCidrRange != null && message.hasOwnProperty("ipCidrRange"))
                            if (!$util.isString(message.ipCidrRange))
                                return "ipCidrRange: string expected";
                        if (message.secondaryIpRanges != null && message.hasOwnProperty("secondaryIpRanges")) {
                            if (!Array.isArray(message.secondaryIpRanges))
                                return "secondaryIpRanges: array expected";
                            for (var i = 0; i < message.secondaryIpRanges.length; ++i) {
                                var error = $root.google.container.v1.UsableSubnetworkSecondaryRange.verify(message.secondaryIpRanges[i]);
                                if (error)
                                    return "secondaryIpRanges." + error;
                            }
                        }
                        if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                            if (!$util.isString(message.statusMessage))
                                return "statusMessage: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a UsableSubnetwork message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.UsableSubnetwork
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.UsableSubnetwork} UsableSubnetwork
                     */
                    UsableSubnetwork.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.UsableSubnetwork)
                            return object;
                        var message = new $root.google.container.v1.UsableSubnetwork();
                        if (object.subnetwork != null)
                            message.subnetwork = String(object.subnetwork);
                        if (object.network != null)
                            message.network = String(object.network);
                        if (object.ipCidrRange != null)
                            message.ipCidrRange = String(object.ipCidrRange);
                        if (object.secondaryIpRanges) {
                            if (!Array.isArray(object.secondaryIpRanges))
                                throw TypeError(".google.container.v1.UsableSubnetwork.secondaryIpRanges: array expected");
                            message.secondaryIpRanges = [];
                            for (var i = 0; i < object.secondaryIpRanges.length; ++i) {
                                if (typeof object.secondaryIpRanges[i] !== "object")
                                    throw TypeError(".google.container.v1.UsableSubnetwork.secondaryIpRanges: object expected");
                                message.secondaryIpRanges[i] = $root.google.container.v1.UsableSubnetworkSecondaryRange.fromObject(object.secondaryIpRanges[i]);
                            }
                        }
                        if (object.statusMessage != null)
                            message.statusMessage = String(object.statusMessage);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a UsableSubnetwork message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.UsableSubnetwork
                     * @static
                     * @param {google.container.v1.UsableSubnetwork} message UsableSubnetwork
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    UsableSubnetwork.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.secondaryIpRanges = [];
                        if (options.defaults) {
                            object.subnetwork = "";
                            object.network = "";
                            object.ipCidrRange = "";
                            object.statusMessage = "";
                        }
                        if (message.subnetwork != null && message.hasOwnProperty("subnetwork"))
                            object.subnetwork = message.subnetwork;
                        if (message.network != null && message.hasOwnProperty("network"))
                            object.network = message.network;
                        if (message.ipCidrRange != null && message.hasOwnProperty("ipCidrRange"))
                            object.ipCidrRange = message.ipCidrRange;
                        if (message.secondaryIpRanges && message.secondaryIpRanges.length) {
                            object.secondaryIpRanges = [];
                            for (var j = 0; j < message.secondaryIpRanges.length; ++j)
                                object.secondaryIpRanges[j] = $root.google.container.v1.UsableSubnetworkSecondaryRange.toObject(message.secondaryIpRanges[j], options);
                        }
                        if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                            object.statusMessage = message.statusMessage;
                        return object;
                    };
    
                    /**
                     * Converts this UsableSubnetwork to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.UsableSubnetwork
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    UsableSubnetwork.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for UsableSubnetwork
                     * @function getTypeUrl
                     * @memberof google.container.v1.UsableSubnetwork
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    UsableSubnetwork.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.UsableSubnetwork";
                    };
    
                    return UsableSubnetwork;
                })();
    
                v1.ResourceUsageExportConfig = (function() {
    
                    /**
                     * Properties of a ResourceUsageExportConfig.
                     * @memberof google.container.v1
                     * @interface IResourceUsageExportConfig
                     * @property {google.container.v1.ResourceUsageExportConfig.IBigQueryDestination|null} [bigqueryDestination] ResourceUsageExportConfig bigqueryDestination
                     * @property {boolean|null} [enableNetworkEgressMetering] ResourceUsageExportConfig enableNetworkEgressMetering
                     * @property {google.container.v1.ResourceUsageExportConfig.IConsumptionMeteringConfig|null} [consumptionMeteringConfig] ResourceUsageExportConfig consumptionMeteringConfig
                     */
    
                    /**
                     * Constructs a new ResourceUsageExportConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a ResourceUsageExportConfig.
                     * @implements IResourceUsageExportConfig
                     * @constructor
                     * @param {google.container.v1.IResourceUsageExportConfig=} [properties] Properties to set
                     */
                    function ResourceUsageExportConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ResourceUsageExportConfig bigqueryDestination.
                     * @member {google.container.v1.ResourceUsageExportConfig.IBigQueryDestination|null|undefined} bigqueryDestination
                     * @memberof google.container.v1.ResourceUsageExportConfig
                     * @instance
                     */
                    ResourceUsageExportConfig.prototype.bigqueryDestination = null;
    
                    /**
                     * ResourceUsageExportConfig enableNetworkEgressMetering.
                     * @member {boolean} enableNetworkEgressMetering
                     * @memberof google.container.v1.ResourceUsageExportConfig
                     * @instance
                     */
                    ResourceUsageExportConfig.prototype.enableNetworkEgressMetering = false;
    
                    /**
                     * ResourceUsageExportConfig consumptionMeteringConfig.
                     * @member {google.container.v1.ResourceUsageExportConfig.IConsumptionMeteringConfig|null|undefined} consumptionMeteringConfig
                     * @memberof google.container.v1.ResourceUsageExportConfig
                     * @instance
                     */
                    ResourceUsageExportConfig.prototype.consumptionMeteringConfig = null;
    
                    /**
                     * Creates a new ResourceUsageExportConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.ResourceUsageExportConfig
                     * @static
                     * @param {google.container.v1.IResourceUsageExportConfig=} [properties] Properties to set
                     * @returns {google.container.v1.ResourceUsageExportConfig} ResourceUsageExportConfig instance
                     */
                    ResourceUsageExportConfig.create = function create(properties) {
                        return new ResourceUsageExportConfig(properties);
                    };
    
                    /**
                     * Encodes the specified ResourceUsageExportConfig message. Does not implicitly {@link google.container.v1.ResourceUsageExportConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.ResourceUsageExportConfig
                     * @static
                     * @param {google.container.v1.IResourceUsageExportConfig} message ResourceUsageExportConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ResourceUsageExportConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.bigqueryDestination != null && Object.hasOwnProperty.call(message, "bigqueryDestination"))
                            $root.google.container.v1.ResourceUsageExportConfig.BigQueryDestination.encode(message.bigqueryDestination, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.enableNetworkEgressMetering != null && Object.hasOwnProperty.call(message, "enableNetworkEgressMetering"))
                            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.enableNetworkEgressMetering);
                        if (message.consumptionMeteringConfig != null && Object.hasOwnProperty.call(message, "consumptionMeteringConfig"))
                            $root.google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig.encode(message.consumptionMeteringConfig, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ResourceUsageExportConfig message, length delimited. Does not implicitly {@link google.container.v1.ResourceUsageExportConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.ResourceUsageExportConfig
                     * @static
                     * @param {google.container.v1.IResourceUsageExportConfig} message ResourceUsageExportConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ResourceUsageExportConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ResourceUsageExportConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.ResourceUsageExportConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.ResourceUsageExportConfig} ResourceUsageExportConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ResourceUsageExportConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.ResourceUsageExportConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.bigqueryDestination = $root.google.container.v1.ResourceUsageExportConfig.BigQueryDestination.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.enableNetworkEgressMetering = reader.bool();
                                    break;
                                }
                            case 3: {
                                    message.consumptionMeteringConfig = $root.google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ResourceUsageExportConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.ResourceUsageExportConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.ResourceUsageExportConfig} ResourceUsageExportConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ResourceUsageExportConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ResourceUsageExportConfig message.
                     * @function verify
                     * @memberof google.container.v1.ResourceUsageExportConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ResourceUsageExportConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.bigqueryDestination != null && message.hasOwnProperty("bigqueryDestination")) {
                            var error = $root.google.container.v1.ResourceUsageExportConfig.BigQueryDestination.verify(message.bigqueryDestination);
                            if (error)
                                return "bigqueryDestination." + error;
                        }
                        if (message.enableNetworkEgressMetering != null && message.hasOwnProperty("enableNetworkEgressMetering"))
                            if (typeof message.enableNetworkEgressMetering !== "boolean")
                                return "enableNetworkEgressMetering: boolean expected";
                        if (message.consumptionMeteringConfig != null && message.hasOwnProperty("consumptionMeteringConfig")) {
                            var error = $root.google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig.verify(message.consumptionMeteringConfig);
                            if (error)
                                return "consumptionMeteringConfig." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a ResourceUsageExportConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.ResourceUsageExportConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.ResourceUsageExportConfig} ResourceUsageExportConfig
                     */
                    ResourceUsageExportConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.ResourceUsageExportConfig)
                            return object;
                        var message = new $root.google.container.v1.ResourceUsageExportConfig();
                        if (object.bigqueryDestination != null) {
                            if (typeof object.bigqueryDestination !== "object")
                                throw TypeError(".google.container.v1.ResourceUsageExportConfig.bigqueryDestination: object expected");
                            message.bigqueryDestination = $root.google.container.v1.ResourceUsageExportConfig.BigQueryDestination.fromObject(object.bigqueryDestination);
                        }
                        if (object.enableNetworkEgressMetering != null)
                            message.enableNetworkEgressMetering = Boolean(object.enableNetworkEgressMetering);
                        if (object.consumptionMeteringConfig != null) {
                            if (typeof object.consumptionMeteringConfig !== "object")
                                throw TypeError(".google.container.v1.ResourceUsageExportConfig.consumptionMeteringConfig: object expected");
                            message.consumptionMeteringConfig = $root.google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig.fromObject(object.consumptionMeteringConfig);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ResourceUsageExportConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.ResourceUsageExportConfig
                     * @static
                     * @param {google.container.v1.ResourceUsageExportConfig} message ResourceUsageExportConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ResourceUsageExportConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.bigqueryDestination = null;
                            object.enableNetworkEgressMetering = false;
                            object.consumptionMeteringConfig = null;
                        }
                        if (message.bigqueryDestination != null && message.hasOwnProperty("bigqueryDestination"))
                            object.bigqueryDestination = $root.google.container.v1.ResourceUsageExportConfig.BigQueryDestination.toObject(message.bigqueryDestination, options);
                        if (message.enableNetworkEgressMetering != null && message.hasOwnProperty("enableNetworkEgressMetering"))
                            object.enableNetworkEgressMetering = message.enableNetworkEgressMetering;
                        if (message.consumptionMeteringConfig != null && message.hasOwnProperty("consumptionMeteringConfig"))
                            object.consumptionMeteringConfig = $root.google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig.toObject(message.consumptionMeteringConfig, options);
                        return object;
                    };
    
                    /**
                     * Converts this ResourceUsageExportConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.ResourceUsageExportConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ResourceUsageExportConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ResourceUsageExportConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.ResourceUsageExportConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ResourceUsageExportConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.ResourceUsageExportConfig";
                    };
    
                    ResourceUsageExportConfig.BigQueryDestination = (function() {
    
                        /**
                         * Properties of a BigQueryDestination.
                         * @memberof google.container.v1.ResourceUsageExportConfig
                         * @interface IBigQueryDestination
                         * @property {string|null} [datasetId] BigQueryDestination datasetId
                         */
    
                        /**
                         * Constructs a new BigQueryDestination.
                         * @memberof google.container.v1.ResourceUsageExportConfig
                         * @classdesc Represents a BigQueryDestination.
                         * @implements IBigQueryDestination
                         * @constructor
                         * @param {google.container.v1.ResourceUsageExportConfig.IBigQueryDestination=} [properties] Properties to set
                         */
                        function BigQueryDestination(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BigQueryDestination datasetId.
                         * @member {string} datasetId
                         * @memberof google.container.v1.ResourceUsageExportConfig.BigQueryDestination
                         * @instance
                         */
                        BigQueryDestination.prototype.datasetId = "";
    
                        /**
                         * Creates a new BigQueryDestination instance using the specified properties.
                         * @function create
                         * @memberof google.container.v1.ResourceUsageExportConfig.BigQueryDestination
                         * @static
                         * @param {google.container.v1.ResourceUsageExportConfig.IBigQueryDestination=} [properties] Properties to set
                         * @returns {google.container.v1.ResourceUsageExportConfig.BigQueryDestination} BigQueryDestination instance
                         */
                        BigQueryDestination.create = function create(properties) {
                            return new BigQueryDestination(properties);
                        };
    
                        /**
                         * Encodes the specified BigQueryDestination message. Does not implicitly {@link google.container.v1.ResourceUsageExportConfig.BigQueryDestination.verify|verify} messages.
                         * @function encode
                         * @memberof google.container.v1.ResourceUsageExportConfig.BigQueryDestination
                         * @static
                         * @param {google.container.v1.ResourceUsageExportConfig.IBigQueryDestination} message BigQueryDestination message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BigQueryDestination.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.datasetId != null && Object.hasOwnProperty.call(message, "datasetId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.datasetId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BigQueryDestination message, length delimited. Does not implicitly {@link google.container.v1.ResourceUsageExportConfig.BigQueryDestination.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.container.v1.ResourceUsageExportConfig.BigQueryDestination
                         * @static
                         * @param {google.container.v1.ResourceUsageExportConfig.IBigQueryDestination} message BigQueryDestination message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BigQueryDestination.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BigQueryDestination message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.container.v1.ResourceUsageExportConfig.BigQueryDestination
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.container.v1.ResourceUsageExportConfig.BigQueryDestination} BigQueryDestination
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BigQueryDestination.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.ResourceUsageExportConfig.BigQueryDestination();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.datasetId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BigQueryDestination message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.container.v1.ResourceUsageExportConfig.BigQueryDestination
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.container.v1.ResourceUsageExportConfig.BigQueryDestination} BigQueryDestination
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BigQueryDestination.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BigQueryDestination message.
                         * @function verify
                         * @memberof google.container.v1.ResourceUsageExportConfig.BigQueryDestination
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BigQueryDestination.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.datasetId != null && message.hasOwnProperty("datasetId"))
                                if (!$util.isString(message.datasetId))
                                    return "datasetId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a BigQueryDestination message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.container.v1.ResourceUsageExportConfig.BigQueryDestination
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.container.v1.ResourceUsageExportConfig.BigQueryDestination} BigQueryDestination
                         */
                        BigQueryDestination.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.container.v1.ResourceUsageExportConfig.BigQueryDestination)
                                return object;
                            var message = new $root.google.container.v1.ResourceUsageExportConfig.BigQueryDestination();
                            if (object.datasetId != null)
                                message.datasetId = String(object.datasetId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BigQueryDestination message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.container.v1.ResourceUsageExportConfig.BigQueryDestination
                         * @static
                         * @param {google.container.v1.ResourceUsageExportConfig.BigQueryDestination} message BigQueryDestination
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BigQueryDestination.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.datasetId = "";
                            if (message.datasetId != null && message.hasOwnProperty("datasetId"))
                                object.datasetId = message.datasetId;
                            return object;
                        };
    
                        /**
                         * Converts this BigQueryDestination to JSON.
                         * @function toJSON
                         * @memberof google.container.v1.ResourceUsageExportConfig.BigQueryDestination
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BigQueryDestination.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BigQueryDestination
                         * @function getTypeUrl
                         * @memberof google.container.v1.ResourceUsageExportConfig.BigQueryDestination
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BigQueryDestination.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.container.v1.ResourceUsageExportConfig.BigQueryDestination";
                        };
    
                        return BigQueryDestination;
                    })();
    
                    ResourceUsageExportConfig.ConsumptionMeteringConfig = (function() {
    
                        /**
                         * Properties of a ConsumptionMeteringConfig.
                         * @memberof google.container.v1.ResourceUsageExportConfig
                         * @interface IConsumptionMeteringConfig
                         * @property {boolean|null} [enabled] ConsumptionMeteringConfig enabled
                         */
    
                        /**
                         * Constructs a new ConsumptionMeteringConfig.
                         * @memberof google.container.v1.ResourceUsageExportConfig
                         * @classdesc Represents a ConsumptionMeteringConfig.
                         * @implements IConsumptionMeteringConfig
                         * @constructor
                         * @param {google.container.v1.ResourceUsageExportConfig.IConsumptionMeteringConfig=} [properties] Properties to set
                         */
                        function ConsumptionMeteringConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ConsumptionMeteringConfig enabled.
                         * @member {boolean} enabled
                         * @memberof google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig
                         * @instance
                         */
                        ConsumptionMeteringConfig.prototype.enabled = false;
    
                        /**
                         * Creates a new ConsumptionMeteringConfig instance using the specified properties.
                         * @function create
                         * @memberof google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig
                         * @static
                         * @param {google.container.v1.ResourceUsageExportConfig.IConsumptionMeteringConfig=} [properties] Properties to set
                         * @returns {google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig} ConsumptionMeteringConfig instance
                         */
                        ConsumptionMeteringConfig.create = function create(properties) {
                            return new ConsumptionMeteringConfig(properties);
                        };
    
                        /**
                         * Encodes the specified ConsumptionMeteringConfig message. Does not implicitly {@link google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig
                         * @static
                         * @param {google.container.v1.ResourceUsageExportConfig.IConsumptionMeteringConfig} message ConsumptionMeteringConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConsumptionMeteringConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ConsumptionMeteringConfig message, length delimited. Does not implicitly {@link google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig
                         * @static
                         * @param {google.container.v1.ResourceUsageExportConfig.IConsumptionMeteringConfig} message ConsumptionMeteringConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConsumptionMeteringConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ConsumptionMeteringConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig} ConsumptionMeteringConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConsumptionMeteringConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.enabled = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ConsumptionMeteringConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig} ConsumptionMeteringConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConsumptionMeteringConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ConsumptionMeteringConfig message.
                         * @function verify
                         * @memberof google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ConsumptionMeteringConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.enabled != null && message.hasOwnProperty("enabled"))
                                if (typeof message.enabled !== "boolean")
                                    return "enabled: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a ConsumptionMeteringConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig} ConsumptionMeteringConfig
                         */
                        ConsumptionMeteringConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig)
                                return object;
                            var message = new $root.google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig();
                            if (object.enabled != null)
                                message.enabled = Boolean(object.enabled);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ConsumptionMeteringConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig
                         * @static
                         * @param {google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig} message ConsumptionMeteringConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ConsumptionMeteringConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.enabled = false;
                            if (message.enabled != null && message.hasOwnProperty("enabled"))
                                object.enabled = message.enabled;
                            return object;
                        };
    
                        /**
                         * Converts this ConsumptionMeteringConfig to JSON.
                         * @function toJSON
                         * @memberof google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ConsumptionMeteringConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ConsumptionMeteringConfig
                         * @function getTypeUrl
                         * @memberof google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ConsumptionMeteringConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.container.v1.ResourceUsageExportConfig.ConsumptionMeteringConfig";
                        };
    
                        return ConsumptionMeteringConfig;
                    })();
    
                    return ResourceUsageExportConfig;
                })();
    
                v1.VerticalPodAutoscaling = (function() {
    
                    /**
                     * Properties of a VerticalPodAutoscaling.
                     * @memberof google.container.v1
                     * @interface IVerticalPodAutoscaling
                     * @property {boolean|null} [enabled] VerticalPodAutoscaling enabled
                     */
    
                    /**
                     * Constructs a new VerticalPodAutoscaling.
                     * @memberof google.container.v1
                     * @classdesc Represents a VerticalPodAutoscaling.
                     * @implements IVerticalPodAutoscaling
                     * @constructor
                     * @param {google.container.v1.IVerticalPodAutoscaling=} [properties] Properties to set
                     */
                    function VerticalPodAutoscaling(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * VerticalPodAutoscaling enabled.
                     * @member {boolean} enabled
                     * @memberof google.container.v1.VerticalPodAutoscaling
                     * @instance
                     */
                    VerticalPodAutoscaling.prototype.enabled = false;
    
                    /**
                     * Creates a new VerticalPodAutoscaling instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.VerticalPodAutoscaling
                     * @static
                     * @param {google.container.v1.IVerticalPodAutoscaling=} [properties] Properties to set
                     * @returns {google.container.v1.VerticalPodAutoscaling} VerticalPodAutoscaling instance
                     */
                    VerticalPodAutoscaling.create = function create(properties) {
                        return new VerticalPodAutoscaling(properties);
                    };
    
                    /**
                     * Encodes the specified VerticalPodAutoscaling message. Does not implicitly {@link google.container.v1.VerticalPodAutoscaling.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.VerticalPodAutoscaling
                     * @static
                     * @param {google.container.v1.IVerticalPodAutoscaling} message VerticalPodAutoscaling message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    VerticalPodAutoscaling.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified VerticalPodAutoscaling message, length delimited. Does not implicitly {@link google.container.v1.VerticalPodAutoscaling.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.VerticalPodAutoscaling
                     * @static
                     * @param {google.container.v1.IVerticalPodAutoscaling} message VerticalPodAutoscaling message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    VerticalPodAutoscaling.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a VerticalPodAutoscaling message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.VerticalPodAutoscaling
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.VerticalPodAutoscaling} VerticalPodAutoscaling
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    VerticalPodAutoscaling.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.VerticalPodAutoscaling();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.enabled = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a VerticalPodAutoscaling message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.VerticalPodAutoscaling
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.VerticalPodAutoscaling} VerticalPodAutoscaling
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    VerticalPodAutoscaling.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a VerticalPodAutoscaling message.
                     * @function verify
                     * @memberof google.container.v1.VerticalPodAutoscaling
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    VerticalPodAutoscaling.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            if (typeof message.enabled !== "boolean")
                                return "enabled: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a VerticalPodAutoscaling message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.VerticalPodAutoscaling
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.VerticalPodAutoscaling} VerticalPodAutoscaling
                     */
                    VerticalPodAutoscaling.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.VerticalPodAutoscaling)
                            return object;
                        var message = new $root.google.container.v1.VerticalPodAutoscaling();
                        if (object.enabled != null)
                            message.enabled = Boolean(object.enabled);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a VerticalPodAutoscaling message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.VerticalPodAutoscaling
                     * @static
                     * @param {google.container.v1.VerticalPodAutoscaling} message VerticalPodAutoscaling
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    VerticalPodAutoscaling.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.enabled = false;
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            object.enabled = message.enabled;
                        return object;
                    };
    
                    /**
                     * Converts this VerticalPodAutoscaling to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.VerticalPodAutoscaling
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    VerticalPodAutoscaling.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for VerticalPodAutoscaling
                     * @function getTypeUrl
                     * @memberof google.container.v1.VerticalPodAutoscaling
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    VerticalPodAutoscaling.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.VerticalPodAutoscaling";
                    };
    
                    return VerticalPodAutoscaling;
                })();
    
                v1.DefaultSnatStatus = (function() {
    
                    /**
                     * Properties of a DefaultSnatStatus.
                     * @memberof google.container.v1
                     * @interface IDefaultSnatStatus
                     * @property {boolean|null} [disabled] DefaultSnatStatus disabled
                     */
    
                    /**
                     * Constructs a new DefaultSnatStatus.
                     * @memberof google.container.v1
                     * @classdesc Represents a DefaultSnatStatus.
                     * @implements IDefaultSnatStatus
                     * @constructor
                     * @param {google.container.v1.IDefaultSnatStatus=} [properties] Properties to set
                     */
                    function DefaultSnatStatus(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * DefaultSnatStatus disabled.
                     * @member {boolean} disabled
                     * @memberof google.container.v1.DefaultSnatStatus
                     * @instance
                     */
                    DefaultSnatStatus.prototype.disabled = false;
    
                    /**
                     * Creates a new DefaultSnatStatus instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.DefaultSnatStatus
                     * @static
                     * @param {google.container.v1.IDefaultSnatStatus=} [properties] Properties to set
                     * @returns {google.container.v1.DefaultSnatStatus} DefaultSnatStatus instance
                     */
                    DefaultSnatStatus.create = function create(properties) {
                        return new DefaultSnatStatus(properties);
                    };
    
                    /**
                     * Encodes the specified DefaultSnatStatus message. Does not implicitly {@link google.container.v1.DefaultSnatStatus.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.DefaultSnatStatus
                     * @static
                     * @param {google.container.v1.IDefaultSnatStatus} message DefaultSnatStatus message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DefaultSnatStatus.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.disabled != null && Object.hasOwnProperty.call(message, "disabled"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.disabled);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified DefaultSnatStatus message, length delimited. Does not implicitly {@link google.container.v1.DefaultSnatStatus.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.DefaultSnatStatus
                     * @static
                     * @param {google.container.v1.IDefaultSnatStatus} message DefaultSnatStatus message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DefaultSnatStatus.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a DefaultSnatStatus message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.DefaultSnatStatus
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.DefaultSnatStatus} DefaultSnatStatus
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DefaultSnatStatus.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.DefaultSnatStatus();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.disabled = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a DefaultSnatStatus message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.DefaultSnatStatus
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.DefaultSnatStatus} DefaultSnatStatus
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DefaultSnatStatus.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a DefaultSnatStatus message.
                     * @function verify
                     * @memberof google.container.v1.DefaultSnatStatus
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    DefaultSnatStatus.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.disabled != null && message.hasOwnProperty("disabled"))
                            if (typeof message.disabled !== "boolean")
                                return "disabled: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a DefaultSnatStatus message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.DefaultSnatStatus
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.DefaultSnatStatus} DefaultSnatStatus
                     */
                    DefaultSnatStatus.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.DefaultSnatStatus)
                            return object;
                        var message = new $root.google.container.v1.DefaultSnatStatus();
                        if (object.disabled != null)
                            message.disabled = Boolean(object.disabled);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a DefaultSnatStatus message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.DefaultSnatStatus
                     * @static
                     * @param {google.container.v1.DefaultSnatStatus} message DefaultSnatStatus
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    DefaultSnatStatus.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.disabled = false;
                        if (message.disabled != null && message.hasOwnProperty("disabled"))
                            object.disabled = message.disabled;
                        return object;
                    };
    
                    /**
                     * Converts this DefaultSnatStatus to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.DefaultSnatStatus
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    DefaultSnatStatus.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for DefaultSnatStatus
                     * @function getTypeUrl
                     * @memberof google.container.v1.DefaultSnatStatus
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    DefaultSnatStatus.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.DefaultSnatStatus";
                    };
    
                    return DefaultSnatStatus;
                })();
    
                v1.ShieldedNodes = (function() {
    
                    /**
                     * Properties of a ShieldedNodes.
                     * @memberof google.container.v1
                     * @interface IShieldedNodes
                     * @property {boolean|null} [enabled] ShieldedNodes enabled
                     */
    
                    /**
                     * Constructs a new ShieldedNodes.
                     * @memberof google.container.v1
                     * @classdesc Represents a ShieldedNodes.
                     * @implements IShieldedNodes
                     * @constructor
                     * @param {google.container.v1.IShieldedNodes=} [properties] Properties to set
                     */
                    function ShieldedNodes(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ShieldedNodes enabled.
                     * @member {boolean} enabled
                     * @memberof google.container.v1.ShieldedNodes
                     * @instance
                     */
                    ShieldedNodes.prototype.enabled = false;
    
                    /**
                     * Creates a new ShieldedNodes instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.ShieldedNodes
                     * @static
                     * @param {google.container.v1.IShieldedNodes=} [properties] Properties to set
                     * @returns {google.container.v1.ShieldedNodes} ShieldedNodes instance
                     */
                    ShieldedNodes.create = function create(properties) {
                        return new ShieldedNodes(properties);
                    };
    
                    /**
                     * Encodes the specified ShieldedNodes message. Does not implicitly {@link google.container.v1.ShieldedNodes.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.ShieldedNodes
                     * @static
                     * @param {google.container.v1.IShieldedNodes} message ShieldedNodes message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ShieldedNodes.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ShieldedNodes message, length delimited. Does not implicitly {@link google.container.v1.ShieldedNodes.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.ShieldedNodes
                     * @static
                     * @param {google.container.v1.IShieldedNodes} message ShieldedNodes message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ShieldedNodes.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ShieldedNodes message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.ShieldedNodes
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.ShieldedNodes} ShieldedNodes
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ShieldedNodes.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.ShieldedNodes();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.enabled = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ShieldedNodes message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.ShieldedNodes
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.ShieldedNodes} ShieldedNodes
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ShieldedNodes.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ShieldedNodes message.
                     * @function verify
                     * @memberof google.container.v1.ShieldedNodes
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ShieldedNodes.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            if (typeof message.enabled !== "boolean")
                                return "enabled: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a ShieldedNodes message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.ShieldedNodes
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.ShieldedNodes} ShieldedNodes
                     */
                    ShieldedNodes.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.ShieldedNodes)
                            return object;
                        var message = new $root.google.container.v1.ShieldedNodes();
                        if (object.enabled != null)
                            message.enabled = Boolean(object.enabled);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ShieldedNodes message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.ShieldedNodes
                     * @static
                     * @param {google.container.v1.ShieldedNodes} message ShieldedNodes
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ShieldedNodes.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.enabled = false;
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            object.enabled = message.enabled;
                        return object;
                    };
    
                    /**
                     * Converts this ShieldedNodes to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.ShieldedNodes
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ShieldedNodes.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ShieldedNodes
                     * @function getTypeUrl
                     * @memberof google.container.v1.ShieldedNodes
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ShieldedNodes.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.ShieldedNodes";
                    };
    
                    return ShieldedNodes;
                })();
    
                v1.VirtualNIC = (function() {
    
                    /**
                     * Properties of a VirtualNIC.
                     * @memberof google.container.v1
                     * @interface IVirtualNIC
                     * @property {boolean|null} [enabled] VirtualNIC enabled
                     */
    
                    /**
                     * Constructs a new VirtualNIC.
                     * @memberof google.container.v1
                     * @classdesc Represents a VirtualNIC.
                     * @implements IVirtualNIC
                     * @constructor
                     * @param {google.container.v1.IVirtualNIC=} [properties] Properties to set
                     */
                    function VirtualNIC(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * VirtualNIC enabled.
                     * @member {boolean} enabled
                     * @memberof google.container.v1.VirtualNIC
                     * @instance
                     */
                    VirtualNIC.prototype.enabled = false;
    
                    /**
                     * Creates a new VirtualNIC instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.VirtualNIC
                     * @static
                     * @param {google.container.v1.IVirtualNIC=} [properties] Properties to set
                     * @returns {google.container.v1.VirtualNIC} VirtualNIC instance
                     */
                    VirtualNIC.create = function create(properties) {
                        return new VirtualNIC(properties);
                    };
    
                    /**
                     * Encodes the specified VirtualNIC message. Does not implicitly {@link google.container.v1.VirtualNIC.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.VirtualNIC
                     * @static
                     * @param {google.container.v1.IVirtualNIC} message VirtualNIC message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    VirtualNIC.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified VirtualNIC message, length delimited. Does not implicitly {@link google.container.v1.VirtualNIC.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.VirtualNIC
                     * @static
                     * @param {google.container.v1.IVirtualNIC} message VirtualNIC message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    VirtualNIC.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a VirtualNIC message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.VirtualNIC
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.VirtualNIC} VirtualNIC
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    VirtualNIC.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.VirtualNIC();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.enabled = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a VirtualNIC message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.VirtualNIC
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.VirtualNIC} VirtualNIC
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    VirtualNIC.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a VirtualNIC message.
                     * @function verify
                     * @memberof google.container.v1.VirtualNIC
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    VirtualNIC.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            if (typeof message.enabled !== "boolean")
                                return "enabled: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a VirtualNIC message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.VirtualNIC
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.VirtualNIC} VirtualNIC
                     */
                    VirtualNIC.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.VirtualNIC)
                            return object;
                        var message = new $root.google.container.v1.VirtualNIC();
                        if (object.enabled != null)
                            message.enabled = Boolean(object.enabled);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a VirtualNIC message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.VirtualNIC
                     * @static
                     * @param {google.container.v1.VirtualNIC} message VirtualNIC
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    VirtualNIC.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.enabled = false;
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            object.enabled = message.enabled;
                        return object;
                    };
    
                    /**
                     * Converts this VirtualNIC to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.VirtualNIC
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    VirtualNIC.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for VirtualNIC
                     * @function getTypeUrl
                     * @memberof google.container.v1.VirtualNIC
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    VirtualNIC.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.VirtualNIC";
                    };
    
                    return VirtualNIC;
                })();
    
                /**
                 * PrivateIPv6GoogleAccess enum.
                 * @name google.container.v1.PrivateIPv6GoogleAccess
                 * @enum {number}
                 * @property {number} PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED=0 PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED value
                 * @property {number} PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED=1 PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED value
                 * @property {number} PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE=2 PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE value
                 * @property {number} PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL=3 PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL value
                 */
                v1.PrivateIPv6GoogleAccess = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED"] = 1;
                    values[valuesById[2] = "PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE"] = 2;
                    values[valuesById[3] = "PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL"] = 3;
                    return values;
                })();
    
                v1.NotificationConfig = (function() {
    
                    /**
                     * Properties of a NotificationConfig.
                     * @memberof google.container.v1
                     * @interface INotificationConfig
                     * @property {google.container.v1.NotificationConfig.IPubSub|null} [pubsub] NotificationConfig pubsub
                     */
    
                    /**
                     * Constructs a new NotificationConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a NotificationConfig.
                     * @implements INotificationConfig
                     * @constructor
                     * @param {google.container.v1.INotificationConfig=} [properties] Properties to set
                     */
                    function NotificationConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NotificationConfig pubsub.
                     * @member {google.container.v1.NotificationConfig.IPubSub|null|undefined} pubsub
                     * @memberof google.container.v1.NotificationConfig
                     * @instance
                     */
                    NotificationConfig.prototype.pubsub = null;
    
                    /**
                     * Creates a new NotificationConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.NotificationConfig
                     * @static
                     * @param {google.container.v1.INotificationConfig=} [properties] Properties to set
                     * @returns {google.container.v1.NotificationConfig} NotificationConfig instance
                     */
                    NotificationConfig.create = function create(properties) {
                        return new NotificationConfig(properties);
                    };
    
                    /**
                     * Encodes the specified NotificationConfig message. Does not implicitly {@link google.container.v1.NotificationConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.NotificationConfig
                     * @static
                     * @param {google.container.v1.INotificationConfig} message NotificationConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NotificationConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.pubsub != null && Object.hasOwnProperty.call(message, "pubsub"))
                            $root.google.container.v1.NotificationConfig.PubSub.encode(message.pubsub, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NotificationConfig message, length delimited. Does not implicitly {@link google.container.v1.NotificationConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.NotificationConfig
                     * @static
                     * @param {google.container.v1.INotificationConfig} message NotificationConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NotificationConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NotificationConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.NotificationConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.NotificationConfig} NotificationConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NotificationConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.NotificationConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.pubsub = $root.google.container.v1.NotificationConfig.PubSub.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a NotificationConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.NotificationConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.NotificationConfig} NotificationConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NotificationConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NotificationConfig message.
                     * @function verify
                     * @memberof google.container.v1.NotificationConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NotificationConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.pubsub != null && message.hasOwnProperty("pubsub")) {
                            var error = $root.google.container.v1.NotificationConfig.PubSub.verify(message.pubsub);
                            if (error)
                                return "pubsub." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a NotificationConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.NotificationConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.NotificationConfig} NotificationConfig
                     */
                    NotificationConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.NotificationConfig)
                            return object;
                        var message = new $root.google.container.v1.NotificationConfig();
                        if (object.pubsub != null) {
                            if (typeof object.pubsub !== "object")
                                throw TypeError(".google.container.v1.NotificationConfig.pubsub: object expected");
                            message.pubsub = $root.google.container.v1.NotificationConfig.PubSub.fromObject(object.pubsub);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NotificationConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.NotificationConfig
                     * @static
                     * @param {google.container.v1.NotificationConfig} message NotificationConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NotificationConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.pubsub = null;
                        if (message.pubsub != null && message.hasOwnProperty("pubsub"))
                            object.pubsub = $root.google.container.v1.NotificationConfig.PubSub.toObject(message.pubsub, options);
                        return object;
                    };
    
                    /**
                     * Converts this NotificationConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.NotificationConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NotificationConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NotificationConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.NotificationConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NotificationConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.NotificationConfig";
                    };
    
                    /**
                     * EventType enum.
                     * @name google.container.v1.NotificationConfig.EventType
                     * @enum {number}
                     * @property {number} EVENT_TYPE_UNSPECIFIED=0 EVENT_TYPE_UNSPECIFIED value
                     * @property {number} UPGRADE_AVAILABLE_EVENT=1 UPGRADE_AVAILABLE_EVENT value
                     * @property {number} UPGRADE_EVENT=2 UPGRADE_EVENT value
                     * @property {number} SECURITY_BULLETIN_EVENT=3 SECURITY_BULLETIN_EVENT value
                     */
                    NotificationConfig.EventType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "EVENT_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "UPGRADE_AVAILABLE_EVENT"] = 1;
                        values[valuesById[2] = "UPGRADE_EVENT"] = 2;
                        values[valuesById[3] = "SECURITY_BULLETIN_EVENT"] = 3;
                        return values;
                    })();
    
                    NotificationConfig.PubSub = (function() {
    
                        /**
                         * Properties of a PubSub.
                         * @memberof google.container.v1.NotificationConfig
                         * @interface IPubSub
                         * @property {boolean|null} [enabled] PubSub enabled
                         * @property {string|null} [topic] PubSub topic
                         * @property {google.container.v1.NotificationConfig.IFilter|null} [filter] PubSub filter
                         */
    
                        /**
                         * Constructs a new PubSub.
                         * @memberof google.container.v1.NotificationConfig
                         * @classdesc Represents a PubSub.
                         * @implements IPubSub
                         * @constructor
                         * @param {google.container.v1.NotificationConfig.IPubSub=} [properties] Properties to set
                         */
                        function PubSub(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PubSub enabled.
                         * @member {boolean} enabled
                         * @memberof google.container.v1.NotificationConfig.PubSub
                         * @instance
                         */
                        PubSub.prototype.enabled = false;
    
                        /**
                         * PubSub topic.
                         * @member {string} topic
                         * @memberof google.container.v1.NotificationConfig.PubSub
                         * @instance
                         */
                        PubSub.prototype.topic = "";
    
                        /**
                         * PubSub filter.
                         * @member {google.container.v1.NotificationConfig.IFilter|null|undefined} filter
                         * @memberof google.container.v1.NotificationConfig.PubSub
                         * @instance
                         */
                        PubSub.prototype.filter = null;
    
                        /**
                         * Creates a new PubSub instance using the specified properties.
                         * @function create
                         * @memberof google.container.v1.NotificationConfig.PubSub
                         * @static
                         * @param {google.container.v1.NotificationConfig.IPubSub=} [properties] Properties to set
                         * @returns {google.container.v1.NotificationConfig.PubSub} PubSub instance
                         */
                        PubSub.create = function create(properties) {
                            return new PubSub(properties);
                        };
    
                        /**
                         * Encodes the specified PubSub message. Does not implicitly {@link google.container.v1.NotificationConfig.PubSub.verify|verify} messages.
                         * @function encode
                         * @memberof google.container.v1.NotificationConfig.PubSub
                         * @static
                         * @param {google.container.v1.NotificationConfig.IPubSub} message PubSub message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PubSub.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                            if (message.topic != null && Object.hasOwnProperty.call(message, "topic"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.topic);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                $root.google.container.v1.NotificationConfig.Filter.encode(message.filter, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PubSub message, length delimited. Does not implicitly {@link google.container.v1.NotificationConfig.PubSub.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.container.v1.NotificationConfig.PubSub
                         * @static
                         * @param {google.container.v1.NotificationConfig.IPubSub} message PubSub message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PubSub.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PubSub message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.container.v1.NotificationConfig.PubSub
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.container.v1.NotificationConfig.PubSub} PubSub
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PubSub.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.NotificationConfig.PubSub();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.enabled = reader.bool();
                                        break;
                                    }
                                case 2: {
                                        message.topic = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.filter = $root.google.container.v1.NotificationConfig.Filter.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PubSub message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.container.v1.NotificationConfig.PubSub
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.container.v1.NotificationConfig.PubSub} PubSub
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PubSub.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PubSub message.
                         * @function verify
                         * @memberof google.container.v1.NotificationConfig.PubSub
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PubSub.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.enabled != null && message.hasOwnProperty("enabled"))
                                if (typeof message.enabled !== "boolean")
                                    return "enabled: boolean expected";
                            if (message.topic != null && message.hasOwnProperty("topic"))
                                if (!$util.isString(message.topic))
                                    return "topic: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter")) {
                                var error = $root.google.container.v1.NotificationConfig.Filter.verify(message.filter);
                                if (error)
                                    return "filter." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PubSub message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.container.v1.NotificationConfig.PubSub
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.container.v1.NotificationConfig.PubSub} PubSub
                         */
                        PubSub.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.container.v1.NotificationConfig.PubSub)
                                return object;
                            var message = new $root.google.container.v1.NotificationConfig.PubSub();
                            if (object.enabled != null)
                                message.enabled = Boolean(object.enabled);
                            if (object.topic != null)
                                message.topic = String(object.topic);
                            if (object.filter != null) {
                                if (typeof object.filter !== "object")
                                    throw TypeError(".google.container.v1.NotificationConfig.PubSub.filter: object expected");
                                message.filter = $root.google.container.v1.NotificationConfig.Filter.fromObject(object.filter);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PubSub message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.container.v1.NotificationConfig.PubSub
                         * @static
                         * @param {google.container.v1.NotificationConfig.PubSub} message PubSub
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PubSub.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.enabled = false;
                                object.topic = "";
                                object.filter = null;
                            }
                            if (message.enabled != null && message.hasOwnProperty("enabled"))
                                object.enabled = message.enabled;
                            if (message.topic != null && message.hasOwnProperty("topic"))
                                object.topic = message.topic;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = $root.google.container.v1.NotificationConfig.Filter.toObject(message.filter, options);
                            return object;
                        };
    
                        /**
                         * Converts this PubSub to JSON.
                         * @function toJSON
                         * @memberof google.container.v1.NotificationConfig.PubSub
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PubSub.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PubSub
                         * @function getTypeUrl
                         * @memberof google.container.v1.NotificationConfig.PubSub
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PubSub.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.container.v1.NotificationConfig.PubSub";
                        };
    
                        return PubSub;
                    })();
    
                    NotificationConfig.Filter = (function() {
    
                        /**
                         * Properties of a Filter.
                         * @memberof google.container.v1.NotificationConfig
                         * @interface IFilter
                         * @property {Array.<google.container.v1.NotificationConfig.EventType>|null} [eventType] Filter eventType
                         */
    
                        /**
                         * Constructs a new Filter.
                         * @memberof google.container.v1.NotificationConfig
                         * @classdesc Represents a Filter.
                         * @implements IFilter
                         * @constructor
                         * @param {google.container.v1.NotificationConfig.IFilter=} [properties] Properties to set
                         */
                        function Filter(properties) {
                            this.eventType = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Filter eventType.
                         * @member {Array.<google.container.v1.NotificationConfig.EventType>} eventType
                         * @memberof google.container.v1.NotificationConfig.Filter
                         * @instance
                         */
                        Filter.prototype.eventType = $util.emptyArray;
    
                        /**
                         * Creates a new Filter instance using the specified properties.
                         * @function create
                         * @memberof google.container.v1.NotificationConfig.Filter
                         * @static
                         * @param {google.container.v1.NotificationConfig.IFilter=} [properties] Properties to set
                         * @returns {google.container.v1.NotificationConfig.Filter} Filter instance
                         */
                        Filter.create = function create(properties) {
                            return new Filter(properties);
                        };
    
                        /**
                         * Encodes the specified Filter message. Does not implicitly {@link google.container.v1.NotificationConfig.Filter.verify|verify} messages.
                         * @function encode
                         * @memberof google.container.v1.NotificationConfig.Filter
                         * @static
                         * @param {google.container.v1.NotificationConfig.IFilter} message Filter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Filter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.eventType != null && message.eventType.length) {
                                writer.uint32(/* id 1, wireType 2 =*/10).fork();
                                for (var i = 0; i < message.eventType.length; ++i)
                                    writer.int32(message.eventType[i]);
                                writer.ldelim();
                            }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Filter message, length delimited. Does not implicitly {@link google.container.v1.NotificationConfig.Filter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.container.v1.NotificationConfig.Filter
                         * @static
                         * @param {google.container.v1.NotificationConfig.IFilter} message Filter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Filter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Filter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.container.v1.NotificationConfig.Filter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.container.v1.NotificationConfig.Filter} Filter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Filter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.NotificationConfig.Filter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.eventType && message.eventType.length))
                                            message.eventType = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.eventType.push(reader.int32());
                                        } else
                                            message.eventType.push(reader.int32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Filter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.container.v1.NotificationConfig.Filter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.container.v1.NotificationConfig.Filter} Filter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Filter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Filter message.
                         * @function verify
                         * @memberof google.container.v1.NotificationConfig.Filter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Filter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.eventType != null && message.hasOwnProperty("eventType")) {
                                if (!Array.isArray(message.eventType))
                                    return "eventType: array expected";
                                for (var i = 0; i < message.eventType.length; ++i)
                                    switch (message.eventType[i]) {
                                    default:
                                        return "eventType: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Filter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.container.v1.NotificationConfig.Filter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.container.v1.NotificationConfig.Filter} Filter
                         */
                        Filter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.container.v1.NotificationConfig.Filter)
                                return object;
                            var message = new $root.google.container.v1.NotificationConfig.Filter();
                            if (object.eventType) {
                                if (!Array.isArray(object.eventType))
                                    throw TypeError(".google.container.v1.NotificationConfig.Filter.eventType: array expected");
                                message.eventType = [];
                                for (var i = 0; i < object.eventType.length; ++i)
                                    switch (object.eventType[i]) {
                                    default:
                                        if (typeof object.eventType[i] === "number") {
                                            message.eventType[i] = object.eventType[i];
                                            break;
                                        }
                                    case "EVENT_TYPE_UNSPECIFIED":
                                    case 0:
                                        message.eventType[i] = 0;
                                        break;
                                    case "UPGRADE_AVAILABLE_EVENT":
                                    case 1:
                                        message.eventType[i] = 1;
                                        break;
                                    case "UPGRADE_EVENT":
                                    case 2:
                                        message.eventType[i] = 2;
                                        break;
                                    case "SECURITY_BULLETIN_EVENT":
                                    case 3:
                                        message.eventType[i] = 3;
                                        break;
                                    }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Filter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.container.v1.NotificationConfig.Filter
                         * @static
                         * @param {google.container.v1.NotificationConfig.Filter} message Filter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Filter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.eventType = [];
                            if (message.eventType && message.eventType.length) {
                                object.eventType = [];
                                for (var j = 0; j < message.eventType.length; ++j)
                                    object.eventType[j] = options.enums === String ? $root.google.container.v1.NotificationConfig.EventType[message.eventType[j]] === undefined ? message.eventType[j] : $root.google.container.v1.NotificationConfig.EventType[message.eventType[j]] : message.eventType[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Filter to JSON.
                         * @function toJSON
                         * @memberof google.container.v1.NotificationConfig.Filter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Filter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Filter
                         * @function getTypeUrl
                         * @memberof google.container.v1.NotificationConfig.Filter
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Filter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.container.v1.NotificationConfig.Filter";
                        };
    
                        return Filter;
                    })();
    
                    return NotificationConfig;
                })();
    
                v1.ConfidentialNodes = (function() {
    
                    /**
                     * Properties of a ConfidentialNodes.
                     * @memberof google.container.v1
                     * @interface IConfidentialNodes
                     * @property {boolean|null} [enabled] ConfidentialNodes enabled
                     */
    
                    /**
                     * Constructs a new ConfidentialNodes.
                     * @memberof google.container.v1
                     * @classdesc Represents a ConfidentialNodes.
                     * @implements IConfidentialNodes
                     * @constructor
                     * @param {google.container.v1.IConfidentialNodes=} [properties] Properties to set
                     */
                    function ConfidentialNodes(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ConfidentialNodes enabled.
                     * @member {boolean} enabled
                     * @memberof google.container.v1.ConfidentialNodes
                     * @instance
                     */
                    ConfidentialNodes.prototype.enabled = false;
    
                    /**
                     * Creates a new ConfidentialNodes instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.ConfidentialNodes
                     * @static
                     * @param {google.container.v1.IConfidentialNodes=} [properties] Properties to set
                     * @returns {google.container.v1.ConfidentialNodes} ConfidentialNodes instance
                     */
                    ConfidentialNodes.create = function create(properties) {
                        return new ConfidentialNodes(properties);
                    };
    
                    /**
                     * Encodes the specified ConfidentialNodes message. Does not implicitly {@link google.container.v1.ConfidentialNodes.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.ConfidentialNodes
                     * @static
                     * @param {google.container.v1.IConfidentialNodes} message ConfidentialNodes message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ConfidentialNodes.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ConfidentialNodes message, length delimited. Does not implicitly {@link google.container.v1.ConfidentialNodes.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.ConfidentialNodes
                     * @static
                     * @param {google.container.v1.IConfidentialNodes} message ConfidentialNodes message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ConfidentialNodes.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ConfidentialNodes message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.ConfidentialNodes
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.ConfidentialNodes} ConfidentialNodes
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ConfidentialNodes.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.ConfidentialNodes();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.enabled = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ConfidentialNodes message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.ConfidentialNodes
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.ConfidentialNodes} ConfidentialNodes
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ConfidentialNodes.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ConfidentialNodes message.
                     * @function verify
                     * @memberof google.container.v1.ConfidentialNodes
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ConfidentialNodes.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            if (typeof message.enabled !== "boolean")
                                return "enabled: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a ConfidentialNodes message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.ConfidentialNodes
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.ConfidentialNodes} ConfidentialNodes
                     */
                    ConfidentialNodes.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.ConfidentialNodes)
                            return object;
                        var message = new $root.google.container.v1.ConfidentialNodes();
                        if (object.enabled != null)
                            message.enabled = Boolean(object.enabled);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ConfidentialNodes message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.ConfidentialNodes
                     * @static
                     * @param {google.container.v1.ConfidentialNodes} message ConfidentialNodes
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ConfidentialNodes.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.enabled = false;
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            object.enabled = message.enabled;
                        return object;
                    };
    
                    /**
                     * Converts this ConfidentialNodes to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.ConfidentialNodes
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ConfidentialNodes.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ConfidentialNodes
                     * @function getTypeUrl
                     * @memberof google.container.v1.ConfidentialNodes
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ConfidentialNodes.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.ConfidentialNodes";
                    };
    
                    return ConfidentialNodes;
                })();
    
                /**
                 * UpgradeResourceType enum.
                 * @name google.container.v1.UpgradeResourceType
                 * @enum {number}
                 * @property {number} UPGRADE_RESOURCE_TYPE_UNSPECIFIED=0 UPGRADE_RESOURCE_TYPE_UNSPECIFIED value
                 * @property {number} MASTER=1 MASTER value
                 * @property {number} NODE_POOL=2 NODE_POOL value
                 */
                v1.UpgradeResourceType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "UPGRADE_RESOURCE_TYPE_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "MASTER"] = 1;
                    values[valuesById[2] = "NODE_POOL"] = 2;
                    return values;
                })();
    
                v1.UpgradeEvent = (function() {
    
                    /**
                     * Properties of an UpgradeEvent.
                     * @memberof google.container.v1
                     * @interface IUpgradeEvent
                     * @property {google.container.v1.UpgradeResourceType|null} [resourceType] UpgradeEvent resourceType
                     * @property {string|null} [operation] UpgradeEvent operation
                     * @property {google.protobuf.ITimestamp|null} [operationStartTime] UpgradeEvent operationStartTime
                     * @property {string|null} [currentVersion] UpgradeEvent currentVersion
                     * @property {string|null} [targetVersion] UpgradeEvent targetVersion
                     * @property {string|null} [resource] UpgradeEvent resource
                     */
    
                    /**
                     * Constructs a new UpgradeEvent.
                     * @memberof google.container.v1
                     * @classdesc Represents an UpgradeEvent.
                     * @implements IUpgradeEvent
                     * @constructor
                     * @param {google.container.v1.IUpgradeEvent=} [properties] Properties to set
                     */
                    function UpgradeEvent(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * UpgradeEvent resourceType.
                     * @member {google.container.v1.UpgradeResourceType} resourceType
                     * @memberof google.container.v1.UpgradeEvent
                     * @instance
                     */
                    UpgradeEvent.prototype.resourceType = 0;
    
                    /**
                     * UpgradeEvent operation.
                     * @member {string} operation
                     * @memberof google.container.v1.UpgradeEvent
                     * @instance
                     */
                    UpgradeEvent.prototype.operation = "";
    
                    /**
                     * UpgradeEvent operationStartTime.
                     * @member {google.protobuf.ITimestamp|null|undefined} operationStartTime
                     * @memberof google.container.v1.UpgradeEvent
                     * @instance
                     */
                    UpgradeEvent.prototype.operationStartTime = null;
    
                    /**
                     * UpgradeEvent currentVersion.
                     * @member {string} currentVersion
                     * @memberof google.container.v1.UpgradeEvent
                     * @instance
                     */
                    UpgradeEvent.prototype.currentVersion = "";
    
                    /**
                     * UpgradeEvent targetVersion.
                     * @member {string} targetVersion
                     * @memberof google.container.v1.UpgradeEvent
                     * @instance
                     */
                    UpgradeEvent.prototype.targetVersion = "";
    
                    /**
                     * UpgradeEvent resource.
                     * @member {string} resource
                     * @memberof google.container.v1.UpgradeEvent
                     * @instance
                     */
                    UpgradeEvent.prototype.resource = "";
    
                    /**
                     * Creates a new UpgradeEvent instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.UpgradeEvent
                     * @static
                     * @param {google.container.v1.IUpgradeEvent=} [properties] Properties to set
                     * @returns {google.container.v1.UpgradeEvent} UpgradeEvent instance
                     */
                    UpgradeEvent.create = function create(properties) {
                        return new UpgradeEvent(properties);
                    };
    
                    /**
                     * Encodes the specified UpgradeEvent message. Does not implicitly {@link google.container.v1.UpgradeEvent.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.UpgradeEvent
                     * @static
                     * @param {google.container.v1.IUpgradeEvent} message UpgradeEvent message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpgradeEvent.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.resourceType != null && Object.hasOwnProperty.call(message, "resourceType"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.resourceType);
                        if (message.operation != null && Object.hasOwnProperty.call(message, "operation"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.operation);
                        if (message.operationStartTime != null && Object.hasOwnProperty.call(message, "operationStartTime"))
                            $root.google.protobuf.Timestamp.encode(message.operationStartTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.currentVersion != null && Object.hasOwnProperty.call(message, "currentVersion"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.currentVersion);
                        if (message.targetVersion != null && Object.hasOwnProperty.call(message, "targetVersion"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.targetVersion);
                        if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.resource);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified UpgradeEvent message, length delimited. Does not implicitly {@link google.container.v1.UpgradeEvent.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.UpgradeEvent
                     * @static
                     * @param {google.container.v1.IUpgradeEvent} message UpgradeEvent message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpgradeEvent.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an UpgradeEvent message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.UpgradeEvent
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.UpgradeEvent} UpgradeEvent
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpgradeEvent.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.UpgradeEvent();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.resourceType = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.operation = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.operationStartTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            case 4: {
                                    message.currentVersion = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.targetVersion = reader.string();
                                    break;
                                }
                            case 6: {
                                    message.resource = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an UpgradeEvent message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.UpgradeEvent
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.UpgradeEvent} UpgradeEvent
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpgradeEvent.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an UpgradeEvent message.
                     * @function verify
                     * @memberof google.container.v1.UpgradeEvent
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    UpgradeEvent.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.resourceType != null && message.hasOwnProperty("resourceType"))
                            switch (message.resourceType) {
                            default:
                                return "resourceType: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        if (message.operation != null && message.hasOwnProperty("operation"))
                            if (!$util.isString(message.operation))
                                return "operation: string expected";
                        if (message.operationStartTime != null && message.hasOwnProperty("operationStartTime")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.operationStartTime);
                            if (error)
                                return "operationStartTime." + error;
                        }
                        if (message.currentVersion != null && message.hasOwnProperty("currentVersion"))
                            if (!$util.isString(message.currentVersion))
                                return "currentVersion: string expected";
                        if (message.targetVersion != null && message.hasOwnProperty("targetVersion"))
                            if (!$util.isString(message.targetVersion))
                                return "targetVersion: string expected";
                        if (message.resource != null && message.hasOwnProperty("resource"))
                            if (!$util.isString(message.resource))
                                return "resource: string expected";
                        return null;
                    };
    
                    /**
                     * Creates an UpgradeEvent message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.UpgradeEvent
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.UpgradeEvent} UpgradeEvent
                     */
                    UpgradeEvent.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.UpgradeEvent)
                            return object;
                        var message = new $root.google.container.v1.UpgradeEvent();
                        switch (object.resourceType) {
                        default:
                            if (typeof object.resourceType === "number") {
                                message.resourceType = object.resourceType;
                                break;
                            }
                            break;
                        case "UPGRADE_RESOURCE_TYPE_UNSPECIFIED":
                        case 0:
                            message.resourceType = 0;
                            break;
                        case "MASTER":
                        case 1:
                            message.resourceType = 1;
                            break;
                        case "NODE_POOL":
                        case 2:
                            message.resourceType = 2;
                            break;
                        }
                        if (object.operation != null)
                            message.operation = String(object.operation);
                        if (object.operationStartTime != null) {
                            if (typeof object.operationStartTime !== "object")
                                throw TypeError(".google.container.v1.UpgradeEvent.operationStartTime: object expected");
                            message.operationStartTime = $root.google.protobuf.Timestamp.fromObject(object.operationStartTime);
                        }
                        if (object.currentVersion != null)
                            message.currentVersion = String(object.currentVersion);
                        if (object.targetVersion != null)
                            message.targetVersion = String(object.targetVersion);
                        if (object.resource != null)
                            message.resource = String(object.resource);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an UpgradeEvent message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.UpgradeEvent
                     * @static
                     * @param {google.container.v1.UpgradeEvent} message UpgradeEvent
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    UpgradeEvent.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.resourceType = options.enums === String ? "UPGRADE_RESOURCE_TYPE_UNSPECIFIED" : 0;
                            object.operation = "";
                            object.operationStartTime = null;
                            object.currentVersion = "";
                            object.targetVersion = "";
                            object.resource = "";
                        }
                        if (message.resourceType != null && message.hasOwnProperty("resourceType"))
                            object.resourceType = options.enums === String ? $root.google.container.v1.UpgradeResourceType[message.resourceType] === undefined ? message.resourceType : $root.google.container.v1.UpgradeResourceType[message.resourceType] : message.resourceType;
                        if (message.operation != null && message.hasOwnProperty("operation"))
                            object.operation = message.operation;
                        if (message.operationStartTime != null && message.hasOwnProperty("operationStartTime"))
                            object.operationStartTime = $root.google.protobuf.Timestamp.toObject(message.operationStartTime, options);
                        if (message.currentVersion != null && message.hasOwnProperty("currentVersion"))
                            object.currentVersion = message.currentVersion;
                        if (message.targetVersion != null && message.hasOwnProperty("targetVersion"))
                            object.targetVersion = message.targetVersion;
                        if (message.resource != null && message.hasOwnProperty("resource"))
                            object.resource = message.resource;
                        return object;
                    };
    
                    /**
                     * Converts this UpgradeEvent to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.UpgradeEvent
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    UpgradeEvent.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for UpgradeEvent
                     * @function getTypeUrl
                     * @memberof google.container.v1.UpgradeEvent
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    UpgradeEvent.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.UpgradeEvent";
                    };
    
                    return UpgradeEvent;
                })();
    
                v1.UpgradeAvailableEvent = (function() {
    
                    /**
                     * Properties of an UpgradeAvailableEvent.
                     * @memberof google.container.v1
                     * @interface IUpgradeAvailableEvent
                     * @property {string|null} [version] UpgradeAvailableEvent version
                     * @property {google.container.v1.UpgradeResourceType|null} [resourceType] UpgradeAvailableEvent resourceType
                     * @property {google.container.v1.IReleaseChannel|null} [releaseChannel] UpgradeAvailableEvent releaseChannel
                     * @property {string|null} [resource] UpgradeAvailableEvent resource
                     */
    
                    /**
                     * Constructs a new UpgradeAvailableEvent.
                     * @memberof google.container.v1
                     * @classdesc Represents an UpgradeAvailableEvent.
                     * @implements IUpgradeAvailableEvent
                     * @constructor
                     * @param {google.container.v1.IUpgradeAvailableEvent=} [properties] Properties to set
                     */
                    function UpgradeAvailableEvent(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * UpgradeAvailableEvent version.
                     * @member {string} version
                     * @memberof google.container.v1.UpgradeAvailableEvent
                     * @instance
                     */
                    UpgradeAvailableEvent.prototype.version = "";
    
                    /**
                     * UpgradeAvailableEvent resourceType.
                     * @member {google.container.v1.UpgradeResourceType} resourceType
                     * @memberof google.container.v1.UpgradeAvailableEvent
                     * @instance
                     */
                    UpgradeAvailableEvent.prototype.resourceType = 0;
    
                    /**
                     * UpgradeAvailableEvent releaseChannel.
                     * @member {google.container.v1.IReleaseChannel|null|undefined} releaseChannel
                     * @memberof google.container.v1.UpgradeAvailableEvent
                     * @instance
                     */
                    UpgradeAvailableEvent.prototype.releaseChannel = null;
    
                    /**
                     * UpgradeAvailableEvent resource.
                     * @member {string} resource
                     * @memberof google.container.v1.UpgradeAvailableEvent
                     * @instance
                     */
                    UpgradeAvailableEvent.prototype.resource = "";
    
                    /**
                     * Creates a new UpgradeAvailableEvent instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.UpgradeAvailableEvent
                     * @static
                     * @param {google.container.v1.IUpgradeAvailableEvent=} [properties] Properties to set
                     * @returns {google.container.v1.UpgradeAvailableEvent} UpgradeAvailableEvent instance
                     */
                    UpgradeAvailableEvent.create = function create(properties) {
                        return new UpgradeAvailableEvent(properties);
                    };
    
                    /**
                     * Encodes the specified UpgradeAvailableEvent message. Does not implicitly {@link google.container.v1.UpgradeAvailableEvent.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.UpgradeAvailableEvent
                     * @static
                     * @param {google.container.v1.IUpgradeAvailableEvent} message UpgradeAvailableEvent message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpgradeAvailableEvent.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                        if (message.resourceType != null && Object.hasOwnProperty.call(message, "resourceType"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.resourceType);
                        if (message.releaseChannel != null && Object.hasOwnProperty.call(message, "releaseChannel"))
                            $root.google.container.v1.ReleaseChannel.encode(message.releaseChannel, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.resource);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified UpgradeAvailableEvent message, length delimited. Does not implicitly {@link google.container.v1.UpgradeAvailableEvent.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.UpgradeAvailableEvent
                     * @static
                     * @param {google.container.v1.IUpgradeAvailableEvent} message UpgradeAvailableEvent message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpgradeAvailableEvent.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an UpgradeAvailableEvent message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.UpgradeAvailableEvent
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.UpgradeAvailableEvent} UpgradeAvailableEvent
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpgradeAvailableEvent.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.UpgradeAvailableEvent();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.version = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.resourceType = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.releaseChannel = $root.google.container.v1.ReleaseChannel.decode(reader, reader.uint32());
                                    break;
                                }
                            case 4: {
                                    message.resource = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an UpgradeAvailableEvent message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.UpgradeAvailableEvent
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.UpgradeAvailableEvent} UpgradeAvailableEvent
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpgradeAvailableEvent.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an UpgradeAvailableEvent message.
                     * @function verify
                     * @memberof google.container.v1.UpgradeAvailableEvent
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    UpgradeAvailableEvent.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.version != null && message.hasOwnProperty("version"))
                            if (!$util.isString(message.version))
                                return "version: string expected";
                        if (message.resourceType != null && message.hasOwnProperty("resourceType"))
                            switch (message.resourceType) {
                            default:
                                return "resourceType: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        if (message.releaseChannel != null && message.hasOwnProperty("releaseChannel")) {
                            var error = $root.google.container.v1.ReleaseChannel.verify(message.releaseChannel);
                            if (error)
                                return "releaseChannel." + error;
                        }
                        if (message.resource != null && message.hasOwnProperty("resource"))
                            if (!$util.isString(message.resource))
                                return "resource: string expected";
                        return null;
                    };
    
                    /**
                     * Creates an UpgradeAvailableEvent message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.UpgradeAvailableEvent
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.UpgradeAvailableEvent} UpgradeAvailableEvent
                     */
                    UpgradeAvailableEvent.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.UpgradeAvailableEvent)
                            return object;
                        var message = new $root.google.container.v1.UpgradeAvailableEvent();
                        if (object.version != null)
                            message.version = String(object.version);
                        switch (object.resourceType) {
                        default:
                            if (typeof object.resourceType === "number") {
                                message.resourceType = object.resourceType;
                                break;
                            }
                            break;
                        case "UPGRADE_RESOURCE_TYPE_UNSPECIFIED":
                        case 0:
                            message.resourceType = 0;
                            break;
                        case "MASTER":
                        case 1:
                            message.resourceType = 1;
                            break;
                        case "NODE_POOL":
                        case 2:
                            message.resourceType = 2;
                            break;
                        }
                        if (object.releaseChannel != null) {
                            if (typeof object.releaseChannel !== "object")
                                throw TypeError(".google.container.v1.UpgradeAvailableEvent.releaseChannel: object expected");
                            message.releaseChannel = $root.google.container.v1.ReleaseChannel.fromObject(object.releaseChannel);
                        }
                        if (object.resource != null)
                            message.resource = String(object.resource);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an UpgradeAvailableEvent message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.UpgradeAvailableEvent
                     * @static
                     * @param {google.container.v1.UpgradeAvailableEvent} message UpgradeAvailableEvent
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    UpgradeAvailableEvent.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.version = "";
                            object.resourceType = options.enums === String ? "UPGRADE_RESOURCE_TYPE_UNSPECIFIED" : 0;
                            object.releaseChannel = null;
                            object.resource = "";
                        }
                        if (message.version != null && message.hasOwnProperty("version"))
                            object.version = message.version;
                        if (message.resourceType != null && message.hasOwnProperty("resourceType"))
                            object.resourceType = options.enums === String ? $root.google.container.v1.UpgradeResourceType[message.resourceType] === undefined ? message.resourceType : $root.google.container.v1.UpgradeResourceType[message.resourceType] : message.resourceType;
                        if (message.releaseChannel != null && message.hasOwnProperty("releaseChannel"))
                            object.releaseChannel = $root.google.container.v1.ReleaseChannel.toObject(message.releaseChannel, options);
                        if (message.resource != null && message.hasOwnProperty("resource"))
                            object.resource = message.resource;
                        return object;
                    };
    
                    /**
                     * Converts this UpgradeAvailableEvent to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.UpgradeAvailableEvent
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    UpgradeAvailableEvent.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for UpgradeAvailableEvent
                     * @function getTypeUrl
                     * @memberof google.container.v1.UpgradeAvailableEvent
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    UpgradeAvailableEvent.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.UpgradeAvailableEvent";
                    };
    
                    return UpgradeAvailableEvent;
                })();
    
                v1.SecurityBulletinEvent = (function() {
    
                    /**
                     * Properties of a SecurityBulletinEvent.
                     * @memberof google.container.v1
                     * @interface ISecurityBulletinEvent
                     * @property {string|null} [resourceTypeAffected] SecurityBulletinEvent resourceTypeAffected
                     * @property {string|null} [bulletinId] SecurityBulletinEvent bulletinId
                     * @property {Array.<string>|null} [cveIds] SecurityBulletinEvent cveIds
                     * @property {string|null} [severity] SecurityBulletinEvent severity
                     * @property {string|null} [bulletinUri] SecurityBulletinEvent bulletinUri
                     * @property {string|null} [briefDescription] SecurityBulletinEvent briefDescription
                     * @property {Array.<string>|null} [affectedSupportedMinors] SecurityBulletinEvent affectedSupportedMinors
                     * @property {Array.<string>|null} [patchedVersions] SecurityBulletinEvent patchedVersions
                     * @property {string|null} [suggestedUpgradeTarget] SecurityBulletinEvent suggestedUpgradeTarget
                     * @property {boolean|null} [manualStepsRequired] SecurityBulletinEvent manualStepsRequired
                     */
    
                    /**
                     * Constructs a new SecurityBulletinEvent.
                     * @memberof google.container.v1
                     * @classdesc Represents a SecurityBulletinEvent.
                     * @implements ISecurityBulletinEvent
                     * @constructor
                     * @param {google.container.v1.ISecurityBulletinEvent=} [properties] Properties to set
                     */
                    function SecurityBulletinEvent(properties) {
                        this.cveIds = [];
                        this.affectedSupportedMinors = [];
                        this.patchedVersions = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * SecurityBulletinEvent resourceTypeAffected.
                     * @member {string} resourceTypeAffected
                     * @memberof google.container.v1.SecurityBulletinEvent
                     * @instance
                     */
                    SecurityBulletinEvent.prototype.resourceTypeAffected = "";
    
                    /**
                     * SecurityBulletinEvent bulletinId.
                     * @member {string} bulletinId
                     * @memberof google.container.v1.SecurityBulletinEvent
                     * @instance
                     */
                    SecurityBulletinEvent.prototype.bulletinId = "";
    
                    /**
                     * SecurityBulletinEvent cveIds.
                     * @member {Array.<string>} cveIds
                     * @memberof google.container.v1.SecurityBulletinEvent
                     * @instance
                     */
                    SecurityBulletinEvent.prototype.cveIds = $util.emptyArray;
    
                    /**
                     * SecurityBulletinEvent severity.
                     * @member {string} severity
                     * @memberof google.container.v1.SecurityBulletinEvent
                     * @instance
                     */
                    SecurityBulletinEvent.prototype.severity = "";
    
                    /**
                     * SecurityBulletinEvent bulletinUri.
                     * @member {string} bulletinUri
                     * @memberof google.container.v1.SecurityBulletinEvent
                     * @instance
                     */
                    SecurityBulletinEvent.prototype.bulletinUri = "";
    
                    /**
                     * SecurityBulletinEvent briefDescription.
                     * @member {string} briefDescription
                     * @memberof google.container.v1.SecurityBulletinEvent
                     * @instance
                     */
                    SecurityBulletinEvent.prototype.briefDescription = "";
    
                    /**
                     * SecurityBulletinEvent affectedSupportedMinors.
                     * @member {Array.<string>} affectedSupportedMinors
                     * @memberof google.container.v1.SecurityBulletinEvent
                     * @instance
                     */
                    SecurityBulletinEvent.prototype.affectedSupportedMinors = $util.emptyArray;
    
                    /**
                     * SecurityBulletinEvent patchedVersions.
                     * @member {Array.<string>} patchedVersions
                     * @memberof google.container.v1.SecurityBulletinEvent
                     * @instance
                     */
                    SecurityBulletinEvent.prototype.patchedVersions = $util.emptyArray;
    
                    /**
                     * SecurityBulletinEvent suggestedUpgradeTarget.
                     * @member {string} suggestedUpgradeTarget
                     * @memberof google.container.v1.SecurityBulletinEvent
                     * @instance
                     */
                    SecurityBulletinEvent.prototype.suggestedUpgradeTarget = "";
    
                    /**
                     * SecurityBulletinEvent manualStepsRequired.
                     * @member {boolean} manualStepsRequired
                     * @memberof google.container.v1.SecurityBulletinEvent
                     * @instance
                     */
                    SecurityBulletinEvent.prototype.manualStepsRequired = false;
    
                    /**
                     * Creates a new SecurityBulletinEvent instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.SecurityBulletinEvent
                     * @static
                     * @param {google.container.v1.ISecurityBulletinEvent=} [properties] Properties to set
                     * @returns {google.container.v1.SecurityBulletinEvent} SecurityBulletinEvent instance
                     */
                    SecurityBulletinEvent.create = function create(properties) {
                        return new SecurityBulletinEvent(properties);
                    };
    
                    /**
                     * Encodes the specified SecurityBulletinEvent message. Does not implicitly {@link google.container.v1.SecurityBulletinEvent.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.SecurityBulletinEvent
                     * @static
                     * @param {google.container.v1.ISecurityBulletinEvent} message SecurityBulletinEvent message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SecurityBulletinEvent.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.resourceTypeAffected != null && Object.hasOwnProperty.call(message, "resourceTypeAffected"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.resourceTypeAffected);
                        if (message.bulletinId != null && Object.hasOwnProperty.call(message, "bulletinId"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.bulletinId);
                        if (message.cveIds != null && message.cveIds.length)
                            for (var i = 0; i < message.cveIds.length; ++i)
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.cveIds[i]);
                        if (message.severity != null && Object.hasOwnProperty.call(message, "severity"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.severity);
                        if (message.bulletinUri != null && Object.hasOwnProperty.call(message, "bulletinUri"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.bulletinUri);
                        if (message.briefDescription != null && Object.hasOwnProperty.call(message, "briefDescription"))
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.briefDescription);
                        if (message.affectedSupportedMinors != null && message.affectedSupportedMinors.length)
                            for (var i = 0; i < message.affectedSupportedMinors.length; ++i)
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.affectedSupportedMinors[i]);
                        if (message.patchedVersions != null && message.patchedVersions.length)
                            for (var i = 0; i < message.patchedVersions.length; ++i)
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.patchedVersions[i]);
                        if (message.suggestedUpgradeTarget != null && Object.hasOwnProperty.call(message, "suggestedUpgradeTarget"))
                            writer.uint32(/* id 9, wireType 2 =*/74).string(message.suggestedUpgradeTarget);
                        if (message.manualStepsRequired != null && Object.hasOwnProperty.call(message, "manualStepsRequired"))
                            writer.uint32(/* id 10, wireType 0 =*/80).bool(message.manualStepsRequired);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified SecurityBulletinEvent message, length delimited. Does not implicitly {@link google.container.v1.SecurityBulletinEvent.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.SecurityBulletinEvent
                     * @static
                     * @param {google.container.v1.ISecurityBulletinEvent} message SecurityBulletinEvent message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SecurityBulletinEvent.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a SecurityBulletinEvent message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.SecurityBulletinEvent
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.SecurityBulletinEvent} SecurityBulletinEvent
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SecurityBulletinEvent.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.SecurityBulletinEvent();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.resourceTypeAffected = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.bulletinId = reader.string();
                                    break;
                                }
                            case 3: {
                                    if (!(message.cveIds && message.cveIds.length))
                                        message.cveIds = [];
                                    message.cveIds.push(reader.string());
                                    break;
                                }
                            case 4: {
                                    message.severity = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.bulletinUri = reader.string();
                                    break;
                                }
                            case 6: {
                                    message.briefDescription = reader.string();
                                    break;
                                }
                            case 7: {
                                    if (!(message.affectedSupportedMinors && message.affectedSupportedMinors.length))
                                        message.affectedSupportedMinors = [];
                                    message.affectedSupportedMinors.push(reader.string());
                                    break;
                                }
                            case 8: {
                                    if (!(message.patchedVersions && message.patchedVersions.length))
                                        message.patchedVersions = [];
                                    message.patchedVersions.push(reader.string());
                                    break;
                                }
                            case 9: {
                                    message.suggestedUpgradeTarget = reader.string();
                                    break;
                                }
                            case 10: {
                                    message.manualStepsRequired = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a SecurityBulletinEvent message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.SecurityBulletinEvent
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.SecurityBulletinEvent} SecurityBulletinEvent
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SecurityBulletinEvent.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a SecurityBulletinEvent message.
                     * @function verify
                     * @memberof google.container.v1.SecurityBulletinEvent
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    SecurityBulletinEvent.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.resourceTypeAffected != null && message.hasOwnProperty("resourceTypeAffected"))
                            if (!$util.isString(message.resourceTypeAffected))
                                return "resourceTypeAffected: string expected";
                        if (message.bulletinId != null && message.hasOwnProperty("bulletinId"))
                            if (!$util.isString(message.bulletinId))
                                return "bulletinId: string expected";
                        if (message.cveIds != null && message.hasOwnProperty("cveIds")) {
                            if (!Array.isArray(message.cveIds))
                                return "cveIds: array expected";
                            for (var i = 0; i < message.cveIds.length; ++i)
                                if (!$util.isString(message.cveIds[i]))
                                    return "cveIds: string[] expected";
                        }
                        if (message.severity != null && message.hasOwnProperty("severity"))
                            if (!$util.isString(message.severity))
                                return "severity: string expected";
                        if (message.bulletinUri != null && message.hasOwnProperty("bulletinUri"))
                            if (!$util.isString(message.bulletinUri))
                                return "bulletinUri: string expected";
                        if (message.briefDescription != null && message.hasOwnProperty("briefDescription"))
                            if (!$util.isString(message.briefDescription))
                                return "briefDescription: string expected";
                        if (message.affectedSupportedMinors != null && message.hasOwnProperty("affectedSupportedMinors")) {
                            if (!Array.isArray(message.affectedSupportedMinors))
                                return "affectedSupportedMinors: array expected";
                            for (var i = 0; i < message.affectedSupportedMinors.length; ++i)
                                if (!$util.isString(message.affectedSupportedMinors[i]))
                                    return "affectedSupportedMinors: string[] expected";
                        }
                        if (message.patchedVersions != null && message.hasOwnProperty("patchedVersions")) {
                            if (!Array.isArray(message.patchedVersions))
                                return "patchedVersions: array expected";
                            for (var i = 0; i < message.patchedVersions.length; ++i)
                                if (!$util.isString(message.patchedVersions[i]))
                                    return "patchedVersions: string[] expected";
                        }
                        if (message.suggestedUpgradeTarget != null && message.hasOwnProperty("suggestedUpgradeTarget"))
                            if (!$util.isString(message.suggestedUpgradeTarget))
                                return "suggestedUpgradeTarget: string expected";
                        if (message.manualStepsRequired != null && message.hasOwnProperty("manualStepsRequired"))
                            if (typeof message.manualStepsRequired !== "boolean")
                                return "manualStepsRequired: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a SecurityBulletinEvent message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.SecurityBulletinEvent
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.SecurityBulletinEvent} SecurityBulletinEvent
                     */
                    SecurityBulletinEvent.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.SecurityBulletinEvent)
                            return object;
                        var message = new $root.google.container.v1.SecurityBulletinEvent();
                        if (object.resourceTypeAffected != null)
                            message.resourceTypeAffected = String(object.resourceTypeAffected);
                        if (object.bulletinId != null)
                            message.bulletinId = String(object.bulletinId);
                        if (object.cveIds) {
                            if (!Array.isArray(object.cveIds))
                                throw TypeError(".google.container.v1.SecurityBulletinEvent.cveIds: array expected");
                            message.cveIds = [];
                            for (var i = 0; i < object.cveIds.length; ++i)
                                message.cveIds[i] = String(object.cveIds[i]);
                        }
                        if (object.severity != null)
                            message.severity = String(object.severity);
                        if (object.bulletinUri != null)
                            message.bulletinUri = String(object.bulletinUri);
                        if (object.briefDescription != null)
                            message.briefDescription = String(object.briefDescription);
                        if (object.affectedSupportedMinors) {
                            if (!Array.isArray(object.affectedSupportedMinors))
                                throw TypeError(".google.container.v1.SecurityBulletinEvent.affectedSupportedMinors: array expected");
                            message.affectedSupportedMinors = [];
                            for (var i = 0; i < object.affectedSupportedMinors.length; ++i)
                                message.affectedSupportedMinors[i] = String(object.affectedSupportedMinors[i]);
                        }
                        if (object.patchedVersions) {
                            if (!Array.isArray(object.patchedVersions))
                                throw TypeError(".google.container.v1.SecurityBulletinEvent.patchedVersions: array expected");
                            message.patchedVersions = [];
                            for (var i = 0; i < object.patchedVersions.length; ++i)
                                message.patchedVersions[i] = String(object.patchedVersions[i]);
                        }
                        if (object.suggestedUpgradeTarget != null)
                            message.suggestedUpgradeTarget = String(object.suggestedUpgradeTarget);
                        if (object.manualStepsRequired != null)
                            message.manualStepsRequired = Boolean(object.manualStepsRequired);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a SecurityBulletinEvent message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.SecurityBulletinEvent
                     * @static
                     * @param {google.container.v1.SecurityBulletinEvent} message SecurityBulletinEvent
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    SecurityBulletinEvent.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.cveIds = [];
                            object.affectedSupportedMinors = [];
                            object.patchedVersions = [];
                        }
                        if (options.defaults) {
                            object.resourceTypeAffected = "";
                            object.bulletinId = "";
                            object.severity = "";
                            object.bulletinUri = "";
                            object.briefDescription = "";
                            object.suggestedUpgradeTarget = "";
                            object.manualStepsRequired = false;
                        }
                        if (message.resourceTypeAffected != null && message.hasOwnProperty("resourceTypeAffected"))
                            object.resourceTypeAffected = message.resourceTypeAffected;
                        if (message.bulletinId != null && message.hasOwnProperty("bulletinId"))
                            object.bulletinId = message.bulletinId;
                        if (message.cveIds && message.cveIds.length) {
                            object.cveIds = [];
                            for (var j = 0; j < message.cveIds.length; ++j)
                                object.cveIds[j] = message.cveIds[j];
                        }
                        if (message.severity != null && message.hasOwnProperty("severity"))
                            object.severity = message.severity;
                        if (message.bulletinUri != null && message.hasOwnProperty("bulletinUri"))
                            object.bulletinUri = message.bulletinUri;
                        if (message.briefDescription != null && message.hasOwnProperty("briefDescription"))
                            object.briefDescription = message.briefDescription;
                        if (message.affectedSupportedMinors && message.affectedSupportedMinors.length) {
                            object.affectedSupportedMinors = [];
                            for (var j = 0; j < message.affectedSupportedMinors.length; ++j)
                                object.affectedSupportedMinors[j] = message.affectedSupportedMinors[j];
                        }
                        if (message.patchedVersions && message.patchedVersions.length) {
                            object.patchedVersions = [];
                            for (var j = 0; j < message.patchedVersions.length; ++j)
                                object.patchedVersions[j] = message.patchedVersions[j];
                        }
                        if (message.suggestedUpgradeTarget != null && message.hasOwnProperty("suggestedUpgradeTarget"))
                            object.suggestedUpgradeTarget = message.suggestedUpgradeTarget;
                        if (message.manualStepsRequired != null && message.hasOwnProperty("manualStepsRequired"))
                            object.manualStepsRequired = message.manualStepsRequired;
                        return object;
                    };
    
                    /**
                     * Converts this SecurityBulletinEvent to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.SecurityBulletinEvent
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    SecurityBulletinEvent.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for SecurityBulletinEvent
                     * @function getTypeUrl
                     * @memberof google.container.v1.SecurityBulletinEvent
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    SecurityBulletinEvent.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.SecurityBulletinEvent";
                    };
    
                    return SecurityBulletinEvent;
                })();
    
                v1.Autopilot = (function() {
    
                    /**
                     * Properties of an Autopilot.
                     * @memberof google.container.v1
                     * @interface IAutopilot
                     * @property {boolean|null} [enabled] Autopilot enabled
                     */
    
                    /**
                     * Constructs a new Autopilot.
                     * @memberof google.container.v1
                     * @classdesc Represents an Autopilot.
                     * @implements IAutopilot
                     * @constructor
                     * @param {google.container.v1.IAutopilot=} [properties] Properties to set
                     */
                    function Autopilot(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Autopilot enabled.
                     * @member {boolean} enabled
                     * @memberof google.container.v1.Autopilot
                     * @instance
                     */
                    Autopilot.prototype.enabled = false;
    
                    /**
                     * Creates a new Autopilot instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.Autopilot
                     * @static
                     * @param {google.container.v1.IAutopilot=} [properties] Properties to set
                     * @returns {google.container.v1.Autopilot} Autopilot instance
                     */
                    Autopilot.create = function create(properties) {
                        return new Autopilot(properties);
                    };
    
                    /**
                     * Encodes the specified Autopilot message. Does not implicitly {@link google.container.v1.Autopilot.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.Autopilot
                     * @static
                     * @param {google.container.v1.IAutopilot} message Autopilot message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Autopilot.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Autopilot message, length delimited. Does not implicitly {@link google.container.v1.Autopilot.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.Autopilot
                     * @static
                     * @param {google.container.v1.IAutopilot} message Autopilot message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Autopilot.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Autopilot message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.Autopilot
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.Autopilot} Autopilot
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Autopilot.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.Autopilot();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.enabled = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Autopilot message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.Autopilot
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.Autopilot} Autopilot
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Autopilot.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Autopilot message.
                     * @function verify
                     * @memberof google.container.v1.Autopilot
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Autopilot.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            if (typeof message.enabled !== "boolean")
                                return "enabled: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates an Autopilot message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.Autopilot
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.Autopilot} Autopilot
                     */
                    Autopilot.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.Autopilot)
                            return object;
                        var message = new $root.google.container.v1.Autopilot();
                        if (object.enabled != null)
                            message.enabled = Boolean(object.enabled);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Autopilot message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.Autopilot
                     * @static
                     * @param {google.container.v1.Autopilot} message Autopilot
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Autopilot.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.enabled = false;
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            object.enabled = message.enabled;
                        return object;
                    };
    
                    /**
                     * Converts this Autopilot to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.Autopilot
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Autopilot.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Autopilot
                     * @function getTypeUrl
                     * @memberof google.container.v1.Autopilot
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Autopilot.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.Autopilot";
                    };
    
                    return Autopilot;
                })();
    
                v1.LoggingConfig = (function() {
    
                    /**
                     * Properties of a LoggingConfig.
                     * @memberof google.container.v1
                     * @interface ILoggingConfig
                     * @property {google.container.v1.ILoggingComponentConfig|null} [componentConfig] LoggingConfig componentConfig
                     */
    
                    /**
                     * Constructs a new LoggingConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a LoggingConfig.
                     * @implements ILoggingConfig
                     * @constructor
                     * @param {google.container.v1.ILoggingConfig=} [properties] Properties to set
                     */
                    function LoggingConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * LoggingConfig componentConfig.
                     * @member {google.container.v1.ILoggingComponentConfig|null|undefined} componentConfig
                     * @memberof google.container.v1.LoggingConfig
                     * @instance
                     */
                    LoggingConfig.prototype.componentConfig = null;
    
                    /**
                     * Creates a new LoggingConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.LoggingConfig
                     * @static
                     * @param {google.container.v1.ILoggingConfig=} [properties] Properties to set
                     * @returns {google.container.v1.LoggingConfig} LoggingConfig instance
                     */
                    LoggingConfig.create = function create(properties) {
                        return new LoggingConfig(properties);
                    };
    
                    /**
                     * Encodes the specified LoggingConfig message. Does not implicitly {@link google.container.v1.LoggingConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.LoggingConfig
                     * @static
                     * @param {google.container.v1.ILoggingConfig} message LoggingConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LoggingConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.componentConfig != null && Object.hasOwnProperty.call(message, "componentConfig"))
                            $root.google.container.v1.LoggingComponentConfig.encode(message.componentConfig, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified LoggingConfig message, length delimited. Does not implicitly {@link google.container.v1.LoggingConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.LoggingConfig
                     * @static
                     * @param {google.container.v1.ILoggingConfig} message LoggingConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LoggingConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a LoggingConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.LoggingConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.LoggingConfig} LoggingConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LoggingConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.LoggingConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.componentConfig = $root.google.container.v1.LoggingComponentConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a LoggingConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.LoggingConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.LoggingConfig} LoggingConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LoggingConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a LoggingConfig message.
                     * @function verify
                     * @memberof google.container.v1.LoggingConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    LoggingConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.componentConfig != null && message.hasOwnProperty("componentConfig")) {
                            var error = $root.google.container.v1.LoggingComponentConfig.verify(message.componentConfig);
                            if (error)
                                return "componentConfig." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a LoggingConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.LoggingConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.LoggingConfig} LoggingConfig
                     */
                    LoggingConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.LoggingConfig)
                            return object;
                        var message = new $root.google.container.v1.LoggingConfig();
                        if (object.componentConfig != null) {
                            if (typeof object.componentConfig !== "object")
                                throw TypeError(".google.container.v1.LoggingConfig.componentConfig: object expected");
                            message.componentConfig = $root.google.container.v1.LoggingComponentConfig.fromObject(object.componentConfig);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a LoggingConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.LoggingConfig
                     * @static
                     * @param {google.container.v1.LoggingConfig} message LoggingConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    LoggingConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.componentConfig = null;
                        if (message.componentConfig != null && message.hasOwnProperty("componentConfig"))
                            object.componentConfig = $root.google.container.v1.LoggingComponentConfig.toObject(message.componentConfig, options);
                        return object;
                    };
    
                    /**
                     * Converts this LoggingConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.LoggingConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    LoggingConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for LoggingConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.LoggingConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    LoggingConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.LoggingConfig";
                    };
    
                    return LoggingConfig;
                })();
    
                v1.LoggingComponentConfig = (function() {
    
                    /**
                     * Properties of a LoggingComponentConfig.
                     * @memberof google.container.v1
                     * @interface ILoggingComponentConfig
                     * @property {Array.<google.container.v1.LoggingComponentConfig.Component>|null} [enableComponents] LoggingComponentConfig enableComponents
                     */
    
                    /**
                     * Constructs a new LoggingComponentConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a LoggingComponentConfig.
                     * @implements ILoggingComponentConfig
                     * @constructor
                     * @param {google.container.v1.ILoggingComponentConfig=} [properties] Properties to set
                     */
                    function LoggingComponentConfig(properties) {
                        this.enableComponents = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * LoggingComponentConfig enableComponents.
                     * @member {Array.<google.container.v1.LoggingComponentConfig.Component>} enableComponents
                     * @memberof google.container.v1.LoggingComponentConfig
                     * @instance
                     */
                    LoggingComponentConfig.prototype.enableComponents = $util.emptyArray;
    
                    /**
                     * Creates a new LoggingComponentConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.LoggingComponentConfig
                     * @static
                     * @param {google.container.v1.ILoggingComponentConfig=} [properties] Properties to set
                     * @returns {google.container.v1.LoggingComponentConfig} LoggingComponentConfig instance
                     */
                    LoggingComponentConfig.create = function create(properties) {
                        return new LoggingComponentConfig(properties);
                    };
    
                    /**
                     * Encodes the specified LoggingComponentConfig message. Does not implicitly {@link google.container.v1.LoggingComponentConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.LoggingComponentConfig
                     * @static
                     * @param {google.container.v1.ILoggingComponentConfig} message LoggingComponentConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LoggingComponentConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.enableComponents != null && message.enableComponents.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.enableComponents.length; ++i)
                                writer.int32(message.enableComponents[i]);
                            writer.ldelim();
                        }
                        return writer;
                    };
    
                    /**
                     * Encodes the specified LoggingComponentConfig message, length delimited. Does not implicitly {@link google.container.v1.LoggingComponentConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.LoggingComponentConfig
                     * @static
                     * @param {google.container.v1.ILoggingComponentConfig} message LoggingComponentConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LoggingComponentConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a LoggingComponentConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.LoggingComponentConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.LoggingComponentConfig} LoggingComponentConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LoggingComponentConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.LoggingComponentConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.enableComponents && message.enableComponents.length))
                                        message.enableComponents = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.enableComponents.push(reader.int32());
                                    } else
                                        message.enableComponents.push(reader.int32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a LoggingComponentConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.LoggingComponentConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.LoggingComponentConfig} LoggingComponentConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LoggingComponentConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a LoggingComponentConfig message.
                     * @function verify
                     * @memberof google.container.v1.LoggingComponentConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    LoggingComponentConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.enableComponents != null && message.hasOwnProperty("enableComponents")) {
                            if (!Array.isArray(message.enableComponents))
                                return "enableComponents: array expected";
                            for (var i = 0; i < message.enableComponents.length; ++i)
                                switch (message.enableComponents[i]) {
                                default:
                                    return "enableComponents: enum value[] expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a LoggingComponentConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.LoggingComponentConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.LoggingComponentConfig} LoggingComponentConfig
                     */
                    LoggingComponentConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.LoggingComponentConfig)
                            return object;
                        var message = new $root.google.container.v1.LoggingComponentConfig();
                        if (object.enableComponents) {
                            if (!Array.isArray(object.enableComponents))
                                throw TypeError(".google.container.v1.LoggingComponentConfig.enableComponents: array expected");
                            message.enableComponents = [];
                            for (var i = 0; i < object.enableComponents.length; ++i)
                                switch (object.enableComponents[i]) {
                                default:
                                    if (typeof object.enableComponents[i] === "number") {
                                        message.enableComponents[i] = object.enableComponents[i];
                                        break;
                                    }
                                case "COMPONENT_UNSPECIFIED":
                                case 0:
                                    message.enableComponents[i] = 0;
                                    break;
                                case "SYSTEM_COMPONENTS":
                                case 1:
                                    message.enableComponents[i] = 1;
                                    break;
                                case "WORKLOADS":
                                case 2:
                                    message.enableComponents[i] = 2;
                                    break;
                                case "APISERVER":
                                case 3:
                                    message.enableComponents[i] = 3;
                                    break;
                                case "SCHEDULER":
                                case 4:
                                    message.enableComponents[i] = 4;
                                    break;
                                case "CONTROLLER_MANAGER":
                                case 5:
                                    message.enableComponents[i] = 5;
                                    break;
                                }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a LoggingComponentConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.LoggingComponentConfig
                     * @static
                     * @param {google.container.v1.LoggingComponentConfig} message LoggingComponentConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    LoggingComponentConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.enableComponents = [];
                        if (message.enableComponents && message.enableComponents.length) {
                            object.enableComponents = [];
                            for (var j = 0; j < message.enableComponents.length; ++j)
                                object.enableComponents[j] = options.enums === String ? $root.google.container.v1.LoggingComponentConfig.Component[message.enableComponents[j]] === undefined ? message.enableComponents[j] : $root.google.container.v1.LoggingComponentConfig.Component[message.enableComponents[j]] : message.enableComponents[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this LoggingComponentConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.LoggingComponentConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    LoggingComponentConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for LoggingComponentConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.LoggingComponentConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    LoggingComponentConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.LoggingComponentConfig";
                    };
    
                    /**
                     * Component enum.
                     * @name google.container.v1.LoggingComponentConfig.Component
                     * @enum {number}
                     * @property {number} COMPONENT_UNSPECIFIED=0 COMPONENT_UNSPECIFIED value
                     * @property {number} SYSTEM_COMPONENTS=1 SYSTEM_COMPONENTS value
                     * @property {number} WORKLOADS=2 WORKLOADS value
                     * @property {number} APISERVER=3 APISERVER value
                     * @property {number} SCHEDULER=4 SCHEDULER value
                     * @property {number} CONTROLLER_MANAGER=5 CONTROLLER_MANAGER value
                     */
                    LoggingComponentConfig.Component = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "COMPONENT_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "SYSTEM_COMPONENTS"] = 1;
                        values[valuesById[2] = "WORKLOADS"] = 2;
                        values[valuesById[3] = "APISERVER"] = 3;
                        values[valuesById[4] = "SCHEDULER"] = 4;
                        values[valuesById[5] = "CONTROLLER_MANAGER"] = 5;
                        return values;
                    })();
    
                    return LoggingComponentConfig;
                })();
    
                v1.MonitoringConfig = (function() {
    
                    /**
                     * Properties of a MonitoringConfig.
                     * @memberof google.container.v1
                     * @interface IMonitoringConfig
                     * @property {google.container.v1.IMonitoringComponentConfig|null} [componentConfig] MonitoringConfig componentConfig
                     * @property {google.container.v1.IManagedPrometheusConfig|null} [managedPrometheusConfig] MonitoringConfig managedPrometheusConfig
                     */
    
                    /**
                     * Constructs a new MonitoringConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a MonitoringConfig.
                     * @implements IMonitoringConfig
                     * @constructor
                     * @param {google.container.v1.IMonitoringConfig=} [properties] Properties to set
                     */
                    function MonitoringConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * MonitoringConfig componentConfig.
                     * @member {google.container.v1.IMonitoringComponentConfig|null|undefined} componentConfig
                     * @memberof google.container.v1.MonitoringConfig
                     * @instance
                     */
                    MonitoringConfig.prototype.componentConfig = null;
    
                    /**
                     * MonitoringConfig managedPrometheusConfig.
                     * @member {google.container.v1.IManagedPrometheusConfig|null|undefined} managedPrometheusConfig
                     * @memberof google.container.v1.MonitoringConfig
                     * @instance
                     */
                    MonitoringConfig.prototype.managedPrometheusConfig = null;
    
                    /**
                     * Creates a new MonitoringConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.MonitoringConfig
                     * @static
                     * @param {google.container.v1.IMonitoringConfig=} [properties] Properties to set
                     * @returns {google.container.v1.MonitoringConfig} MonitoringConfig instance
                     */
                    MonitoringConfig.create = function create(properties) {
                        return new MonitoringConfig(properties);
                    };
    
                    /**
                     * Encodes the specified MonitoringConfig message. Does not implicitly {@link google.container.v1.MonitoringConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.MonitoringConfig
                     * @static
                     * @param {google.container.v1.IMonitoringConfig} message MonitoringConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MonitoringConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.componentConfig != null && Object.hasOwnProperty.call(message, "componentConfig"))
                            $root.google.container.v1.MonitoringComponentConfig.encode(message.componentConfig, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.managedPrometheusConfig != null && Object.hasOwnProperty.call(message, "managedPrometheusConfig"))
                            $root.google.container.v1.ManagedPrometheusConfig.encode(message.managedPrometheusConfig, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified MonitoringConfig message, length delimited. Does not implicitly {@link google.container.v1.MonitoringConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.MonitoringConfig
                     * @static
                     * @param {google.container.v1.IMonitoringConfig} message MonitoringConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MonitoringConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a MonitoringConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.MonitoringConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.MonitoringConfig} MonitoringConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MonitoringConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.MonitoringConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.componentConfig = $root.google.container.v1.MonitoringComponentConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.managedPrometheusConfig = $root.google.container.v1.ManagedPrometheusConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a MonitoringConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.MonitoringConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.MonitoringConfig} MonitoringConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MonitoringConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a MonitoringConfig message.
                     * @function verify
                     * @memberof google.container.v1.MonitoringConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    MonitoringConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.componentConfig != null && message.hasOwnProperty("componentConfig")) {
                            var error = $root.google.container.v1.MonitoringComponentConfig.verify(message.componentConfig);
                            if (error)
                                return "componentConfig." + error;
                        }
                        if (message.managedPrometheusConfig != null && message.hasOwnProperty("managedPrometheusConfig")) {
                            var error = $root.google.container.v1.ManagedPrometheusConfig.verify(message.managedPrometheusConfig);
                            if (error)
                                return "managedPrometheusConfig." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a MonitoringConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.MonitoringConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.MonitoringConfig} MonitoringConfig
                     */
                    MonitoringConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.MonitoringConfig)
                            return object;
                        var message = new $root.google.container.v1.MonitoringConfig();
                        if (object.componentConfig != null) {
                            if (typeof object.componentConfig !== "object")
                                throw TypeError(".google.container.v1.MonitoringConfig.componentConfig: object expected");
                            message.componentConfig = $root.google.container.v1.MonitoringComponentConfig.fromObject(object.componentConfig);
                        }
                        if (object.managedPrometheusConfig != null) {
                            if (typeof object.managedPrometheusConfig !== "object")
                                throw TypeError(".google.container.v1.MonitoringConfig.managedPrometheusConfig: object expected");
                            message.managedPrometheusConfig = $root.google.container.v1.ManagedPrometheusConfig.fromObject(object.managedPrometheusConfig);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a MonitoringConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.MonitoringConfig
                     * @static
                     * @param {google.container.v1.MonitoringConfig} message MonitoringConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    MonitoringConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.componentConfig = null;
                            object.managedPrometheusConfig = null;
                        }
                        if (message.componentConfig != null && message.hasOwnProperty("componentConfig"))
                            object.componentConfig = $root.google.container.v1.MonitoringComponentConfig.toObject(message.componentConfig, options);
                        if (message.managedPrometheusConfig != null && message.hasOwnProperty("managedPrometheusConfig"))
                            object.managedPrometheusConfig = $root.google.container.v1.ManagedPrometheusConfig.toObject(message.managedPrometheusConfig, options);
                        return object;
                    };
    
                    /**
                     * Converts this MonitoringConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.MonitoringConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    MonitoringConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for MonitoringConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.MonitoringConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    MonitoringConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.MonitoringConfig";
                    };
    
                    return MonitoringConfig;
                })();
    
                v1.NodePoolLoggingConfig = (function() {
    
                    /**
                     * Properties of a NodePoolLoggingConfig.
                     * @memberof google.container.v1
                     * @interface INodePoolLoggingConfig
                     * @property {google.container.v1.ILoggingVariantConfig|null} [variantConfig] NodePoolLoggingConfig variantConfig
                     */
    
                    /**
                     * Constructs a new NodePoolLoggingConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a NodePoolLoggingConfig.
                     * @implements INodePoolLoggingConfig
                     * @constructor
                     * @param {google.container.v1.INodePoolLoggingConfig=} [properties] Properties to set
                     */
                    function NodePoolLoggingConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NodePoolLoggingConfig variantConfig.
                     * @member {google.container.v1.ILoggingVariantConfig|null|undefined} variantConfig
                     * @memberof google.container.v1.NodePoolLoggingConfig
                     * @instance
                     */
                    NodePoolLoggingConfig.prototype.variantConfig = null;
    
                    /**
                     * Creates a new NodePoolLoggingConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.NodePoolLoggingConfig
                     * @static
                     * @param {google.container.v1.INodePoolLoggingConfig=} [properties] Properties to set
                     * @returns {google.container.v1.NodePoolLoggingConfig} NodePoolLoggingConfig instance
                     */
                    NodePoolLoggingConfig.create = function create(properties) {
                        return new NodePoolLoggingConfig(properties);
                    };
    
                    /**
                     * Encodes the specified NodePoolLoggingConfig message. Does not implicitly {@link google.container.v1.NodePoolLoggingConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.NodePoolLoggingConfig
                     * @static
                     * @param {google.container.v1.INodePoolLoggingConfig} message NodePoolLoggingConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NodePoolLoggingConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.variantConfig != null && Object.hasOwnProperty.call(message, "variantConfig"))
                            $root.google.container.v1.LoggingVariantConfig.encode(message.variantConfig, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NodePoolLoggingConfig message, length delimited. Does not implicitly {@link google.container.v1.NodePoolLoggingConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.NodePoolLoggingConfig
                     * @static
                     * @param {google.container.v1.INodePoolLoggingConfig} message NodePoolLoggingConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NodePoolLoggingConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NodePoolLoggingConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.NodePoolLoggingConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.NodePoolLoggingConfig} NodePoolLoggingConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NodePoolLoggingConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.NodePoolLoggingConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.variantConfig = $root.google.container.v1.LoggingVariantConfig.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a NodePoolLoggingConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.NodePoolLoggingConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.NodePoolLoggingConfig} NodePoolLoggingConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NodePoolLoggingConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NodePoolLoggingConfig message.
                     * @function verify
                     * @memberof google.container.v1.NodePoolLoggingConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NodePoolLoggingConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.variantConfig != null && message.hasOwnProperty("variantConfig")) {
                            var error = $root.google.container.v1.LoggingVariantConfig.verify(message.variantConfig);
                            if (error)
                                return "variantConfig." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a NodePoolLoggingConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.NodePoolLoggingConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.NodePoolLoggingConfig} NodePoolLoggingConfig
                     */
                    NodePoolLoggingConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.NodePoolLoggingConfig)
                            return object;
                        var message = new $root.google.container.v1.NodePoolLoggingConfig();
                        if (object.variantConfig != null) {
                            if (typeof object.variantConfig !== "object")
                                throw TypeError(".google.container.v1.NodePoolLoggingConfig.variantConfig: object expected");
                            message.variantConfig = $root.google.container.v1.LoggingVariantConfig.fromObject(object.variantConfig);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NodePoolLoggingConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.NodePoolLoggingConfig
                     * @static
                     * @param {google.container.v1.NodePoolLoggingConfig} message NodePoolLoggingConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NodePoolLoggingConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.variantConfig = null;
                        if (message.variantConfig != null && message.hasOwnProperty("variantConfig"))
                            object.variantConfig = $root.google.container.v1.LoggingVariantConfig.toObject(message.variantConfig, options);
                        return object;
                    };
    
                    /**
                     * Converts this NodePoolLoggingConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.NodePoolLoggingConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NodePoolLoggingConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NodePoolLoggingConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.NodePoolLoggingConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NodePoolLoggingConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.NodePoolLoggingConfig";
                    };
    
                    return NodePoolLoggingConfig;
                })();
    
                v1.LoggingVariantConfig = (function() {
    
                    /**
                     * Properties of a LoggingVariantConfig.
                     * @memberof google.container.v1
                     * @interface ILoggingVariantConfig
                     * @property {google.container.v1.LoggingVariantConfig.Variant|null} [variant] LoggingVariantConfig variant
                     */
    
                    /**
                     * Constructs a new LoggingVariantConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a LoggingVariantConfig.
                     * @implements ILoggingVariantConfig
                     * @constructor
                     * @param {google.container.v1.ILoggingVariantConfig=} [properties] Properties to set
                     */
                    function LoggingVariantConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * LoggingVariantConfig variant.
                     * @member {google.container.v1.LoggingVariantConfig.Variant} variant
                     * @memberof google.container.v1.LoggingVariantConfig
                     * @instance
                     */
                    LoggingVariantConfig.prototype.variant = 0;
    
                    /**
                     * Creates a new LoggingVariantConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.LoggingVariantConfig
                     * @static
                     * @param {google.container.v1.ILoggingVariantConfig=} [properties] Properties to set
                     * @returns {google.container.v1.LoggingVariantConfig} LoggingVariantConfig instance
                     */
                    LoggingVariantConfig.create = function create(properties) {
                        return new LoggingVariantConfig(properties);
                    };
    
                    /**
                     * Encodes the specified LoggingVariantConfig message. Does not implicitly {@link google.container.v1.LoggingVariantConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.LoggingVariantConfig
                     * @static
                     * @param {google.container.v1.ILoggingVariantConfig} message LoggingVariantConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LoggingVariantConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.variant != null && Object.hasOwnProperty.call(message, "variant"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.variant);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified LoggingVariantConfig message, length delimited. Does not implicitly {@link google.container.v1.LoggingVariantConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.LoggingVariantConfig
                     * @static
                     * @param {google.container.v1.ILoggingVariantConfig} message LoggingVariantConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LoggingVariantConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a LoggingVariantConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.LoggingVariantConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.LoggingVariantConfig} LoggingVariantConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LoggingVariantConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.LoggingVariantConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.variant = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a LoggingVariantConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.LoggingVariantConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.LoggingVariantConfig} LoggingVariantConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LoggingVariantConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a LoggingVariantConfig message.
                     * @function verify
                     * @memberof google.container.v1.LoggingVariantConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    LoggingVariantConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.variant != null && message.hasOwnProperty("variant"))
                            switch (message.variant) {
                            default:
                                return "variant: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates a LoggingVariantConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.LoggingVariantConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.LoggingVariantConfig} LoggingVariantConfig
                     */
                    LoggingVariantConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.LoggingVariantConfig)
                            return object;
                        var message = new $root.google.container.v1.LoggingVariantConfig();
                        switch (object.variant) {
                        default:
                            if (typeof object.variant === "number") {
                                message.variant = object.variant;
                                break;
                            }
                            break;
                        case "VARIANT_UNSPECIFIED":
                        case 0:
                            message.variant = 0;
                            break;
                        case "DEFAULT":
                        case 1:
                            message.variant = 1;
                            break;
                        case "MAX_THROUGHPUT":
                        case 2:
                            message.variant = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a LoggingVariantConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.LoggingVariantConfig
                     * @static
                     * @param {google.container.v1.LoggingVariantConfig} message LoggingVariantConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    LoggingVariantConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.variant = options.enums === String ? "VARIANT_UNSPECIFIED" : 0;
                        if (message.variant != null && message.hasOwnProperty("variant"))
                            object.variant = options.enums === String ? $root.google.container.v1.LoggingVariantConfig.Variant[message.variant] === undefined ? message.variant : $root.google.container.v1.LoggingVariantConfig.Variant[message.variant] : message.variant;
                        return object;
                    };
    
                    /**
                     * Converts this LoggingVariantConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.LoggingVariantConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    LoggingVariantConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for LoggingVariantConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.LoggingVariantConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    LoggingVariantConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.LoggingVariantConfig";
                    };
    
                    /**
                     * Variant enum.
                     * @name google.container.v1.LoggingVariantConfig.Variant
                     * @enum {number}
                     * @property {number} VARIANT_UNSPECIFIED=0 VARIANT_UNSPECIFIED value
                     * @property {number} DEFAULT=1 DEFAULT value
                     * @property {number} MAX_THROUGHPUT=2 MAX_THROUGHPUT value
                     */
                    LoggingVariantConfig.Variant = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "VARIANT_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "DEFAULT"] = 1;
                        values[valuesById[2] = "MAX_THROUGHPUT"] = 2;
                        return values;
                    })();
    
                    return LoggingVariantConfig;
                })();
    
                v1.MonitoringComponentConfig = (function() {
    
                    /**
                     * Properties of a MonitoringComponentConfig.
                     * @memberof google.container.v1
                     * @interface IMonitoringComponentConfig
                     * @property {Array.<google.container.v1.MonitoringComponentConfig.Component>|null} [enableComponents] MonitoringComponentConfig enableComponents
                     */
    
                    /**
                     * Constructs a new MonitoringComponentConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a MonitoringComponentConfig.
                     * @implements IMonitoringComponentConfig
                     * @constructor
                     * @param {google.container.v1.IMonitoringComponentConfig=} [properties] Properties to set
                     */
                    function MonitoringComponentConfig(properties) {
                        this.enableComponents = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * MonitoringComponentConfig enableComponents.
                     * @member {Array.<google.container.v1.MonitoringComponentConfig.Component>} enableComponents
                     * @memberof google.container.v1.MonitoringComponentConfig
                     * @instance
                     */
                    MonitoringComponentConfig.prototype.enableComponents = $util.emptyArray;
    
                    /**
                     * Creates a new MonitoringComponentConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.MonitoringComponentConfig
                     * @static
                     * @param {google.container.v1.IMonitoringComponentConfig=} [properties] Properties to set
                     * @returns {google.container.v1.MonitoringComponentConfig} MonitoringComponentConfig instance
                     */
                    MonitoringComponentConfig.create = function create(properties) {
                        return new MonitoringComponentConfig(properties);
                    };
    
                    /**
                     * Encodes the specified MonitoringComponentConfig message. Does not implicitly {@link google.container.v1.MonitoringComponentConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.MonitoringComponentConfig
                     * @static
                     * @param {google.container.v1.IMonitoringComponentConfig} message MonitoringComponentConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MonitoringComponentConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.enableComponents != null && message.enableComponents.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.enableComponents.length; ++i)
                                writer.int32(message.enableComponents[i]);
                            writer.ldelim();
                        }
                        return writer;
                    };
    
                    /**
                     * Encodes the specified MonitoringComponentConfig message, length delimited. Does not implicitly {@link google.container.v1.MonitoringComponentConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.MonitoringComponentConfig
                     * @static
                     * @param {google.container.v1.IMonitoringComponentConfig} message MonitoringComponentConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MonitoringComponentConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a MonitoringComponentConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.MonitoringComponentConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.MonitoringComponentConfig} MonitoringComponentConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MonitoringComponentConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.MonitoringComponentConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.enableComponents && message.enableComponents.length))
                                        message.enableComponents = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.enableComponents.push(reader.int32());
                                    } else
                                        message.enableComponents.push(reader.int32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a MonitoringComponentConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.MonitoringComponentConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.MonitoringComponentConfig} MonitoringComponentConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MonitoringComponentConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a MonitoringComponentConfig message.
                     * @function verify
                     * @memberof google.container.v1.MonitoringComponentConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    MonitoringComponentConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.enableComponents != null && message.hasOwnProperty("enableComponents")) {
                            if (!Array.isArray(message.enableComponents))
                                return "enableComponents: array expected";
                            for (var i = 0; i < message.enableComponents.length; ++i)
                                switch (message.enableComponents[i]) {
                                default:
                                    return "enableComponents: enum value[] expected";
                                case 0:
                                case 1:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a MonitoringComponentConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.MonitoringComponentConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.MonitoringComponentConfig} MonitoringComponentConfig
                     */
                    MonitoringComponentConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.MonitoringComponentConfig)
                            return object;
                        var message = new $root.google.container.v1.MonitoringComponentConfig();
                        if (object.enableComponents) {
                            if (!Array.isArray(object.enableComponents))
                                throw TypeError(".google.container.v1.MonitoringComponentConfig.enableComponents: array expected");
                            message.enableComponents = [];
                            for (var i = 0; i < object.enableComponents.length; ++i)
                                switch (object.enableComponents[i]) {
                                default:
                                    if (typeof object.enableComponents[i] === "number") {
                                        message.enableComponents[i] = object.enableComponents[i];
                                        break;
                                    }
                                case "COMPONENT_UNSPECIFIED":
                                case 0:
                                    message.enableComponents[i] = 0;
                                    break;
                                case "SYSTEM_COMPONENTS":
                                case 1:
                                    message.enableComponents[i] = 1;
                                    break;
                                case "APISERVER":
                                case 3:
                                    message.enableComponents[i] = 3;
                                    break;
                                case "SCHEDULER":
                                case 4:
                                    message.enableComponents[i] = 4;
                                    break;
                                case "CONTROLLER_MANAGER":
                                case 5:
                                    message.enableComponents[i] = 5;
                                    break;
                                }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a MonitoringComponentConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.MonitoringComponentConfig
                     * @static
                     * @param {google.container.v1.MonitoringComponentConfig} message MonitoringComponentConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    MonitoringComponentConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.enableComponents = [];
                        if (message.enableComponents && message.enableComponents.length) {
                            object.enableComponents = [];
                            for (var j = 0; j < message.enableComponents.length; ++j)
                                object.enableComponents[j] = options.enums === String ? $root.google.container.v1.MonitoringComponentConfig.Component[message.enableComponents[j]] === undefined ? message.enableComponents[j] : $root.google.container.v1.MonitoringComponentConfig.Component[message.enableComponents[j]] : message.enableComponents[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this MonitoringComponentConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.MonitoringComponentConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    MonitoringComponentConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for MonitoringComponentConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.MonitoringComponentConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    MonitoringComponentConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.MonitoringComponentConfig";
                    };
    
                    /**
                     * Component enum.
                     * @name google.container.v1.MonitoringComponentConfig.Component
                     * @enum {number}
                     * @property {number} COMPONENT_UNSPECIFIED=0 COMPONENT_UNSPECIFIED value
                     * @property {number} SYSTEM_COMPONENTS=1 SYSTEM_COMPONENTS value
                     * @property {number} APISERVER=3 APISERVER value
                     * @property {number} SCHEDULER=4 SCHEDULER value
                     * @property {number} CONTROLLER_MANAGER=5 CONTROLLER_MANAGER value
                     */
                    MonitoringComponentConfig.Component = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "COMPONENT_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "SYSTEM_COMPONENTS"] = 1;
                        values[valuesById[3] = "APISERVER"] = 3;
                        values[valuesById[4] = "SCHEDULER"] = 4;
                        values[valuesById[5] = "CONTROLLER_MANAGER"] = 5;
                        return values;
                    })();
    
                    return MonitoringComponentConfig;
                })();
    
                /**
                 * DatapathProvider enum.
                 * @name google.container.v1.DatapathProvider
                 * @enum {number}
                 * @property {number} DATAPATH_PROVIDER_UNSPECIFIED=0 DATAPATH_PROVIDER_UNSPECIFIED value
                 * @property {number} LEGACY_DATAPATH=1 LEGACY_DATAPATH value
                 * @property {number} ADVANCED_DATAPATH=2 ADVANCED_DATAPATH value
                 */
                v1.DatapathProvider = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "DATAPATH_PROVIDER_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "LEGACY_DATAPATH"] = 1;
                    values[valuesById[2] = "ADVANCED_DATAPATH"] = 2;
                    return values;
                })();
    
                /**
                 * NodePoolUpdateStrategy enum.
                 * @name google.container.v1.NodePoolUpdateStrategy
                 * @enum {number}
                 * @property {number} NODE_POOL_UPDATE_STRATEGY_UNSPECIFIED=0 NODE_POOL_UPDATE_STRATEGY_UNSPECIFIED value
                 * @property {number} BLUE_GREEN=2 BLUE_GREEN value
                 * @property {number} SURGE=3 SURGE value
                 */
                v1.NodePoolUpdateStrategy = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "NODE_POOL_UPDATE_STRATEGY_UNSPECIFIED"] = 0;
                    values[valuesById[2] = "BLUE_GREEN"] = 2;
                    values[valuesById[3] = "SURGE"] = 3;
                    return values;
                })();
    
                v1.ManagedPrometheusConfig = (function() {
    
                    /**
                     * Properties of a ManagedPrometheusConfig.
                     * @memberof google.container.v1
                     * @interface IManagedPrometheusConfig
                     * @property {boolean|null} [enabled] ManagedPrometheusConfig enabled
                     */
    
                    /**
                     * Constructs a new ManagedPrometheusConfig.
                     * @memberof google.container.v1
                     * @classdesc Represents a ManagedPrometheusConfig.
                     * @implements IManagedPrometheusConfig
                     * @constructor
                     * @param {google.container.v1.IManagedPrometheusConfig=} [properties] Properties to set
                     */
                    function ManagedPrometheusConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ManagedPrometheusConfig enabled.
                     * @member {boolean} enabled
                     * @memberof google.container.v1.ManagedPrometheusConfig
                     * @instance
                     */
                    ManagedPrometheusConfig.prototype.enabled = false;
    
                    /**
                     * Creates a new ManagedPrometheusConfig instance using the specified properties.
                     * @function create
                     * @memberof google.container.v1.ManagedPrometheusConfig
                     * @static
                     * @param {google.container.v1.IManagedPrometheusConfig=} [properties] Properties to set
                     * @returns {google.container.v1.ManagedPrometheusConfig} ManagedPrometheusConfig instance
                     */
                    ManagedPrometheusConfig.create = function create(properties) {
                        return new ManagedPrometheusConfig(properties);
                    };
    
                    /**
                     * Encodes the specified ManagedPrometheusConfig message. Does not implicitly {@link google.container.v1.ManagedPrometheusConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.container.v1.ManagedPrometheusConfig
                     * @static
                     * @param {google.container.v1.IManagedPrometheusConfig} message ManagedPrometheusConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ManagedPrometheusConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ManagedPrometheusConfig message, length delimited. Does not implicitly {@link google.container.v1.ManagedPrometheusConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.container.v1.ManagedPrometheusConfig
                     * @static
                     * @param {google.container.v1.IManagedPrometheusConfig} message ManagedPrometheusConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ManagedPrometheusConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ManagedPrometheusConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.container.v1.ManagedPrometheusConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.container.v1.ManagedPrometheusConfig} ManagedPrometheusConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ManagedPrometheusConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.container.v1.ManagedPrometheusConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.enabled = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ManagedPrometheusConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.container.v1.ManagedPrometheusConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.container.v1.ManagedPrometheusConfig} ManagedPrometheusConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ManagedPrometheusConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ManagedPrometheusConfig message.
                     * @function verify
                     * @memberof google.container.v1.ManagedPrometheusConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ManagedPrometheusConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            if (typeof message.enabled !== "boolean")
                                return "enabled: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a ManagedPrometheusConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.container.v1.ManagedPrometheusConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.container.v1.ManagedPrometheusConfig} ManagedPrometheusConfig
                     */
                    ManagedPrometheusConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.container.v1.ManagedPrometheusConfig)
                            return object;
                        var message = new $root.google.container.v1.ManagedPrometheusConfig();
                        if (object.enabled != null)
                            message.enabled = Boolean(object.enabled);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ManagedPrometheusConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.container.v1.ManagedPrometheusConfig
                     * @static
                     * @param {google.container.v1.ManagedPrometheusConfig} message ManagedPrometheusConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ManagedPrometheusConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.enabled = false;
                        if (message.enabled != null && message.hasOwnProperty("enabled"))
                            object.enabled = message.enabled;
                        return object;
                    };
    
                    /**
                     * Converts this ManagedPrometheusConfig to JSON.
                     * @function toJSON
                     * @memberof google.container.v1.ManagedPrometheusConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ManagedPrometheusConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ManagedPrometheusConfig
                     * @function getTypeUrl
                     * @memberof google.container.v1.ManagedPrometheusConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ManagedPrometheusConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.container.v1.ManagedPrometheusConfig";
                    };
    
                    return ManagedPrometheusConfig;
                })();
    
                /**
                 * StackType enum.
                 * @name google.container.v1.StackType
                 * @enum {number}
                 * @property {number} STACK_TYPE_UNSPECIFIED=0 STACK_TYPE_UNSPECIFIED value
                 * @property {number} IPV4=1 IPV4 value
                 * @property {number} IPV4_IPV6=2 IPV4_IPV6 value
                 */
                v1.StackType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STACK_TYPE_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "IPV4"] = 1;
                    values[valuesById[2] = "IPV4_IPV6"] = 2;
                    return values;
                })();
    
                /**
                 * IPv6AccessType enum.
                 * @name google.container.v1.IPv6AccessType
                 * @enum {number}
                 * @property {number} IPV6_ACCESS_TYPE_UNSPECIFIED=0 IPV6_ACCESS_TYPE_UNSPECIFIED value
                 * @property {number} INTERNAL=1 INTERNAL value
                 * @property {number} EXTERNAL=2 EXTERNAL value
                 */
                v1.IPv6AccessType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "IPV6_ACCESS_TYPE_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "INTERNAL"] = 1;
                    values[valuesById[2] = "EXTERNAL"] = 2;
                    return values;
                })();
    
                return v1;
            })();
    
            return container;
        })();
    
        google.api = (function() {
    
            /**
             * Namespace api.
             * @memberof google
             * @namespace
             */
            var api = {};
    
            api.Http = (function() {
    
                /**
                 * Properties of a Http.
                 * @memberof google.api
                 * @interface IHttp
                 * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules
                 * @property {boolean|null} [fullyDecodeReservedExpansion] Http fullyDecodeReservedExpansion
                 */
    
                /**
                 * Constructs a new Http.
                 * @memberof google.api
                 * @classdesc Represents a Http.
                 * @implements IHttp
                 * @constructor
                 * @param {google.api.IHttp=} [properties] Properties to set
                 */
                function Http(properties) {
                    this.rules = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Http rules.
                 * @member {Array.<google.api.IHttpRule>} rules
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.rules = $util.emptyArray;
    
                /**
                 * Http fullyDecodeReservedExpansion.
                 * @member {boolean} fullyDecodeReservedExpansion
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.fullyDecodeReservedExpansion = false;
    
                /**
                 * Creates a new Http instance using the specified properties.
                 * @function create
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp=} [properties] Properties to set
                 * @returns {google.api.Http} Http instance
                 */
                Http.create = function create(properties) {
                    return new Http(properties);
                };
    
                /**
                 * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.rules != null && message.rules.length)
                        for (var i = 0; i < message.rules.length; ++i)
                            $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.fullyDecodeReservedExpansion != null && Object.hasOwnProperty.call(message, "fullyDecodeReservedExpansion"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.fullyDecodeReservedExpansion);
                    return writer;
                };
    
                /**
                 * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.rules && message.rules.length))
                                    message.rules = [];
                                message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.fullyDecodeReservedExpansion = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Http message.
                 * @function verify
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Http.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.rules != null && message.hasOwnProperty("rules")) {
                        if (!Array.isArray(message.rules))
                            return "rules: array expected";
                        for (var i = 0; i < message.rules.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.rules[i]);
                            if (error)
                                return "rules." + error;
                        }
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        if (typeof message.fullyDecodeReservedExpansion !== "boolean")
                            return "fullyDecodeReservedExpansion: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a Http message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Http} Http
                 */
                Http.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Http)
                        return object;
                    var message = new $root.google.api.Http();
                    if (object.rules) {
                        if (!Array.isArray(object.rules))
                            throw TypeError(".google.api.Http.rules: array expected");
                        message.rules = [];
                        for (var i = 0; i < object.rules.length; ++i) {
                            if (typeof object.rules[i] !== "object")
                                throw TypeError(".google.api.Http.rules: object expected");
                            message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);
                        }
                    }
                    if (object.fullyDecodeReservedExpansion != null)
                        message.fullyDecodeReservedExpansion = Boolean(object.fullyDecodeReservedExpansion);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Http message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.Http} message Http
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Http.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.rules = [];
                    if (options.defaults)
                        object.fullyDecodeReservedExpansion = false;
                    if (message.rules && message.rules.length) {
                        object.rules = [];
                        for (var j = 0; j < message.rules.length; ++j)
                            object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        object.fullyDecodeReservedExpansion = message.fullyDecodeReservedExpansion;
                    return object;
                };
    
                /**
                 * Converts this Http to JSON.
                 * @function toJSON
                 * @memberof google.api.Http
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Http.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Http
                 * @function getTypeUrl
                 * @memberof google.api.Http
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Http.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Http";
                };
    
                return Http;
            })();
    
            api.HttpRule = (function() {
    
                /**
                 * Properties of a HttpRule.
                 * @memberof google.api
                 * @interface IHttpRule
                 * @property {string|null} [selector] HttpRule selector
                 * @property {string|null} [get] HttpRule get
                 * @property {string|null} [put] HttpRule put
                 * @property {string|null} [post] HttpRule post
                 * @property {string|null} ["delete"] HttpRule delete
                 * @property {string|null} [patch] HttpRule patch
                 * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom
                 * @property {string|null} [body] HttpRule body
                 * @property {string|null} [responseBody] HttpRule responseBody
                 * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings
                 */
    
                /**
                 * Constructs a new HttpRule.
                 * @memberof google.api
                 * @classdesc Represents a HttpRule.
                 * @implements IHttpRule
                 * @constructor
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 */
                function HttpRule(properties) {
                    this.additionalBindings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * HttpRule selector.
                 * @member {string} selector
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.selector = "";
    
                /**
                 * HttpRule get.
                 * @member {string|null|undefined} get
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.get = null;
    
                /**
                 * HttpRule put.
                 * @member {string|null|undefined} put
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.put = null;
    
                /**
                 * HttpRule post.
                 * @member {string|null|undefined} post
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.post = null;
    
                /**
                 * HttpRule delete.
                 * @member {string|null|undefined} delete
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype["delete"] = null;
    
                /**
                 * HttpRule patch.
                 * @member {string|null|undefined} patch
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.patch = null;
    
                /**
                 * HttpRule custom.
                 * @member {google.api.ICustomHttpPattern|null|undefined} custom
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.custom = null;
    
                /**
                 * HttpRule body.
                 * @member {string} body
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.body = "";
    
                /**
                 * HttpRule responseBody.
                 * @member {string} responseBody
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.responseBody = "";
    
                /**
                 * HttpRule additionalBindings.
                 * @member {Array.<google.api.IHttpRule>} additionalBindings
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.additionalBindings = $util.emptyArray;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * HttpRule pattern.
                 * @member {"get"|"put"|"post"|"delete"|"patch"|"custom"|undefined} pattern
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                Object.defineProperty(HttpRule.prototype, "pattern", {
                    get: $util.oneOfGetter($oneOfFields = ["get", "put", "post", "delete", "patch", "custom"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new HttpRule instance using the specified properties.
                 * @function create
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 * @returns {google.api.HttpRule} HttpRule instance
                 */
                HttpRule.create = function create(properties) {
                    return new HttpRule(properties);
                };
    
                /**
                 * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.get != null && Object.hasOwnProperty.call(message, "get"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);
                    if (message.put != null && Object.hasOwnProperty.call(message, "put"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);
                    if (message.post != null && Object.hasOwnProperty.call(message, "post"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);
                    if (message["delete"] != null && Object.hasOwnProperty.call(message, "delete"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message["delete"]);
                    if (message.patch != null && Object.hasOwnProperty.call(message, "patch"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);
                    if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
                    if (message.custom != null && Object.hasOwnProperty.call(message, "custom"))
                        $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.additionalBindings != null && message.additionalBindings.length)
                        for (var i = 0; i < message.additionalBindings.length; ++i)
                            $root.google.api.HttpRule.encode(message.additionalBindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                    if (message.responseBody != null && Object.hasOwnProperty.call(message, "responseBody"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.responseBody);
                    return writer;
                };
    
                /**
                 * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.get = reader.string();
                                break;
                            }
                        case 3: {
                                message.put = reader.string();
                                break;
                            }
                        case 4: {
                                message.post = reader.string();
                                break;
                            }
                        case 5: {
                                message["delete"] = reader.string();
                                break;
                            }
                        case 6: {
                                message.patch = reader.string();
                                break;
                            }
                        case 8: {
                                message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());
                                break;
                            }
                        case 7: {
                                message.body = reader.string();
                                break;
                            }
                        case 12: {
                                message.responseBody = reader.string();
                                break;
                            }
                        case 11: {
                                if (!(message.additionalBindings && message.additionalBindings.length))
                                    message.additionalBindings = [];
                                message.additionalBindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a HttpRule message.
                 * @function verify
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                HttpRule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.get != null && message.hasOwnProperty("get")) {
                        properties.pattern = 1;
                        if (!$util.isString(message.get))
                            return "get: string expected";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.put))
                            return "put: string expected";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.post))
                            return "post: string expected";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message["delete"]))
                            return "delete: string expected";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.patch))
                            return "patch: string expected";
                    }
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        {
                            var error = $root.google.api.CustomHttpPattern.verify(message.custom);
                            if (error)
                                return "custom." + error;
                        }
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        if (!$util.isString(message.body))
                            return "body: string expected";
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        if (!$util.isString(message.responseBody))
                            return "responseBody: string expected";
                    if (message.additionalBindings != null && message.hasOwnProperty("additionalBindings")) {
                        if (!Array.isArray(message.additionalBindings))
                            return "additionalBindings: array expected";
                        for (var i = 0; i < message.additionalBindings.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.additionalBindings[i]);
                            if (error)
                                return "additionalBindings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.HttpRule} HttpRule
                 */
                HttpRule.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.HttpRule)
                        return object;
                    var message = new $root.google.api.HttpRule();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.get != null)
                        message.get = String(object.get);
                    if (object.put != null)
                        message.put = String(object.put);
                    if (object.post != null)
                        message.post = String(object.post);
                    if (object["delete"] != null)
                        message["delete"] = String(object["delete"]);
                    if (object.patch != null)
                        message.patch = String(object.patch);
                    if (object.custom != null) {
                        if (typeof object.custom !== "object")
                            throw TypeError(".google.api.HttpRule.custom: object expected");
                        message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);
                    }
                    if (object.body != null)
                        message.body = String(object.body);
                    if (object.responseBody != null)
                        message.responseBody = String(object.responseBody);
                    if (object.additionalBindings) {
                        if (!Array.isArray(object.additionalBindings))
                            throw TypeError(".google.api.HttpRule.additionalBindings: array expected");
                        message.additionalBindings = [];
                        for (var i = 0; i < object.additionalBindings.length; ++i) {
                            if (typeof object.additionalBindings[i] !== "object")
                                throw TypeError(".google.api.HttpRule.additionalBindings: object expected");
                            message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.HttpRule} message HttpRule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                HttpRule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.additionalBindings = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.body = "";
                        object.responseBody = "";
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.get != null && message.hasOwnProperty("get")) {
                        object.get = message.get;
                        if (options.oneofs)
                            object.pattern = "get";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        object.put = message.put;
                        if (options.oneofs)
                            object.pattern = "put";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        object.post = message.post;
                        if (options.oneofs)
                            object.pattern = "post";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        object["delete"] = message["delete"];
                        if (options.oneofs)
                            object.pattern = "delete";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        object.patch = message.patch;
                        if (options.oneofs)
                            object.pattern = "patch";
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        object.body = message.body;
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);
                        if (options.oneofs)
                            object.pattern = "custom";
                    }
                    if (message.additionalBindings && message.additionalBindings.length) {
                        object.additionalBindings = [];
                        for (var j = 0; j < message.additionalBindings.length; ++j)
                            object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);
                    }
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        object.responseBody = message.responseBody;
                    return object;
                };
    
                /**
                 * Converts this HttpRule to JSON.
                 * @function toJSON
                 * @memberof google.api.HttpRule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                HttpRule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for HttpRule
                 * @function getTypeUrl
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                HttpRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.HttpRule";
                };
    
                return HttpRule;
            })();
    
            api.CustomHttpPattern = (function() {
    
                /**
                 * Properties of a CustomHttpPattern.
                 * @memberof google.api
                 * @interface ICustomHttpPattern
                 * @property {string|null} [kind] CustomHttpPattern kind
                 * @property {string|null} [path] CustomHttpPattern path
                 */
    
                /**
                 * Constructs a new CustomHttpPattern.
                 * @memberof google.api
                 * @classdesc Represents a CustomHttpPattern.
                 * @implements ICustomHttpPattern
                 * @constructor
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 */
                function CustomHttpPattern(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CustomHttpPattern kind.
                 * @member {string} kind
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.kind = "";
    
                /**
                 * CustomHttpPattern path.
                 * @member {string} path
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.path = "";
    
                /**
                 * Creates a new CustomHttpPattern instance using the specified properties.
                 * @function create
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern instance
                 */
                CustomHttpPattern.create = function create(properties) {
                    return new CustomHttpPattern(properties);
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                    if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                    return writer;
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.kind = reader.string();
                                break;
                            }
                        case 2: {
                                message.path = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CustomHttpPattern message.
                 * @function verify
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CustomHttpPattern.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        if (!$util.isString(message.kind))
                            return "kind: string expected";
                    if (message.path != null && message.hasOwnProperty("path"))
                        if (!$util.isString(message.path))
                            return "path: string expected";
                    return null;
                };
    
                /**
                 * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 */
                CustomHttpPattern.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CustomHttpPattern)
                        return object;
                    var message = new $root.google.api.CustomHttpPattern();
                    if (object.kind != null)
                        message.kind = String(object.kind);
                    if (object.path != null)
                        message.path = String(object.path);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.CustomHttpPattern} message CustomHttpPattern
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CustomHttpPattern.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.kind = "";
                        object.path = "";
                    }
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        object.kind = message.kind;
                    if (message.path != null && message.hasOwnProperty("path"))
                        object.path = message.path;
                    return object;
                };
    
                /**
                 * Converts this CustomHttpPattern to JSON.
                 * @function toJSON
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CustomHttpPattern.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CustomHttpPattern
                 * @function getTypeUrl
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CustomHttpPattern.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CustomHttpPattern";
                };
    
                return CustomHttpPattern;
            })();
    
            /**
             * FieldBehavior enum.
             * @name google.api.FieldBehavior
             * @enum {number}
             * @property {number} FIELD_BEHAVIOR_UNSPECIFIED=0 FIELD_BEHAVIOR_UNSPECIFIED value
             * @property {number} OPTIONAL=1 OPTIONAL value
             * @property {number} REQUIRED=2 REQUIRED value
             * @property {number} OUTPUT_ONLY=3 OUTPUT_ONLY value
             * @property {number} INPUT_ONLY=4 INPUT_ONLY value
             * @property {number} IMMUTABLE=5 IMMUTABLE value
             * @property {number} UNORDERED_LIST=6 UNORDERED_LIST value
             * @property {number} NON_EMPTY_DEFAULT=7 NON_EMPTY_DEFAULT value
             */
            api.FieldBehavior = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "FIELD_BEHAVIOR_UNSPECIFIED"] = 0;
                values[valuesById[1] = "OPTIONAL"] = 1;
                values[valuesById[2] = "REQUIRED"] = 2;
                values[valuesById[3] = "OUTPUT_ONLY"] = 3;
                values[valuesById[4] = "INPUT_ONLY"] = 4;
                values[valuesById[5] = "IMMUTABLE"] = 5;
                values[valuesById[6] = "UNORDERED_LIST"] = 6;
                values[valuesById[7] = "NON_EMPTY_DEFAULT"] = 7;
                return values;
            })();
    
            api.ResourceDescriptor = (function() {
    
                /**
                 * Properties of a ResourceDescriptor.
                 * @memberof google.api
                 * @interface IResourceDescriptor
                 * @property {string|null} [type] ResourceDescriptor type
                 * @property {Array.<string>|null} [pattern] ResourceDescriptor pattern
                 * @property {string|null} [nameField] ResourceDescriptor nameField
                 * @property {google.api.ResourceDescriptor.History|null} [history] ResourceDescriptor history
                 * @property {string|null} [plural] ResourceDescriptor plural
                 * @property {string|null} [singular] ResourceDescriptor singular
                 * @property {Array.<google.api.ResourceDescriptor.Style>|null} [style] ResourceDescriptor style
                 */
    
                /**
                 * Constructs a new ResourceDescriptor.
                 * @memberof google.api
                 * @classdesc Represents a ResourceDescriptor.
                 * @implements IResourceDescriptor
                 * @constructor
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 */
                function ResourceDescriptor(properties) {
                    this.pattern = [];
                    this.style = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceDescriptor type.
                 * @member {string} type
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.type = "";
    
                /**
                 * ResourceDescriptor pattern.
                 * @member {Array.<string>} pattern
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.pattern = $util.emptyArray;
    
                /**
                 * ResourceDescriptor nameField.
                 * @member {string} nameField
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.nameField = "";
    
                /**
                 * ResourceDescriptor history.
                 * @member {google.api.ResourceDescriptor.History} history
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.history = 0;
    
                /**
                 * ResourceDescriptor plural.
                 * @member {string} plural
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.plural = "";
    
                /**
                 * ResourceDescriptor singular.
                 * @member {string} singular
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.singular = "";
    
                /**
                 * ResourceDescriptor style.
                 * @member {Array.<google.api.ResourceDescriptor.Style>} style
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.style = $util.emptyArray;
    
                /**
                 * Creates a new ResourceDescriptor instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor instance
                 */
                ResourceDescriptor.create = function create(properties) {
                    return new ResourceDescriptor(properties);
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.pattern != null && message.pattern.length)
                        for (var i = 0; i < message.pattern.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.pattern[i]);
                    if (message.nameField != null && Object.hasOwnProperty.call(message, "nameField"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.nameField);
                    if (message.history != null && Object.hasOwnProperty.call(message, "history"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.history);
                    if (message.plural != null && Object.hasOwnProperty.call(message, "plural"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.plural);
                    if (message.singular != null && Object.hasOwnProperty.call(message, "singular"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.singular);
                    if (message.style != null && message.style.length) {
                        writer.uint32(/* id 10, wireType 2 =*/82).fork();
                        for (var i = 0; i < message.style.length; ++i)
                            writer.int32(message.style[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message, length delimited. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceDescriptor();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.pattern && message.pattern.length))
                                    message.pattern = [];
                                message.pattern.push(reader.string());
                                break;
                            }
                        case 3: {
                                message.nameField = reader.string();
                                break;
                            }
                        case 4: {
                                message.history = reader.int32();
                                break;
                            }
                        case 5: {
                                message.plural = reader.string();
                                break;
                            }
                        case 6: {
                                message.singular = reader.string();
                                break;
                            }
                        case 10: {
                                if (!(message.style && message.style.length))
                                    message.style = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.style.push(reader.int32());
                                } else
                                    message.style.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceDescriptor message.
                 * @function verify
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceDescriptor.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.pattern != null && message.hasOwnProperty("pattern")) {
                        if (!Array.isArray(message.pattern))
                            return "pattern: array expected";
                        for (var i = 0; i < message.pattern.length; ++i)
                            if (!$util.isString(message.pattern[i]))
                                return "pattern: string[] expected";
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        if (!$util.isString(message.nameField))
                            return "nameField: string expected";
                    if (message.history != null && message.hasOwnProperty("history"))
                        switch (message.history) {
                        default:
                            return "history: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        if (!$util.isString(message.plural))
                            return "plural: string expected";
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        if (!$util.isString(message.singular))
                            return "singular: string expected";
                    if (message.style != null && message.hasOwnProperty("style")) {
                        if (!Array.isArray(message.style))
                            return "style: array expected";
                        for (var i = 0; i < message.style.length; ++i)
                            switch (message.style[i]) {
                            default:
                                return "style: enum value[] expected";
                            case 0:
                            case 1:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a ResourceDescriptor message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 */
                ResourceDescriptor.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceDescriptor)
                        return object;
                    var message = new $root.google.api.ResourceDescriptor();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.pattern) {
                        if (!Array.isArray(object.pattern))
                            throw TypeError(".google.api.ResourceDescriptor.pattern: array expected");
                        message.pattern = [];
                        for (var i = 0; i < object.pattern.length; ++i)
                            message.pattern[i] = String(object.pattern[i]);
                    }
                    if (object.nameField != null)
                        message.nameField = String(object.nameField);
                    switch (object.history) {
                    default:
                        if (typeof object.history === "number") {
                            message.history = object.history;
                            break;
                        }
                        break;
                    case "HISTORY_UNSPECIFIED":
                    case 0:
                        message.history = 0;
                        break;
                    case "ORIGINALLY_SINGLE_PATTERN":
                    case 1:
                        message.history = 1;
                        break;
                    case "FUTURE_MULTI_PATTERN":
                    case 2:
                        message.history = 2;
                        break;
                    }
                    if (object.plural != null)
                        message.plural = String(object.plural);
                    if (object.singular != null)
                        message.singular = String(object.singular);
                    if (object.style) {
                        if (!Array.isArray(object.style))
                            throw TypeError(".google.api.ResourceDescriptor.style: array expected");
                        message.style = [];
                        for (var i = 0; i < object.style.length; ++i)
                            switch (object.style[i]) {
                            default:
                                if (typeof object.style[i] === "number") {
                                    message.style[i] = object.style[i];
                                    break;
                                }
                            case "STYLE_UNSPECIFIED":
                            case 0:
                                message.style[i] = 0;
                                break;
                            case "DECLARATIVE_FRIENDLY":
                            case 1:
                                message.style[i] = 1;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceDescriptor message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.ResourceDescriptor} message ResourceDescriptor
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceDescriptor.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.pattern = [];
                        object.style = [];
                    }
                    if (options.defaults) {
                        object.type = "";
                        object.nameField = "";
                        object.history = options.enums === String ? "HISTORY_UNSPECIFIED" : 0;
                        object.plural = "";
                        object.singular = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.pattern && message.pattern.length) {
                        object.pattern = [];
                        for (var j = 0; j < message.pattern.length; ++j)
                            object.pattern[j] = message.pattern[j];
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        object.nameField = message.nameField;
                    if (message.history != null && message.hasOwnProperty("history"))
                        object.history = options.enums === String ? $root.google.api.ResourceDescriptor.History[message.history] === undefined ? message.history : $root.google.api.ResourceDescriptor.History[message.history] : message.history;
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        object.plural = message.plural;
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        object.singular = message.singular;
                    if (message.style && message.style.length) {
                        object.style = [];
                        for (var j = 0; j < message.style.length; ++j)
                            object.style[j] = options.enums === String ? $root.google.api.ResourceDescriptor.Style[message.style[j]] === undefined ? message.style[j] : $root.google.api.ResourceDescriptor.Style[message.style[j]] : message.style[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this ResourceDescriptor to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceDescriptor.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceDescriptor
                 * @function getTypeUrl
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceDescriptor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceDescriptor";
                };
    
                /**
                 * History enum.
                 * @name google.api.ResourceDescriptor.History
                 * @enum {number}
                 * @property {number} HISTORY_UNSPECIFIED=0 HISTORY_UNSPECIFIED value
                 * @property {number} ORIGINALLY_SINGLE_PATTERN=1 ORIGINALLY_SINGLE_PATTERN value
                 * @property {number} FUTURE_MULTI_PATTERN=2 FUTURE_MULTI_PATTERN value
                 */
                ResourceDescriptor.History = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "HISTORY_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "ORIGINALLY_SINGLE_PATTERN"] = 1;
                    values[valuesById[2] = "FUTURE_MULTI_PATTERN"] = 2;
                    return values;
                })();
    
                /**
                 * Style enum.
                 * @name google.api.ResourceDescriptor.Style
                 * @enum {number}
                 * @property {number} STYLE_UNSPECIFIED=0 STYLE_UNSPECIFIED value
                 * @property {number} DECLARATIVE_FRIENDLY=1 DECLARATIVE_FRIENDLY value
                 */
                ResourceDescriptor.Style = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STYLE_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "DECLARATIVE_FRIENDLY"] = 1;
                    return values;
                })();
    
                return ResourceDescriptor;
            })();
    
            api.ResourceReference = (function() {
    
                /**
                 * Properties of a ResourceReference.
                 * @memberof google.api
                 * @interface IResourceReference
                 * @property {string|null} [type] ResourceReference type
                 * @property {string|null} [childType] ResourceReference childType
                 */
    
                /**
                 * Constructs a new ResourceReference.
                 * @memberof google.api
                 * @classdesc Represents a ResourceReference.
                 * @implements IResourceReference
                 * @constructor
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 */
                function ResourceReference(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceReference type.
                 * @member {string} type
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.type = "";
    
                /**
                 * ResourceReference childType.
                 * @member {string} childType
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.childType = "";
    
                /**
                 * Creates a new ResourceReference instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 * @returns {google.api.ResourceReference} ResourceReference instance
                 */
                ResourceReference.create = function create(properties) {
                    return new ResourceReference(properties);
                };
    
                /**
                 * Encodes the specified ResourceReference message. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.childType != null && Object.hasOwnProperty.call(message, "childType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.childType);
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceReference message, length delimited. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceReference();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                message.childType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceReference message.
                 * @function verify
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceReference.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        if (!$util.isString(message.childType))
                            return "childType: string expected";
                    return null;
                };
    
                /**
                 * Creates a ResourceReference message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceReference} ResourceReference
                 */
                ResourceReference.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceReference)
                        return object;
                    var message = new $root.google.api.ResourceReference();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.childType != null)
                        message.childType = String(object.childType);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceReference message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.ResourceReference} message ResourceReference
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceReference.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type = "";
                        object.childType = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        object.childType = message.childType;
                    return object;
                };
    
                /**
                 * Converts this ResourceReference to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceReference
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceReference.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceReference
                 * @function getTypeUrl
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceReference.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceReference";
                };
    
                return ResourceReference;
            })();
    
            return api;
        })();
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.file && message.file.length))
                                    message.file = [];
                                message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorSet
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorSet";
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency
                 * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 * @property {string|null} [edition] FileDescriptorProto edition
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.publicDependency = [];
                    this.weakDependency = [];
                    this.messageType = [];
                    this.enumType = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto publicDependency.
                 * @member {Array.<number>} publicDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.publicDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weakDependency.
                 * @member {Array.<number>} weakDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weakDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto messageType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} messageType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.messageType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto sourceCodeInfo.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.sourceCodeInfo = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * FileDescriptorProto edition.
                 * @member {string} edition
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.edition = "";
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.messageType != null && message.messageType.length)
                        for (var i = 0; i < message.messageType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.sourceCodeInfo != null && Object.hasOwnProperty.call(message, "sourceCodeInfo"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.publicDependency != null && message.publicDependency.length)
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);
                    if (message.weakDependency != null && message.weakDependency.length)
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);
                    if (message.syntax != null && Object.hasOwnProperty.call(message, "syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    if (message.edition != null && Object.hasOwnProperty.call(message, "edition"))
                        writer.uint32(/* id 13, wireType 2 =*/106).string(message.edition);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message["package"] = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.dependency && message.dependency.length))
                                    message.dependency = [];
                                message.dependency.push(reader.string());
                                break;
                            }
                        case 10: {
                                if (!(message.publicDependency && message.publicDependency.length))
                                    message.publicDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.publicDependency.push(reader.int32());
                                } else
                                    message.publicDependency.push(reader.int32());
                                break;
                            }
                        case 11: {
                                if (!(message.weakDependency && message.weakDependency.length))
                                    message.weakDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.weakDependency.push(reader.int32());
                                } else
                                    message.weakDependency.push(reader.int32());
                                break;
                            }
                        case 4: {
                                if (!(message.messageType && message.messageType.length))
                                    message.messageType = [];
                                message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.service && message.service.length))
                                    message.service = [];
                                message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                                break;
                            }
                        case 12: {
                                message.syntax = reader.string();
                                break;
                            }
                        case 13: {
                                message.edition = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.publicDependency != null && message.hasOwnProperty("publicDependency")) {
                        if (!Array.isArray(message.publicDependency))
                            return "publicDependency: array expected";
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            if (!$util.isInteger(message.publicDependency[i]))
                                return "publicDependency: integer[] expected";
                    }
                    if (message.weakDependency != null && message.hasOwnProperty("weakDependency")) {
                        if (!Array.isArray(message.weakDependency))
                            return "weakDependency: array expected";
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            if (!$util.isInteger(message.weakDependency[i]))
                                return "weakDependency: integer[] expected";
                    }
                    if (message.messageType != null && message.hasOwnProperty("messageType")) {
                        if (!Array.isArray(message.messageType))
                            return "messageType: array expected";
                        for (var i = 0; i < message.messageType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);
                            if (error)
                                return "messageType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);
                        if (error)
                            return "sourceCodeInfo." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        if (!$util.isString(message.edition))
                            return "edition: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.publicDependency) {
                        if (!Array.isArray(object.publicDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
                        message.publicDependency = [];
                        for (var i = 0; i < object.publicDependency.length; ++i)
                            message.publicDependency[i] = object.publicDependency[i] | 0;
                    }
                    if (object.weakDependency) {
                        if (!Array.isArray(object.weakDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
                        message.weakDependency = [];
                        for (var i = 0; i < object.weakDependency.length; ++i)
                            message.weakDependency[i] = object.weakDependency[i] | 0;
                    }
                    if (object.messageType) {
                        if (!Array.isArray(object.messageType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
                        message.messageType = [];
                        for (var i = 0; i < object.messageType.length; ++i) {
                            if (typeof object.messageType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                            message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.sourceCodeInfo != null) {
                        if (typeof object.sourceCodeInfo !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    if (object.edition != null)
                        message.edition = String(object.edition);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.messageType = [];
                        object.enumType = [];
                        object.service = [];
                        object.extension = [];
                        object.publicDependency = [];
                        object.weakDependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.sourceCodeInfo = null;
                        object.syntax = "";
                        object.edition = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.messageType && message.messageType.length) {
                        object.messageType = [];
                        for (var j = 0; j < message.messageType.length; ++j)
                            object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);
                    if (message.publicDependency && message.publicDependency.length) {
                        object.publicDependency = [];
                        for (var j = 0; j < message.publicDependency.length; ++j)
                            object.publicDependency[j] = message.publicDependency[j];
                    }
                    if (message.weakDependency && message.weakDependency.length) {
                        object.weakDependency = [];
                        for (var j = 0; j < message.weakDependency.length; ++j)
                            object.weakDependency[j] = message.weakDependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        object.edition = message.edition;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorProto";
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nestedType = [];
                    this.enumType = [];
                    this.extensionRange = [];
                    this.oneofDecl = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nestedType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nestedType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nestedType = $util.emptyArray;
    
                /**
                 * DescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * DescriptorProto extensionRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extensionRange = $util.emptyArray;
    
                /**
                 * DescriptorProto oneofDecl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneofDecl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * DescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nestedType != null && message.nestedType.length)
                        for (var i = 0; i < message.nestedType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extensionRange != null && message.extensionRange.length)
                        for (var i = 0; i < message.extensionRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneofDecl != null && message.oneofDecl.length)
                        for (var i = 0; i < message.oneofDecl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.field && message.field.length))
                                    message.field = [];
                                message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                if (!(message.nestedType && message.nestedType.length))
                                    message.nestedType = [];
                                message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 4: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.extensionRange && message.extensionRange.length))
                                    message.extensionRange = [];
                                message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                if (!(message.oneofDecl && message.oneofDecl.length))
                                    message.oneofDecl = [];
                                message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 10: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nestedType != null && message.hasOwnProperty("nestedType")) {
                        if (!Array.isArray(message.nestedType))
                            return "nestedType: array expected";
                        for (var i = 0; i < message.nestedType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);
                            if (error)
                                return "nestedType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.extensionRange != null && message.hasOwnProperty("extensionRange")) {
                        if (!Array.isArray(message.extensionRange))
                            return "extensionRange: array expected";
                        for (var i = 0; i < message.extensionRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);
                            if (error)
                                return "extensionRange." + error;
                        }
                    }
                    if (message.oneofDecl != null && message.hasOwnProperty("oneofDecl")) {
                        if (!Array.isArray(message.oneofDecl))
                            return "oneofDecl: array expected";
                        for (var i = 0; i < message.oneofDecl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);
                            if (error)
                                return "oneofDecl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nestedType) {
                        if (!Array.isArray(object.nestedType))
                            throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
                        message.nestedType = [];
                        for (var i = 0; i < object.nestedType.length; ++i) {
                            if (typeof object.nestedType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                            message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.extensionRange) {
                        if (!Array.isArray(object.extensionRange))
                            throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
                        message.extensionRange = [];
                        for (var i = 0; i < object.extensionRange.length; ++i) {
                            if (typeof object.extensionRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                            message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);
                        }
                    }
                    if (object.oneofDecl) {
                        if (!Array.isArray(object.oneofDecl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
                        message.oneofDecl = [];
                        for (var i = 0; i < object.oneofDecl.length; ++i) {
                            if (typeof object.oneofDecl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                            message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nestedType = [];
                        object.enumType = [];
                        object.extensionRange = [];
                        object.extension = [];
                        object.oneofDecl = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nestedType && message.nestedType.length) {
                        object.nestedType = [];
                        for (var j = 0; j < message.nestedType.length; ++j)
                            object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.extensionRange && message.extensionRange.length) {
                        object.extensionRange = [];
                        for (var j = 0; j < message.extensionRange.length; ++j)
                            object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneofDecl && message.oneofDecl.length) {
                        object.oneofDecl = [];
                        for (var j = 0; j < message.oneofDecl.length; ++j)
                            object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);
                    }
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DescriptorProto";
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     * @property {google.protobuf.IExtensionRangeOptions|null} [options] ExtensionRange options
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * ExtensionRange options.
                     * @member {google.protobuf.IExtensionRangeOptions|null|undefined} options
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.options = null;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                            $root.google.protobuf.ExtensionRangeOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.options = $root.google.protobuf.ExtensionRangeOptions.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.options != null && message.hasOwnProperty("options")) {
                            var error = $root.google.protobuf.ExtensionRangeOptions.verify(message.options);
                            if (error)
                                return "options." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        if (object.options != null) {
                            if (typeof object.options !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.ExtensionRange.options: object expected");
                            message.options = $root.google.protobuf.ExtensionRangeOptions.fromObject(object.options);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                            object.options = null;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.options != null && message.hasOwnProperty("options"))
                            object.options = $root.google.protobuf.ExtensionRangeOptions.toObject(message.options, options);
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ExtensionRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ExtensionRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ExtensionRange";
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ReservedRange";
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.ExtensionRangeOptions = (function() {
    
                /**
                 * Properties of an ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @interface IExtensionRangeOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ExtensionRangeOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an ExtensionRangeOptions.
                 * @implements IExtensionRangeOptions
                 * @constructor
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 */
                function ExtensionRangeOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ExtensionRangeOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new ExtensionRangeOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions instance
                 */
                ExtensionRangeOptions.create = function create(properties) {
                    return new ExtensionRangeOptions(properties);
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an ExtensionRangeOptions message.
                 * @function verify
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ExtensionRangeOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an ExtensionRangeOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 */
                ExtensionRangeOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ExtensionRangeOptions)
                        return object;
                    var message = new $root.google.protobuf.ExtensionRangeOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an ExtensionRangeOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.ExtensionRangeOptions} message ExtensionRangeOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ExtensionRangeOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ExtensionRangeOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ExtensionRangeOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ExtensionRangeOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ExtensionRangeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ExtensionRangeOptions";
                };
    
                return ExtensionRangeOptions;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [typeName] FieldDescriptorProto typeName
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue
                 * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex
                 * @property {string|null} [jsonName] FieldDescriptorProto jsonName
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 * @property {boolean|null} [proto3Optional] FieldDescriptorProto proto3Optional
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto typeName.
                 * @member {string} typeName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.typeName = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto defaultValue.
                 * @member {string} defaultValue
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.defaultValue = "";
    
                /**
                 * FieldDescriptorProto oneofIndex.
                 * @member {number} oneofIndex
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneofIndex = 0;
    
                /**
                 * FieldDescriptorProto jsonName.
                 * @member {string} jsonName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.jsonName = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * FieldDescriptorProto proto3Optional.
                 * @member {boolean} proto3Optional
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.proto3Optional = false;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.typeName != null && Object.hasOwnProperty.call(message, "typeName"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);
                    if (message.defaultValue != null && Object.hasOwnProperty.call(message, "defaultValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneofIndex != null && Object.hasOwnProperty.call(message, "oneofIndex"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);
                    if (message.jsonName != null && Object.hasOwnProperty.call(message, "jsonName"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);
                    if (message.proto3Optional != null && Object.hasOwnProperty.call(message, "proto3Optional"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.proto3Optional);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.number = reader.int32();
                                break;
                            }
                        case 4: {
                                message.label = reader.int32();
                                break;
                            }
                        case 5: {
                                message.type = reader.int32();
                                break;
                            }
                        case 6: {
                                message.typeName = reader.string();
                                break;
                            }
                        case 2: {
                                message.extendee = reader.string();
                                break;
                            }
                        case 7: {
                                message.defaultValue = reader.string();
                                break;
                            }
                        case 9: {
                                message.oneofIndex = reader.int32();
                                break;
                            }
                        case 10: {
                                message.jsonName = reader.string();
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 17: {
                                message.proto3Optional = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        if (!$util.isString(message.typeName))
                            return "typeName: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        if (!$util.isString(message.defaultValue))
                            return "defaultValue: string expected";
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        if (!$util.isInteger(message.oneofIndex))
                            return "oneofIndex: integer expected";
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        if (!$util.isString(message.jsonName))
                            return "jsonName: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        if (typeof message.proto3Optional !== "boolean")
                            return "proto3Optional: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    default:
                        if (typeof object.label === "number") {
                            message.label = object.label;
                            break;
                        }
                        break;
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    default:
                        if (typeof object.type === "number") {
                            message.type = object.type;
                            break;
                        }
                        break;
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.typeName != null)
                        message.typeName = String(object.typeName);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.defaultValue != null)
                        message.defaultValue = String(object.defaultValue);
                    if (object.oneofIndex != null)
                        message.oneofIndex = object.oneofIndex | 0;
                    if (object.jsonName != null)
                        message.jsonName = String(object.jsonName);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    if (object.proto3Optional != null)
                        message.proto3Optional = Boolean(object.proto3Optional);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.typeName = "";
                        object.defaultValue = "";
                        object.options = null;
                        object.oneofIndex = 0;
                        object.jsonName = "";
                        object.proto3Optional = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] === undefined ? message.label : $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] === undefined ? message.type : $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        object.typeName = message.typeName;
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        object.defaultValue = message.defaultValue;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        object.oneofIndex = message.oneofIndex;
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        object.jsonName = message.jsonName;
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        object.proto3Optional = message.proto3Optional;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldDescriptorProto";
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofDescriptorProto";
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 * @property {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>|null} [reservedRange] EnumDescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] EnumDescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * EnumDescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>} reservedRange
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.value && message.value.length))
                                    message.value = [];
                                message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 4: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.value = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto";
                };
    
                EnumDescriptorProto.EnumReservedRange = (function() {
    
                    /**
                     * Properties of an EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @interface IEnumReservedRange
                     * @property {number|null} [start] EnumReservedRange start
                     * @property {number|null} [end] EnumReservedRange end
                     */
    
                    /**
                     * Constructs a new EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @classdesc Represents an EnumReservedRange.
                     * @implements IEnumReservedRange
                     * @constructor
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     */
                    function EnumReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * EnumReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.start = 0;
    
                    /**
                     * EnumReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new EnumReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange instance
                     */
                    EnumReservedRange.create = function create(properties) {
                        return new EnumReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an EnumReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    EnumReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an EnumReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     */
                    EnumReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.EnumDescriptorProto.EnumReservedRange)
                            return object;
                        var message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an EnumReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.EnumReservedRange} message EnumReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    EnumReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this EnumReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    EnumReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for EnumReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    EnumReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto.EnumReservedRange";
                    };
    
                    return EnumReservedRange;
                })();
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.number = reader.int32();
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueDescriptorProto";
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.method && message.method.length))
                                    message.method = [];
                                message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceDescriptorProto";
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [inputType] MethodDescriptorProto inputType
                 * @property {string|null} [outputType] MethodDescriptorProto outputType
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming
                 * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto inputType.
                 * @member {string} inputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.inputType = "";
    
                /**
                 * MethodDescriptorProto outputType.
                 * @member {string} outputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.outputType = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto clientStreaming.
                 * @member {boolean} clientStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.clientStreaming = false;
    
                /**
                 * MethodDescriptorProto serverStreaming.
                 * @member {boolean} serverStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.serverStreaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.inputType != null && Object.hasOwnProperty.call(message, "inputType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);
                    if (message.outputType != null && Object.hasOwnProperty.call(message, "outputType"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.clientStreaming != null && Object.hasOwnProperty.call(message, "clientStreaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);
                    if (message.serverStreaming != null && Object.hasOwnProperty.call(message, "serverStreaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.inputType = reader.string();
                                break;
                            }
                        case 3: {
                                message.outputType = reader.string();
                                break;
                            }
                        case 4: {
                                message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.clientStreaming = reader.bool();
                                break;
                            }
                        case 6: {
                                message.serverStreaming = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        if (!$util.isString(message.inputType))
                            return "inputType: string expected";
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        if (!$util.isString(message.outputType))
                            return "outputType: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        if (typeof message.clientStreaming !== "boolean")
                            return "clientStreaming: boolean expected";
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        if (typeof message.serverStreaming !== "boolean")
                            return "serverStreaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.inputType != null)
                        message.inputType = String(object.inputType);
                    if (object.outputType != null)
                        message.outputType = String(object.outputType);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.clientStreaming != null)
                        message.clientStreaming = Boolean(object.clientStreaming);
                    if (object.serverStreaming != null)
                        message.serverStreaming = Boolean(object.serverStreaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.inputType = "";
                        object.outputType = "";
                        object.options = null;
                        object.clientStreaming = false;
                        object.serverStreaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        object.inputType = message.inputType;
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        object.outputType = message.outputType;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        object.clientStreaming = message.clientStreaming;
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        object.serverStreaming = message.serverStreaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodDescriptorProto";
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [javaPackage] FileOptions javaPackage
                 * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname
                 * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles
                 * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash
                 * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor
                 * @property {string|null} [goPackage] FileOptions goPackage
                 * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices
                 * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices
                 * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices
                 * @property {boolean|null} [phpGenericServices] FileOptions phpGenericServices
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas
                 * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix
                 * @property {string|null} [csharpNamespace] FileOptions csharpNamespace
                 * @property {string|null} [swiftPrefix] FileOptions swiftPrefix
                 * @property {string|null} [phpClassPrefix] FileOptions phpClassPrefix
                 * @property {string|null} [phpNamespace] FileOptions phpNamespace
                 * @property {string|null} [phpMetadataNamespace] FileOptions phpMetadataNamespace
                 * @property {string|null} [rubyPackage] FileOptions rubyPackage
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption
                 * @property {Array.<google.api.IResourceDescriptor>|null} [".google.api.resourceDefinition"] FileOptions .google.api.resourceDefinition
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.resourceDefinition"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions javaPackage.
                 * @member {string} javaPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaPackage = "";
    
                /**
                 * FileOptions javaOuterClassname.
                 * @member {string} javaOuterClassname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaOuterClassname = "";
    
                /**
                 * FileOptions javaMultipleFiles.
                 * @member {boolean} javaMultipleFiles
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaMultipleFiles = false;
    
                /**
                 * FileOptions javaGenerateEqualsAndHash.
                 * @member {boolean} javaGenerateEqualsAndHash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenerateEqualsAndHash = false;
    
                /**
                 * FileOptions javaStringCheckUtf8.
                 * @member {boolean} javaStringCheckUtf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaStringCheckUtf8 = false;
    
                /**
                 * FileOptions optimizeFor.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimizeFor = 1;
    
                /**
                 * FileOptions goPackage.
                 * @member {string} goPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.goPackage = "";
    
                /**
                 * FileOptions ccGenericServices.
                 * @member {boolean} ccGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccGenericServices = false;
    
                /**
                 * FileOptions javaGenericServices.
                 * @member {boolean} javaGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenericServices = false;
    
                /**
                 * FileOptions pyGenericServices.
                 * @member {boolean} pyGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.pyGenericServices = false;
    
                /**
                 * FileOptions phpGenericServices.
                 * @member {boolean} phpGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpGenericServices = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions ccEnableArenas.
                 * @member {boolean} ccEnableArenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccEnableArenas = true;
    
                /**
                 * FileOptions objcClassPrefix.
                 * @member {string} objcClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objcClassPrefix = "";
    
                /**
                 * FileOptions csharpNamespace.
                 * @member {string} csharpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharpNamespace = "";
    
                /**
                 * FileOptions swiftPrefix.
                 * @member {string} swiftPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.swiftPrefix = "";
    
                /**
                 * FileOptions phpClassPrefix.
                 * @member {string} phpClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpClassPrefix = "";
    
                /**
                 * FileOptions phpNamespace.
                 * @member {string} phpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpNamespace = "";
    
                /**
                 * FileOptions phpMetadataNamespace.
                 * @member {string} phpMetadataNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpMetadataNamespace = "";
    
                /**
                 * FileOptions rubyPackage.
                 * @member {string} rubyPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.rubyPackage = "";
    
                /**
                 * FileOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FileOptions .google.api.resourceDefinition.
                 * @member {Array.<google.api.IResourceDescriptor>} .google.api.resourceDefinition
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".google.api.resourceDefinition"] = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.javaPackage != null && Object.hasOwnProperty.call(message, "javaPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);
                    if (message.javaOuterClassname != null && Object.hasOwnProperty.call(message, "javaOuterClassname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);
                    if (message.optimizeFor != null && Object.hasOwnProperty.call(message, "optimizeFor"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);
                    if (message.javaMultipleFiles != null && Object.hasOwnProperty.call(message, "javaMultipleFiles"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);
                    if (message.goPackage != null && Object.hasOwnProperty.call(message, "goPackage"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);
                    if (message.ccGenericServices != null && Object.hasOwnProperty.call(message, "ccGenericServices"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);
                    if (message.javaGenericServices != null && Object.hasOwnProperty.call(message, "javaGenericServices"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);
                    if (message.pyGenericServices != null && Object.hasOwnProperty.call(message, "pyGenericServices"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);
                    if (message.javaGenerateEqualsAndHash != null && Object.hasOwnProperty.call(message, "javaGenerateEqualsAndHash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.javaStringCheckUtf8 != null && Object.hasOwnProperty.call(message, "javaStringCheckUtf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);
                    if (message.ccEnableArenas != null && Object.hasOwnProperty.call(message, "ccEnableArenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);
                    if (message.objcClassPrefix != null && Object.hasOwnProperty.call(message, "objcClassPrefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);
                    if (message.csharpNamespace != null && Object.hasOwnProperty.call(message, "csharpNamespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);
                    if (message.swiftPrefix != null && Object.hasOwnProperty.call(message, "swiftPrefix"))
                        writer.uint32(/* id 39, wireType 2 =*/314).string(message.swiftPrefix);
                    if (message.phpClassPrefix != null && Object.hasOwnProperty.call(message, "phpClassPrefix"))
                        writer.uint32(/* id 40, wireType 2 =*/322).string(message.phpClassPrefix);
                    if (message.phpNamespace != null && Object.hasOwnProperty.call(message, "phpNamespace"))
                        writer.uint32(/* id 41, wireType 2 =*/330).string(message.phpNamespace);
                    if (message.phpGenericServices != null && Object.hasOwnProperty.call(message, "phpGenericServices"))
                        writer.uint32(/* id 42, wireType 0 =*/336).bool(message.phpGenericServices);
                    if (message.phpMetadataNamespace != null && Object.hasOwnProperty.call(message, "phpMetadataNamespace"))
                        writer.uint32(/* id 44, wireType 2 =*/354).string(message.phpMetadataNamespace);
                    if (message.rubyPackage != null && Object.hasOwnProperty.call(message, "rubyPackage"))
                        writer.uint32(/* id 45, wireType 2 =*/362).string(message.rubyPackage);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resourceDefinition"] != null && message[".google.api.resourceDefinition"].length)
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i)
                            $root.google.api.ResourceDescriptor.encode(message[".google.api.resourceDefinition"][i], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.javaPackage = reader.string();
                                break;
                            }
                        case 8: {
                                message.javaOuterClassname = reader.string();
                                break;
                            }
                        case 10: {
                                message.javaMultipleFiles = reader.bool();
                                break;
                            }
                        case 20: {
                                message.javaGenerateEqualsAndHash = reader.bool();
                                break;
                            }
                        case 27: {
                                message.javaStringCheckUtf8 = reader.bool();
                                break;
                            }
                        case 9: {
                                message.optimizeFor = reader.int32();
                                break;
                            }
                        case 11: {
                                message.goPackage = reader.string();
                                break;
                            }
                        case 16: {
                                message.ccGenericServices = reader.bool();
                                break;
                            }
                        case 17: {
                                message.javaGenericServices = reader.bool();
                                break;
                            }
                        case 18: {
                                message.pyGenericServices = reader.bool();
                                break;
                            }
                        case 42: {
                                message.phpGenericServices = reader.bool();
                                break;
                            }
                        case 23: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 31: {
                                message.ccEnableArenas = reader.bool();
                                break;
                            }
                        case 36: {
                                message.objcClassPrefix = reader.string();
                                break;
                            }
                        case 37: {
                                message.csharpNamespace = reader.string();
                                break;
                            }
                        case 39: {
                                message.swiftPrefix = reader.string();
                                break;
                            }
                        case 40: {
                                message.phpClassPrefix = reader.string();
                                break;
                            }
                        case 41: {
                                message.phpNamespace = reader.string();
                                break;
                            }
                        case 44: {
                                message.phpMetadataNamespace = reader.string();
                                break;
                            }
                        case 45: {
                                message.rubyPackage = reader.string();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                if (!(message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length))
                                    message[".google.api.resourceDefinition"] = [];
                                message[".google.api.resourceDefinition"].push($root.google.api.ResourceDescriptor.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        if (!$util.isString(message.javaPackage))
                            return "javaPackage: string expected";
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        if (!$util.isString(message.javaOuterClassname))
                            return "javaOuterClassname: string expected";
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        if (typeof message.javaMultipleFiles !== "boolean")
                            return "javaMultipleFiles: boolean expected";
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        if (typeof message.javaGenerateEqualsAndHash !== "boolean")
                            return "javaGenerateEqualsAndHash: boolean expected";
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        if (typeof message.javaStringCheckUtf8 !== "boolean")
                            return "javaStringCheckUtf8: boolean expected";
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        switch (message.optimizeFor) {
                        default:
                            return "optimizeFor: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        if (!$util.isString(message.goPackage))
                            return "goPackage: string expected";
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        if (typeof message.ccGenericServices !== "boolean")
                            return "ccGenericServices: boolean expected";
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        if (typeof message.javaGenericServices !== "boolean")
                            return "javaGenericServices: boolean expected";
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        if (typeof message.pyGenericServices !== "boolean")
                            return "pyGenericServices: boolean expected";
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        if (typeof message.phpGenericServices !== "boolean")
                            return "phpGenericServices: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        if (typeof message.ccEnableArenas !== "boolean")
                            return "ccEnableArenas: boolean expected";
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        if (!$util.isString(message.objcClassPrefix))
                            return "objcClassPrefix: string expected";
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        if (!$util.isString(message.csharpNamespace))
                            return "csharpNamespace: string expected";
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        if (!$util.isString(message.swiftPrefix))
                            return "swiftPrefix: string expected";
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        if (!$util.isString(message.phpClassPrefix))
                            return "phpClassPrefix: string expected";
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        if (!$util.isString(message.phpNamespace))
                            return "phpNamespace: string expected";
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        if (!$util.isString(message.phpMetadataNamespace))
                            return "phpMetadataNamespace: string expected";
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        if (!$util.isString(message.rubyPackage))
                            return "rubyPackage: string expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resourceDefinition"] != null && message.hasOwnProperty(".google.api.resourceDefinition")) {
                        if (!Array.isArray(message[".google.api.resourceDefinition"]))
                            return ".google.api.resourceDefinition: array expected";
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i) {
                            var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resourceDefinition"][i]);
                            if (error)
                                return ".google.api.resourceDefinition." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.javaPackage != null)
                        message.javaPackage = String(object.javaPackage);
                    if (object.javaOuterClassname != null)
                        message.javaOuterClassname = String(object.javaOuterClassname);
                    if (object.javaMultipleFiles != null)
                        message.javaMultipleFiles = Boolean(object.javaMultipleFiles);
                    if (object.javaGenerateEqualsAndHash != null)
                        message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);
                    if (object.javaStringCheckUtf8 != null)
                        message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);
                    switch (object.optimizeFor) {
                    default:
                        if (typeof object.optimizeFor === "number") {
                            message.optimizeFor = object.optimizeFor;
                            break;
                        }
                        break;
                    case "SPEED":
                    case 1:
                        message.optimizeFor = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimizeFor = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimizeFor = 3;
                        break;
                    }
                    if (object.goPackage != null)
                        message.goPackage = String(object.goPackage);
                    if (object.ccGenericServices != null)
                        message.ccGenericServices = Boolean(object.ccGenericServices);
                    if (object.javaGenericServices != null)
                        message.javaGenericServices = Boolean(object.javaGenericServices);
                    if (object.pyGenericServices != null)
                        message.pyGenericServices = Boolean(object.pyGenericServices);
                    if (object.phpGenericServices != null)
                        message.phpGenericServices = Boolean(object.phpGenericServices);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.ccEnableArenas != null)
                        message.ccEnableArenas = Boolean(object.ccEnableArenas);
                    if (object.objcClassPrefix != null)
                        message.objcClassPrefix = String(object.objcClassPrefix);
                    if (object.csharpNamespace != null)
                        message.csharpNamespace = String(object.csharpNamespace);
                    if (object.swiftPrefix != null)
                        message.swiftPrefix = String(object.swiftPrefix);
                    if (object.phpClassPrefix != null)
                        message.phpClassPrefix = String(object.phpClassPrefix);
                    if (object.phpNamespace != null)
                        message.phpNamespace = String(object.phpNamespace);
                    if (object.phpMetadataNamespace != null)
                        message.phpMetadataNamespace = String(object.phpMetadataNamespace);
                    if (object.rubyPackage != null)
                        message.rubyPackage = String(object.rubyPackage);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resourceDefinition"]) {
                        if (!Array.isArray(object[".google.api.resourceDefinition"]))
                            throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: array expected");
                        message[".google.api.resourceDefinition"] = [];
                        for (var i = 0; i < object[".google.api.resourceDefinition"].length; ++i) {
                            if (typeof object[".google.api.resourceDefinition"][i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: object expected");
                            message[".google.api.resourceDefinition"][i] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resourceDefinition"][i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.resourceDefinition"] = [];
                    }
                    if (options.defaults) {
                        object.javaPackage = "";
                        object.javaOuterClassname = "";
                        object.optimizeFor = options.enums === String ? "SPEED" : 1;
                        object.javaMultipleFiles = false;
                        object.goPackage = "";
                        object.ccGenericServices = false;
                        object.javaGenericServices = false;
                        object.pyGenericServices = false;
                        object.javaGenerateEqualsAndHash = false;
                        object.deprecated = false;
                        object.javaStringCheckUtf8 = false;
                        object.ccEnableArenas = true;
                        object.objcClassPrefix = "";
                        object.csharpNamespace = "";
                        object.swiftPrefix = "";
                        object.phpClassPrefix = "";
                        object.phpNamespace = "";
                        object.phpGenericServices = false;
                        object.phpMetadataNamespace = "";
                        object.rubyPackage = "";
                    }
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        object.javaPackage = message.javaPackage;
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        object.javaOuterClassname = message.javaOuterClassname;
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] === undefined ? message.optimizeFor : $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        object.javaMultipleFiles = message.javaMultipleFiles;
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        object.goPackage = message.goPackage;
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        object.ccGenericServices = message.ccGenericServices;
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        object.javaGenericServices = message.javaGenericServices;
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        object.pyGenericServices = message.pyGenericServices;
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        object.javaStringCheckUtf8 = message.javaStringCheckUtf8;
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        object.ccEnableArenas = message.ccEnableArenas;
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        object.objcClassPrefix = message.objcClassPrefix;
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        object.csharpNamespace = message.csharpNamespace;
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        object.swiftPrefix = message.swiftPrefix;
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        object.phpClassPrefix = message.phpClassPrefix;
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        object.phpNamespace = message.phpNamespace;
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        object.phpGenericServices = message.phpGenericServices;
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        object.phpMetadataNamespace = message.phpMetadataNamespace;
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        object.rubyPackage = message.rubyPackage;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length) {
                        object[".google.api.resourceDefinition"] = [];
                        for (var j = 0; j < message[".google.api.resourceDefinition"].length; ++j)
                            object[".google.api.resourceDefinition"][j] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resourceDefinition"][j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileOptions";
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat
                 * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [mapEntry] MessageOptions mapEntry
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption
                 * @property {google.api.IResourceDescriptor|null} [".google.api.resource"] MessageOptions .google.api.resource
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions messageSetWireFormat.
                 * @member {boolean} messageSetWireFormat
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.messageSetWireFormat = false;
    
                /**
                 * MessageOptions noStandardDescriptorAccessor.
                 * @member {boolean} noStandardDescriptorAccessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.noStandardDescriptorAccessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions mapEntry.
                 * @member {boolean} mapEntry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.mapEntry = false;
    
                /**
                 * MessageOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MessageOptions .google.api.resource.
                 * @member {google.api.IResourceDescriptor|null|undefined} .google.api.resource
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".google.api.resource"] = null;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.messageSetWireFormat != null && Object.hasOwnProperty.call(message, "messageSetWireFormat"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);
                    if (message.noStandardDescriptorAccessor != null && Object.hasOwnProperty.call(message, "noStandardDescriptorAccessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.mapEntry != null && Object.hasOwnProperty.call(message, "mapEntry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resource"] != null && Object.hasOwnProperty.call(message, ".google.api.resource"))
                        $root.google.api.ResourceDescriptor.encode(message[".google.api.resource"], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.messageSetWireFormat = reader.bool();
                                break;
                            }
                        case 2: {
                                message.noStandardDescriptorAccessor = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 7: {
                                message.mapEntry = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                message[".google.api.resource"] = $root.google.api.ResourceDescriptor.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        if (typeof message.messageSetWireFormat !== "boolean")
                            return "messageSetWireFormat: boolean expected";
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        if (typeof message.noStandardDescriptorAccessor !== "boolean")
                            return "noStandardDescriptorAccessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        if (typeof message.mapEntry !== "boolean")
                            return "mapEntry: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource")) {
                        var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resource"]);
                        if (error)
                            return ".google.api.resource." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.messageSetWireFormat != null)
                        message.messageSetWireFormat = Boolean(object.messageSetWireFormat);
                    if (object.noStandardDescriptorAccessor != null)
                        message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.mapEntry != null)
                        message.mapEntry = Boolean(object.mapEntry);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resource"] != null) {
                        if (typeof object[".google.api.resource"] !== "object")
                            throw TypeError(".google.protobuf.MessageOptions..google.api.resource: object expected");
                        message[".google.api.resource"] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resource"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.messageSetWireFormat = false;
                        object.noStandardDescriptorAccessor = false;
                        object.deprecated = false;
                        object.mapEntry = false;
                        object[".google.api.resource"] = null;
                    }
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        object.messageSetWireFormat = message.messageSetWireFormat;
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        object.mapEntry = message.mapEntry;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource"))
                        object[".google.api.resource"] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resource"], options);
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MessageOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MessageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MessageOptions";
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [unverifiedLazy] FieldOptions unverifiedLazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption
                 * @property {Array.<google.api.FieldBehavior>|null} [".google.api.fieldBehavior"] FieldOptions .google.api.fieldBehavior
                 * @property {google.api.IResourceReference|null} [".google.api.resourceReference"] FieldOptions .google.api.resourceReference
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.fieldBehavior"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions unverifiedLazy.
                 * @member {boolean} unverifiedLazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.unverifiedLazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.fieldBehavior.
                 * @member {Array.<google.api.FieldBehavior>} .google.api.fieldBehavior
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.fieldBehavior"] = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.resourceReference.
                 * @member {google.api.IResourceReference|null|undefined} .google.api.resourceReference
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.resourceReference"] = null;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && Object.hasOwnProperty.call(message, "lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && Object.hasOwnProperty.call(message, "jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && Object.hasOwnProperty.call(message, "weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.unverifiedLazy != null && Object.hasOwnProperty.call(message, "unverifiedLazy"))
                        writer.uint32(/* id 15, wireType 0 =*/120).bool(message.unverifiedLazy);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.fieldBehavior"] != null && message[".google.api.fieldBehavior"].length) {
                        writer.uint32(/* id 1052, wireType 2 =*/8418).fork();
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            writer.int32(message[".google.api.fieldBehavior"][i]);
                        writer.ldelim();
                    }
                    if (message[".google.api.resourceReference"] != null && Object.hasOwnProperty.call(message, ".google.api.resourceReference"))
                        $root.google.api.ResourceReference.encode(message[".google.api.resourceReference"], writer.uint32(/* id 1055, wireType 2 =*/8442).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.ctype = reader.int32();
                                break;
                            }
                        case 2: {
                                message.packed = reader.bool();
                                break;
                            }
                        case 6: {
                                message.jstype = reader.int32();
                                break;
                            }
                        case 5: {
                                message.lazy = reader.bool();
                                break;
                            }
                        case 15: {
                                message.unverifiedLazy = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 10: {
                                message.weak = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1052: {
                                if (!(message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length))
                                    message[".google.api.fieldBehavior"] = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message[".google.api.fieldBehavior"].push(reader.int32());
                                } else
                                    message[".google.api.fieldBehavior"].push(reader.int32());
                                break;
                            }
                        case 1055: {
                                message[".google.api.resourceReference"] = $root.google.api.ResourceReference.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        if (typeof message.unverifiedLazy !== "boolean")
                            return "unverifiedLazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.fieldBehavior"] != null && message.hasOwnProperty(".google.api.fieldBehavior")) {
                        if (!Array.isArray(message[".google.api.fieldBehavior"]))
                            return ".google.api.fieldBehavior: array expected";
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            switch (message[".google.api.fieldBehavior"][i]) {
                            default:
                                return ".google.api.fieldBehavior: enum value[] expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                                break;
                            }
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference")) {
                        var error = $root.google.api.ResourceReference.verify(message[".google.api.resourceReference"]);
                        if (error)
                            return ".google.api.resourceReference." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    default:
                        if (typeof object.ctype === "number") {
                            message.ctype = object.ctype;
                            break;
                        }
                        break;
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    default:
                        if (typeof object.jstype === "number") {
                            message.jstype = object.jstype;
                            break;
                        }
                        break;
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.unverifiedLazy != null)
                        message.unverifiedLazy = Boolean(object.unverifiedLazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.fieldBehavior"]) {
                        if (!Array.isArray(object[".google.api.fieldBehavior"]))
                            throw TypeError(".google.protobuf.FieldOptions..google.api.fieldBehavior: array expected");
                        message[".google.api.fieldBehavior"] = [];
                        for (var i = 0; i < object[".google.api.fieldBehavior"].length; ++i)
                            switch (object[".google.api.fieldBehavior"][i]) {
                            default:
                                if (typeof object[".google.api.fieldBehavior"][i] === "number") {
                                    message[".google.api.fieldBehavior"][i] = object[".google.api.fieldBehavior"][i];
                                    break;
                                }
                            case "FIELD_BEHAVIOR_UNSPECIFIED":
                            case 0:
                                message[".google.api.fieldBehavior"][i] = 0;
                                break;
                            case "OPTIONAL":
                            case 1:
                                message[".google.api.fieldBehavior"][i] = 1;
                                break;
                            case "REQUIRED":
                            case 2:
                                message[".google.api.fieldBehavior"][i] = 2;
                                break;
                            case "OUTPUT_ONLY":
                            case 3:
                                message[".google.api.fieldBehavior"][i] = 3;
                                break;
                            case "INPUT_ONLY":
                            case 4:
                                message[".google.api.fieldBehavior"][i] = 4;
                                break;
                            case "IMMUTABLE":
                            case 5:
                                message[".google.api.fieldBehavior"][i] = 5;
                                break;
                            case "UNORDERED_LIST":
                            case 6:
                                message[".google.api.fieldBehavior"][i] = 6;
                                break;
                            case "NON_EMPTY_DEFAULT":
                            case 7:
                                message[".google.api.fieldBehavior"][i] = 7;
                                break;
                            }
                    }
                    if (object[".google.api.resourceReference"] != null) {
                        if (typeof object[".google.api.resourceReference"] !== "object")
                            throw TypeError(".google.protobuf.FieldOptions..google.api.resourceReference: object expected");
                        message[".google.api.resourceReference"] = $root.google.api.ResourceReference.fromObject(object[".google.api.resourceReference"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.fieldBehavior"] = [];
                    }
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                        object.unverifiedLazy = false;
                        object[".google.api.resourceReference"] = null;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] === undefined ? message.ctype : $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] === undefined ? message.jstype : $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        object.unverifiedLazy = message.unverifiedLazy;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length) {
                        object[".google.api.fieldBehavior"] = [];
                        for (var j = 0; j < message[".google.api.fieldBehavior"].length; ++j)
                            object[".google.api.fieldBehavior"][j] = options.enums === String ? $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] === undefined ? message[".google.api.fieldBehavior"][j] : $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] : message[".google.api.fieldBehavior"][j];
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference"))
                        object[".google.api.resourceReference"] = $root.google.api.ResourceReference.toObject(message[".google.api.resourceReference"], options);
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldOptions";
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {number}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofOptions";
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allowAlias] EnumOptions allowAlias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allowAlias.
                 * @member {boolean} allowAlias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allowAlias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allowAlias != null && Object.hasOwnProperty.call(message, "allowAlias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                message.allowAlias = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        if (typeof message.allowAlias !== "boolean")
                            return "allowAlias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allowAlias != null)
                        message.allowAlias = Boolean(object.allowAlias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.allowAlias = false;
                        object.deprecated = false;
                    }
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        object.allowAlias = message.allowAlias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumOptions";
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueOptions";
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption
                 * @property {string|null} [".google.api.defaultHost"] ServiceOptions .google.api.defaultHost
                 * @property {string|null} [".google.api.oauthScopes"] ServiceOptions .google.api.oauthScopes
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * ServiceOptions .google.api.defaultHost.
                 * @member {string} .google.api.defaultHost
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.defaultHost"] = "";
    
                /**
                 * ServiceOptions .google.api.oauthScopes.
                 * @member {string} .google.api.oauthScopes
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.oauthScopes"] = "";
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.defaultHost"] != null && Object.hasOwnProperty.call(message, ".google.api.defaultHost"))
                        writer.uint32(/* id 1049, wireType 2 =*/8394).string(message[".google.api.defaultHost"]);
                    if (message[".google.api.oauthScopes"] != null && Object.hasOwnProperty.call(message, ".google.api.oauthScopes"))
                        writer.uint32(/* id 1050, wireType 2 =*/8402).string(message[".google.api.oauthScopes"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1049: {
                                message[".google.api.defaultHost"] = reader.string();
                                break;
                            }
                        case 1050: {
                                message[".google.api.oauthScopes"] = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        if (!$util.isString(message[".google.api.defaultHost"]))
                            return ".google.api.defaultHost: string expected";
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        if (!$util.isString(message[".google.api.oauthScopes"]))
                            return ".google.api.oauthScopes: string expected";
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.defaultHost"] != null)
                        message[".google.api.defaultHost"] = String(object[".google.api.defaultHost"]);
                    if (object[".google.api.oauthScopes"] != null)
                        message[".google.api.oauthScopes"] = String(object[".google.api.oauthScopes"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object[".google.api.defaultHost"] = "";
                        object[".google.api.oauthScopes"] = "";
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        object[".google.api.defaultHost"] = message[".google.api.defaultHost"];
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        object[".google.api.oauthScopes"] = message[".google.api.oauthScopes"];
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceOptions";
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {google.protobuf.MethodOptions.IdempotencyLevel|null} [idempotencyLevel] MethodOptions idempotencyLevel
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption
                 * @property {google.api.IHttpRule|null} [".google.api.http"] MethodOptions .google.api.http
                 * @property {Array.<string>|null} [".google.api.methodSignature"] MethodOptions .google.api.methodSignature
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.methodSignature"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions idempotencyLevel.
                 * @member {google.protobuf.MethodOptions.IdempotencyLevel} idempotencyLevel
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.idempotencyLevel = 0;
    
                /**
                 * MethodOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MethodOptions .google.api.http.
                 * @member {google.api.IHttpRule|null|undefined} .google.api.http
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.http"] = null;
    
                /**
                 * MethodOptions .google.api.methodSignature.
                 * @member {Array.<string>} .google.api.methodSignature
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.methodSignature"] = $util.emptyArray;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.idempotencyLevel != null && Object.hasOwnProperty.call(message, "idempotencyLevel"))
                        writer.uint32(/* id 34, wireType 0 =*/272).int32(message.idempotencyLevel);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.methodSignature"] != null && message[".google.api.methodSignature"].length)
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            writer.uint32(/* id 1051, wireType 2 =*/8410).string(message[".google.api.methodSignature"][i]);
                    if (message[".google.api.http"] != null && Object.hasOwnProperty.call(message, ".google.api.http"))
                        $root.google.api.HttpRule.encode(message[".google.api.http"], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 34: {
                                message.idempotencyLevel = reader.int32();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 72295728: {
                                message[".google.api.http"] = $root.google.api.HttpRule.decode(reader, reader.uint32());
                                break;
                            }
                        case 1051: {
                                if (!(message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length))
                                    message[".google.api.methodSignature"] = [];
                                message[".google.api.methodSignature"].push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        switch (message.idempotencyLevel) {
                        default:
                            return "idempotencyLevel: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http")) {
                        var error = $root.google.api.HttpRule.verify(message[".google.api.http"]);
                        if (error)
                            return ".google.api.http." + error;
                    }
                    if (message[".google.api.methodSignature"] != null && message.hasOwnProperty(".google.api.methodSignature")) {
                        if (!Array.isArray(message[".google.api.methodSignature"]))
                            return ".google.api.methodSignature: array expected";
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            if (!$util.isString(message[".google.api.methodSignature"][i]))
                                return ".google.api.methodSignature: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    switch (object.idempotencyLevel) {
                    default:
                        if (typeof object.idempotencyLevel === "number") {
                            message.idempotencyLevel = object.idempotencyLevel;
                            break;
                        }
                        break;
                    case "IDEMPOTENCY_UNKNOWN":
                    case 0:
                        message.idempotencyLevel = 0;
                        break;
                    case "NO_SIDE_EFFECTS":
                    case 1:
                        message.idempotencyLevel = 1;
                        break;
                    case "IDEMPOTENT":
                    case 2:
                        message.idempotencyLevel = 2;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.http"] != null) {
                        if (typeof object[".google.api.http"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
                        message[".google.api.http"] = $root.google.api.HttpRule.fromObject(object[".google.api.http"]);
                    }
                    if (object[".google.api.methodSignature"]) {
                        if (!Array.isArray(object[".google.api.methodSignature"]))
                            throw TypeError(".google.protobuf.MethodOptions..google.api.methodSignature: array expected");
                        message[".google.api.methodSignature"] = [];
                        for (var i = 0; i < object[".google.api.methodSignature"].length; ++i)
                            message[".google.api.methodSignature"][i] = String(object[".google.api.methodSignature"][i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.methodSignature"] = [];
                    }
                    if (options.defaults) {
                        object.deprecated = false;
                        object.idempotencyLevel = options.enums === String ? "IDEMPOTENCY_UNKNOWN" : 0;
                        object[".google.api.http"] = null;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        object.idempotencyLevel = options.enums === String ? $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] === undefined ? message.idempotencyLevel : $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] : message.idempotencyLevel;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length) {
                        object[".google.api.methodSignature"] = [];
                        for (var j = 0; j < message[".google.api.methodSignature"].length; ++j)
                            object[".google.api.methodSignature"][j] = message[".google.api.methodSignature"][j];
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                        object[".google.api.http"] = $root.google.api.HttpRule.toObject(message[".google.api.http"], options);
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodOptions";
                };
    
                /**
                 * IdempotencyLevel enum.
                 * @name google.protobuf.MethodOptions.IdempotencyLevel
                 * @enum {number}
                 * @property {number} IDEMPOTENCY_UNKNOWN=0 IDEMPOTENCY_UNKNOWN value
                 * @property {number} NO_SIDE_EFFECTS=1 NO_SIDE_EFFECTS value
                 * @property {number} IDEMPOTENT=2 IDEMPOTENT value
                 */
                MethodOptions.IdempotencyLevel = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "IDEMPOTENCY_UNKNOWN"] = 0;
                    values[valuesById[1] = "NO_SIDE_EFFECTS"] = 1;
                    values[valuesById[2] = "IDEMPOTENT"] = 2;
                    return values;
                })();
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifierValue] UninterpretedOption identifierValue
                 * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue
                 * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue
                 * @property {number|null} [doubleValue] UninterpretedOption doubleValue
                 * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue
                 * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifierValue.
                 * @member {string} identifierValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifierValue = "";
    
                /**
                 * UninterpretedOption positiveIntValue.
                 * @member {number|Long} positiveIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negativeIntValue.
                 * @member {number|Long} negativeIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption doubleValue.
                 * @member {number} doubleValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.doubleValue = 0;
    
                /**
                 * UninterpretedOption stringValue.
                 * @member {Uint8Array} stringValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.stringValue = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregateValue.
                 * @member {string} aggregateValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregateValue = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifierValue != null && Object.hasOwnProperty.call(message, "identifierValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);
                    if (message.positiveIntValue != null && Object.hasOwnProperty.call(message, "positiveIntValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);
                    if (message.negativeIntValue != null && Object.hasOwnProperty.call(message, "negativeIntValue"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);
                    if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);
                    if (message.aggregateValue != null && Object.hasOwnProperty.call(message, "aggregateValue"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.name && message.name.length))
                                    message.name = [];
                                message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.identifierValue = reader.string();
                                break;
                            }
                        case 4: {
                                message.positiveIntValue = reader.uint64();
                                break;
                            }
                        case 5: {
                                message.negativeIntValue = reader.int64();
                                break;
                            }
                        case 6: {
                                message.doubleValue = reader.double();
                                break;
                            }
                        case 7: {
                                message.stringValue = reader.bytes();
                                break;
                            }
                        case 8: {
                                message.aggregateValue = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        if (!$util.isString(message.identifierValue))
                            return "identifierValue: string expected";
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))
                            return "positiveIntValue: integer|Long expected";
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))
                            return "negativeIntValue: integer|Long expected";
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        if (typeof message.doubleValue !== "number")
                            return "doubleValue: number expected";
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        if (!(message.stringValue && typeof message.stringValue.length === "number" || $util.isString(message.stringValue)))
                            return "stringValue: buffer expected";
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        if (!$util.isString(message.aggregateValue))
                            return "aggregateValue: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifierValue != null)
                        message.identifierValue = String(object.identifierValue);
                    if (object.positiveIntValue != null)
                        if ($util.Long)
                            (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;
                        else if (typeof object.positiveIntValue === "string")
                            message.positiveIntValue = parseInt(object.positiveIntValue, 10);
                        else if (typeof object.positiveIntValue === "number")
                            message.positiveIntValue = object.positiveIntValue;
                        else if (typeof object.positiveIntValue === "object")
                            message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);
                    if (object.negativeIntValue != null)
                        if ($util.Long)
                            (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;
                        else if (typeof object.negativeIntValue === "string")
                            message.negativeIntValue = parseInt(object.negativeIntValue, 10);
                        else if (typeof object.negativeIntValue === "number")
                            message.negativeIntValue = object.negativeIntValue;
                        else if (typeof object.negativeIntValue === "object")
                            message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();
                    if (object.doubleValue != null)
                        message.doubleValue = Number(object.doubleValue);
                    if (object.stringValue != null)
                        if (typeof object.stringValue === "string")
                            $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);
                        else if (object.stringValue.length >= 0)
                            message.stringValue = object.stringValue;
                    if (object.aggregateValue != null)
                        message.aggregateValue = String(object.aggregateValue);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifierValue = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positiveIntValue = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negativeIntValue = options.longs === String ? "0" : 0;
                        object.doubleValue = 0;
                        if (options.bytes === String)
                            object.stringValue = "";
                        else {
                            object.stringValue = [];
                            if (options.bytes !== Array)
                                object.stringValue = $util.newBuffer(object.stringValue);
                        }
                        object.aggregateValue = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        object.identifierValue = message.identifierValue;
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (typeof message.positiveIntValue === "number")
                            object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;
                        else
                            object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (typeof message.negativeIntValue === "number")
                            object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;
                        else
                            object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        object.aggregateValue = message.aggregateValue;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UninterpretedOption
                 * @function getTypeUrl
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UninterpretedOption.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UninterpretedOption";
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} namePart NamePart namePart
                     * @property {boolean} isExtension NamePart isExtension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart namePart.
                     * @member {string} namePart
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.namePart = "";
    
                    /**
                     * NamePart isExtension.
                     * @member {boolean} isExtension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.isExtension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.namePart = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.isExtension = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("namePart"))
                            throw $util.ProtocolError("missing required 'namePart'", { instance: message });
                        if (!message.hasOwnProperty("isExtension"))
                            throw $util.ProtocolError("missing required 'isExtension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.namePart))
                            return "namePart: string expected";
                        if (typeof message.isExtension !== "boolean")
                            return "isExtension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.namePart != null)
                            message.namePart = String(object.namePart);
                        if (object.isExtension != null)
                            message.isExtension = Boolean(object.isExtension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.namePart = "";
                            object.isExtension = false;
                        }
                        if (message.namePart != null && message.hasOwnProperty("namePart"))
                            object.namePart = message.namePart;
                        if (message.isExtension != null && message.hasOwnProperty("isExtension"))
                            object.isExtension = message.isExtension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NamePart
                     * @function getTypeUrl
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NamePart.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.UninterpretedOption.NamePart";
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.location && message.location.length))
                                    message.location = [];
                                message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for SourceCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SourceCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.SourceCodeInfo";
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leadingComments] Location leadingComments
                     * @property {string|null} [trailingComments] Location trailingComments
                     * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leadingDetachedComments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leadingComments.
                     * @member {string} leadingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingComments = "";
    
                    /**
                     * Location trailingComments.
                     * @member {string} trailingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailingComments = "";
    
                    /**
                     * Location leadingDetachedComments.
                     * @member {Array.<string>} leadingDetachedComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingDetachedComments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leadingComments != null && Object.hasOwnProperty.call(message, "leadingComments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);
                        if (message.trailingComments != null && Object.hasOwnProperty.call(message, "trailingComments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);
                        if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    if (!(message.span && message.span.length))
                                        message.span = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.span.push(reader.int32());
                                    } else
                                        message.span.push(reader.int32());
                                    break;
                                }
                            case 3: {
                                    message.leadingComments = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.trailingComments = reader.string();
                                    break;
                                }
                            case 6: {
                                    if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))
                                        message.leadingDetachedComments = [];
                                    message.leadingDetachedComments.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            if (!$util.isString(message.leadingComments))
                                return "leadingComments: string expected";
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            if (!$util.isString(message.trailingComments))
                                return "trailingComments: string expected";
                        if (message.leadingDetachedComments != null && message.hasOwnProperty("leadingDetachedComments")) {
                            if (!Array.isArray(message.leadingDetachedComments))
                                return "leadingDetachedComments: array expected";
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                if (!$util.isString(message.leadingDetachedComments[i]))
                                    return "leadingDetachedComments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leadingComments != null)
                            message.leadingComments = String(object.leadingComments);
                        if (object.trailingComments != null)
                            message.trailingComments = String(object.trailingComments);
                        if (object.leadingDetachedComments) {
                            if (!Array.isArray(object.leadingDetachedComments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
                            message.leadingDetachedComments = [];
                            for (var i = 0; i < object.leadingDetachedComments.length; ++i)
                                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leadingDetachedComments = [];
                        }
                        if (options.defaults) {
                            object.leadingComments = "";
                            object.trailingComments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            object.leadingComments = message.leadingComments;
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            object.trailingComments = message.trailingComments;
                        if (message.leadingDetachedComments && message.leadingDetachedComments.length) {
                            object.leadingDetachedComments = [];
                            for (var j = 0; j < message.leadingDetachedComments.length; ++j)
                                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Location
                     * @function getTypeUrl
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Location.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.SourceCodeInfo.Location";
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.annotation && message.annotation.length))
                                    message.annotation = [];
                                message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GeneratedCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GeneratedCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo";
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [sourceFile] Annotation sourceFile
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     * @property {google.protobuf.GeneratedCodeInfo.Annotation.Semantic|null} [semantic] Annotation semantic
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation sourceFile.
                     * @member {string} sourceFile
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.sourceFile = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Annotation semantic.
                     * @member {google.protobuf.GeneratedCodeInfo.Annotation.Semantic} semantic
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.semantic = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.sourceFile != null && Object.hasOwnProperty.call(message, "sourceFile"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);
                        if (message.begin != null && Object.hasOwnProperty.call(message, "begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        if (message.semantic != null && Object.hasOwnProperty.call(message, "semantic"))
                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.semantic);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    message.sourceFile = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.begin = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 5: {
                                    message.semantic = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            if (!$util.isString(message.sourceFile))
                                return "sourceFile: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            switch (message.semantic) {
                            default:
                                return "semantic: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.sourceFile != null)
                            message.sourceFile = String(object.sourceFile);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        switch (object.semantic) {
                        default:
                            if (typeof object.semantic === "number") {
                                message.semantic = object.semantic;
                                break;
                            }
                            break;
                        case "NONE":
                        case 0:
                            message.semantic = 0;
                            break;
                        case "SET":
                        case 1:
                            message.semantic = 1;
                            break;
                        case "ALIAS":
                        case 2:
                            message.semantic = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.sourceFile = "";
                            object.begin = 0;
                            object.end = 0;
                            object.semantic = options.enums === String ? "NONE" : 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            object.sourceFile = message.sourceFile;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            object.semantic = options.enums === String ? $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] === undefined ? message.semantic : $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] : message.semantic;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Annotation
                     * @function getTypeUrl
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Annotation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo.Annotation";
                    };
    
                    /**
                     * Semantic enum.
                     * @name google.protobuf.GeneratedCodeInfo.Annotation.Semantic
                     * @enum {number}
                     * @property {number} NONE=0 NONE value
                     * @property {number} SET=1 SET value
                     * @property {number} ALIAS=2 ALIAS value
                     */
                    Annotation.Semantic = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "NONE"] = 0;
                        values[valuesById[1] = "SET"] = 1;
                        values[valuesById[2] = "ALIAS"] = 2;
                        return values;
                    })();
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            protobuf.Duration = (function() {
    
                /**
                 * Properties of a Duration.
                 * @memberof google.protobuf
                 * @interface IDuration
                 * @property {number|Long|null} [seconds] Duration seconds
                 * @property {number|null} [nanos] Duration nanos
                 */
    
                /**
                 * Constructs a new Duration.
                 * @memberof google.protobuf
                 * @classdesc Represents a Duration.
                 * @implements IDuration
                 * @constructor
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 */
                function Duration(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Duration seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Duration nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.nanos = 0;
    
                /**
                 * Creates a new Duration instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 * @returns {google.protobuf.Duration} Duration instance
                 */
                Duration.create = function create(properties) {
                    return new Duration(properties);
                };
    
                /**
                 * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Duration message, length delimited. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Duration();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Duration message.
                 * @function verify
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Duration.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Duration message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Duration} Duration
                 */
                Duration.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Duration)
                        return object;
                    var message = new $root.google.protobuf.Duration();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Duration message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.Duration} message Duration
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Duration.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Duration to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Duration
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Duration.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Duration
                 * @function getTypeUrl
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Duration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Duration";
                };
    
                return Duration;
            })();
    
            protobuf.Empty = (function() {
    
                /**
                 * Properties of an Empty.
                 * @memberof google.protobuf
                 * @interface IEmpty
                 */
    
                /**
                 * Constructs a new Empty.
                 * @memberof google.protobuf
                 * @classdesc Represents an Empty.
                 * @implements IEmpty
                 * @constructor
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 */
                function Empty(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Creates a new Empty instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 * @returns {google.protobuf.Empty} Empty instance
                 */
                Empty.create = function create(properties) {
                    return new Empty(properties);
                };
    
                /**
                 * Encodes the specified Empty message. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };
    
                /**
                 * Encodes the specified Empty message, length delimited. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Empty();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Empty message.
                 * @function verify
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Empty.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };
    
                /**
                 * Creates an Empty message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Empty} Empty
                 */
                Empty.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Empty)
                        return object;
                    return new $root.google.protobuf.Empty();
                };
    
                /**
                 * Creates a plain object from an Empty message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.Empty} message Empty
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Empty.toObject = function toObject() {
                    return {};
                };
    
                /**
                 * Converts this Empty to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Empty
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Empty.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Empty
                 * @function getTypeUrl
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Empty.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Empty";
                };
    
                return Empty;
            })();
    
            protobuf.Timestamp = (function() {
    
                /**
                 * Properties of a Timestamp.
                 * @memberof google.protobuf
                 * @interface ITimestamp
                 * @property {number|Long|null} [seconds] Timestamp seconds
                 * @property {number|null} [nanos] Timestamp nanos
                 */
    
                /**
                 * Constructs a new Timestamp.
                 * @memberof google.protobuf
                 * @classdesc Represents a Timestamp.
                 * @implements ITimestamp
                 * @constructor
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 */
                function Timestamp(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Timestamp seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Timestamp nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.nanos = 0;
    
                /**
                 * Creates a new Timestamp instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 * @returns {google.protobuf.Timestamp} Timestamp instance
                 */
                Timestamp.create = function create(properties) {
                    return new Timestamp(properties);
                };
    
                /**
                 * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Timestamp message.
                 * @function verify
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Timestamp.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Timestamp} Timestamp
                 */
                Timestamp.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Timestamp)
                        return object;
                    var message = new $root.google.protobuf.Timestamp();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.Timestamp} message Timestamp
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Timestamp.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Timestamp to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Timestamp.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Timestamp
                 * @function getTypeUrl
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Timestamp.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Timestamp";
                };
    
                return Timestamp;
            })();
    
            protobuf.DoubleValue = (function() {
    
                /**
                 * Properties of a DoubleValue.
                 * @memberof google.protobuf
                 * @interface IDoubleValue
                 * @property {number|null} [value] DoubleValue value
                 */
    
                /**
                 * Constructs a new DoubleValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a DoubleValue.
                 * @implements IDoubleValue
                 * @constructor
                 * @param {google.protobuf.IDoubleValue=} [properties] Properties to set
                 */
                function DoubleValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DoubleValue value.
                 * @member {number} value
                 * @memberof google.protobuf.DoubleValue
                 * @instance
                 */
                DoubleValue.prototype.value = 0;
    
                /**
                 * Creates a new DoubleValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue=} [properties] Properties to set
                 * @returns {google.protobuf.DoubleValue} DoubleValue instance
                 */
                DoubleValue.create = function create(properties) {
                    return new DoubleValue(properties);
                };
    
                /**
                 * Encodes the specified DoubleValue message. Does not implicitly {@link google.protobuf.DoubleValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue} message DoubleValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DoubleValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 1 =*/9).double(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified DoubleValue message, length delimited. Does not implicitly {@link google.protobuf.DoubleValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue} message DoubleValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DoubleValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DoubleValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DoubleValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DoubleValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.double();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DoubleValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DoubleValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DoubleValue message.
                 * @function verify
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DoubleValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "number")
                            return "value: number expected";
                    return null;
                };
    
                /**
                 * Creates a DoubleValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 */
                DoubleValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DoubleValue)
                        return object;
                    var message = new $root.google.protobuf.DoubleValue();
                    if (object.value != null)
                        message.value = Number(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a DoubleValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.DoubleValue} message DoubleValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DoubleValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this DoubleValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DoubleValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DoubleValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DoubleValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DoubleValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DoubleValue";
                };
    
                return DoubleValue;
            })();
    
            protobuf.FloatValue = (function() {
    
                /**
                 * Properties of a FloatValue.
                 * @memberof google.protobuf
                 * @interface IFloatValue
                 * @property {number|null} [value] FloatValue value
                 */
    
                /**
                 * Constructs a new FloatValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a FloatValue.
                 * @implements IFloatValue
                 * @constructor
                 * @param {google.protobuf.IFloatValue=} [properties] Properties to set
                 */
                function FloatValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FloatValue value.
                 * @member {number} value
                 * @memberof google.protobuf.FloatValue
                 * @instance
                 */
                FloatValue.prototype.value = 0;
    
                /**
                 * Creates a new FloatValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue=} [properties] Properties to set
                 * @returns {google.protobuf.FloatValue} FloatValue instance
                 */
                FloatValue.create = function create(properties) {
                    return new FloatValue(properties);
                };
    
                /**
                 * Encodes the specified FloatValue message. Does not implicitly {@link google.protobuf.FloatValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue} message FloatValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FloatValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 5 =*/13).float(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified FloatValue message, length delimited. Does not implicitly {@link google.protobuf.FloatValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue} message FloatValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FloatValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FloatValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FloatValue} FloatValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FloatValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FloatValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.float();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FloatValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FloatValue} FloatValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FloatValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FloatValue message.
                 * @function verify
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FloatValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "number")
                            return "value: number expected";
                    return null;
                };
    
                /**
                 * Creates a FloatValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FloatValue} FloatValue
                 */
                FloatValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FloatValue)
                        return object;
                    var message = new $root.google.protobuf.FloatValue();
                    if (object.value != null)
                        message.value = Number(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FloatValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.FloatValue} message FloatValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FloatValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this FloatValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FloatValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FloatValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FloatValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FloatValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FloatValue";
                };
    
                return FloatValue;
            })();
    
            protobuf.Int64Value = (function() {
    
                /**
                 * Properties of an Int64Value.
                 * @memberof google.protobuf
                 * @interface IInt64Value
                 * @property {number|Long|null} [value] Int64Value value
                 */
    
                /**
                 * Constructs a new Int64Value.
                 * @memberof google.protobuf
                 * @classdesc Represents an Int64Value.
                 * @implements IInt64Value
                 * @constructor
                 * @param {google.protobuf.IInt64Value=} [properties] Properties to set
                 */
                function Int64Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Int64Value value.
                 * @member {number|Long} value
                 * @memberof google.protobuf.Int64Value
                 * @instance
                 */
                Int64Value.prototype.value = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Creates a new Int64Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value=} [properties] Properties to set
                 * @returns {google.protobuf.Int64Value} Int64Value instance
                 */
                Int64Value.create = function create(properties) {
                    return new Int64Value(properties);
                };
    
                /**
                 * Encodes the specified Int64Value message. Does not implicitly {@link google.protobuf.Int64Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value} message Int64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int64Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Int64Value message, length delimited. Does not implicitly {@link google.protobuf.Int64Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value} message Int64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int64Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Int64Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Int64Value} Int64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int64Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Int64Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.int64();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Int64Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Int64Value} Int64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int64Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Int64Value message.
                 * @function verify
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Int64Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value) && !(message.value && $util.isInteger(message.value.low) && $util.isInteger(message.value.high)))
                            return "value: integer|Long expected";
                    return null;
                };
    
                /**
                 * Creates an Int64Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Int64Value} Int64Value
                 */
                Int64Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Int64Value)
                        return object;
                    var message = new $root.google.protobuf.Int64Value();
                    if (object.value != null)
                        if ($util.Long)
                            (message.value = $util.Long.fromValue(object.value)).unsigned = false;
                        else if (typeof object.value === "string")
                            message.value = parseInt(object.value, 10);
                        else if (typeof object.value === "number")
                            message.value = object.value;
                        else if (typeof object.value === "object")
                            message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber();
                    return message;
                };
    
                /**
                 * Creates a plain object from an Int64Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.Int64Value} message Int64Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Int64Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.value = options.longs === String ? "0" : 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value === "number")
                            object.value = options.longs === String ? String(message.value) : message.value;
                        else
                            object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber() : message.value;
                    return object;
                };
    
                /**
                 * Converts this Int64Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Int64Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Int64Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Int64Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Int64Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Int64Value";
                };
    
                return Int64Value;
            })();
    
            protobuf.UInt64Value = (function() {
    
                /**
                 * Properties of a UInt64Value.
                 * @memberof google.protobuf
                 * @interface IUInt64Value
                 * @property {number|Long|null} [value] UInt64Value value
                 */
    
                /**
                 * Constructs a new UInt64Value.
                 * @memberof google.protobuf
                 * @classdesc Represents a UInt64Value.
                 * @implements IUInt64Value
                 * @constructor
                 * @param {google.protobuf.IUInt64Value=} [properties] Properties to set
                 */
                function UInt64Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UInt64Value value.
                 * @member {number|Long} value
                 * @memberof google.protobuf.UInt64Value
                 * @instance
                 */
                UInt64Value.prototype.value = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * Creates a new UInt64Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value=} [properties] Properties to set
                 * @returns {google.protobuf.UInt64Value} UInt64Value instance
                 */
                UInt64Value.create = function create(properties) {
                    return new UInt64Value(properties);
                };
    
                /**
                 * Encodes the specified UInt64Value message. Does not implicitly {@link google.protobuf.UInt64Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value} message UInt64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt64Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified UInt64Value message, length delimited. Does not implicitly {@link google.protobuf.UInt64Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value} message UInt64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt64Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a UInt64Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt64Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UInt64Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.uint64();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a UInt64Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt64Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a UInt64Value message.
                 * @function verify
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UInt64Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value) && !(message.value && $util.isInteger(message.value.low) && $util.isInteger(message.value.high)))
                            return "value: integer|Long expected";
                    return null;
                };
    
                /**
                 * Creates a UInt64Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 */
                UInt64Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UInt64Value)
                        return object;
                    var message = new $root.google.protobuf.UInt64Value();
                    if (object.value != null)
                        if ($util.Long)
                            (message.value = $util.Long.fromValue(object.value)).unsigned = true;
                        else if (typeof object.value === "string")
                            message.value = parseInt(object.value, 10);
                        else if (typeof object.value === "number")
                            message.value = object.value;
                        else if (typeof object.value === "object")
                            message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber(true);
                    return message;
                };
    
                /**
                 * Creates a plain object from a UInt64Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.UInt64Value} message UInt64Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UInt64Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.value = options.longs === String ? "0" : 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value === "number")
                            object.value = options.longs === String ? String(message.value) : message.value;
                        else
                            object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber(true) : message.value;
                    return object;
                };
    
                /**
                 * Converts this UInt64Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UInt64Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UInt64Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UInt64Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UInt64Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UInt64Value";
                };
    
                return UInt64Value;
            })();
    
            protobuf.Int32Value = (function() {
    
                /**
                 * Properties of an Int32Value.
                 * @memberof google.protobuf
                 * @interface IInt32Value
                 * @property {number|null} [value] Int32Value value
                 */
    
                /**
                 * Constructs a new Int32Value.
                 * @memberof google.protobuf
                 * @classdesc Represents an Int32Value.
                 * @implements IInt32Value
                 * @constructor
                 * @param {google.protobuf.IInt32Value=} [properties] Properties to set
                 */
                function Int32Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Int32Value value.
                 * @member {number} value
                 * @memberof google.protobuf.Int32Value
                 * @instance
                 */
                Int32Value.prototype.value = 0;
    
                /**
                 * Creates a new Int32Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value=} [properties] Properties to set
                 * @returns {google.protobuf.Int32Value} Int32Value instance
                 */
                Int32Value.create = function create(properties) {
                    return new Int32Value(properties);
                };
    
                /**
                 * Encodes the specified Int32Value message. Does not implicitly {@link google.protobuf.Int32Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value} message Int32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int32Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Int32Value message, length delimited. Does not implicitly {@link google.protobuf.Int32Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value} message Int32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int32Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Int32Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Int32Value} Int32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int32Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Int32Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Int32Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Int32Value} Int32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int32Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Int32Value message.
                 * @function verify
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Int32Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value))
                            return "value: integer expected";
                    return null;
                };
    
                /**
                 * Creates an Int32Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Int32Value} Int32Value
                 */
                Int32Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Int32Value)
                        return object;
                    var message = new $root.google.protobuf.Int32Value();
                    if (object.value != null)
                        message.value = object.value | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Int32Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.Int32Value} message Int32Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Int32Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this Int32Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Int32Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Int32Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Int32Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Int32Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Int32Value";
                };
    
                return Int32Value;
            })();
    
            protobuf.UInt32Value = (function() {
    
                /**
                 * Properties of a UInt32Value.
                 * @memberof google.protobuf
                 * @interface IUInt32Value
                 * @property {number|null} [value] UInt32Value value
                 */
    
                /**
                 * Constructs a new UInt32Value.
                 * @memberof google.protobuf
                 * @classdesc Represents a UInt32Value.
                 * @implements IUInt32Value
                 * @constructor
                 * @param {google.protobuf.IUInt32Value=} [properties] Properties to set
                 */
                function UInt32Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UInt32Value value.
                 * @member {number} value
                 * @memberof google.protobuf.UInt32Value
                 * @instance
                 */
                UInt32Value.prototype.value = 0;
    
                /**
                 * Creates a new UInt32Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value=} [properties] Properties to set
                 * @returns {google.protobuf.UInt32Value} UInt32Value instance
                 */
                UInt32Value.create = function create(properties) {
                    return new UInt32Value(properties);
                };
    
                /**
                 * Encodes the specified UInt32Value message. Does not implicitly {@link google.protobuf.UInt32Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value} message UInt32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt32Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified UInt32Value message, length delimited. Does not implicitly {@link google.protobuf.UInt32Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value} message UInt32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt32Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a UInt32Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt32Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UInt32Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.uint32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a UInt32Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt32Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a UInt32Value message.
                 * @function verify
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UInt32Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value))
                            return "value: integer expected";
                    return null;
                };
    
                /**
                 * Creates a UInt32Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 */
                UInt32Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UInt32Value)
                        return object;
                    var message = new $root.google.protobuf.UInt32Value();
                    if (object.value != null)
                        message.value = object.value >>> 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a UInt32Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.UInt32Value} message UInt32Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UInt32Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this UInt32Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UInt32Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UInt32Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UInt32Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UInt32Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UInt32Value";
                };
    
                return UInt32Value;
            })();
    
            protobuf.BoolValue = (function() {
    
                /**
                 * Properties of a BoolValue.
                 * @memberof google.protobuf
                 * @interface IBoolValue
                 * @property {boolean|null} [value] BoolValue value
                 */
    
                /**
                 * Constructs a new BoolValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a BoolValue.
                 * @implements IBoolValue
                 * @constructor
                 * @param {google.protobuf.IBoolValue=} [properties] Properties to set
                 */
                function BoolValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * BoolValue value.
                 * @member {boolean} value
                 * @memberof google.protobuf.BoolValue
                 * @instance
                 */
                BoolValue.prototype.value = false;
    
                /**
                 * Creates a new BoolValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue=} [properties] Properties to set
                 * @returns {google.protobuf.BoolValue} BoolValue instance
                 */
                BoolValue.create = function create(properties) {
                    return new BoolValue(properties);
                };
    
                /**
                 * Encodes the specified BoolValue message. Does not implicitly {@link google.protobuf.BoolValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue} message BoolValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BoolValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified BoolValue message, length delimited. Does not implicitly {@link google.protobuf.BoolValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue} message BoolValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BoolValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a BoolValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.BoolValue} BoolValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BoolValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.BoolValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a BoolValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.BoolValue} BoolValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BoolValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a BoolValue message.
                 * @function verify
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                BoolValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "boolean")
                            return "value: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a BoolValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.BoolValue} BoolValue
                 */
                BoolValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.BoolValue)
                        return object;
                    var message = new $root.google.protobuf.BoolValue();
                    if (object.value != null)
                        message.value = Boolean(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a BoolValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.BoolValue} message BoolValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                BoolValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = false;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this BoolValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.BoolValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                BoolValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for BoolValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                BoolValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.BoolValue";
                };
    
                return BoolValue;
            })();
    
            protobuf.StringValue = (function() {
    
                /**
                 * Properties of a StringValue.
                 * @memberof google.protobuf
                 * @interface IStringValue
                 * @property {string|null} [value] StringValue value
                 */
    
                /**
                 * Constructs a new StringValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a StringValue.
                 * @implements IStringValue
                 * @constructor
                 * @param {google.protobuf.IStringValue=} [properties] Properties to set
                 */
                function StringValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * StringValue value.
                 * @member {string} value
                 * @memberof google.protobuf.StringValue
                 * @instance
                 */
                StringValue.prototype.value = "";
    
                /**
                 * Creates a new StringValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue=} [properties] Properties to set
                 * @returns {google.protobuf.StringValue} StringValue instance
                 */
                StringValue.create = function create(properties) {
                    return new StringValue(properties);
                };
    
                /**
                 * Encodes the specified StringValue message. Does not implicitly {@link google.protobuf.StringValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue} message StringValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                StringValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified StringValue message, length delimited. Does not implicitly {@link google.protobuf.StringValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue} message StringValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                StringValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a StringValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.StringValue} StringValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                StringValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.StringValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a StringValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.StringValue} StringValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                StringValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a StringValue message.
                 * @function verify
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                StringValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isString(message.value))
                            return "value: string expected";
                    return null;
                };
    
                /**
                 * Creates a StringValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.StringValue} StringValue
                 */
                StringValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.StringValue)
                        return object;
                    var message = new $root.google.protobuf.StringValue();
                    if (object.value != null)
                        message.value = String(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a StringValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.StringValue} message StringValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                StringValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = "";
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this StringValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.StringValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                StringValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for StringValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                StringValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.StringValue";
                };
    
                return StringValue;
            })();
    
            protobuf.BytesValue = (function() {
    
                /**
                 * Properties of a BytesValue.
                 * @memberof google.protobuf
                 * @interface IBytesValue
                 * @property {Uint8Array|null} [value] BytesValue value
                 */
    
                /**
                 * Constructs a new BytesValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a BytesValue.
                 * @implements IBytesValue
                 * @constructor
                 * @param {google.protobuf.IBytesValue=} [properties] Properties to set
                 */
                function BytesValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * BytesValue value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.BytesValue
                 * @instance
                 */
                BytesValue.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new BytesValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue=} [properties] Properties to set
                 * @returns {google.protobuf.BytesValue} BytesValue instance
                 */
                BytesValue.create = function create(properties) {
                    return new BytesValue(properties);
                };
    
                /**
                 * Encodes the specified BytesValue message. Does not implicitly {@link google.protobuf.BytesValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue} message BytesValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BytesValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified BytesValue message, length delimited. Does not implicitly {@link google.protobuf.BytesValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue} message BytesValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BytesValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a BytesValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.BytesValue} BytesValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BytesValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.BytesValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.bytes();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a BytesValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.BytesValue} BytesValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BytesValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a BytesValue message.
                 * @function verify
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                BytesValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates a BytesValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.BytesValue} BytesValue
                 */
                BytesValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.BytesValue)
                        return object;
                    var message = new $root.google.protobuf.BytesValue();
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length >= 0)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from a BytesValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.BytesValue} message BytesValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                BytesValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this BytesValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.BytesValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                BytesValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for BytesValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                BytesValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.BytesValue";
                };
    
                return BytesValue;
            })();
    
            protobuf.Any = (function() {
    
                /**
                 * Properties of an Any.
                 * @memberof google.protobuf
                 * @interface IAny
                 * @property {string|null} [type_url] Any type_url
                 * @property {Uint8Array|null} [value] Any value
                 */
    
                /**
                 * Constructs a new Any.
                 * @memberof google.protobuf
                 * @classdesc Represents an Any.
                 * @implements IAny
                 * @constructor
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 */
                function Any(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Any type_url.
                 * @member {string} type_url
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.type_url = "";
    
                /**
                 * Any value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new Any instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 * @returns {google.protobuf.Any} Any instance
                 */
                Any.create = function create(properties) {
                    return new Any(properties);
                };
    
                /**
                 * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type_url != null && Object.hasOwnProperty.call(message, "type_url"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type_url);
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Any();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type_url = reader.string();
                                break;
                            }
                        case 2: {
                                message.value = reader.bytes();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Any message.
                 * @function verify
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Any.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        if (!$util.isString(message.type_url))
                            return "type_url: string expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates an Any message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Any} Any
                 */
                Any.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Any)
                        return object;
                    var message = new $root.google.protobuf.Any();
                    if (object.type_url != null)
                        message.type_url = String(object.type_url);
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length >= 0)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Any message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.Any} message Any
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Any.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type_url = "";
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    }
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        object.type_url = message.type_url;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this Any to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Any
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Any.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Any
                 * @function getTypeUrl
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Any.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Any";
                };
    
                return Any;
            })();
    
            return protobuf;
        })();
    
        google.rpc = (function() {
    
            /**
             * Namespace rpc.
             * @memberof google
             * @namespace
             */
            var rpc = {};
    
            /**
             * Code enum.
             * @name google.rpc.Code
             * @enum {number}
             * @property {number} OK=0 OK value
             * @property {number} CANCELLED=1 CANCELLED value
             * @property {number} UNKNOWN=2 UNKNOWN value
             * @property {number} INVALID_ARGUMENT=3 INVALID_ARGUMENT value
             * @property {number} DEADLINE_EXCEEDED=4 DEADLINE_EXCEEDED value
             * @property {number} NOT_FOUND=5 NOT_FOUND value
             * @property {number} ALREADY_EXISTS=6 ALREADY_EXISTS value
             * @property {number} PERMISSION_DENIED=7 PERMISSION_DENIED value
             * @property {number} UNAUTHENTICATED=16 UNAUTHENTICATED value
             * @property {number} RESOURCE_EXHAUSTED=8 RESOURCE_EXHAUSTED value
             * @property {number} FAILED_PRECONDITION=9 FAILED_PRECONDITION value
             * @property {number} ABORTED=10 ABORTED value
             * @property {number} OUT_OF_RANGE=11 OUT_OF_RANGE value
             * @property {number} UNIMPLEMENTED=12 UNIMPLEMENTED value
             * @property {number} INTERNAL=13 INTERNAL value
             * @property {number} UNAVAILABLE=14 UNAVAILABLE value
             * @property {number} DATA_LOSS=15 DATA_LOSS value
             */
            rpc.Code = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "OK"] = 0;
                values[valuesById[1] = "CANCELLED"] = 1;
                values[valuesById[2] = "UNKNOWN"] = 2;
                values[valuesById[3] = "INVALID_ARGUMENT"] = 3;
                values[valuesById[4] = "DEADLINE_EXCEEDED"] = 4;
                values[valuesById[5] = "NOT_FOUND"] = 5;
                values[valuesById[6] = "ALREADY_EXISTS"] = 6;
                values[valuesById[7] = "PERMISSION_DENIED"] = 7;
                values[valuesById[16] = "UNAUTHENTICATED"] = 16;
                values[valuesById[8] = "RESOURCE_EXHAUSTED"] = 8;
                values[valuesById[9] = "FAILED_PRECONDITION"] = 9;
                values[valuesById[10] = "ABORTED"] = 10;
                values[valuesById[11] = "OUT_OF_RANGE"] = 11;
                values[valuesById[12] = "UNIMPLEMENTED"] = 12;
                values[valuesById[13] = "INTERNAL"] = 13;
                values[valuesById[14] = "UNAVAILABLE"] = 14;
                values[valuesById[15] = "DATA_LOSS"] = 15;
                return values;
            })();
    
            rpc.Status = (function() {
    
                /**
                 * Properties of a Status.
                 * @memberof google.rpc
                 * @interface IStatus
                 * @property {number|null} [code] Status code
                 * @property {string|null} [message] Status message
                 * @property {Array.<google.protobuf.IAny>|null} [details] Status details
                 */
    
                /**
                 * Constructs a new Status.
                 * @memberof google.rpc
                 * @classdesc Represents a Status.
                 * @implements IStatus
                 * @constructor
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 */
                function Status(properties) {
                    this.details = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Status code.
                 * @member {number} code
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.code = 0;
    
                /**
                 * Status message.
                 * @member {string} message
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.message = "";
    
                /**
                 * Status details.
                 * @member {Array.<google.protobuf.IAny>} details
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.details = $util.emptyArray;
    
                /**
                 * Creates a new Status instance using the specified properties.
                 * @function create
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 * @returns {google.rpc.Status} Status instance
                 */
                Status.create = function create(properties) {
                    return new Status(properties);
                };
    
                /**
                 * Encodes the specified Status message. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                    if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
                    if (message.details != null && message.details.length)
                        for (var i = 0; i < message.details.length; ++i)
                            $root.google.protobuf.Any.encode(message.details[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Status message, length delimited. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.rpc.Status();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.code = reader.int32();
                                break;
                            }
                        case 2: {
                                message.message = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.details && message.details.length))
                                    message.details = [];
                                message.details.push($root.google.protobuf.Any.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Status message.
                 * @function verify
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Status.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.code != null && message.hasOwnProperty("code"))
                        if (!$util.isInteger(message.code))
                            return "code: integer expected";
                    if (message.message != null && message.hasOwnProperty("message"))
                        if (!$util.isString(message.message))
                            return "message: string expected";
                    if (message.details != null && message.hasOwnProperty("details")) {
                        if (!Array.isArray(message.details))
                            return "details: array expected";
                        for (var i = 0; i < message.details.length; ++i) {
                            var error = $root.google.protobuf.Any.verify(message.details[i]);
                            if (error)
                                return "details." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Status message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.rpc.Status} Status
                 */
                Status.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.rpc.Status)
                        return object;
                    var message = new $root.google.rpc.Status();
                    if (object.code != null)
                        message.code = object.code | 0;
                    if (object.message != null)
                        message.message = String(object.message);
                    if (object.details) {
                        if (!Array.isArray(object.details))
                            throw TypeError(".google.rpc.Status.details: array expected");
                        message.details = [];
                        for (var i = 0; i < object.details.length; ++i) {
                            if (typeof object.details[i] !== "object")
                                throw TypeError(".google.rpc.Status.details: object expected");
                            message.details[i] = $root.google.protobuf.Any.fromObject(object.details[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Status message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.Status} message Status
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Status.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.details = [];
                    if (options.defaults) {
                        object.code = 0;
                        object.message = "";
                    }
                    if (message.code != null && message.hasOwnProperty("code"))
                        object.code = message.code;
                    if (message.message != null && message.hasOwnProperty("message"))
                        object.message = message.message;
                    if (message.details && message.details.length) {
                        object.details = [];
                        for (var j = 0; j < message.details.length; ++j)
                            object.details[j] = $root.google.protobuf.Any.toObject(message.details[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Status to JSON.
                 * @function toJSON
                 * @memberof google.rpc.Status
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Status.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Status
                 * @function getTypeUrl
                 * @memberof google.rpc.Status
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Status.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.rpc.Status";
                };
    
                return Status;
            })();
    
            return rpc;
        })();
    
        return google;
    })();

    return $root;
});
