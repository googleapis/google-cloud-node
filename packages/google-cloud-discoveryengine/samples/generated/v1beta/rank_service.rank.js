// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(rankingConfig, records) {
  // [START discoveryengine_v1beta_generated_RankService_Rank_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The resource name of the rank service config, such as
   *  `projects/{project_num}/locations/{location_id}/rankingConfigs/default_ranking_config`.
   */
  // const rankingConfig = 'abc123'
  /**
   *  The identifier of the model to use. It is one of:
   *  * `semantic-ranker-512@latest`: Semantic ranking model with maxiumn input
   *  token size 512.
   *  It is set to `semantic-ranker-512@latest` by default if unspecified.
   */
  // const model = 'abc123'
  /**
   *  The number of results to return. If this is unset or no bigger than zero,
   *  returns all results.
   */
  // const topN = 1234
  /**
   *  The query to use.
   */
  // const query = 'abc123'
  /**
   *  Required. A list of records to rank. At most 200 records to rank.
   */
  // const records = [1,2,3,4]
  /**
   *  If true, the response will contain only record ID and score. By default, it
   *  is false, the response will contain record details.
   */
  // const ignoreRecordDetailsInResponse = true

  // Imports the Discoveryengine library
  const {RankServiceClient} = require('@google-cloud/discoveryengine').v1beta;

  // Instantiates a client
  const discoveryengineClient = new RankServiceClient();

  async function callRank() {
    // Construct request
    const request = {
      rankingConfig,
      records,
    };

    // Run request
    const response = await discoveryengineClient.rank(request);
    console.log(response);
  }

  callRank();
  // [END discoveryengine_v1beta_generated_RankService_Rank_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
